<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1085_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_peer<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">CachePeer<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier><modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">head<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">token<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><name pos:line="4" pos:column="19">NULL<pos:position pos:line="4" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">CachePeer<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">p<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">CBDATA_INIT_TYPE_FREECB<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">CachePeer<pos:position pos:line="6" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="40">peerDestroy<pos:position pos:line="6" pos:column="51"/></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">p<pos:position pos:line="7" pos:column="6"/></name> <operator pos:line="7" pos:column="7">=<pos:position pos:line="7" pos:column="8"/></operator> <call><name pos:line="7" pos:column="9">cbdataAlloc<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">CachePeer<pos:position pos:line="7" pos:column="30"/></name></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">p<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">-&gt;<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="8">http_port<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">CACHE_HTTP_PORT<pos:position pos:line="8" pos:column="35"/></name></expr>;<pos:position pos:line="8" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">p<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">icp<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">.<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="12">port<pos:position pos:line="9" pos:column="16"/></name></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">CACHE_ICP_PORT<pos:position pos:line="9" pos:column="33"/></name></expr>;<pos:position pos:line="9" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">p<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">weight<pos:position pos:line="10" pos:column="14"/></name></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">1<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">p<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">basetime<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">p<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">stats<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">.<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">logged_state<pos:position pos:line="12" pos:column="26"/></name></name> <operator pos:line="12" pos:column="27">=<pos:position pos:line="12" pos:column="28"/></operator> <name pos:line="12" pos:column="29">PEER_ALIVE<pos:position pos:line="12" pos:column="39"/></name></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">token<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <call><name pos:line="14" pos:column="18">strtok<pos:position pos:line="14" pos:column="24"/></name><argument_list pos:line="14" pos:column="24">(<argument><expr><name pos:line="14" pos:column="25">NULL<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="31">w_space<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call><operator pos:line="14" pos:column="39">)<pos:position pos:line="14" pos:column="40"/></operator> <operator pos:line="14" pos:column="41">==<pos:position pos:line="14" pos:column="43"/></operator> <name pos:line="14" pos:column="44">NULL<pos:position pos:line="14" pos:column="48"/></name></expr>)<pos:position pos:line="14" pos:column="49"/></condition><then pos:line="14" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="9">self_destruct<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">()<pos:position pos:line="15" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="25"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">p<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">host<pos:position pos:line="17" pos:column="12"/></name></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <call><name pos:line="17" pos:column="15">xstrdup<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">token<pos:position pos:line="17" pos:column="28"/></name></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">p<pos:position pos:line="19" pos:column="6"/></name><operator pos:line="19" pos:column="6">-&gt;<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="8">name<pos:position pos:line="19" pos:column="12"/></name></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <call><name pos:line="19" pos:column="15">xstrdup<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">token<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">(<pos:position pos:line="21" pos:column="10"/></operator><name pos:line="21" pos:column="10">token<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">strtok<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">NULL<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="31">w_space<pos:position pos:line="21" pos:column="38"/></name></expr></argument>)<pos:position pos:line="21" pos:column="39"/></argument_list></call><operator pos:line="21" pos:column="39">)<pos:position pos:line="21" pos:column="40"/></operator> <operator pos:line="21" pos:column="41">==<pos:position pos:line="21" pos:column="43"/></operator> <name pos:line="21" pos:column="44">NULL<pos:position pos:line="21" pos:column="48"/></name></expr>)<pos:position pos:line="21" pos:column="49"/></condition><then pos:line="21" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="9">self_destruct<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">()<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="24" pos:column="5">p<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">-&gt;<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="8">type<pos:position pos:line="24" pos:column="12"/></name></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <call><name pos:line="24" pos:column="15">parseNeighborType<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">token<pos:position pos:line="24" pos:column="38"/></name></expr></argument>)<pos:position pos:line="24" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">p<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">type<pos:position pos:line="26" pos:column="16"/></name></name> <operator pos:line="26" pos:column="17">==<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">PEER_MULTICAST<pos:position pos:line="26" pos:column="34"/></name></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35"> <block pos:line="26" pos:column="36">{
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">p<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">options<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">.<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">no_digest<pos:position pos:line="27" pos:column="29"/></name></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <literal type="number" pos:line="27" pos:column="32">1<pos:position pos:line="27" pos:column="33"/></literal></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">p<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">options<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">.<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">no_netdb_exchange<pos:position pos:line="28" pos:column="37"/></name></name> <operator pos:line="28" pos:column="38">=<pos:position pos:line="28" pos:column="39"/></operator> <literal type="number" pos:line="28" pos:column="40">1<pos:position pos:line="28" pos:column="41"/></literal></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="31" pos:column="5">p<pos:position pos:line="31" pos:column="6"/></name><operator pos:line="31" pos:column="6">-&gt;<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="8">http_port<pos:position pos:line="31" pos:column="17"/></name></name> <operator pos:line="31" pos:column="18">=<pos:position pos:line="31" pos:column="19"/></operator> <call><name pos:line="31" pos:column="20">GetTcpService<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">()<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">!<pos:position pos:line="33" pos:column="10"/></operator><name><name pos:line="33" pos:column="10">p<pos:position pos:line="33" pos:column="11"/></name><operator pos:line="33" pos:column="11">-&gt;<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="13">http_port<pos:position pos:line="33" pos:column="22"/></name></name></expr>)<pos:position pos:line="33" pos:column="23"/></condition><then pos:line="33" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="9">self_destruct<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">()<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="36" pos:column="5">p<pos:position pos:line="36" pos:column="6"/></name><operator pos:line="36" pos:column="6">-&gt;<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="8">icp<pos:position pos:line="36" pos:column="11"/></name><operator pos:line="36" pos:column="11">.<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="12">port<pos:position pos:line="36" pos:column="16"/></name></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <call><name pos:line="36" pos:column="19">GetUdpService<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">()<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="37" pos:column="5">p<pos:position pos:line="37" pos:column="6"/></name><operator pos:line="37" pos:column="6">-&gt;<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="8">connection_auth<pos:position pos:line="37" pos:column="23"/></name></name> <operator pos:line="37" pos:column="24">=<pos:position pos:line="37" pos:column="25"/></operator> <literal type="number" pos:line="37" pos:column="26">2<pos:position pos:line="37" pos:column="27"/></literal></expr>;<pos:position pos:line="37" pos:column="28"/></expr_stmt>    <comment type="block" pos:line="37" pos:column="32">/* auto */</comment>

    <while pos:line="39" pos:column="5">while <condition pos:line="39" pos:column="11">(<expr><operator pos:line="39" pos:column="12">(<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">token<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <call><name pos:line="39" pos:column="21">strtok<pos:position pos:line="39" pos:column="27"/></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">NULL<pos:position pos:line="39" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="34">w_space<pos:position pos:line="39" pos:column="41"/></name></expr></argument>)<pos:position pos:line="39" pos:column="42"/></argument_list></call><operator pos:line="39" pos:column="42">)<pos:position pos:line="39" pos:column="43"/></operator></expr>)<pos:position pos:line="39" pos:column="44"/></condition> <block pos:line="39" pos:column="45">{
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><call><name pos:line="40" pos:column="14">strcasecmp<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">token<pos:position pos:line="40" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="32">"proxy-only"<pos:position pos:line="40" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="46"/></condition><then pos:line="40" pos:column="46"> <block pos:line="40" pos:column="47">{
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">p<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">-&gt;<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="16">options<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">.<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">proxy_only<pos:position pos:line="41" pos:column="34"/></name></name> <operator pos:line="41" pos:column="35">=<pos:position pos:line="41" pos:column="36"/></operator> <literal type="number" pos:line="41" pos:column="37">1<pos:position pos:line="41" pos:column="38"/></literal></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then> <elseif pos:line="42" pos:column="11">else <if pos:line="42" pos:column="16">if <condition pos:line="42" pos:column="19">(<expr><operator pos:line="42" pos:column="20">!<pos:position pos:line="42" pos:column="21"/></operator><call><name pos:line="42" pos:column="21">strcasecmp<pos:position pos:line="42" pos:column="31"/></name><argument_list pos:line="42" pos:column="31">(<argument><expr><name pos:line="42" pos:column="32">token<pos:position pos:line="42" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="39">"no-query"<pos:position pos:line="42" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="51"/></condition><then pos:line="42" pos:column="51"> <block pos:line="42" pos:column="52">{
            <expr_stmt><expr><name><name pos:line="43" pos:column="13">p<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">options<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">.<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="24">no_query<pos:position pos:line="43" pos:column="32"/></name></name> <operator pos:line="43" pos:column="33">=<pos:position pos:line="43" pos:column="34"/></operator> <literal type="number" pos:line="43" pos:column="35">1<pos:position pos:line="43" pos:column="36"/></literal></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if></elseif> <elseif pos:line="44" pos:column="11">else <if pos:line="44" pos:column="16">if <condition pos:line="44" pos:column="19">(<expr><operator pos:line="44" pos:column="20">!<pos:position pos:line="44" pos:column="21"/></operator><call><name pos:line="44" pos:column="21">strcasecmp<pos:position pos:line="44" pos:column="31"/></name><argument_list pos:line="44" pos:column="31">(<argument><expr><name pos:line="44" pos:column="32">token<pos:position pos:line="44" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="39">"background-ping"<pos:position pos:line="44" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="58"/></condition><then pos:line="44" pos:column="58"> <block pos:line="44" pos:column="59">{
            <expr_stmt><expr><name><name pos:line="45" pos:column="13">p<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">-&gt;<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="16">options<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">background_ping<pos:position pos:line="45" pos:column="39"/></name></name> <operator pos:line="45" pos:column="40">=<pos:position pos:line="45" pos:column="41"/></operator> <literal type="number" pos:line="45" pos:column="42">1<pos:position pos:line="45" pos:column="43"/></literal></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then></if></elseif> <elseif pos:line="46" pos:column="11">else <if pos:line="46" pos:column="16">if <condition pos:line="46" pos:column="19">(<expr><operator pos:line="46" pos:column="20">!<pos:position pos:line="46" pos:column="21"/></operator><call><name pos:line="46" pos:column="21">strcasecmp<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">(<argument><expr><name pos:line="46" pos:column="32">token<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="39">"no-digest"<pos:position pos:line="46" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="52"/></condition><then pos:line="46" pos:column="52"> <block pos:line="46" pos:column="53">{
            <expr_stmt><expr><name><name pos:line="47" pos:column="13">p<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">options<pos:position pos:line="47" pos:column="23"/></name><operator pos:line="47" pos:column="23">.<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">no_digest<pos:position pos:line="47" pos:column="33"/></name></name> <operator pos:line="47" pos:column="34">=<pos:position pos:line="47" pos:column="35"/></operator> <literal type="number" pos:line="47" pos:column="36">1<pos:position pos:line="47" pos:column="37"/></literal></expr>;<pos:position pos:line="47" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if></elseif> <elseif pos:line="48" pos:column="11">else <if pos:line="48" pos:column="16">if <condition pos:line="48" pos:column="19">(<expr><operator pos:line="48" pos:column="20">!<pos:position pos:line="48" pos:column="21"/></operator><call><name pos:line="48" pos:column="21">strcasecmp<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><name pos:line="48" pos:column="32">token<pos:position pos:line="48" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="39">"no-tproxy"<pos:position pos:line="48" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="52"/></condition><then pos:line="48" pos:column="52"> <block pos:line="48" pos:column="53">{
            <expr_stmt><expr><name><name pos:line="49" pos:column="13">p<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">-&gt;<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="16">options<pos:position pos:line="49" pos:column="23"/></name><operator pos:line="49" pos:column="23">.<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="24">no_tproxy<pos:position pos:line="49" pos:column="33"/></name></name> <operator pos:line="49" pos:column="34">=<pos:position pos:line="49" pos:column="35"/></operator> <literal type="number" pos:line="49" pos:column="36">1<pos:position pos:line="49" pos:column="37"/></literal></expr>;<pos:position pos:line="49" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if></elseif> <elseif pos:line="50" pos:column="11">else <if pos:line="50" pos:column="16">if <condition pos:line="50" pos:column="19">(<expr><operator pos:line="50" pos:column="20">!<pos:position pos:line="50" pos:column="21"/></operator><call><name pos:line="50" pos:column="21">strcasecmp<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">token<pos:position pos:line="50" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="39">"multicast-responder"<pos:position pos:line="50" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="62"/></condition><then pos:line="50" pos:column="62"> <block pos:line="50" pos:column="63">{
            <expr_stmt><expr><name><name pos:line="51" pos:column="13">p<pos:position pos:line="51" pos:column="14"/></name><operator pos:line="51" pos:column="14">-&gt;<pos:position pos:line="51" pos:column="19"/></operator><name pos:line="51" pos:column="16">options<pos:position pos:line="51" pos:column="23"/></name><operator pos:line="51" pos:column="23">.<pos:position pos:line="51" pos:column="24"/></operator><name pos:line="51" pos:column="24">mcast_responder<pos:position pos:line="51" pos:column="39"/></name></name> <operator pos:line="51" pos:column="40">=<pos:position pos:line="51" pos:column="41"/></operator> <literal type="number" pos:line="51" pos:column="42">1<pos:position pos:line="51" pos:column="43"/></literal></expr>;<pos:position pos:line="51" pos:column="44"/></expr_stmt>
<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><name pos:line="52" pos:column="5">PEER_MULTICAST_SIBLINGS<pos:position pos:line="52" pos:column="28"/></name></expr></cpp:if>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if></elseif> <elseif pos:line="53" pos:column="11">else <if pos:line="53" pos:column="16">if <condition pos:line="53" pos:column="19">(<expr><operator pos:line="53" pos:column="20">!<pos:position pos:line="53" pos:column="21"/></operator><call><name pos:line="53" pos:column="21">strcasecmp<pos:position pos:line="53" pos:column="31"/></name><argument_list pos:line="53" pos:column="31">(<argument><expr><name pos:line="53" pos:column="32">token<pos:position pos:line="53" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="39">"multicast-siblings"<pos:position pos:line="53" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="61"/></condition><then pos:line="53" pos:column="61"> <block pos:line="53" pos:column="62">{
            <expr_stmt><expr><name><name pos:line="54" pos:column="13">p<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">-&gt;<pos:position pos:line="54" pos:column="19"/></operator><name pos:line="54" pos:column="16">options<pos:position pos:line="54" pos:column="23"/></name><operator pos:line="54" pos:column="23">.<pos:position pos:line="54" pos:column="24"/></operator><name pos:line="54" pos:column="24">mcast_siblings<pos:position pos:line="54" pos:column="38"/></name></name> <operator pos:line="54" pos:column="39">=<pos:position pos:line="54" pos:column="40"/></operator> <literal type="number" pos:line="54" pos:column="41">1<pos:position pos:line="54" pos:column="42"/></literal></expr>;<pos:position pos:line="54" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="55" pos:column="1">#<cpp:directive pos:line="55" pos:column="2">endif<pos:position pos:line="55" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if></elseif> <elseif pos:line="56" pos:column="11">else <if pos:line="56" pos:column="16">if <condition pos:line="56" pos:column="19">(<expr><operator pos:line="56" pos:column="20">!<pos:position pos:line="56" pos:column="21"/></operator><call><name pos:line="56" pos:column="21">strncasecmp<pos:position pos:line="56" pos:column="32"/></name><argument_list pos:line="56" pos:column="32">(<argument><expr><name pos:line="56" pos:column="33">token<pos:position pos:line="56" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="40">"weight="<pos:position pos:line="56" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="51">7<pos:position pos:line="56" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="56" pos:column="54"/></condition><then pos:line="56" pos:column="54"> <block pos:line="56" pos:column="55">{
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">p<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">-&gt;<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="16">weight<pos:position pos:line="57" pos:column="22"/></name></name> <operator pos:line="57" pos:column="23">=<pos:position pos:line="57" pos:column="24"/></operator> <call><name pos:line="57" pos:column="25">xatoi<pos:position pos:line="57" pos:column="30"/></name><argument_list pos:line="57" pos:column="30">(<argument><expr><name pos:line="57" pos:column="31">token<pos:position pos:line="57" pos:column="36"/></name> <operator pos:line="57" pos:column="37">+<pos:position pos:line="57" pos:column="38"/></operator> <literal type="number" pos:line="57" pos:column="39">7<pos:position pos:line="57" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if></elseif> <elseif pos:line="58" pos:column="11">else <if pos:line="58" pos:column="16">if <condition pos:line="58" pos:column="19">(<expr><operator pos:line="58" pos:column="20">!<pos:position pos:line="58" pos:column="21"/></operator><call><name pos:line="58" pos:column="21">strncasecmp<pos:position pos:line="58" pos:column="32"/></name><argument_list pos:line="58" pos:column="32">(<argument><expr><name pos:line="58" pos:column="33">token<pos:position pos:line="58" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="40">"basetime="<pos:position pos:line="58" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="53">9<pos:position pos:line="58" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="58" pos:column="56"/></condition><then pos:line="58" pos:column="56"> <block pos:line="58" pos:column="57">{
            <expr_stmt><expr><name><name pos:line="59" pos:column="13">p<pos:position pos:line="59" pos:column="14"/></name><operator pos:line="59" pos:column="14">-&gt;<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="16">basetime<pos:position pos:line="59" pos:column="24"/></name></name> <operator pos:line="59" pos:column="25">=<pos:position pos:line="59" pos:column="26"/></operator> <call><name pos:line="59" pos:column="27">xatoi<pos:position pos:line="59" pos:column="32"/></name><argument_list pos:line="59" pos:column="32">(<argument><expr><name pos:line="59" pos:column="33">token<pos:position pos:line="59" pos:column="38"/></name> <operator pos:line="59" pos:column="39">+<pos:position pos:line="59" pos:column="40"/></operator> <literal type="number" pos:line="59" pos:column="41">9<pos:position pos:line="59" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if></elseif> <elseif pos:line="60" pos:column="11">else <if pos:line="60" pos:column="16">if <condition pos:line="60" pos:column="19">(<expr><operator pos:line="60" pos:column="20">!<pos:position pos:line="60" pos:column="21"/></operator><call><name pos:line="60" pos:column="21">strcasecmp<pos:position pos:line="60" pos:column="31"/></name><argument_list pos:line="60" pos:column="31">(<argument><expr><name pos:line="60" pos:column="32">token<pos:position pos:line="60" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="39">"closest-only"<pos:position pos:line="60" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="60" pos:column="55"/></condition><then pos:line="60" pos:column="55"> <block pos:line="60" pos:column="56">{
            <expr_stmt><expr><name><name pos:line="61" pos:column="13">p<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">-&gt;<pos:position pos:line="61" pos:column="19"/></operator><name pos:line="61" pos:column="16">options<pos:position pos:line="61" pos:column="23"/></name><operator pos:line="61" pos:column="23">.<pos:position pos:line="61" pos:column="24"/></operator><name pos:line="61" pos:column="24">closest_only<pos:position pos:line="61" pos:column="36"/></name></name> <operator pos:line="61" pos:column="37">=<pos:position pos:line="61" pos:column="38"/></operator> <literal type="number" pos:line="61" pos:column="39">1<pos:position pos:line="61" pos:column="40"/></literal></expr>;<pos:position pos:line="61" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if></elseif> <elseif pos:line="62" pos:column="11">else <if pos:line="62" pos:column="16">if <condition pos:line="62" pos:column="19">(<expr><operator pos:line="62" pos:column="20">!<pos:position pos:line="62" pos:column="21"/></operator><call><name pos:line="62" pos:column="21">strncasecmp<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><name pos:line="62" pos:column="33">token<pos:position pos:line="62" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="40">"ttl="<pos:position pos:line="62" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="48">4<pos:position pos:line="62" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="51"/></condition><then pos:line="62" pos:column="51"> <block pos:line="62" pos:column="52">{
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">p<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">mcast<pos:position pos:line="63" pos:column="21"/></name><operator pos:line="63" pos:column="21">.<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="22">ttl<pos:position pos:line="63" pos:column="25"/></name></name> <operator pos:line="63" pos:column="26">=<pos:position pos:line="63" pos:column="27"/></operator> <call><name pos:line="63" pos:column="28">xatoi<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">(<argument><expr><name pos:line="63" pos:column="34">token<pos:position pos:line="63" pos:column="39"/></name> <operator pos:line="63" pos:column="40">+<pos:position pos:line="63" pos:column="41"/></operator> <literal type="number" pos:line="63" pos:column="42">4<pos:position pos:line="63" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="45"/></expr_stmt>

            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><name><name pos:line="65" pos:column="17">p<pos:position pos:line="65" pos:column="18"/></name><operator pos:line="65" pos:column="18">-&gt;<pos:position pos:line="65" pos:column="23"/></operator><name pos:line="65" pos:column="20">mcast<pos:position pos:line="65" pos:column="25"/></name><operator pos:line="65" pos:column="25">.<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="26">ttl<pos:position pos:line="65" pos:column="29"/></name></name> <operator pos:line="65" pos:column="30">&lt;<pos:position pos:line="65" pos:column="34"/></operator> <literal type="number" pos:line="65" pos:column="32">0<pos:position pos:line="65" pos:column="33"/></literal></expr>)<pos:position pos:line="65" pos:column="34"/></condition><then pos:line="65" pos:column="34">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="66" pos:column="17">p<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">-&gt;<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="20">mcast<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">.<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="26">ttl<pos:position pos:line="66" pos:column="29"/></name></name> <operator pos:line="66" pos:column="30">=<pos:position pos:line="66" pos:column="31"/></operator> <literal type="number" pos:line="66" pos:column="32">0<pos:position pos:line="66" pos:column="33"/></literal></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt></block></then></if>

            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><name><name pos:line="68" pos:column="17">p<pos:position pos:line="68" pos:column="18"/></name><operator pos:line="68" pos:column="18">-&gt;<pos:position pos:line="68" pos:column="23"/></operator><name pos:line="68" pos:column="20">mcast<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">.<pos:position pos:line="68" pos:column="26"/></operator><name pos:line="68" pos:column="26">ttl<pos:position pos:line="68" pos:column="29"/></name></name> <operator pos:line="68" pos:column="30">&gt;<pos:position pos:line="68" pos:column="34"/></operator> <literal type="number" pos:line="68" pos:column="32">128<pos:position pos:line="68" pos:column="35"/></literal></expr>)<pos:position pos:line="68" pos:column="36"/></condition><then pos:line="68" pos:column="36">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="17">p<pos:position pos:line="69" pos:column="18"/></name><operator pos:line="69" pos:column="18">-&gt;<pos:position pos:line="69" pos:column="23"/></operator><name pos:line="69" pos:column="20">mcast<pos:position pos:line="69" pos:column="25"/></name><operator pos:line="69" pos:column="25">.<pos:position pos:line="69" pos:column="26"/></operator><name pos:line="69" pos:column="26">ttl<pos:position pos:line="69" pos:column="29"/></name></name> <operator pos:line="69" pos:column="30">=<pos:position pos:line="69" pos:column="31"/></operator> <literal type="number" pos:line="69" pos:column="32">128<pos:position pos:line="69" pos:column="35"/></literal></expr>;<pos:position pos:line="69" pos:column="36"/></expr_stmt></block></then></if>
        }<pos:position pos:line="70" pos:column="10"/></block></then></if></elseif> <elseif pos:line="70" pos:column="11">else <if pos:line="70" pos:column="16">if <condition pos:line="70" pos:column="19">(<expr><operator pos:line="70" pos:column="20">!<pos:position pos:line="70" pos:column="21"/></operator><call><name pos:line="70" pos:column="21">strcasecmp<pos:position pos:line="70" pos:column="31"/></name><argument_list pos:line="70" pos:column="31">(<argument><expr><name pos:line="70" pos:column="32">token<pos:position pos:line="70" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="39">"default"<pos:position pos:line="70" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="70" pos:column="50"/></condition><then pos:line="70" pos:column="50"> <block pos:line="70" pos:column="51">{
            <expr_stmt><expr><name><name pos:line="71" pos:column="13">p<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">-&gt;<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="16">options<pos:position pos:line="71" pos:column="23"/></name><operator pos:line="71" pos:column="23">.<pos:position pos:line="71" pos:column="24"/></operator><name pos:line="71" pos:column="24">default_parent<pos:position pos:line="71" pos:column="38"/></name></name> <operator pos:line="71" pos:column="39">=<pos:position pos:line="71" pos:column="40"/></operator> <literal type="number" pos:line="71" pos:column="41">1<pos:position pos:line="71" pos:column="42"/></literal></expr>;<pos:position pos:line="71" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if></elseif> <elseif pos:line="72" pos:column="11">else <if pos:line="72" pos:column="16">if <condition pos:line="72" pos:column="19">(<expr><operator pos:line="72" pos:column="20">!<pos:position pos:line="72" pos:column="21"/></operator><call><name pos:line="72" pos:column="21">strcasecmp<pos:position pos:line="72" pos:column="31"/></name><argument_list pos:line="72" pos:column="31">(<argument><expr><name pos:line="72" pos:column="32">token<pos:position pos:line="72" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="72" pos:column="39">"round-robin"<pos:position pos:line="72" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="54"/></condition><then pos:line="72" pos:column="54"> <block pos:line="72" pos:column="55">{
            <expr_stmt><expr><name><name pos:line="73" pos:column="13">p<pos:position pos:line="73" pos:column="14"/></name><operator pos:line="73" pos:column="14">-&gt;<pos:position pos:line="73" pos:column="19"/></operator><name pos:line="73" pos:column="16">options<pos:position pos:line="73" pos:column="23"/></name><operator pos:line="73" pos:column="23">.<pos:position pos:line="73" pos:column="24"/></operator><name pos:line="73" pos:column="24">roundrobin<pos:position pos:line="73" pos:column="34"/></name></name> <operator pos:line="73" pos:column="35">=<pos:position pos:line="73" pos:column="36"/></operator> <literal type="number" pos:line="73" pos:column="37">1<pos:position pos:line="73" pos:column="38"/></literal></expr>;<pos:position pos:line="73" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then></if></elseif> <elseif pos:line="74" pos:column="11">else <if pos:line="74" pos:column="16">if <condition pos:line="74" pos:column="19">(<expr><operator pos:line="74" pos:column="20">!<pos:position pos:line="74" pos:column="21"/></operator><call><name pos:line="74" pos:column="21">strcasecmp<pos:position pos:line="74" pos:column="31"/></name><argument_list pos:line="74" pos:column="31">(<argument><expr><name pos:line="74" pos:column="32">token<pos:position pos:line="74" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="39">"weighted-round-robin"<pos:position pos:line="74" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="74" pos:column="63"/></condition><then pos:line="74" pos:column="63"> <block pos:line="74" pos:column="64">{
            <expr_stmt><expr><name><name pos:line="75" pos:column="13">p<pos:position pos:line="75" pos:column="14"/></name><operator pos:line="75" pos:column="14">-&gt;<pos:position pos:line="75" pos:column="19"/></operator><name pos:line="75" pos:column="16">options<pos:position pos:line="75" pos:column="23"/></name><operator pos:line="75" pos:column="23">.<pos:position pos:line="75" pos:column="24"/></operator><name pos:line="75" pos:column="24">weighted_roundrobin<pos:position pos:line="75" pos:column="43"/></name></name> <operator pos:line="75" pos:column="44">=<pos:position pos:line="75" pos:column="45"/></operator> <literal type="number" pos:line="75" pos:column="46">1<pos:position pos:line="75" pos:column="47"/></literal></expr>;<pos:position pos:line="75" pos:column="48"/></expr_stmt>
<cpp:if pos:line="76" pos:column="1">#<cpp:directive pos:line="76" pos:column="2">if<pos:position pos:line="76" pos:column="4"/></cpp:directive> <expr><name pos:line="76" pos:column="5">USE_HTCP<pos:position pos:line="76" pos:column="13"/></name></expr></cpp:if>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if></elseif> <elseif pos:line="77" pos:column="11">else <if pos:line="77" pos:column="16">if <condition pos:line="77" pos:column="19">(<expr><operator pos:line="77" pos:column="20">!<pos:position pos:line="77" pos:column="21"/></operator><call><name pos:line="77" pos:column="21">strcasecmp<pos:position pos:line="77" pos:column="31"/></name><argument_list pos:line="77" pos:column="31">(<argument><expr><name pos:line="77" pos:column="32">token<pos:position pos:line="77" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="39">"htcp"<pos:position pos:line="77" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="77" pos:column="47"/></condition><then pos:line="77" pos:column="47"> <block pos:line="77" pos:column="48">{
            <expr_stmt><expr><name><name pos:line="78" pos:column="13">p<pos:position pos:line="78" pos:column="14"/></name><operator pos:line="78" pos:column="14">-&gt;<pos:position pos:line="78" pos:column="19"/></operator><name pos:line="78" pos:column="16">options<pos:position pos:line="78" pos:column="23"/></name><operator pos:line="78" pos:column="23">.<pos:position pos:line="78" pos:column="24"/></operator><name pos:line="78" pos:column="24">htcp<pos:position pos:line="78" pos:column="28"/></name></name> <operator pos:line="78" pos:column="29">=<pos:position pos:line="78" pos:column="30"/></operator> <literal type="number" pos:line="78" pos:column="31">1<pos:position pos:line="78" pos:column="32"/></literal></expr>;<pos:position pos:line="78" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="79" pos:column="10"/></block></then></if></elseif> <elseif pos:line="79" pos:column="11">else <if pos:line="79" pos:column="16">if <condition pos:line="79" pos:column="19">(<expr><operator pos:line="79" pos:column="20">!<pos:position pos:line="79" pos:column="21"/></operator><call><name pos:line="79" pos:column="21">strncasecmp<pos:position pos:line="79" pos:column="32"/></name><argument_list pos:line="79" pos:column="32">(<argument><expr><name pos:line="79" pos:column="33">token<pos:position pos:line="79" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="40">"htcp="<pos:position pos:line="79" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="49">5<pos:position pos:line="79" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="51"/></argument_list></call> <operator pos:line="79" pos:column="52">||<pos:position pos:line="79" pos:column="54"/></operator> <operator pos:line="79" pos:column="55">!<pos:position pos:line="79" pos:column="56"/></operator><call><name pos:line="79" pos:column="56">strncasecmp<pos:position pos:line="79" pos:column="67"/></name><argument_list pos:line="79" pos:column="67">(<argument><expr><name pos:line="79" pos:column="68">token<pos:position pos:line="79" pos:column="73"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="75">"htcp-"<pos:position pos:line="79" pos:column="82"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="84">5<pos:position pos:line="79" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="79" pos:column="87"/></condition><then pos:line="79" pos:column="87"> <block pos:line="79" pos:column="88">{
            <comment type="block" pos:line="80" pos:column="13">/* Note: The htcp- form is deprecated, replaced by htcp= */</comment>
            <expr_stmt><expr><name><name pos:line="81" pos:column="13">p<pos:position pos:line="81" pos:column="14"/></name><operator pos:line="81" pos:column="14">-&gt;<pos:position pos:line="81" pos:column="19"/></operator><name pos:line="81" pos:column="16">options<pos:position pos:line="81" pos:column="23"/></name><operator pos:line="81" pos:column="23">.<pos:position pos:line="81" pos:column="24"/></operator><name pos:line="81" pos:column="24">htcp<pos:position pos:line="81" pos:column="28"/></name></name> <operator pos:line="81" pos:column="29">=<pos:position pos:line="81" pos:column="30"/></operator> <literal type="number" pos:line="81" pos:column="31">1<pos:position pos:line="81" pos:column="32"/></literal></expr>;<pos:position pos:line="81" pos:column="33"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="82" pos:column="13">char<pos:position pos:line="82" pos:column="17"/></name> <modifier pos:line="82" pos:column="18">*<pos:position pos:line="82" pos:column="19"/></modifier></type><name pos:line="82" pos:column="19">tmp<pos:position pos:line="82" pos:column="22"/></name> <init pos:line="82" pos:column="23">= <expr><call><name pos:line="82" pos:column="25">xstrdup<pos:position pos:line="82" pos:column="32"/></name><argument_list pos:line="82" pos:column="32">(<argument><expr><name pos:line="82" pos:column="33">token<pos:position pos:line="82" pos:column="38"/></name><operator pos:line="82" pos:column="38">+<pos:position pos:line="82" pos:column="39"/></operator><literal type="number" pos:line="82" pos:column="39">5<pos:position pos:line="82" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="82" pos:column="42"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="83" pos:column="13">char<pos:position pos:line="83" pos:column="17"/></name> <modifier pos:line="83" pos:column="18">*<pos:position pos:line="83" pos:column="19"/></modifier></type><name pos:line="83" pos:column="19">mode<pos:position pos:line="83" pos:column="23"/></name></decl>, <modifier pos:line="83" pos:column="25">*<pos:position pos:line="83" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="83" pos:column="26">nextmode<pos:position pos:line="83" pos:column="34"/></name></decl>;<pos:position pos:line="83" pos:column="35"/></decl_stmt>
            <for pos:line="84" pos:column="13">for <control pos:line="84" pos:column="17">(<init><expr><name pos:line="84" pos:column="18">mode<pos:position pos:line="84" pos:column="22"/></name> <operator pos:line="84" pos:column="23">=<pos:position pos:line="84" pos:column="24"/></operator> <name pos:line="84" pos:column="25">nextmode<pos:position pos:line="84" pos:column="33"/></name> <operator pos:line="84" pos:column="34">=<pos:position pos:line="84" pos:column="35"/></operator> <name pos:line="84" pos:column="36">tmp<pos:position pos:line="84" pos:column="39"/></name></expr>;<pos:position pos:line="84" pos:column="40"/></init> <condition><expr><name pos:line="84" pos:column="41">mode<pos:position pos:line="84" pos:column="45"/></name></expr>;<pos:position pos:line="84" pos:column="46"/></condition> <incr><expr><name pos:line="84" pos:column="47">mode<pos:position pos:line="84" pos:column="51"/></name> <operator pos:line="84" pos:column="52">=<pos:position pos:line="84" pos:column="53"/></operator> <name pos:line="84" pos:column="54">nextmode<pos:position pos:line="84" pos:column="62"/></name></expr></incr>)<pos:position pos:line="84" pos:column="63"/></control> <block pos:line="84" pos:column="64">{
                <expr_stmt><expr><name pos:line="85" pos:column="17">nextmode<pos:position pos:line="85" pos:column="25"/></name> <operator pos:line="85" pos:column="26">=<pos:position pos:line="85" pos:column="27"/></operator> <call><name pos:line="85" pos:column="28">strchr<pos:position pos:line="85" pos:column="34"/></name><argument_list pos:line="85" pos:column="34">(<argument><expr><name pos:line="85" pos:column="35">mode<pos:position pos:line="85" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="85" pos:column="41">','<pos:position pos:line="85" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="46"/></expr_stmt>
                <if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">nextmode<pos:position pos:line="86" pos:column="29"/></name></expr>)<pos:position pos:line="86" pos:column="30"/></condition><then pos:line="86" pos:column="30"> <block pos:line="86" pos:column="31">{
                    <expr_stmt><expr><operator pos:line="87" pos:column="21">*<pos:position pos:line="87" pos:column="22"/></operator><name pos:line="87" pos:column="22">nextmode<pos:position pos:line="87" pos:column="30"/></name> <operator pos:line="87" pos:column="31">=<pos:position pos:line="87" pos:column="32"/></operator> <literal type="char" pos:line="87" pos:column="33">'\0'<pos:position pos:line="87" pos:column="37"/></literal></expr>;<pos:position pos:line="87" pos:column="38"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="88" pos:column="21">++<pos:position pos:line="88" pos:column="23"/></operator><name pos:line="88" pos:column="23">nextmode<pos:position pos:line="88" pos:column="31"/></name></expr>;<pos:position pos:line="88" pos:column="32"/></expr_stmt>
                }<pos:position pos:line="89" pos:column="18"/></block></then></if>
                <if pos:line="90" pos:column="17">if <condition pos:line="90" pos:column="20">(<expr><operator pos:line="90" pos:column="21">!<pos:position pos:line="90" pos:column="22"/></operator><call><name pos:line="90" pos:column="22">strcasecmp<pos:position pos:line="90" pos:column="32"/></name><argument_list pos:line="90" pos:column="32">(<argument><expr><name pos:line="90" pos:column="33">mode<pos:position pos:line="90" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="39">"no-clr"<pos:position pos:line="90" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="49"/></condition><then pos:line="90" pos:column="49"> <block pos:line="90" pos:column="50">{
                    <if pos:line="91" pos:column="21">if <condition pos:line="91" pos:column="24">(<expr><name><name pos:line="91" pos:column="25">p<pos:position pos:line="91" pos:column="26"/></name><operator pos:line="91" pos:column="26">-&gt;<pos:position pos:line="91" pos:column="31"/></operator><name pos:line="91" pos:column="28">options<pos:position pos:line="91" pos:column="35"/></name><operator pos:line="91" pos:column="35">.<pos:position pos:line="91" pos:column="36"/></operator><name pos:line="91" pos:column="36">htcp_only_clr<pos:position pos:line="91" pos:column="49"/></name></name></expr>)<pos:position pos:line="91" pos:column="50"/></condition><then pos:line="91" pos:column="50">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="25">fatalf<pos:position pos:line="92" pos:column="31"/></name><argument_list pos:line="92" pos:column="31">(<argument><expr><literal type="string" pos:line="92" pos:column="32">"parse_peer: can't set htcp-no-clr and htcp-only-clr simultaneously"<pos:position pos:line="92" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="102"/></expr_stmt></block></then></if>
                    <expr_stmt><expr><name><name pos:line="93" pos:column="21">p<pos:position pos:line="93" pos:column="22"/></name><operator pos:line="93" pos:column="22">-&gt;<pos:position pos:line="93" pos:column="27"/></operator><name pos:line="93" pos:column="24">options<pos:position pos:line="93" pos:column="31"/></name><operator pos:line="93" pos:column="31">.<pos:position pos:line="93" pos:column="32"/></operator><name pos:line="93" pos:column="32">htcp_no_clr<pos:position pos:line="93" pos:column="43"/></name></name> <operator pos:line="93" pos:column="44">=<pos:position pos:line="93" pos:column="45"/></operator> <literal type="number" pos:line="93" pos:column="46">1<pos:position pos:line="93" pos:column="47"/></literal></expr>;<pos:position pos:line="93" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="94" pos:column="18"/></block></then> <elseif pos:line="94" pos:column="19">else <if pos:line="94" pos:column="24">if <condition pos:line="94" pos:column="27">(<expr><operator pos:line="94" pos:column="28">!<pos:position pos:line="94" pos:column="29"/></operator><call><name pos:line="94" pos:column="29">strcasecmp<pos:position pos:line="94" pos:column="39"/></name><argument_list pos:line="94" pos:column="39">(<argument><expr><name pos:line="94" pos:column="40">mode<pos:position pos:line="94" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="94" pos:column="46">"no-purge-clr"<pos:position pos:line="94" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="62"/></condition><then pos:line="94" pos:column="62"> <block pos:line="94" pos:column="63">{
                    <expr_stmt><expr><name><name pos:line="95" pos:column="21">p<pos:position pos:line="95" pos:column="22"/></name><operator pos:line="95" pos:column="22">-&gt;<pos:position pos:line="95" pos:column="27"/></operator><name pos:line="95" pos:column="24">options<pos:position pos:line="95" pos:column="31"/></name><operator pos:line="95" pos:column="31">.<pos:position pos:line="95" pos:column="32"/></operator><name pos:line="95" pos:column="32">htcp_no_purge_clr<pos:position pos:line="95" pos:column="49"/></name></name> <operator pos:line="95" pos:column="50">=<pos:position pos:line="95" pos:column="51"/></operator> <literal type="number" pos:line="95" pos:column="52">1<pos:position pos:line="95" pos:column="53"/></literal></expr>;<pos:position pos:line="95" pos:column="54"/></expr_stmt>
                }<pos:position pos:line="96" pos:column="18"/></block></then></if></elseif> <elseif pos:line="96" pos:column="19">else <if pos:line="96" pos:column="24">if <condition pos:line="96" pos:column="27">(<expr><operator pos:line="96" pos:column="28">!<pos:position pos:line="96" pos:column="29"/></operator><call><name pos:line="96" pos:column="29">strcasecmp<pos:position pos:line="96" pos:column="39"/></name><argument_list pos:line="96" pos:column="39">(<argument><expr><name pos:line="96" pos:column="40">mode<pos:position pos:line="96" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="46">"only-clr"<pos:position pos:line="96" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="96" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="58"/></condition><then pos:line="96" pos:column="58"> <block pos:line="96" pos:column="59">{
                    <if pos:line="97" pos:column="21">if <condition pos:line="97" pos:column="24">(<expr><name><name pos:line="97" pos:column="25">p<pos:position pos:line="97" pos:column="26"/></name><operator pos:line="97" pos:column="26">-&gt;<pos:position pos:line="97" pos:column="31"/></operator><name pos:line="97" pos:column="28">options<pos:position pos:line="97" pos:column="35"/></name><operator pos:line="97" pos:column="35">.<pos:position pos:line="97" pos:column="36"/></operator><name pos:line="97" pos:column="36">htcp_no_clr<pos:position pos:line="97" pos:column="47"/></name></name></expr>)<pos:position pos:line="97" pos:column="48"/></condition><then pos:line="97" pos:column="48">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="98" pos:column="25">fatalf<pos:position pos:line="98" pos:column="31"/></name><argument_list pos:line="98" pos:column="31">(<argument><expr><literal type="string" pos:line="98" pos:column="32">"parse_peer: can't set htcp no-clr and only-clr simultaneously"<pos:position pos:line="98" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="97"/></expr_stmt></block></then></if>
                    <expr_stmt><expr><name><name pos:line="99" pos:column="21">p<pos:position pos:line="99" pos:column="22"/></name><operator pos:line="99" pos:column="22">-&gt;<pos:position pos:line="99" pos:column="27"/></operator><name pos:line="99" pos:column="24">options<pos:position pos:line="99" pos:column="31"/></name><operator pos:line="99" pos:column="31">.<pos:position pos:line="99" pos:column="32"/></operator><name pos:line="99" pos:column="32">htcp_only_clr<pos:position pos:line="99" pos:column="45"/></name></name> <operator pos:line="99" pos:column="46">=<pos:position pos:line="99" pos:column="47"/></operator> <literal type="number" pos:line="99" pos:column="48">1<pos:position pos:line="99" pos:column="49"/></literal></expr>;<pos:position pos:line="99" pos:column="50"/></expr_stmt>
                }<pos:position pos:line="100" pos:column="18"/></block></then></if></elseif> <elseif pos:line="100" pos:column="19">else <if pos:line="100" pos:column="24">if <condition pos:line="100" pos:column="27">(<expr><operator pos:line="100" pos:column="28">!<pos:position pos:line="100" pos:column="29"/></operator><call><name pos:line="100" pos:column="29">strcasecmp<pos:position pos:line="100" pos:column="39"/></name><argument_list pos:line="100" pos:column="39">(<argument><expr><name pos:line="100" pos:column="40">mode<pos:position pos:line="100" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="46">"forward-clr"<pos:position pos:line="100" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="61"/></condition><then pos:line="100" pos:column="61"> <block pos:line="100" pos:column="62">{
                    <expr_stmt><expr><name><name pos:line="101" pos:column="21">p<pos:position pos:line="101" pos:column="22"/></name><operator pos:line="101" pos:column="22">-&gt;<pos:position pos:line="101" pos:column="27"/></operator><name pos:line="101" pos:column="24">options<pos:position pos:line="101" pos:column="31"/></name><operator pos:line="101" pos:column="31">.<pos:position pos:line="101" pos:column="32"/></operator><name pos:line="101" pos:column="32">htcp_forward_clr<pos:position pos:line="101" pos:column="48"/></name></name> <operator pos:line="101" pos:column="49">=<pos:position pos:line="101" pos:column="50"/></operator> <literal type="number" pos:line="101" pos:column="51">1<pos:position pos:line="101" pos:column="52"/></literal></expr>;<pos:position pos:line="101" pos:column="53"/></expr_stmt>
                }<pos:position pos:line="102" pos:column="18"/></block></then></if></elseif> <elseif pos:line="102" pos:column="19">else <if pos:line="102" pos:column="24">if <condition pos:line="102" pos:column="27">(<expr><operator pos:line="102" pos:column="28">!<pos:position pos:line="102" pos:column="29"/></operator><call><name pos:line="102" pos:column="29">strcasecmp<pos:position pos:line="102" pos:column="39"/></name><argument_list pos:line="102" pos:column="39">(<argument><expr><name pos:line="102" pos:column="40">mode<pos:position pos:line="102" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="46">"oldsquid"<pos:position pos:line="102" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="58"/></condition><then pos:line="102" pos:column="58"> <block pos:line="102" pos:column="59">{
                    <expr_stmt><expr><name><name pos:line="103" pos:column="21">p<pos:position pos:line="103" pos:column="22"/></name><operator pos:line="103" pos:column="22">-&gt;<pos:position pos:line="103" pos:column="27"/></operator><name pos:line="103" pos:column="24">options<pos:position pos:line="103" pos:column="31"/></name><operator pos:line="103" pos:column="31">.<pos:position pos:line="103" pos:column="32"/></operator><name pos:line="103" pos:column="32">htcp_oldsquid<pos:position pos:line="103" pos:column="45"/></name></name> <operator pos:line="103" pos:column="46">=<pos:position pos:line="103" pos:column="47"/></operator> <literal type="number" pos:line="103" pos:column="48">1<pos:position pos:line="103" pos:column="49"/></literal></expr>;<pos:position pos:line="103" pos:column="50"/></expr_stmt>
                }<pos:position pos:line="104" pos:column="18"/></block></then></if></elseif> <else pos:line="104" pos:column="19">else <block pos:line="104" pos:column="24">{
                    <expr_stmt><expr><call><name pos:line="105" pos:column="21">fatalf<pos:position pos:line="105" pos:column="27"/></name><argument_list pos:line="105" pos:column="27">(<argument><expr><literal type="string" pos:line="105" pos:column="28">"invalid HTCP mode '%s'"<pos:position pos:line="105" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="105" pos:column="54">mode<pos:position pos:line="105" pos:column="58"/></name></expr></argument>)<pos:position pos:line="105" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="60"/></expr_stmt>
                }<pos:position pos:line="106" pos:column="18"/></block></else></if>
            }<pos:position pos:line="107" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="108" pos:column="13">safe_free<pos:position pos:line="108" pos:column="22"/></name><argument_list pos:line="108" pos:column="22">(<argument><expr><name pos:line="108" pos:column="23">tmp<pos:position pos:line="108" pos:column="26"/></name></expr></argument>)<pos:position pos:line="108" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif<pos:position pos:line="109" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="110" pos:column="10"/></block></then></if></elseif> <elseif pos:line="110" pos:column="11">else <if pos:line="110" pos:column="16">if <condition pos:line="110" pos:column="19">(<expr><operator pos:line="110" pos:column="20">!<pos:position pos:line="110" pos:column="21"/></operator><call><name pos:line="110" pos:column="21">strcasecmp<pos:position pos:line="110" pos:column="31"/></name><argument_list pos:line="110" pos:column="31">(<argument><expr><name pos:line="110" pos:column="32">token<pos:position pos:line="110" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="110" pos:column="39">"no-netdb-exchange"<pos:position pos:line="110" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="110" pos:column="60"/></condition><then pos:line="110" pos:column="60"> <block pos:line="110" pos:column="61">{
            <expr_stmt><expr><name><name pos:line="111" pos:column="13">p<pos:position pos:line="111" pos:column="14"/></name><operator pos:line="111" pos:column="14">-&gt;<pos:position pos:line="111" pos:column="19"/></operator><name pos:line="111" pos:column="16">options<pos:position pos:line="111" pos:column="23"/></name><operator pos:line="111" pos:column="23">.<pos:position pos:line="111" pos:column="24"/></operator><name pos:line="111" pos:column="24">no_netdb_exchange<pos:position pos:line="111" pos:column="41"/></name></name> <operator pos:line="111" pos:column="42">=<pos:position pos:line="111" pos:column="43"/></operator> <literal type="number" pos:line="111" pos:column="44">1<pos:position pos:line="111" pos:column="45"/></literal></expr>;<pos:position pos:line="111" pos:column="46"/></expr_stmt>

        }<pos:position pos:line="113" pos:column="10"/></block></then></if></elseif> <elseif pos:line="113" pos:column="11">else <if pos:line="113" pos:column="16">if <condition pos:line="113" pos:column="19">(<expr><operator pos:line="113" pos:column="20">!<pos:position pos:line="113" pos:column="21"/></operator><call><name pos:line="113" pos:column="21">strcasecmp<pos:position pos:line="113" pos:column="31"/></name><argument_list pos:line="113" pos:column="31">(<argument><expr><name pos:line="113" pos:column="32">token<pos:position pos:line="113" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="39">"carp"<pos:position pos:line="113" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="47"/></condition><then pos:line="113" pos:column="47"> <block pos:line="113" pos:column="48">{
            <if pos:line="114" pos:column="13">if <condition pos:line="114" pos:column="16">(<expr><name><name pos:line="114" pos:column="17">p<pos:position pos:line="114" pos:column="18"/></name><operator pos:line="114" pos:column="18">-&gt;<pos:position pos:line="114" pos:column="23"/></operator><name pos:line="114" pos:column="20">type<pos:position pos:line="114" pos:column="24"/></name></name> <operator pos:line="114" pos:column="25">!=<pos:position pos:line="114" pos:column="27"/></operator> <name pos:line="114" pos:column="28">PEER_PARENT<pos:position pos:line="114" pos:column="39"/></name></expr>)<pos:position pos:line="114" pos:column="40"/></condition><then pos:line="114" pos:column="40">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="115" pos:column="17">fatalf<pos:position pos:line="115" pos:column="23"/></name><argument_list pos:line="115" pos:column="23">(<argument><expr><literal type="string" pos:line="115" pos:column="24">"parse_peer: non-parent carp peer %s/%d\n"<pos:position pos:line="115" pos:column="66"/></literal></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="68">p<pos:position pos:line="115" pos:column="69"/></name><operator pos:line="115" pos:column="69">-&gt;<pos:position pos:line="115" pos:column="74"/></operator><name pos:line="115" pos:column="71">host<pos:position pos:line="115" pos:column="75"/></name></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="77">p<pos:position pos:line="115" pos:column="78"/></name><operator pos:line="115" pos:column="78">-&gt;<pos:position pos:line="115" pos:column="83"/></operator><name pos:line="115" pos:column="80">http_port<pos:position pos:line="115" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="91"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name><name pos:line="117" pos:column="13">p<pos:position pos:line="117" pos:column="14"/></name><operator pos:line="117" pos:column="14">-&gt;<pos:position pos:line="117" pos:column="19"/></operator><name pos:line="117" pos:column="16">options<pos:position pos:line="117" pos:column="23"/></name><operator pos:line="117" pos:column="23">.<pos:position pos:line="117" pos:column="24"/></operator><name pos:line="117" pos:column="24">carp<pos:position pos:line="117" pos:column="28"/></name></name> <operator pos:line="117" pos:column="29">=<pos:position pos:line="117" pos:column="30"/></operator> <literal type="number" pos:line="117" pos:column="31">1<pos:position pos:line="117" pos:column="32"/></literal></expr>;<pos:position pos:line="117" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="118" pos:column="10"/></block></then></if></elseif> <elseif pos:line="118" pos:column="11">else <if pos:line="118" pos:column="16">if <condition pos:line="118" pos:column="19">(<expr><operator pos:line="118" pos:column="20">!<pos:position pos:line="118" pos:column="21"/></operator><call><name pos:line="118" pos:column="21">strncasecmp<pos:position pos:line="118" pos:column="32"/></name><argument_list pos:line="118" pos:column="32">(<argument><expr><name pos:line="118" pos:column="33">token<pos:position pos:line="118" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="40">"carp-key="<pos:position pos:line="118" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="53">9<pos:position pos:line="118" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="118" pos:column="56"/></condition><then pos:line="118" pos:column="56"> <block pos:line="118" pos:column="57">{
            <if pos:line="119" pos:column="13">if <condition pos:line="119" pos:column="16">(<expr><name><name pos:line="119" pos:column="17">p<pos:position pos:line="119" pos:column="18"/></name><operator pos:line="119" pos:column="18">-&gt;<pos:position pos:line="119" pos:column="23"/></operator><name pos:line="119" pos:column="20">options<pos:position pos:line="119" pos:column="27"/></name><operator pos:line="119" pos:column="27">.<pos:position pos:line="119" pos:column="28"/></operator><name pos:line="119" pos:column="28">carp<pos:position pos:line="119" pos:column="32"/></name></name> <operator pos:line="119" pos:column="33">!=<pos:position pos:line="119" pos:column="35"/></operator> <literal type="number" pos:line="119" pos:column="36">1<pos:position pos:line="119" pos:column="37"/></literal></expr>)<pos:position pos:line="119" pos:column="38"/></condition><then pos:line="119" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="120" pos:column="17">fatalf<pos:position pos:line="120" pos:column="23"/></name><argument_list pos:line="120" pos:column="23">(<argument><expr><literal type="string" pos:line="120" pos:column="24">"parse_peer: carp-key specified on non-carp peer %s/%d\n"<pos:position pos:line="120" pos:column="81"/></literal></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="83">p<pos:position pos:line="120" pos:column="84"/></name><operator pos:line="120" pos:column="84">-&gt;<pos:position pos:line="120" pos:column="89"/></operator><name pos:line="120" pos:column="86">host<pos:position pos:line="120" pos:column="90"/></name></name></expr></argument>, <argument><expr><name><name pos:line="120" pos:column="92">p<pos:position pos:line="120" pos:column="93"/></name><operator pos:line="120" pos:column="93">-&gt;<pos:position pos:line="120" pos:column="98"/></operator><name pos:line="120" pos:column="95">http_port<pos:position pos:line="120" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="120" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="106"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name><name pos:line="121" pos:column="13">p<pos:position pos:line="121" pos:column="14"/></name><operator pos:line="121" pos:column="14">-&gt;<pos:position pos:line="121" pos:column="19"/></operator><name pos:line="121" pos:column="16">options<pos:position pos:line="121" pos:column="23"/></name><operator pos:line="121" pos:column="23">.<pos:position pos:line="121" pos:column="24"/></operator><name pos:line="121" pos:column="24">carp_key<pos:position pos:line="121" pos:column="32"/></name><operator pos:line="121" pos:column="32">.<pos:position pos:line="121" pos:column="33"/></operator><name pos:line="121" pos:column="33">set<pos:position pos:line="121" pos:column="36"/></name></name><operator pos:line="121" pos:column="36">=<pos:position pos:line="121" pos:column="37"/></operator><literal type="number" pos:line="121" pos:column="37">1<pos:position pos:line="121" pos:column="38"/></literal></expr>;<pos:position pos:line="121" pos:column="39"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="122" pos:column="13">char<pos:position pos:line="122" pos:column="17"/></name> <modifier pos:line="122" pos:column="18">*<pos:position pos:line="122" pos:column="19"/></modifier></type><name pos:line="122" pos:column="19">nextkey<pos:position pos:line="122" pos:column="26"/></name><init pos:line="122" pos:column="26">=<expr><name pos:line="122" pos:column="27">token<pos:position pos:line="122" pos:column="32"/></name><operator pos:line="122" pos:column="32">+<pos:position pos:line="122" pos:column="33"/></operator><call><name pos:line="122" pos:column="33">strlen<pos:position pos:line="122" pos:column="39"/></name><argument_list pos:line="122" pos:column="39">(<argument><expr><literal type="string" pos:line="122" pos:column="40">"carp-key="<pos:position pos:line="122" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="52"/></argument_list></call></expr></init></decl>, <modifier pos:line="122" pos:column="54">*<pos:position pos:line="122" pos:column="55"/></modifier><decl><type ref="prev"/><name pos:line="122" pos:column="55">key<pos:position pos:line="122" pos:column="58"/></name><init pos:line="122" pos:column="58">=<expr><name pos:line="122" pos:column="59">nextkey<pos:position pos:line="122" pos:column="66"/></name></expr></init></decl>;<pos:position pos:line="122" pos:column="67"/></decl_stmt>
            <for pos:line="123" pos:column="13">for <control pos:line="123" pos:column="17">(<init pos:line="123" pos:column="18">;<pos:position pos:line="123" pos:column="19"/></init> <condition><expr><name pos:line="123" pos:column="20">key<pos:position pos:line="123" pos:column="23"/></name></expr>;<pos:position pos:line="123" pos:column="24"/></condition> <incr><expr><name pos:line="123" pos:column="25">key<pos:position pos:line="123" pos:column="28"/></name> <operator pos:line="123" pos:column="29">=<pos:position pos:line="123" pos:column="30"/></operator> <name pos:line="123" pos:column="31">nextkey<pos:position pos:line="123" pos:column="38"/></name></expr></incr>)<pos:position pos:line="123" pos:column="39"/></control> <block pos:line="123" pos:column="40">{
                <expr_stmt><expr><name pos:line="124" pos:column="17">nextkey<pos:position pos:line="124" pos:column="24"/></name><operator pos:line="124" pos:column="24">=<pos:position pos:line="124" pos:column="25"/></operator><call><name pos:line="124" pos:column="25">strchr<pos:position pos:line="124" pos:column="31"/></name><argument_list pos:line="124" pos:column="31">(<argument><expr><name pos:line="124" pos:column="32">key<pos:position pos:line="124" pos:column="35"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="124" pos:column="36">','<pos:position pos:line="124" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="41"/></expr_stmt>
                <if pos:line="125" pos:column="17">if <condition pos:line="125" pos:column="20">(<expr><name pos:line="125" pos:column="21">nextkey<pos:position pos:line="125" pos:column="28"/></name></expr>)<pos:position pos:line="125" pos:column="29"/></condition><then pos:line="125" pos:column="29"> <block type="pseudo"><expr_stmt><expr><operator pos:line="125" pos:column="30">++<pos:position pos:line="125" pos:column="32"/></operator><name pos:line="125" pos:column="32">nextkey<pos:position pos:line="125" pos:column="39"/></name></expr>;<pos:position pos:line="125" pos:column="40"/></expr_stmt></block></then></if> <comment type="line" pos:line="125" pos:column="41">// skip the comma, any</comment>
                <if pos:line="126" pos:column="17">if <condition pos:line="126" pos:column="20">(<expr><literal type="number" pos:line="126" pos:column="21">0<pos:position pos:line="126" pos:column="22"/></literal><operator pos:line="126" pos:column="22">==<pos:position pos:line="126" pos:column="24"/></operator><call><name pos:line="126" pos:column="24">strncasecmp<pos:position pos:line="126" pos:column="35"/></name><argument_list pos:line="126" pos:column="35">(<argument><expr><name pos:line="126" pos:column="36">key<pos:position pos:line="126" pos:column="39"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="126" pos:column="40">"scheme"<pos:position pos:line="126" pos:column="48"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="126" pos:column="49">6<pos:position pos:line="126" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="126" pos:column="52"/></condition><then pos:line="126" pos:column="52"> <block pos:line="126" pos:column="53">{
                    <expr_stmt><expr><name><name pos:line="127" pos:column="21">p<pos:position pos:line="127" pos:column="22"/></name><operator pos:line="127" pos:column="22">-&gt;<pos:position pos:line="127" pos:column="27"/></operator><name pos:line="127" pos:column="24">options<pos:position pos:line="127" pos:column="31"/></name><operator pos:line="127" pos:column="31">.<pos:position pos:line="127" pos:column="32"/></operator><name pos:line="127" pos:column="32">carp_key<pos:position pos:line="127" pos:column="40"/></name><operator pos:line="127" pos:column="40">.<pos:position pos:line="127" pos:column="41"/></operator><name pos:line="127" pos:column="41">scheme<pos:position pos:line="127" pos:column="47"/></name></name><operator pos:line="127" pos:column="47">=<pos:position pos:line="127" pos:column="48"/></operator><literal type="number" pos:line="127" pos:column="48">1<pos:position pos:line="127" pos:column="49"/></literal></expr>;<pos:position pos:line="127" pos:column="50"/></expr_stmt>
                }<pos:position pos:line="128" pos:column="18"/></block></then> <elseif pos:line="128" pos:column="19">else <if pos:line="128" pos:column="24">if <condition pos:line="128" pos:column="27">(<expr><literal type="number" pos:line="128" pos:column="28">0<pos:position pos:line="128" pos:column="29"/></literal><operator pos:line="128" pos:column="29">==<pos:position pos:line="128" pos:column="31"/></operator><call><name pos:line="128" pos:column="31">strncasecmp<pos:position pos:line="128" pos:column="42"/></name><argument_list pos:line="128" pos:column="42">(<argument><expr><name pos:line="128" pos:column="43">key<pos:position pos:line="128" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="128" pos:column="47">"host"<pos:position pos:line="128" pos:column="53"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="128" pos:column="54">4<pos:position pos:line="128" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="128" pos:column="57"/></condition><then pos:line="128" pos:column="57"> <block pos:line="128" pos:column="58">{
                    <expr_stmt><expr><name><name pos:line="129" pos:column="21">p<pos:position pos:line="129" pos:column="22"/></name><operator pos:line="129" pos:column="22">-&gt;<pos:position pos:line="129" pos:column="27"/></operator><name pos:line="129" pos:column="24">options<pos:position pos:line="129" pos:column="31"/></name><operator pos:line="129" pos:column="31">.<pos:position pos:line="129" pos:column="32"/></operator><name pos:line="129" pos:column="32">carp_key<pos:position pos:line="129" pos:column="40"/></name><operator pos:line="129" pos:column="40">.<pos:position pos:line="129" pos:column="41"/></operator><name pos:line="129" pos:column="41">host<pos:position pos:line="129" pos:column="45"/></name></name><operator pos:line="129" pos:column="45">=<pos:position pos:line="129" pos:column="46"/></operator><literal type="number" pos:line="129" pos:column="46">1<pos:position pos:line="129" pos:column="47"/></literal></expr>;<pos:position pos:line="129" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="130" pos:column="18"/></block></then></if></elseif> <elseif pos:line="130" pos:column="19">else <if pos:line="130" pos:column="24">if <condition pos:line="130" pos:column="27">(<expr><literal type="number" pos:line="130" pos:column="28">0<pos:position pos:line="130" pos:column="29"/></literal><operator pos:line="130" pos:column="29">==<pos:position pos:line="130" pos:column="31"/></operator><call><name pos:line="130" pos:column="31">strncasecmp<pos:position pos:line="130" pos:column="42"/></name><argument_list pos:line="130" pos:column="42">(<argument><expr><name pos:line="130" pos:column="43">key<pos:position pos:line="130" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="130" pos:column="47">"port"<pos:position pos:line="130" pos:column="53"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="130" pos:column="54">4<pos:position pos:line="130" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="130" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="57"/></condition><then pos:line="130" pos:column="57"> <block pos:line="130" pos:column="58">{
                    <expr_stmt><expr><name><name pos:line="131" pos:column="21">p<pos:position pos:line="131" pos:column="22"/></name><operator pos:line="131" pos:column="22">-&gt;<pos:position pos:line="131" pos:column="27"/></operator><name pos:line="131" pos:column="24">options<pos:position pos:line="131" pos:column="31"/></name><operator pos:line="131" pos:column="31">.<pos:position pos:line="131" pos:column="32"/></operator><name pos:line="131" pos:column="32">carp_key<pos:position pos:line="131" pos:column="40"/></name><operator pos:line="131" pos:column="40">.<pos:position pos:line="131" pos:column="41"/></operator><name pos:line="131" pos:column="41">port<pos:position pos:line="131" pos:column="45"/></name></name><operator pos:line="131" pos:column="45">=<pos:position pos:line="131" pos:column="46"/></operator><literal type="number" pos:line="131" pos:column="46">1<pos:position pos:line="131" pos:column="47"/></literal></expr>;<pos:position pos:line="131" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="132" pos:column="18"/></block></then></if></elseif> <elseif pos:line="132" pos:column="19">else <if pos:line="132" pos:column="24">if <condition pos:line="132" pos:column="27">(<expr><literal type="number" pos:line="132" pos:column="28">0<pos:position pos:line="132" pos:column="29"/></literal><operator pos:line="132" pos:column="29">==<pos:position pos:line="132" pos:column="31"/></operator><call><name pos:line="132" pos:column="31">strncasecmp<pos:position pos:line="132" pos:column="42"/></name><argument_list pos:line="132" pos:column="42">(<argument><expr><name pos:line="132" pos:column="43">key<pos:position pos:line="132" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="132" pos:column="47">"path"<pos:position pos:line="132" pos:column="53"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="132" pos:column="54">4<pos:position pos:line="132" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="132" pos:column="57"/></condition><then pos:line="132" pos:column="57"> <block pos:line="132" pos:column="58">{
                    <expr_stmt><expr><name><name pos:line="133" pos:column="21">p<pos:position pos:line="133" pos:column="22"/></name><operator pos:line="133" pos:column="22">-&gt;<pos:position pos:line="133" pos:column="27"/></operator><name pos:line="133" pos:column="24">options<pos:position pos:line="133" pos:column="31"/></name><operator pos:line="133" pos:column="31">.<pos:position pos:line="133" pos:column="32"/></operator><name pos:line="133" pos:column="32">carp_key<pos:position pos:line="133" pos:column="40"/></name><operator pos:line="133" pos:column="40">.<pos:position pos:line="133" pos:column="41"/></operator><name pos:line="133" pos:column="41">path<pos:position pos:line="133" pos:column="45"/></name></name><operator pos:line="133" pos:column="45">=<pos:position pos:line="133" pos:column="46"/></operator><literal type="number" pos:line="133" pos:column="46">1<pos:position pos:line="133" pos:column="47"/></literal></expr>;<pos:position pos:line="133" pos:column="48"/></expr_stmt>
                }<pos:position pos:line="134" pos:column="18"/></block></then></if></elseif> <elseif pos:line="134" pos:column="19">else <if pos:line="134" pos:column="24">if <condition pos:line="134" pos:column="27">(<expr><literal type="number" pos:line="134" pos:column="28">0<pos:position pos:line="134" pos:column="29"/></literal><operator pos:line="134" pos:column="29">==<pos:position pos:line="134" pos:column="31"/></operator><call><name pos:line="134" pos:column="31">strncasecmp<pos:position pos:line="134" pos:column="42"/></name><argument_list pos:line="134" pos:column="42">(<argument><expr><name pos:line="134" pos:column="43">key<pos:position pos:line="134" pos:column="46"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="134" pos:column="47">"params"<pos:position pos:line="134" pos:column="55"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="134" pos:column="56">6<pos:position pos:line="134" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="134" pos:column="59"/></condition><then pos:line="134" pos:column="59"> <block pos:line="134" pos:column="60">{
                    <expr_stmt><expr><name><name pos:line="135" pos:column="21">p<pos:position pos:line="135" pos:column="22"/></name><operator pos:line="135" pos:column="22">-&gt;<pos:position pos:line="135" pos:column="27"/></operator><name pos:line="135" pos:column="24">options<pos:position pos:line="135" pos:column="31"/></name><operator pos:line="135" pos:column="31">.<pos:position pos:line="135" pos:column="32"/></operator><name pos:line="135" pos:column="32">carp_key<pos:position pos:line="135" pos:column="40"/></name><operator pos:line="135" pos:column="40">.<pos:position pos:line="135" pos:column="41"/></operator><name pos:line="135" pos:column="41">params<pos:position pos:line="135" pos:column="47"/></name></name><operator pos:line="135" pos:column="47">=<pos:position pos:line="135" pos:column="48"/></operator><literal type="number" pos:line="135" pos:column="48">1<pos:position pos:line="135" pos:column="49"/></literal></expr>;<pos:position pos:line="135" pos:column="50"/></expr_stmt>
                }<pos:position pos:line="136" pos:column="18"/></block></then></if></elseif> <else pos:line="136" pos:column="19">else <block pos:line="136" pos:column="24">{
                    <expr_stmt><expr><call><name pos:line="137" pos:column="21">fatalf<pos:position pos:line="137" pos:column="27"/></name><argument_list pos:line="137" pos:column="27">(<argument><expr><literal type="string" pos:line="137" pos:column="28">"invalid carp-key '%s'"<pos:position pos:line="137" pos:column="51"/></literal></expr></argument>,<argument><expr><name pos:line="137" pos:column="52">key<pos:position pos:line="137" pos:column="55"/></name></expr></argument>)<pos:position pos:line="137" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="57"/></expr_stmt>
                }<pos:position pos:line="138" pos:column="18"/></block></else></if>
            }<pos:position pos:line="139" pos:column="14"/></block></for>
        }<pos:position pos:line="140" pos:column="10"/></block></then></if></elseif> <elseif pos:line="140" pos:column="11">else <if pos:line="140" pos:column="16">if <condition pos:line="140" pos:column="19">(<expr><operator pos:line="140" pos:column="20">!<pos:position pos:line="140" pos:column="21"/></operator><call><name pos:line="140" pos:column="21">strcasecmp<pos:position pos:line="140" pos:column="31"/></name><argument_list pos:line="140" pos:column="31">(<argument><expr><name pos:line="140" pos:column="32">token<pos:position pos:line="140" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="39">"userhash"<pos:position pos:line="140" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="140" pos:column="51"/></condition><then pos:line="140" pos:column="51"> <block pos:line="140" pos:column="52">{
<cpp:if pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">if<pos:position pos:line="141" pos:column="4"/></cpp:directive> <expr><name pos:line="141" pos:column="5">USE_AUTH<pos:position pos:line="141" pos:column="13"/></name></expr></cpp:if>
            <if pos:line="142" pos:column="13">if <condition pos:line="142" pos:column="16">(<expr><name><name pos:line="142" pos:column="17">p<pos:position pos:line="142" pos:column="18"/></name><operator pos:line="142" pos:column="18">-&gt;<pos:position pos:line="142" pos:column="23"/></operator><name pos:line="142" pos:column="20">type<pos:position pos:line="142" pos:column="24"/></name></name> <operator pos:line="142" pos:column="25">!=<pos:position pos:line="142" pos:column="27"/></operator> <name pos:line="142" pos:column="28">PEER_PARENT<pos:position pos:line="142" pos:column="39"/></name></expr>)<pos:position pos:line="142" pos:column="40"/></condition><then pos:line="142" pos:column="40">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="143" pos:column="17">fatalf<pos:position pos:line="143" pos:column="23"/></name><argument_list pos:line="143" pos:column="23">(<argument><expr><literal type="string" pos:line="143" pos:column="24">"parse_peer: non-parent userhash peer %s/%d\n"<pos:position pos:line="143" pos:column="70"/></literal></expr></argument>, <argument><expr><name><name pos:line="143" pos:column="72">p<pos:position pos:line="143" pos:column="73"/></name><operator pos:line="143" pos:column="73">-&gt;<pos:position pos:line="143" pos:column="78"/></operator><name pos:line="143" pos:column="75">host<pos:position pos:line="143" pos:column="79"/></name></name></expr></argument>, <argument><expr><name><name pos:line="143" pos:column="81">p<pos:position pos:line="143" pos:column="82"/></name><operator pos:line="143" pos:column="82">-&gt;<pos:position pos:line="143" pos:column="87"/></operator><name pos:line="143" pos:column="84">http_port<pos:position pos:line="143" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="143" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="95"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name><name pos:line="145" pos:column="13">p<pos:position pos:line="145" pos:column="14"/></name><operator pos:line="145" pos:column="14">-&gt;<pos:position pos:line="145" pos:column="19"/></operator><name pos:line="145" pos:column="16">options<pos:position pos:line="145" pos:column="23"/></name><operator pos:line="145" pos:column="23">.<pos:position pos:line="145" pos:column="24"/></operator><name pos:line="145" pos:column="24">userhash<pos:position pos:line="145" pos:column="32"/></name></name> <operator pos:line="145" pos:column="33">=<pos:position pos:line="145" pos:column="34"/></operator> <literal type="number" pos:line="145" pos:column="35">1<pos:position pos:line="145" pos:column="36"/></literal></expr>;<pos:position pos:line="145" pos:column="37"/></expr_stmt>
<cpp:else pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">else<pos:position pos:line="146" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><call><name pos:line="147" pos:column="13">fatalf<pos:position pos:line="147" pos:column="19"/></name><argument_list pos:line="147" pos:column="19">(<argument><expr><literal type="string" pos:line="147" pos:column="20">"parse_peer: userhash requires authentication. peer %s/%d\n"<pos:position pos:line="147" pos:column="80"/></literal></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="82">p<pos:position pos:line="147" pos:column="83"/></name><operator pos:line="147" pos:column="83">-&gt;<pos:position pos:line="147" pos:column="88"/></operator><name pos:line="147" pos:column="85">host<pos:position pos:line="147" pos:column="89"/></name></name></expr></argument>, <argument><expr><name><name pos:line="147" pos:column="91">p<pos:position pos:line="147" pos:column="92"/></name><operator pos:line="147" pos:column="92">-&gt;<pos:position pos:line="147" pos:column="97"/></operator><name pos:line="147" pos:column="94">http_port<pos:position pos:line="147" pos:column="103"/></name></name></expr></argument>)<pos:position pos:line="147" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="105"/></expr_stmt>
<cpp:endif pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">endif<pos:position pos:line="148" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="149" pos:column="10"/></block></then></if></elseif> <elseif pos:line="149" pos:column="11">else <if pos:line="149" pos:column="16">if <condition pos:line="149" pos:column="19">(<expr><operator pos:line="149" pos:column="20">!<pos:position pos:line="149" pos:column="21"/></operator><call><name pos:line="149" pos:column="21">strcasecmp<pos:position pos:line="149" pos:column="31"/></name><argument_list pos:line="149" pos:column="31">(<argument><expr><name pos:line="149" pos:column="32">token<pos:position pos:line="149" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="149" pos:column="39">"sourcehash"<pos:position pos:line="149" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="149" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="149" pos:column="53"/></condition><then pos:line="149" pos:column="53"> <block pos:line="149" pos:column="54">{
            <if pos:line="150" pos:column="13">if <condition pos:line="150" pos:column="16">(<expr><name><name pos:line="150" pos:column="17">p<pos:position pos:line="150" pos:column="18"/></name><operator pos:line="150" pos:column="18">-&gt;<pos:position pos:line="150" pos:column="23"/></operator><name pos:line="150" pos:column="20">type<pos:position pos:line="150" pos:column="24"/></name></name> <operator pos:line="150" pos:column="25">!=<pos:position pos:line="150" pos:column="27"/></operator> <name pos:line="150" pos:column="28">PEER_PARENT<pos:position pos:line="150" pos:column="39"/></name></expr>)<pos:position pos:line="150" pos:column="40"/></condition><then pos:line="150" pos:column="40">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="151" pos:column="17">fatalf<pos:position pos:line="151" pos:column="23"/></name><argument_list pos:line="151" pos:column="23">(<argument><expr><literal type="string" pos:line="151" pos:column="24">"parse_peer: non-parent sourcehash peer %s/%d\n"<pos:position pos:line="151" pos:column="72"/></literal></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="74">p<pos:position pos:line="151" pos:column="75"/></name><operator pos:line="151" pos:column="75">-&gt;<pos:position pos:line="151" pos:column="80"/></operator><name pos:line="151" pos:column="77">host<pos:position pos:line="151" pos:column="81"/></name></name></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="83">p<pos:position pos:line="151" pos:column="84"/></name><operator pos:line="151" pos:column="84">-&gt;<pos:position pos:line="151" pos:column="89"/></operator><name pos:line="151" pos:column="86">http_port<pos:position pos:line="151" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="97"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name><name pos:line="153" pos:column="13">p<pos:position pos:line="153" pos:column="14"/></name><operator pos:line="153" pos:column="14">-&gt;<pos:position pos:line="153" pos:column="19"/></operator><name pos:line="153" pos:column="16">options<pos:position pos:line="153" pos:column="23"/></name><operator pos:line="153" pos:column="23">.<pos:position pos:line="153" pos:column="24"/></operator><name pos:line="153" pos:column="24">sourcehash<pos:position pos:line="153" pos:column="34"/></name></name> <operator pos:line="153" pos:column="35">=<pos:position pos:line="153" pos:column="36"/></operator> <literal type="number" pos:line="153" pos:column="37">1<pos:position pos:line="153" pos:column="38"/></literal></expr>;<pos:position pos:line="153" pos:column="39"/></expr_stmt>

        }<pos:position pos:line="155" pos:column="10"/></block></then></if></elseif> <elseif pos:line="155" pos:column="11">else <if pos:line="155" pos:column="16">if <condition pos:line="155" pos:column="19">(<expr><operator pos:line="155" pos:column="20">!<pos:position pos:line="155" pos:column="21"/></operator><call><name pos:line="155" pos:column="21">strcasecmp<pos:position pos:line="155" pos:column="31"/></name><argument_list pos:line="155" pos:column="31">(<argument><expr><name pos:line="155" pos:column="32">token<pos:position pos:line="155" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="155" pos:column="39">"no-delay"<pos:position pos:line="155" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="155" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="155" pos:column="51"/></condition><then pos:line="155" pos:column="51"> <block pos:line="155" pos:column="52">{
<cpp:if pos:line="156" pos:column="1">#<cpp:directive pos:line="156" pos:column="2">if<pos:position pos:line="156" pos:column="4"/></cpp:directive> <expr><name pos:line="156" pos:column="5">USE_DELAY_POOLS<pos:position pos:line="156" pos:column="20"/></name></expr></cpp:if>
            <expr_stmt><expr><name><name pos:line="157" pos:column="13">p<pos:position pos:line="157" pos:column="14"/></name><operator pos:line="157" pos:column="14">-&gt;<pos:position pos:line="157" pos:column="19"/></operator><name pos:line="157" pos:column="16">options<pos:position pos:line="157" pos:column="23"/></name><operator pos:line="157" pos:column="23">.<pos:position pos:line="157" pos:column="24"/></operator><name pos:line="157" pos:column="24">no_delay<pos:position pos:line="157" pos:column="32"/></name></name> <operator pos:line="157" pos:column="33">=<pos:position pos:line="157" pos:column="34"/></operator> <literal type="number" pos:line="157" pos:column="35">1<pos:position pos:line="157" pos:column="36"/></literal></expr>;<pos:position pos:line="157" pos:column="37"/></expr_stmt>
<cpp:else pos:line="158" pos:column="1">#<cpp:directive pos:line="158" pos:column="2">else<pos:position pos:line="158" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><call><name pos:line="159" pos:column="13">debugs<pos:position pos:line="159" pos:column="19"/></name><argument_list pos:line="159" pos:column="19">(<argument><expr><literal type="number" pos:line="159" pos:column="20">0<pos:position pos:line="159" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="23">DBG_CRITICAL<pos:position pos:line="159" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="37">"WARNING: cache_peer option 'no-delay' requires --enable-delay-pools"<pos:position pos:line="159" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="108"/></expr_stmt>
<cpp:endif pos:line="160" pos:column="1">#<cpp:directive pos:line="160" pos:column="2">endif<pos:position pos:line="160" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="161" pos:column="10"/></block></then></if></elseif> <elseif pos:line="161" pos:column="11">else <if pos:line="161" pos:column="16">if <condition pos:line="161" pos:column="19">(<expr><operator pos:line="161" pos:column="20">!<pos:position pos:line="161" pos:column="21"/></operator><call><name pos:line="161" pos:column="21">strncasecmp<pos:position pos:line="161" pos:column="32"/></name><argument_list pos:line="161" pos:column="32">(<argument><expr><name pos:line="161" pos:column="33">token<pos:position pos:line="161" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="161" pos:column="40">"login="<pos:position pos:line="161" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="161" pos:column="50">6<pos:position pos:line="161" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="161" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="161" pos:column="53"/></condition><then pos:line="161" pos:column="53"> <block pos:line="161" pos:column="54">{
            <expr_stmt><expr><name><name pos:line="162" pos:column="13">p<pos:position pos:line="162" pos:column="14"/></name><operator pos:line="162" pos:column="14">-&gt;<pos:position pos:line="162" pos:column="19"/></operator><name pos:line="162" pos:column="16">login<pos:position pos:line="162" pos:column="21"/></name></name> <operator pos:line="162" pos:column="22">=<pos:position pos:line="162" pos:column="23"/></operator> <call><name pos:line="162" pos:column="24">xstrdup<pos:position pos:line="162" pos:column="31"/></name><argument_list pos:line="162" pos:column="31">(<argument><expr><name pos:line="162" pos:column="32">token<pos:position pos:line="162" pos:column="37"/></name> <operator pos:line="162" pos:column="38">+<pos:position pos:line="162" pos:column="39"/></operator> <literal type="number" pos:line="162" pos:column="40">6<pos:position pos:line="162" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="163" pos:column="13">rfc1738_unescape<pos:position pos:line="163" pos:column="29"/></name><argument_list pos:line="163" pos:column="29">(<argument><expr><name><name pos:line="163" pos:column="30">p<pos:position pos:line="163" pos:column="31"/></name><operator pos:line="163" pos:column="31">-&gt;<pos:position pos:line="163" pos:column="36"/></operator><name pos:line="163" pos:column="33">login<pos:position pos:line="163" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="163" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="164" pos:column="10"/></block></then></if></elseif> <elseif pos:line="164" pos:column="11">else <if pos:line="164" pos:column="16">if <condition pos:line="164" pos:column="19">(<expr><operator pos:line="164" pos:column="20">!<pos:position pos:line="164" pos:column="21"/></operator><call><name pos:line="164" pos:column="21">strncasecmp<pos:position pos:line="164" pos:column="32"/></name><argument_list pos:line="164" pos:column="32">(<argument><expr><name pos:line="164" pos:column="33">token<pos:position pos:line="164" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="164" pos:column="40">"connect-timeout="<pos:position pos:line="164" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="164" pos:column="60">16<pos:position pos:line="164" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="164" pos:column="64"/></condition><then pos:line="164" pos:column="64"> <block pos:line="164" pos:column="65">{
            <expr_stmt><expr><name><name pos:line="165" pos:column="13">p<pos:position pos:line="165" pos:column="14"/></name><operator pos:line="165" pos:column="14">-&gt;<pos:position pos:line="165" pos:column="19"/></operator><name pos:line="165" pos:column="16">connect_timeout<pos:position pos:line="165" pos:column="31"/></name></name> <operator pos:line="165" pos:column="32">=<pos:position pos:line="165" pos:column="33"/></operator> <call><name pos:line="165" pos:column="34">xatoi<pos:position pos:line="165" pos:column="39"/></name><argument_list pos:line="165" pos:column="39">(<argument><expr><name pos:line="165" pos:column="40">token<pos:position pos:line="165" pos:column="45"/></name> <operator pos:line="165" pos:column="46">+<pos:position pos:line="165" pos:column="47"/></operator> <literal type="number" pos:line="165" pos:column="48">16<pos:position pos:line="165" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="165" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="166" pos:column="10"/></block></then></if></elseif> <elseif pos:line="166" pos:column="11">else <if pos:line="166" pos:column="16">if <condition pos:line="166" pos:column="19">(<expr><operator pos:line="166" pos:column="20">!<pos:position pos:line="166" pos:column="21"/></operator><call><name pos:line="166" pos:column="21">strncasecmp<pos:position pos:line="166" pos:column="32"/></name><argument_list pos:line="166" pos:column="32">(<argument><expr><name pos:line="166" pos:column="33">token<pos:position pos:line="166" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="166" pos:column="40">"connect-fail-limit="<pos:position pos:line="166" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="166" pos:column="63">19<pos:position pos:line="166" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="166" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="166" pos:column="67"/></condition><then pos:line="166" pos:column="67"> <block pos:line="166" pos:column="68">{
            <expr_stmt><expr><name><name pos:line="167" pos:column="13">p<pos:position pos:line="167" pos:column="14"/></name><operator pos:line="167" pos:column="14">-&gt;<pos:position pos:line="167" pos:column="19"/></operator><name pos:line="167" pos:column="16">connect_fail_limit<pos:position pos:line="167" pos:column="34"/></name></name> <operator pos:line="167" pos:column="35">=<pos:position pos:line="167" pos:column="36"/></operator> <call><name pos:line="167" pos:column="37">xatoi<pos:position pos:line="167" pos:column="42"/></name><argument_list pos:line="167" pos:column="42">(<argument><expr><name pos:line="167" pos:column="43">token<pos:position pos:line="167" pos:column="48"/></name> <operator pos:line="167" pos:column="49">+<pos:position pos:line="167" pos:column="50"/></operator> <literal type="number" pos:line="167" pos:column="51">19<pos:position pos:line="167" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="55"/></expr_stmt>
<cpp:if pos:line="168" pos:column="1">#<cpp:directive pos:line="168" pos:column="2">if<pos:position pos:line="168" pos:column="4"/></cpp:directive> <expr><name pos:line="168" pos:column="5">USE_CACHE_DIGESTS<pos:position pos:line="168" pos:column="22"/></name></expr></cpp:if>
        }<pos:position pos:line="169" pos:column="10"/></block></then></if></elseif> <elseif pos:line="169" pos:column="11">else <if pos:line="169" pos:column="16">if <condition pos:line="169" pos:column="19">(<expr><operator pos:line="169" pos:column="20">!<pos:position pos:line="169" pos:column="21"/></operator><call><name pos:line="169" pos:column="21">strncasecmp<pos:position pos:line="169" pos:column="32"/></name><argument_list pos:line="169" pos:column="32">(<argument><expr><name pos:line="169" pos:column="33">token<pos:position pos:line="169" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="40">"digest-url="<pos:position pos:line="169" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="169" pos:column="55">11<pos:position pos:line="169" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="169" pos:column="59"/></condition><then pos:line="169" pos:column="59"> <block pos:line="169" pos:column="60">{
            <expr_stmt><expr><name><name pos:line="170" pos:column="13">p<pos:position pos:line="170" pos:column="14"/></name><operator pos:line="170" pos:column="14">-&gt;<pos:position pos:line="170" pos:column="19"/></operator><name pos:line="170" pos:column="16">digest_url<pos:position pos:line="170" pos:column="26"/></name></name> <operator pos:line="170" pos:column="27">=<pos:position pos:line="170" pos:column="28"/></operator> <call><name pos:line="170" pos:column="29">xstrdup<pos:position pos:line="170" pos:column="36"/></name><argument_list pos:line="170" pos:column="36">(<argument><expr><name pos:line="170" pos:column="37">token<pos:position pos:line="170" pos:column="42"/></name> <operator pos:line="170" pos:column="43">+<pos:position pos:line="170" pos:column="44"/></operator> <literal type="number" pos:line="170" pos:column="45">11<pos:position pos:line="170" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="170" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="49"/></expr_stmt>
<cpp:endif pos:line="171" pos:column="1">#<cpp:directive pos:line="171" pos:column="2">endif<pos:position pos:line="171" pos:column="7"/></cpp:directive></cpp:endif>

        }<pos:position pos:line="173" pos:column="10"/></block></then></if></elseif> <elseif pos:line="173" pos:column="11">else <if pos:line="173" pos:column="16">if <condition pos:line="173" pos:column="19">(<expr><operator pos:line="173" pos:column="20">!<pos:position pos:line="173" pos:column="21"/></operator><call><name pos:line="173" pos:column="21">strcasecmp<pos:position pos:line="173" pos:column="31"/></name><argument_list pos:line="173" pos:column="31">(<argument><expr><name pos:line="173" pos:column="32">token<pos:position pos:line="173" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="173" pos:column="39">"allow-miss"<pos:position pos:line="173" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="173" pos:column="53"/></condition><then pos:line="173" pos:column="53"> <block pos:line="173" pos:column="54">{
            <expr_stmt><expr><name><name pos:line="174" pos:column="13">p<pos:position pos:line="174" pos:column="14"/></name><operator pos:line="174" pos:column="14">-&gt;<pos:position pos:line="174" pos:column="19"/></operator><name pos:line="174" pos:column="16">options<pos:position pos:line="174" pos:column="23"/></name><operator pos:line="174" pos:column="23">.<pos:position pos:line="174" pos:column="24"/></operator><name pos:line="174" pos:column="24">allow_miss<pos:position pos:line="174" pos:column="34"/></name></name> <operator pos:line="174" pos:column="35">=<pos:position pos:line="174" pos:column="36"/></operator> <literal type="number" pos:line="174" pos:column="37">1<pos:position pos:line="174" pos:column="38"/></literal></expr>;<pos:position pos:line="174" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="175" pos:column="10"/></block></then></if></elseif> <elseif pos:line="175" pos:column="11">else <if pos:line="175" pos:column="16">if <condition pos:line="175" pos:column="19">(<expr><operator pos:line="175" pos:column="20">!<pos:position pos:line="175" pos:column="21"/></operator><call><name pos:line="175" pos:column="21">strncasecmp<pos:position pos:line="175" pos:column="32"/></name><argument_list pos:line="175" pos:column="32">(<argument><expr><name pos:line="175" pos:column="33">token<pos:position pos:line="175" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="40">"max-conn="<pos:position pos:line="175" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="175" pos:column="53">9<pos:position pos:line="175" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="175" pos:column="56"/></condition><then pos:line="175" pos:column="56"> <block pos:line="175" pos:column="57">{
            <expr_stmt><expr><name><name pos:line="176" pos:column="13">p<pos:position pos:line="176" pos:column="14"/></name><operator pos:line="176" pos:column="14">-&gt;<pos:position pos:line="176" pos:column="19"/></operator><name pos:line="176" pos:column="16">max_conn<pos:position pos:line="176" pos:column="24"/></name></name> <operator pos:line="176" pos:column="25">=<pos:position pos:line="176" pos:column="26"/></operator> <call><name pos:line="176" pos:column="27">xatoi<pos:position pos:line="176" pos:column="32"/></name><argument_list pos:line="176" pos:column="32">(<argument><expr><name pos:line="176" pos:column="33">token<pos:position pos:line="176" pos:column="38"/></name> <operator pos:line="176" pos:column="39">+<pos:position pos:line="176" pos:column="40"/></operator> <literal type="number" pos:line="176" pos:column="41">9<pos:position pos:line="176" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="176" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="177" pos:column="10"/></block></then></if></elseif> <elseif pos:line="177" pos:column="11">else <if pos:line="177" pos:column="16">if <condition pos:line="177" pos:column="19">(<expr><operator pos:line="177" pos:column="20">!<pos:position pos:line="177" pos:column="21"/></operator><call><name pos:line="177" pos:column="21">strcasecmp<pos:position pos:line="177" pos:column="31"/></name><argument_list pos:line="177" pos:column="31">(<argument><expr><name pos:line="177" pos:column="32">token<pos:position pos:line="177" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="177" pos:column="39">"originserver"<pos:position pos:line="177" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="177" pos:column="55"/></condition><then pos:line="177" pos:column="55"> <block pos:line="177" pos:column="56">{
            <expr_stmt><expr><name><name pos:line="178" pos:column="13">p<pos:position pos:line="178" pos:column="14"/></name><operator pos:line="178" pos:column="14">-&gt;<pos:position pos:line="178" pos:column="19"/></operator><name pos:line="178" pos:column="16">options<pos:position pos:line="178" pos:column="23"/></name><operator pos:line="178" pos:column="23">.<pos:position pos:line="178" pos:column="24"/></operator><name pos:line="178" pos:column="24">originserver<pos:position pos:line="178" pos:column="36"/></name></name> <operator pos:line="178" pos:column="37">=<pos:position pos:line="178" pos:column="38"/></operator> <literal type="number" pos:line="178" pos:column="39">1<pos:position pos:line="178" pos:column="40"/></literal></expr>;<pos:position pos:line="178" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="179" pos:column="10"/></block></then></if></elseif> <elseif pos:line="179" pos:column="11">else <if pos:line="179" pos:column="16">if <condition pos:line="179" pos:column="19">(<expr><operator pos:line="179" pos:column="20">!<pos:position pos:line="179" pos:column="21"/></operator><call><name pos:line="179" pos:column="21">strncasecmp<pos:position pos:line="179" pos:column="32"/></name><argument_list pos:line="179" pos:column="32">(<argument><expr><name pos:line="179" pos:column="33">token<pos:position pos:line="179" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="179" pos:column="40">"name="<pos:position pos:line="179" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="179" pos:column="49">5<pos:position pos:line="179" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="179" pos:column="52"/></condition><then pos:line="179" pos:column="52"> <block pos:line="179" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="180" pos:column="13">safe_free<pos:position pos:line="180" pos:column="22"/></name><argument_list pos:line="180" pos:column="22">(<argument><expr><name><name pos:line="180" pos:column="23">p<pos:position pos:line="180" pos:column="24"/></name><operator pos:line="180" pos:column="24">-&gt;<pos:position pos:line="180" pos:column="29"/></operator><name pos:line="180" pos:column="26">name<pos:position pos:line="180" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="180" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="32"/></expr_stmt>

            <if pos:line="182" pos:column="13">if <condition pos:line="182" pos:column="16">(<expr><name><name pos:line="182" pos:column="17">token<pos:position pos:line="182" pos:column="22"/></name><index pos:line="182" pos:column="22">[<expr><literal type="number" pos:line="182" pos:column="23">5<pos:position pos:line="182" pos:column="24"/></literal></expr>]<pos:position pos:line="182" pos:column="25"/></index></name></expr>)<pos:position pos:line="182" pos:column="26"/></condition><then pos:line="182" pos:column="26">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="183" pos:column="17">p<pos:position pos:line="183" pos:column="18"/></name><operator pos:line="183" pos:column="18">-&gt;<pos:position pos:line="183" pos:column="23"/></operator><name pos:line="183" pos:column="20">name<pos:position pos:line="183" pos:column="24"/></name></name> <operator pos:line="183" pos:column="25">=<pos:position pos:line="183" pos:column="26"/></operator> <call><name pos:line="183" pos:column="27">xstrdup<pos:position pos:line="183" pos:column="34"/></name><argument_list pos:line="183" pos:column="34">(<argument><expr><name pos:line="183" pos:column="35">token<pos:position pos:line="183" pos:column="40"/></name> <operator pos:line="183" pos:column="41">+<pos:position pos:line="183" pos:column="42"/></operator> <literal type="number" pos:line="183" pos:column="43">5<pos:position pos:line="183" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="183" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="183" pos:column="46"/></expr_stmt></block></then></if>
        }<pos:position pos:line="184" pos:column="10"/></block></then></if></elseif> <elseif pos:line="184" pos:column="11">else <if pos:line="184" pos:column="16">if <condition pos:line="184" pos:column="19">(<expr><operator pos:line="184" pos:column="20">!<pos:position pos:line="184" pos:column="21"/></operator><call><name pos:line="184" pos:column="21">strncasecmp<pos:position pos:line="184" pos:column="32"/></name><argument_list pos:line="184" pos:column="32">(<argument><expr><name pos:line="184" pos:column="33">token<pos:position pos:line="184" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="40">"forceddomain="<pos:position pos:line="184" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="184" pos:column="57">13<pos:position pos:line="184" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="184" pos:column="61"/></condition><then pos:line="184" pos:column="61"> <block pos:line="184" pos:column="62">{
            <expr_stmt><expr><call><name pos:line="185" pos:column="13">safe_free<pos:position pos:line="185" pos:column="22"/></name><argument_list pos:line="185" pos:column="22">(<argument><expr><name><name pos:line="185" pos:column="23">p<pos:position pos:line="185" pos:column="24"/></name><operator pos:line="185" pos:column="24">-&gt;<pos:position pos:line="185" pos:column="29"/></operator><name pos:line="185" pos:column="26">domain<pos:position pos:line="185" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="185" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="185" pos:column="34"/></expr_stmt>

            <if pos:line="187" pos:column="13">if <condition pos:line="187" pos:column="16">(<expr><name><name pos:line="187" pos:column="17">token<pos:position pos:line="187" pos:column="22"/></name><index pos:line="187" pos:column="22">[<expr><literal type="number" pos:line="187" pos:column="23">13<pos:position pos:line="187" pos:column="25"/></literal></expr>]<pos:position pos:line="187" pos:column="26"/></index></name></expr>)<pos:position pos:line="187" pos:column="27"/></condition><then pos:line="187" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="188" pos:column="17">p<pos:position pos:line="188" pos:column="18"/></name><operator pos:line="188" pos:column="18">-&gt;<pos:position pos:line="188" pos:column="23"/></operator><name pos:line="188" pos:column="20">domain<pos:position pos:line="188" pos:column="26"/></name></name> <operator pos:line="188" pos:column="27">=<pos:position pos:line="188" pos:column="28"/></operator> <call><name pos:line="188" pos:column="29">xstrdup<pos:position pos:line="188" pos:column="36"/></name><argument_list pos:line="188" pos:column="36">(<argument><expr><name pos:line="188" pos:column="37">token<pos:position pos:line="188" pos:column="42"/></name> <operator pos:line="188" pos:column="43">+<pos:position pos:line="188" pos:column="44"/></operator> <literal type="number" pos:line="188" pos:column="45">13<pos:position pos:line="188" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="49"/></expr_stmt></block></then></if>

<cpp:if pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">if<pos:position pos:line="190" pos:column="4"/></cpp:directive> <expr><name pos:line="190" pos:column="5">USE_SSL<pos:position pos:line="190" pos:column="12"/></name></expr></cpp:if>

        }<pos:position pos:line="192" pos:column="10"/></block></then></if></elseif> <elseif pos:line="192" pos:column="11">else <if pos:line="192" pos:column="16">if <condition pos:line="192" pos:column="19">(<expr><call><name pos:line="192" pos:column="20">strcmp<pos:position pos:line="192" pos:column="26"/></name><argument_list pos:line="192" pos:column="26">(<argument><expr><name pos:line="192" pos:column="27">token<pos:position pos:line="192" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="192" pos:column="34">"ssl"<pos:position pos:line="192" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="40"/></argument_list></call> <operator pos:line="192" pos:column="41">==<pos:position pos:line="192" pos:column="43"/></operator> <literal type="number" pos:line="192" pos:column="44">0<pos:position pos:line="192" pos:column="45"/></literal></expr>)<pos:position pos:line="192" pos:column="46"/></condition><then pos:line="192" pos:column="46"> <block pos:line="192" pos:column="47">{
            <expr_stmt><expr><name><name pos:line="193" pos:column="13">p<pos:position pos:line="193" pos:column="14"/></name><operator pos:line="193" pos:column="14">-&gt;<pos:position pos:line="193" pos:column="19"/></operator><name pos:line="193" pos:column="16">use_ssl<pos:position pos:line="193" pos:column="23"/></name></name> <operator pos:line="193" pos:column="24">=<pos:position pos:line="193" pos:column="25"/></operator> <literal type="number" pos:line="193" pos:column="26">1<pos:position pos:line="193" pos:column="27"/></literal></expr>;<pos:position pos:line="193" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="194" pos:column="10"/></block></then></if></elseif> <elseif pos:line="194" pos:column="11">else <if pos:line="194" pos:column="16">if <condition pos:line="194" pos:column="19">(<expr><call><name pos:line="194" pos:column="20">strncmp<pos:position pos:line="194" pos:column="27"/></name><argument_list pos:line="194" pos:column="27">(<argument><expr><name pos:line="194" pos:column="28">token<pos:position pos:line="194" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="194" pos:column="35">"sslcert="<pos:position pos:line="194" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="194" pos:column="47">8<pos:position pos:line="194" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="194" pos:column="49"/></argument_list></call> <operator pos:line="194" pos:column="50">==<pos:position pos:line="194" pos:column="52"/></operator> <literal type="number" pos:line="194" pos:column="53">0<pos:position pos:line="194" pos:column="54"/></literal></expr>)<pos:position pos:line="194" pos:column="55"/></condition><then pos:line="194" pos:column="55"> <block pos:line="194" pos:column="56">{
            <expr_stmt><expr><call><name pos:line="195" pos:column="13">safe_free<pos:position pos:line="195" pos:column="22"/></name><argument_list pos:line="195" pos:column="22">(<argument><expr><name><name pos:line="195" pos:column="23">p<pos:position pos:line="195" pos:column="24"/></name><operator pos:line="195" pos:column="24">-&gt;<pos:position pos:line="195" pos:column="29"/></operator><name pos:line="195" pos:column="26">sslcert<pos:position pos:line="195" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="195" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="196" pos:column="13">p<pos:position pos:line="196" pos:column="14"/></name><operator pos:line="196" pos:column="14">-&gt;<pos:position pos:line="196" pos:column="19"/></operator><name pos:line="196" pos:column="16">sslcert<pos:position pos:line="196" pos:column="23"/></name></name> <operator pos:line="196" pos:column="24">=<pos:position pos:line="196" pos:column="25"/></operator> <call><name pos:line="196" pos:column="26">xstrdup<pos:position pos:line="196" pos:column="33"/></name><argument_list pos:line="196" pos:column="33">(<argument><expr><name pos:line="196" pos:column="34">token<pos:position pos:line="196" pos:column="39"/></name> <operator pos:line="196" pos:column="40">+<pos:position pos:line="196" pos:column="41"/></operator> <literal type="number" pos:line="196" pos:column="42">8<pos:position pos:line="196" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="197" pos:column="10"/></block></then></if></elseif> <elseif pos:line="197" pos:column="11">else <if pos:line="197" pos:column="16">if <condition pos:line="197" pos:column="19">(<expr><call><name pos:line="197" pos:column="20">strncmp<pos:position pos:line="197" pos:column="27"/></name><argument_list pos:line="197" pos:column="27">(<argument><expr><name pos:line="197" pos:column="28">token<pos:position pos:line="197" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="197" pos:column="35">"sslkey="<pos:position pos:line="197" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="197" pos:column="46">7<pos:position pos:line="197" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="197" pos:column="48"/></argument_list></call> <operator pos:line="197" pos:column="49">==<pos:position pos:line="197" pos:column="51"/></operator> <literal type="number" pos:line="197" pos:column="52">0<pos:position pos:line="197" pos:column="53"/></literal></expr>)<pos:position pos:line="197" pos:column="54"/></condition><then pos:line="197" pos:column="54"> <block pos:line="197" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="198" pos:column="13">safe_free<pos:position pos:line="198" pos:column="22"/></name><argument_list pos:line="198" pos:column="22">(<argument><expr><name><name pos:line="198" pos:column="23">p<pos:position pos:line="198" pos:column="24"/></name><operator pos:line="198" pos:column="24">-&gt;<pos:position pos:line="198" pos:column="29"/></operator><name pos:line="198" pos:column="26">sslkey<pos:position pos:line="198" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="198" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="199" pos:column="13">p<pos:position pos:line="199" pos:column="14"/></name><operator pos:line="199" pos:column="14">-&gt;<pos:position pos:line="199" pos:column="19"/></operator><name pos:line="199" pos:column="16">sslkey<pos:position pos:line="199" pos:column="22"/></name></name> <operator pos:line="199" pos:column="23">=<pos:position pos:line="199" pos:column="24"/></operator> <call><name pos:line="199" pos:column="25">xstrdup<pos:position pos:line="199" pos:column="32"/></name><argument_list pos:line="199" pos:column="32">(<argument><expr><name pos:line="199" pos:column="33">token<pos:position pos:line="199" pos:column="38"/></name> <operator pos:line="199" pos:column="39">+<pos:position pos:line="199" pos:column="40"/></operator> <literal type="number" pos:line="199" pos:column="41">7<pos:position pos:line="199" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="199" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="200" pos:column="10"/></block></then></if></elseif> <elseif pos:line="200" pos:column="11">else <if pos:line="200" pos:column="16">if <condition pos:line="200" pos:column="19">(<expr><call><name pos:line="200" pos:column="20">strncmp<pos:position pos:line="200" pos:column="27"/></name><argument_list pos:line="200" pos:column="27">(<argument><expr><name pos:line="200" pos:column="28">token<pos:position pos:line="200" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="200" pos:column="35">"sslversion="<pos:position pos:line="200" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="200" pos:column="50">11<pos:position pos:line="200" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="200" pos:column="53"/></argument_list></call> <operator pos:line="200" pos:column="54">==<pos:position pos:line="200" pos:column="56"/></operator> <literal type="number" pos:line="200" pos:column="57">0<pos:position pos:line="200" pos:column="58"/></literal></expr>)<pos:position pos:line="200" pos:column="59"/></condition><then pos:line="200" pos:column="59"> <block pos:line="200" pos:column="60">{
            <expr_stmt><expr><name><name pos:line="201" pos:column="13">p<pos:position pos:line="201" pos:column="14"/></name><operator pos:line="201" pos:column="14">-&gt;<pos:position pos:line="201" pos:column="19"/></operator><name pos:line="201" pos:column="16">sslversion<pos:position pos:line="201" pos:column="26"/></name></name> <operator pos:line="201" pos:column="27">=<pos:position pos:line="201" pos:column="28"/></operator> <call><name pos:line="201" pos:column="29">xatoi<pos:position pos:line="201" pos:column="34"/></name><argument_list pos:line="201" pos:column="34">(<argument><expr><name pos:line="201" pos:column="35">token<pos:position pos:line="201" pos:column="40"/></name> <operator pos:line="201" pos:column="41">+<pos:position pos:line="201" pos:column="42"/></operator> <literal type="number" pos:line="201" pos:column="43">11<pos:position pos:line="201" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="202" pos:column="10"/></block></then></if></elseif> <elseif pos:line="202" pos:column="11">else <if pos:line="202" pos:column="16">if <condition pos:line="202" pos:column="19">(<expr><call><name pos:line="202" pos:column="20">strncmp<pos:position pos:line="202" pos:column="27"/></name><argument_list pos:line="202" pos:column="27">(<argument><expr><name pos:line="202" pos:column="28">token<pos:position pos:line="202" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="35">"ssloptions="<pos:position pos:line="202" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="202" pos:column="50">11<pos:position pos:line="202" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="53"/></argument_list></call> <operator pos:line="202" pos:column="54">==<pos:position pos:line="202" pos:column="56"/></operator> <literal type="number" pos:line="202" pos:column="57">0<pos:position pos:line="202" pos:column="58"/></literal></expr>)<pos:position pos:line="202" pos:column="59"/></condition><then pos:line="202" pos:column="59"> <block pos:line="202" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="203" pos:column="13">safe_free<pos:position pos:line="203" pos:column="22"/></name><argument_list pos:line="203" pos:column="22">(<argument><expr><name><name pos:line="203" pos:column="23">p<pos:position pos:line="203" pos:column="24"/></name><operator pos:line="203" pos:column="24">-&gt;<pos:position pos:line="203" pos:column="29"/></operator><name pos:line="203" pos:column="26">ssloptions<pos:position pos:line="203" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="203" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="204" pos:column="13">p<pos:position pos:line="204" pos:column="14"/></name><operator pos:line="204" pos:column="14">-&gt;<pos:position pos:line="204" pos:column="19"/></operator><name pos:line="204" pos:column="16">ssloptions<pos:position pos:line="204" pos:column="26"/></name></name> <operator pos:line="204" pos:column="27">=<pos:position pos:line="204" pos:column="28"/></operator> <call><name pos:line="204" pos:column="29">xstrdup<pos:position pos:line="204" pos:column="36"/></name><argument_list pos:line="204" pos:column="36">(<argument><expr><name pos:line="204" pos:column="37">token<pos:position pos:line="204" pos:column="42"/></name> <operator pos:line="204" pos:column="43">+<pos:position pos:line="204" pos:column="44"/></operator> <literal type="number" pos:line="204" pos:column="45">11<pos:position pos:line="204" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="204" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="205" pos:column="10"/></block></then></if></elseif> <elseif pos:line="205" pos:column="11">else <if pos:line="205" pos:column="16">if <condition pos:line="205" pos:column="19">(<expr><call><name pos:line="205" pos:column="20">strncmp<pos:position pos:line="205" pos:column="27"/></name><argument_list pos:line="205" pos:column="27">(<argument><expr><name pos:line="205" pos:column="28">token<pos:position pos:line="205" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="205" pos:column="35">"sslcipher="<pos:position pos:line="205" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="205" pos:column="49">10<pos:position pos:line="205" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="205" pos:column="52"/></argument_list></call> <operator pos:line="205" pos:column="53">==<pos:position pos:line="205" pos:column="55"/></operator> <literal type="number" pos:line="205" pos:column="56">0<pos:position pos:line="205" pos:column="57"/></literal></expr>)<pos:position pos:line="205" pos:column="58"/></condition><then pos:line="205" pos:column="58"> <block pos:line="205" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="206" pos:column="13">safe_free<pos:position pos:line="206" pos:column="22"/></name><argument_list pos:line="206" pos:column="22">(<argument><expr><name><name pos:line="206" pos:column="23">p<pos:position pos:line="206" pos:column="24"/></name><operator pos:line="206" pos:column="24">-&gt;<pos:position pos:line="206" pos:column="29"/></operator><name pos:line="206" pos:column="26">sslcipher<pos:position pos:line="206" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="206" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="207" pos:column="13">p<pos:position pos:line="207" pos:column="14"/></name><operator pos:line="207" pos:column="14">-&gt;<pos:position pos:line="207" pos:column="19"/></operator><name pos:line="207" pos:column="16">sslcipher<pos:position pos:line="207" pos:column="25"/></name></name> <operator pos:line="207" pos:column="26">=<pos:position pos:line="207" pos:column="27"/></operator> <call><name pos:line="207" pos:column="28">xstrdup<pos:position pos:line="207" pos:column="35"/></name><argument_list pos:line="207" pos:column="35">(<argument><expr><name pos:line="207" pos:column="36">token<pos:position pos:line="207" pos:column="41"/></name> <operator pos:line="207" pos:column="42">+<pos:position pos:line="207" pos:column="43"/></operator> <literal type="number" pos:line="207" pos:column="44">10<pos:position pos:line="207" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="208" pos:column="10"/></block></then></if></elseif> <elseif pos:line="208" pos:column="11">else <if pos:line="208" pos:column="16">if <condition pos:line="208" pos:column="19">(<expr><call><name pos:line="208" pos:column="20">strncmp<pos:position pos:line="208" pos:column="27"/></name><argument_list pos:line="208" pos:column="27">(<argument><expr><name pos:line="208" pos:column="28">token<pos:position pos:line="208" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="35">"sslcafile="<pos:position pos:line="208" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="208" pos:column="49">10<pos:position pos:line="208" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="52"/></argument_list></call> <operator pos:line="208" pos:column="53">==<pos:position pos:line="208" pos:column="55"/></operator> <literal type="number" pos:line="208" pos:column="56">0<pos:position pos:line="208" pos:column="57"/></literal></expr>)<pos:position pos:line="208" pos:column="58"/></condition><then pos:line="208" pos:column="58"> <block pos:line="208" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="209" pos:column="13">safe_free<pos:position pos:line="209" pos:column="22"/></name><argument_list pos:line="209" pos:column="22">(<argument><expr><name><name pos:line="209" pos:column="23">p<pos:position pos:line="209" pos:column="24"/></name><operator pos:line="209" pos:column="24">-&gt;<pos:position pos:line="209" pos:column="29"/></operator><name pos:line="209" pos:column="26">sslcafile<pos:position pos:line="209" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="209" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="210" pos:column="13">p<pos:position pos:line="210" pos:column="14"/></name><operator pos:line="210" pos:column="14">-&gt;<pos:position pos:line="210" pos:column="19"/></operator><name pos:line="210" pos:column="16">sslcafile<pos:position pos:line="210" pos:column="25"/></name></name> <operator pos:line="210" pos:column="26">=<pos:position pos:line="210" pos:column="27"/></operator> <call><name pos:line="210" pos:column="28">xstrdup<pos:position pos:line="210" pos:column="35"/></name><argument_list pos:line="210" pos:column="35">(<argument><expr><name pos:line="210" pos:column="36">token<pos:position pos:line="210" pos:column="41"/></name> <operator pos:line="210" pos:column="42">+<pos:position pos:line="210" pos:column="43"/></operator> <literal type="number" pos:line="210" pos:column="44">10<pos:position pos:line="210" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="210" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="211" pos:column="10"/></block></then></if></elseif> <elseif pos:line="211" pos:column="11">else <if pos:line="211" pos:column="16">if <condition pos:line="211" pos:column="19">(<expr><call><name pos:line="211" pos:column="20">strncmp<pos:position pos:line="211" pos:column="27"/></name><argument_list pos:line="211" pos:column="27">(<argument><expr><name pos:line="211" pos:column="28">token<pos:position pos:line="211" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="211" pos:column="35">"sslcapath="<pos:position pos:line="211" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="211" pos:column="49">10<pos:position pos:line="211" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="211" pos:column="52"/></argument_list></call> <operator pos:line="211" pos:column="53">==<pos:position pos:line="211" pos:column="55"/></operator> <literal type="number" pos:line="211" pos:column="56">0<pos:position pos:line="211" pos:column="57"/></literal></expr>)<pos:position pos:line="211" pos:column="58"/></condition><then pos:line="211" pos:column="58"> <block pos:line="211" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="212" pos:column="13">safe_free<pos:position pos:line="212" pos:column="22"/></name><argument_list pos:line="212" pos:column="22">(<argument><expr><name><name pos:line="212" pos:column="23">p<pos:position pos:line="212" pos:column="24"/></name><operator pos:line="212" pos:column="24">-&gt;<pos:position pos:line="212" pos:column="29"/></operator><name pos:line="212" pos:column="26">sslcapath<pos:position pos:line="212" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="212" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="212" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="213" pos:column="13">p<pos:position pos:line="213" pos:column="14"/></name><operator pos:line="213" pos:column="14">-&gt;<pos:position pos:line="213" pos:column="19"/></operator><name pos:line="213" pos:column="16">sslcapath<pos:position pos:line="213" pos:column="25"/></name></name> <operator pos:line="213" pos:column="26">=<pos:position pos:line="213" pos:column="27"/></operator> <call><name pos:line="213" pos:column="28">xstrdup<pos:position pos:line="213" pos:column="35"/></name><argument_list pos:line="213" pos:column="35">(<argument><expr><name pos:line="213" pos:column="36">token<pos:position pos:line="213" pos:column="41"/></name> <operator pos:line="213" pos:column="42">+<pos:position pos:line="213" pos:column="43"/></operator> <literal type="number" pos:line="213" pos:column="44">10<pos:position pos:line="213" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="213" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="48"/></expr_stmt>
        }<pos:position pos:line="214" pos:column="10"/></block></then></if></elseif> <elseif pos:line="214" pos:column="11">else <if pos:line="214" pos:column="16">if <condition pos:line="214" pos:column="19">(<expr><call><name pos:line="214" pos:column="20">strncmp<pos:position pos:line="214" pos:column="27"/></name><argument_list pos:line="214" pos:column="27">(<argument><expr><name pos:line="214" pos:column="28">token<pos:position pos:line="214" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="35">"sslcrlfile="<pos:position pos:line="214" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="214" pos:column="50">11<pos:position pos:line="214" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="53"/></argument_list></call> <operator pos:line="214" pos:column="54">==<pos:position pos:line="214" pos:column="56"/></operator> <literal type="number" pos:line="214" pos:column="57">0<pos:position pos:line="214" pos:column="58"/></literal></expr>)<pos:position pos:line="214" pos:column="59"/></condition><then pos:line="214" pos:column="59"> <block pos:line="214" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="215" pos:column="13">safe_free<pos:position pos:line="215" pos:column="22"/></name><argument_list pos:line="215" pos:column="22">(<argument><expr><name><name pos:line="215" pos:column="23">p<pos:position pos:line="215" pos:column="24"/></name><operator pos:line="215" pos:column="24">-&gt;<pos:position pos:line="215" pos:column="29"/></operator><name pos:line="215" pos:column="26">sslcrlfile<pos:position pos:line="215" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="215" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="216" pos:column="13">p<pos:position pos:line="216" pos:column="14"/></name><operator pos:line="216" pos:column="14">-&gt;<pos:position pos:line="216" pos:column="19"/></operator><name pos:line="216" pos:column="16">sslcrlfile<pos:position pos:line="216" pos:column="26"/></name></name> <operator pos:line="216" pos:column="27">=<pos:position pos:line="216" pos:column="28"/></operator> <call><name pos:line="216" pos:column="29">xstrdup<pos:position pos:line="216" pos:column="36"/></name><argument_list pos:line="216" pos:column="36">(<argument><expr><name pos:line="216" pos:column="37">token<pos:position pos:line="216" pos:column="42"/></name> <operator pos:line="216" pos:column="43">+<pos:position pos:line="216" pos:column="44"/></operator> <literal type="number" pos:line="216" pos:column="45">11<pos:position pos:line="216" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="217" pos:column="10"/></block></then></if></elseif> <elseif pos:line="217" pos:column="11">else <if pos:line="217" pos:column="16">if <condition pos:line="217" pos:column="19">(<expr><call><name pos:line="217" pos:column="20">strncmp<pos:position pos:line="217" pos:column="27"/></name><argument_list pos:line="217" pos:column="27">(<argument><expr><name pos:line="217" pos:column="28">token<pos:position pos:line="217" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="217" pos:column="35">"sslflags="<pos:position pos:line="217" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="217" pos:column="48">9<pos:position pos:line="217" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="50"/></argument_list></call> <operator pos:line="217" pos:column="51">==<pos:position pos:line="217" pos:column="53"/></operator> <literal type="number" pos:line="217" pos:column="54">0<pos:position pos:line="217" pos:column="55"/></literal></expr>)<pos:position pos:line="217" pos:column="56"/></condition><then pos:line="217" pos:column="56"> <block pos:line="217" pos:column="57">{
            <expr_stmt><expr><call><name pos:line="218" pos:column="13">safe_free<pos:position pos:line="218" pos:column="22"/></name><argument_list pos:line="218" pos:column="22">(<argument><expr><name><name pos:line="218" pos:column="23">p<pos:position pos:line="218" pos:column="24"/></name><operator pos:line="218" pos:column="24">-&gt;<pos:position pos:line="218" pos:column="29"/></operator><name pos:line="218" pos:column="26">sslflags<pos:position pos:line="218" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="218" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="218" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="219" pos:column="13">p<pos:position pos:line="219" pos:column="14"/></name><operator pos:line="219" pos:column="14">-&gt;<pos:position pos:line="219" pos:column="19"/></operator><name pos:line="219" pos:column="16">sslflags<pos:position pos:line="219" pos:column="24"/></name></name> <operator pos:line="219" pos:column="25">=<pos:position pos:line="219" pos:column="26"/></operator> <call><name pos:line="219" pos:column="27">xstrdup<pos:position pos:line="219" pos:column="34"/></name><argument_list pos:line="219" pos:column="34">(<argument><expr><name pos:line="219" pos:column="35">token<pos:position pos:line="219" pos:column="40"/></name> <operator pos:line="219" pos:column="41">+<pos:position pos:line="219" pos:column="42"/></operator> <literal type="number" pos:line="219" pos:column="43">9<pos:position pos:line="219" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="219" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="220" pos:column="10"/></block></then></if></elseif> <elseif pos:line="220" pos:column="11">else <if pos:line="220" pos:column="16">if <condition pos:line="220" pos:column="19">(<expr><call><name pos:line="220" pos:column="20">strncmp<pos:position pos:line="220" pos:column="27"/></name><argument_list pos:line="220" pos:column="27">(<argument><expr><name pos:line="220" pos:column="28">token<pos:position pos:line="220" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="220" pos:column="35">"ssldomain="<pos:position pos:line="220" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="220" pos:column="49">10<pos:position pos:line="220" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="220" pos:column="52"/></argument_list></call> <operator pos:line="220" pos:column="53">==<pos:position pos:line="220" pos:column="55"/></operator> <literal type="number" pos:line="220" pos:column="56">0<pos:position pos:line="220" pos:column="57"/></literal></expr>)<pos:position pos:line="220" pos:column="58"/></condition><then pos:line="220" pos:column="58"> <block pos:line="220" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="221" pos:column="13">safe_free<pos:position pos:line="221" pos:column="22"/></name><argument_list pos:line="221" pos:column="22">(<argument><expr><name><name pos:line="221" pos:column="23">p<pos:position pos:line="221" pos:column="24"/></name><operator pos:line="221" pos:column="24">-&gt;<pos:position pos:line="221" pos:column="29"/></operator><name pos:line="221" pos:column="26">ssldomain<pos:position pos:line="221" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="221" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="222" pos:column="13">p<pos:position pos:line="222" pos:column="14"/></name><operator pos:line="222" pos:column="14">-&gt;<pos:position pos:line="222" pos:column="19"/></operator><name pos:line="222" pos:column="16">ssldomain<pos:position pos:line="222" pos:column="25"/></name></name> <operator pos:line="222" pos:column="26">=<pos:position pos:line="222" pos:column="27"/></operator> <call><name pos:line="222" pos:column="28">xstrdup<pos:position pos:line="222" pos:column="35"/></name><argument_list pos:line="222" pos:column="35">(<argument><expr><name pos:line="222" pos:column="36">token<pos:position pos:line="222" pos:column="41"/></name> <operator pos:line="222" pos:column="42">+<pos:position pos:line="222" pos:column="43"/></operator> <literal type="number" pos:line="222" pos:column="44">10<pos:position pos:line="222" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="222" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="222" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="223" pos:column="1">#<cpp:directive pos:line="223" pos:column="2">endif<pos:position pos:line="223" pos:column="7"/></cpp:directive></cpp:endif>

        }<pos:position pos:line="225" pos:column="10"/></block></then></if></elseif> <elseif pos:line="225" pos:column="11">else <if pos:line="225" pos:column="16">if <condition pos:line="225" pos:column="19">(<expr><call><name pos:line="225" pos:column="20">strcmp<pos:position pos:line="225" pos:column="26"/></name><argument_list pos:line="225" pos:column="26">(<argument><expr><name pos:line="225" pos:column="27">token<pos:position pos:line="225" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="225" pos:column="34">"front-end-https"<pos:position pos:line="225" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="225" pos:column="52"/></argument_list></call> <operator pos:line="225" pos:column="53">==<pos:position pos:line="225" pos:column="55"/></operator> <literal type="number" pos:line="225" pos:column="56">0<pos:position pos:line="225" pos:column="57"/></literal></expr>)<pos:position pos:line="225" pos:column="58"/></condition><then pos:line="225" pos:column="58"> <block pos:line="225" pos:column="59">{
            <expr_stmt><expr><name><name pos:line="226" pos:column="13">p<pos:position pos:line="226" pos:column="14"/></name><operator pos:line="226" pos:column="14">-&gt;<pos:position pos:line="226" pos:column="19"/></operator><name pos:line="226" pos:column="16">front_end_https<pos:position pos:line="226" pos:column="31"/></name></name> <operator pos:line="226" pos:column="32">=<pos:position pos:line="226" pos:column="33"/></operator> <literal type="number" pos:line="226" pos:column="34">1<pos:position pos:line="226" pos:column="35"/></literal></expr>;<pos:position pos:line="226" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="227" pos:column="10"/></block></then></if></elseif> <elseif pos:line="227" pos:column="11">else <if pos:line="227" pos:column="16">if <condition pos:line="227" pos:column="19">(<expr><call><name pos:line="227" pos:column="20">strcmp<pos:position pos:line="227" pos:column="26"/></name><argument_list pos:line="227" pos:column="26">(<argument><expr><name pos:line="227" pos:column="27">token<pos:position pos:line="227" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="227" pos:column="34">"front-end-https=on"<pos:position pos:line="227" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="227" pos:column="55"/></argument_list></call> <operator pos:line="227" pos:column="56">==<pos:position pos:line="227" pos:column="58"/></operator> <literal type="number" pos:line="227" pos:column="59">0<pos:position pos:line="227" pos:column="60"/></literal></expr>)<pos:position pos:line="227" pos:column="61"/></condition><then pos:line="227" pos:column="61"> <block pos:line="227" pos:column="62">{
            <expr_stmt><expr><name><name pos:line="228" pos:column="13">p<pos:position pos:line="228" pos:column="14"/></name><operator pos:line="228" pos:column="14">-&gt;<pos:position pos:line="228" pos:column="19"/></operator><name pos:line="228" pos:column="16">front_end_https<pos:position pos:line="228" pos:column="31"/></name></name> <operator pos:line="228" pos:column="32">=<pos:position pos:line="228" pos:column="33"/></operator> <literal type="number" pos:line="228" pos:column="34">1<pos:position pos:line="228" pos:column="35"/></literal></expr>;<pos:position pos:line="228" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="229" pos:column="10"/></block></then></if></elseif> <elseif pos:line="229" pos:column="11">else <if pos:line="229" pos:column="16">if <condition pos:line="229" pos:column="19">(<expr><call><name pos:line="229" pos:column="20">strcmp<pos:position pos:line="229" pos:column="26"/></name><argument_list pos:line="229" pos:column="26">(<argument><expr><name pos:line="229" pos:column="27">token<pos:position pos:line="229" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="229" pos:column="34">"front-end-https=auto"<pos:position pos:line="229" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="57"/></argument_list></call> <operator pos:line="229" pos:column="58">==<pos:position pos:line="229" pos:column="60"/></operator> <literal type="number" pos:line="229" pos:column="61">0<pos:position pos:line="229" pos:column="62"/></literal></expr>)<pos:position pos:line="229" pos:column="63"/></condition><then pos:line="229" pos:column="63"> <block pos:line="229" pos:column="64">{
            <expr_stmt><expr><name><name pos:line="230" pos:column="13">p<pos:position pos:line="230" pos:column="14"/></name><operator pos:line="230" pos:column="14">-&gt;<pos:position pos:line="230" pos:column="19"/></operator><name pos:line="230" pos:column="16">front_end_https<pos:position pos:line="230" pos:column="31"/></name></name> <operator pos:line="230" pos:column="32">=<pos:position pos:line="230" pos:column="33"/></operator> <literal type="number" pos:line="230" pos:column="34">2<pos:position pos:line="230" pos:column="35"/></literal></expr>;<pos:position pos:line="230" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="231" pos:column="10"/></block></then></if></elseif> <elseif pos:line="231" pos:column="11">else <if pos:line="231" pos:column="16">if <condition pos:line="231" pos:column="19">(<expr><call><name pos:line="231" pos:column="20">strcmp<pos:position pos:line="231" pos:column="26"/></name><argument_list pos:line="231" pos:column="26">(<argument><expr><name pos:line="231" pos:column="27">token<pos:position pos:line="231" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="34">"connection-auth=off"<pos:position pos:line="231" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="231" pos:column="56"/></argument_list></call> <operator pos:line="231" pos:column="57">==<pos:position pos:line="231" pos:column="59"/></operator> <literal type="number" pos:line="231" pos:column="60">0<pos:position pos:line="231" pos:column="61"/></literal></expr>)<pos:position pos:line="231" pos:column="62"/></condition><then pos:line="231" pos:column="62"> <block pos:line="231" pos:column="63">{
            <expr_stmt><expr><name><name pos:line="232" pos:column="13">p<pos:position pos:line="232" pos:column="14"/></name><operator pos:line="232" pos:column="14">-&gt;<pos:position pos:line="232" pos:column="19"/></operator><name pos:line="232" pos:column="16">connection_auth<pos:position pos:line="232" pos:column="31"/></name></name> <operator pos:line="232" pos:column="32">=<pos:position pos:line="232" pos:column="33"/></operator> <literal type="number" pos:line="232" pos:column="34">0<pos:position pos:line="232" pos:column="35"/></literal></expr>;<pos:position pos:line="232" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="233" pos:column="10"/></block></then></if></elseif> <elseif pos:line="233" pos:column="11">else <if pos:line="233" pos:column="16">if <condition pos:line="233" pos:column="19">(<expr><call><name pos:line="233" pos:column="20">strcmp<pos:position pos:line="233" pos:column="26"/></name><argument_list pos:line="233" pos:column="26">(<argument><expr><name pos:line="233" pos:column="27">token<pos:position pos:line="233" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="233" pos:column="34">"connection-auth"<pos:position pos:line="233" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="233" pos:column="52"/></argument_list></call> <operator pos:line="233" pos:column="53">==<pos:position pos:line="233" pos:column="55"/></operator> <literal type="number" pos:line="233" pos:column="56">0<pos:position pos:line="233" pos:column="57"/></literal></expr>)<pos:position pos:line="233" pos:column="58"/></condition><then pos:line="233" pos:column="58"> <block pos:line="233" pos:column="59">{
            <expr_stmt><expr><name><name pos:line="234" pos:column="13">p<pos:position pos:line="234" pos:column="14"/></name><operator pos:line="234" pos:column="14">-&gt;<pos:position pos:line="234" pos:column="19"/></operator><name pos:line="234" pos:column="16">connection_auth<pos:position pos:line="234" pos:column="31"/></name></name> <operator pos:line="234" pos:column="32">=<pos:position pos:line="234" pos:column="33"/></operator> <literal type="number" pos:line="234" pos:column="34">1<pos:position pos:line="234" pos:column="35"/></literal></expr>;<pos:position pos:line="234" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="235" pos:column="10"/></block></then></if></elseif> <elseif pos:line="235" pos:column="11">else <if pos:line="235" pos:column="16">if <condition pos:line="235" pos:column="19">(<expr><call><name pos:line="235" pos:column="20">strcmp<pos:position pos:line="235" pos:column="26"/></name><argument_list pos:line="235" pos:column="26">(<argument><expr><name pos:line="235" pos:column="27">token<pos:position pos:line="235" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="235" pos:column="34">"connection-auth=on"<pos:position pos:line="235" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="235" pos:column="55"/></argument_list></call> <operator pos:line="235" pos:column="56">==<pos:position pos:line="235" pos:column="58"/></operator> <literal type="number" pos:line="235" pos:column="59">0<pos:position pos:line="235" pos:column="60"/></literal></expr>)<pos:position pos:line="235" pos:column="61"/></condition><then pos:line="235" pos:column="61"> <block pos:line="235" pos:column="62">{
            <expr_stmt><expr><name><name pos:line="236" pos:column="13">p<pos:position pos:line="236" pos:column="14"/></name><operator pos:line="236" pos:column="14">-&gt;<pos:position pos:line="236" pos:column="19"/></operator><name pos:line="236" pos:column="16">connection_auth<pos:position pos:line="236" pos:column="31"/></name></name> <operator pos:line="236" pos:column="32">=<pos:position pos:line="236" pos:column="33"/></operator> <literal type="number" pos:line="236" pos:column="34">1<pos:position pos:line="236" pos:column="35"/></literal></expr>;<pos:position pos:line="236" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="237" pos:column="10"/></block></then></if></elseif> <elseif pos:line="237" pos:column="11">else <if pos:line="237" pos:column="16">if <condition pos:line="237" pos:column="19">(<expr><call><name pos:line="237" pos:column="20">strcmp<pos:position pos:line="237" pos:column="26"/></name><argument_list pos:line="237" pos:column="26">(<argument><expr><name pos:line="237" pos:column="27">token<pos:position pos:line="237" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="237" pos:column="34">"connection-auth=auto"<pos:position pos:line="237" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="57"/></argument_list></call> <operator pos:line="237" pos:column="58">==<pos:position pos:line="237" pos:column="60"/></operator> <literal type="number" pos:line="237" pos:column="61">0<pos:position pos:line="237" pos:column="62"/></literal></expr>)<pos:position pos:line="237" pos:column="63"/></condition><then pos:line="237" pos:column="63"> <block pos:line="237" pos:column="64">{
            <expr_stmt><expr><name><name pos:line="238" pos:column="13">p<pos:position pos:line="238" pos:column="14"/></name><operator pos:line="238" pos:column="14">-&gt;<pos:position pos:line="238" pos:column="19"/></operator><name pos:line="238" pos:column="16">connection_auth<pos:position pos:line="238" pos:column="31"/></name></name> <operator pos:line="238" pos:column="32">=<pos:position pos:line="238" pos:column="33"/></operator> <literal type="number" pos:line="238" pos:column="34">2<pos:position pos:line="238" pos:column="35"/></literal></expr>;<pos:position pos:line="238" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="239" pos:column="10"/></block></then></if></elseif> <else pos:line="239" pos:column="11">else <block pos:line="239" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="240" pos:column="13">debugs<pos:position pos:line="240" pos:column="19"/></name><argument_list pos:line="240" pos:column="19">(<argument><expr><literal type="number" pos:line="240" pos:column="20">3<pos:position pos:line="240" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="240" pos:column="23">DBG_CRITICAL<pos:position pos:line="240" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="240" pos:column="37">"parse_peer: token='"<pos:position pos:line="240" pos:column="58"/></literal> <operator pos:line="240" pos:column="59">&lt;&lt;<pos:position pos:line="240" pos:column="67"/></operator> <name pos:line="240" pos:column="62">token<pos:position pos:line="240" pos:column="67"/></name> <operator pos:line="240" pos:column="68">&lt;&lt;<pos:position pos:line="240" pos:column="76"/></operator> <literal type="string" pos:line="240" pos:column="71">"'"<pos:position pos:line="240" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="240" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="241" pos:column="13">self_destruct<pos:position pos:line="241" pos:column="26"/></name><argument_list pos:line="241" pos:column="26">()<pos:position pos:line="241" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="241" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="242" pos:column="10"/></block></else></if>
    }<pos:position pos:line="243" pos:column="6"/></block></while>

    <if pos:line="245" pos:column="5">if <condition pos:line="245" pos:column="8">(<expr><call><name pos:line="245" pos:column="9">peerFindByName<pos:position pos:line="245" pos:column="23"/></name><argument_list pos:line="245" pos:column="23">(<argument><expr><name><name pos:line="245" pos:column="24">p<pos:position pos:line="245" pos:column="25"/></name><operator pos:line="245" pos:column="25">-&gt;<pos:position pos:line="245" pos:column="30"/></operator><name pos:line="245" pos:column="27">name<pos:position pos:line="245" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="245" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="245" pos:column="33"/></condition><then pos:line="245" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="246" pos:column="9">fatalf<pos:position pos:line="246" pos:column="15"/></name><argument_list pos:line="246" pos:column="15">(<argument><expr><literal type="string" pos:line="246" pos:column="16">"ERROR: cache_peer %s specified twice\n"<pos:position pos:line="246" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="246" pos:column="58">p<pos:position pos:line="246" pos:column="59"/></name><operator pos:line="246" pos:column="59">-&gt;<pos:position pos:line="246" pos:column="64"/></operator><name pos:line="246" pos:column="61">name<pos:position pos:line="246" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="246" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="67"/></expr_stmt></block></then></if>

    <if pos:line="248" pos:column="5">if <condition pos:line="248" pos:column="8">(<expr><name><name pos:line="248" pos:column="9">p<pos:position pos:line="248" pos:column="10"/></name><operator pos:line="248" pos:column="10">-&gt;<pos:position pos:line="248" pos:column="15"/></operator><name pos:line="248" pos:column="12">weight<pos:position pos:line="248" pos:column="18"/></name></name> <operator pos:line="248" pos:column="19">&lt;<pos:position pos:line="248" pos:column="23"/></operator> <literal type="number" pos:line="248" pos:column="21">1<pos:position pos:line="248" pos:column="22"/></literal></expr>)<pos:position pos:line="248" pos:column="23"/></condition><then pos:line="248" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="249" pos:column="9">p<pos:position pos:line="249" pos:column="10"/></name><operator pos:line="249" pos:column="10">-&gt;<pos:position pos:line="249" pos:column="15"/></operator><name pos:line="249" pos:column="12">weight<pos:position pos:line="249" pos:column="18"/></name></name> <operator pos:line="249" pos:column="19">=<pos:position pos:line="249" pos:column="20"/></operator> <literal type="number" pos:line="249" pos:column="21">1<pos:position pos:line="249" pos:column="22"/></literal></expr>;<pos:position pos:line="249" pos:column="23"/></expr_stmt></block></then></if>

    <if pos:line="251" pos:column="5">if <condition pos:line="251" pos:column="8">(<expr><name><name pos:line="251" pos:column="9">p<pos:position pos:line="251" pos:column="10"/></name><operator pos:line="251" pos:column="10">-&gt;<pos:position pos:line="251" pos:column="15"/></operator><name pos:line="251" pos:column="12">connect_fail_limit<pos:position pos:line="251" pos:column="30"/></name></name> <operator pos:line="251" pos:column="31">&lt;<pos:position pos:line="251" pos:column="35"/></operator> <literal type="number" pos:line="251" pos:column="33">1<pos:position pos:line="251" pos:column="34"/></literal></expr>)<pos:position pos:line="251" pos:column="35"/></condition><then pos:line="251" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="252" pos:column="9">p<pos:position pos:line="252" pos:column="10"/></name><operator pos:line="252" pos:column="10">-&gt;<pos:position pos:line="252" pos:column="15"/></operator><name pos:line="252" pos:column="12">connect_fail_limit<pos:position pos:line="252" pos:column="30"/></name></name> <operator pos:line="252" pos:column="31">=<pos:position pos:line="252" pos:column="32"/></operator> <literal type="number" pos:line="252" pos:column="33">10<pos:position pos:line="252" pos:column="35"/></literal></expr>;<pos:position pos:line="252" pos:column="36"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="254" pos:column="5">p<pos:position pos:line="254" pos:column="6"/></name><operator pos:line="254" pos:column="6">-&gt;<pos:position pos:line="254" pos:column="11"/></operator><name pos:line="254" pos:column="8">icp<pos:position pos:line="254" pos:column="11"/></name><operator pos:line="254" pos:column="11">.<pos:position pos:line="254" pos:column="12"/></operator><name pos:line="254" pos:column="12">version<pos:position pos:line="254" pos:column="19"/></name></name> <operator pos:line="254" pos:column="20">=<pos:position pos:line="254" pos:column="21"/></operator> <name pos:line="254" pos:column="22">ICP_VERSION_CURRENT<pos:position pos:line="254" pos:column="41"/></name></expr>;<pos:position pos:line="254" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="256" pos:column="5">p<pos:position pos:line="256" pos:column="6"/></name><operator pos:line="256" pos:column="6">-&gt;<pos:position pos:line="256" pos:column="11"/></operator><name pos:line="256" pos:column="8">testing_now<pos:position pos:line="256" pos:column="19"/></name></name> <operator pos:line="256" pos:column="20">=<pos:position pos:line="256" pos:column="21"/></operator> <literal type="boolean" pos:line="256" pos:column="22">false<pos:position pos:line="256" pos:column="27"/></literal></expr>;<pos:position pos:line="256" pos:column="28"/></expr_stmt>

<cpp:if pos:line="258" pos:column="1">#<cpp:directive pos:line="258" pos:column="2">if<pos:position pos:line="258" pos:column="4"/></cpp:directive> <expr><name pos:line="258" pos:column="5">USE_CACHE_DIGESTS<pos:position pos:line="258" pos:column="22"/></name></expr></cpp:if>

    <if pos:line="260" pos:column="5">if <condition pos:line="260" pos:column="8">(<expr><operator pos:line="260" pos:column="9">!<pos:position pos:line="260" pos:column="10"/></operator><name><name pos:line="260" pos:column="10">p<pos:position pos:line="260" pos:column="11"/></name><operator pos:line="260" pos:column="11">-&gt;<pos:position pos:line="260" pos:column="16"/></operator><name pos:line="260" pos:column="13">options<pos:position pos:line="260" pos:column="20"/></name><operator pos:line="260" pos:column="20">.<pos:position pos:line="260" pos:column="21"/></operator><name pos:line="260" pos:column="21">no_digest<pos:position pos:line="260" pos:column="30"/></name></name></expr>)<pos:position pos:line="260" pos:column="31"/></condition><then pos:line="260" pos:column="31"> <block pos:line="260" pos:column="32">{
        <comment type="block" pos:line="261" pos:column="9">/* XXX This looks odd.. who has the original pointer
         * then?
         */</comment>
        <decl_stmt><decl><type><name pos:line="264" pos:column="9">PeerDigest<pos:position pos:line="264" pos:column="19"/></name> <modifier pos:line="264" pos:column="20">*<pos:position pos:line="264" pos:column="21"/></modifier></type><name pos:line="264" pos:column="21">pd<pos:position pos:line="264" pos:column="23"/></name> <init pos:line="264" pos:column="24">= <expr><call><name pos:line="264" pos:column="26">peerDigestCreate<pos:position pos:line="264" pos:column="42"/></name><argument_list pos:line="264" pos:column="42">(<argument><expr><name pos:line="264" pos:column="43">p<pos:position pos:line="264" pos:column="44"/></name></expr></argument>)<pos:position pos:line="264" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="264" pos:column="46"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="265" pos:column="9">p<pos:position pos:line="265" pos:column="10"/></name><operator pos:line="265" pos:column="10">-&gt;<pos:position pos:line="265" pos:column="15"/></operator><name pos:line="265" pos:column="12">digest<pos:position pos:line="265" pos:column="18"/></name></name> <operator pos:line="265" pos:column="19">=<pos:position pos:line="265" pos:column="20"/></operator> <call><name pos:line="265" pos:column="21">cbdataReference<pos:position pos:line="265" pos:column="36"/></name><argument_list pos:line="265" pos:column="36">(<argument><expr><name pos:line="265" pos:column="37">pd<pos:position pos:line="265" pos:column="39"/></name></expr></argument>)<pos:position pos:line="265" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="266" pos:column="6"/></block></then></if>

<cpp:endif pos:line="268" pos:column="1">#<cpp:directive pos:line="268" pos:column="2">endif<pos:position pos:line="268" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="270" pos:column="5">p<pos:position pos:line="270" pos:column="6"/></name><operator pos:line="270" pos:column="6">-&gt;<pos:position pos:line="270" pos:column="11"/></operator><name pos:line="270" pos:column="8">index<pos:position pos:line="270" pos:column="13"/></name></name> <operator pos:line="270" pos:column="14">=<pos:position pos:line="270" pos:column="15"/></operator>  <operator pos:line="270" pos:column="17">++<pos:position pos:line="270" pos:column="19"/></operator><name><name pos:line="270" pos:column="19">Config<pos:position pos:line="270" pos:column="25"/></name><operator pos:line="270" pos:column="25">.<pos:position pos:line="270" pos:column="26"/></operator><name pos:line="270" pos:column="26">npeers<pos:position pos:line="270" pos:column="32"/></name></name></expr>;<pos:position pos:line="270" pos:column="33"/></expr_stmt>

    <while pos:line="272" pos:column="5">while <condition pos:line="272" pos:column="11">(<expr><operator pos:line="272" pos:column="12">*<pos:position pos:line="272" pos:column="13"/></operator><name pos:line="272" pos:column="13">head<pos:position pos:line="272" pos:column="17"/></name> <operator pos:line="272" pos:column="18">!=<pos:position pos:line="272" pos:column="20"/></operator> <name pos:line="272" pos:column="21">NULL<pos:position pos:line="272" pos:column="25"/></name></expr>)<pos:position pos:line="272" pos:column="26"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="273" pos:column="9">head<pos:position pos:line="273" pos:column="13"/></name> <operator pos:line="273" pos:column="14">=<pos:position pos:line="273" pos:column="15"/></operator> <operator pos:line="273" pos:column="16">&amp;<pos:position pos:line="273" pos:column="21"/></operator><name><operator pos:line="273" pos:column="17">(<pos:position pos:line="273" pos:column="18"/></operator><operator pos:line="273" pos:column="18">*<pos:position pos:line="273" pos:column="19"/></operator><name pos:line="273" pos:column="19">head<pos:position pos:line="273" pos:column="23"/></name><operator pos:line="273" pos:column="23">)<pos:position pos:line="273" pos:column="24"/></operator><operator pos:line="273" pos:column="24">-&gt;<pos:position pos:line="273" pos:column="29"/></operator><name pos:line="273" pos:column="26">next<pos:position pos:line="273" pos:column="30"/></name></name></expr>;<pos:position pos:line="273" pos:column="31"/></expr_stmt></block></while>

    <expr_stmt><expr><operator pos:line="275" pos:column="5">*<pos:position pos:line="275" pos:column="6"/></operator><name pos:line="275" pos:column="6">head<pos:position pos:line="275" pos:column="10"/></name> <operator pos:line="275" pos:column="11">=<pos:position pos:line="275" pos:column="12"/></operator> <name pos:line="275" pos:column="13">p<pos:position pos:line="275" pos:column="14"/></name></expr>;<pos:position pos:line="275" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="277" pos:column="5">peerClearRRStart<pos:position pos:line="277" pos:column="21"/></name><argument_list pos:line="277" pos:column="21">()<pos:position pos:line="277" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="24"/></expr_stmt>
}<pos:position pos:line="278" pos:column="2"/></block></function></unit>

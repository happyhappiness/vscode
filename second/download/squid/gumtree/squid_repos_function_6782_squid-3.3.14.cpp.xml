<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6782_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">verify_heap_property<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">heap<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type> <name pos:line="2" pos:column="29">hp<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><literal type="number" pos:line="4" pos:column="13">0<pos:position pos:line="4" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">correct<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">1<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>;<pos:position pos:line="6" pos:column="16"/></init> <condition><expr><name pos:line="6" pos:column="17">i<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&lt;<pos:position pos:line="6" pos:column="23"/></operator> <name><name pos:line="6" pos:column="21">hp<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">-&gt;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="25">last<pos:position pos:line="6" pos:column="29"/></name></name> <operator pos:line="6" pos:column="30">/<pos:position pos:line="6" pos:column="31"/></operator> <literal type="number" pos:line="6" pos:column="32">2<pos:position pos:line="6" pos:column="33"/></literal></expr>;<pos:position pos:line="6" pos:column="34"/></condition> <incr><expr><name pos:line="6" pos:column="35">i<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">++<pos:position pos:line="6" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="6" pos:column="39"/></control> <block pos:line="6" pos:column="40">{
        <expr_stmt><expr><name pos:line="7" pos:column="9">correct<pos:position pos:line="7" pos:column="16"/></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <literal type="number" pos:line="7" pos:column="19">1<pos:position pos:line="7" pos:column="20"/></literal></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">_heap_node_exist<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">hp<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="34">Left<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">i<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="43"/></condition><then pos:line="8" pos:column="43">
            <block type="pseudo"><if pos:line="9" pos:column="13">if <condition pos:line="9" pos:column="16">(<expr><name><name pos:line="9" pos:column="17">hp<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">nodes<pos:position pos:line="9" pos:column="26"/></name><index pos:line="9" pos:column="26">[<expr><name pos:line="9" pos:column="27">i<pos:position pos:line="9" pos:column="28"/></name></expr>]<pos:position pos:line="9" pos:column="29"/></index></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">key<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">&gt;<pos:position pos:line="9" pos:column="39"/></operator> <name><name pos:line="9" pos:column="37">hp<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">nodes<pos:position pos:line="9" pos:column="46"/></name><index pos:line="9" pos:column="46">[<expr><call><name pos:line="9" pos:column="47">Left<pos:position pos:line="9" pos:column="51"/></name><argument_list pos:line="9" pos:column="51">(<argument><expr><name pos:line="9" pos:column="52">i<pos:position pos:line="9" pos:column="53"/></name></expr></argument>)<pos:position pos:line="9" pos:column="54"/></argument_list></call></expr>]<pos:position pos:line="9" pos:column="55"/></index></name><operator pos:line="9" pos:column="55">-&gt;<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="57">key<pos:position pos:line="9" pos:column="60"/></name></expr>)<pos:position pos:line="9" pos:column="61"/></condition><then pos:line="9" pos:column="61">
                <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="17">correct<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt></block></then></if></block></then></if>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">_heap_node_exist<pos:position pos:line="11" pos:column="29"/></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">hp<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="34">Right<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><name pos:line="11" pos:column="40">i<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44">
            <block type="pseudo"><if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><name><name pos:line="12" pos:column="17">hp<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">nodes<pos:position pos:line="12" pos:column="26"/></name><index pos:line="12" pos:column="26">[<expr><name pos:line="12" pos:column="27">i<pos:position pos:line="12" pos:column="28"/></name></expr>]<pos:position pos:line="12" pos:column="29"/></index></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">key<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">&gt;<pos:position pos:line="12" pos:column="39"/></operator> <name><name pos:line="12" pos:column="37">hp<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">nodes<pos:position pos:line="12" pos:column="46"/></name><index pos:line="12" pos:column="46">[<expr><call><name pos:line="12" pos:column="47">Right<pos:position pos:line="12" pos:column="52"/></name><argument_list pos:line="12" pos:column="52">(<argument><expr><name pos:line="12" pos:column="53">i<pos:position pos:line="12" pos:column="54"/></name></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>]<pos:position pos:line="12" pos:column="56"/></index></name><operator pos:line="12" pos:column="56">-&gt;<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="58">key<pos:position pos:line="12" pos:column="61"/></name></expr>)<pos:position pos:line="12" pos:column="62"/></condition><then pos:line="12" pos:column="62">
                <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="17">correct<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">=<pos:position pos:line="13" pos:column="26"/></operator> <literal type="number" pos:line="13" pos:column="27">0<pos:position pos:line="13" pos:column="28"/></literal></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt></block></then></if></block></then></if>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">correct<pos:position pos:line="14" pos:column="21"/></name></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <block pos:line="14" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">printf<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="string" pos:line="15" pos:column="20">"verifyHeap: violated at %d"<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">i<pos:position pos:line="15" pos:column="51"/></name></expr></argument>)<pos:position pos:line="15" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">heap_print_inorder<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name pos:line="16" pos:column="32">hp<pos:position pos:line="16" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="36">0<pos:position pos:line="16" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
            <break pos:line="17" pos:column="13">break;<pos:position pos:line="17" pos:column="19"/></break>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>
    }<pos:position pos:line="19" pos:column="6"/></block></for>
    <return pos:line="20" pos:column="5">return <expr><name pos:line="20" pos:column="12">correct<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6779_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">rfc1035QueryUnpack<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">buf<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">size_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">sz<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">unsigned<pos:position pos:line="2" pos:column="56"/></name> <name pos:line="2" pos:column="57">int<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">off<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="67">rfc1035_query<pos:position pos:line="2" pos:column="80"/></name> <modifier pos:line="2" pos:column="81">*<pos:position pos:line="2" pos:column="82"/></modifier></type> <name pos:line="2" pos:column="83">query<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="89"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">short<pos:position pos:line="4" pos:column="19"/></name></type> <name pos:line="4" pos:column="20">s<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">rfc1035NameUnpack<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">buf<pos:position pos:line="5" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="32">sz<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">off<pos:position pos:line="5" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="41">NULL<pos:position pos:line="5" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="47">query<pos:position pos:line="5" pos:column="52"/></name><operator pos:line="5" pos:column="52">-&gt;<pos:position pos:line="5" pos:column="57"/></operator><name pos:line="5" pos:column="54">name<pos:position pos:line="5" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="60">RFC1035_MAXHOSTNAMESZ<pos:position pos:line="5" pos:column="81"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="83">0<pos:position pos:line="5" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="86"/></condition><then pos:line="5" pos:column="86"> <block pos:line="5" pos:column="87">{
        <expr_stmt><expr><name pos:line="6" pos:column="9">RFC1035_UNPACK_DEBUG<pos:position pos:line="6" pos:column="29"/></name></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">memset<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">query<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="23">'\0'<pos:position pos:line="7" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="29">sizeof<argument_list pos:line="7" pos:column="35">(<argument><expr><operator pos:line="7" pos:column="36">*<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">query<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="45"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">off<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">+<pos:position pos:line="10" pos:column="15"/></operator> <literal type="number" pos:line="10" pos:column="16">4<pos:position pos:line="10" pos:column="17"/></literal> <operator pos:line="10" pos:column="18">&gt;<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="20">sz<pos:position pos:line="10" pos:column="22"/></name></expr>)<pos:position pos:line="10" pos:column="23"/></condition><then pos:line="10" pos:column="23"> <block pos:line="10" pos:column="24">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">RFC1035_UNPACK_DEBUG<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">memset<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">query<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="23">'\0'<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="29">sizeof<argument_list pos:line="12" pos:column="35">(<argument><expr><operator pos:line="12" pos:column="36">*<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="37">query<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">memcpy<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><operator pos:line="15" pos:column="12">&amp;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="13">s<pos:position pos:line="15" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="16">buf<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">+<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">off<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="28">2<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="16" pos:column="5">*<pos:position pos:line="16" pos:column="6"/></operator><name pos:line="16" pos:column="6">off<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">+=<pos:position pos:line="16" pos:column="12"/></operator> <literal type="number" pos:line="16" pos:column="13">2<pos:position pos:line="16" pos:column="14"/></literal></expr>;<pos:position pos:line="16" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">query<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">qtype<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <call><name pos:line="17" pos:column="20">ntohs<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name pos:line="17" pos:column="26">s<pos:position pos:line="17" pos:column="27"/></name></expr></argument>)<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">memcpy<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><operator pos:line="18" pos:column="12">&amp;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="13">s<pos:position pos:line="18" pos:column="14"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="16">buf<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">+<pos:position pos:line="18" pos:column="21"/></operator> <operator pos:line="18" pos:column="22">*<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">off<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="28">2<pos:position pos:line="18" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">off<pos:position pos:line="19" pos:column="9"/></name> <operator pos:line="19" pos:column="10">+=<pos:position pos:line="19" pos:column="12"/></operator> <literal type="number" pos:line="19" pos:column="13">2<pos:position pos:line="19" pos:column="14"/></literal></expr>;<pos:position pos:line="19" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">query<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">qclass<pos:position pos:line="20" pos:column="18"/></name></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <call><name pos:line="20" pos:column="21">ntohs<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">s<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
    <return pos:line="21" pos:column="5">return <expr><literal type="number" pos:line="21" pos:column="12">0<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

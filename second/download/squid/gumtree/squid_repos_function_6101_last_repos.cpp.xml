<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6101_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">File<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">lock<pos:position pos:line="2" pos:column="11"/></name></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">FileOpeningConfig<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">&amp;<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="37">cfg<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">attemptsLeft<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name><name pos:line="4" pos:column="33">cfg<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">.<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">lockAttempts<pos:position pos:line="4" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><name pos:line="5" pos:column="12">attemptsLeft<pos:position pos:line="5" pos:column="24"/></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition> <block pos:line="5" pos:column="26">{
        <try pos:line="6" pos:column="9">try <block pos:line="6" pos:column="13">{
            <expr_stmt><expr><operator pos:line="7" pos:column="13">--<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">attemptsLeft<pos:position pos:line="7" pos:column="27"/></name></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>
            <return pos:line="8" pos:column="13">return <expr><call><name pos:line="8" pos:column="20">lockOnce<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name pos:line="8" pos:column="29">cfg<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></return>
        }<pos:position pos:line="9" pos:column="10"/></block> <catch pos:line="9" pos:column="11">catch <parameter_list pos:line="9" pos:column="17">(<parameter><decl><type><specifier pos:line="9" pos:column="18">const<pos:position pos:line="9" pos:column="23"/></specifier> <name><name pos:line="9" pos:column="24">std<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">::<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">exception<pos:position pos:line="9" pos:column="38"/></name></name> <modifier pos:line="9" pos:column="39">&amp;<pos:position pos:line="9" pos:column="44"/></modifier></type><name pos:line="9" pos:column="40">ex<pos:position pos:line="9" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="9" pos:column="43"/></parameter_list> <block pos:line="9" pos:column="44">{
            <if pos:line="10" pos:column="13">if <condition pos:line="10" pos:column="16">(<expr><operator pos:line="10" pos:column="17">!<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">attemptsLeft<pos:position pos:line="10" pos:column="30"/></name></expr>)<pos:position pos:line="10" pos:column="31"/></condition><then pos:line="10" pos:column="31">
                <block type="pseudo"><throw pos:line="11" pos:column="17">throw;<pos:position pos:line="11" pos:column="23"/></throw></block></then></if>
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">debugs<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="number" pos:line="12" pos:column="20">54<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="24">4<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="27">"sleeping and then trying up to "<pos:position pos:line="12" pos:column="60"/></literal> <operator pos:line="12" pos:column="61">&lt;&lt;<pos:position pos:line="12" pos:column="69"/></operator> <name pos:line="12" pos:column="64">attemptsLeft<pos:position pos:line="12" pos:column="76"/></name> <operator pos:line="12" pos:column="77">&lt;&lt;<pos:position pos:line="12" pos:column="85"/></operator>
                   <literal type="string" pos:line="13" pos:column="20">" more time(s) after a failure: "<pos:position pos:line="13" pos:column="53"/></literal> <operator pos:line="13" pos:column="54">&lt;&lt;<pos:position pos:line="13" pos:column="62"/></operator> <call><name><name pos:line="13" pos:column="57">ex<pos:position pos:line="13" pos:column="59"/></name><operator pos:line="13" pos:column="59">.<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="60">what<pos:position pos:line="13" pos:column="64"/></name></name><argument_list pos:line="13" pos:column="64">()<pos:position pos:line="13" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></catch></try>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">Must<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name pos:line="15" pos:column="14">attemptsLeft<pos:position pos:line="15" pos:column="26"/></name></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt> <comment type="line" pos:line="15" pos:column="29">// the catch statement handles the last attempt</comment>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">xusleep<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><name><name pos:line="16" pos:column="17">cfg<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">RetryGapUsec<pos:position pos:line="16" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">debugs<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">54<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="16">9<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="19">"disabled"<pos:position pos:line="18" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

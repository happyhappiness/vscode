<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4087_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">readCertAndPrivateKeyFromMemory<pos:position pos:line="1" pos:column="42"/></name></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">Ssl<pos:position pos:line="1" pos:column="46"/></name><operator pos:line="1" pos:column="46">::<pos:position pos:line="1" pos:column="48"/></operator><name pos:line="1" pos:column="48">X509_Pointer<pos:position pos:line="1" pos:column="60"/></name></name> <modifier pos:line="1" pos:column="61">&amp;<pos:position pos:line="1" pos:column="66"/></modifier></type> <name pos:line="1" pos:column="63">cert<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="69">Ssl<pos:position pos:line="1" pos:column="72"/></name><operator pos:line="1" pos:column="72">::<pos:position pos:line="1" pos:column="74"/></operator><name pos:line="1" pos:column="74">EVP_PKEY_Pointer<pos:position pos:line="1" pos:column="90"/></name></name> <modifier pos:line="1" pos:column="91">&amp;<pos:position pos:line="1" pos:column="96"/></modifier></type> <name pos:line="1" pos:column="93">pkey<pos:position pos:line="1" pos:column="97"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="99">char<pos:position pos:line="1" pos:column="103"/></name> <specifier pos:line="1" pos:column="104">const<pos:position pos:line="1" pos:column="109"/></specifier> <modifier pos:line="1" pos:column="110">*<pos:position pos:line="1" pos:column="111"/></modifier></type> <name pos:line="1" pos:column="112">bufferToRead<pos:position pos:line="1" pos:column="124"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="125"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">Ssl<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">::<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">BIO_Pointer<pos:position pos:line="3" pos:column="21"/></name></name></type> <name pos:line="3" pos:column="22">bio<pos:position pos:line="3" pos:column="25"/></name><argument_list pos:line="3" pos:column="25">(<argument><expr><call><name pos:line="3" pos:column="26">BIO_new<pos:position pos:line="3" pos:column="33"/></name><argument_list pos:line="3" pos:column="33">(<argument><expr><call><name pos:line="3" pos:column="34">BIO_s_mem<pos:position pos:line="3" pos:column="43"/></name><argument_list pos:line="3" pos:column="43">()<pos:position pos:line="3" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="47"/></argument_list></decl>;<pos:position pos:line="3" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">BIO_puts<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">(<argument><expr><call><name><name pos:line="4" pos:column="14">bio<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">.<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">get<pos:position pos:line="4" pos:column="21"/></name></name><argument_list pos:line="4" pos:column="21">()<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="4" pos:column="25">bufferToRead<pos:position pos:line="4" pos:column="37"/></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">X509<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type> <name pos:line="6" pos:column="12">certPtr<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">cert<pos:position pos:line="7" pos:column="9"/></name><operator pos:line="7" pos:column="9">.<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">reset<pos:position pos:line="7" pos:column="15"/></name></name><argument_list pos:line="7" pos:column="15">(<argument><expr><call><name pos:line="7" pos:column="16">PEM_read_bio_X509<pos:position pos:line="7" pos:column="33"/></name><argument_list pos:line="7" pos:column="33">(<argument><expr><call><name><name pos:line="7" pos:column="34">bio<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">.<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="38">get<pos:position pos:line="7" pos:column="41"/></name></name><argument_list pos:line="7" pos:column="41">()<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="7" pos:column="45">&amp;<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="46">certPtr<pos:position pos:line="7" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="55">0<pos:position pos:line="7" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="58">0<pos:position pos:line="7" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="62"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">cert<pos:position pos:line="8" pos:column="14"/></name></expr>)<pos:position pos:line="8" pos:column="15"/></condition><then pos:line="8" pos:column="15">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">false<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">EVP_PKEY<pos:position pos:line="11" pos:column="13"/></name> <modifier pos:line="11" pos:column="14">*<pos:position pos:line="11" pos:column="15"/></modifier></type> <name pos:line="11" pos:column="16">pkeyPtr<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">pkey<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">.<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">reset<pos:position pos:line="12" pos:column="15"/></name></name><argument_list pos:line="12" pos:column="15">(<argument><expr><call><name pos:line="12" pos:column="16">PEM_read_bio_PrivateKey<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><call><name><name pos:line="12" pos:column="40">bio<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">.<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">get<pos:position pos:line="12" pos:column="47"/></name></name><argument_list pos:line="12" pos:column="47">()<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="12" pos:column="51">&amp;<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="52">pkeyPtr<pos:position pos:line="12" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="61">0<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="64">0<pos:position pos:line="12" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">pkey<pos:position pos:line="13" pos:column="14"/></name></expr>)<pos:position pos:line="13" pos:column="15"/></condition><then pos:line="13" pos:column="15">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><literal type="boolean" pos:line="14" pos:column="16">false<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></return></block></then></if>

    <return pos:line="16" pos:column="5">return <expr><literal type="boolean" pos:line="16" pos:column="12">true<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

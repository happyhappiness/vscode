<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2345_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">ipcacheParse<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">ipcache_entry<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">i<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">inbuf<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">LOCAL_ARRAY<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="28">DNS_INBUF_SZ<pos:position pos:line="4" pos:column="40"/></name></expr></argument>)<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="42"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">token<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ipcount<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><literal type="number" pos:line="6" pos:column="19">0<pos:position pos:line="6" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">ttl<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name><name pos:line="8" pos:column="11">A<pos:position pos:line="8" pos:column="12"/></name><index pos:line="8" pos:column="12">[<expr><literal type="number" pos:line="8" pos:column="13">32<pos:position pos:line="8" pos:column="15"/></literal></expr>]<pos:position pos:line="8" pos:column="16"/></index></name></decl>;<pos:position pos:line="8" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">name<pos:position pos:line="9" pos:column="21"/></name> <init pos:line="9" pos:column="22">= <expr><operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><specifier pos:line="9" pos:column="25">const<pos:position pos:line="9" pos:column="30"/></specifier> <name pos:line="9" pos:column="31">char<pos:position pos:line="9" pos:column="35"/></name> <operator pos:line="9" pos:column="36">*<pos:position pos:line="9" pos:column="37"/></operator><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator><name><name pos:line="9" pos:column="38">i<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">hash<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">.<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="46">key<pos:position pos:line="9" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="50"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">i<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">expires<pos:position pos:line="10" pos:column="15"/></name></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">squid_curtime<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">+<pos:position pos:line="10" pos:column="33"/></operator> <name><name pos:line="10" pos:column="34">Config<pos:position pos:line="10" pos:column="40"/></name><operator pos:line="10" pos:column="40">.<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="41">negativeDnsTtl<pos:position pos:line="10" pos:column="55"/></name></name></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">i<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">flags<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">.<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">negcached<pos:position pos:line="11" pos:column="23"/></name></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="number" pos:line="11" pos:column="26">1<pos:position pos:line="11" pos:column="27"/></literal></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">safe_free<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><name><name pos:line="12" pos:column="15">i<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">addrs<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">.<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">in_addrs<pos:position pos:line="12" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">safe_free<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name><name pos:line="13" pos:column="15">i<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">addrs<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">.<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">bad_mask<pos:position pos:line="13" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">safe_free<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name><name pos:line="14" pos:column="15">i<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">error_message<pos:position pos:line="14" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">i<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">addrs<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">count<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">inbuf<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">==<pos:position pos:line="17" pos:column="17"/></operator> <name pos:line="17" pos:column="18">NULL<pos:position pos:line="17" pos:column="22"/></name></expr>)<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23"> <block pos:line="17" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">14<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">1<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"ipcacheParse: Got &lt;NULL&gt; reply"<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">i<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">error_message<pos:position pos:line="19" pos:column="25"/></name></name> <operator pos:line="19" pos:column="26">=<pos:position pos:line="19" pos:column="27"/></operator> <call><name pos:line="19" pos:column="28">xstrdup<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><literal type="string" pos:line="19" pos:column="36">"Internal Error"<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">-<pos:position pos:line="20" pos:column="17"/></operator><literal type="number" pos:line="20" pos:column="17">1<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">xstrncpy<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name pos:line="23" pos:column="14">buf<pos:position pos:line="23" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="19">inbuf<pos:position pos:line="23" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="26">DNS_INBUF_SZ<pos:position pos:line="23" pos:column="38"/></name></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">debugs<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">14<pos:position pos:line="24" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="16">5<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"ipcacheParse: parsing: {"<pos:position pos:line="24" pos:column="45"/></literal> <operator pos:line="24" pos:column="46">&lt;&lt;<pos:position pos:line="24" pos:column="54"/></operator> <name pos:line="24" pos:column="49">buf<pos:position pos:line="24" pos:column="52"/></name> <operator pos:line="24" pos:column="53">&lt;&lt;<pos:position pos:line="24" pos:column="61"/></operator> <literal type="string" pos:line="24" pos:column="56">"}"<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">token<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <call><name pos:line="25" pos:column="13">strtok<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name pos:line="25" pos:column="20">buf<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="25">w_space<pos:position pos:line="25" pos:column="32"/></name></expr></argument>)<pos:position pos:line="25" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">NULL<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">==<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">token<pos:position pos:line="27" pos:column="22"/></name></expr>)<pos:position pos:line="27" pos:column="23"/></condition><then pos:line="27" pos:column="23"> <block pos:line="27" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">14<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="20">1<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"ipcacheParse: expecting result, got '"<pos:position pos:line="28" pos:column="62"/></literal> <operator pos:line="28" pos:column="63">&lt;&lt;<pos:position pos:line="28" pos:column="71"/></operator> <name pos:line="28" pos:column="66">inbuf<pos:position pos:line="28" pos:column="71"/></name> <operator pos:line="28" pos:column="72">&lt;&lt;<pos:position pos:line="28" pos:column="80"/></operator> <literal type="string" pos:line="28" pos:column="75">"'"<pos:position pos:line="28" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="80"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="30" pos:column="9">i<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">error_message<pos:position pos:line="30" pos:column="25"/></name></name> <operator pos:line="30" pos:column="26">=<pos:position pos:line="30" pos:column="27"/></operator> <call><name pos:line="30" pos:column="28">xstrdup<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><literal type="string" pos:line="30" pos:column="36">"Internal Error"<pos:position pos:line="30" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="54"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><operator pos:line="31" pos:column="16">-<pos:position pos:line="31" pos:column="17"/></operator><literal type="number" pos:line="31" pos:column="17">1<pos:position pos:line="31" pos:column="18"/></literal></expr>;<pos:position pos:line="31" pos:column="19"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><literal type="number" pos:line="34" pos:column="9">0<pos:position pos:line="34" pos:column="10"/></literal> <operator pos:line="34" pos:column="11">==<pos:position pos:line="34" pos:column="13"/></operator> <call><name pos:line="34" pos:column="14">strcmp<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">token<pos:position pos:line="34" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="28">"$fail"<pos:position pos:line="34" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="37"/></condition><then pos:line="34" pos:column="37"> <block pos:line="34" pos:column="38">{
        <expr_stmt><expr><name pos:line="35" pos:column="9">token<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <call><name pos:line="35" pos:column="17">strtok<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><name pos:line="35" pos:column="24">NULL<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="30">"\n"<pos:position pos:line="35" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">assert<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><name pos:line="36" pos:column="16">NULL<pos:position pos:line="36" pos:column="20"/></name> <operator pos:line="36" pos:column="21">!=<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">token<pos:position pos:line="36" pos:column="29"/></name></expr></argument>)<pos:position pos:line="36" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">i<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">error_message<pos:position pos:line="37" pos:column="25"/></name></name> <operator pos:line="37" pos:column="26">=<pos:position pos:line="37" pos:column="27"/></operator> <call><name pos:line="37" pos:column="28">xstrdup<pos:position pos:line="37" pos:column="35"/></name><argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">token<pos:position pos:line="37" pos:column="41"/></name></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="43"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><literal type="number" pos:line="38" pos:column="16">0<pos:position pos:line="38" pos:column="17"/></literal></expr>;<pos:position pos:line="38" pos:column="18"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><literal type="number" pos:line="41" pos:column="9">0<pos:position pos:line="41" pos:column="10"/></literal> <operator pos:line="41" pos:column="11">!=<pos:position pos:line="41" pos:column="13"/></operator> <call><name pos:line="41" pos:column="14">strcmp<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><name pos:line="41" pos:column="21">token<pos:position pos:line="41" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="28">"$addr"<pos:position pos:line="41" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="37"/></condition><then pos:line="41" pos:column="37"> <block pos:line="41" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">debugs<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="number" pos:line="42" pos:column="16">14<pos:position pos:line="42" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="20">1<pos:position pos:line="42" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="23">"ipcacheParse: expecting '$addr', got '"<pos:position pos:line="42" pos:column="63"/></literal> <operator pos:line="42" pos:column="64">&lt;&lt;<pos:position pos:line="42" pos:column="72"/></operator> <name pos:line="42" pos:column="67">inbuf<pos:position pos:line="42" pos:column="72"/></name> <operator pos:line="42" pos:column="73">&lt;&lt;<pos:position pos:line="42" pos:column="81"/></operator> <literal type="string" pos:line="42" pos:column="76">"' in response to '"<pos:position pos:line="42" pos:column="96"/></literal> <operator pos:line="42" pos:column="97">&lt;&lt;<pos:position pos:line="42" pos:column="105"/></operator> <name pos:line="42" pos:column="100">name<pos:position pos:line="42" pos:column="104"/></name> <operator pos:line="42" pos:column="105">&lt;&lt;<pos:position pos:line="42" pos:column="113"/></operator> <literal type="string" pos:line="42" pos:column="108">"'"<pos:position pos:line="42" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="113"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="44" pos:column="9">i<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">error_message<pos:position pos:line="44" pos:column="25"/></name></name> <operator pos:line="44" pos:column="26">=<pos:position pos:line="44" pos:column="27"/></operator> <call><name pos:line="44" pos:column="28">xstrdup<pos:position pos:line="44" pos:column="35"/></name><argument_list pos:line="44" pos:column="35">(<argument><expr><literal type="string" pos:line="44" pos:column="36">"Internal Error"<pos:position pos:line="44" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><operator pos:line="45" pos:column="16">-<pos:position pos:line="45" pos:column="17"/></operator><literal type="number" pos:line="45" pos:column="17">1<pos:position pos:line="45" pos:column="18"/></literal></expr>;<pos:position pos:line="45" pos:column="19"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="48" pos:column="5">token<pos:position pos:line="48" pos:column="10"/></name> <operator pos:line="48" pos:column="11">=<pos:position pos:line="48" pos:column="12"/></operator> <call><name pos:line="48" pos:column="13">strtok<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><name pos:line="48" pos:column="20">NULL<pos:position pos:line="48" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="26">w_space<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">NULL<pos:position pos:line="50" pos:column="13"/></name> <operator pos:line="50" pos:column="14">==<pos:position pos:line="50" pos:column="16"/></operator> <name pos:line="50" pos:column="17">token<pos:position pos:line="50" pos:column="22"/></name></expr>)<pos:position pos:line="50" pos:column="23"/></condition><then pos:line="50" pos:column="23"> <block pos:line="50" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">debugs<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><literal type="number" pos:line="51" pos:column="16">14<pos:position pos:line="51" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="20">1<pos:position pos:line="51" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="23">"ipcacheParse: expecting TTL, got '"<pos:position pos:line="51" pos:column="59"/></literal> <operator pos:line="51" pos:column="60">&lt;&lt;<pos:position pos:line="51" pos:column="68"/></operator> <name pos:line="51" pos:column="63">inbuf<pos:position pos:line="51" pos:column="68"/></name> <operator pos:line="51" pos:column="69">&lt;&lt;<pos:position pos:line="51" pos:column="77"/></operator> <literal type="string" pos:line="51" pos:column="72">"' in response to '"<pos:position pos:line="51" pos:column="92"/></literal> <operator pos:line="51" pos:column="93">&lt;&lt;<pos:position pos:line="51" pos:column="101"/></operator> <name pos:line="51" pos:column="96">name<pos:position pos:line="51" pos:column="100"/></name> <operator pos:line="51" pos:column="101">&lt;&lt;<pos:position pos:line="51" pos:column="109"/></operator> <literal type="string" pos:line="51" pos:column="104">"'"<pos:position pos:line="51" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="109"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="53" pos:column="9">i<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">error_message<pos:position pos:line="53" pos:column="25"/></name></name> <operator pos:line="53" pos:column="26">=<pos:position pos:line="53" pos:column="27"/></operator> <call><name pos:line="53" pos:column="28">xstrdup<pos:position pos:line="53" pos:column="35"/></name><argument_list pos:line="53" pos:column="35">(<argument><expr><literal type="string" pos:line="53" pos:column="36">"Internal Error"<pos:position pos:line="53" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="54"/></expr_stmt>
        <return pos:line="54" pos:column="9">return <expr><operator pos:line="54" pos:column="16">-<pos:position pos:line="54" pos:column="17"/></operator><literal type="number" pos:line="54" pos:column="17">1<pos:position pos:line="54" pos:column="18"/></literal></expr>;<pos:position pos:line="54" pos:column="19"/></return>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="57" pos:column="5">ttl<pos:position pos:line="57" pos:column="8"/></name> <operator pos:line="57" pos:column="9">=<pos:position pos:line="57" pos:column="10"/></operator> <call><name pos:line="57" pos:column="11">atoi<pos:position pos:line="57" pos:column="15"/></name><argument_list pos:line="57" pos:column="15">(<argument><expr><name pos:line="57" pos:column="16">token<pos:position pos:line="57" pos:column="21"/></name></expr></argument>)<pos:position pos:line="57" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>

    <while pos:line="59" pos:column="5">while <condition pos:line="59" pos:column="11">(<expr><name pos:line="59" pos:column="12">NULL<pos:position pos:line="59" pos:column="16"/></name> <operator pos:line="59" pos:column="17">!=<pos:position pos:line="59" pos:column="19"/></operator> <operator pos:line="59" pos:column="20">(<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="21">token<pos:position pos:line="59" pos:column="26"/></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <call><name pos:line="59" pos:column="29">strtok<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name pos:line="59" pos:column="36">NULL<pos:position pos:line="59" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="42">w_space<pos:position pos:line="59" pos:column="49"/></name></expr></argument>)<pos:position pos:line="59" pos:column="50"/></argument_list></call><operator pos:line="59" pos:column="50">)<pos:position pos:line="59" pos:column="51"/></operator></expr>)<pos:position pos:line="59" pos:column="52"/></condition> <block pos:line="59" pos:column="53">{
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">A<pos:position pos:line="60" pos:column="10"/></name><index pos:line="60" pos:column="10">[<expr><name pos:line="60" pos:column="11">ipcount<pos:position pos:line="60" pos:column="18"/></name></expr>]<pos:position pos:line="60" pos:column="19"/></index></name> <operator pos:line="60" pos:column="20">=<pos:position pos:line="60" pos:column="21"/></operator> <name pos:line="60" pos:column="22">token<pos:position pos:line="60" pos:column="27"/></name></expr>;<pos:position pos:line="60" pos:column="28"/></expr_stmt>

        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">++<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="15">ipcount<pos:position pos:line="62" pos:column="22"/></name> <operator pos:line="62" pos:column="23">==<pos:position pos:line="62" pos:column="25"/></operator> <literal type="number" pos:line="62" pos:column="26">32<pos:position pos:line="62" pos:column="28"/></literal></expr>)<pos:position pos:line="62" pos:column="29"/></condition><then pos:line="62" pos:column="29">
            <block type="pseudo"><break pos:line="63" pos:column="13">break;<pos:position pos:line="63" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="64" pos:column="6"/></block></while>

    <if pos:line="66" pos:column="5">if <condition pos:line="66" pos:column="8">(<expr><name pos:line="66" pos:column="9">ipcount<pos:position pos:line="66" pos:column="16"/></name> <operator pos:line="66" pos:column="17">&gt;<pos:position pos:line="66" pos:column="21"/></operator> <literal type="number" pos:line="66" pos:column="19">0<pos:position pos:line="66" pos:column="20"/></literal></expr>)<pos:position pos:line="66" pos:column="21"/></condition><then pos:line="66" pos:column="21"> <block pos:line="66" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="67" pos:column="9">int<pos:position pos:line="67" pos:column="12"/></name></type> <name pos:line="67" pos:column="13">j<pos:position pos:line="67" pos:column="14"/></name></decl>, <decl><type ref="prev"/><name pos:line="67" pos:column="16">k<pos:position pos:line="67" pos:column="17"/></name></decl>;<pos:position pos:line="67" pos:column="18"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="69" pos:column="9">i<pos:position pos:line="69" pos:column="10"/></name><operator pos:line="69" pos:column="10">-&gt;<pos:position pos:line="69" pos:column="15"/></operator><name pos:line="69" pos:column="12">addrs<pos:position pos:line="69" pos:column="17"/></name><operator pos:line="69" pos:column="17">.<pos:position pos:line="69" pos:column="18"/></operator><name pos:line="69" pos:column="18">in_addrs<pos:position pos:line="69" pos:column="26"/></name></name> <operator pos:line="69" pos:column="27">=<pos:position pos:line="69" pos:column="28"/></operator> <operator pos:line="69" pos:column="29">(<pos:position pos:line="69" pos:column="30"/></operator><name pos:line="69" pos:column="30">IpAddress<pos:position pos:line="69" pos:column="39"/></name> <operator pos:line="69" pos:column="40">*<pos:position pos:line="69" pos:column="41"/></operator><operator pos:line="69" pos:column="41">)<pos:position pos:line="69" pos:column="42"/></operator><call><name pos:line="69" pos:column="42">xcalloc<pos:position pos:line="69" pos:column="49"/></name><argument_list pos:line="69" pos:column="49">(<argument><expr><name pos:line="69" pos:column="50">ipcount<pos:position pos:line="69" pos:column="57"/></name></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="59">sizeof<argument_list pos:line="69" pos:column="65">(<argument><expr><name pos:line="69" pos:column="66">IpAddress<pos:position pos:line="69" pos:column="75"/></name></expr></argument>)<pos:position pos:line="69" pos:column="76"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="69" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="78"/></expr_stmt>
        <for pos:line="70" pos:column="9">for <control pos:line="70" pos:column="13">(<init><decl><type><name pos:line="70" pos:column="14">int<pos:position pos:line="70" pos:column="17"/></name></type> <name pos:line="70" pos:column="18">l<pos:position pos:line="70" pos:column="19"/></name> <init pos:line="70" pos:column="20">= <expr><literal type="number" pos:line="70" pos:column="22">0<pos:position pos:line="70" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="70" pos:column="24"/></init> <condition><expr><name pos:line="70" pos:column="25">l<pos:position pos:line="70" pos:column="26"/></name> <operator pos:line="70" pos:column="27">&lt;<pos:position pos:line="70" pos:column="31"/></operator> <name pos:line="70" pos:column="29">ipcount<pos:position pos:line="70" pos:column="36"/></name></expr>;<pos:position pos:line="70" pos:column="37"/></condition> <incr><expr><name pos:line="70" pos:column="38">l<pos:position pos:line="70" pos:column="39"/></name><operator pos:line="70" pos:column="39">++<pos:position pos:line="70" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="70" pos:column="42"/></control>
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="71" pos:column="13">i<pos:position pos:line="71" pos:column="14"/></name><operator pos:line="71" pos:column="14">-&gt;<pos:position pos:line="71" pos:column="19"/></operator><name pos:line="71" pos:column="16">addrs<pos:position pos:line="71" pos:column="21"/></name><operator pos:line="71" pos:column="21">.<pos:position pos:line="71" pos:column="22"/></operator><name pos:line="71" pos:column="22">in_addrs<pos:position pos:line="71" pos:column="30"/></name><index pos:line="71" pos:column="30">[<expr><name pos:line="71" pos:column="31">l<pos:position pos:line="71" pos:column="32"/></name></expr>]<pos:position pos:line="71" pos:column="33"/></index></name><operator pos:line="71" pos:column="33">.<pos:position pos:line="71" pos:column="34"/></operator><call><name pos:line="71" pos:column="34">SetEmpty<pos:position pos:line="71" pos:column="42"/></name><argument_list pos:line="71" pos:column="42">()<pos:position pos:line="71" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="45"/></expr_stmt></block></for> <comment type="line" pos:line="71" pos:column="46">// perform same init actions as constructor would.</comment>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">i<pos:position pos:line="72" pos:column="10"/></name><operator pos:line="72" pos:column="10">-&gt;<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="12">addrs<pos:position pos:line="72" pos:column="17"/></name><operator pos:line="72" pos:column="17">.<pos:position pos:line="72" pos:column="18"/></operator><name pos:line="72" pos:column="18">bad_mask<pos:position pos:line="72" pos:column="26"/></name></name> <operator pos:line="72" pos:column="27">=<pos:position pos:line="72" pos:column="28"/></operator> <operator pos:line="72" pos:column="29">(<pos:position pos:line="72" pos:column="30"/></operator><name pos:line="72" pos:column="30">unsigned<pos:position pos:line="72" pos:column="38"/></name> <name pos:line="72" pos:column="39">char<pos:position pos:line="72" pos:column="43"/></name> <operator pos:line="72" pos:column="44">*<pos:position pos:line="72" pos:column="45"/></operator><operator pos:line="72" pos:column="45">)<pos:position pos:line="72" pos:column="46"/></operator><call><name pos:line="72" pos:column="46">xcalloc<pos:position pos:line="72" pos:column="53"/></name><argument_list pos:line="72" pos:column="53">(<argument><expr><name pos:line="72" pos:column="54">ipcount<pos:position pos:line="72" pos:column="61"/></name></expr></argument>, <argument><expr pos:line="72" pos:column="63">sizeof<operator pos:line="72" pos:column="69">(<pos:position pos:line="72" pos:column="70"/></operator><name pos:line="72" pos:column="70">unsigned<pos:position pos:line="72" pos:column="78"/></name> <name pos:line="72" pos:column="79">char<pos:position pos:line="72" pos:column="83"/></name><operator pos:line="72" pos:column="83">)<pos:position pos:line="72" pos:column="84"/></operator></expr></argument>)<pos:position pos:line="72" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="86"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">memset<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><name><name pos:line="73" pos:column="16">i<pos:position pos:line="73" pos:column="17"/></name><operator pos:line="73" pos:column="17">-&gt;<pos:position pos:line="73" pos:column="22"/></operator><name pos:line="73" pos:column="19">addrs<pos:position pos:line="73" pos:column="24"/></name><operator pos:line="73" pos:column="24">.<pos:position pos:line="73" pos:column="25"/></operator><name pos:line="73" pos:column="25">bad_mask<pos:position pos:line="73" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="35">0<pos:position pos:line="73" pos:column="36"/></literal></expr></argument>, <argument><expr pos:line="73" pos:column="38">sizeof<operator pos:line="73" pos:column="44">(<pos:position pos:line="73" pos:column="45"/></operator><name pos:line="73" pos:column="45">unsigned<pos:position pos:line="73" pos:column="53"/></name> <name pos:line="73" pos:column="54">char<pos:position pos:line="73" pos:column="58"/></name><operator pos:line="73" pos:column="58">)<pos:position pos:line="73" pos:column="59"/></operator> <operator pos:line="73" pos:column="60">*<pos:position pos:line="73" pos:column="61"/></operator> <name pos:line="73" pos:column="62">ipcount<pos:position pos:line="73" pos:column="69"/></name></expr></argument>)<pos:position pos:line="73" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="71"/></expr_stmt>

        <for pos:line="75" pos:column="9">for <control pos:line="75" pos:column="13">(<init><expr><name pos:line="75" pos:column="14">j<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <literal type="number" pos:line="75" pos:column="18">0<pos:position pos:line="75" pos:column="19"/></literal></expr><operator pos:line="75" pos:column="19">,<pos:position pos:line="75" pos:column="20"/></operator> <expr><name pos:line="75" pos:column="21">k<pos:position pos:line="75" pos:column="22"/></name> <operator pos:line="75" pos:column="23">=<pos:position pos:line="75" pos:column="24"/></operator> <literal type="number" pos:line="75" pos:column="25">0<pos:position pos:line="75" pos:column="26"/></literal></expr>;<pos:position pos:line="75" pos:column="27"/></init> <condition><expr><name pos:line="75" pos:column="28">k<pos:position pos:line="75" pos:column="29"/></name> <operator pos:line="75" pos:column="30">&lt;<pos:position pos:line="75" pos:column="34"/></operator> <name pos:line="75" pos:column="32">ipcount<pos:position pos:line="75" pos:column="39"/></name></expr>;<pos:position pos:line="75" pos:column="40"/></condition> <incr><expr><name pos:line="75" pos:column="41">k<pos:position pos:line="75" pos:column="42"/></name><operator pos:line="75" pos:column="42">++<pos:position pos:line="75" pos:column="44"/></operator></expr></incr>)<pos:position pos:line="75" pos:column="45"/></control> <block pos:line="75" pos:column="46">{
            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">( <expr><name><name pos:line="76" pos:column="18">i<pos:position pos:line="76" pos:column="19"/></name><operator pos:line="76" pos:column="19">-&gt;<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="21">addrs<pos:position pos:line="76" pos:column="26"/></name><operator pos:line="76" pos:column="26">.<pos:position pos:line="76" pos:column="27"/></operator><name pos:line="76" pos:column="27">in_addrs<pos:position pos:line="76" pos:column="35"/></name><index pos:line="76" pos:column="35">[<expr><name pos:line="76" pos:column="36">j<pos:position pos:line="76" pos:column="37"/></name></expr>]<pos:position pos:line="76" pos:column="38"/></index></name> <operator pos:line="76" pos:column="39">=<pos:position pos:line="76" pos:column="40"/></operator> <name><name pos:line="76" pos:column="41">A<pos:position pos:line="76" pos:column="42"/></name><index pos:line="76" pos:column="42">[<expr><name pos:line="76" pos:column="43">k<pos:position pos:line="76" pos:column="44"/></name></expr>]<pos:position pos:line="76" pos:column="45"/></index></name></expr> )<pos:position pos:line="76" pos:column="47"/></condition><then pos:line="76" pos:column="47">
                <block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="17">j<pos:position pos:line="77" pos:column="18"/></name><operator pos:line="77" pos:column="18">++<pos:position pos:line="77" pos:column="20"/></operator></expr>;<pos:position pos:line="77" pos:column="21"/></expr_stmt></block></then>
            <else pos:line="78" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="17">debugs<pos:position pos:line="79" pos:column="23"/></name><argument_list pos:line="79" pos:column="23">(<argument><expr><literal type="number" pos:line="79" pos:column="24">14<pos:position pos:line="79" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="28">1<pos:position pos:line="79" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="31">"ipcacheParse: Invalid IP address '"<pos:position pos:line="79" pos:column="67"/></literal> <operator pos:line="79" pos:column="68">&lt;&lt;<pos:position pos:line="79" pos:column="76"/></operator> <name><name pos:line="79" pos:column="71">A<pos:position pos:line="79" pos:column="72"/></name><index pos:line="79" pos:column="72">[<expr><name pos:line="79" pos:column="73">k<pos:position pos:line="79" pos:column="74"/></name></expr>]<pos:position pos:line="79" pos:column="75"/></index></name> <operator pos:line="79" pos:column="76">&lt;&lt;<pos:position pos:line="79" pos:column="84"/></operator> <literal type="string" pos:line="79" pos:column="79">"' in response to '"<pos:position pos:line="79" pos:column="99"/></literal> <operator pos:line="79" pos:column="100">&lt;&lt;<pos:position pos:line="79" pos:column="108"/></operator> <name pos:line="79" pos:column="103">name<pos:position pos:line="79" pos:column="107"/></name> <operator pos:line="79" pos:column="108">&lt;&lt;<pos:position pos:line="79" pos:column="116"/></operator> <literal type="string" pos:line="79" pos:column="111">"'"<pos:position pos:line="79" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="116"/></expr_stmt></block></else></if>
        }<pos:position pos:line="80" pos:column="10"/></block></for>

        <expr_stmt><expr><name><name pos:line="82" pos:column="9">i<pos:position pos:line="82" pos:column="10"/></name><operator pos:line="82" pos:column="10">-&gt;<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="12">addrs<pos:position pos:line="82" pos:column="17"/></name><operator pos:line="82" pos:column="17">.<pos:position pos:line="82" pos:column="18"/></operator><name pos:line="82" pos:column="18">count<pos:position pos:line="82" pos:column="23"/></name></name> <operator pos:line="82" pos:column="24">=<pos:position pos:line="82" pos:column="25"/></operator> <operator pos:line="82" pos:column="26">(<pos:position pos:line="82" pos:column="27"/></operator><name pos:line="82" pos:column="27">unsigned<pos:position pos:line="82" pos:column="35"/></name> <name pos:line="82" pos:column="36">char<pos:position pos:line="82" pos:column="40"/></name><operator pos:line="82" pos:column="40">)<pos:position pos:line="82" pos:column="41"/></operator> <name pos:line="82" pos:column="42">j<pos:position pos:line="82" pos:column="43"/></name></expr>;<pos:position pos:line="82" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="83" pos:column="6"/></block></then></if>

    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name><name pos:line="85" pos:column="9">i<pos:position pos:line="85" pos:column="10"/></name><operator pos:line="85" pos:column="10">-&gt;<pos:position pos:line="85" pos:column="15"/></operator><name pos:line="85" pos:column="12">addrs<pos:position pos:line="85" pos:column="17"/></name><operator pos:line="85" pos:column="17">.<pos:position pos:line="85" pos:column="18"/></operator><name pos:line="85" pos:column="18">count<pos:position pos:line="85" pos:column="23"/></name></name> <operator pos:line="85" pos:column="24">&lt;=<pos:position pos:line="85" pos:column="29"/></operator> <literal type="number" pos:line="85" pos:column="27">0<pos:position pos:line="85" pos:column="28"/></literal></expr>)<pos:position pos:line="85" pos:column="29"/></condition><then pos:line="85" pos:column="29"> <block pos:line="85" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">debugs<pos:position pos:line="86" pos:column="15"/></name><argument_list pos:line="86" pos:column="15">(<argument><expr><literal type="number" pos:line="86" pos:column="16">14<pos:position pos:line="86" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="20">1<pos:position pos:line="86" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="86" pos:column="23">"ipcacheParse: No addresses in response to '"<pos:position pos:line="86" pos:column="68"/></literal> <operator pos:line="86" pos:column="69">&lt;&lt;<pos:position pos:line="86" pos:column="77"/></operator> <name pos:line="86" pos:column="72">name<pos:position pos:line="86" pos:column="76"/></name> <operator pos:line="86" pos:column="77">&lt;&lt;<pos:position pos:line="86" pos:column="85"/></operator> <literal type="string" pos:line="86" pos:column="80">"'"<pos:position pos:line="86" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="85"/></expr_stmt>
        <return pos:line="87" pos:column="9">return <expr><operator pos:line="87" pos:column="16">-<pos:position pos:line="87" pos:column="17"/></operator><literal type="number" pos:line="87" pos:column="17">1<pos:position pos:line="87" pos:column="18"/></literal></expr>;<pos:position pos:line="87" pos:column="19"/></return>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if>

    <if pos:line="90" pos:column="5">if <condition pos:line="90" pos:column="8">(<expr><name pos:line="90" pos:column="9">ttl<pos:position pos:line="90" pos:column="12"/></name> <operator pos:line="90" pos:column="13">==<pos:position pos:line="90" pos:column="15"/></operator> <literal type="number" pos:line="90" pos:column="16">0<pos:position pos:line="90" pos:column="17"/></literal> <operator pos:line="90" pos:column="18">||<pos:position pos:line="90" pos:column="20"/></operator> <name pos:line="90" pos:column="21">ttl<pos:position pos:line="90" pos:column="24"/></name> <operator pos:line="90" pos:column="25">&gt;<pos:position pos:line="90" pos:column="29"/></operator> <name><name pos:line="90" pos:column="27">Config<pos:position pos:line="90" pos:column="33"/></name><operator pos:line="90" pos:column="33">.<pos:position pos:line="90" pos:column="34"/></operator><name pos:line="90" pos:column="34">positiveDnsTtl<pos:position pos:line="90" pos:column="48"/></name></name></expr>)<pos:position pos:line="90" pos:column="49"/></condition><then pos:line="90" pos:column="49">
        <block type="pseudo"><expr_stmt><expr><name pos:line="91" pos:column="9">ttl<pos:position pos:line="91" pos:column="12"/></name> <operator pos:line="91" pos:column="13">=<pos:position pos:line="91" pos:column="14"/></operator> <name><name pos:line="91" pos:column="15">Config<pos:position pos:line="91" pos:column="21"/></name><operator pos:line="91" pos:column="21">.<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="22">positiveDnsTtl<pos:position pos:line="91" pos:column="36"/></name></name></expr>;<pos:position pos:line="91" pos:column="37"/></expr_stmt></block></then></if>

    <if pos:line="93" pos:column="5">if <condition pos:line="93" pos:column="8">(<expr><name pos:line="93" pos:column="9">ttl<pos:position pos:line="93" pos:column="12"/></name> <operator pos:line="93" pos:column="13">&lt;<pos:position pos:line="93" pos:column="17"/></operator> <name><name pos:line="93" pos:column="15">Config<pos:position pos:line="93" pos:column="21"/></name><operator pos:line="93" pos:column="21">.<pos:position pos:line="93" pos:column="22"/></operator><name pos:line="93" pos:column="22">negativeDnsTtl<pos:position pos:line="93" pos:column="36"/></name></name></expr>)<pos:position pos:line="93" pos:column="37"/></condition><then pos:line="93" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="9">ttl<pos:position pos:line="94" pos:column="12"/></name> <operator pos:line="94" pos:column="13">=<pos:position pos:line="94" pos:column="14"/></operator> <name><name pos:line="94" pos:column="15">Config<pos:position pos:line="94" pos:column="21"/></name><operator pos:line="94" pos:column="21">.<pos:position pos:line="94" pos:column="22"/></operator><name pos:line="94" pos:column="22">negativeDnsTtl<pos:position pos:line="94" pos:column="36"/></name></name></expr>;<pos:position pos:line="94" pos:column="37"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="96" pos:column="5">i<pos:position pos:line="96" pos:column="6"/></name><operator pos:line="96" pos:column="6">-&gt;<pos:position pos:line="96" pos:column="11"/></operator><name pos:line="96" pos:column="8">expires<pos:position pos:line="96" pos:column="15"/></name></name> <operator pos:line="96" pos:column="16">=<pos:position pos:line="96" pos:column="17"/></operator> <name pos:line="96" pos:column="18">squid_curtime<pos:position pos:line="96" pos:column="31"/></name> <operator pos:line="96" pos:column="32">+<pos:position pos:line="96" pos:column="33"/></operator> <name pos:line="96" pos:column="34">ttl<pos:position pos:line="96" pos:column="37"/></name></expr>;<pos:position pos:line="96" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="98" pos:column="5">i<pos:position pos:line="98" pos:column="6"/></name><operator pos:line="98" pos:column="6">-&gt;<pos:position pos:line="98" pos:column="11"/></operator><name pos:line="98" pos:column="8">flags<pos:position pos:line="98" pos:column="13"/></name><operator pos:line="98" pos:column="13">.<pos:position pos:line="98" pos:column="14"/></operator><name pos:line="98" pos:column="14">negcached<pos:position pos:line="98" pos:column="23"/></name></name> <operator pos:line="98" pos:column="24">=<pos:position pos:line="98" pos:column="25"/></operator> <literal type="number" pos:line="98" pos:column="26">0<pos:position pos:line="98" pos:column="27"/></literal></expr>;<pos:position pos:line="98" pos:column="28"/></expr_stmt>

    <return pos:line="100" pos:column="5">return <expr><name><name pos:line="100" pos:column="12">i<pos:position pos:line="100" pos:column="13"/></name><operator pos:line="100" pos:column="13">-&gt;<pos:position pos:line="100" pos:column="18"/></operator><name pos:line="100" pos:column="15">addrs<pos:position pos:line="100" pos:column="20"/></name><operator pos:line="100" pos:column="20">.<pos:position pos:line="100" pos:column="21"/></operator><name pos:line="100" pos:column="21">count<pos:position pos:line="100" pos:column="26"/></name></name></expr>;<pos:position pos:line="100" pos:column="27"/></return>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2225_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">finishingBrokenPost<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">()<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="4" pos:column="24"/></name></expr></cpp:if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name><name pos:line="5" pos:column="10">Config<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">.<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">accessList<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">.<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">brokenPosts<pos:position pos:line="5" pos:column="39"/></name></name></expr>)<pos:position pos:line="5" pos:column="40"/></condition><then pos:line="5" pos:column="40"> <block pos:line="5" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">11<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">5<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">HERE<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">&lt;&lt;<pos:position pos:line="6" pos:column="36"/></operator> <literal type="string" pos:line="6" pos:column="31">"No brokenPosts list"<pos:position pos:line="6" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>
        <return pos:line="7" pos:column="9">return <expr><literal type="boolean" pos:line="7" pos:column="16">false<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ACLFilledChecklist<pos:position pos:line="10" pos:column="23"/></name></type> <name pos:line="10" pos:column="24">ch<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name><name pos:line="10" pos:column="27">Config<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">.<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="34">accessList<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">.<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">brokenPosts<pos:position pos:line="10" pos:column="56"/></name></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="58">originalRequest<pos:position pos:line="10" pos:column="73"/></name><argument_list pos:line="10" pos:column="73">()<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="77">NULL<pos:position pos:line="10" pos:column="81"/></name></expr></argument>)<pos:position pos:line="10" pos:column="82"/></argument_list></decl>;<pos:position pos:line="10" pos:column="83"/></decl_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name><name pos:line="11" pos:column="9">ch<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">.<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">fastCheck<pos:position pos:line="11" pos:column="21"/></name></name><argument_list pos:line="11" pos:column="21">()<pos:position pos:line="11" pos:column="23"/></argument_list></call> <operator pos:line="11" pos:column="24">!=<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">ACCESS_ALLOWED<pos:position pos:line="11" pos:column="41"/></name></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42"> <block pos:line="11" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">11<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="20">5<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">HERE<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">&lt;&lt;<pos:position pos:line="12" pos:column="36"/></operator> <literal type="string" pos:line="12" pos:column="31">"didn't match brokenPosts"<pos:position pos:line="12" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><literal type="boolean" pos:line="13" pos:column="16">false<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><call><name><name pos:line="16" pos:column="10">Comm<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">::<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">IsConnOpen<pos:position pos:line="16" pos:column="26"/></name></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">serverConnection<pos:position pos:line="16" pos:column="43"/></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45"> <block pos:line="16" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">11<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">3<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">HERE<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">&lt;&lt;<pos:position pos:line="17" pos:column="36"/></operator> <literal type="string" pos:line="17" pos:column="31">"ignoring broken POST for closed "<pos:position pos:line="17" pos:column="65"/></literal> <operator pos:line="17" pos:column="66">&lt;&lt;<pos:position pos:line="17" pos:column="74"/></operator> <name pos:line="17" pos:column="69">serverConnection<pos:position pos:line="17" pos:column="85"/></name></expr></argument>)<pos:position pos:line="17" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">assert<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">closeHandler<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">!=<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="32">NULL<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><literal type="boolean" pos:line="19" pos:column="16">true<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></return> <comment type="line" pos:line="19" pos:column="22">// prevent caller from proceeding as if nothing happened</comment>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">debugs<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="number" pos:line="22" pos:column="12">11<pos:position pos:line="22" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="16">3<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="19">"finishingBrokenPost: fixing broken POST"<pos:position pos:line="22" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="62"/></expr_stmt>
    <typedef pos:line="23" pos:column="5">typedef <type><name><name pos:line="23" pos:column="13">CommCbMemFunT<pos:position pos:line="23" pos:column="26"/></name><argument_list type="generic" pos:line="23" pos:column="26">&lt;<argument><expr><name pos:line="23" pos:column="27">HttpStateData<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">CommIoCbParams<pos:position pos:line="23" pos:column="56"/></name></expr></argument>&gt;<pos:position pos:line="23" pos:column="60"/></argument_list></name></type> <name pos:line="23" pos:column="58">Dialer<pos:position pos:line="23" pos:column="64"/></name>;<pos:position pos:line="23" pos:column="65"/></typedef>
    <expr_stmt><expr><name pos:line="24" pos:column="5">requestSender<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <call><name pos:line="24" pos:column="21">JobCallback<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><literal type="number" pos:line="24" pos:column="33">11<pos:position pos:line="24" pos:column="35"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="24" pos:column="36">5<pos:position pos:line="24" pos:column="37"/></literal></expr></argument>,
                                <argument><expr><name pos:line="25" pos:column="33">Dialer<pos:position pos:line="25" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="41">this<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="47">HttpStateData<pos:position pos:line="25" pos:column="60"/></name><operator pos:line="25" pos:column="60">::<pos:position pos:line="25" pos:column="62"/></operator><name pos:line="25" pos:column="62">wroteLast<pos:position pos:line="25" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="26" pos:column="5">Comm<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">::<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">Write<pos:position pos:line="26" pos:column="16"/></name></name><argument_list pos:line="26" pos:column="16">(<argument><expr><name pos:line="26" pos:column="17">serverConnection<pos:position pos:line="26" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="35">"\r\n"<pos:position pos:line="26" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="43">2<pos:position pos:line="26" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="46">requestSender<pos:position pos:line="26" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="61">NULL<pos:position pos:line="26" pos:column="65"/></name></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt>
    <return pos:line="27" pos:column="5">return <expr><literal type="boolean" pos:line="27" pos:column="12">true<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></return>
<cpp:else pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">else<pos:position pos:line="28" pos:column="6"/></cpp:directive></cpp:else>
    <return pos:line="29" pos:column="5">return <expr><literal type="boolean" pos:line="29" pos:column="12">false<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="30" pos:column="8">/* USE_HTTP_VIOLATIONS */</comment>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

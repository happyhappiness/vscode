<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4979_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBufList<pos:position pos:line="1" pos:column="9"/></name></type>
<name><name pos:line="2" pos:column="1">Acl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">InnerNode<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">dump<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list> <specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SBufList<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">rv<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><decl><type><name><name pos:line="5" pos:column="10">Nodes<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">::<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">const_iterator<pos:position pos:line="5" pos:column="31"/></name></name></type> <name pos:line="5" pos:column="32">i<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><call><name><name pos:line="5" pos:column="36">nodes<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">.<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">begin<pos:position pos:line="5" pos:column="47"/></name></name><argument_list pos:line="5" pos:column="47">()<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="50"/></init> <condition><expr><name pos:line="5" pos:column="51">i<pos:position pos:line="5" pos:column="52"/></name> <operator pos:line="5" pos:column="53">!=<pos:position pos:line="5" pos:column="55"/></operator> <call><name><name pos:line="5" pos:column="56">nodes<pos:position pos:line="5" pos:column="61"/></name><operator pos:line="5" pos:column="61">.<pos:position pos:line="5" pos:column="62"/></operator><name pos:line="5" pos:column="62">end<pos:position pos:line="5" pos:column="65"/></name></name><argument_list pos:line="5" pos:column="65">()<pos:position pos:line="5" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="68"/></condition> <incr><expr><operator pos:line="5" pos:column="69">++<pos:position pos:line="5" pos:column="71"/></operator><name pos:line="5" pos:column="71">i<pos:position pos:line="5" pos:column="72"/></name></expr></incr>)<pos:position pos:line="5" pos:column="73"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="6" pos:column="9">rv<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">.<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">push_back<pos:position pos:line="6" pos:column="21"/></name></name><argument_list pos:line="6" pos:column="21">(<argument><expr><call><name pos:line="6" pos:column="22">SBuf<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">(<argument><expr><name><operator pos:line="6" pos:column="27">(<pos:position pos:line="6" pos:column="28"/></operator><operator pos:line="6" pos:column="28">*<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">i<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">)<pos:position pos:line="6" pos:column="31"/></operator><operator pos:line="6" pos:column="31">-&gt;<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="33">name<pos:position pos:line="6" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt></block></for>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">rv<pos:position pos:line="7" pos:column="14"/></name></expr>;<pos:position pos:line="7" pos:column="15"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

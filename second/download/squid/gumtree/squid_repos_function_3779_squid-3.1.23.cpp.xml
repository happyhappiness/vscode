<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3779_squid-3.1.23.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">CbcPointer<pos:position pos:line="1" pos:column="11"/></name><argument_list type="generic" pos:line="1" pos:column="11">&lt;<argument><expr><name><name pos:line="1" pos:column="12">Adaptation<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Initiate<pos:position pos:line="1" pos:column="32"/></name></name></expr></argument>&gt;<pos:position pos:line="1" pos:column="36"/></argument_list></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Initiator<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">initiateAdaptation<pos:position pos:line="2" pos:column="42"/></name></name><parameter_list pos:line="2" pos:column="42">(<parameter><decl><type><name pos:line="2" pos:column="43">Initiate<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">x<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">CbcPointer<pos:position pos:line="4" pos:column="15"/></name><argument_list type="generic" pos:line="4" pos:column="15">&lt;<argument><expr><name pos:line="4" pos:column="16">Initiate<pos:position pos:line="4" pos:column="24"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="28"/></argument_list></name></type> <name pos:line="4" pos:column="26">i<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">(<argument><expr><name pos:line="4" pos:column="28">x<pos:position pos:line="4" pos:column="29"/></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">x<pos:position pos:line="5" pos:column="6"/></name><operator pos:line="5" pos:column="6">-&gt;<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="8">initiator<pos:position pos:line="5" pos:column="17"/></name></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">this<pos:position pos:line="5" pos:column="22"/></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Start<pos:position pos:line="6" pos:column="10"/></name><argument_list pos:line="6" pos:column="10">(<argument><expr><name pos:line="6" pos:column="11">x<pos:position pos:line="6" pos:column="12"/></name></expr></argument>)<pos:position pos:line="6" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="14"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">i<pos:position pos:line="7" pos:column="13"/></name></expr>;<pos:position pos:line="7" pos:column="14"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_862_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">comm_set_transparent<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">int<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">fd<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><operator pos:line="4" pos:column="5">!<pos:position pos:line="4" pos:column="6"/></operator><name pos:line="4" pos:column="6">LINUX_TPROXY2<pos:position pos:line="4" pos:column="19"/></name></expr></cpp:if>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><call><name pos:line="5" pos:column="5">defined<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">IP_TRANSPARENT<pos:position pos:line="5" pos:column="27"/></name></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">tos<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">1<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">setsockopt<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">fd<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="24">SOL_IP<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="32">IP_TRANSPARENT<pos:position pos:line="7" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="48">(<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="49">char<pos:position pos:line="7" pos:column="53"/></name> <operator pos:line="7" pos:column="54">*<pos:position pos:line="7" pos:column="55"/></operator><operator pos:line="7" pos:column="55">)<pos:position pos:line="7" pos:column="56"/></operator> <operator pos:line="7" pos:column="57">&amp;<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="58">tos<pos:position pos:line="7" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="63">sizeof<argument_list pos:line="7" pos:column="69">(<argument><expr><name pos:line="7" pos:column="70">int<pos:position pos:line="7" pos:column="73"/></name></expr></argument>)<pos:position pos:line="7" pos:column="74"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></call> <operator pos:line="7" pos:column="76">&lt;<pos:position pos:line="7" pos:column="80"/></operator> <literal type="number" pos:line="7" pos:column="78">0<pos:position pos:line="7" pos:column="79"/></literal></expr>)<pos:position pos:line="7" pos:column="80"/></condition><then pos:line="7" pos:column="80"> <block pos:line="7" pos:column="81">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">50<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="20">DBG_IMPORTANT<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="35">"comm_open: setsockopt(IP_TRANSPARENT) on FD "<pos:position pos:line="8" pos:column="81"/></literal> <operator pos:line="8" pos:column="82">&lt;&lt;<pos:position pos:line="8" pos:column="90"/></operator> <name pos:line="8" pos:column="85">fd<pos:position pos:line="8" pos:column="87"/></name> <operator pos:line="8" pos:column="88">&lt;&lt;<pos:position pos:line="8" pos:column="96"/></operator> <literal type="string" pos:line="8" pos:column="91">": "<pos:position pos:line="8" pos:column="95"/></literal> <operator pos:line="8" pos:column="96">&lt;&lt;<pos:position pos:line="8" pos:column="104"/></operator> <call><name pos:line="8" pos:column="99">xstrerror<pos:position pos:line="8" pos:column="108"/></name><argument_list pos:line="8" pos:column="108">()<pos:position pos:line="8" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="112"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else <block pos:line="9" pos:column="12">{
        <comment type="block" pos:line="10" pos:column="9">/* mark the socket as having transparent options */</comment>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">fd_table<pos:position pos:line="11" pos:column="17"/></name><index pos:line="11" pos:column="17">[<expr><name pos:line="11" pos:column="18">fd<pos:position pos:line="11" pos:column="20"/></name></expr>]<pos:position pos:line="11" pos:column="21"/></index></name><operator pos:line="11" pos:column="21">.<pos:position pos:line="11" pos:column="22"/></operator><name><name pos:line="11" pos:column="22">flags<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">.<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">transparent<pos:position pos:line="11" pos:column="39"/></name></name> <operator pos:line="11" pos:column="40">=<pos:position pos:line="11" pos:column="41"/></operator> <literal type="number" pos:line="11" pos:column="42">1<pos:position pos:line="11" pos:column="43"/></literal></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></else></if>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debugs<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">50<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="16">DBG_CRITICAL<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">"WARNING: comm_open: setsockopt(IP_TRANSPARENT) not supported on this platform"<pos:position pos:line="14" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="111"/></expr_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="15" pos:column="8">/* sockopt */</comment>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="16" pos:column="8">/* !LINUX_TPROXY2 */</comment>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

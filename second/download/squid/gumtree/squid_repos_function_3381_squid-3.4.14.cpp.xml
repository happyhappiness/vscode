<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3381_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">oid<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">peer_Inst<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">oid<pos:position pos:line="2" pos:column="14"/></name> <modifier pos:line="2" pos:column="15">*<pos:position pos:line="2" pos:column="16"/></modifier></type> <name pos:line="2" pos:column="17">name<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="23">snint<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">len<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">mib_tree_entry<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">current<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">oid_ParseFn<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier><modifier pos:line="2" pos:column="75">*<pos:position pos:line="2" pos:column="76"/></modifier></type> <name pos:line="2" pos:column="77">Fn<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">oid<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">instance<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">CachePeer<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">peers<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name><name pos:line="5" pos:column="24">Config<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">.<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">peers<pos:position pos:line="5" pos:column="36"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">peers<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">==<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">NULL<pos:position pos:line="7" pos:column="22"/></name></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23"> <block pos:line="7" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">49<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">6<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"snmp peer_Inst: No Peers."<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">current<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <name><name pos:line="9" pos:column="19">current<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">parent<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">parent<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">-&gt;<pos:position pos:line="9" pos:column="47"/></operator><name pos:line="9" pos:column="44">parent<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">-&gt;<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="52">leaves<pos:position pos:line="9" pos:column="58"/></name><index pos:line="9" pos:column="58">[<expr><literal type="number" pos:line="9" pos:column="59">1<pos:position pos:line="9" pos:column="60"/></literal></expr>]<pos:position pos:line="9" pos:column="61"/></index></name></expr>;<pos:position pos:line="9" pos:column="62"/></expr_stmt>
        <while pos:line="10" pos:column="9">while <condition pos:line="10" pos:column="15">(<expr><operator pos:line="10" pos:column="16">(<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">current<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">)<pos:position pos:line="10" pos:column="25"/></operator> <operator pos:line="10" pos:column="26">&amp;&amp;<pos:position pos:line="10" pos:column="36"/></operator> <operator pos:line="10" pos:column="29">(<pos:position pos:line="10" pos:column="30"/></operator><operator pos:line="10" pos:column="30">!<pos:position pos:line="10" pos:column="31"/></operator><name><name pos:line="10" pos:column="31">current<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">-&gt;<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="40">parsefunction<pos:position pos:line="10" pos:column="53"/></name></name><operator pos:line="10" pos:column="53">)<pos:position pos:line="10" pos:column="54"/></operator></expr>)<pos:position pos:line="10" pos:column="55"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="13">current<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">=<pos:position pos:line="11" pos:column="22"/></operator> <name><name pos:line="11" pos:column="23">current<pos:position pos:line="11" pos:column="30"/></name><operator pos:line="11" pos:column="30">-&gt;<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="32">leaves<pos:position pos:line="11" pos:column="38"/></name><index pos:line="11" pos:column="38">[<expr><literal type="number" pos:line="11" pos:column="39">0<pos:position pos:line="11" pos:column="40"/></literal></expr>]<pos:position pos:line="11" pos:column="41"/></index></name></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt></block></while>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">current<pos:position pos:line="13" pos:column="21"/></name></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22">
            <block type="pseudo"><return pos:line="14" pos:column="13">return <expr><operator pos:line="14" pos:column="20">(<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">instance<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">)<pos:position pos:line="14" pos:column="30"/></operator></expr>;<pos:position pos:line="14" pos:column="31"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="16" pos:column="9">instance<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <call><name pos:line="16" pos:column="20">client_Inst<pos:position pos:line="16" pos:column="31"/></name><argument_list pos:line="16" pos:column="31">(<argument><expr><name><name pos:line="16" pos:column="32">current<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">-&gt;<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="41">name<pos:position pos:line="16" pos:column="45"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="47">len<pos:position pos:line="16" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="52">current<pos:position pos:line="16" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="61">Fn<pos:position pos:line="16" pos:column="63"/></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then> <elseif pos:line="17" pos:column="7">else <if pos:line="17" pos:column="12">if <condition pos:line="17" pos:column="15">(<expr><operator pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">len<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">&lt;=<pos:position pos:line="17" pos:column="26"/></operator> <name><name pos:line="17" pos:column="24">current<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">len<pos:position pos:line="17" pos:column="36"/></name></name></expr>)<pos:position pos:line="17" pos:column="37"/></condition><then pos:line="17" pos:column="37"> <block pos:line="17" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">49<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">6<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"snmp peer_Inst: *len &lt;= current-&gt;len ???"<pos:position pos:line="18" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">instance<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <operator pos:line="19" pos:column="20">(<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">oid<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">*<pos:position pos:line="19" pos:column="26"/></operator><operator pos:line="19" pos:column="26">)<pos:position pos:line="19" pos:column="27"/></operator><call><name pos:line="19" pos:column="27">xmalloc<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">(<argument><expr><sizeof pos:line="19" pos:column="35">sizeof<argument_list pos:line="19" pos:column="41">(<argument><expr><operator pos:line="19" pos:column="42">*<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="43">name<pos:position pos:line="19" pos:column="47"/></name></expr></argument>)<pos:position pos:line="19" pos:column="48"/></argument_list></sizeof> <operator pos:line="19" pos:column="49">*<pos:position pos:line="19" pos:column="50"/></operator> <operator pos:line="19" pos:column="51">(<pos:position pos:line="19" pos:column="52"/></operator> <operator pos:line="19" pos:column="53">*<pos:position pos:line="19" pos:column="54"/></operator><name pos:line="19" pos:column="54">len<pos:position pos:line="19" pos:column="57"/></name> <operator pos:line="19" pos:column="58">+<pos:position pos:line="19" pos:column="59"/></operator> <literal type="number" pos:line="19" pos:column="60">1<pos:position pos:line="19" pos:column="61"/></literal><operator pos:line="19" pos:column="61">)<pos:position pos:line="19" pos:column="62"/></operator></expr></argument>)<pos:position pos:line="19" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">memcpy<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">instance<pos:position pos:line="20" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="26">name<pos:position pos:line="20" pos:column="30"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="32">sizeof<argument_list pos:line="20" pos:column="38">(<argument><expr><operator pos:line="20" pos:column="39">*<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="40">name<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></sizeof> <operator pos:line="20" pos:column="46">*<pos:position pos:line="20" pos:column="47"/></operator> <operator pos:line="20" pos:column="48">(<pos:position pos:line="20" pos:column="49"/></operator><operator pos:line="20" pos:column="49">*<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">len<pos:position pos:line="20" pos:column="53"/></name><operator pos:line="20" pos:column="53">)<pos:position pos:line="20" pos:column="54"/></operator></expr></argument>)<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">instance<pos:position pos:line="21" pos:column="17"/></name><index pos:line="21" pos:column="17">[<expr><operator pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">len<pos:position pos:line="21" pos:column="22"/></name></expr>]<pos:position pos:line="21" pos:column="23"/></index></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="26">1<pos:position pos:line="21" pos:column="27"/></literal></expr> ;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="22" pos:column="9">*<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">len<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">+=<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">1<pos:position pos:line="22" pos:column="18"/></literal></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if></elseif> <else pos:line="23" pos:column="7">else <block pos:line="23" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">int<pos:position pos:line="24" pos:column="12"/></name></type> <name pos:line="24" pos:column="13">no<pos:position pos:line="24" pos:column="15"/></name> <init pos:line="24" pos:column="16">= <expr><name><name pos:line="24" pos:column="18">name<pos:position pos:line="24" pos:column="22"/></name><index pos:line="24" pos:column="22">[<expr><name><name pos:line="24" pos:column="23">current<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">len<pos:position pos:line="24" pos:column="35"/></name></name></expr>]<pos:position pos:line="24" pos:column="36"/></index></name></expr></init></decl> ;<pos:position pos:line="24" pos:column="38"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">int<pos:position pos:line="25" pos:column="12"/></name></type> <name pos:line="25" pos:column="13">i<pos:position pos:line="25" pos:column="14"/></name></decl>;<pos:position pos:line="25" pos:column="15"/></decl_stmt>
        <comment type="line" pos:line="26" pos:column="9">// Note: This works because the Config.peers keeps its index according to its position.</comment>
        <for pos:line="27" pos:column="9">for <control pos:line="27" pos:column="13">( <init><expr><name pos:line="27" pos:column="15">i<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator><literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal></expr> ;<pos:position pos:line="27" pos:column="20"/></init> <condition><expr><name pos:line="27" pos:column="21">peers<pos:position pos:line="27" pos:column="26"/></name> <operator pos:line="27" pos:column="27">&amp;&amp;<pos:position pos:line="27" pos:column="37"/></operator> <operator pos:line="27" pos:column="30">(<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">i<pos:position pos:line="27" pos:column="32"/></name> <operator pos:line="27" pos:column="33">&lt;<pos:position pos:line="27" pos:column="37"/></operator> <name pos:line="27" pos:column="35">no<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">)<pos:position pos:line="27" pos:column="38"/></operator></expr> ;<pos:position pos:line="27" pos:column="40"/></condition> <incr><expr><name pos:line="27" pos:column="41">peers<pos:position pos:line="27" pos:column="46"/></name> <operator pos:line="27" pos:column="47">=<pos:position pos:line="27" pos:column="48"/></operator> <name><name pos:line="27" pos:column="49">peers<pos:position pos:line="27" pos:column="54"/></name><operator pos:line="27" pos:column="54">-&gt;<pos:position pos:line="27" pos:column="59"/></operator><name pos:line="27" pos:column="56">next<pos:position pos:line="27" pos:column="60"/></name></name></expr> <operator pos:line="27" pos:column="61">,<pos:position pos:line="27" pos:column="62"/></operator> <expr><operator pos:line="27" pos:column="63">++<pos:position pos:line="27" pos:column="65"/></operator><name pos:line="27" pos:column="65">i<pos:position pos:line="27" pos:column="66"/></name></expr></incr> )<pos:position pos:line="27" pos:column="68"/></control> <block type="pseudo"><empty_stmt pos:line="27" pos:column="69">;<pos:position pos:line="27" pos:column="70"/></empty_stmt></block></for>

        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">peers<pos:position pos:line="29" pos:column="18"/></name></expr>)<pos:position pos:line="29" pos:column="19"/></condition><then pos:line="29" pos:column="19"> <block pos:line="29" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">debugs<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><literal type="number" pos:line="30" pos:column="20">49<pos:position pos:line="30" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="24">6<pos:position pos:line="30" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="27">"snmp peer_Inst: Encode peer #"<pos:position pos:line="30" pos:column="58"/></literal> <operator pos:line="30" pos:column="59">&lt;&lt;<pos:position pos:line="30" pos:column="67"/></operator> <name pos:line="30" pos:column="62">i<pos:position pos:line="30" pos:column="63"/></name></expr></argument>)<pos:position pos:line="30" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name pos:line="31" pos:column="13">instance<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <operator pos:line="31" pos:column="24">(<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">oid<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">*<pos:position pos:line="31" pos:column="30"/></operator><operator pos:line="31" pos:column="30">)<pos:position pos:line="31" pos:column="31"/></operator><call><name pos:line="31" pos:column="31">xmalloc<pos:position pos:line="31" pos:column="38"/></name><argument_list pos:line="31" pos:column="38">(<argument><expr><sizeof pos:line="31" pos:column="39">sizeof<argument_list pos:line="31" pos:column="45">(<argument><expr><operator pos:line="31" pos:column="46">*<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="47">name<pos:position pos:line="31" pos:column="51"/></name></expr></argument>)<pos:position pos:line="31" pos:column="52"/></argument_list></sizeof> <operator pos:line="31" pos:column="53">*<pos:position pos:line="31" pos:column="54"/></operator> <operator pos:line="31" pos:column="55">(<pos:position pos:line="31" pos:column="56"/></operator><name><name pos:line="31" pos:column="56">current<pos:position pos:line="31" pos:column="63"/></name><operator pos:line="31" pos:column="63">-&gt;<pos:position pos:line="31" pos:column="68"/></operator><name pos:line="31" pos:column="65">len<pos:position pos:line="31" pos:column="68"/></name></name> <operator pos:line="31" pos:column="69">+<pos:position pos:line="31" pos:column="70"/></operator> <literal type="number" pos:line="31" pos:column="71">1<pos:position pos:line="31" pos:column="72"/></literal> <operator pos:line="31" pos:column="73">)<pos:position pos:line="31" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">memcpy<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><name pos:line="32" pos:column="20">instance<pos:position pos:line="32" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="30">name<pos:position pos:line="32" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="36">(<pos:position pos:line="32" pos:column="37"/></operator><sizeof pos:line="32" pos:column="37">sizeof<argument_list pos:line="32" pos:column="43">(<argument><expr><operator pos:line="32" pos:column="44">*<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="45">name<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></sizeof> <operator pos:line="32" pos:column="51">*<pos:position pos:line="32" pos:column="52"/></operator> <name><name pos:line="32" pos:column="53">current<pos:position pos:line="32" pos:column="60"/></name><operator pos:line="32" pos:column="60">-&gt;<pos:position pos:line="32" pos:column="65"/></operator><name pos:line="32" pos:column="62">len<pos:position pos:line="32" pos:column="65"/></name></name> <operator pos:line="32" pos:column="66">)<pos:position pos:line="32" pos:column="67"/></operator></expr></argument>)<pos:position pos:line="32" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">instance<pos:position pos:line="33" pos:column="21"/></name><index pos:line="33" pos:column="21">[<expr><name><name pos:line="33" pos:column="22">current<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">-&gt;<pos:position pos:line="33" pos:column="34"/></operator><name pos:line="33" pos:column="31">len<pos:position pos:line="33" pos:column="34"/></name></name></expr>]<pos:position pos:line="33" pos:column="35"/></index></name> <operator pos:line="33" pos:column="36">=<pos:position pos:line="33" pos:column="37"/></operator> <name pos:line="33" pos:column="38">no<pos:position pos:line="33" pos:column="40"/></name> <operator pos:line="33" pos:column="41">+<pos:position pos:line="33" pos:column="42"/></operator> <literal type="number" pos:line="33" pos:column="43">1<pos:position pos:line="33" pos:column="44"/></literal></expr> ;<pos:position pos:line="33" pos:column="46"/></expr_stmt> <comment type="line" pos:line="33" pos:column="47">// i.e. the next index on cache_peeer table.</comment>
        }<pos:position pos:line="34" pos:column="10"/></block></then> <else pos:line="34" pos:column="11">else <block pos:line="34" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">debugs<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><literal type="number" pos:line="35" pos:column="20">49<pos:position pos:line="35" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="24">6<pos:position pos:line="35" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="27">"snmp peer_Inst: We have "<pos:position pos:line="35" pos:column="53"/></literal> <operator pos:line="35" pos:column="54">&lt;&lt;<pos:position pos:line="35" pos:column="62"/></operator> <name pos:line="35" pos:column="57">i<pos:position pos:line="35" pos:column="58"/></name> <operator pos:line="35" pos:column="59">&lt;&lt;<pos:position pos:line="35" pos:column="67"/></operator> <literal type="string" pos:line="35" pos:column="62">" peers. Can't find #"<pos:position pos:line="35" pos:column="84"/></literal> <operator pos:line="35" pos:column="85">&lt;&lt;<pos:position pos:line="35" pos:column="93"/></operator> <name pos:line="35" pos:column="88">no<pos:position pos:line="35" pos:column="90"/></name></expr></argument>)<pos:position pos:line="35" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="92"/></expr_stmt>
            <return pos:line="36" pos:column="13">return <expr><operator pos:line="36" pos:column="20">(<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">instance<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">)<pos:position pos:line="36" pos:column="30"/></operator></expr>;<pos:position pos:line="36" pos:column="31"/></return>
        }<pos:position pos:line="37" pos:column="10"/></block></else></if>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>
    <expr_stmt><expr><operator pos:line="39" pos:column="5">*<pos:position pos:line="39" pos:column="6"/></operator><name pos:line="39" pos:column="6">Fn<pos:position pos:line="39" pos:column="8"/></name> <operator pos:line="39" pos:column="9">=<pos:position pos:line="39" pos:column="10"/></operator> <name><name pos:line="39" pos:column="11">current<pos:position pos:line="39" pos:column="18"/></name><operator pos:line="39" pos:column="18">-&gt;<pos:position pos:line="39" pos:column="23"/></operator><name pos:line="39" pos:column="20">parsefunction<pos:position pos:line="39" pos:column="33"/></name></name></expr>;<pos:position pos:line="39" pos:column="34"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">instance<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">)<pos:position pos:line="40" pos:column="22"/></operator></expr>;<pos:position pos:line="40" pos:column="23"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_869_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parseNamedIntList<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">data<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">String<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">&amp;<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="51">name<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="57">std<pos:position pos:line="2" pos:column="60"/></name><operator pos:line="2" pos:column="60">::<pos:position pos:line="2" pos:column="62"/></operator><name><name pos:line="2" pos:column="62">vector<pos:position pos:line="2" pos:column="68"/></name><argument_list type="generic" pos:line="2" pos:column="68">&lt;<argument><expr><name pos:line="2" pos:column="69">int<pos:position pos:line="2" pos:column="72"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="76"/></argument_list></name></name> <modifier pos:line="2" pos:column="74">&amp;<pos:position pos:line="2" pos:column="79"/></modifier></type><name pos:line="2" pos:column="75">list<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">data<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">&amp;&amp;<pos:position pos:line="4" pos:column="24"/></operator> <operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator><call><name pos:line="4" pos:column="18">strncmp<pos:position pos:line="4" pos:column="25"/></name><argument_list pos:line="4" pos:column="25">(<argument><expr><name pos:line="4" pos:column="26">data<pos:position pos:line="4" pos:column="30"/></name></expr></argument>, <argument><expr><call><name><name pos:line="4" pos:column="32">name<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">.<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">rawBuf<pos:position pos:line="4" pos:column="43"/></name></name><argument_list pos:line="4" pos:column="43">()<pos:position pos:line="4" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="4" pos:column="47">name<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">.<pos:position pos:line="4" pos:column="52"/></operator><name pos:line="4" pos:column="52">size<pos:position pos:line="4" pos:column="56"/></name></name><argument_list pos:line="4" pos:column="56">()<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="59"/></argument_list></call> <operator pos:line="4" pos:column="60">==<pos:position pos:line="4" pos:column="62"/></operator> <literal type="number" pos:line="4" pos:column="63">0<pos:position pos:line="4" pos:column="64"/></literal><operator pos:line="4" pos:column="64">)<pos:position pos:line="4" pos:column="65"/></operator></expr>)<pos:position pos:line="4" pos:column="66"/></condition><then pos:line="4" pos:column="66"> <block pos:line="4" pos:column="67">{
        <expr_stmt><expr><name pos:line="5" pos:column="9">data<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">+=<pos:position pos:line="5" pos:column="16"/></operator> <call><name><name pos:line="5" pos:column="17">name<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">.<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">size<pos:position pos:line="5" pos:column="26"/></name></name><argument_list pos:line="5" pos:column="26">()<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">data<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">==<pos:position pos:line="6" pos:column="21"/></operator> <literal type="char" pos:line="6" pos:column="22">'='<pos:position pos:line="6" pos:column="25"/></literal></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26"> <block pos:line="6" pos:column="27">{
            <while pos:line="7" pos:column="13">while <condition pos:line="7" pos:column="19">(<expr><literal type="boolean" pos:line="7" pos:column="20">true<pos:position pos:line="7" pos:column="24"/></literal></expr>)<pos:position pos:line="7" pos:column="25"/></condition> <block pos:line="7" pos:column="26">{
                <expr_stmt><expr><operator pos:line="8" pos:column="17">++<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">data<pos:position pos:line="8" pos:column="23"/></name></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
                <decl_stmt><decl><type><name pos:line="9" pos:column="17">int<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">value<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><literal type="number" pos:line="9" pos:column="29">0<pos:position pos:line="9" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
                <if pos:line="10" pos:column="17">if <condition pos:line="10" pos:column="20">(<expr><operator pos:line="10" pos:column="21">!<pos:position pos:line="10" pos:column="22"/></operator><call><name pos:line="10" pos:column="22">StringToInt<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">data<pos:position pos:line="10" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="40">value<pos:position pos:line="10" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="47">&amp;<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="48">data<pos:position pos:line="10" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="54">10<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="58"/></condition><then pos:line="10" pos:column="58">
                    <block type="pseudo"><break pos:line="11" pos:column="21">break;<pos:position pos:line="11" pos:column="27"/></break></block></then></if>
                <expr_stmt><expr><call><name><name pos:line="12" pos:column="17">list<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">.<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">push_back<pos:position pos:line="12" pos:column="31"/></name></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">value<pos:position pos:line="12" pos:column="37"/></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
                <if pos:line="13" pos:column="17">if <condition pos:line="13" pos:column="20">(<expr><operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">data<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">==<pos:position pos:line="13" pos:column="29"/></operator> <literal type="char" pos:line="13" pos:column="30">'\0'<pos:position pos:line="13" pos:column="34"/></literal> <operator pos:line="13" pos:column="35">||<pos:position pos:line="13" pos:column="37"/></operator> <operator pos:line="13" pos:column="38">*<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">data<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">!=<pos:position pos:line="13" pos:column="46"/></operator> <literal type="char" pos:line="13" pos:column="47">','<pos:position pos:line="13" pos:column="50"/></literal></expr>)<pos:position pos:line="13" pos:column="51"/></condition><then pos:line="13" pos:column="51">
                    <block type="pseudo"><break pos:line="14" pos:column="21">break;<pos:position pos:line="14" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="15" pos:column="14"/></block></while>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <return pos:line="18" pos:column="5">return <expr><name pos:line="18" pos:column="12">data<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">&amp;&amp;<pos:position pos:line="18" pos:column="27"/></operator> <operator pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="21">data<pos:position pos:line="18" pos:column="25"/></name> <operator pos:line="18" pos:column="26">==<pos:position pos:line="18" pos:column="28"/></operator> <literal type="char" pos:line="18" pos:column="29">'\0'<pos:position pos:line="18" pos:column="33"/></literal></expr>;<pos:position pos:line="18" pos:column="34"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

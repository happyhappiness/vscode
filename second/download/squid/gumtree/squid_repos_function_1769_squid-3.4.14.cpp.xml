<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1769_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">peerDigestUseful<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">PeerDigest<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">pd<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* TODO: we should calculate the prob of a false hit instead of bit util */</comment>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">int<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">bit_util<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><call><name pos:line="5" pos:column="26">cacheDigestBitUtil<pos:position pos:line="5" pos:column="44"/></name><argument_list pos:line="5" pos:column="44">(<argument><expr><name><name pos:line="5" pos:column="45">pd<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">-&gt;<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="49">cd<pos:position pos:line="5" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">bit_util<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">&gt;<pos:position pos:line="7" pos:column="22"/></operator> <literal type="number" pos:line="7" pos:column="20">65<pos:position pos:line="7" pos:column="22"/></literal></expr>)<pos:position pos:line="7" pos:column="23"/></condition><then pos:line="7" pos:column="23"> <block pos:line="7" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">72<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="20">DBG_CRITICAL<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">"Warning: "<pos:position pos:line="8" pos:column="45"/></literal> <operator pos:line="8" pos:column="46">&lt;&lt;<pos:position pos:line="8" pos:column="54"/></operator> <name><name pos:line="8" pos:column="49">pd<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">host<pos:position pos:line="8" pos:column="57"/></name></name> <operator pos:line="8" pos:column="58">&lt;&lt;<pos:position pos:line="8" pos:column="66"/></operator>
               <literal type="string" pos:line="9" pos:column="16">" peer digest has too many bits on ("<pos:position pos:line="9" pos:column="53"/></literal> <operator pos:line="9" pos:column="54">&lt;&lt;<pos:position pos:line="9" pos:column="62"/></operator> <name pos:line="9" pos:column="57">bit_util<pos:position pos:line="9" pos:column="65"/></name> <operator pos:line="9" pos:column="66">&lt;&lt;<pos:position pos:line="9" pos:column="74"/></operator> <literal type="string" pos:line="9" pos:column="69">"%%)."<pos:position pos:line="9" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="77"/></expr_stmt>

        <return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <return pos:line="14" pos:column="5">return <expr><literal type="number" pos:line="14" pos:column="12">1<pos:position pos:line="14" pos:column="13"/></literal></expr>;<pos:position pos:line="14" pos:column="14"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

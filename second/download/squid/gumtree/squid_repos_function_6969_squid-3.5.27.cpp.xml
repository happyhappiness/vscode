<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6969_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">StoreMap<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">freeChain<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">sfileno<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">fileno<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">Anchor<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">&amp;<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="56">inode<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier> <name pos:line="2" pos:column="69">bool<pos:position pos:line="2" pos:column="73"/></name></type> <name pos:line="2" pos:column="74">keepLocked<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="85"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">54<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">7<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"freeing entry "<pos:position pos:line="4" pos:column="35"/></literal> <operator pos:line="4" pos:column="36">&lt;&lt;<pos:position pos:line="4" pos:column="44"/></operator> <name pos:line="4" pos:column="39">fileno<pos:position pos:line="4" pos:column="45"/></name> <operator pos:line="4" pos:column="46">&lt;&lt;<pos:position pos:line="4" pos:column="54"/></operator>
           <literal type="string" pos:line="5" pos:column="12">" in "<pos:position pos:line="5" pos:column="18"/></literal> <operator pos:line="5" pos:column="19">&lt;&lt;<pos:position pos:line="5" pos:column="27"/></operator> <name pos:line="5" pos:column="22">path<pos:position pos:line="5" pos:column="26"/></name></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name><name pos:line="6" pos:column="10">inode<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">.<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">empty<pos:position pos:line="6" pos:column="21"/></name></name><argument_list pos:line="6" pos:column="21">()<pos:position pos:line="6" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="24"/></condition><then pos:line="6" pos:column="24"> <block pos:line="6" pos:column="25">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">sfileno<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">sliceId<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name><name pos:line="7" pos:column="27">inode<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">.<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="33">start<pos:position pos:line="7" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="39"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">54<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">8<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"first slice "<pos:position pos:line="8" pos:column="37"/></literal> <operator pos:line="8" pos:column="38">&lt;&lt;<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="41">sliceId<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>
        <while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><name pos:line="9" pos:column="16">sliceId<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&gt;=<pos:position pos:line="9" pos:column="29"/></operator> <literal type="number" pos:line="9" pos:column="27">0<pos:position pos:line="9" pos:column="28"/></literal></expr>)<pos:position pos:line="9" pos:column="29"/></condition> <block pos:line="9" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="10" pos:column="13">Slice<pos:position pos:line="10" pos:column="18"/></name> <modifier pos:line="10" pos:column="19">&amp;<pos:position pos:line="10" pos:column="24"/></modifier></type><name pos:line="10" pos:column="20">slice<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><call><name pos:line="10" pos:column="28">sliceAt<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">sliceId<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="45"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="11" pos:column="13">const<pos:position pos:line="11" pos:column="18"/></specifier> <name pos:line="11" pos:column="19">sfileno<pos:position pos:line="11" pos:column="26"/></name></type> <name pos:line="11" pos:column="27">nextId<pos:position pos:line="11" pos:column="33"/></name> <init pos:line="11" pos:column="34">= <expr><name><name pos:line="11" pos:column="36">slice<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">.<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">next<pos:position pos:line="11" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="47"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="12" pos:column="13">slice<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">size<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="13" pos:column="13">slice<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">.<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">next<pos:position pos:line="13" pos:column="23"/></name></name> <operator pos:line="13" pos:column="24">=<pos:position pos:line="13" pos:column="25"/></operator> <operator pos:line="13" pos:column="26">-<pos:position pos:line="13" pos:column="27"/></operator><literal type="number" pos:line="13" pos:column="27">1<pos:position pos:line="13" pos:column="28"/></literal></expr>;<pos:position pos:line="13" pos:column="29"/></expr_stmt>
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><name pos:line="14" pos:column="17">cleaner<pos:position pos:line="14" pos:column="24"/></name></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="15" pos:column="17">cleaner<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">noteFreeMapSlice<pos:position pos:line="15" pos:column="42"/></name></name><argument_list pos:line="15" pos:column="42">(<argument><expr><name pos:line="15" pos:column="43">sliceId<pos:position pos:line="15" pos:column="50"/></name></expr></argument>)<pos:position pos:line="15" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="52"/></expr_stmt></block></then></if> <comment type="line" pos:line="15" pos:column="53">// might change slice state</comment>
            <expr_stmt><expr><name pos:line="16" pos:column="13">sliceId<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">nextId<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></while>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="20" pos:column="5">inode<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">.<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">waitingToBeFreed<pos:position pos:line="20" pos:column="27"/></name></name> <operator pos:line="20" pos:column="28">=<pos:position pos:line="20" pos:column="29"/></operator> <literal type="boolean" pos:line="20" pos:column="30">false<pos:position pos:line="20" pos:column="35"/></literal></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">inode<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">.<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">rewind<pos:position pos:line="21" pos:column="17"/></name></name><argument_list pos:line="21" pos:column="17">()<pos:position pos:line="21" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="20"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">!<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">keepLocked<pos:position pos:line="23" pos:column="20"/></name></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="24" pos:column="9">inode<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">.<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">lock<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">.<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">unlockExclusive<pos:position pos:line="24" pos:column="35"/></name></name><argument_list pos:line="24" pos:column="35">()<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt></block></then></if>
    <expr_stmt><expr><operator pos:line="25" pos:column="5">--<pos:position pos:line="25" pos:column="7"/></operator><name><name pos:line="25" pos:column="7">anchors<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">count<pos:position pos:line="25" pos:column="21"/></name></name></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">54<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="16">5<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="19">"freed entry "<pos:position pos:line="26" pos:column="33"/></literal> <operator pos:line="26" pos:column="34">&lt;&lt;<pos:position pos:line="26" pos:column="42"/></operator> <name pos:line="26" pos:column="37">fileno<pos:position pos:line="26" pos:column="43"/></name> <operator pos:line="26" pos:column="44">&lt;&lt;<pos:position pos:line="26" pos:column="52"/></operator> <literal type="string" pos:line="26" pos:column="47">" in "<pos:position pos:line="26" pos:column="53"/></literal> <operator pos:line="26" pos:column="54">&lt;&lt;<pos:position pos:line="26" pos:column="62"/></operator> <name pos:line="26" pos:column="57">path<pos:position pos:line="26" pos:column="61"/></name></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5981_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Snmp<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Pdu<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">unpack<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name><name pos:line="2" pos:column="25">Ipc<pos:position pos:line="2" pos:column="28"/></name><operator pos:line="2" pos:column="28">::<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">TypedMsgHdr<pos:position pos:line="2" pos:column="41"/></name></name><modifier pos:line="2" pos:column="41">&amp;<pos:position pos:line="2" pos:column="46"/></modifier></type> <name pos:line="2" pos:column="43">msg<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">clear<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">()<pos:position pos:line="4" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">msg<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">.<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">getPod<pos:position pos:line="5" pos:column="15"/></name></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">command<pos:position pos:line="5" pos:column="23"/></name></expr></argument>)<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">msg<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">.<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">getPod<pos:position pos:line="6" pos:column="15"/></name></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">address<pos:position pos:line="6" pos:column="23"/></name></expr></argument>)<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">msg<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">.<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">getPod<pos:position pos:line="7" pos:column="15"/></name></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">reqid<pos:position pos:line="7" pos:column="21"/></name></expr></argument>)<pos:position pos:line="7" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">msg<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">.<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">getPod<pos:position pos:line="8" pos:column="15"/></name></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">errstat<pos:position pos:line="8" pos:column="23"/></name></expr></argument>)<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">msg<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">.<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">getPod<pos:position pos:line="9" pos:column="15"/></name></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">errindex<pos:position pos:line="9" pos:column="24"/></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">msg<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">.<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">getPod<pos:position pos:line="10" pos:column="15"/></name></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">non_repeaters<pos:position pos:line="10" pos:column="29"/></name></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">msg<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">.<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">getPod<pos:position pos:line="11" pos:column="15"/></name></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">max_repetitions<pos:position pos:line="11" pos:column="31"/></name></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">enterprise_length<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <call><name><name pos:line="12" pos:column="25">msg<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">.<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">getInt<pos:position pos:line="12" pos:column="35"/></name></name><argument_list pos:line="12" pos:column="35">()<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">enterprise_length<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">&gt;<pos:position pos:line="13" pos:column="31"/></operator> <literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">enterprise<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <cast type="static" pos:line="14" pos:column="22">static_cast<argument_list type="generic" pos:line="14" pos:column="33">&lt;<argument><expr><name pos:line="14" pos:column="34">oid<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">*<pos:position pos:line="14" pos:column="38"/></operator></expr></argument>&gt;<pos:position pos:line="14" pos:column="42"/></argument_list><argument_list pos:line="14" pos:column="39">(<argument><expr><call><name pos:line="14" pos:column="40">xmalloc<pos:position pos:line="14" pos:column="47"/></name><argument_list pos:line="14" pos:column="47">(<argument><expr><name pos:line="14" pos:column="48">enterprise_length<pos:position pos:line="14" pos:column="65"/></name> <operator pos:line="14" pos:column="66">*<pos:position pos:line="14" pos:column="67"/></operator> <sizeof pos:line="14" pos:column="68">sizeof<argument_list pos:line="14" pos:column="74">(<argument><expr><name pos:line="14" pos:column="75">oid<pos:position pos:line="14" pos:column="78"/></name></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="81"/></argument_list></cast></expr>;<pos:position pos:line="14" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="15" pos:column="9">msg<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">.<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">getFixed<pos:position pos:line="15" pos:column="21"/></name></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">enterprise<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="34">enterprise_length<pos:position pos:line="15" pos:column="51"/></name> <operator pos:line="15" pos:column="52">*<pos:position pos:line="15" pos:column="53"/></operator> <sizeof pos:line="15" pos:column="54">sizeof<argument_list pos:line="15" pos:column="60">(<argument><expr><name pos:line="15" pos:column="61">oid<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">msg<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">.<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">getPod<pos:position pos:line="17" pos:column="15"/></name></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">agent_addr<pos:position pos:line="17" pos:column="26"/></name></expr></argument>)<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">msg<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">.<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">getPod<pos:position pos:line="18" pos:column="15"/></name></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">trap_type<pos:position pos:line="18" pos:column="25"/></name></expr></argument>)<pos:position pos:line="18" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">msg<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">.<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">getPod<pos:position pos:line="19" pos:column="15"/></name></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">specific_type<pos:position pos:line="19" pos:column="29"/></name></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="20" pos:column="5">msg<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">.<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">getPod<pos:position pos:line="20" pos:column="15"/></name></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">time<pos:position pos:line="20" pos:column="20"/></name></expr></argument>)<pos:position pos:line="20" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">int<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">count<pos:position pos:line="21" pos:column="14"/></name> <init pos:line="21" pos:column="15">= <expr><call><name><name pos:line="21" pos:column="17">msg<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">.<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">getInt<pos:position pos:line="21" pos:column="27"/></name></name><argument_list pos:line="21" pos:column="27">()<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="30"/></decl_stmt>
    <for pos:line="22" pos:column="5">for <control pos:line="22" pos:column="9">(<init><decl><type><name pos:line="22" pos:column="10">variable_list<pos:position pos:line="22" pos:column="23"/></name><modifier pos:line="22" pos:column="23">*<pos:position pos:line="22" pos:column="24"/></modifier><modifier pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></modifier></type> <name pos:line="22" pos:column="26">p_var<pos:position pos:line="22" pos:column="31"/></name> <init pos:line="22" pos:column="32">= <expr><operator pos:line="22" pos:column="34">&amp;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="35">variables<pos:position pos:line="22" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="45"/></init> <condition><expr><name pos:line="22" pos:column="46">count<pos:position pos:line="22" pos:column="51"/></name> <operator pos:line="22" pos:column="52">&gt;<pos:position pos:line="22" pos:column="56"/></operator> <literal type="number" pos:line="22" pos:column="54">0<pos:position pos:line="22" pos:column="55"/></literal></expr>;<pos:position pos:line="22" pos:column="56"/></condition>
            <incr><expr><name pos:line="23" pos:column="13">p_var<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <operator pos:line="23" pos:column="21">&amp;<pos:position pos:line="23" pos:column="26"/></operator><name><operator pos:line="23" pos:column="22">(<pos:position pos:line="23" pos:column="23"/></operator><operator pos:line="23" pos:column="23">*<pos:position pos:line="23" pos:column="24"/></operator><name pos:line="23" pos:column="24">p_var<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">)<pos:position pos:line="23" pos:column="30"/></operator><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">next_variable<pos:position pos:line="23" pos:column="45"/></name></name></expr><operator pos:line="23" pos:column="45">,<pos:position pos:line="23" pos:column="46"/></operator> <expr><operator pos:line="23" pos:column="47">--<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="49">count<pos:position pos:line="23" pos:column="54"/></name></expr></incr>)<pos:position pos:line="23" pos:column="55"/></control> <block pos:line="23" pos:column="56">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">Var<pos:position pos:line="24" pos:column="12"/></name><modifier pos:line="24" pos:column="12">*<pos:position pos:line="24" pos:column="13"/></modifier></type> <name pos:line="24" pos:column="14">var<pos:position pos:line="24" pos:column="17"/></name> <init pos:line="24" pos:column="18">= <expr><operator pos:line="24" pos:column="20">new<pos:position pos:line="24" pos:column="23"/></operator> <call><name pos:line="24" pos:column="24">Var<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">()<pos:position pos:line="24" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="30"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="25" pos:column="9">var<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">unpack<pos:position pos:line="25" pos:column="20"/></name></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">msg<pos:position pos:line="25" pos:column="24"/></name></expr></argument>)<pos:position pos:line="25" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">p_var<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">var<pos:position pos:line="26" pos:column="21"/></name></expr>;<pos:position pos:line="26" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></for>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

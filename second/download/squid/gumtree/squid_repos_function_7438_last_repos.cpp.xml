<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7438_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name><name pos:line="1" pos:column="8">AnyP<pos:position pos:line="1" pos:column="12"/></name><operator pos:line="1" pos:column="12">::<pos:position pos:line="1" pos:column="14"/></operator><name pos:line="1" pos:column="14">ProtocolVersion<pos:position pos:line="1" pos:column="29"/></name></name></type>
<name pos:line="2" pos:column="1">ParseProtocolVersion<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">Parser<pos:position pos:line="2" pos:column="28"/></name><operator pos:line="2" pos:column="28">::<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">BinaryTokenizer<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">tk<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Parser<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">::<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">BinaryTokenizerContext<pos:position pos:line="4" pos:column="35"/></name></name></type> <name pos:line="4" pos:column="36">context<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><name pos:line="4" pos:column="44">tk<pos:position pos:line="4" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="48">".version"<pos:position pos:line="4" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="59"/></argument_list></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">uint8_t<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">vMajor<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name><name pos:line="5" pos:column="22">tk<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">.<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">uint8<pos:position pos:line="5" pos:column="30"/></name></name><argument_list pos:line="5" pos:column="30">(<argument><expr><literal type="string" pos:line="5" pos:column="31">".major"<pos:position pos:line="5" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">uint8_t<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">vMinor<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><call><name><name pos:line="6" pos:column="22">tk<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">.<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">uint8<pos:position pos:line="6" pos:column="30"/></name></name><argument_list pos:line="6" pos:column="30">(<argument><expr><literal type="string" pos:line="6" pos:column="31">".minor"<pos:position pos:line="6" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">vMajor<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">==<pos:position pos:line="7" pos:column="18"/></operator> <literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal> <operator pos:line="7" pos:column="21">&amp;&amp;<pos:position pos:line="7" pos:column="31"/></operator> <name pos:line="7" pos:column="24">vMinor<pos:position pos:line="7" pos:column="30"/></name> <operator pos:line="7" pos:column="31">==<pos:position pos:line="7" pos:column="33"/></operator> <literal type="number" pos:line="7" pos:column="34">2<pos:position pos:line="7" pos:column="35"/></literal></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><call><name><name pos:line="8" pos:column="16">AnyP<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">::<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">ProtocolVersion<pos:position pos:line="8" pos:column="37"/></name></name><argument_list pos:line="8" pos:column="37">(<argument><expr><name><name pos:line="8" pos:column="38">AnyP<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">::<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">PROTO_SSL<pos:position pos:line="8" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="55">2<pos:position pos:line="8" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="58">0<pos:position pos:line="8" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">Must<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><name pos:line="10" pos:column="10">vMajor<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <literal type="number" pos:line="10" pos:column="20">3<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">vMinor<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">==<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr>)<pos:position pos:line="11" pos:column="21"/></condition><then pos:line="11" pos:column="21">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><call><name><name pos:line="12" pos:column="16">AnyP<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">::<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">ProtocolVersion<pos:position pos:line="12" pos:column="37"/></name></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name><name pos:line="12" pos:column="38">AnyP<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">::<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">PROTO_SSL<pos:position pos:line="12" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="55">3<pos:position pos:line="12" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="58">0<pos:position pos:line="12" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></return></block></then></if>

    <return pos:line="14" pos:column="5">return <expr><call><name><name pos:line="14" pos:column="12">AnyP<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">::<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">ProtocolVersion<pos:position pos:line="14" pos:column="33"/></name></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name><name pos:line="14" pos:column="34">AnyP<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">::<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">PROTO_TLS<pos:position pos:line="14" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="51">1<pos:position pos:line="14" pos:column="52"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="54">(<pos:position pos:line="14" pos:column="55"/></operator><name pos:line="14" pos:column="55">vMinor<pos:position pos:line="14" pos:column="61"/></name> <operator pos:line="14" pos:column="62">-<pos:position pos:line="14" pos:column="63"/></operator> <literal type="number" pos:line="14" pos:column="64">1<pos:position pos:line="14" pos:column="65"/></literal><operator pos:line="14" pos:column="65">)<pos:position pos:line="14" pos:column="66"/></operator></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6230_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>

<name><name pos:line="3" pos:column="1">SharedMemory<pos:position pos:line="3" pos:column="13"/></name><operator pos:line="3" pos:column="13">::<pos:position pos:line="3" pos:column="15"/></operator><name pos:line="3" pos:column="15">get<pos:position pos:line="3" pos:column="18"/></name></name><parameter_list pos:line="3" pos:column="18">(<parameter><decl><type><name pos:line="3" pos:column="19">ssize_t<pos:position pos:line="3" pos:column="26"/></name> <modifier pos:line="3" pos:column="27">*<pos:position pos:line="3" pos:column="28"/></modifier></type> <name pos:line="3" pos:column="29">shm_offset<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="40"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">aBuf<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">i<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="21">nbufs<pos:position pos:line="8" pos:column="26"/></name></expr>;<pos:position pos:line="8" pos:column="27"/></condition> <incr><expr><operator pos:line="8" pos:column="28">++<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">i<pos:position pos:line="8" pos:column="31"/></name></expr></incr>)<pos:position pos:line="8" pos:column="32"/></control> <block pos:line="8" pos:column="33">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><call><name pos:line="9" pos:column="13">CBIT_TEST<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">inuse_map<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">i<pos:position pos:line="9" pos:column="35"/></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37">
            <block type="pseudo"><continue pos:line="10" pos:column="13">continue;<pos:position pos:line="10" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="12" pos:column="9">CBIT_SET<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">inuse_map<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="29">i<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">shm_offset<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">i<pos:position pos:line="14" pos:column="24"/></name> <operator pos:line="14" pos:column="25">*<pos:position pos:line="14" pos:column="26"/></operator> <name pos:line="14" pos:column="27">SHMBUF_BLKSZ<pos:position pos:line="14" pos:column="39"/></name></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>

        <expr_stmt><expr><name pos:line="16" pos:column="9">aBuf<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name pos:line="16" pos:column="16">buf<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">+<pos:position pos:line="16" pos:column="21"/></operator> <operator pos:line="16" pos:column="22">(<pos:position pos:line="16" pos:column="23"/></operator><operator pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">shm_offset<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">)<pos:position pos:line="16" pos:column="35"/></operator></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>

        <break pos:line="18" pos:column="9">break;<pos:position pos:line="18" pos:column="15"/></break>
    }<pos:position pos:line="19" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">aBuf<pos:position pos:line="21" pos:column="16"/></name></expr></argument>)<pos:position pos:line="21" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">assert<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name pos:line="22" pos:column="12">aBuf<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">&gt;=<pos:position pos:line="22" pos:column="22"/></operator> <name pos:line="22" pos:column="20">buf<pos:position pos:line="22" pos:column="23"/></name></expr></argument>)<pos:position pos:line="22" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">assert<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><name pos:line="23" pos:column="12">aBuf<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">&lt;<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="19">buf<pos:position pos:line="23" pos:column="22"/></name> <operator pos:line="23" pos:column="23">+<pos:position pos:line="23" pos:column="24"/></operator> <operator pos:line="23" pos:column="25">(<pos:position pos:line="23" pos:column="26"/></operator><name pos:line="23" pos:column="26">nbufs<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">*<pos:position pos:line="23" pos:column="33"/></operator> <name pos:line="23" pos:column="34">SHMBUF_BLKSZ<pos:position pos:line="23" pos:column="46"/></name><operator pos:line="23" pos:column="46">)<pos:position pos:line="23" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="24" pos:column="5">++<pos:position pos:line="24" pos:column="7"/></operator><name><name pos:line="24" pos:column="7">diskd_stats<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">.<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="19">shmbuf_count<pos:position pos:line="24" pos:column="31"/></name></name></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name><name pos:line="26" pos:column="9">diskd_stats<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">.<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="21">max_shmuse<pos:position pos:line="26" pos:column="31"/></name></name> <operator pos:line="26" pos:column="32">&lt;<pos:position pos:line="26" pos:column="36"/></operator> <name><name pos:line="26" pos:column="34">diskd_stats<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">.<pos:position pos:line="26" pos:column="46"/></operator><name pos:line="26" pos:column="46">shmbuf_count<pos:position pos:line="26" pos:column="58"/></name></name></expr>)<pos:position pos:line="26" pos:column="59"/></condition><then pos:line="26" pos:column="59">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="9">diskd_stats<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">.<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">max_shmuse<pos:position pos:line="27" pos:column="31"/></name></name> <operator pos:line="27" pos:column="32">=<pos:position pos:line="27" pos:column="33"/></operator> <name><name pos:line="27" pos:column="34">diskd_stats<pos:position pos:line="27" pos:column="45"/></name><operator pos:line="27" pos:column="45">.<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="46">shmbuf_count<pos:position pos:line="27" pos:column="58"/></name></name></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt></block></then></if>

    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">aBuf<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

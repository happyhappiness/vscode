<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5532_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Log<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">TcpLogger<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">doConnect<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">shutting_down<pos:position pos:line="4" pos:column="22"/></name></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">MY_DEBUG_SECTION<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="30">3<pos:position pos:line="7" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="33">"connecting"<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">Must<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><operator pos:line="8" pos:column="10">!<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">conn<pos:position pos:line="8" pos:column="15"/></name></expr></argument>)<pos:position pos:line="8" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">Comm<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">::<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">ConnectionPointer<pos:position pos:line="10" pos:column="28"/></name></name></type> <name pos:line="10" pos:column="29">futureConn<pos:position pos:line="10" pos:column="39"/></name> <init pos:line="10" pos:column="40">= <expr><operator pos:line="10" pos:column="42">new<pos:position pos:line="10" pos:column="45"/></operator> <name><name pos:line="10" pos:column="46">Comm<pos:position pos:line="10" pos:column="50"/></name><operator pos:line="10" pos:column="50">::<pos:position pos:line="10" pos:column="52"/></operator><name pos:line="10" pos:column="52">Connection<pos:position pos:line="10" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="63"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">futureConn<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">remote<pos:position pos:line="11" pos:column="23"/></name></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">remote<pos:position pos:line="11" pos:column="32"/></name></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">futureConn<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">-&gt;<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="17">local<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">.<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">setAnyAddr<pos:position pos:line="12" pos:column="33"/></name></name><argument_list pos:line="12" pos:column="33">()<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name><name pos:line="13" pos:column="9">futureConn<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">remote<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">.<pos:position pos:line="13" pos:column="28"/></operator><name pos:line="13" pos:column="28">isIPv4<pos:position pos:line="13" pos:column="34"/></name></name><argument_list pos:line="13" pos:column="34">()<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="37"/></condition><then pos:line="13" pos:column="37">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="14" pos:column="9">futureConn<pos:position pos:line="14" pos:column="19"/></name><operator pos:line="14" pos:column="19">-&gt;<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="21">local<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">.<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">setIPv4<pos:position pos:line="14" pos:column="34"/></name></name><argument_list pos:line="14" pos:column="34">()<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt></block></then></if>

    <typedef pos:line="16" pos:column="5">typedef <type><name><name pos:line="16" pos:column="13">CommCbMemFunT<pos:position pos:line="16" pos:column="26"/></name><argument_list type="generic" pos:line="16" pos:column="26">&lt;<argument><expr><name pos:line="16" pos:column="27">TcpLogger<pos:position pos:line="16" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="38">CommConnectCbParams<pos:position pos:line="16" pos:column="57"/></name></expr></argument>&gt;<pos:position pos:line="16" pos:column="61"/></argument_list></name></type> <name pos:line="16" pos:column="59">Dialer<pos:position pos:line="16" pos:column="65"/></name>;<pos:position pos:line="16" pos:column="66"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="17" pos:column="5">AsyncCall<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">::<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">Pointer<pos:position pos:line="17" pos:column="23"/></name></name></type> <name pos:line="17" pos:column="24">call<pos:position pos:line="17" pos:column="28"/></name> <init pos:line="17" pos:column="29">= <expr><call><name pos:line="17" pos:column="31">JobCallback<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><name pos:line="17" pos:column="43">MY_DEBUG_SECTION<pos:position pos:line="17" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="61">5<pos:position pos:line="17" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="64">Dialer<pos:position pos:line="17" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="72">this<pos:position pos:line="17" pos:column="76"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="78">Log<pos:position pos:line="17" pos:column="81"/></name><operator pos:line="17" pos:column="81">::<pos:position pos:line="17" pos:column="83"/></operator><name pos:line="17" pos:column="83">TcpLogger<pos:position pos:line="17" pos:column="92"/></name><operator pos:line="17" pos:column="92">::<pos:position pos:line="17" pos:column="94"/></operator><name pos:line="17" pos:column="94">connectDone<pos:position pos:line="17" pos:column="105"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="106"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="107"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">AsyncJob<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">::<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">Start<pos:position pos:line="18" pos:column="20"/></name></name><argument_list pos:line="18" pos:column="20">(<argument><expr><operator pos:line="18" pos:column="21">new<pos:position pos:line="18" pos:column="24"/></operator> <call><name><name pos:line="18" pos:column="25">Comm<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">::<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">ConnOpener<pos:position pos:line="18" pos:column="41"/></name></name><argument_list pos:line="18" pos:column="41">(<argument><expr><name pos:line="18" pos:column="42">futureConn<pos:position pos:line="18" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="54">call<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="60">2<pos:position pos:line="18" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

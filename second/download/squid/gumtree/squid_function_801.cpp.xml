<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_801.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Config<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">ParseMetaHeader<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><name pos:line="2" pos:column="37">ConfigParser<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">&amp;<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="51">parser<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">String<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">name<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="18">value<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name><name pos:line="5" pos:column="17">warnFor<pos:position pos:line="5" pos:column="24"/></name><index pos:line="5" pos:column="24">[]<pos:position pos:line="5" pos:column="26"/></index></name> <init pos:line="5" pos:column="27">= <expr><block pos:line="5" pos:column="29">{
        <expr><literal type="string" pos:line="6" pos:column="9">"Methods"<pos:position pos:line="6" pos:column="18"/></literal></expr>,
        <expr><literal type="string" pos:line="7" pos:column="9">"Service"<pos:position pos:line="7" pos:column="18"/></literal></expr>,
        <expr><literal type="string" pos:line="8" pos:column="9">"ISTag"<pos:position pos:line="8" pos:column="16"/></literal></expr>,
        <expr><literal type="string" pos:line="9" pos:column="9">"Encapsulated"<pos:position pos:line="9" pos:column="23"/></literal></expr>,
        <expr><literal type="string" pos:line="10" pos:column="9">"Opt-body-type"<pos:position pos:line="10" pos:column="24"/></literal></expr>,
        <expr><literal type="string" pos:line="11" pos:column="9">"Max-Connections"<pos:position pos:line="11" pos:column="26"/></literal></expr>,
        <expr><literal type="string" pos:line="12" pos:column="9">"Options-TTL"<pos:position pos:line="12" pos:column="22"/></literal></expr>,
        <expr><literal type="string" pos:line="13" pos:column="9">"Date"<pos:position pos:line="13" pos:column="15"/></literal></expr>,
        <expr><literal type="string" pos:line="14" pos:column="9">"Service-ID"<pos:position pos:line="14" pos:column="21"/></literal></expr>,
        <expr><literal type="string" pos:line="15" pos:column="9">"Allow"<pos:position pos:line="15" pos:column="16"/></literal></expr>,
        <expr><literal type="string" pos:line="16" pos:column="9">"Preview"<pos:position pos:line="16" pos:column="18"/></literal></expr>,
        <expr><literal type="string" pos:line="17" pos:column="9">"Transfer-Preview"<pos:position pos:line="17" pos:column="27"/></literal></expr>,
        <expr><literal type="string" pos:line="18" pos:column="9">"Transfer-Ignore"<pos:position pos:line="18" pos:column="26"/></literal></expr>,
        <expr><literal type="string" pos:line="19" pos:column="9">"Transfer-Complete"<pos:position pos:line="19" pos:column="28"/></literal></expr>,
        <expr><name pos:line="20" pos:column="9">NULL<pos:position pos:line="20" pos:column="13"/></name></expr>
    }<pos:position pos:line="21" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="21" pos:column="7"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">ConfigParser<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">::<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">ParseString<pos:position pos:line="22" pos:column="30"/></name></name><argument_list pos:line="22" pos:column="30">(<argument><expr><operator pos:line="22" pos:column="31">&amp;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="32">name<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="23" pos:column="5">ConfigParser<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">::<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">ParseQuotedString<pos:position pos:line="23" pos:column="36"/></name></name><argument_list pos:line="23" pos:column="36">(<argument><expr><operator pos:line="23" pos:column="37">&amp;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="38">value<pos:position pos:line="23" pos:column="43"/></name></expr></argument>)<pos:position pos:line="23" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>

    <comment type="line" pos:line="25" pos:column="5">// TODO: Find a way to move this check to ICAP</comment>
    <for pos:line="26" pos:column="5">for <control pos:line="26" pos:column="9">(<init><decl><type><name pos:line="26" pos:column="10">int<pos:position pos:line="26" pos:column="13"/></name></type> <name pos:line="26" pos:column="14">i<pos:position pos:line="26" pos:column="15"/></name> <init pos:line="26" pos:column="16">= <expr><literal type="number" pos:line="26" pos:column="18">0<pos:position pos:line="26" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="20"/></init> <condition><expr><name><name pos:line="26" pos:column="21">warnFor<pos:position pos:line="26" pos:column="28"/></name><index pos:line="26" pos:column="28">[<expr><name pos:line="26" pos:column="29">i<pos:position pos:line="26" pos:column="30"/></name></expr>]<pos:position pos:line="26" pos:column="31"/></index></name> <operator pos:line="26" pos:column="32">!=<pos:position pos:line="26" pos:column="34"/></operator> <name pos:line="26" pos:column="35">NULL<pos:position pos:line="26" pos:column="39"/></name></expr>;<pos:position pos:line="26" pos:column="40"/></condition> <incr><expr><operator pos:line="26" pos:column="41">++<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="43">i<pos:position pos:line="26" pos:column="44"/></name></expr></incr>)<pos:position pos:line="26" pos:column="45"/></control> <block pos:line="26" pos:column="46">{
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name><name pos:line="27" pos:column="13">name<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">.<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">caseCmp<pos:position pos:line="27" pos:column="25"/></name></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name><name pos:line="27" pos:column="26">warnFor<pos:position pos:line="27" pos:column="33"/></name><index pos:line="27" pos:column="33">[<expr><name pos:line="27" pos:column="34">i<pos:position pos:line="27" pos:column="35"/></name></expr>]<pos:position pos:line="27" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call> <operator pos:line="27" pos:column="38">==<pos:position pos:line="27" pos:column="40"/></operator> <literal type="number" pos:line="27" pos:column="41">0<pos:position pos:line="27" pos:column="42"/></literal></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43"> <block pos:line="27" pos:column="44">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">fatalf<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><literal type="string" pos:line="28" pos:column="20">"%s:%d: meta name \"%s\" is a reserved ICAP header name"<pos:position pos:line="28" pos:column="76"/></literal></expr></argument>,
                   <argument><expr><name pos:line="29" pos:column="20">cfg_filename<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">config_lineno<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><call><name><name pos:line="29" pos:column="49">name<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">.<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="54">termedBuf<pos:position pos:line="29" pos:column="63"/></name></name><argument_list pos:line="29" pos:column="63">()<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="67"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></for>

    <decl_stmt><decl><type><name><name pos:line="33" pos:column="5">MetaHeader<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">::<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">Pointer<pos:position pos:line="33" pos:column="24"/></name></name></type> <name pos:line="33" pos:column="25">meta<pos:position pos:line="33" pos:column="29"/></name> <init pos:line="33" pos:column="30">= <expr><call><name pos:line="33" pos:column="32">addMetaHeader<pos:position pos:line="33" pos:column="45"/></name><argument_list pos:line="33" pos:column="45">(<argument><expr><name pos:line="33" pos:column="46">name<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="34" pos:column="5">MetaHeader<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">::<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="17">Value<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">::<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="24">Pointer<pos:position pos:line="34" pos:column="31"/></name></name></type> <name pos:line="34" pos:column="32">headValue<pos:position pos:line="34" pos:column="41"/></name> <init pos:line="34" pos:column="42">= <expr><call><name><name pos:line="34" pos:column="44">meta<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">-&gt;<pos:position pos:line="34" pos:column="53"/></operator><name pos:line="34" pos:column="50">addValue<pos:position pos:line="34" pos:column="58"/></name></name><argument_list pos:line="34" pos:column="58">(<argument><expr><name pos:line="34" pos:column="59">value<pos:position pos:line="34" pos:column="64"/></name></expr></argument>)<pos:position pos:line="34" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">aclParseAclList<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">parser<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="29">&amp;<pos:position pos:line="35" pos:column="34"/></operator><name><name pos:line="35" pos:column="30">headValue<pos:position pos:line="35" pos:column="39"/></name><operator pos:line="35" pos:column="39">-&gt;<pos:position pos:line="35" pos:column="44"/></operator><name pos:line="35" pos:column="41">aclList<pos:position pos:line="35" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="50"/></expr_stmt>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

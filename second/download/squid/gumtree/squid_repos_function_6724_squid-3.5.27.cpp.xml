<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6724_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Esi<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">Init<pos:position pos:line="1" pos:column="15"/></name></name><parameter_list pos:line="1" pos:column="15">()<pos:position pos:line="1" pos:column="17"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">assert<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><operator pos:line="3" pos:column="12">!<pos:position pos:line="3" pos:column="13"/></operator><name pos:line="3" pos:column="13">prCustom<pos:position pos:line="3" pos:column="21"/></name></expr></argument>)<pos:position pos:line="3" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="23"/></expr_stmt> <comment type="line" pos:line="3" pos:column="24">// we should be called once</comment>

    <expr_stmt><expr><name pos:line="5" pos:column="5">prCustom<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">=<pos:position pos:line="5" pos:column="15"/></operator> <operator pos:line="5" pos:column="16">new<pos:position pos:line="5" pos:column="19"/></operator> <call><name><name pos:line="5" pos:column="20">ESIParser<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">::<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">Register<pos:position pos:line="5" pos:column="39"/></name></name><argument_list pos:line="5" pos:column="39">(<argument><expr><literal type="string" pos:line="5" pos:column="40">"custom"<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="5" pos:column="50">&amp;<pos:position pos:line="5" pos:column="55"/></operator><name><name pos:line="5" pos:column="51">ESICustomParser<pos:position pos:line="5" pos:column="66"/></name><operator pos:line="5" pos:column="66">::<pos:position pos:line="5" pos:column="68"/></operator><name pos:line="5" pos:column="68">NewParser<pos:position pos:line="5" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="79"/></expr_stmt>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">HAVE_LIBXML2<pos:position pos:line="7" pos:column="17"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="8" pos:column="5">prLibxml<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <operator pos:line="8" pos:column="16">new<pos:position pos:line="8" pos:column="19"/></operator> <call><name><name pos:line="8" pos:column="20">ESIParser<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">::<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">Register<pos:position pos:line="8" pos:column="39"/></name></name><argument_list pos:line="8" pos:column="39">(<argument><expr><literal type="string" pos:line="8" pos:column="40">"libxml2"<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="8" pos:column="51">&amp;<pos:position pos:line="8" pos:column="56"/></operator><name><name pos:line="8" pos:column="52">ESILibxml2Parser<pos:position pos:line="8" pos:column="68"/></name><operator pos:line="8" pos:column="68">::<pos:position pos:line="8" pos:column="70"/></operator><name pos:line="8" pos:column="70">NewParser<pos:position pos:line="8" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="81"/></expr_stmt>
<cpp:endif pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">endif<pos:position pos:line="9" pos:column="7"/></cpp:directive></cpp:endif>

<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">HAVE_LIBEXPAT<pos:position pos:line="11" pos:column="18"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="12" pos:column="5">prExpat<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <operator pos:line="12" pos:column="15">new<pos:position pos:line="12" pos:column="18"/></operator> <call><name><name pos:line="12" pos:column="19">ESIParser<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">::<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">Register<pos:position pos:line="12" pos:column="38"/></name></name><argument_list pos:line="12" pos:column="38">(<argument><expr><literal type="string" pos:line="12" pos:column="39">"expat"<pos:position pos:line="12" pos:column="46"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="48">&amp;<pos:position pos:line="12" pos:column="53"/></operator><name><name pos:line="12" pos:column="49">ESIExpatParser<pos:position pos:line="12" pos:column="63"/></name><operator pos:line="12" pos:column="63">::<pos:position pos:line="12" pos:column="65"/></operator><name pos:line="12" pos:column="65">NewParser<pos:position pos:line="12" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

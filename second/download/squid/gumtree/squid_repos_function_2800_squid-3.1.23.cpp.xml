<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2800_squid-3.1.23.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">CacheManager<pos:position pos:line="1" pos:column="13"/></name><operator pos:line="1" pos:column="13">::<pos:position pos:line="1" pos:column="15"/></operator><name pos:line="1" pos:column="15">cachemgrStateData<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">*<pos:position pos:line="1" pos:column="34"/></modifier></type>
<name><name pos:line="2" pos:column="1">CacheManager<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">ParseUrl<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">url<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">t<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">LOCAL_ARRAY<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">host<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="29">MAX_URL<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">LOCAL_ARRAY<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">request<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="32">MAX_URL<pos:position pos:line="6" pos:column="39"/></name></expr></argument>)<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">LOCAL_ARRAY<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">char<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">password<pos:position pos:line="7" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="33">MAX_URL<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">CacheManagerAction<pos:position pos:line="8" pos:column="23"/></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">a<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">cachemgrStateData<pos:position pos:line="9" pos:column="22"/></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">mgr<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><name pos:line="9" pos:column="30">NULL<pos:position pos:line="9" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">prot<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">t<pos:position pos:line="11" pos:column="6"/></name> <operator pos:line="11" pos:column="7">=<pos:position pos:line="11" pos:column="8"/></operator> <call><name pos:line="11" pos:column="9">sscanf<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">url<pos:position pos:line="11" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="21">"cache_object://%[^/]/%[^@]@%s"<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">host<pos:position pos:line="11" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="60">request<pos:position pos:line="11" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="69">password<pos:position pos:line="11" pos:column="77"/></name></expr></argument>)<pos:position pos:line="11" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="79"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">t<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">&lt;<pos:position pos:line="13" pos:column="15"/></operator> <literal type="number" pos:line="13" pos:column="13">2<pos:position pos:line="13" pos:column="14"/></literal></expr>)<pos:position pos:line="13" pos:column="15"/></condition><then pos:line="13" pos:column="15"> <block pos:line="13" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">xstrncpy<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">request<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="27">"menu"<pos:position pos:line="14" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">MAX_URL<pos:position pos:line="14" pos:column="42"/></name></expr></argument>)<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="44"/></expr_stmt>
<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">_SQUID_OS2_<pos:position pos:line="15" pos:column="19"/></name></cpp:ifdef>
        <comment type="block" pos:line="16" pos:column="9">/*
         * emx's sscanf insists of returning 2 because it sets request
         * to null
         */</comment>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <elseif pos:line="20" pos:column="7">else <if pos:line="20" pos:column="12">if <condition pos:line="20" pos:column="15">(<expr><name><name pos:line="20" pos:column="16">request<pos:position pos:line="20" pos:column="23"/></name><index pos:line="20" pos:column="23">[<expr><literal type="number" pos:line="20" pos:column="24">0<pos:position pos:line="20" pos:column="25"/></literal></expr>]<pos:position pos:line="20" pos:column="26"/></index></name> <operator pos:line="20" pos:column="27">==<pos:position pos:line="20" pos:column="29"/></operator> <literal type="char" pos:line="20" pos:column="30">'\0'<pos:position pos:line="20" pos:column="34"/></literal></expr>)<pos:position pos:line="20" pos:column="35"/></condition><then pos:line="20" pos:column="35"> <block pos:line="20" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">xstrncpy<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name pos:line="21" pos:column="18">request<pos:position pos:line="21" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="27">"menu"<pos:position pos:line="21" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">MAX_URL<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="44"/></expr_stmt>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif> <elseif pos:line="24" pos:column="7">else <if pos:line="24" pos:column="12">if <condition pos:line="24" pos:column="15">(<expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">a<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <call><name pos:line="24" pos:column="21">findAction<pos:position pos:line="24" pos:column="31"/></name><argument_list pos:line="24" pos:column="31">(<argument><expr><name pos:line="24" pos:column="32">request<pos:position pos:line="24" pos:column="39"/></name></expr></argument>)<pos:position pos:line="24" pos:column="40"/></argument_list></call><operator pos:line="24" pos:column="40">)<pos:position pos:line="24" pos:column="41"/></operator> <operator pos:line="24" pos:column="42">==<pos:position pos:line="24" pos:column="44"/></operator> <name pos:line="24" pos:column="45">NULL<pos:position pos:line="24" pos:column="49"/></name></expr>)<pos:position pos:line="24" pos:column="50"/></condition><then pos:line="24" pos:column="50"> <block pos:line="24" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">debugs<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="number" pos:line="25" pos:column="16">16<pos:position pos:line="25" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="20">DBG_IMPORTANT<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="35">"CacheManager::ParseUrl: action '"<pos:position pos:line="25" pos:column="69"/></literal> <operator pos:line="25" pos:column="70">&lt;&lt;<pos:position pos:line="25" pos:column="78"/></operator> <name pos:line="25" pos:column="73">request<pos:position pos:line="25" pos:column="80"/></name> <operator pos:line="25" pos:column="81">&lt;&lt;<pos:position pos:line="25" pos:column="89"/></operator> <literal type="string" pos:line="25" pos:column="84">"' not found"<pos:position pos:line="25" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="99"/></expr_stmt>
        <return pos:line="26" pos:column="9">return <expr><name pos:line="26" pos:column="16">NULL<pos:position pos:line="26" pos:column="20"/></name></expr>;<pos:position pos:line="26" pos:column="21"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if></elseif> <else pos:line="27" pos:column="7">else <block pos:line="27" pos:column="12">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">prot<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">ActionProtection<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name pos:line="28" pos:column="33">a<pos:position pos:line="28" pos:column="34"/></name></expr></argument>)<pos:position pos:line="28" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="36"/></expr_stmt>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name pos:line="30" pos:column="14">strcmp<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">prot<pos:position pos:line="30" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="27">"disabled"<pos:position pos:line="30" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call> <operator pos:line="30" pos:column="39">||<pos:position pos:line="30" pos:column="41"/></operator> <operator pos:line="30" pos:column="42">!<pos:position pos:line="30" pos:column="43"/></operator><call><name pos:line="30" pos:column="43">strcmp<pos:position pos:line="30" pos:column="49"/></name><argument_list pos:line="30" pos:column="49">(<argument><expr><name pos:line="30" pos:column="50">prot<pos:position pos:line="30" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="56">"hidden"<pos:position pos:line="30" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="66"/></condition><then pos:line="30" pos:column="66"> <block pos:line="30" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">debugs<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><literal type="number" pos:line="31" pos:column="20">16<pos:position pos:line="31" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="24">DBG_IMPORTANT<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="39">"CacheManager::ParseUrl: action '"<pos:position pos:line="31" pos:column="73"/></literal> <operator pos:line="31" pos:column="74">&lt;&lt;<pos:position pos:line="31" pos:column="82"/></operator> <name pos:line="31" pos:column="77">request<pos:position pos:line="31" pos:column="84"/></name> <operator pos:line="31" pos:column="85">&lt;&lt;<pos:position pos:line="31" pos:column="93"/></operator> <literal type="string" pos:line="31" pos:column="88">"' is "<pos:position pos:line="31" pos:column="95"/></literal> <operator pos:line="31" pos:column="96">&lt;&lt;<pos:position pos:line="31" pos:column="104"/></operator> <name pos:line="31" pos:column="99">prot<pos:position pos:line="31" pos:column="103"/></name></expr></argument>)<pos:position pos:line="31" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="105"/></expr_stmt>
            <return pos:line="32" pos:column="13">return <expr><name pos:line="32" pos:column="20">NULL<pos:position pos:line="32" pos:column="24"/></name></expr>;<pos:position pos:line="32" pos:column="25"/></return>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="36" pos:column="5">/* set absent entries to NULL so we can test if they are present later */</comment>
    <expr_stmt><expr><name pos:line="37" pos:column="5">mgr<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <operator pos:line="37" pos:column="11">(<pos:position pos:line="37" pos:column="12"/></operator><name pos:line="37" pos:column="12">cachemgrStateData<pos:position pos:line="37" pos:column="29"/></name> <operator pos:line="37" pos:column="30">*<pos:position pos:line="37" pos:column="31"/></operator><operator pos:line="37" pos:column="31">)<pos:position pos:line="37" pos:column="32"/></operator><call><name pos:line="37" pos:column="32">xcalloc<pos:position pos:line="37" pos:column="39"/></name><argument_list pos:line="37" pos:column="39">(<argument><expr><literal type="number" pos:line="37" pos:column="40">1<pos:position pos:line="37" pos:column="41"/></literal></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="43">sizeof<argument_list pos:line="37" pos:column="49">(<argument><expr><name pos:line="37" pos:column="50">cachemgrStateData<pos:position pos:line="37" pos:column="67"/></name></expr></argument>)<pos:position pos:line="37" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="39" pos:column="5">mgr<pos:position pos:line="39" pos:column="8"/></name><operator pos:line="39" pos:column="8">-&gt;<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="10">user_name<pos:position pos:line="39" pos:column="19"/></name></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <name pos:line="39" pos:column="22">NULL<pos:position pos:line="39" pos:column="26"/></name></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">mgr<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">-&gt;<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="10">passwd<pos:position pos:line="41" pos:column="16"/></name></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="41" pos:column="19">t<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">==<pos:position pos:line="41" pos:column="23"/></operator> <literal type="number" pos:line="41" pos:column="24">3<pos:position pos:line="41" pos:column="25"/></literal></expr> ?<pos:position pos:line="41" pos:column="27"/></condition><then pos:line="41" pos:column="27"> <expr><call><name pos:line="41" pos:column="28">xstrdup<pos:position pos:line="41" pos:column="35"/></name><argument_list pos:line="41" pos:column="35">(<argument><expr><name pos:line="41" pos:column="36">password<pos:position pos:line="41" pos:column="44"/></name></expr></argument>)<pos:position pos:line="41" pos:column="45"/></argument_list></call></expr> <pos:position pos:line="41" pos:column="46"/></then><else pos:line="41" pos:column="46">: <expr><name pos:line="41" pos:column="48">NULL<pos:position pos:line="41" pos:column="52"/></name></expr></else></ternary></expr>;<pos:position pos:line="41" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="43" pos:column="5">mgr<pos:position pos:line="43" pos:column="8"/></name><operator pos:line="43" pos:column="8">-&gt;<pos:position pos:line="43" pos:column="13"/></operator><name pos:line="43" pos:column="10">action<pos:position pos:line="43" pos:column="16"/></name></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <call><name pos:line="43" pos:column="19">xstrdup<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">request<pos:position pos:line="43" pos:column="34"/></name></expr></argument>)<pos:position pos:line="43" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="36"/></expr_stmt>

    <return pos:line="45" pos:column="5">return <expr><name pos:line="45" pos:column="12">mgr<pos:position pos:line="45" pos:column="15"/></name></expr>;<pos:position pos:line="45" pos:column="16"/></return>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

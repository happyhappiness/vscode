<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2868_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">AggrType<pos:position pos:line="1" pos:column="9"/></name></type>
<name pos:line="2" pos:column="1">snmpAggrType<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">oid<pos:position pos:line="2" pos:column="17"/></name><modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type> <name pos:line="2" pos:column="19">Current<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">snint<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">CurrentLen<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">49<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">mib_tree_entry<pos:position pos:line="6" pos:column="19"/></name><modifier pos:line="6" pos:column="19">*<pos:position pos:line="6" pos:column="20"/></modifier></type> <name pos:line="6" pos:column="21">mibTreeEntry<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name pos:line="6" pos:column="36">mib_tree_head<pos:position pos:line="6" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">AggrType<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">type<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><name pos:line="7" pos:column="21">atNone<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">count<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><literal type="number" pos:line="8" pos:column="17">0<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">Current<pos:position pos:line="10" pos:column="16"/></name><index pos:line="10" pos:column="16">[<expr><name pos:line="10" pos:column="17">count<pos:position pos:line="10" pos:column="22"/></name></expr>]<pos:position pos:line="10" pos:column="23"/></index></name> <operator pos:line="10" pos:column="24">==<pos:position pos:line="10" pos:column="26"/></operator> <name><name pos:line="10" pos:column="27">mibTreeEntry<pos:position pos:line="10" pos:column="39"/></name><operator pos:line="10" pos:column="39">-&gt;<pos:position pos:line="10" pos:column="44"/></operator><name pos:line="10" pos:column="41">name<pos:position pos:line="10" pos:column="45"/></name><index pos:line="10" pos:column="45">[<expr><name pos:line="10" pos:column="46">count<pos:position pos:line="10" pos:column="51"/></name></expr>]<pos:position pos:line="10" pos:column="52"/></index></name></expr>)<pos:position pos:line="10" pos:column="53"/></condition><then pos:line="10" pos:column="53"> <block pos:line="10" pos:column="54">{
        <expr_stmt><expr><operator pos:line="11" pos:column="9">++<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">count<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>

        <while pos:line="13" pos:column="9">while <condition pos:line="13" pos:column="15">(<expr><name pos:line="13" pos:column="16">mibTreeEntry<pos:position pos:line="13" pos:column="28"/></name> <operator pos:line="13" pos:column="29">!=<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">NULL<pos:position pos:line="13" pos:column="36"/></name> <operator pos:line="13" pos:column="37">&amp;&amp;<pos:position pos:line="13" pos:column="47"/></operator> <name pos:line="13" pos:column="40">count<pos:position pos:line="13" pos:column="45"/></name> <operator pos:line="13" pos:column="46">&lt;<pos:position pos:line="13" pos:column="50"/></operator> <name pos:line="13" pos:column="48">CurrentLen<pos:position pos:line="13" pos:column="58"/></name></expr>)<pos:position pos:line="13" pos:column="59"/></condition> <block pos:line="13" pos:column="60">{
            <expr_stmt><expr><name pos:line="14" pos:column="13">mibTreeEntry<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <call><name pos:line="14" pos:column="28">snmpTreeEntry<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><name><name pos:line="14" pos:column="42">Current<pos:position pos:line="14" pos:column="49"/></name><index pos:line="14" pos:column="49">[<expr><name pos:line="14" pos:column="50">count<pos:position pos:line="14" pos:column="55"/></name></expr>]<pos:position pos:line="14" pos:column="56"/></index></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="58">count<pos:position pos:line="14" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="65">mibTreeEntry<pos:position pos:line="14" pos:column="77"/></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="79"/></expr_stmt>
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><name pos:line="15" pos:column="17">mibTreeEntry<pos:position pos:line="15" pos:column="29"/></name> <operator pos:line="15" pos:column="30">!=<pos:position pos:line="15" pos:column="32"/></operator> <name pos:line="15" pos:column="33">NULL<pos:position pos:line="15" pos:column="37"/></name></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="17">type<pos:position pos:line="16" pos:column="21"/></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <name><name pos:line="16" pos:column="24">mibTreeEntry<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">aggrType<pos:position pos:line="16" pos:column="46"/></name></name></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt></block></then></if>
            <expr_stmt><expr><operator pos:line="17" pos:column="13">++<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">count<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></while>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">type<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

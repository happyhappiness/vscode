<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7873_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">shm_portable_segment_name_is_path<pos:position pos:line="2" pos:column="34"/></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">_SQUID_HPUX_<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">||<pos:position pos:line="4" pos:column="20"/></operator> <name pos:line="4" pos:column="21">_SQUID_OSF_<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">||<pos:position pos:line="4" pos:column="35"/></operator> <call><name pos:line="4" pos:column="36">defined<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><name pos:line="4" pos:column="44">__vms<pos:position pos:line="4" pos:column="49"/></name></expr></argument>)<pos:position pos:line="4" pos:column="50"/></argument_list></call> <operator pos:line="4" pos:column="51">||<pos:position pos:line="4" pos:column="53"/></operator> <operator pos:line="4" pos:column="54">(<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">_SQUID_FREEBSD_<pos:position pos:line="4" pos:column="70"/></name> <operator pos:line="4" pos:column="71">&amp;&amp;<pos:position pos:line="4" pos:column="81"/></operator> <operator pos:line="4" pos:column="74">(<pos:position pos:line="4" pos:column="75"/></operator><name pos:line="4" pos:column="75">__FreeBSD__<pos:position pos:line="4" pos:column="86"/></name> <operator pos:line="4" pos:column="87">&lt;<pos:position pos:line="4" pos:column="91"/></operator> <literal type="number" pos:line="4" pos:column="89">7<pos:position pos:line="4" pos:column="90"/></literal><operator pos:line="4" pos:column="90">)<pos:position pos:line="4" pos:column="91"/></operator><operator pos:line="4" pos:column="91">)<pos:position pos:line="4" pos:column="92"/></operator> <operator pos:line="4" pos:column="93">||<pos:position pos:line="4" pos:column="95"/></operator> <name pos:line="4" pos:column="96">_SQUID_DRAGONFLY_<pos:position pos:line="4" pos:column="113"/></name></expr></cpp:if>
    <return pos:line="5" pos:column="5">return <expr><literal type="boolean" pos:line="5" pos:column="12">true<pos:position pos:line="5" pos:column="16"/></literal></expr>;<pos:position pos:line="5" pos:column="17"/></return>
<cpp:elif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">elif<pos:position pos:line="6" pos:column="6"/></cpp:directive> <expr><name pos:line="6" pos:column="7">_SQUID_FREEBSD_<pos:position pos:line="6" pos:column="22"/></name></expr></cpp:elif>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">jailed<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">size_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">len<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><sizeof pos:line="8" pos:column="18">sizeof<argument_list pos:line="8" pos:column="24">(<argument><expr><name pos:line="8" pos:column="25">jailed<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <expr_stmt><expr><call><name><operator pos:line="9" pos:column="5">::<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">sysctlbyname<pos:position pos:line="9" pos:column="19"/></name></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="string" pos:line="9" pos:column="20">"security.jail.jailed"<pos:position pos:line="9" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="9" pos:column="44">&amp;<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="45">jailed<pos:position pos:line="9" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="53">&amp;<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="54">len<pos:position pos:line="9" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="59">NULL<pos:position pos:line="9" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="65">0<pos:position pos:line="9" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">!<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">jailed<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></return>
<cpp:else pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">else<pos:position pos:line="11" pos:column="6"/></cpp:directive></cpp:else>
    <return pos:line="12" pos:column="5">return <expr><literal type="boolean" pos:line="12" pos:column="12">false<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

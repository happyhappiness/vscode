<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3129_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHdrRangeSpec<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">packInto<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">Packable<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">p<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list> <specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">known_spec<pos:position pos:line="4" pos:column="20"/></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">offset<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29">    <comment type="block" pos:line="4" pos:column="33">/* suffix */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">-&gt;<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="12">appendf<pos:position pos:line="5" pos:column="19"/></name></name><argument_list pos:line="5" pos:column="19">(<argument><expr><literal type="string" pos:line="5" pos:column="20">"-%"<pos:position pos:line="5" pos:column="24"/></literal> <name pos:line="5" pos:column="25">PRId64<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">length<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt></block></then>
    <elseif pos:line="6" pos:column="5">else <if pos:line="6" pos:column="10">if <condition pos:line="6" pos:column="13">(<expr><operator pos:line="6" pos:column="14">!<pos:position pos:line="6" pos:column="15"/></operator><call><name pos:line="6" pos:column="15">known_spec<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">length<pos:position pos:line="6" pos:column="32"/></name></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34">       <comment type="block" pos:line="6" pos:column="41">/* trailer */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="7" pos:column="9">p<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">appendf<pos:position pos:line="7" pos:column="19"/></name></name><argument_list pos:line="7" pos:column="19">(<argument><expr><literal type="string" pos:line="7" pos:column="20">"%"<pos:position pos:line="7" pos:column="23"/></literal> <name pos:line="7" pos:column="24">PRId64<pos:position pos:line="7" pos:column="30"/></name> <literal type="string" pos:line="7" pos:column="31">"-"<pos:position pos:line="7" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">offset<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt></block></then></if></elseif>
    <else pos:line="8" pos:column="5">else            <comment type="block" pos:line="8" pos:column="21">/* range */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="9" pos:column="9">p<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">appendf<pos:position pos:line="9" pos:column="19"/></name></name><argument_list pos:line="9" pos:column="19">(<argument><expr><literal type="string" pos:line="9" pos:column="20">"%"<pos:position pos:line="9" pos:column="23"/></literal> <name pos:line="9" pos:column="24">PRId64<pos:position pos:line="9" pos:column="30"/></name> <literal type="string" pos:line="9" pos:column="31">"-%"<pos:position pos:line="9" pos:column="35"/></literal> <name pos:line="9" pos:column="36">PRId64<pos:position pos:line="9" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="44">offset<pos:position pos:line="9" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="52">offset<pos:position pos:line="9" pos:column="58"/></name> <operator pos:line="9" pos:column="59">+<pos:position pos:line="9" pos:column="60"/></operator> <name pos:line="9" pos:column="61">length<pos:position pos:line="9" pos:column="67"/></name> <operator pos:line="9" pos:column="68">-<pos:position pos:line="9" pos:column="69"/></operator> <literal type="number" pos:line="9" pos:column="70">1<pos:position pos:line="9" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="73"/></expr_stmt></block></else></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

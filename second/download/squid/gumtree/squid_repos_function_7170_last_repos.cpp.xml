<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7170_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ipc<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">Port<pos:position pos:line="1" pos:column="15"/></name><operator pos:line="1" pos:column="15">::<pos:position pos:line="1" pos:column="17"/></operator><name pos:line="1" pos:column="17">doListen<pos:position pos:line="1" pos:column="25"/></name></name><parameter_list pos:line="1" pos:column="25">()<pos:position pos:line="1" pos:column="27"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">54<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="16">6<pos:position pos:line="3" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="19">HERE<pos:position pos:line="3" pos:column="23"/></name></expr></argument>)<pos:position pos:line="3" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">buf<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">.<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">prepForReading<pos:position pos:line="4" pos:column="23"/></name></name><argument_list pos:line="4" pos:column="23">()<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>
    <typedef pos:line="5" pos:column="5">typedef <type><name><name pos:line="5" pos:column="13">CommCbMemFunT<pos:position pos:line="5" pos:column="26"/></name><argument_list type="generic" pos:line="5" pos:column="26">&lt;<argument><expr><name pos:line="5" pos:column="27">Port<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">CommIoCbParams<pos:position pos:line="5" pos:column="47"/></name></expr></argument>&gt;<pos:position pos:line="5" pos:column="51"/></argument_list></name></type> <name pos:line="5" pos:column="49">Dialer<pos:position pos:line="5" pos:column="55"/></name>;<pos:position pos:line="5" pos:column="56"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">AsyncCall<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">::<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">Pointer<pos:position pos:line="6" pos:column="23"/></name></name></type> <name pos:line="6" pos:column="24">readHandler<pos:position pos:line="6" pos:column="35"/></name> <init pos:line="6" pos:column="36">= <expr><call><name pos:line="6" pos:column="38">JobCallback<pos:position pos:line="6" pos:column="49"/></name><argument_list pos:line="6" pos:column="49">(<argument><expr><literal type="number" pos:line="6" pos:column="50">54<pos:position pos:line="6" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="54">6<pos:position pos:line="6" pos:column="55"/></literal></expr></argument>,
                                     <argument><expr><name pos:line="7" pos:column="38">Dialer<pos:position pos:line="7" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="46">this<pos:position pos:line="7" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="52">Port<pos:position pos:line="7" pos:column="56"/></name><operator pos:line="7" pos:column="56">::<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="58">noteRead<pos:position pos:line="7" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="68"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">comm_read<pos:position pos:line="8" pos:column="14"/></name><argument_list pos:line="8" pos:column="14">(<argument><expr><call><name pos:line="8" pos:column="15">conn<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">()<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="23">buf<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">.<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">raw<pos:position pos:line="8" pos:column="30"/></name></name><argument_list pos:line="8" pos:column="30">()<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="34">buf<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">.<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">size<pos:position pos:line="8" pos:column="42"/></name></name><argument_list pos:line="8" pos:column="42">()<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="46">readHandler<pos:position pos:line="8" pos:column="57"/></name></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

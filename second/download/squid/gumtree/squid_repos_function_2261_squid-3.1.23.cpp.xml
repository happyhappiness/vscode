<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2261_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">store_client<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">startSwapin<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">90<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"store_client::doCopy: Need to open swap in file"<pos:position pos:line="4" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="70"/></expr_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* gotta open the swapin file */</comment>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">storeTooManyDiskFilesOpen<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">()<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="37"/></condition><then pos:line="7" pos:column="37"> <block pos:line="7" pos:column="38">{
        <comment type="block" pos:line="8" pos:column="9">/* yuck -- this causes a TCP_SWAPFAIL_MISS on the client side */</comment>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">fail<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">()<pos:position pos:line="9" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">flags<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">store_copying<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <literal type="number" pos:line="10" pos:column="31">0<pos:position pos:line="10" pos:column="32"/></literal></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">(<expr><operator pos:line="12" pos:column="16">!<pos:position pos:line="12" pos:column="17"/></operator><name><name pos:line="12" pos:column="17">flags<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">.<pos:position pos:line="12" pos:column="23"/></operator><name pos:line="12" pos:column="23">disk_io_pending<pos:position pos:line="12" pos:column="38"/></name></name></expr>)<pos:position pos:line="12" pos:column="39"/></condition><then pos:line="12" pos:column="39"> <block pos:line="12" pos:column="40">{
        <comment type="block" pos:line="13" pos:column="9">/* Don't set store_io_pending here */</comment>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">storeSwapInStart<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">(<argument><expr><name pos:line="14" pos:column="26">this<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">swapin_sio<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">==<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">NULL<pos:position pos:line="16" pos:column="31"/></name></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32"> <block pos:line="16" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">fail<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">()<pos:position pos:line="17" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="18" pos:column="13">flags<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">.<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">store_copying<pos:position pos:line="18" pos:column="32"/></name></name> <operator pos:line="18" pos:column="33">=<pos:position pos:line="18" pos:column="34"/></operator> <literal type="number" pos:line="18" pos:column="35">0<pos:position pos:line="18" pos:column="36"/></literal></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
            <return pos:line="19" pos:column="13">return;<pos:position pos:line="19" pos:column="20"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="22" pos:column="9">/*
         * If the open succeeds we either copy from memory, or
         * schedule a disk read in the next block.
         */</comment>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">scheduleRead<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">()<pos:position pos:line="26" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="24"/></expr_stmt>

        <return pos:line="28" pos:column="9">return;<pos:position pos:line="28" pos:column="16"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if></elseif> <else pos:line="29" pos:column="7">else <block pos:line="29" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">90<pos:position pos:line="30" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="20">1<pos:position pos:line="30" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="23">"WARNING: Averted multiple fd operation (1)"<pos:position pos:line="30" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">flags<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">.<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">store_copying<pos:position pos:line="31" pos:column="28"/></name></name> <operator pos:line="31" pos:column="29">=<pos:position pos:line="31" pos:column="30"/></operator> <literal type="number" pos:line="31" pos:column="31">0<pos:position pos:line="31" pos:column="32"/></literal></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
        <return pos:line="32" pos:column="9">return;<pos:position pos:line="32" pos:column="16"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></else></if>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

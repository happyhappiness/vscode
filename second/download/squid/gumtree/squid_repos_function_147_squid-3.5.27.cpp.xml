<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_147_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ping<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">TheConfig<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">parseCommandOpts<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">argc<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name><name pos:line="2" pos:column="51">argv<pos:position pos:line="2" pos:column="55"/></name><index pos:line="2" pos:column="55">[]<pos:position pos:line="2" pos:column="57"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">int<pos:position pos:line="2" pos:column="62"/></name></type> <name pos:line="2" pos:column="63">c<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">int<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">&amp;<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="71">optIndex<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// to get here --ping was seen</comment>
    <expr_stmt><expr><name pos:line="5" pos:column="5">enable<pos:position pos:line="5" pos:column="11"/></name> <operator pos:line="5" pos:column="12">=<pos:position pos:line="5" pos:column="13"/></operator> <literal type="boolean" pos:line="5" pos:column="14">true<pos:position pos:line="5" pos:column="18"/></literal></expr>;<pos:position pos:line="5" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">count<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">=<pos:position pos:line="6" pos:column="12"/></operator> <literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>           <comment type="line" pos:line="6" pos:column="26">// default is infinite loop</comment>
    <expr_stmt><expr><name pos:line="7" pos:column="5">interval<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">=<pos:position pos:line="7" pos:column="15"/></operator> <literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal> <operator pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></operator> <literal type="number" pos:line="7" pos:column="20">1000<pos:position pos:line="7" pos:column="24"/></literal></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt> <comment type="line" pos:line="7" pos:column="26">// default is 1s intervals</comment>

    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">shortOpStr<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><literal type="string" pos:line="9" pos:column="30">"g:I:?"<pos:position pos:line="9" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>

    <comment type="line" pos:line="11" pos:column="5">// options for controlling squidclient ping mode</comment>
    <decl_stmt><decl><specifier pos:line="12" pos:column="5">static<pos:position pos:line="12" pos:column="11"/></specifier> <type><name><name pos:line="12" pos:column="12">struct<pos:position pos:line="12" pos:column="18"/></name> <name pos:line="12" pos:column="19">option<pos:position pos:line="12" pos:column="25"/></name></name></type> <name><name pos:line="12" pos:column="26">pingOptions<pos:position pos:line="12" pos:column="37"/></name><index pos:line="12" pos:column="37">[]<pos:position pos:line="12" pos:column="39"/></index></name> <init pos:line="12" pos:column="40">= <expr><block pos:line="12" pos:column="42">{
        <expr><block pos:line="13" pos:column="9">{<expr><literal type="string" pos:line="13" pos:column="10">"count"<pos:position pos:line="13" pos:column="17"/></literal></expr>,    <expr><name pos:line="13" pos:column="22">no_argument<pos:position pos:line="13" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="13" pos:column="35">0<pos:position pos:line="13" pos:column="36"/></literal></expr>, <expr><literal type="char" pos:line="13" pos:column="38">'g'<pos:position pos:line="13" pos:column="41"/></literal></expr>}<pos:position pos:line="13" pos:column="42"/></block></expr>,
        <expr><block pos:line="14" pos:column="9">{<expr><literal type="string" pos:line="14" pos:column="10">"interval"<pos:position pos:line="14" pos:column="20"/></literal></expr>, <expr><name pos:line="14" pos:column="22">no_argument<pos:position pos:line="14" pos:column="33"/></name></expr>, <expr><literal type="number" pos:line="14" pos:column="35">0<pos:position pos:line="14" pos:column="36"/></literal></expr>, <expr><literal type="char" pos:line="14" pos:column="38">'I'<pos:position pos:line="14" pos:column="41"/></literal></expr>}<pos:position pos:line="14" pos:column="42"/></block></expr>,
        <expr><block pos:line="15" pos:column="9">{<expr><literal type="number" pos:line="15" pos:column="10">0<pos:position pos:line="15" pos:column="11"/></literal></expr>, <expr><literal type="number" pos:line="15" pos:column="13">0<pos:position pos:line="15" pos:column="14"/></literal></expr>, <expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>, <expr><literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>}<pos:position pos:line="15" pos:column="21"/></block></expr>
    }<pos:position pos:line="16" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="16" pos:column="7"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">saved_opterr<pos:position pos:line="18" pos:column="21"/></name> <init pos:line="18" pos:column="22">= <expr><name pos:line="18" pos:column="24">opterr<pos:position pos:line="18" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">opterr<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr>;<pos:position pos:line="19" pos:column="16"/></expr_stmt> <comment type="line" pos:line="19" pos:column="17">// suppress errors from getopt</comment>
    <while pos:line="20" pos:column="5">while <condition pos:line="20" pos:column="11">(<expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">c<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <call><name pos:line="20" pos:column="17">getopt_long<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">argc<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">argv<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">shortOpStr<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">pingOptions<pos:position pos:line="20" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="20" pos:column="66">&amp;<pos:position pos:line="20" pos:column="71"/></operator><name pos:line="20" pos:column="67">optIndex<pos:position pos:line="20" pos:column="75"/></name></expr></argument>)<pos:position pos:line="20" pos:column="76"/></argument_list></call><operator pos:line="20" pos:column="76">)<pos:position pos:line="20" pos:column="77"/></operator> <operator pos:line="20" pos:column="78">!=<pos:position pos:line="20" pos:column="80"/></operator> <operator pos:line="20" pos:column="81">-<pos:position pos:line="20" pos:column="82"/></operator><literal type="number" pos:line="20" pos:column="82">1<pos:position pos:line="20" pos:column="83"/></literal></expr>)<pos:position pos:line="20" pos:column="84"/></condition> <block pos:line="20" pos:column="85">{
        <switch pos:line="21" pos:column="9">switch <condition pos:line="21" pos:column="16">(<expr><name pos:line="21" pos:column="17">c<pos:position pos:line="21" pos:column="18"/></name></expr>)<pos:position pos:line="21" pos:column="19"/></condition> <block pos:line="21" pos:column="20">{
        <case pos:line="22" pos:column="9">case <expr><literal type="char" pos:line="22" pos:column="14">'g'<pos:position pos:line="22" pos:column="17"/></literal></expr>:<pos:position pos:line="22" pos:column="18"/></case>
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">optarg<pos:position pos:line="23" pos:column="23"/></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition><then pos:line="23" pos:column="24">
                <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="17">count<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <call><name pos:line="24" pos:column="25">atoi<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">optarg<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt></block></then>
            <else pos:line="25" pos:column="13">else <block pos:line="25" pos:column="18">{
                <expr_stmt><expr><name><name pos:line="26" pos:column="17">std<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">::<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">cerr<pos:position pos:line="26" pos:column="26"/></name></name> <operator pos:line="26" pos:column="27">&lt;&lt;<pos:position pos:line="26" pos:column="35"/></operator> <literal type="string" pos:line="26" pos:column="30">"ERROR: -g ping count missing parameter."<pos:position pos:line="26" pos:column="71"/></literal> <operator pos:line="26" pos:column="72">&lt;&lt;<pos:position pos:line="26" pos:column="80"/></operator> <name><name pos:line="26" pos:column="75">std<pos:position pos:line="26" pos:column="78"/></name><operator pos:line="26" pos:column="78">::<pos:position pos:line="26" pos:column="80"/></operator><name pos:line="26" pos:column="80">endl<pos:position pos:line="26" pos:column="84"/></name></name></expr>;<pos:position pos:line="26" pos:column="85"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">usage<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">()<pos:position pos:line="27" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></else></if>
            <break pos:line="29" pos:column="13">break;<pos:position pos:line="29" pos:column="19"/></break>

        <case pos:line="31" pos:column="9">case <expr><literal type="char" pos:line="31" pos:column="14">'I'<pos:position pos:line="31" pos:column="17"/></literal></expr>:<pos:position pos:line="31" pos:column="18"/></case>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><operator pos:line="32" pos:column="17">!<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">optarg<pos:position pos:line="32" pos:column="24"/></name></expr>)<pos:position pos:line="32" pos:column="25"/></condition><then pos:line="32" pos:column="25"> <block pos:line="32" pos:column="26">{
                <expr_stmt><expr><name><name pos:line="33" pos:column="17">std<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">::<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">cerr<pos:position pos:line="33" pos:column="26"/></name></name> <operator pos:line="33" pos:column="27">&lt;&lt;<pos:position pos:line="33" pos:column="35"/></operator> <literal type="string" pos:line="33" pos:column="30">"ERROR: -I ping interval missing parameter."<pos:position pos:line="33" pos:column="74"/></literal> <operator pos:line="33" pos:column="75">&lt;&lt;<pos:position pos:line="33" pos:column="83"/></operator> <name><name pos:line="33" pos:column="78">std<pos:position pos:line="33" pos:column="81"/></name><operator pos:line="33" pos:column="81">::<pos:position pos:line="33" pos:column="83"/></operator><name pos:line="33" pos:column="83">endl<pos:position pos:line="33" pos:column="87"/></name></name></expr>;<pos:position pos:line="33" pos:column="88"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="34" pos:column="17">usage<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">()<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="35" pos:column="14"/></block></then> <elseif pos:line="35" pos:column="15">else <if pos:line="35" pos:column="20">if <condition pos:line="35" pos:column="23">(<expr><operator pos:line="35" pos:column="24">(<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">interval<pos:position pos:line="35" pos:column="33"/></name> <operator pos:line="35" pos:column="34">=<pos:position pos:line="35" pos:column="35"/></operator> <call><name pos:line="35" pos:column="36">atoi<pos:position pos:line="35" pos:column="40"/></name><argument_list pos:line="35" pos:column="40">(<argument><expr><name pos:line="35" pos:column="41">optarg<pos:position pos:line="35" pos:column="47"/></name></expr></argument>)<pos:position pos:line="35" pos:column="48"/></argument_list></call> <operator pos:line="35" pos:column="49">*<pos:position pos:line="35" pos:column="50"/></operator> <literal type="number" pos:line="35" pos:column="51">1000<pos:position pos:line="35" pos:column="55"/></literal><operator pos:line="35" pos:column="55">)<pos:position pos:line="35" pos:column="56"/></operator> <operator pos:line="35" pos:column="57">&lt;=<pos:position pos:line="35" pos:column="62"/></operator> <literal type="number" pos:line="35" pos:column="60">0<pos:position pos:line="35" pos:column="61"/></literal></expr>)<pos:position pos:line="35" pos:column="62"/></condition><then pos:line="35" pos:column="62"> <block pos:line="35" pos:column="63">{
                <expr_stmt><expr><name><name pos:line="36" pos:column="17">std<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">::<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">cerr<pos:position pos:line="36" pos:column="26"/></name></name> <operator pos:line="36" pos:column="27">&lt;&lt;<pos:position pos:line="36" pos:column="35"/></operator> <literal type="string" pos:line="36" pos:column="30">"ERROR: -I ping interval out of range (0-"<pos:position pos:line="36" pos:column="72"/></literal> <operator pos:line="36" pos:column="73">&lt;&lt;<pos:position pos:line="36" pos:column="81"/></operator> <operator pos:line="36" pos:column="76">(<pos:position pos:line="36" pos:column="77"/></operator><name pos:line="36" pos:column="77">INT_MAX<pos:position pos:line="36" pos:column="84"/></name><operator pos:line="36" pos:column="84">/<pos:position pos:line="36" pos:column="85"/></operator><literal type="number" pos:line="36" pos:column="85">1000<pos:position pos:line="36" pos:column="89"/></literal><operator pos:line="36" pos:column="89">)<pos:position pos:line="36" pos:column="90"/></operator> <operator pos:line="36" pos:column="91">&lt;&lt;<pos:position pos:line="36" pos:column="99"/></operator> <literal type="string" pos:line="36" pos:column="94">")."<pos:position pos:line="36" pos:column="98"/></literal> <operator pos:line="36" pos:column="99">&lt;&lt;<pos:position pos:line="36" pos:column="107"/></operator> <name><name pos:line="36" pos:column="102">std<pos:position pos:line="36" pos:column="105"/></name><operator pos:line="36" pos:column="105">::<pos:position pos:line="36" pos:column="107"/></operator><name pos:line="36" pos:column="107">endl<pos:position pos:line="36" pos:column="111"/></name></name></expr>;<pos:position pos:line="36" pos:column="112"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">usage<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">()<pos:position pos:line="37" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="38" pos:column="14"/></block></then></if></elseif></if>
            <break pos:line="39" pos:column="13">break;<pos:position pos:line="39" pos:column="19"/></break>

        <default pos:line="41" pos:column="9">default:<pos:position pos:line="41" pos:column="17"/></default>
            <comment type="line" pos:line="42" pos:column="13">// rewind and let the caller handle unknown options</comment>
            <expr_stmt><expr><operator pos:line="43" pos:column="13">--<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">optind<pos:position pos:line="43" pos:column="21"/></name></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><name pos:line="44" pos:column="13">opterr<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">=<pos:position pos:line="44" pos:column="21"/></operator> <name pos:line="44" pos:column="22">saved_opterr<pos:position pos:line="44" pos:column="34"/></name></expr>;<pos:position pos:line="44" pos:column="35"/></expr_stmt>
            <return pos:line="45" pos:column="13">return <expr><literal type="boolean" pos:line="45" pos:column="20">true<pos:position pos:line="45" pos:column="24"/></literal></expr>;<pos:position pos:line="45" pos:column="25"/></return>
        }<pos:position pos:line="46" pos:column="10"/></block></switch>
    }<pos:position pos:line="47" pos:column="6"/></block></while>

    <expr_stmt><expr><name pos:line="49" pos:column="5">opterr<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">=<pos:position pos:line="49" pos:column="13"/></operator> <name pos:line="49" pos:column="14">saved_opterr<pos:position pos:line="49" pos:column="26"/></name></expr>;<pos:position pos:line="49" pos:column="27"/></expr_stmt>
    <return pos:line="50" pos:column="5">return <expr><literal type="boolean" pos:line="50" pos:column="12">false<pos:position pos:line="50" pos:column="17"/></literal></expr>;<pos:position pos:line="50" pos:column="18"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

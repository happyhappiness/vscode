<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7340_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Mgr<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">QueryParams<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">unpack<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name><name pos:line="2" pos:column="32">Ipc<pos:position pos:line="2" pos:column="35"/></name><operator pos:line="2" pos:column="35">::<pos:position pos:line="2" pos:column="37"/></operator><name pos:line="2" pos:column="37">TypedMsgHdr<pos:position pos:line="2" pos:column="48"/></name></name><modifier pos:line="2" pos:column="48">&amp;<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="50">msg<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">count<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><call><name><name pos:line="4" pos:column="17">msg<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">.<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">getInt<pos:position pos:line="4" pos:column="27"/></name></name><argument_list pos:line="4" pos:column="27">()<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">count<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">&gt;=<pos:position pos:line="5" pos:column="21"/></operator> <literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">params<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">.<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">clear<pos:position pos:line="6" pos:column="17"/></name></name><argument_list pos:line="6" pos:column="17">()<pos:position pos:line="6" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="20"/></expr_stmt>
    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">( <init pos:line="7" pos:column="11">;<pos:position pos:line="7" pos:column="12"/></init> <condition><expr><name pos:line="7" pos:column="13">count<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&gt;<pos:position pos:line="7" pos:column="23"/></operator> <literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr>;<pos:position pos:line="7" pos:column="23"/></condition> <incr><expr><operator pos:line="7" pos:column="24">--<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">count<pos:position pos:line="7" pos:column="31"/></name></expr></incr>)<pos:position pos:line="7" pos:column="32"/></control> <block pos:line="7" pos:column="33">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">String<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">name<pos:position pos:line="8" pos:column="20"/></name></decl>;<pos:position pos:line="8" pos:column="21"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">msg<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">.<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">getString<pos:position pos:line="9" pos:column="22"/></name></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">name<pos:position pos:line="9" pos:column="27"/></name></expr></argument>)<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">Must<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><call><name><name pos:line="10" pos:column="14">name<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">size<pos:position pos:line="10" pos:column="23"/></name></name><argument_list pos:line="10" pos:column="23">()<pos:position pos:line="10" pos:column="25"/></argument_list></call> <operator pos:line="10" pos:column="26">!=<pos:position pos:line="10" pos:column="28"/></operator> <literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
        <decl_stmt><decl><type><name><name pos:line="11" pos:column="9">QueryParam<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">::<pos:position pos:line="11" pos:column="21"/></operator><name pos:line="11" pos:column="21">Type<pos:position pos:line="11" pos:column="25"/></name></name></type> <name pos:line="11" pos:column="26">type<pos:position pos:line="11" pos:column="30"/></name></decl>;<pos:position pos:line="11" pos:column="31"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">msg<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">.<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">getPod<pos:position pos:line="12" pos:column="19"/></name></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">type<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
        <decl_stmt><decl><type><name><name pos:line="13" pos:column="9">QueryParam<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">::<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">Pointer<pos:position pos:line="13" pos:column="28"/></name></name></type> <name pos:line="13" pos:column="29">value<pos:position pos:line="13" pos:column="34"/></name> <init pos:line="13" pos:column="35">= <expr><call><name pos:line="13" pos:column="37">CreateParam<pos:position pos:line="13" pos:column="48"/></name><argument_list pos:line="13" pos:column="48">(<argument><expr><name pos:line="13" pos:column="49">type<pos:position pos:line="13" pos:column="53"/></name></expr></argument>)<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="55"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="14" pos:column="9">value<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">unpackValue<pos:position pos:line="14" pos:column="27"/></name></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">msg<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="15" pos:column="9">params<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">push_back<pos:position pos:line="15" pos:column="25"/></name></name><argument_list pos:line="15" pos:column="25">(<argument><expr><call><name pos:line="15" pos:column="26">Param<pos:position pos:line="15" pos:column="31"/></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">name<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="38">value<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></for>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

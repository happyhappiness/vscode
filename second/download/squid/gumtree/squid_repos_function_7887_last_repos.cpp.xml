<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7887_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">boolean<pos:position pos:line="1" pos:column="8"/></name></type>
<name pos:line="2" pos:column="1">at_endline_loc_p<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">p<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">pend<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">syntax<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">next<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">p<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">boolean<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">next_backslash<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><operator pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">next<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">==<pos:position pos:line="5" pos:column="38"/></operator> <literal type="char" pos:line="5" pos:column="39">'\\'<pos:position pos:line="5" pos:column="43"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">next_next<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><ternary><condition><expr><name pos:line="6" pos:column="29">p<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">+<pos:position pos:line="6" pos:column="32"/></operator> <literal type="number" pos:line="6" pos:column="33">1<pos:position pos:line="6" pos:column="34"/></literal> <operator pos:line="6" pos:column="35">&lt;<pos:position pos:line="6" pos:column="39"/></operator> <name pos:line="6" pos:column="37">pend<pos:position pos:line="6" pos:column="41"/></name></expr> ?<pos:position pos:line="6" pos:column="43"/></condition><then pos:line="6" pos:column="43"> <expr><name pos:line="6" pos:column="44">p<pos:position pos:line="6" pos:column="45"/></name> <operator pos:line="6" pos:column="46">+<pos:position pos:line="6" pos:column="47"/></operator> <literal type="number" pos:line="6" pos:column="48">1<pos:position pos:line="6" pos:column="49"/></literal></expr> <pos:position pos:line="6" pos:column="50"/></then><else pos:line="6" pos:column="50">: <expr><name pos:line="6" pos:column="52">NULL<pos:position pos:line="6" pos:column="56"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="6" pos:column="57"/></decl_stmt>

    <return pos:line="8" pos:column="5">return
        <comment type="block" pos:line="9" pos:column="9">/* Before a subexpression?  */</comment>
        <expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><ternary><condition><expr><name pos:line="10" pos:column="10">syntax<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">&amp;<pos:position pos:line="10" pos:column="22"/></operator> <name pos:line="10" pos:column="19">RE_NO_BK_PARENS<pos:position pos:line="10" pos:column="34"/></name></expr> ?<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <expr><operator pos:line="10" pos:column="37">*<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="38">next<pos:position pos:line="10" pos:column="42"/></name> <operator pos:line="10" pos:column="43">==<pos:position pos:line="10" pos:column="45"/></operator> <literal type="char" pos:line="10" pos:column="46">')'<pos:position pos:line="10" pos:column="49"/></literal></expr>
         <pos:position pos:line="11" pos:column="10"/></then><else pos:line="11" pos:column="10">: <expr><name pos:line="11" pos:column="12">next_backslash<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">&amp;&amp;<pos:position pos:line="11" pos:column="37"/></operator> <name pos:line="11" pos:column="30">next_next<pos:position pos:line="11" pos:column="39"/></name> <operator pos:line="11" pos:column="40">&amp;&amp;<pos:position pos:line="11" pos:column="50"/></operator> <operator pos:line="11" pos:column="43">*<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="44">next_next<pos:position pos:line="11" pos:column="53"/></name> <operator pos:line="11" pos:column="54">==<pos:position pos:line="11" pos:column="56"/></operator> <literal type="char" pos:line="11" pos:column="57">')'<pos:position pos:line="11" pos:column="60"/></literal></expr></else></ternary><operator pos:line="11" pos:column="60">)<pos:position pos:line="11" pos:column="61"/></operator>
        <comment type="block" pos:line="12" pos:column="9">/* Before an alternative?  */</comment>
        <operator pos:line="13" pos:column="9">||<pos:position pos:line="13" pos:column="11"/></operator> <operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><ternary><condition><expr><name pos:line="13" pos:column="13">syntax<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">&amp;<pos:position pos:line="13" pos:column="25"/></operator> <name pos:line="13" pos:column="22">RE_NO_BK_VBAR<pos:position pos:line="13" pos:column="35"/></name></expr> ?<pos:position pos:line="13" pos:column="37"/></condition><then pos:line="13" pos:column="37"> <expr><operator pos:line="13" pos:column="38">*<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">next<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">==<pos:position pos:line="13" pos:column="46"/></operator> <literal type="char" pos:line="13" pos:column="47">'|'<pos:position pos:line="13" pos:column="50"/></literal></expr>
            <pos:position pos:line="14" pos:column="13"/></then><else pos:line="14" pos:column="13">: <expr><name pos:line="14" pos:column="15">next_backslash<pos:position pos:line="14" pos:column="29"/></name> <operator pos:line="14" pos:column="30">&amp;&amp;<pos:position pos:line="14" pos:column="40"/></operator> <name pos:line="14" pos:column="33">next_next<pos:position pos:line="14" pos:column="42"/></name> <operator pos:line="14" pos:column="43">&amp;&amp;<pos:position pos:line="14" pos:column="53"/></operator> <operator pos:line="14" pos:column="46">*<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="47">next_next<pos:position pos:line="14" pos:column="56"/></name> <operator pos:line="14" pos:column="57">==<pos:position pos:line="14" pos:column="59"/></operator> <literal type="char" pos:line="14" pos:column="60">'|'<pos:position pos:line="14" pos:column="63"/></literal></expr></else></ternary><operator pos:line="14" pos:column="63">)<pos:position pos:line="14" pos:column="64"/></operator></expr>;<pos:position pos:line="14" pos:column="65"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

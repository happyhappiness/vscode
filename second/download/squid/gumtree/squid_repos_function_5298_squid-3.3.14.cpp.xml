<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5298_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Digest<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">Config<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">init<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name><name pos:line="2" pos:column="28">Auth<pos:position pos:line="2" pos:column="32"/></name><operator pos:line="2" pos:column="32">::<pos:position pos:line="2" pos:column="34"/></operator><name pos:line="2" pos:column="34">Config<pos:position pos:line="2" pos:column="40"/></name></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="43">scheme<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">authenticateProgram<pos:position pos:line="4" pos:column="28"/></name></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29"> <block pos:line="4" pos:column="30">{
        <expr_stmt><expr><name pos:line="5" pos:column="9">DigestFieldsInfo<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">=<pos:position pos:line="5" pos:column="27"/></operator> <call><name pos:line="5" pos:column="28">httpHeaderBuildFieldsInfo<pos:position pos:line="5" pos:column="53"/></name><argument_list pos:line="5" pos:column="53">(<argument><expr><name pos:line="5" pos:column="54">DigestAttrs<pos:position pos:line="5" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="67">DIGEST_ENUM_END<pos:position pos:line="5" pos:column="82"/></name></expr></argument>)<pos:position pos:line="5" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">authenticateDigestNonceSetup<pos:position pos:line="6" pos:column="37"/></name><argument_list pos:line="6" pos:column="37">()<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="7" pos:column="9">authdigest_initialised<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">=<pos:position pos:line="7" pos:column="33"/></operator> <literal type="number" pos:line="7" pos:column="34">1<pos:position pos:line="7" pos:column="35"/></literal></expr>;<pos:position pos:line="7" pos:column="36"/></expr_stmt>

        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">digestauthenticators<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">==<pos:position pos:line="9" pos:column="36"/></operator> <name pos:line="9" pos:column="37">NULL<pos:position pos:line="9" pos:column="41"/></name></expr>)<pos:position pos:line="9" pos:column="42"/></condition><then pos:line="9" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="13">digestauthenticators<pos:position pos:line="10" pos:column="33"/></name> <operator pos:line="10" pos:column="34">=<pos:position pos:line="10" pos:column="35"/></operator> <operator pos:line="10" pos:column="36">new<pos:position pos:line="10" pos:column="39"/></operator> <call><name pos:line="10" pos:column="40">helper<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><literal type="string" pos:line="10" pos:column="47">"digestauthenticator"<pos:position pos:line="10" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="70"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="12" pos:column="9">digestauthenticators<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">cmdline<pos:position pos:line="12" pos:column="38"/></name></name> <operator pos:line="12" pos:column="39">=<pos:position pos:line="12" pos:column="40"/></operator> <name pos:line="12" pos:column="41">authenticateProgram<pos:position pos:line="12" pos:column="60"/></name></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="14" pos:column="9">digestauthenticators<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">childs<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">.<pos:position pos:line="14" pos:column="38"/></operator><name pos:line="14" pos:column="38">updateLimits<pos:position pos:line="14" pos:column="50"/></name></name><argument_list pos:line="14" pos:column="50">(<argument><expr><name pos:line="14" pos:column="51">authenticateChildren<pos:position pos:line="14" pos:column="71"/></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="16" pos:column="9">digestauthenticators<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">ipc_type<pos:position pos:line="16" pos:column="39"/></name></name> <operator pos:line="16" pos:column="40">=<pos:position pos:line="16" pos:column="41"/></operator> <name pos:line="16" pos:column="42">IPC_STREAM<pos:position pos:line="16" pos:column="52"/></name></expr>;<pos:position pos:line="16" pos:column="53"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="18" pos:column="9">helperOpenServers<pos:position pos:line="18" pos:column="26"/></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">digestauthenticators<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3644_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">refreshCheck<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">StoreEntry<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">entry<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">HttpRequest<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="54">request<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">time_t<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">delta<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">RefreshPattern<pos:position pos:line="4" pos:column="25"/></name> <modifier pos:line="4" pos:column="26">*<pos:position pos:line="4" pos:column="27"/></modifier></type><name pos:line="4" pos:column="27">R<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">uri<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><name pos:line="5" pos:column="23">NULL<pos:position pos:line="5" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">time_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">age<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">time_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">check_time<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><name pos:line="7" pos:column="25">squid_curtime<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">+<pos:position pos:line="7" pos:column="40"/></operator> <name pos:line="7" pos:column="41">delta<pos:position pos:line="7" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">staleness<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">stale_flags<pos:position pos:line="9" pos:column="16"/></name></type> <name pos:line="9" pos:column="17">sf<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">entry<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">mem_obj<pos:position pos:line="11" pos:column="23"/></name></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">uri<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name><name pos:line="12" pos:column="15">entry<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">mem_obj<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">url<pos:position pos:line="12" pos:column="34"/></name></name></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt></block></then>
    <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">(<expr><name pos:line="13" pos:column="14">request<pos:position pos:line="13" pos:column="21"/></name></expr>)<pos:position pos:line="13" pos:column="22"/></condition><then pos:line="13" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="9">uri<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">=<pos:position pos:line="14" pos:column="14"/></operator> <call><name pos:line="14" pos:column="15">urlCanonical<pos:position pos:line="14" pos:column="27"/></name><argument_list pos:line="14" pos:column="27">(<argument><expr><name pos:line="14" pos:column="28">request<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">22<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">3<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"refreshCheck: '"<pos:position pos:line="16" pos:column="36"/></literal> <operator pos:line="16" pos:column="37">&lt;&lt;<pos:position pos:line="16" pos:column="45"/></operator> <operator pos:line="16" pos:column="40">(<pos:position pos:line="16" pos:column="41"/></operator><ternary><condition><expr><name pos:line="16" pos:column="41">uri<pos:position pos:line="16" pos:column="44"/></name></expr> ?<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46"> <expr><name pos:line="16" pos:column="47">uri<pos:position pos:line="16" pos:column="50"/></name></expr> <pos:position pos:line="16" pos:column="51"/></then><else pos:line="16" pos:column="51">: <expr><literal type="string" pos:line="16" pos:column="53">"&lt;none&gt;"<pos:position pos:line="16" pos:column="67"/></literal></expr></else></ternary><operator pos:line="16" pos:column="61">)<pos:position pos:line="16" pos:column="62"/></operator> <operator pos:line="16" pos:column="63">&lt;&lt;<pos:position pos:line="16" pos:column="71"/></operator> <literal type="string" pos:line="16" pos:column="66">"'"<pos:position pos:line="16" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">check_time<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">&gt;<pos:position pos:line="18" pos:column="24"/></operator> <name><name pos:line="18" pos:column="22">entry<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">timestamp<pos:position pos:line="18" pos:column="38"/></name></name></expr>)<pos:position pos:line="18" pos:column="39"/></condition><then pos:line="18" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="9">age<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">check_time<pos:position pos:line="19" pos:column="25"/></name> <operator pos:line="19" pos:column="26">-<pos:position pos:line="19" pos:column="27"/></operator> <name><name pos:line="19" pos:column="28">entry<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">timestamp<pos:position pos:line="19" pos:column="44"/></name></name></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="21" pos:column="5">// FIXME: what to do when age &lt; 0 or counter overflow?</comment>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">assert<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name pos:line="22" pos:column="12">age<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">&gt;=<pos:position pos:line="22" pos:column="21"/></operator> <literal type="number" pos:line="22" pos:column="19">0<pos:position pos:line="22" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="24" pos:column="5">R<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <ternary><condition><expr><name pos:line="24" pos:column="9">uri<pos:position pos:line="24" pos:column="12"/></name></expr> ?<pos:position pos:line="24" pos:column="14"/></condition><then pos:line="24" pos:column="14"> <expr><call><name pos:line="24" pos:column="15">refreshLimits<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><name pos:line="24" pos:column="29">uri<pos:position pos:line="24" pos:column="32"/></name></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr> <pos:position pos:line="24" pos:column="34"/></then><else pos:line="24" pos:column="34">: <expr><call><name pos:line="24" pos:column="36">refreshUncompiledPattern<pos:position pos:line="24" pos:column="60"/></name><argument_list pos:line="24" pos:column="60">(<argument><expr><literal type="string" pos:line="24" pos:column="61">"."<pos:position pos:line="24" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="65"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="24" pos:column="66"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">NULL<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">==<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">R<pos:position pos:line="26" pos:column="18"/></name></expr>)<pos:position pos:line="26" pos:column="19"/></condition><then pos:line="26" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="9">R<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <operator pos:line="27" pos:column="13">&amp;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="14">DefaultRefresh<pos:position pos:line="27" pos:column="28"/></name></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="29" pos:column="5">debugs<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="number" pos:line="29" pos:column="12">22<pos:position pos:line="29" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="16">3<pos:position pos:line="29" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="19">"refreshCheck: Matched '"<pos:position pos:line="29" pos:column="44"/></literal> <operator pos:line="29" pos:column="45">&lt;&lt;<pos:position pos:line="29" pos:column="53"/></operator> <name><name pos:line="29" pos:column="48">R<pos:position pos:line="29" pos:column="49"/></name><operator pos:line="29" pos:column="49">-&gt;<pos:position pos:line="29" pos:column="54"/></operator><name pos:line="29" pos:column="51">pattern<pos:position pos:line="29" pos:column="58"/></name></name> <operator pos:line="29" pos:column="59">&lt;&lt;<pos:position pos:line="29" pos:column="67"/></operator> <literal type="string" pos:line="29" pos:column="62">" "<pos:position pos:line="29" pos:column="65"/></literal> <operator pos:line="29" pos:column="66">&lt;&lt;<pos:position pos:line="29" pos:column="74"/></operator>
           <operator pos:line="30" pos:column="12">(<pos:position pos:line="30" pos:column="13"/></operator><name pos:line="30" pos:column="13">int<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">)<pos:position pos:line="30" pos:column="17"/></operator> <name><name pos:line="30" pos:column="18">R<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">min<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">&lt;&lt;<pos:position pos:line="30" pos:column="33"/></operator> <literal type="string" pos:line="30" pos:column="28">" "<pos:position pos:line="30" pos:column="31"/></literal> <operator pos:line="30" pos:column="32">&lt;&lt;<pos:position pos:line="30" pos:column="40"/></operator> <call pos:line="30" pos:column="35">(<name pos:line="30" pos:column="36">int<pos:position pos:line="30" pos:column="39"/></name>) <argument_list pos:line="30" pos:column="41">(<argument><expr><literal type="number" pos:line="30" pos:column="42">100.0<pos:position pos:line="30" pos:column="47"/></literal> <operator pos:line="30" pos:column="48">*<pos:position pos:line="30" pos:column="49"/></operator> <name><name pos:line="30" pos:column="50">R<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">-&gt;<pos:position pos:line="30" pos:column="56"/></operator><name pos:line="30" pos:column="53">pct<pos:position pos:line="30" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="57"/></argument_list></call> <operator pos:line="30" pos:column="58">&lt;&lt;<pos:position pos:line="30" pos:column="66"/></operator> <literal type="string" pos:line="30" pos:column="61">"%% "<pos:position pos:line="30" pos:column="66"/></literal> <operator pos:line="30" pos:column="67">&lt;&lt;<pos:position pos:line="30" pos:column="75"/></operator>
           <operator pos:line="31" pos:column="12">(<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">int<pos:position pos:line="31" pos:column="16"/></name><operator pos:line="31" pos:column="16">)<pos:position pos:line="31" pos:column="17"/></operator> <name><name pos:line="31" pos:column="18">R<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">max<pos:position pos:line="31" pos:column="24"/></name></name> <operator pos:line="31" pos:column="25">&lt;&lt;<pos:position pos:line="31" pos:column="33"/></operator> <literal type="string" pos:line="31" pos:column="28">"'"<pos:position pos:line="31" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">debugs<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><literal type="number" pos:line="33" pos:column="12">22<pos:position pos:line="33" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="16">3<pos:position pos:line="33" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="19">"\tage:\t"<pos:position pos:line="33" pos:column="29"/></literal> <operator pos:line="33" pos:column="30">&lt;&lt;<pos:position pos:line="33" pos:column="38"/></operator> <name pos:line="33" pos:column="33">age<pos:position pos:line="33" pos:column="36"/></name></expr></argument>)<pos:position pos:line="33" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">debugs<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><literal type="number" pos:line="35" pos:column="12">22<pos:position pos:line="35" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="16">3<pos:position pos:line="35" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="19">"\tcheck_time:\t"<pos:position pos:line="35" pos:column="36"/></literal> <operator pos:line="35" pos:column="37">&lt;&lt;<pos:position pos:line="35" pos:column="45"/></operator> <call><name pos:line="35" pos:column="40">mkrfc1123<pos:position pos:line="35" pos:column="49"/></name><argument_list pos:line="35" pos:column="49">(<argument><expr><name pos:line="35" pos:column="50">check_time<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">debugs<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="number" pos:line="37" pos:column="12">22<pos:position pos:line="37" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="16">3<pos:position pos:line="37" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="19">"\tentry-&gt;timestamp:\t"<pos:position pos:line="37" pos:column="45"/></literal> <operator pos:line="37" pos:column="43">&lt;&lt;<pos:position pos:line="37" pos:column="51"/></operator> <call><name pos:line="37" pos:column="46">mkrfc1123<pos:position pos:line="37" pos:column="55"/></name><argument_list pos:line="37" pos:column="55">(<argument><expr><name><name pos:line="37" pos:column="56">entry<pos:position pos:line="37" pos:column="61"/></name><operator pos:line="37" pos:column="61">-&gt;<pos:position pos:line="37" pos:column="66"/></operator><name pos:line="37" pos:column="63">timestamp<pos:position pos:line="37" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="75"/></expr_stmt>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">request<pos:position pos:line="39" pos:column="16"/></name> <operator pos:line="39" pos:column="17">&amp;&amp;<pos:position pos:line="39" pos:column="27"/></operator> <operator pos:line="39" pos:column="20">!<pos:position pos:line="39" pos:column="21"/></operator><name><name pos:line="39" pos:column="21">request<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">flags<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">.<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="36">ignoreCc<pos:position pos:line="39" pos:column="44"/></name></name></expr>)<pos:position pos:line="39" pos:column="45"/></condition><then pos:line="39" pos:column="45"> <block pos:line="39" pos:column="46">{
        <decl_stmt><decl><type><specifier pos:line="40" pos:column="9">const<pos:position pos:line="40" pos:column="14"/></specifier> <name pos:line="40" pos:column="15">HttpHdrCc<pos:position pos:line="40" pos:column="24"/></name> <modifier pos:line="40" pos:column="25">*<pos:position pos:line="40" pos:column="26"/></modifier><specifier pos:line="40" pos:column="26">const<pos:position pos:line="40" pos:column="31"/></specifier></type> <name pos:line="40" pos:column="32">cc<pos:position pos:line="40" pos:column="34"/></name> <init pos:line="40" pos:column="35">= <expr><name><name pos:line="40" pos:column="37">request<pos:position pos:line="40" pos:column="44"/></name><operator pos:line="40" pos:column="44">-&gt;<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="46">cache_control<pos:position pos:line="40" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="40" pos:column="60"/></decl_stmt>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name pos:line="41" pos:column="13">cc<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">&amp;&amp;<pos:position pos:line="41" pos:column="26"/></operator> <call><name><name pos:line="41" pos:column="19">cc<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">-&gt;<pos:position pos:line="41" pos:column="26"/></operator><name pos:line="41" pos:column="23">hasMinFresh<pos:position pos:line="41" pos:column="34"/></name></name><argument_list pos:line="41" pos:column="34">()<pos:position pos:line="41" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="37"/></condition><then pos:line="41" pos:column="37"> <block pos:line="41" pos:column="38">{
            <decl_stmt><decl><type><specifier pos:line="42" pos:column="13">const<pos:position pos:line="42" pos:column="18"/></specifier> <name pos:line="42" pos:column="19">int32_t<pos:position pos:line="42" pos:column="26"/></name></type> <name pos:line="42" pos:column="27">minFresh<pos:position pos:line="42" pos:column="35"/></name><init pos:line="42" pos:column="35">=<expr><call><name><name pos:line="42" pos:column="36">cc<pos:position pos:line="42" pos:column="38"/></name><operator pos:line="42" pos:column="38">-&gt;<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="40">minFresh<pos:position pos:line="42" pos:column="48"/></name></name><argument_list pos:line="42" pos:column="48">()<pos:position pos:line="42" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="51"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">debugs<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><literal type="number" pos:line="43" pos:column="20">22<pos:position pos:line="43" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="24">3<pos:position pos:line="43" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="27">"\tage + min-fresh:\t"<pos:position pos:line="43" pos:column="49"/></literal> <operator pos:line="43" pos:column="50">&lt;&lt;<pos:position pos:line="43" pos:column="58"/></operator> <name pos:line="43" pos:column="53">age<pos:position pos:line="43" pos:column="56"/></name> <operator pos:line="43" pos:column="57">&lt;&lt;<pos:position pos:line="43" pos:column="65"/></operator> <literal type="string" pos:line="43" pos:column="60">" + "<pos:position pos:line="43" pos:column="65"/></literal> <operator pos:line="43" pos:column="66">&lt;&lt;<pos:position pos:line="43" pos:column="74"/></operator>
                   <name pos:line="44" pos:column="20">minFresh<pos:position pos:line="44" pos:column="28"/></name> <operator pos:line="44" pos:column="29">&lt;&lt;<pos:position pos:line="44" pos:column="37"/></operator> <literal type="string" pos:line="44" pos:column="32">" = "<pos:position pos:line="44" pos:column="37"/></literal> <operator pos:line="44" pos:column="38">&lt;&lt;<pos:position pos:line="44" pos:column="46"/></operator> <name pos:line="44" pos:column="41">age<pos:position pos:line="44" pos:column="44"/></name> <operator pos:line="44" pos:column="45">+<pos:position pos:line="44" pos:column="46"/></operator> <name pos:line="44" pos:column="47">minFresh<pos:position pos:line="44" pos:column="55"/></name></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">debugs<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><literal type="number" pos:line="45" pos:column="20">22<pos:position pos:line="45" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="24">3<pos:position pos:line="45" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="27">"\tcheck_time + min-fresh:\t"<pos:position pos:line="45" pos:column="56"/></literal> <operator pos:line="45" pos:column="57">&lt;&lt;<pos:position pos:line="45" pos:column="65"/></operator> <name pos:line="45" pos:column="60">check_time<pos:position pos:line="45" pos:column="70"/></name> <operator pos:line="45" pos:column="71">&lt;&lt;<pos:position pos:line="45" pos:column="79"/></operator> <literal type="string" pos:line="45" pos:column="74">" + "<pos:position pos:line="45" pos:column="79"/></literal>
                   <operator pos:line="46" pos:column="20">&lt;&lt;<pos:position pos:line="46" pos:column="28"/></operator> <name pos:line="46" pos:column="23">minFresh<pos:position pos:line="46" pos:column="31"/></name> <operator pos:line="46" pos:column="32">&lt;&lt;<pos:position pos:line="46" pos:column="40"/></operator> <literal type="string" pos:line="46" pos:column="35">" = "<pos:position pos:line="46" pos:column="40"/></literal> <operator pos:line="46" pos:column="41">&lt;&lt;<pos:position pos:line="46" pos:column="49"/></operator>
                   <call><name pos:line="47" pos:column="20">mkrfc1123<pos:position pos:line="47" pos:column="29"/></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">check_time<pos:position pos:line="47" pos:column="40"/></name> <operator pos:line="47" pos:column="41">+<pos:position pos:line="47" pos:column="42"/></operator> <name pos:line="47" pos:column="43">minFresh<pos:position pos:line="47" pos:column="51"/></name></expr></argument>)<pos:position pos:line="47" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="48" pos:column="13">age<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">+=<pos:position pos:line="48" pos:column="19"/></operator> <name pos:line="48" pos:column="20">minFresh<pos:position pos:line="48" pos:column="28"/></name></expr>;<pos:position pos:line="48" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="49" pos:column="13">check_time<pos:position pos:line="49" pos:column="23"/></name> <operator pos:line="49" pos:column="24">+=<pos:position pos:line="49" pos:column="26"/></operator> <name pos:line="49" pos:column="27">minFresh<pos:position pos:line="49" pos:column="35"/></name></expr>;<pos:position pos:line="49" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="53" pos:column="5">memset<pos:position pos:line="53" pos:column="11"/></name><argument_list pos:line="53" pos:column="11">(<argument><expr><operator pos:line="53" pos:column="12">&amp;<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="13">sf<pos:position pos:line="53" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="53" pos:column="17">'\0'<pos:position pos:line="53" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="53" pos:column="23">sizeof<argument_list pos:line="53" pos:column="29">(<argument><expr><name pos:line="53" pos:column="30">sf<pos:position pos:line="53" pos:column="32"/></name></expr></argument>)<pos:position pos:line="53" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="53" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name pos:line="55" pos:column="5">staleness<pos:position pos:line="55" pos:column="14"/></name> <operator pos:line="55" pos:column="15">=<pos:position pos:line="55" pos:column="16"/></operator> <call><name pos:line="55" pos:column="17">refreshStaleness<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">(<argument><expr><name pos:line="55" pos:column="34">entry<pos:position pos:line="55" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="41">check_time<pos:position pos:line="55" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="53">age<pos:position pos:line="55" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="58">R<pos:position pos:line="55" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="61">&amp;<pos:position pos:line="55" pos:column="66"/></operator><name pos:line="55" pos:column="62">sf<pos:position pos:line="55" pos:column="64"/></name></expr></argument>)<pos:position pos:line="55" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="57" pos:column="5">debugs<pos:position pos:line="57" pos:column="11"/></name><argument_list pos:line="57" pos:column="11">(<argument><expr><literal type="number" pos:line="57" pos:column="12">22<pos:position pos:line="57" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="16">3<pos:position pos:line="57" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="19">"Staleness = "<pos:position pos:line="57" pos:column="33"/></literal> <operator pos:line="57" pos:column="34">&lt;&lt;<pos:position pos:line="57" pos:column="42"/></operator> <name pos:line="57" pos:column="37">staleness<pos:position pos:line="57" pos:column="46"/></name></expr></argument>)<pos:position pos:line="57" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="48"/></expr_stmt>

    <comment type="line" pos:line="59" pos:column="5">// stale-if-error requires any failure be passed thru when its period is over.</comment>
    <if pos:line="60" pos:column="5">if <condition pos:line="60" pos:column="8">(<expr><name pos:line="60" pos:column="9">request<pos:position pos:line="60" pos:column="16"/></name> <operator pos:line="60" pos:column="17">&amp;&amp;<pos:position pos:line="60" pos:column="27"/></operator> <name><name pos:line="60" pos:column="20">entry<pos:position pos:line="60" pos:column="25"/></name><operator pos:line="60" pos:column="25">-&gt;<pos:position pos:line="60" pos:column="30"/></operator><name pos:line="60" pos:column="27">mem_obj<pos:position pos:line="60" pos:column="34"/></name></name> <operator pos:line="60" pos:column="35">&amp;&amp;<pos:position pos:line="60" pos:column="45"/></operator> <call><name><name pos:line="60" pos:column="38">entry<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">-&gt;<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="45">mem_obj<pos:position pos:line="60" pos:column="52"/></name><operator pos:line="60" pos:column="52">-&gt;<pos:position pos:line="60" pos:column="57"/></operator><name pos:line="60" pos:column="54">getReply<pos:position pos:line="60" pos:column="62"/></name></name><argument_list pos:line="60" pos:column="62">()<pos:position pos:line="60" pos:column="64"/></argument_list></call> <operator pos:line="60" pos:column="65">&amp;&amp;<pos:position pos:line="60" pos:column="75"/></operator> <call><name><name pos:line="60" pos:column="68">entry<pos:position pos:line="60" pos:column="73"/></name><operator pos:line="60" pos:column="73">-&gt;<pos:position pos:line="60" pos:column="78"/></operator><name pos:line="60" pos:column="75">mem_obj<pos:position pos:line="60" pos:column="82"/></name><operator pos:line="60" pos:column="82">-&gt;<pos:position pos:line="60" pos:column="87"/></operator><name pos:line="60" pos:column="84">getReply<pos:position pos:line="60" pos:column="92"/></name></name><argument_list pos:line="60" pos:column="92">()<pos:position pos:line="60" pos:column="94"/></argument_list></call><operator pos:line="60" pos:column="94">-&gt;<pos:position pos:line="60" pos:column="99"/></operator><name pos:line="60" pos:column="96">cache_control<pos:position pos:line="60" pos:column="109"/></name> <operator pos:line="60" pos:column="110">&amp;&amp;<pos:position pos:line="60" pos:column="120"/></operator>
            <call><name><name pos:line="61" pos:column="13">entry<pos:position pos:line="61" pos:column="18"/></name><operator pos:line="61" pos:column="18">-&gt;<pos:position pos:line="61" pos:column="23"/></operator><name pos:line="61" pos:column="20">mem_obj<pos:position pos:line="61" pos:column="27"/></name><operator pos:line="61" pos:column="27">-&gt;<pos:position pos:line="61" pos:column="32"/></operator><name pos:line="61" pos:column="29">getReply<pos:position pos:line="61" pos:column="37"/></name></name><argument_list pos:line="61" pos:column="37">()<pos:position pos:line="61" pos:column="39"/></argument_list></call><operator pos:line="61" pos:column="39">-&gt;<pos:position pos:line="61" pos:column="44"/></operator><call><name><name pos:line="61" pos:column="41">cache_control<pos:position pos:line="61" pos:column="54"/></name><operator pos:line="61" pos:column="54">-&gt;<pos:position pos:line="61" pos:column="59"/></operator><name pos:line="61" pos:column="56">hasStaleIfError<pos:position pos:line="61" pos:column="71"/></name></name><argument_list pos:line="61" pos:column="71">()<pos:position pos:line="61" pos:column="73"/></argument_list></call> <operator pos:line="61" pos:column="74">&amp;&amp;<pos:position pos:line="61" pos:column="84"/></operator>
            <call><name><name pos:line="62" pos:column="13">entry<pos:position pos:line="62" pos:column="18"/></name><operator pos:line="62" pos:column="18">-&gt;<pos:position pos:line="62" pos:column="23"/></operator><name pos:line="62" pos:column="20">mem_obj<pos:position pos:line="62" pos:column="27"/></name><operator pos:line="62" pos:column="27">-&gt;<pos:position pos:line="62" pos:column="32"/></operator><name pos:line="62" pos:column="29">getReply<pos:position pos:line="62" pos:column="37"/></name></name><argument_list pos:line="62" pos:column="37">()<pos:position pos:line="62" pos:column="39"/></argument_list></call><operator pos:line="62" pos:column="39">-&gt;<pos:position pos:line="62" pos:column="44"/></operator><call><name><name pos:line="62" pos:column="41">cache_control<pos:position pos:line="62" pos:column="54"/></name><operator pos:line="62" pos:column="54">-&gt;<pos:position pos:line="62" pos:column="59"/></operator><name pos:line="62" pos:column="56">staleIfError<pos:position pos:line="62" pos:column="68"/></name></name><argument_list pos:line="62" pos:column="68">()<pos:position pos:line="62" pos:column="70"/></argument_list></call> <operator pos:line="62" pos:column="71">&lt;<pos:position pos:line="62" pos:column="75"/></operator> <name pos:line="62" pos:column="73">staleness<pos:position pos:line="62" pos:column="82"/></name></expr>)<pos:position pos:line="62" pos:column="83"/></condition><then pos:line="62" pos:column="83"> <block pos:line="62" pos:column="84">{

        <expr_stmt><expr><call><name pos:line="64" pos:column="9">debugs<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><literal type="number" pos:line="64" pos:column="16">22<pos:position pos:line="64" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="20">3<pos:position pos:line="64" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="23">"refreshCheck: stale-if-error period expired."<pos:position pos:line="64" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="65" pos:column="9">request<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">flags<pos:position pos:line="65" pos:column="23"/></name><operator pos:line="65" pos:column="23">.<pos:position pos:line="65" pos:column="24"/></operator><name pos:line="65" pos:column="24">failOnValidationError<pos:position pos:line="65" pos:column="45"/></name></name> <operator pos:line="65" pos:column="46">=<pos:position pos:line="65" pos:column="47"/></operator> <literal type="boolean" pos:line="65" pos:column="48">true<pos:position pos:line="65" pos:column="52"/></literal></expr>;<pos:position pos:line="65" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><call><name pos:line="68" pos:column="9">EBIT_TEST<pos:position pos:line="68" pos:column="18"/></name><argument_list pos:line="68" pos:column="18">(<argument><expr><name><name pos:line="68" pos:column="19">entry<pos:position pos:line="68" pos:column="24"/></name><operator pos:line="68" pos:column="24">-&gt;<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="26">flags<pos:position pos:line="68" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="33">ENTRY_REVALIDATE<pos:position pos:line="68" pos:column="49"/></name></expr></argument>)<pos:position pos:line="68" pos:column="50"/></argument_list></call> <operator pos:line="68" pos:column="51">&amp;&amp;<pos:position pos:line="68" pos:column="61"/></operator> <name pos:line="68" pos:column="54">staleness<pos:position pos:line="68" pos:column="63"/></name> <operator pos:line="68" pos:column="64">&gt;<pos:position pos:line="68" pos:column="68"/></operator> <operator pos:line="68" pos:column="66">-<pos:position pos:line="68" pos:column="67"/></operator><literal type="number" pos:line="68" pos:column="67">1<pos:position pos:line="68" pos:column="68"/></literal>
<cpp:if pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">if<pos:position pos:line="69" pos:column="4"/></cpp:directive> <expr><name pos:line="69" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="69" pos:column="24"/></name></expr></cpp:if>
            <operator pos:line="70" pos:column="13">&amp;&amp;<pos:position pos:line="70" pos:column="23"/></operator> <operator pos:line="70" pos:column="16">!<pos:position pos:line="70" pos:column="17"/></operator><name><name pos:line="70" pos:column="17">R<pos:position pos:line="70" pos:column="18"/></name><operator pos:line="70" pos:column="18">-&gt;<pos:position pos:line="70" pos:column="23"/></operator><name pos:line="70" pos:column="20">flags<pos:position pos:line="70" pos:column="25"/></name><operator pos:line="70" pos:column="25">.<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="26">ignore_must_revalidate<pos:position pos:line="70" pos:column="48"/></name></name></expr>
<cpp:endif pos:line="71" pos:column="1">#<cpp:directive pos:line="71" pos:column="2">endif<pos:position pos:line="71" pos:column="7"/></cpp:directive></cpp:endif>
       )<pos:position pos:line="72" pos:column="9"/></condition><then pos:line="72" pos:column="9"> <block pos:line="72" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">debugs<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><literal type="number" pos:line="73" pos:column="16">22<pos:position pos:line="73" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="20">3<pos:position pos:line="73" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="23">"refreshCheck: YES: Must revalidate stale response"<pos:position pos:line="73" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="76"/></expr_stmt>
        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name pos:line="74" pos:column="13">request<pos:position pos:line="74" pos:column="20"/></name></expr>)<pos:position pos:line="74" pos:column="21"/></condition><then pos:line="74" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="75" pos:column="13">request<pos:position pos:line="75" pos:column="20"/></name><operator pos:line="75" pos:column="20">-&gt;<pos:position pos:line="75" pos:column="25"/></operator><name pos:line="75" pos:column="22">flags<pos:position pos:line="75" pos:column="27"/></name><operator pos:line="75" pos:column="27">.<pos:position pos:line="75" pos:column="28"/></operator><name pos:line="75" pos:column="28">failOnValidationError<pos:position pos:line="75" pos:column="49"/></name></name> <operator pos:line="75" pos:column="50">=<pos:position pos:line="75" pos:column="51"/></operator> <literal type="boolean" pos:line="75" pos:column="52">true<pos:position pos:line="75" pos:column="56"/></literal></expr>;<pos:position pos:line="75" pos:column="57"/></expr_stmt></block></then></if>
        <return pos:line="76" pos:column="9">return <expr><name pos:line="76" pos:column="16">STALE_MUST_REVALIDATE<pos:position pos:line="76" pos:column="37"/></name></expr>;<pos:position pos:line="76" pos:column="38"/></return>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="79" pos:column="5">/* request-specific checks */</comment>
    <if pos:line="80" pos:column="5">if <condition pos:line="80" pos:column="8">(<expr><name pos:line="80" pos:column="9">request<pos:position pos:line="80" pos:column="16"/></name> <operator pos:line="80" pos:column="17">&amp;&amp;<pos:position pos:line="80" pos:column="27"/></operator> <operator pos:line="80" pos:column="20">!<pos:position pos:line="80" pos:column="21"/></operator><name><name pos:line="80" pos:column="21">request<pos:position pos:line="80" pos:column="28"/></name><operator pos:line="80" pos:column="28">-&gt;<pos:position pos:line="80" pos:column="33"/></operator><name pos:line="80" pos:column="30">flags<pos:position pos:line="80" pos:column="35"/></name><operator pos:line="80" pos:column="35">.<pos:position pos:line="80" pos:column="36"/></operator><name pos:line="80" pos:column="36">ignoreCc<pos:position pos:line="80" pos:column="44"/></name></name></expr>)<pos:position pos:line="80" pos:column="45"/></condition><then pos:line="80" pos:column="45"> <block pos:line="80" pos:column="46">{
        <decl_stmt><decl><type><name pos:line="81" pos:column="9">HttpHdrCc<pos:position pos:line="81" pos:column="18"/></name> <modifier pos:line="81" pos:column="19">*<pos:position pos:line="81" pos:column="20"/></modifier></type><name pos:line="81" pos:column="20">cc<pos:position pos:line="81" pos:column="22"/></name> <init pos:line="81" pos:column="23">= <expr><name><name pos:line="81" pos:column="25">request<pos:position pos:line="81" pos:column="32"/></name><operator pos:line="81" pos:column="32">-&gt;<pos:position pos:line="81" pos:column="37"/></operator><name pos:line="81" pos:column="34">cache_control<pos:position pos:line="81" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="81" pos:column="48"/></decl_stmt>

        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><name><name pos:line="83" pos:column="13">request<pos:position pos:line="83" pos:column="20"/></name><operator pos:line="83" pos:column="20">-&gt;<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="22">flags<pos:position pos:line="83" pos:column="27"/></name><operator pos:line="83" pos:column="27">.<pos:position pos:line="83" pos:column="28"/></operator><name pos:line="83" pos:column="28">ims<pos:position pos:line="83" pos:column="31"/></name></name> <operator pos:line="83" pos:column="32">&amp;&amp;<pos:position pos:line="83" pos:column="42"/></operator> <operator pos:line="83" pos:column="35">(<pos:position pos:line="83" pos:column="36"/></operator><name><name pos:line="83" pos:column="36">R<pos:position pos:line="83" pos:column="37"/></name><operator pos:line="83" pos:column="37">-&gt;<pos:position pos:line="83" pos:column="42"/></operator><name pos:line="83" pos:column="39">flags<pos:position pos:line="83" pos:column="44"/></name><operator pos:line="83" pos:column="44">.<pos:position pos:line="83" pos:column="45"/></operator><name pos:line="83" pos:column="45">refresh_ims<pos:position pos:line="83" pos:column="56"/></name></name> <operator pos:line="83" pos:column="57">||<pos:position pos:line="83" pos:column="59"/></operator> <name><name pos:line="83" pos:column="60">Config<pos:position pos:line="83" pos:column="66"/></name><operator pos:line="83" pos:column="66">.<pos:position pos:line="83" pos:column="67"/></operator><name pos:line="83" pos:column="67">onoff<pos:position pos:line="83" pos:column="72"/></name><operator pos:line="83" pos:column="72">.<pos:position pos:line="83" pos:column="73"/></operator><name pos:line="83" pos:column="73">refresh_all_ims<pos:position pos:line="83" pos:column="88"/></name></name><operator pos:line="83" pos:column="88">)<pos:position pos:line="83" pos:column="89"/></operator></expr>)<pos:position pos:line="83" pos:column="90"/></condition><then pos:line="83" pos:column="90"> <block pos:line="83" pos:column="91">{
            <comment type="block" pos:line="84" pos:column="13">/* The clients no-cache header is changed into a IMS query */</comment>
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">debugs<pos:position pos:line="85" pos:column="19"/></name><argument_list pos:line="85" pos:column="19">(<argument><expr><literal type="number" pos:line="85" pos:column="20">22<pos:position pos:line="85" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="85" pos:column="24">3<pos:position pos:line="85" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="27">"refreshCheck: YES: refresh-ims"<pos:position pos:line="85" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="61"/></expr_stmt>
            <return pos:line="86" pos:column="13">return <expr><name pos:line="86" pos:column="20">STALE_FORCED_RELOAD<pos:position pos:line="86" pos:column="39"/></name></expr>;<pos:position pos:line="86" pos:column="40"/></return>
        }<pos:position pos:line="87" pos:column="10"/></block></then></if>

<cpp:if pos:line="89" pos:column="1">#<cpp:directive pos:line="89" pos:column="2">if<pos:position pos:line="89" pos:column="4"/></cpp:directive> <expr><name pos:line="89" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="89" pos:column="24"/></name></expr></cpp:if>

        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><operator pos:line="91" pos:column="13">!<pos:position pos:line="91" pos:column="14"/></operator><call><name><name pos:line="91" pos:column="14">request<pos:position pos:line="91" pos:column="21"/></name><operator pos:line="91" pos:column="21">-&gt;<pos:position pos:line="91" pos:column="26"/></operator><name pos:line="91" pos:column="23">flags<pos:position pos:line="91" pos:column="28"/></name><operator pos:line="91" pos:column="28">.<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="29">noCacheHack<pos:position pos:line="91" pos:column="40"/></name></name><argument_list pos:line="91" pos:column="40">()<pos:position pos:line="91" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="43"/></condition><then pos:line="91" pos:column="43"> <block pos:line="91" pos:column="44">{
            <expr_stmt><expr><operator pos:line="92" pos:column="13">(<pos:position pos:line="92" pos:column="14"/></operator><name pos:line="92" pos:column="14">void<pos:position pos:line="92" pos:column="18"/></name><operator pos:line="92" pos:column="18">)<pos:position pos:line="92" pos:column="19"/></operator> <literal type="number" pos:line="92" pos:column="20">0<pos:position pos:line="92" pos:column="21"/></literal></expr>;<pos:position pos:line="92" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="93" pos:column="10"/></block></then> <elseif pos:line="93" pos:column="11">else <if pos:line="93" pos:column="16">if <condition pos:line="93" pos:column="19">(<expr><name><name pos:line="93" pos:column="20">R<pos:position pos:line="93" pos:column="21"/></name><operator pos:line="93" pos:column="21">-&gt;<pos:position pos:line="93" pos:column="26"/></operator><name pos:line="93" pos:column="23">flags<pos:position pos:line="93" pos:column="28"/></name><operator pos:line="93" pos:column="28">.<pos:position pos:line="93" pos:column="29"/></operator><name pos:line="93" pos:column="29">ignore_reload<pos:position pos:line="93" pos:column="42"/></name></name></expr>)<pos:position pos:line="93" pos:column="43"/></condition><then pos:line="93" pos:column="43"> <block pos:line="93" pos:column="44">{
            <comment type="block" pos:line="94" pos:column="13">/* The clients no-cache header is ignored */</comment>
            <expr_stmt><expr><call><name pos:line="95" pos:column="13">debugs<pos:position pos:line="95" pos:column="19"/></name><argument_list pos:line="95" pos:column="19">(<argument><expr><literal type="number" pos:line="95" pos:column="20">22<pos:position pos:line="95" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="24">3<pos:position pos:line="95" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="27">"refreshCheck: MAYBE: ignore-reload"<pos:position pos:line="95" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="65"/></expr_stmt>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if></elseif> <elseif pos:line="96" pos:column="11">else <if pos:line="96" pos:column="16">if <condition pos:line="96" pos:column="19">(<expr><name><name pos:line="96" pos:column="20">R<pos:position pos:line="96" pos:column="21"/></name><operator pos:line="96" pos:column="21">-&gt;<pos:position pos:line="96" pos:column="26"/></operator><name pos:line="96" pos:column="23">flags<pos:position pos:line="96" pos:column="28"/></name><operator pos:line="96" pos:column="28">.<pos:position pos:line="96" pos:column="29"/></operator><name pos:line="96" pos:column="29">reload_into_ims<pos:position pos:line="96" pos:column="44"/></name></name> <operator pos:line="96" pos:column="45">||<pos:position pos:line="96" pos:column="47"/></operator> <name><name pos:line="96" pos:column="48">Config<pos:position pos:line="96" pos:column="54"/></name><operator pos:line="96" pos:column="54">.<pos:position pos:line="96" pos:column="55"/></operator><name pos:line="96" pos:column="55">onoff<pos:position pos:line="96" pos:column="60"/></name><operator pos:line="96" pos:column="60">.<pos:position pos:line="96" pos:column="61"/></operator><name pos:line="96" pos:column="61">reload_into_ims<pos:position pos:line="96" pos:column="76"/></name></name></expr>)<pos:position pos:line="96" pos:column="77"/></condition><then pos:line="96" pos:column="77"> <block pos:line="96" pos:column="78">{
            <comment type="block" pos:line="97" pos:column="13">/* The clients no-cache header is changed into a IMS query */</comment>
            <expr_stmt><expr><call><name pos:line="98" pos:column="13">debugs<pos:position pos:line="98" pos:column="19"/></name><argument_list pos:line="98" pos:column="19">(<argument><expr><literal type="number" pos:line="98" pos:column="20">22<pos:position pos:line="98" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="24">3<pos:position pos:line="98" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="27">"refreshCheck: YES: reload-into-ims"<pos:position pos:line="98" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="65"/></expr_stmt>
            <return pos:line="99" pos:column="13">return <expr><name pos:line="99" pos:column="20">STALE_RELOAD_INTO_IMS<pos:position pos:line="99" pos:column="41"/></name></expr>;<pos:position pos:line="99" pos:column="42"/></return>
        }<pos:position pos:line="100" pos:column="10"/></block></then></if></elseif> <else pos:line="100" pos:column="11">else <block pos:line="100" pos:column="16">{
            <comment type="block" pos:line="101" pos:column="13">/* The clients no-cache header is not overridden on this request */</comment>
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">debugs<pos:position pos:line="102" pos:column="19"/></name><argument_list pos:line="102" pos:column="19">(<argument><expr><literal type="number" pos:line="102" pos:column="20">22<pos:position pos:line="102" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="102" pos:column="24">3<pos:position pos:line="102" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="102" pos:column="27">"refreshCheck: YES: client reload"<pos:position pos:line="102" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="102" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="103" pos:column="13">request<pos:position pos:line="103" pos:column="20"/></name><operator pos:line="103" pos:column="20">-&gt;<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="22">flags<pos:position pos:line="103" pos:column="27"/></name><operator pos:line="103" pos:column="27">.<pos:position pos:line="103" pos:column="28"/></operator><name pos:line="103" pos:column="28">noCache<pos:position pos:line="103" pos:column="35"/></name></name> <operator pos:line="103" pos:column="36">=<pos:position pos:line="103" pos:column="37"/></operator> <literal type="boolean" pos:line="103" pos:column="38">true<pos:position pos:line="103" pos:column="42"/></literal></expr>;<pos:position pos:line="103" pos:column="43"/></expr_stmt>
            <return pos:line="104" pos:column="13">return <expr><name pos:line="104" pos:column="20">STALE_FORCED_RELOAD<pos:position pos:line="104" pos:column="39"/></name></expr>;<pos:position pos:line="104" pos:column="40"/></return>
        }<pos:position pos:line="105" pos:column="10"/></block></else></if>

<cpp:endif pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">endif<pos:position pos:line="107" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="108" pos:column="9">if <condition pos:line="108" pos:column="12">(<expr><name pos:line="108" pos:column="13">NULL<pos:position pos:line="108" pos:column="17"/></name> <operator pos:line="108" pos:column="18">!=<pos:position pos:line="108" pos:column="20"/></operator> <name pos:line="108" pos:column="21">cc<pos:position pos:line="108" pos:column="23"/></name></expr>)<pos:position pos:line="108" pos:column="24"/></condition><then pos:line="108" pos:column="24"> <block pos:line="108" pos:column="25">{
            <if pos:line="109" pos:column="13">if <condition pos:line="109" pos:column="16">(<expr><call><name><name pos:line="109" pos:column="17">cc<pos:position pos:line="109" pos:column="19"/></name><operator pos:line="109" pos:column="19">-&gt;<pos:position pos:line="109" pos:column="24"/></operator><name pos:line="109" pos:column="21">hasMaxAge<pos:position pos:line="109" pos:column="30"/></name></name><argument_list pos:line="109" pos:column="30">()<pos:position pos:line="109" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="33"/></condition><then pos:line="109" pos:column="33"> <block pos:line="109" pos:column="34">{
<cpp:if pos:line="110" pos:column="1">#<cpp:directive pos:line="110" pos:column="2">if<pos:position pos:line="110" pos:column="4"/></cpp:directive> <expr><name pos:line="110" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="110" pos:column="24"/></name></expr></cpp:if>
                <if pos:line="111" pos:column="17">if <condition pos:line="111" pos:column="20">(<expr><name><name pos:line="111" pos:column="21">R<pos:position pos:line="111" pos:column="22"/></name><operator pos:line="111" pos:column="22">-&gt;<pos:position pos:line="111" pos:column="27"/></operator><name pos:line="111" pos:column="24">flags<pos:position pos:line="111" pos:column="29"/></name><operator pos:line="111" pos:column="29">.<pos:position pos:line="111" pos:column="30"/></operator><name pos:line="111" pos:column="30">ignore_reload<pos:position pos:line="111" pos:column="43"/></name></name> <operator pos:line="111" pos:column="44">&amp;&amp;<pos:position pos:line="111" pos:column="54"/></operator> <call><name><name pos:line="111" pos:column="47">cc<pos:position pos:line="111" pos:column="49"/></name><operator pos:line="111" pos:column="49">-&gt;<pos:position pos:line="111" pos:column="54"/></operator><name pos:line="111" pos:column="51">maxAge<pos:position pos:line="111" pos:column="57"/></name></name><argument_list pos:line="111" pos:column="57">()<pos:position pos:line="111" pos:column="59"/></argument_list></call> <operator pos:line="111" pos:column="60">==<pos:position pos:line="111" pos:column="62"/></operator> <literal type="number" pos:line="111" pos:column="63">0<pos:position pos:line="111" pos:column="64"/></literal></expr>)<pos:position pos:line="111" pos:column="65"/></condition><then pos:line="111" pos:column="65"> <block pos:line="111" pos:column="66">{
                    <expr_stmt><expr><call><name pos:line="112" pos:column="21">debugs<pos:position pos:line="112" pos:column="27"/></name><argument_list pos:line="112" pos:column="27">(<argument><expr><literal type="number" pos:line="112" pos:column="28">22<pos:position pos:line="112" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="32">3<pos:position pos:line="112" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="35">"refreshCheck: MAYBE: client-max-age = 0 and ignore-reload"<pos:position pos:line="112" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="96"/></expr_stmt>
                }<pos:position pos:line="113" pos:column="18"/></block></then> <else pos:line="113" pos:column="19">else
<cpp:endif pos:line="114" pos:column="1">#<cpp:directive pos:line="114" pos:column="2">endif<pos:position pos:line="114" pos:column="7"/></cpp:directive></cpp:endif>
                <block pos:line="115" pos:column="17">{
                    <if pos:line="116" pos:column="21">if <condition pos:line="116" pos:column="24">(<expr><call><name><name pos:line="116" pos:column="25">cc<pos:position pos:line="116" pos:column="27"/></name><operator pos:line="116" pos:column="27">-&gt;<pos:position pos:line="116" pos:column="32"/></operator><name pos:line="116" pos:column="29">maxAge<pos:position pos:line="116" pos:column="35"/></name></name><argument_list pos:line="116" pos:column="35">()<pos:position pos:line="116" pos:column="37"/></argument_list></call> <operator pos:line="116" pos:column="38">==<pos:position pos:line="116" pos:column="40"/></operator> <literal type="number" pos:line="116" pos:column="41">0<pos:position pos:line="116" pos:column="42"/></literal></expr>)<pos:position pos:line="116" pos:column="43"/></condition><then pos:line="116" pos:column="43"> <block pos:line="116" pos:column="44">{
                        <expr_stmt><expr><call><name pos:line="117" pos:column="25">debugs<pos:position pos:line="117" pos:column="31"/></name><argument_list pos:line="117" pos:column="31">(<argument><expr><literal type="number" pos:line="117" pos:column="32">22<pos:position pos:line="117" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="36">3<pos:position pos:line="117" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="39">"refreshCheck: YES: client-max-age = 0"<pos:position pos:line="117" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="80"/></expr_stmt>
                        <return pos:line="118" pos:column="25">return <expr><name pos:line="118" pos:column="32">STALE_EXCEEDS_REQUEST_MAX_AGE_VALUE<pos:position pos:line="118" pos:column="67"/></name></expr>;<pos:position pos:line="118" pos:column="68"/></return>
                    }<pos:position pos:line="119" pos:column="22"/></block></then></if>

                    <if pos:line="121" pos:column="21">if <condition pos:line="121" pos:column="24">(<expr><name pos:line="121" pos:column="25">age<pos:position pos:line="121" pos:column="28"/></name> <operator pos:line="121" pos:column="29">&gt;<pos:position pos:line="121" pos:column="33"/></operator> <call><name><name pos:line="121" pos:column="31">cc<pos:position pos:line="121" pos:column="33"/></name><operator pos:line="121" pos:column="33">-&gt;<pos:position pos:line="121" pos:column="38"/></operator><name pos:line="121" pos:column="35">maxAge<pos:position pos:line="121" pos:column="41"/></name></name><argument_list pos:line="121" pos:column="41">()<pos:position pos:line="121" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="44"/></condition><then pos:line="121" pos:column="44"> <block pos:line="121" pos:column="45">{
                        <expr_stmt><expr><call><name pos:line="122" pos:column="25">debugs<pos:position pos:line="122" pos:column="31"/></name><argument_list pos:line="122" pos:column="31">(<argument><expr><literal type="number" pos:line="122" pos:column="32">22<pos:position pos:line="122" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="36">3<pos:position pos:line="122" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="39">"refreshCheck: YES: age &gt; client-max-age"<pos:position pos:line="122" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="82"/></expr_stmt>
                        <return pos:line="123" pos:column="25">return <expr><name pos:line="123" pos:column="32">STALE_EXCEEDS_REQUEST_MAX_AGE_VALUE<pos:position pos:line="123" pos:column="67"/></name></expr>;<pos:position pos:line="123" pos:column="68"/></return>
                    }<pos:position pos:line="124" pos:column="22"/></block></then></if>
                }<pos:position pos:line="125" pos:column="18"/></block></else></if>
            }<pos:position pos:line="126" pos:column="14"/></block></then></if>

            <if pos:line="128" pos:column="13">if <condition pos:line="128" pos:column="16">(<expr><call><name><name pos:line="128" pos:column="17">cc<pos:position pos:line="128" pos:column="19"/></name><operator pos:line="128" pos:column="19">-&gt;<pos:position pos:line="128" pos:column="24"/></operator><name pos:line="128" pos:column="21">hasMaxStale<pos:position pos:line="128" pos:column="32"/></name></name><argument_list pos:line="128" pos:column="32">()<pos:position pos:line="128" pos:column="34"/></argument_list></call> <operator pos:line="128" pos:column="35">&amp;&amp;<pos:position pos:line="128" pos:column="45"/></operator> <name pos:line="128" pos:column="38">staleness<pos:position pos:line="128" pos:column="47"/></name> <operator pos:line="128" pos:column="48">&gt;<pos:position pos:line="128" pos:column="52"/></operator> <operator pos:line="128" pos:column="50">-<pos:position pos:line="128" pos:column="51"/></operator><literal type="number" pos:line="128" pos:column="51">1<pos:position pos:line="128" pos:column="52"/></literal></expr>)<pos:position pos:line="128" pos:column="53"/></condition><then pos:line="128" pos:column="53"> <block pos:line="128" pos:column="54">{
                <if pos:line="129" pos:column="17">if <condition pos:line="129" pos:column="20">(<expr><call><name><name pos:line="129" pos:column="21">cc<pos:position pos:line="129" pos:column="23"/></name><operator pos:line="129" pos:column="23">-&gt;<pos:position pos:line="129" pos:column="28"/></operator><name pos:line="129" pos:column="25">maxStale<pos:position pos:line="129" pos:column="33"/></name></name><argument_list pos:line="129" pos:column="33">()<pos:position pos:line="129" pos:column="35"/></argument_list></call><operator pos:line="129" pos:column="35">==<pos:position pos:line="129" pos:column="37"/></operator><name><name pos:line="129" pos:column="37">HttpHdrCc<pos:position pos:line="129" pos:column="46"/></name><operator pos:line="129" pos:column="46">::<pos:position pos:line="129" pos:column="48"/></operator><name pos:line="129" pos:column="48">MAX_STALE_ANY<pos:position pos:line="129" pos:column="61"/></name></name></expr>)<pos:position pos:line="129" pos:column="62"/></condition><then pos:line="129" pos:column="62"> <block pos:line="129" pos:column="63">{
                    <comment type="block" pos:line="130" pos:column="21">/* max-stale directive without a value */</comment>
                    <expr_stmt><expr><call><name pos:line="131" pos:column="21">debugs<pos:position pos:line="131" pos:column="27"/></name><argument_list pos:line="131" pos:column="27">(<argument><expr><literal type="number" pos:line="131" pos:column="28">22<pos:position pos:line="131" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="131" pos:column="32">3<pos:position pos:line="131" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="131" pos:column="35">"refreshCheck: NO: max-stale wildcard"<pos:position pos:line="131" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="75"/></expr_stmt>
                    <return pos:line="132" pos:column="21">return <expr><name pos:line="132" pos:column="28">FRESH_REQUEST_MAX_STALE_ALL<pos:position pos:line="132" pos:column="55"/></name></expr>;<pos:position pos:line="132" pos:column="56"/></return>
                }<pos:position pos:line="133" pos:column="18"/></block></then> <elseif pos:line="133" pos:column="19">else <if pos:line="133" pos:column="24">if <condition pos:line="133" pos:column="27">(<expr><name pos:line="133" pos:column="28">staleness<pos:position pos:line="133" pos:column="37"/></name> <operator pos:line="133" pos:column="38">&lt;<pos:position pos:line="133" pos:column="42"/></operator> <call><name><name pos:line="133" pos:column="40">cc<pos:position pos:line="133" pos:column="42"/></name><operator pos:line="133" pos:column="42">-&gt;<pos:position pos:line="133" pos:column="47"/></operator><name pos:line="133" pos:column="44">maxStale<pos:position pos:line="133" pos:column="52"/></name></name><argument_list pos:line="133" pos:column="52">()<pos:position pos:line="133" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="133" pos:column="55"/></condition><then pos:line="133" pos:column="55"> <block pos:line="133" pos:column="56">{
                    <expr_stmt><expr><call><name pos:line="134" pos:column="21">debugs<pos:position pos:line="134" pos:column="27"/></name><argument_list pos:line="134" pos:column="27">(<argument><expr><literal type="number" pos:line="134" pos:column="28">22<pos:position pos:line="134" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="32">3<pos:position pos:line="134" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="35">"refreshCheck: NO: staleness &lt; max-stale"<pos:position pos:line="134" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="78"/></expr_stmt>
                    <return pos:line="135" pos:column="21">return <expr><name pos:line="135" pos:column="28">FRESH_REQUEST_MAX_STALE_VALUE<pos:position pos:line="135" pos:column="57"/></name></expr>;<pos:position pos:line="135" pos:column="58"/></return>
                }<pos:position pos:line="136" pos:column="18"/></block></then></if></elseif></if>
            }<pos:position pos:line="137" pos:column="14"/></block></then></if>
        }<pos:position pos:line="138" pos:column="10"/></block></then></if>
    }<pos:position pos:line="139" pos:column="6"/></block></then></if>

    <if pos:line="141" pos:column="5">if <condition pos:line="141" pos:column="8">(<expr><operator pos:line="141" pos:column="9">-<pos:position pos:line="141" pos:column="10"/></operator><literal type="number" pos:line="141" pos:column="10">1<pos:position pos:line="141" pos:column="11"/></literal> <operator pos:line="141" pos:column="12">==<pos:position pos:line="141" pos:column="14"/></operator> <name pos:line="141" pos:column="15">staleness<pos:position pos:line="141" pos:column="24"/></name></expr>)<pos:position pos:line="141" pos:column="25"/></condition><then pos:line="141" pos:column="25"> <block pos:line="141" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="142" pos:column="9">debugs<pos:position pos:line="142" pos:column="15"/></name><argument_list pos:line="142" pos:column="15">(<argument><expr><literal type="number" pos:line="142" pos:column="16">22<pos:position pos:line="142" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="20">3<pos:position pos:line="142" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="23">"refreshCheck: object isn't stale.."<pos:position pos:line="142" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="61"/></expr_stmt>
        <if pos:line="143" pos:column="9">if <condition pos:line="143" pos:column="12">(<expr><name><name pos:line="143" pos:column="13">sf<pos:position pos:line="143" pos:column="15"/></name><operator pos:line="143" pos:column="15">.<pos:position pos:line="143" pos:column="16"/></operator><name pos:line="143" pos:column="16">expires<pos:position pos:line="143" pos:column="23"/></name></name></expr>)<pos:position pos:line="143" pos:column="24"/></condition><then pos:line="143" pos:column="24"> <block pos:line="143" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="144" pos:column="13">debugs<pos:position pos:line="144" pos:column="19"/></name><argument_list pos:line="144" pos:column="19">(<argument><expr><literal type="number" pos:line="144" pos:column="20">22<pos:position pos:line="144" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="24">3<pos:position pos:line="144" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="27">"refreshCheck: returning FRESH_EXPIRES"<pos:position pos:line="144" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="68"/></expr_stmt>
            <return pos:line="145" pos:column="13">return <expr><name pos:line="145" pos:column="20">FRESH_EXPIRES<pos:position pos:line="145" pos:column="33"/></name></expr>;<pos:position pos:line="145" pos:column="34"/></return>
        }<pos:position pos:line="146" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="148" pos:column="9">assert<pos:position pos:line="148" pos:column="15"/></name><argument_list pos:line="148" pos:column="15">(<argument><expr><operator pos:line="148" pos:column="16">!<pos:position pos:line="148" pos:column="17"/></operator><name><name pos:line="148" pos:column="17">sf<pos:position pos:line="148" pos:column="19"/></name><operator pos:line="148" pos:column="19">.<pos:position pos:line="148" pos:column="20"/></operator><name pos:line="148" pos:column="20">max<pos:position pos:line="148" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="25"/></expr_stmt>

        <if pos:line="150" pos:column="9">if <condition pos:line="150" pos:column="12">(<expr><name><name pos:line="150" pos:column="13">sf<pos:position pos:line="150" pos:column="15"/></name><operator pos:line="150" pos:column="15">.<pos:position pos:line="150" pos:column="16"/></operator><name pos:line="150" pos:column="16">lmfactor<pos:position pos:line="150" pos:column="24"/></name></name></expr>)<pos:position pos:line="150" pos:column="25"/></condition><then pos:line="150" pos:column="25"> <block pos:line="150" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="151" pos:column="13">debugs<pos:position pos:line="151" pos:column="19"/></name><argument_list pos:line="151" pos:column="19">(<argument><expr><literal type="number" pos:line="151" pos:column="20">22<pos:position pos:line="151" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="151" pos:column="24">3<pos:position pos:line="151" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="27">"refreshCheck: returning FRESH_LMFACTOR_RULE"<pos:position pos:line="151" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="74"/></expr_stmt>
            <return pos:line="152" pos:column="13">return <expr><name pos:line="152" pos:column="20">FRESH_LMFACTOR_RULE<pos:position pos:line="152" pos:column="39"/></name></expr>;<pos:position pos:line="152" pos:column="40"/></return>
        }<pos:position pos:line="153" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="155" pos:column="9">assert<pos:position pos:line="155" pos:column="15"/></name><argument_list pos:line="155" pos:column="15">(<argument><expr><name><name pos:line="155" pos:column="16">sf<pos:position pos:line="155" pos:column="18"/></name><operator pos:line="155" pos:column="18">.<pos:position pos:line="155" pos:column="19"/></operator><name pos:line="155" pos:column="19">min<pos:position pos:line="155" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="155" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="24"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="157" pos:column="9">debugs<pos:position pos:line="157" pos:column="15"/></name><argument_list pos:line="157" pos:column="15">(<argument><expr><literal type="number" pos:line="157" pos:column="16">22<pos:position pos:line="157" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="157" pos:column="20">3<pos:position pos:line="157" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="157" pos:column="23">"refreshCheck: returning FRESH_MIN_RULE"<pos:position pos:line="157" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="157" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="65"/></expr_stmt>
        <return pos:line="158" pos:column="9">return <expr><name pos:line="158" pos:column="16">FRESH_MIN_RULE<pos:position pos:line="158" pos:column="30"/></name></expr>;<pos:position pos:line="158" pos:column="31"/></return>
    }<pos:position pos:line="159" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="161" pos:column="5">/*
     * At this point the response is stale, unless one of
     * the override options kicks in.
     * NOTE: max-stale config blocks the overrides.
     */</comment>
    <decl_stmt><decl><type><name pos:line="166" pos:column="5">int<pos:position pos:line="166" pos:column="8"/></name></type> <name pos:line="166" pos:column="9">max_stale<pos:position pos:line="166" pos:column="18"/></name> <init pos:line="166" pos:column="19">= <expr><operator pos:line="166" pos:column="21">(<pos:position pos:line="166" pos:column="22"/></operator><ternary><condition><expr><name><name pos:line="166" pos:column="22">R<pos:position pos:line="166" pos:column="23"/></name><operator pos:line="166" pos:column="23">-&gt;<pos:position pos:line="166" pos:column="28"/></operator><name pos:line="166" pos:column="25">max_stale<pos:position pos:line="166" pos:column="34"/></name></name> <operator pos:line="166" pos:column="35">&gt;=<pos:position pos:line="166" pos:column="40"/></operator> <literal type="number" pos:line="166" pos:column="38">0<pos:position pos:line="166" pos:column="39"/></literal></expr> ?<pos:position pos:line="166" pos:column="41"/></condition><then pos:line="166" pos:column="41"> <expr><name><name pos:line="166" pos:column="42">R<pos:position pos:line="166" pos:column="43"/></name><operator pos:line="166" pos:column="43">-&gt;<pos:position pos:line="166" pos:column="48"/></operator><name pos:line="166" pos:column="45">max_stale<pos:position pos:line="166" pos:column="54"/></name></name></expr> <pos:position pos:line="166" pos:column="55"/></then><else pos:line="166" pos:column="55">: <expr><name><name pos:line="166" pos:column="57">Config<pos:position pos:line="166" pos:column="63"/></name><operator pos:line="166" pos:column="63">.<pos:position pos:line="166" pos:column="64"/></operator><name pos:line="166" pos:column="64">maxStale<pos:position pos:line="166" pos:column="72"/></name></name></expr></else></ternary><operator pos:line="166" pos:column="72">)<pos:position pos:line="166" pos:column="73"/></operator></expr></init></decl>;<pos:position pos:line="166" pos:column="74"/></decl_stmt>
    <if pos:line="167" pos:column="5">if <condition pos:line="167" pos:column="8">( <expr><name pos:line="167" pos:column="10">max_stale<pos:position pos:line="167" pos:column="19"/></name> <operator pos:line="167" pos:column="20">&gt;=<pos:position pos:line="167" pos:column="25"/></operator> <literal type="number" pos:line="167" pos:column="23">0<pos:position pos:line="167" pos:column="24"/></literal> <operator pos:line="167" pos:column="25">&amp;&amp;<pos:position pos:line="167" pos:column="35"/></operator> <name pos:line="167" pos:column="28">staleness<pos:position pos:line="167" pos:column="37"/></name> <operator pos:line="167" pos:column="38">&gt;<pos:position pos:line="167" pos:column="42"/></operator> <name pos:line="167" pos:column="40">max_stale<pos:position pos:line="167" pos:column="49"/></name></expr>)<pos:position pos:line="167" pos:column="50"/></condition><then pos:line="167" pos:column="50"> <block pos:line="167" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="168" pos:column="9">debugs<pos:position pos:line="168" pos:column="15"/></name><argument_list pos:line="168" pos:column="15">(<argument><expr><literal type="number" pos:line="168" pos:column="16">22<pos:position pos:line="168" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="168" pos:column="20">3<pos:position pos:line="168" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="168" pos:column="23">"refreshCheck: YES: max-stale limit"<pos:position pos:line="168" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="61"/></expr_stmt>
        <if pos:line="169" pos:column="9">if <condition pos:line="169" pos:column="12">(<expr><name pos:line="169" pos:column="13">request<pos:position pos:line="169" pos:column="20"/></name></expr>)<pos:position pos:line="169" pos:column="21"/></condition><then pos:line="169" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="170" pos:column="13">request<pos:position pos:line="170" pos:column="20"/></name><operator pos:line="170" pos:column="20">-&gt;<pos:position pos:line="170" pos:column="25"/></operator><name pos:line="170" pos:column="22">flags<pos:position pos:line="170" pos:column="27"/></name><operator pos:line="170" pos:column="27">.<pos:position pos:line="170" pos:column="28"/></operator><name pos:line="170" pos:column="28">failOnValidationError<pos:position pos:line="170" pos:column="49"/></name></name> <operator pos:line="170" pos:column="50">=<pos:position pos:line="170" pos:column="51"/></operator> <literal type="boolean" pos:line="170" pos:column="52">true<pos:position pos:line="170" pos:column="56"/></literal></expr>;<pos:position pos:line="170" pos:column="57"/></expr_stmt></block></then></if>
        <return pos:line="171" pos:column="9">return <expr><name pos:line="171" pos:column="16">STALE_MAX_STALE<pos:position pos:line="171" pos:column="31"/></name></expr>;<pos:position pos:line="171" pos:column="32"/></return>
    }<pos:position pos:line="172" pos:column="6"/></block></then></if>

    <if pos:line="174" pos:column="5">if <condition pos:line="174" pos:column="8">(<expr><name><name pos:line="174" pos:column="9">sf<pos:position pos:line="174" pos:column="11"/></name><operator pos:line="174" pos:column="11">.<pos:position pos:line="174" pos:column="12"/></operator><name pos:line="174" pos:column="12">expires<pos:position pos:line="174" pos:column="19"/></name></name></expr>)<pos:position pos:line="174" pos:column="20"/></condition><then pos:line="174" pos:column="20"> <block pos:line="174" pos:column="21">{
<cpp:if pos:line="175" pos:column="1">#<cpp:directive pos:line="175" pos:column="2">if<pos:position pos:line="175" pos:column="4"/></cpp:directive> <expr><name pos:line="175" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="175" pos:column="24"/></name></expr></cpp:if>

        <if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><name><name pos:line="177" pos:column="13">R<pos:position pos:line="177" pos:column="14"/></name><operator pos:line="177" pos:column="14">-&gt;<pos:position pos:line="177" pos:column="19"/></operator><name pos:line="177" pos:column="16">flags<pos:position pos:line="177" pos:column="21"/></name><operator pos:line="177" pos:column="21">.<pos:position pos:line="177" pos:column="22"/></operator><name pos:line="177" pos:column="22">override_expire<pos:position pos:line="177" pos:column="37"/></name></name> <operator pos:line="177" pos:column="38">&amp;&amp;<pos:position pos:line="177" pos:column="48"/></operator> <name pos:line="177" pos:column="41">age<pos:position pos:line="177" pos:column="44"/></name> <operator pos:line="177" pos:column="45">&lt;<pos:position pos:line="177" pos:column="49"/></operator> <name><name pos:line="177" pos:column="47">R<pos:position pos:line="177" pos:column="48"/></name><operator pos:line="177" pos:column="48">-&gt;<pos:position pos:line="177" pos:column="53"/></operator><name pos:line="177" pos:column="50">min<pos:position pos:line="177" pos:column="53"/></name></name></expr>)<pos:position pos:line="177" pos:column="54"/></condition><then pos:line="177" pos:column="54"> <block pos:line="177" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="178" pos:column="13">debugs<pos:position pos:line="178" pos:column="19"/></name><argument_list pos:line="178" pos:column="19">(<argument><expr><literal type="number" pos:line="178" pos:column="20">22<pos:position pos:line="178" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="178" pos:column="24">3<pos:position pos:line="178" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="27">"refreshCheck: NO: age &lt; min &amp;&amp; override-expire"<pos:position pos:line="178" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="178" pos:column="77"/></expr_stmt>
            <return pos:line="179" pos:column="13">return <expr><name pos:line="179" pos:column="20">FRESH_OVERRIDE_EXPIRES<pos:position pos:line="179" pos:column="42"/></name></expr>;<pos:position pos:line="179" pos:column="43"/></return>
        }<pos:position pos:line="180" pos:column="10"/></block></then></if>

<cpp:endif pos:line="182" pos:column="1">#<cpp:directive pos:line="182" pos:column="2">endif<pos:position pos:line="182" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="183" pos:column="9">return <expr><name pos:line="183" pos:column="16">STALE_EXPIRES<pos:position pos:line="183" pos:column="29"/></name></expr>;<pos:position pos:line="183" pos:column="30"/></return>
    }<pos:position pos:line="184" pos:column="6"/></block></then></if>

    <if pos:line="186" pos:column="5">if <condition pos:line="186" pos:column="8">(<expr><name><name pos:line="186" pos:column="9">sf<pos:position pos:line="186" pos:column="11"/></name><operator pos:line="186" pos:column="11">.<pos:position pos:line="186" pos:column="12"/></operator><name pos:line="186" pos:column="12">max<pos:position pos:line="186" pos:column="15"/></name></name></expr>)<pos:position pos:line="186" pos:column="16"/></condition><then pos:line="186" pos:column="16">
        <block type="pseudo"><return pos:line="187" pos:column="9">return <expr><name pos:line="187" pos:column="16">STALE_MAX_RULE<pos:position pos:line="187" pos:column="30"/></name></expr>;<pos:position pos:line="187" pos:column="31"/></return></block></then></if>

    <if pos:line="189" pos:column="5">if <condition pos:line="189" pos:column="8">(<expr><name><name pos:line="189" pos:column="9">sf<pos:position pos:line="189" pos:column="11"/></name><operator pos:line="189" pos:column="11">.<pos:position pos:line="189" pos:column="12"/></operator><name pos:line="189" pos:column="12">lmfactor<pos:position pos:line="189" pos:column="20"/></name></name></expr>)<pos:position pos:line="189" pos:column="21"/></condition><then pos:line="189" pos:column="21"> <block pos:line="189" pos:column="22">{
<cpp:if pos:line="190" pos:column="1">#<cpp:directive pos:line="190" pos:column="2">if<pos:position pos:line="190" pos:column="4"/></cpp:directive> <expr><name pos:line="190" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="190" pos:column="24"/></name></expr></cpp:if>

        <if pos:line="192" pos:column="9">if <condition pos:line="192" pos:column="12">(<expr><name><name pos:line="192" pos:column="13">R<pos:position pos:line="192" pos:column="14"/></name><operator pos:line="192" pos:column="14">-&gt;<pos:position pos:line="192" pos:column="19"/></operator><name pos:line="192" pos:column="16">flags<pos:position pos:line="192" pos:column="21"/></name><operator pos:line="192" pos:column="21">.<pos:position pos:line="192" pos:column="22"/></operator><name pos:line="192" pos:column="22">override_lastmod<pos:position pos:line="192" pos:column="38"/></name></name> <operator pos:line="192" pos:column="39">&amp;&amp;<pos:position pos:line="192" pos:column="49"/></operator> <name pos:line="192" pos:column="42">age<pos:position pos:line="192" pos:column="45"/></name> <operator pos:line="192" pos:column="46">&lt;<pos:position pos:line="192" pos:column="50"/></operator> <name><name pos:line="192" pos:column="48">R<pos:position pos:line="192" pos:column="49"/></name><operator pos:line="192" pos:column="49">-&gt;<pos:position pos:line="192" pos:column="54"/></operator><name pos:line="192" pos:column="51">min<pos:position pos:line="192" pos:column="54"/></name></name></expr>)<pos:position pos:line="192" pos:column="55"/></condition><then pos:line="192" pos:column="55"> <block pos:line="192" pos:column="56">{
            <expr_stmt><expr><call><name pos:line="193" pos:column="13">debugs<pos:position pos:line="193" pos:column="19"/></name><argument_list pos:line="193" pos:column="19">(<argument><expr><literal type="number" pos:line="193" pos:column="20">22<pos:position pos:line="193" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="193" pos:column="24">3<pos:position pos:line="193" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="27">"refreshCheck: NO: age &lt; min &amp;&amp; override-lastmod"<pos:position pos:line="193" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="78"/></expr_stmt>
            <return pos:line="194" pos:column="13">return <expr><name pos:line="194" pos:column="20">FRESH_OVERRIDE_LASTMOD<pos:position pos:line="194" pos:column="42"/></name></expr>;<pos:position pos:line="194" pos:column="43"/></return>
        }<pos:position pos:line="195" pos:column="10"/></block></then></if>

<cpp:endif pos:line="197" pos:column="1">#<cpp:directive pos:line="197" pos:column="2">endif<pos:position pos:line="197" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="198" pos:column="9">return <expr><name pos:line="198" pos:column="16">STALE_LMFACTOR_RULE<pos:position pos:line="198" pos:column="35"/></name></expr>;<pos:position pos:line="198" pos:column="36"/></return>
    }<pos:position pos:line="199" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="201" pos:column="5">debugs<pos:position pos:line="201" pos:column="11"/></name><argument_list pos:line="201" pos:column="11">(<argument><expr><literal type="number" pos:line="201" pos:column="12">22<pos:position pos:line="201" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="201" pos:column="16">3<pos:position pos:line="201" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="19">"refreshCheck: returning STALE_DEFAULT"<pos:position pos:line="201" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="60"/></expr_stmt>
    <return pos:line="202" pos:column="5">return <expr><name pos:line="202" pos:column="12">STALE_DEFAULT<pos:position pos:line="202" pos:column="25"/></name></expr>;<pos:position pos:line="202" pos:column="26"/></return>
}<pos:position pos:line="203" pos:column="2"/></block></function></unit>

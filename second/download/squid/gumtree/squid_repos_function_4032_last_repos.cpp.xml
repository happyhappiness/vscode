<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4032_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLSourceDomainStrategy<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">match<pos:position pos:line="2" pos:column="31"/></name></name> <parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name><name pos:line="2" pos:column="33">ACLData<pos:position pos:line="2" pos:column="40"/></name><argument_list type="generic" pos:line="2" pos:column="40">&lt;<argument><expr><name pos:line="2" pos:column="41">MatchType<pos:position pos:line="2" pos:column="50"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="54"/></argument_list></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier> <modifier pos:line="2" pos:column="54">&amp;<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="55">data<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">ACLFilledChecklist<pos:position pos:line="2" pos:column="79"/></name> <modifier pos:line="2" pos:column="80">*<pos:position pos:line="2" pos:column="81"/></modifier></type><name pos:line="2" pos:column="81">checklist<pos:position pos:line="2" pos:column="90"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="91"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">fqdn<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">NULL<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">fqdn<pos:position pos:line="5" pos:column="9"/></name> <operator pos:line="5" pos:column="10">=<pos:position pos:line="5" pos:column="11"/></operator> <call><name pos:line="5" pos:column="12">fqdncache_gethostbyaddr<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><name><name pos:line="5" pos:column="36">checklist<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="47">src_addr<pos:position pos:line="5" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="57">FQDN_LOOKUP_IF_MISS<pos:position pos:line="5" pos:column="76"/></name></expr></argument>)<pos:position pos:line="5" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="78"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">fqdn<pos:position pos:line="7" pos:column="13"/></name></expr>)<pos:position pos:line="7" pos:column="14"/></condition><then pos:line="7" pos:column="14"> <block pos:line="7" pos:column="15">{
        <return pos:line="8" pos:column="9">return <expr><call><name><name pos:line="8" pos:column="16">data<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">match<pos:position pos:line="8" pos:column="27"/></name></name><argument_list pos:line="8" pos:column="27">(<argument><expr><name pos:line="8" pos:column="28">fqdn<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <elseif pos:line="9" pos:column="7">else <if pos:line="9" pos:column="12">if <condition pos:line="9" pos:column="15">(<expr><operator pos:line="9" pos:column="16">!<pos:position pos:line="9" pos:column="17"/></operator><call><name><name pos:line="9" pos:column="17">checklist<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">sourceDomainChecked<pos:position pos:line="9" pos:column="47"/></name></name><argument_list pos:line="9" pos:column="47">()<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="50"/></condition><then pos:line="9" pos:column="50"> <block pos:line="9" pos:column="51">{
        <comment type="block" pos:line="10" pos:column="9">/* FIXME: Using AclMatchedName here is not OO correct. Should find a way to the current acl */</comment>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">28<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"aclMatchAcl: Can't yet compare '"<pos:position pos:line="11" pos:column="57"/></literal> <operator pos:line="11" pos:column="58">&lt;&lt;<pos:position pos:line="11" pos:column="66"/></operator> <name pos:line="11" pos:column="61">AclMatchedName<pos:position pos:line="11" pos:column="75"/></name> <operator pos:line="11" pos:column="76">&lt;&lt;<pos:position pos:line="11" pos:column="84"/></operator> <literal type="string" pos:line="11" pos:column="79">"' ACL for '"<pos:position pos:line="11" pos:column="92"/></literal> <operator pos:line="11" pos:column="93">&lt;&lt;<pos:position pos:line="11" pos:column="101"/></operator> <name><name pos:line="11" pos:column="96">checklist<pos:position pos:line="11" pos:column="105"/></name><operator pos:line="11" pos:column="105">-&gt;<pos:position pos:line="11" pos:column="110"/></operator><name pos:line="11" pos:column="107">src_addr<pos:position pos:line="11" pos:column="115"/></name></name> <operator pos:line="11" pos:column="116">&lt;&lt;<pos:position pos:line="11" pos:column="124"/></operator> <literal type="string" pos:line="11" pos:column="119">"'"<pos:position pos:line="11" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="124"/></expr_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name><name pos:line="12" pos:column="13">checklist<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">goAsync<pos:position pos:line="12" pos:column="31"/></name></name><argument_list pos:line="12" pos:column="31">(<argument><expr><call><name><name pos:line="12" pos:column="32">SourceDomainLookup<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">::<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="52">Instance<pos:position pos:line="12" pos:column="60"/></name></name><argument_list pos:line="12" pos:column="60">()<pos:position pos:line="12" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="64"/></condition><then pos:line="12" pos:column="64">
            <block type="pseudo"><return pos:line="13" pos:column="13">return <expr><operator pos:line="13" pos:column="20">-<pos:position pos:line="13" pos:column="21"/></operator><literal type="number" pos:line="13" pos:column="21">1<pos:position pos:line="13" pos:column="22"/></literal></expr>;<pos:position pos:line="13" pos:column="23"/></return></block></then></if>
        <comment type="line" pos:line="14" pos:column="9">// else fall through to "none" match, hiding the lookup failure (XXX)</comment>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="17" pos:column="5">return <expr><call><name><name pos:line="17" pos:column="12">data<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">match<pos:position pos:line="17" pos:column="23"/></name></name><argument_list pos:line="17" pos:column="23">(<argument><expr><literal type="string" pos:line="17" pos:column="24">"none"<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

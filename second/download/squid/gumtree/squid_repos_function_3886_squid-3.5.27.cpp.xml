<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3886_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Service<pos:position pos:line="1" pos:column="25"/></name><operator pos:line="1" pos:column="25">::<pos:position pos:line="1" pos:column="27"/></operator><name pos:line="1" pos:column="27">broken<pos:position pos:line="1" pos:column="33"/></name></name><parameter_list pos:line="1" pos:column="33">()<pos:position pos:line="1" pos:column="35"/></parameter_list> <specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier>
<block pos:line="2" pos:column="1">{
    <return pos:line="3" pos:column="5">return <expr><call><name pos:line="3" pos:column="12">probed<pos:position pos:line="3" pos:column="18"/></name><argument_list pos:line="3" pos:column="18">()<pos:position pos:line="3" pos:column="20"/></argument_list></call> <operator pos:line="3" pos:column="21">&amp;&amp;<pos:position pos:line="3" pos:column="31"/></operator> <operator pos:line="3" pos:column="24">!<pos:position pos:line="3" pos:column="25"/></operator><call><name pos:line="3" pos:column="25">up<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">()<pos:position pos:line="3" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="30"/></return>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

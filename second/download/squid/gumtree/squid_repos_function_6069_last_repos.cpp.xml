<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6069_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CharacterSet<pos:position pos:line="1" pos:column="13"/></name> <modifier pos:line="1" pos:column="14">&amp;<pos:position pos:line="1" pos:column="19"/></modifier></type>
<name><name pos:line="2" pos:column="1">CharacterSet<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">addRange<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">unsigned<pos:position pos:line="2" pos:column="32"/></name> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">low<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">unsigned<pos:position pos:line="2" pos:column="51"/></name> <name pos:line="2" pos:column="52">char<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">high<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">//manual loop splitting is needed to cover case where high is 255</comment>
    <comment type="line" pos:line="5" pos:column="5">// otherwise low will wrap, resulting in infinite loop</comment>
    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><name pos:line="6" pos:column="12">low<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&lt;<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="18">high<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition> <block pos:line="6" pos:column="24">{
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">chars_<pos:position pos:line="7" pos:column="15"/></name><index pos:line="7" pos:column="15">[<expr><cast type="static" pos:line="7" pos:column="16">static_cast<argument_list type="generic" pos:line="7" pos:column="27">&lt;<argument><expr><name pos:line="7" pos:column="28">uint8_t<pos:position pos:line="7" pos:column="35"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="39"/></argument_list><argument_list pos:line="7" pos:column="36">(<argument><expr><name pos:line="7" pos:column="37">low<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></cast></expr>]<pos:position pos:line="7" pos:column="42"/></index></name> <operator pos:line="7" pos:column="43">=<pos:position pos:line="7" pos:column="44"/></operator> <literal type="number" pos:line="7" pos:column="45">1<pos:position pos:line="7" pos:column="46"/></literal></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="8" pos:column="9">++<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">low<pos:position pos:line="8" pos:column="14"/></name></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></while>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">chars_<pos:position pos:line="10" pos:column="11"/></name><index pos:line="10" pos:column="11">[<expr><cast type="static" pos:line="10" pos:column="12">static_cast<argument_list type="generic" pos:line="10" pos:column="23">&lt;<argument><expr><name pos:line="10" pos:column="24">uint8_t<pos:position pos:line="10" pos:column="31"/></name></expr></argument>&gt;<pos:position pos:line="10" pos:column="35"/></argument_list><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">high<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></cast></expr>]<pos:position pos:line="10" pos:column="39"/></index></name> <operator pos:line="10" pos:column="40">=<pos:position pos:line="10" pos:column="41"/></operator> <literal type="number" pos:line="10" pos:column="42">1<pos:position pos:line="10" pos:column="43"/></literal></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
    <return pos:line="11" pos:column="5">return <expr><operator pos:line="11" pos:column="12">*<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">this<pos:position pos:line="11" pos:column="17"/></name></expr>;<pos:position pos:line="11" pos:column="18"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

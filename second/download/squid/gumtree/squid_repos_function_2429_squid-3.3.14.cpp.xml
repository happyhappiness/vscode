<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2429_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">abort<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name><modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type> <name pos:line="2" pos:column="23">d<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">FwdState<pos:position pos:line="4" pos:column="13"/></name><modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type> <name pos:line="4" pos:column="15">fwd<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><operator pos:line="4" pos:column="21">(<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">FwdState<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></operator><operator pos:line="4" pos:column="31">)<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">d<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">Pointer<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">tmp<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">fwd<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt> <comment type="line" pos:line="5" pos:column="24">// Grab a temporary pointer to keep the object alive during our scope.</comment>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">Comm<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">::<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="15">IsConnOpen<pos:position pos:line="7" pos:column="25"/></name></name><argument_list pos:line="7" pos:column="25">(<argument><expr><call><name><name pos:line="7" pos:column="26">fwd<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">-&gt;<pos:position pos:line="7" pos:column="34"/></operator><name pos:line="7" pos:column="31">serverConnection<pos:position pos:line="7" pos:column="47"/></name></name><argument_list pos:line="7" pos:column="47">()<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="51"/></condition><then pos:line="7" pos:column="51"> <block pos:line="7" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">comm_remove_close_handler<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><call><name><name pos:line="8" pos:column="35">fwd<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">serverConnection<pos:position pos:line="8" pos:column="56"/></name></name><argument_list pos:line="8" pos:column="56">()<pos:position pos:line="8" pos:column="58"/></argument_list></call><operator pos:line="8" pos:column="58">-&gt;<pos:position pos:line="8" pos:column="63"/></operator><name pos:line="8" pos:column="60">fd<pos:position pos:line="8" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="64">fwdServerClosedWrapper<pos:position pos:line="8" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="88">fwd<pos:position pos:line="8" pos:column="91"/></name></expr></argument>)<pos:position pos:line="8" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">17<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">3<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="23">HERE<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&lt;&lt;<pos:position pos:line="9" pos:column="36"/></operator> <literal type="string" pos:line="9" pos:column="31">"store entry aborted; closing "<pos:position pos:line="9" pos:column="62"/></literal> <operator pos:line="9" pos:column="63">&lt;&lt;<pos:position pos:line="9" pos:column="71"/></operator>
               <call><name><name pos:line="10" pos:column="16">fwd<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">serverConnection<pos:position pos:line="10" pos:column="37"/></name></name><argument_list pos:line="10" pos:column="37">()<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">fwd<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">serverConnection<pos:position pos:line="11" pos:column="30"/></name></name><argument_list pos:line="11" pos:column="30">()<pos:position pos:line="11" pos:column="32"/></argument_list></call><operator pos:line="11" pos:column="32">-&gt;<pos:position pos:line="11" pos:column="37"/></operator><call><name pos:line="11" pos:column="34">close<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">()<pos:position pos:line="11" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <else pos:line="12" pos:column="7">else <block pos:line="12" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">17<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">7<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">HERE<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">&lt;&lt;<pos:position pos:line="13" pos:column="36"/></operator> <literal type="string" pos:line="13" pos:column="31">"store entry aborted; no connection to close"<pos:position pos:line="13" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">fwd<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">-&gt;<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="10">serverDestinations<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">.<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">clean<pos:position pos:line="15" pos:column="34"/></name></name><argument_list pos:line="15" pos:column="34">()<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">fwd<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">self<pos:position pos:line="16" pos:column="14"/></name></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">NULL<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

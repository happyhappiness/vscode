<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5414_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">MemAllocator<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">&amp;<pos:position pos:line="1" pos:column="26"/></modifier></type>
<name pos:line="2" pos:column="1">GetStrPool<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">size_t<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">type<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">MemAllocator<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name><name pos:line="4" pos:column="26">strPools<pos:position pos:line="4" pos:column="34"/></name><index pos:line="4" pos:column="34">[<expr><name pos:line="4" pos:column="35">mem_str_pool_count<pos:position pos:line="4" pos:column="53"/></name></expr>]<pos:position pos:line="4" pos:column="54"/></index></name></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="5" pos:column="5">static<pos:position pos:line="5" pos:column="11"/></specifier> <type><name pos:line="5" pos:column="12">bool<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">initialized<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><literal type="boolean" pos:line="5" pos:column="31">false<pos:position pos:line="5" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>

    <decl_stmt><decl><specifier pos:line="7" pos:column="5">static<pos:position pos:line="7" pos:column="11"/></specifier> <type><specifier pos:line="7" pos:column="12">const<pos:position pos:line="7" pos:column="17"/></specifier> <name pos:line="7" pos:column="18">PoolMeta<pos:position pos:line="7" pos:column="26"/></name></type> <name><name pos:line="7" pos:column="27">PoolAttrs<pos:position pos:line="7" pos:column="36"/></name><index pos:line="7" pos:column="36">[<expr><name pos:line="7" pos:column="37">mem_str_pool_count<pos:position pos:line="7" pos:column="55"/></name></expr>]<pos:position pos:line="7" pos:column="56"/></index></name> <init pos:line="7" pos:column="57">= <expr><block pos:line="7" pos:column="59">{
        <expr><block pos:line="8" pos:column="9">{<expr><literal type="string" pos:line="8" pos:column="10">"Short Strings"<pos:position pos:line="8" pos:column="25"/></literal></expr>, <macro><name pos:line="8" pos:column="27">MemAllocator<pos:position pos:line="8" pos:column="39"/></name></macro><expr><name><operator pos:line="8" pos:column="39">::<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">RoundedSize<pos:position pos:line="8" pos:column="52"/></name></name><operator pos:line="8" pos:column="52">(<pos:position pos:line="8" pos:column="53"/></operator><literal type="number" pos:line="8" pos:column="53">36<pos:position pos:line="8" pos:column="55"/></literal><operator pos:line="8" pos:column="55">)<pos:position pos:line="8" pos:column="56"/></operator></expr>}<pos:position pos:line="8" pos:column="57"/></block></expr>,      <comment type="block" pos:line="8" pos:column="64">/* to fit rfc1123 and similar */</comment>
        <expr><block pos:line="9" pos:column="9">{<expr><literal type="string" pos:line="9" pos:column="10">"Medium Strings"<pos:position pos:line="9" pos:column="26"/></literal></expr>, <macro><name pos:line="9" pos:column="28">MemAllocator<pos:position pos:line="9" pos:column="40"/></name></macro><expr><name><operator pos:line="9" pos:column="40">::<pos:position pos:line="9" pos:column="42"/></operator><name pos:line="9" pos:column="42">RoundedSize<pos:position pos:line="9" pos:column="53"/></name></name><operator pos:line="9" pos:column="53">(<pos:position pos:line="9" pos:column="54"/></operator><literal type="number" pos:line="9" pos:column="54">128<pos:position pos:line="9" pos:column="57"/></literal><operator pos:line="9" pos:column="57">)<pos:position pos:line="9" pos:column="58"/></operator></expr>}<pos:position pos:line="9" pos:column="59"/></block></expr>,    <comment type="block" pos:line="9" pos:column="64">/* to fit most urls */</comment>
        <expr><block pos:line="10" pos:column="9">{<expr><literal type="string" pos:line="10" pos:column="10">"Long Strings"<pos:position pos:line="10" pos:column="24"/></literal></expr>, <macro><name pos:line="10" pos:column="26">MemAllocator<pos:position pos:line="10" pos:column="38"/></name></macro><expr><name><operator pos:line="10" pos:column="38">::<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">RoundedSize<pos:position pos:line="10" pos:column="51"/></name></name><operator pos:line="10" pos:column="51">(<pos:position pos:line="10" pos:column="52"/></operator><literal type="number" pos:line="10" pos:column="52">512<pos:position pos:line="10" pos:column="55"/></literal><operator pos:line="10" pos:column="55">)<pos:position pos:line="10" pos:column="56"/></operator></expr>}<pos:position pos:line="10" pos:column="57"/></block></expr>,
        <expr><block pos:line="11" pos:column="9">{<expr><literal type="string" pos:line="11" pos:column="10">"1KB Strings"<pos:position pos:line="11" pos:column="23"/></literal></expr>, <macro><name pos:line="11" pos:column="25">MemAllocator<pos:position pos:line="11" pos:column="37"/></name></macro><expr><name><operator pos:line="11" pos:column="37">::<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">RoundedSize<pos:position pos:line="11" pos:column="50"/></name></name><operator pos:line="11" pos:column="50">(<pos:position pos:line="11" pos:column="51"/></operator><literal type="number" pos:line="11" pos:column="51">1024<pos:position pos:line="11" pos:column="55"/></literal><operator pos:line="11" pos:column="55">)<pos:position pos:line="11" pos:column="56"/></operator></expr>}<pos:position pos:line="11" pos:column="57"/></block></expr>,
        <expr><block pos:line="12" pos:column="9">{<expr><literal type="string" pos:line="12" pos:column="10">"4KB Strings"<pos:position pos:line="12" pos:column="23"/></literal></expr>, <macro><name pos:line="12" pos:column="25">MemAllocator<pos:position pos:line="12" pos:column="37"/></name></macro><expr><name><operator pos:line="12" pos:column="37">::<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="39">RoundedSize<pos:position pos:line="12" pos:column="50"/></name></name><operator pos:line="12" pos:column="50">(<pos:position pos:line="12" pos:column="51"/></operator><literal type="number" pos:line="12" pos:column="51">4<pos:position pos:line="12" pos:column="52"/></literal><operator pos:line="12" pos:column="52">*<pos:position pos:line="12" pos:column="53"/></operator><literal type="number" pos:line="12" pos:column="53">1024<pos:position pos:line="12" pos:column="57"/></literal><operator pos:line="12" pos:column="57">)<pos:position pos:line="12" pos:column="58"/></operator></expr>}<pos:position pos:line="12" pos:column="59"/></block></expr>,
        <expr><block pos:line="13" pos:column="9">{<expr><literal type="string" pos:line="13" pos:column="10">"16KB Strings"<pos:position pos:line="13" pos:column="24"/></literal></expr>, <macro><name pos:line="13" pos:column="26">MemAllocator<pos:position pos:line="13" pos:column="38"/></name></macro><expr><name><operator pos:line="13" pos:column="38">::<pos:position pos:line="13" pos:column="40"/></operator><name pos:line="13" pos:column="40">RoundedSize<pos:position pos:line="13" pos:column="51"/></name></name><operator pos:line="13" pos:column="51">(<pos:position pos:line="13" pos:column="52"/></operator><literal type="number" pos:line="13" pos:column="52">16<pos:position pos:line="13" pos:column="54"/></literal><operator pos:line="13" pos:column="54">*<pos:position pos:line="13" pos:column="55"/></operator><literal type="number" pos:line="13" pos:column="55">1024<pos:position pos:line="13" pos:column="59"/></literal><operator pos:line="13" pos:column="59">)<pos:position pos:line="13" pos:column="60"/></operator></expr>}<pos:position pos:line="13" pos:column="61"/></block></expr>
    }<pos:position pos:line="14" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="14" pos:column="7"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">initialized<pos:position pos:line="16" pos:column="21"/></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22"> <block pos:line="16" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">memset<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">strPools<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="17" pos:column="26">'\0'<pos:position pos:line="17" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="32">sizeof<argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">strPools<pos:position pos:line="17" pos:column="47"/></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="50"/></expr_stmt>

        <comment type="block" format="doxygen" pos:line="19" pos:column="9">/** Lastly init the string pools. */</comment>
        <for pos:line="20" pos:column="9">for <control pos:line="20" pos:column="13">(<init><decl><type><name pos:line="20" pos:column="14">int<pos:position pos:line="20" pos:column="17"/></name></type> <name pos:line="20" pos:column="18">i<pos:position pos:line="20" pos:column="19"/></name> <init pos:line="20" pos:column="20">= <expr><literal type="number" pos:line="20" pos:column="22">0<pos:position pos:line="20" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="24"/></init> <condition><expr><name pos:line="20" pos:column="25">i<pos:position pos:line="20" pos:column="26"/></name> <operator pos:line="20" pos:column="27">&lt;<pos:position pos:line="20" pos:column="31"/></operator> <name pos:line="20" pos:column="29">mem_str_pool_count<pos:position pos:line="20" pos:column="47"/></name></expr>;<pos:position pos:line="20" pos:column="48"/></condition> <incr><expr><operator pos:line="20" pos:column="49">++<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="51">i<pos:position pos:line="20" pos:column="52"/></name></expr></incr>)<pos:position pos:line="20" pos:column="53"/></control> <block pos:line="20" pos:column="54">{
            <expr_stmt><expr><name><name pos:line="21" pos:column="13">strPools<pos:position pos:line="21" pos:column="21"/></name><index pos:line="21" pos:column="21">[<expr><name pos:line="21" pos:column="22">i<pos:position pos:line="21" pos:column="23"/></name></expr>]<pos:position pos:line="21" pos:column="24"/></index></name> <operator pos:line="21" pos:column="25">=<pos:position pos:line="21" pos:column="26"/></operator> <call><name pos:line="21" pos:column="27">memPoolCreate<pos:position pos:line="21" pos:column="40"/></name><argument_list pos:line="21" pos:column="40">(<argument><expr><name><name pos:line="21" pos:column="41">PoolAttrs<pos:position pos:line="21" pos:column="50"/></name><index pos:line="21" pos:column="50">[<expr><name pos:line="21" pos:column="51">i<pos:position pos:line="21" pos:column="52"/></name></expr>]<pos:position pos:line="21" pos:column="53"/></index></name><operator pos:line="21" pos:column="53">.<pos:position pos:line="21" pos:column="54"/></operator><name pos:line="21" pos:column="54">name<pos:position pos:line="21" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="60">PoolAttrs<pos:position pos:line="21" pos:column="69"/></name><index pos:line="21" pos:column="69">[<expr><name pos:line="21" pos:column="70">i<pos:position pos:line="21" pos:column="71"/></name></expr>]<pos:position pos:line="21" pos:column="72"/></index></name><operator pos:line="21" pos:column="72">.<pos:position pos:line="21" pos:column="73"/></operator><name pos:line="21" pos:column="73">obj_size<pos:position pos:line="21" pos:column="81"/></name></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">strPools<pos:position pos:line="22" pos:column="21"/></name><index pos:line="22" pos:column="21">[<expr><name pos:line="22" pos:column="22">i<pos:position pos:line="22" pos:column="23"/></name></expr>]<pos:position pos:line="22" pos:column="24"/></index></name><operator pos:line="22" pos:column="24">-&gt;<pos:position pos:line="22" pos:column="29"/></operator><call><name pos:line="22" pos:column="26">zeroBlocks<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><literal type="boolean" pos:line="22" pos:column="37">false<pos:position pos:line="22" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>

            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name><name pos:line="24" pos:column="17">strPools<pos:position pos:line="24" pos:column="25"/></name><index pos:line="24" pos:column="25">[<expr><name pos:line="24" pos:column="26">i<pos:position pos:line="24" pos:column="27"/></name></expr>]<pos:position pos:line="24" pos:column="28"/></index></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><call><name pos:line="24" pos:column="30">objectSize<pos:position pos:line="24" pos:column="40"/></name><argument_list pos:line="24" pos:column="40">()<pos:position pos:line="24" pos:column="42"/></argument_list></call> <operator pos:line="24" pos:column="43">!=<pos:position pos:line="24" pos:column="45"/></operator> <name><name pos:line="24" pos:column="46">PoolAttrs<pos:position pos:line="24" pos:column="55"/></name><index pos:line="24" pos:column="55">[<expr><name pos:line="24" pos:column="56">i<pos:position pos:line="24" pos:column="57"/></name></expr>]<pos:position pos:line="24" pos:column="58"/></index></name><operator pos:line="24" pos:column="58">.<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="59">obj_size<pos:position pos:line="24" pos:column="67"/></name></expr>)<pos:position pos:line="24" pos:column="68"/></condition><then pos:line="24" pos:column="68">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="17">debugs<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><literal type="number" pos:line="25" pos:column="24">13<pos:position pos:line="25" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">DBG_IMPORTANT<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="43">"NOTICE: "<pos:position pos:line="25" pos:column="53"/></literal> <operator pos:line="25" pos:column="54">&lt;&lt;<pos:position pos:line="25" pos:column="62"/></operator> <name><name pos:line="25" pos:column="57">PoolAttrs<pos:position pos:line="25" pos:column="66"/></name><index pos:line="25" pos:column="66">[<expr><name pos:line="25" pos:column="67">i<pos:position pos:line="25" pos:column="68"/></name></expr>]<pos:position pos:line="25" pos:column="69"/></index></name><operator pos:line="25" pos:column="69">.<pos:position pos:line="25" pos:column="70"/></operator><name pos:line="25" pos:column="70">name<pos:position pos:line="25" pos:column="74"/></name> <operator pos:line="25" pos:column="75">&lt;&lt;<pos:position pos:line="25" pos:column="83"/></operator>
                       <literal type="string" pos:line="26" pos:column="24">" is "<pos:position pos:line="26" pos:column="30"/></literal> <operator pos:line="26" pos:column="31">&lt;&lt;<pos:position pos:line="26" pos:column="39"/></operator> <name><name pos:line="26" pos:column="34">strPools<pos:position pos:line="26" pos:column="42"/></name><index pos:line="26" pos:column="42">[<expr><name pos:line="26" pos:column="43">i<pos:position pos:line="26" pos:column="44"/></name></expr>]<pos:position pos:line="26" pos:column="45"/></index></name><operator pos:line="26" pos:column="45">-&gt;<pos:position pos:line="26" pos:column="50"/></operator><call><name pos:line="26" pos:column="47">objectSize<pos:position pos:line="26" pos:column="57"/></name><argument_list pos:line="26" pos:column="57">()<pos:position pos:line="26" pos:column="59"/></argument_list></call> <operator pos:line="26" pos:column="60">&lt;&lt;<pos:position pos:line="26" pos:column="68"/></operator>
                       <literal type="string" pos:line="27" pos:column="24">" bytes instead of requested "<pos:position pos:line="27" pos:column="54"/></literal> <operator pos:line="27" pos:column="55">&lt;&lt;<pos:position pos:line="27" pos:column="63"/></operator>
                       <name><name pos:line="28" pos:column="24">PoolAttrs<pos:position pos:line="28" pos:column="33"/></name><index pos:line="28" pos:column="33">[<expr><name pos:line="28" pos:column="34">i<pos:position pos:line="28" pos:column="35"/></name></expr>]<pos:position pos:line="28" pos:column="36"/></index></name><operator pos:line="28" pos:column="36">.<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="37">obj_size<pos:position pos:line="28" pos:column="45"/></name> <operator pos:line="28" pos:column="46">&lt;&lt;<pos:position pos:line="28" pos:column="54"/></operator> <literal type="string" pos:line="28" pos:column="49">" bytes"<pos:position pos:line="28" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt></block></then></if>
        }<pos:position pos:line="29" pos:column="10"/></block></for>

        <expr_stmt><expr><name pos:line="31" pos:column="9">initialized<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">=<pos:position pos:line="31" pos:column="22"/></operator> <literal type="boolean" pos:line="31" pos:column="23">true<pos:position pos:line="31" pos:column="27"/></literal></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <return pos:line="34" pos:column="5">return <expr><operator pos:line="34" pos:column="12">*<pos:position pos:line="34" pos:column="13"/></operator><name><name pos:line="34" pos:column="13">strPools<pos:position pos:line="34" pos:column="21"/></name><index pos:line="34" pos:column="21">[<expr><name pos:line="34" pos:column="22">type<pos:position pos:line="34" pos:column="26"/></name></expr>]<pos:position pos:line="34" pos:column="27"/></index></name></expr>;<pos:position pos:line="34" pos:column="28"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2161_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">storeDigestRebuildResume<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">void<pos:position pos:line="2" pos:column="30"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name><name pos:line="4" pos:column="12">sd_state<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">.<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">rebuild_lock<pos:position pos:line="4" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><operator pos:line="5" pos:column="12">!<pos:position pos:line="5" pos:column="13"/></operator><name><name pos:line="5" pos:column="13">sd_state<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">.<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">rewrite_lock<pos:position pos:line="5" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">sd_state<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">.<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">theSearch<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <call><name><name pos:line="6" pos:column="26">Store<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">::<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">Root<pos:position pos:line="6" pos:column="37"/></name></name><argument_list pos:line="6" pos:column="37">()<pos:position pos:line="6" pos:column="39"/></argument_list></call><operator pos:line="6" pos:column="39">.<pos:position pos:line="6" pos:column="40"/></operator><call><name pos:line="6" pos:column="40">search<pos:position pos:line="6" pos:column="46"/></name><argument_list pos:line="6" pos:column="46">(<argument><expr><name pos:line="6" pos:column="47">NULL<pos:position pos:line="6" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="53">NULL<pos:position pos:line="6" pos:column="57"/></name></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="59"/></expr_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* resize or clear */</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">storeDigestResize<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">()<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">cacheDigestClear<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">store_digest<pos:position pos:line="10" pos:column="38"/></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt></block></then></if>		<comment type="block" pos:line="10" pos:column="49">/* not clean()! */</comment>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">memset<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><operator pos:line="12" pos:column="12">&amp;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="13">sd_stats<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="23">0<pos:position pos:line="12" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="12" pos:column="26">sizeof<argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">sd_stats<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">eventAdd<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><literal type="string" pos:line="14" pos:column="14">"storeDigestRebuildStep"<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="40">storeDigestRebuildStep<pos:position pos:line="14" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="64">NULL<pos:position pos:line="14" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="70">0.0<pos:position pos:line="14" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="75">1<pos:position pos:line="14" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="78"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

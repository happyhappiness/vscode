<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4592_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLDestinationIP<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">match<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">ACLChecklist<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">cl<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ACLFilledChecklist<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">checklist<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><call><name pos:line="4" pos:column="37">Filled<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><name pos:line="4" pos:column="44">cl<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>

    <comment type="line" pos:line="6" pos:column="5">// if there is no HTTP request details fallback to the dst_addr</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">checklist<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">request<pos:position pos:line="7" pos:column="28"/></name></name></expr>)<pos:position pos:line="7" pos:column="29"/></condition><then pos:line="7" pos:column="29">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><call><name><name pos:line="8" pos:column="16">ACLIP<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">::<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">match<pos:position pos:line="8" pos:column="28"/></name></name><argument_list pos:line="8" pos:column="28">(<argument><expr><name><name pos:line="8" pos:column="29">checklist<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">-&gt;<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="40">dst_addr<pos:position pos:line="8" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></return></block></then></if>

    <comment type="line" pos:line="10" pos:column="5">// Bug 3243: CVE 2009-0801</comment>
    <comment type="line" pos:line="11" pos:column="5">// Bypass of browser same-origin access control in intercepted communication</comment>
    <comment type="line" pos:line="12" pos:column="5">// To resolve this we will force DIRECT and only to the original client destination.</comment>
    <comment type="line" pos:line="13" pos:column="5">// In which case, we also need this ACL to accurately match the destination</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">Config<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">onoff<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">client_dst_passthru<pos:position pos:line="14" pos:column="41"/></name></name> <operator pos:line="14" pos:column="42">&amp;&amp;<pos:position pos:line="14" pos:column="52"/></operator> <operator pos:line="14" pos:column="45">(<pos:position pos:line="14" pos:column="46"/></operator><name><name pos:line="14" pos:column="46">checklist<pos:position pos:line="14" pos:column="55"/></name><operator pos:line="14" pos:column="55">-&gt;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="57">request<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">-&gt;<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="66">flags<pos:position pos:line="14" pos:column="71"/></name><operator pos:line="14" pos:column="71">.<pos:position pos:line="14" pos:column="72"/></operator><name pos:line="14" pos:column="72">intercepted<pos:position pos:line="14" pos:column="83"/></name></name> <operator pos:line="14" pos:column="84">||<pos:position pos:line="14" pos:column="86"/></operator> <name><name pos:line="14" pos:column="87">checklist<pos:position pos:line="14" pos:column="96"/></name><operator pos:line="14" pos:column="96">-&gt;<pos:position pos:line="14" pos:column="101"/></operator><name pos:line="14" pos:column="98">request<pos:position pos:line="14" pos:column="105"/></name><operator pos:line="14" pos:column="105">-&gt;<pos:position pos:line="14" pos:column="110"/></operator><name pos:line="14" pos:column="107">flags<pos:position pos:line="14" pos:column="112"/></name><operator pos:line="14" pos:column="112">.<pos:position pos:line="14" pos:column="113"/></operator><name pos:line="14" pos:column="113">interceptTproxy<pos:position pos:line="14" pos:column="128"/></name></name><operator pos:line="14" pos:column="128">)<pos:position pos:line="14" pos:column="129"/></operator></expr>)<pos:position pos:line="14" pos:column="130"/></condition><then pos:line="14" pos:column="130"> <block pos:line="14" pos:column="131">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">assert<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><call><name><name pos:line="15" pos:column="16">checklist<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">-&gt;<pos:position pos:line="15" pos:column="30"/></operator><name pos:line="15" pos:column="27">conn<pos:position pos:line="15" pos:column="31"/></name></name><argument_list pos:line="15" pos:column="31">()<pos:position pos:line="15" pos:column="33"/></argument_list></call> <operator pos:line="15" pos:column="34">&amp;&amp;<pos:position pos:line="15" pos:column="44"/></operator> <call><name><name pos:line="15" pos:column="37">checklist<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">-&gt;<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="48">conn<pos:position pos:line="15" pos:column="52"/></name></name><argument_list pos:line="15" pos:column="52">()<pos:position pos:line="15" pos:column="54"/></argument_list></call><operator pos:line="15" pos:column="54">-&gt;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="56">clientConnection<pos:position pos:line="15" pos:column="72"/></name> <operator pos:line="15" pos:column="73">!=<pos:position pos:line="15" pos:column="75"/></operator> <name pos:line="15" pos:column="76">NULL<pos:position pos:line="15" pos:column="80"/></name></expr></argument>)<pos:position pos:line="15" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="82"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><call><name><name pos:line="16" pos:column="16">ACLIP<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">::<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">match<pos:position pos:line="16" pos:column="28"/></name></name><argument_list pos:line="16" pos:column="28">(<argument><expr><call><name><name pos:line="16" pos:column="29">checklist<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">conn<pos:position pos:line="16" pos:column="44"/></name></name><argument_list pos:line="16" pos:column="44">()<pos:position pos:line="16" pos:column="46"/></argument_list></call><operator pos:line="16" pos:column="46">-&gt;<pos:position pos:line="16" pos:column="51"/></operator><name><name pos:line="16" pos:column="48">clientConnection<pos:position pos:line="16" pos:column="64"/></name><operator pos:line="16" pos:column="64">-&gt;<pos:position pos:line="16" pos:column="69"/></operator><name pos:line="16" pos:column="66">local<pos:position pos:line="16" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="73"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name><name pos:line="19" pos:column="9">flags<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">.<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">isSet<pos:position pos:line="19" pos:column="20"/></name></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">ACL_F_NO_LOOKUP<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="38"/></condition><then pos:line="19" pos:column="38"> <block pos:line="19" pos:column="39">{
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">!<pos:position pos:line="20" pos:column="14"/></operator><call><name><name pos:line="20" pos:column="14">checklist<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">request<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">GetHostIsNumeric<pos:position pos:line="20" pos:column="50"/></name></name><argument_list pos:line="20" pos:column="50">()<pos:position pos:line="20" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="53"/></condition><then pos:line="20" pos:column="53"> <block pos:line="20" pos:column="54">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">debugs<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="number" pos:line="21" pos:column="20">28<pos:position pos:line="21" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="24">3<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="27">"aclMatchAcl:  No-lookup DNS ACL '"<pos:position pos:line="21" pos:column="62"/></literal> <operator pos:line="21" pos:column="63">&lt;&lt;<pos:position pos:line="21" pos:column="71"/></operator> <name pos:line="21" pos:column="66">AclMatchedName<pos:position pos:line="21" pos:column="80"/></name> <operator pos:line="21" pos:column="81">&lt;&lt;<pos:position pos:line="21" pos:column="89"/></operator> <literal type="string" pos:line="21" pos:column="84">"' for '"<pos:position pos:line="21" pos:column="93"/></literal> <operator pos:line="21" pos:column="94">&lt;&lt;<pos:position pos:line="21" pos:column="102"/></operator> <call><name><name pos:line="21" pos:column="97">checklist<pos:position pos:line="21" pos:column="106"/></name><operator pos:line="21" pos:column="106">-&gt;<pos:position pos:line="21" pos:column="111"/></operator><name pos:line="21" pos:column="108">request<pos:position pos:line="21" pos:column="115"/></name><operator pos:line="21" pos:column="115">-&gt;<pos:position pos:line="21" pos:column="120"/></operator><name pos:line="21" pos:column="117">GetHost<pos:position pos:line="21" pos:column="124"/></name></name><argument_list pos:line="21" pos:column="124">()<pos:position pos:line="21" pos:column="126"/></argument_list></call> <operator pos:line="21" pos:column="127">&lt;&lt;<pos:position pos:line="21" pos:column="135"/></operator> <literal type="string" pos:line="21" pos:column="130">"'"<pos:position pos:line="21" pos:column="133"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="134"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="135"/></expr_stmt>
            <return pos:line="22" pos:column="13">return <expr><literal type="number" pos:line="22" pos:column="20">0<pos:position pos:line="22" pos:column="21"/></literal></expr>;<pos:position pos:line="22" pos:column="22"/></return>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><call><name><name pos:line="25" pos:column="13">ACLIP<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">::<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">match<pos:position pos:line="25" pos:column="25"/></name></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name><name pos:line="25" pos:column="26">checklist<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">-&gt;<pos:position pos:line="25" pos:column="40"/></operator><name pos:line="25" pos:column="37">request<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">-&gt;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="46">host_addr<pos:position pos:line="25" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="57"/></condition><then pos:line="25" pos:column="57">
            <block type="pseudo"><return pos:line="26" pos:column="13">return <expr><literal type="number" pos:line="26" pos:column="20">1<pos:position pos:line="26" pos:column="21"/></literal></expr>;<pos:position pos:line="26" pos:column="22"/></return></block></then></if>
        <return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="30" pos:column="5">const<pos:position pos:line="30" pos:column="10"/></specifier> <name pos:line="30" pos:column="11">ipcache_addrs<pos:position pos:line="30" pos:column="24"/></name> <modifier pos:line="30" pos:column="25">*<pos:position pos:line="30" pos:column="26"/></modifier></type><name pos:line="30" pos:column="26">ia<pos:position pos:line="30" pos:column="28"/></name> <init pos:line="30" pos:column="29">= <expr><call><name pos:line="30" pos:column="31">ipcache_gethostbyname<pos:position pos:line="30" pos:column="52"/></name><argument_list pos:line="30" pos:column="52">(<argument><expr><call><name><name pos:line="30" pos:column="53">checklist<pos:position pos:line="30" pos:column="62"/></name><operator pos:line="30" pos:column="62">-&gt;<pos:position pos:line="30" pos:column="67"/></operator><name pos:line="30" pos:column="64">request<pos:position pos:line="30" pos:column="71"/></name><operator pos:line="30" pos:column="71">-&gt;<pos:position pos:line="30" pos:column="76"/></operator><name pos:line="30" pos:column="73">GetHost<pos:position pos:line="30" pos:column="80"/></name></name><argument_list pos:line="30" pos:column="80">()<pos:position pos:line="30" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="84">IP_LOOKUP_IF_MISS<pos:position pos:line="30" pos:column="101"/></name></expr></argument>)<pos:position pos:line="30" pos:column="102"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="103"/></decl_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">ia<pos:position pos:line="32" pos:column="11"/></name></expr>)<pos:position pos:line="32" pos:column="12"/></condition><then pos:line="32" pos:column="12"> <block pos:line="32" pos:column="13">{
        <comment type="block" pos:line="33" pos:column="9">/* Entry in cache found */</comment>

        <for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><decl><type><name pos:line="35" pos:column="14">int<pos:position pos:line="35" pos:column="17"/></name></type> <name pos:line="35" pos:column="18">k<pos:position pos:line="35" pos:column="19"/></name> <init pos:line="35" pos:column="20">= <expr><literal type="number" pos:line="35" pos:column="22">0<pos:position pos:line="35" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="35" pos:column="24"/></init> <condition><expr><name pos:line="35" pos:column="25">k<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">&lt;<pos:position pos:line="35" pos:column="31"/></operator> <operator pos:line="35" pos:column="29">(<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="30">int<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">)<pos:position pos:line="35" pos:column="34"/></operator> <name><name pos:line="35" pos:column="35">ia<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">-&gt;<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="39">count<pos:position pos:line="35" pos:column="44"/></name></name></expr>;<pos:position pos:line="35" pos:column="45"/></condition> <incr><expr><operator pos:line="35" pos:column="46">++<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="48">k<pos:position pos:line="35" pos:column="49"/></name></expr></incr>)<pos:position pos:line="35" pos:column="50"/></control> <block pos:line="35" pos:column="51">{
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><call><name><name pos:line="36" pos:column="17">ACLIP<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">::<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="24">match<pos:position pos:line="36" pos:column="29"/></name></name><argument_list pos:line="36" pos:column="29">(<argument><expr><name><name pos:line="36" pos:column="30">ia<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">in_addrs<pos:position pos:line="36" pos:column="42"/></name><index pos:line="36" pos:column="42">[<expr><name pos:line="36" pos:column="43">k<pos:position pos:line="36" pos:column="44"/></name></expr>]<pos:position pos:line="36" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="47"/></condition><then pos:line="36" pos:column="47">
                <block type="pseudo"><return pos:line="37" pos:column="17">return <expr><literal type="number" pos:line="37" pos:column="24">1<pos:position pos:line="37" pos:column="25"/></literal></expr>;<pos:position pos:line="37" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="38" pos:column="10"/></block></for>

        <return pos:line="40" pos:column="9">return <expr><literal type="number" pos:line="40" pos:column="16">0<pos:position pos:line="40" pos:column="17"/></literal></expr>;<pos:position pos:line="40" pos:column="18"/></return>
    }<pos:position pos:line="41" pos:column="6"/></block></then> <elseif pos:line="41" pos:column="7">else <if pos:line="41" pos:column="12">if <condition pos:line="41" pos:column="15">(<expr><operator pos:line="41" pos:column="16">!<pos:position pos:line="41" pos:column="17"/></operator><name><name pos:line="41" pos:column="17">checklist<pos:position pos:line="41" pos:column="26"/></name><operator pos:line="41" pos:column="26">-&gt;<pos:position pos:line="41" pos:column="31"/></operator><name pos:line="41" pos:column="28">request<pos:position pos:line="41" pos:column="35"/></name><operator pos:line="41" pos:column="35">-&gt;<pos:position pos:line="41" pos:column="40"/></operator><name pos:line="41" pos:column="37">flags<pos:position pos:line="41" pos:column="42"/></name><operator pos:line="41" pos:column="42">.<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="43">destinationIpLookedUp<pos:position pos:line="41" pos:column="64"/></name></name></expr>)<pos:position pos:line="41" pos:column="65"/></condition><then pos:line="41" pos:column="65"> <block pos:line="41" pos:column="66">{
        <comment type="block" pos:line="42" pos:column="9">/* No entry in cache, lookup not attempted */</comment>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">debugs<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="number" pos:line="43" pos:column="16">28<pos:position pos:line="43" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="20">3<pos:position pos:line="43" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="23">"aclMatchAcl: Can't yet compare '"<pos:position pos:line="43" pos:column="57"/></literal> <operator pos:line="43" pos:column="58">&lt;&lt;<pos:position pos:line="43" pos:column="66"/></operator> <name pos:line="43" pos:column="61">name<pos:position pos:line="43" pos:column="65"/></name> <operator pos:line="43" pos:column="66">&lt;&lt;<pos:position pos:line="43" pos:column="74"/></operator> <literal type="string" pos:line="43" pos:column="69">"' ACL for '"<pos:position pos:line="43" pos:column="82"/></literal> <operator pos:line="43" pos:column="83">&lt;&lt;<pos:position pos:line="43" pos:column="91"/></operator> <call><name><name pos:line="43" pos:column="86">checklist<pos:position pos:line="43" pos:column="95"/></name><operator pos:line="43" pos:column="95">-&gt;<pos:position pos:line="43" pos:column="100"/></operator><name pos:line="43" pos:column="97">request<pos:position pos:line="43" pos:column="104"/></name><operator pos:line="43" pos:column="104">-&gt;<pos:position pos:line="43" pos:column="109"/></operator><name pos:line="43" pos:column="106">GetHost<pos:position pos:line="43" pos:column="113"/></name></name><argument_list pos:line="43" pos:column="113">()<pos:position pos:line="43" pos:column="115"/></argument_list></call> <operator pos:line="43" pos:column="116">&lt;&lt;<pos:position pos:line="43" pos:column="124"/></operator> <literal type="string" pos:line="43" pos:column="119">"'"<pos:position pos:line="43" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="124"/></expr_stmt>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><call><name><name pos:line="44" pos:column="13">checklist<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">-&gt;<pos:position pos:line="44" pos:column="27"/></operator><name pos:line="44" pos:column="24">goAsync<pos:position pos:line="44" pos:column="31"/></name></name><argument_list pos:line="44" pos:column="31">(<argument><expr><call><name><name pos:line="44" pos:column="32">DestinationIPLookup<pos:position pos:line="44" pos:column="51"/></name><operator pos:line="44" pos:column="51">::<pos:position pos:line="44" pos:column="53"/></operator><name pos:line="44" pos:column="53">Instance<pos:position pos:line="44" pos:column="61"/></name></name><argument_list pos:line="44" pos:column="61">()<pos:position pos:line="44" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="65"/></condition><then pos:line="44" pos:column="65">
            <block type="pseudo"><return pos:line="45" pos:column="13">return <expr><operator pos:line="45" pos:column="20">-<pos:position pos:line="45" pos:column="21"/></operator><literal type="number" pos:line="45" pos:column="21">1<pos:position pos:line="45" pos:column="22"/></literal></expr>;<pos:position pos:line="45" pos:column="23"/></return></block></then></if>
        <comment type="line" pos:line="46" pos:column="9">// else fall through to mismatch, hiding the lookup failure (XXX)</comment>
    }<pos:position pos:line="47" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="49" pos:column="5">return <expr><literal type="number" pos:line="49" pos:column="12">0<pos:position pos:line="49" pos:column="13"/></literal></expr>;<pos:position pos:line="49" pos:column="14"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

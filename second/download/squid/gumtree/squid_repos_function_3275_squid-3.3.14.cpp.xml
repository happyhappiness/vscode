<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3275_squid-3.3.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Comm<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">ConnectionPointer<pos:position pos:line="1" pos:column="24"/></name></name></type>
<name><name pos:line="2" pos:column="1">IdleConnList<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">findUseable<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name><name pos:line="2" pos:column="33">Comm<pos:position pos:line="2" pos:column="37"/></name><operator pos:line="2" pos:column="37">::<pos:position pos:line="2" pos:column="39"/></operator><name pos:line="2" pos:column="39">ConnectionPointer<pos:position pos:line="2" pos:column="56"/></name></name> <modifier pos:line="2" pos:column="57">&amp;<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="58">key<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">size_<pos:position pos:line="4" pos:column="17"/></name></expr></argument>)<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="19"/></expr_stmt>

    <comment type="line" pos:line="6" pos:column="5">// small optimization: do the constant bool tests only once.</comment>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">bool<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">keyCheckAddr<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><operator pos:line="7" pos:column="31">!<pos:position pos:line="7" pos:column="32"/></operator><call><name><name pos:line="7" pos:column="32">key<pos:position pos:line="7" pos:column="35"/></name><operator pos:line="7" pos:column="35">-&gt;<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="37">local<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">.<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">IsAnyAddr<pos:position pos:line="7" pos:column="52"/></name></name><argument_list pos:line="7" pos:column="52">()<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">bool<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">keyCheckPort<pos:position pos:line="8" pos:column="28"/></name> <init pos:line="8" pos:column="29">= <expr><call><name><name pos:line="8" pos:column="31">key<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">local<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">.<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">GetPort<pos:position pos:line="8" pos:column="49"/></name></name><argument_list pos:line="8" pos:column="49">()<pos:position pos:line="8" pos:column="51"/></argument_list></call> <operator pos:line="8" pos:column="52">&gt;<pos:position pos:line="8" pos:column="56"/></operator> <literal type="number" pos:line="8" pos:column="54">0<pos:position pos:line="8" pos:column="55"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="56"/></decl_stmt>

    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><decl><type><name pos:line="10" pos:column="10">int<pos:position pos:line="10" pos:column="13"/></name></type> <name pos:line="10" pos:column="14">i<pos:position pos:line="10" pos:column="15"/></name><init pos:line="10" pos:column="15">=<expr><name pos:line="10" pos:column="16">size_<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-<pos:position pos:line="10" pos:column="22"/></operator><literal type="number" pos:line="10" pos:column="22">1<pos:position pos:line="10" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="24"/></init> <condition><expr><name pos:line="10" pos:column="25">i<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">&gt;=<pos:position pos:line="10" pos:column="31"/></operator><literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr>;<pos:position pos:line="10" pos:column="30"/></condition> <incr><expr><operator pos:line="10" pos:column="31">--<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">i<pos:position pos:line="10" pos:column="34"/></name></expr></incr>)<pos:position pos:line="10" pos:column="35"/></control> <block pos:line="10" pos:column="36">{

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><call><name pos:line="12" pos:column="14">isAvailable<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">i<pos:position pos:line="12" pos:column="27"/></name></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29">
            <block type="pseudo"><continue pos:line="13" pos:column="13">continue;<pos:position pos:line="13" pos:column="22"/></continue></block></then></if>

        <comment type="line" pos:line="15" pos:column="9">// local end port is required, but dont match.</comment>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">keyCheckPort<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">&amp;&amp;<pos:position pos:line="16" pos:column="36"/></operator> <call><name><name pos:line="16" pos:column="29">key<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">-&gt;<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="34">local<pos:position pos:line="16" pos:column="39"/></name><operator pos:line="16" pos:column="39">.<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="40">GetPort<pos:position pos:line="16" pos:column="47"/></name></name><argument_list pos:line="16" pos:column="47">()<pos:position pos:line="16" pos:column="49"/></argument_list></call> <operator pos:line="16" pos:column="50">!=<pos:position pos:line="16" pos:column="52"/></operator> <name><name pos:line="16" pos:column="53">theList_<pos:position pos:line="16" pos:column="61"/></name><index pos:line="16" pos:column="61">[<expr><name pos:line="16" pos:column="62">i<pos:position pos:line="16" pos:column="63"/></name></expr>]<pos:position pos:line="16" pos:column="64"/></index></name><operator pos:line="16" pos:column="64">-&gt;<pos:position pos:line="16" pos:column="69"/></operator><call><name><name pos:line="16" pos:column="66">local<pos:position pos:line="16" pos:column="71"/></name><operator pos:line="16" pos:column="71">.<pos:position pos:line="16" pos:column="72"/></operator><name pos:line="16" pos:column="72">GetPort<pos:position pos:line="16" pos:column="79"/></name></name><argument_list pos:line="16" pos:column="79">()<pos:position pos:line="16" pos:column="81"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="82"/></condition><then pos:line="16" pos:column="82">
            <block type="pseudo"><continue pos:line="17" pos:column="13">continue;<pos:position pos:line="17" pos:column="22"/></continue></block></then></if>

        <comment type="line" pos:line="19" pos:column="9">// local address is required, but does not match.</comment>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name pos:line="20" pos:column="13">keyCheckAddr<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">&amp;&amp;<pos:position pos:line="20" pos:column="36"/></operator> <call><name><name pos:line="20" pos:column="29">key<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">local<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">.<pos:position pos:line="20" pos:column="40"/></operator><name pos:line="20" pos:column="40">matchIPAddr<pos:position pos:line="20" pos:column="51"/></name></name><argument_list pos:line="20" pos:column="51">(<argument><expr><name><name pos:line="20" pos:column="52">theList_<pos:position pos:line="20" pos:column="60"/></name><index pos:line="20" pos:column="60">[<expr><name pos:line="20" pos:column="61">i<pos:position pos:line="20" pos:column="62"/></name></expr>]<pos:position pos:line="20" pos:column="63"/></index></name><operator pos:line="20" pos:column="63">-&gt;<pos:position pos:line="20" pos:column="68"/></operator><name pos:line="20" pos:column="65">local<pos:position pos:line="20" pos:column="70"/></name></expr></argument>)<pos:position pos:line="20" pos:column="71"/></argument_list></call> <operator pos:line="20" pos:column="72">!=<pos:position pos:line="20" pos:column="74"/></operator> <literal type="number" pos:line="20" pos:column="75">0<pos:position pos:line="20" pos:column="76"/></literal></expr>)<pos:position pos:line="20" pos:column="77"/></condition><then pos:line="20" pos:column="77">
            <block type="pseudo"><continue pos:line="21" pos:column="13">continue;<pos:position pos:line="21" pos:column="22"/></continue></block></then></if>

        <comment type="line" pos:line="23" pos:column="9">// our connection timeout handler is scheduled to run already. unsafe for now.</comment>
        <comment type="line" pos:line="24" pos:column="9">// TODO: cancel the pending timeout callback and allow re-use of the conn.</comment>
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">fd_table<pos:position pos:line="25" pos:column="21"/></name><index pos:line="25" pos:column="21">[<expr><name><name pos:line="25" pos:column="22">theList_<pos:position pos:line="25" pos:column="30"/></name><index pos:line="25" pos:column="30">[<expr><name pos:line="25" pos:column="31">i<pos:position pos:line="25" pos:column="32"/></name></expr>]<pos:position pos:line="25" pos:column="33"/></index></name><operator pos:line="25" pos:column="33">-&gt;<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="35">fd<pos:position pos:line="25" pos:column="37"/></name></expr>]<pos:position pos:line="25" pos:column="38"/></index></name><operator pos:line="25" pos:column="38">.<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="39">timeoutHandler<pos:position pos:line="25" pos:column="53"/></name> <operator pos:line="25" pos:column="54">==<pos:position pos:line="25" pos:column="56"/></operator> <name pos:line="25" pos:column="57">NULL<pos:position pos:line="25" pos:column="61"/></name></expr>)<pos:position pos:line="25" pos:column="62"/></condition><then pos:line="25" pos:column="62">
            <block type="pseudo"><continue pos:line="26" pos:column="13">continue;<pos:position pos:line="26" pos:column="22"/></continue></block></then></if>

        <comment type="line" pos:line="28" pos:column="9">// finally, a match. pop and return it.</comment>
        <decl_stmt><decl><type><name><name pos:line="29" pos:column="9">Comm<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">::<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">ConnectionPointer<pos:position pos:line="29" pos:column="32"/></name></name></type> <name pos:line="29" pos:column="33">result<pos:position pos:line="29" pos:column="39"/></name> <init pos:line="29" pos:column="40">= <expr><name><name pos:line="29" pos:column="42">theList_<pos:position pos:line="29" pos:column="50"/></name><index pos:line="29" pos:column="50">[<expr><name pos:line="29" pos:column="51">i<pos:position pos:line="29" pos:column="52"/></name></expr>]<pos:position pos:line="29" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="29" pos:column="54"/></decl_stmt>
        <comment type="block" pos:line="30" pos:column="9">/* may delete this */</comment>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">removeAt<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">i<pos:position pos:line="31" pos:column="19"/></name></expr></argument>)<pos:position pos:line="31" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">clearHandlers<pos:position pos:line="32" pos:column="22"/></name><argument_list pos:line="32" pos:column="22">(<argument><expr><name pos:line="32" pos:column="23">result<pos:position pos:line="32" pos:column="29"/></name></expr></argument>)<pos:position pos:line="32" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="31"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><name pos:line="33" pos:column="16">result<pos:position pos:line="33" pos:column="22"/></name></expr>;<pos:position pos:line="33" pos:column="23"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></for>

    <return pos:line="36" pos:column="5">return <expr><call><name><name pos:line="36" pos:column="12">Comm<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">::<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">ConnectionPointer<pos:position pos:line="36" pos:column="35"/></name></name><argument_list pos:line="36" pos:column="35">()<pos:position pos:line="36" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="38"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

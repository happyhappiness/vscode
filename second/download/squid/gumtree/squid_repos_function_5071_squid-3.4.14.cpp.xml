<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5071_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ident<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">WriteFeedback<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name><name pos:line="2" pos:column="28">Comm<pos:position pos:line="2" pos:column="32"/></name><operator pos:line="2" pos:column="32">::<pos:position pos:line="2" pos:column="34"/></operator><name pos:line="2" pos:column="34">ConnectionPointer<pos:position pos:line="2" pos:column="51"/></name></name> <modifier pos:line="2" pos:column="52">&amp;<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="53">conn<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">char<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">buf<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="70">size_t<pos:position pos:line="2" pos:column="76"/></name></type> <name pos:line="2" pos:column="77">len<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="82">comm_err_t<pos:position pos:line="2" pos:column="92"/></name></type> <name pos:line="2" pos:column="93">flag<pos:position pos:line="2" pos:column="97"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="99">int<pos:position pos:line="2" pos:column="102"/></name></type> <name pos:line="2" pos:column="103">xerrno<pos:position pos:line="2" pos:column="109"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="111">void<pos:position pos:line="2" pos:column="115"/></name> <modifier pos:line="2" pos:column="116">*<pos:position pos:line="2" pos:column="117"/></modifier></type><name pos:line="2" pos:column="117">data<pos:position pos:line="2" pos:column="121"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="122"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">30<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="27">conn<pos:position pos:line="4" pos:column="31"/></name> <operator pos:line="4" pos:column="32">&lt;&lt;<pos:position pos:line="4" pos:column="40"/></operator> <literal type="string" pos:line="4" pos:column="35">": Wrote IDENT request "<pos:position pos:line="4" pos:column="59"/></literal> <operator pos:line="4" pos:column="60">&lt;&lt;<pos:position pos:line="4" pos:column="68"/></operator> <name pos:line="4" pos:column="63">len<pos:position pos:line="4" pos:column="66"/></name> <operator pos:line="4" pos:column="67">&lt;&lt;<pos:position pos:line="4" pos:column="75"/></operator> <literal type="string" pos:line="4" pos:column="70">" bytes."<pos:position pos:line="4" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="81"/></expr_stmt>

    <comment type="line" pos:line="6" pos:column="5">// TODO handle write errors better. retry or abort?</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">flag<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">!=<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">COMM_OK<pos:position pos:line="7" pos:column="24"/></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25"> <block pos:line="7" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">30<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">2<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="23">HERE<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">&lt;&lt;<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="31">conn<pos:position pos:line="8" pos:column="35"/></name> <operator pos:line="8" pos:column="36">&lt;&lt;<pos:position pos:line="8" pos:column="44"/></operator> <literal type="string" pos:line="8" pos:column="39">" err-flags="<pos:position pos:line="8" pos:column="52"/></literal> <operator pos:line="8" pos:column="53">&lt;&lt;<pos:position pos:line="8" pos:column="61"/></operator> <name pos:line="8" pos:column="56">flag<pos:position pos:line="8" pos:column="60"/></name> <operator pos:line="8" pos:column="61">&lt;&lt;<pos:position pos:line="8" pos:column="69"/></operator> <literal type="string" pos:line="8" pos:column="64">" IDENT write error: "<pos:position pos:line="8" pos:column="86"/></literal> <operator pos:line="8" pos:column="87">&lt;&lt;<pos:position pos:line="8" pos:column="95"/></operator> <call><name pos:line="8" pos:column="90">xstrerr<pos:position pos:line="8" pos:column="97"/></name><argument_list pos:line="8" pos:column="97">(<argument><expr><name pos:line="8" pos:column="98">xerrno<pos:position pos:line="8" pos:column="104"/></name></expr></argument>)<pos:position pos:line="8" pos:column="105"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="107"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">IdentStateData<pos:position pos:line="9" pos:column="23"/></name> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">state<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><operator pos:line="9" pos:column="33">(<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">IdentStateData<pos:position pos:line="9" pos:column="48"/></name> <operator pos:line="9" pos:column="49">*<pos:position pos:line="9" pos:column="50"/></operator><operator pos:line="9" pos:column="50">)<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="51">data<pos:position pos:line="9" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="56"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">state<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">deleteThis<pos:position pos:line="10" pos:column="26"/></name></name><argument_list pos:line="10" pos:column="26">(<argument><expr><literal type="string" pos:line="10" pos:column="27">"write error"<pos:position pos:line="10" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

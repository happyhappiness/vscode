<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3488_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">clientParseRequest<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">ConnStateData<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">conn<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">bool<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">&amp;<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="48">do_next_read<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpRequestMethod<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">method<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ClientSocketContext<pos:position pos:line="5" pos:column="24"/></name> <modifier pos:line="5" pos:column="25">*<pos:position pos:line="5" pos:column="26"/></modifier></type><name pos:line="5" pos:column="26">context<pos:position pos:line="5" pos:column="33"/></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">bool<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">parsed_req<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><literal type="boolean" pos:line="6" pos:column="23">false<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">HttpVersion<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">http_ver<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">HttpParser<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">hp<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">33<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">5<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"clientParseRequest: FD "<pos:position pos:line="10" pos:column="44"/></literal> <operator pos:line="10" pos:column="45">&lt;&lt;<pos:position pos:line="10" pos:column="53"/></operator> <name><name pos:line="10" pos:column="48">conn<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">fd<pos:position pos:line="10" pos:column="56"/></name></name> <operator pos:line="10" pos:column="57">&lt;&lt;<pos:position pos:line="10" pos:column="65"/></operator> <literal type="string" pos:line="10" pos:column="60">": attempting to parse"<pos:position pos:line="10" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="85"/></expr_stmt>

    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><name><name pos:line="12" pos:column="12">conn<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">in<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">.<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">notYetUsed<pos:position pos:line="12" pos:column="31"/></name></name> <operator pos:line="12" pos:column="32">&gt;<pos:position pos:line="12" pos:column="36"/></operator> <literal type="number" pos:line="12" pos:column="34">0<pos:position pos:line="12" pos:column="35"/></literal> <operator pos:line="12" pos:column="36">&amp;&amp;<pos:position pos:line="12" pos:column="46"/></operator> <call><name><name pos:line="12" pos:column="39">conn<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">-&gt;<pos:position pos:line="12" pos:column="48"/></operator><name pos:line="12" pos:column="45">bodySizeLeft<pos:position pos:line="12" pos:column="57"/></name></name><argument_list pos:line="12" pos:column="57">()<pos:position pos:line="12" pos:column="59"/></argument_list></call> <operator pos:line="12" pos:column="60">==<pos:position pos:line="12" pos:column="62"/></operator> <literal type="number" pos:line="12" pos:column="63">0<pos:position pos:line="12" pos:column="64"/></literal></expr>)<pos:position pos:line="12" pos:column="65"/></condition> <block pos:line="12" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">connStripBufferWhitespace<pos:position pos:line="13" pos:column="34"/></name> <argument_list pos:line="13" pos:column="35">(<argument><expr><name pos:line="13" pos:column="36">conn<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>

        <comment type="block" pos:line="15" pos:column="9">/* Don't try to parse if the buffer is empty */</comment>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name><name pos:line="17" pos:column="13">conn<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">in<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">.<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">notYetUsed<pos:position pos:line="17" pos:column="32"/></name></name> <operator pos:line="17" pos:column="33">==<pos:position pos:line="17" pos:column="35"/></operator> <literal type="number" pos:line="17" pos:column="36">0<pos:position pos:line="17" pos:column="37"/></literal></expr>)<pos:position pos:line="17" pos:column="38"/></condition><then pos:line="17" pos:column="38">
            <block type="pseudo"><break pos:line="18" pos:column="13">break;<pos:position pos:line="18" pos:column="19"/></break></block></then></if>

        <comment type="block" pos:line="20" pos:column="9">/* Limit the number of concurrent requests to 2 */</comment>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><call><name pos:line="22" pos:column="14">connOkToAddRequest<pos:position pos:line="22" pos:column="32"/></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name pos:line="22" pos:column="33">conn<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="39"/></condition><then pos:line="22" pos:column="39"> <block pos:line="22" pos:column="40">{
            <break pos:line="23" pos:column="13">break;<pos:position pos:line="23" pos:column="19"/></break>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="26" pos:column="9">/* Should not be needed anymore */</comment>
        <comment type="block" pos:line="27" pos:column="9">/* Terminate the string */</comment>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">conn<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">in<pos:position pos:line="28" pos:column="17"/></name><operator pos:line="28" pos:column="17">.<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="18">buf<pos:position pos:line="28" pos:column="21"/></name><index pos:line="28" pos:column="21">[<expr><name><name pos:line="28" pos:column="22">conn<pos:position pos:line="28" pos:column="26"/></name><operator pos:line="28" pos:column="26">-&gt;<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="28">in<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">.<pos:position pos:line="28" pos:column="31"/></operator><name pos:line="28" pos:column="31">notYetUsed<pos:position pos:line="28" pos:column="41"/></name></name></expr>]<pos:position pos:line="28" pos:column="42"/></index></name> <operator pos:line="28" pos:column="43">=<pos:position pos:line="28" pos:column="44"/></operator> <literal type="char" pos:line="28" pos:column="45">'\0'<pos:position pos:line="28" pos:column="49"/></literal></expr>;<pos:position pos:line="28" pos:column="50"/></expr_stmt>

        <comment type="block" pos:line="30" pos:column="9">/* Begin the parsing */</comment>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">HttpParserInit<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><operator pos:line="31" pos:column="24">&amp;<pos:position pos:line="31" pos:column="29"/></operator><name pos:line="31" pos:column="25">hp<pos:position pos:line="31" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="29">conn<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">-&gt;<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="35">in<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">.<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">buf<pos:position pos:line="31" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="43">conn<pos:position pos:line="31" pos:column="47"/></name><operator pos:line="31" pos:column="47">-&gt;<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="49">in<pos:position pos:line="31" pos:column="51"/></name><operator pos:line="31" pos:column="51">.<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="52">notYetUsed<pos:position pos:line="31" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="64"/></expr_stmt>

        <comment type="block" pos:line="33" pos:column="9">/* Process request */</comment>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">PROF_start<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><name pos:line="34" pos:column="20">parseHttpRequest<pos:position pos:line="34" pos:column="36"/></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>

        <expr_stmt><expr><name pos:line="36" pos:column="9">context<pos:position pos:line="36" pos:column="16"/></name> <operator pos:line="36" pos:column="17">=<pos:position pos:line="36" pos:column="18"/></operator> <call><name pos:line="36" pos:column="19">parseHttpRequest<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><name pos:line="36" pos:column="36">conn<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="42">&amp;<pos:position pos:line="36" pos:column="47"/></operator><name pos:line="36" pos:column="43">hp<pos:position pos:line="36" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="47">&amp;<pos:position pos:line="36" pos:column="52"/></operator><name pos:line="36" pos:column="48">method<pos:position pos:line="36" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="56">&amp;<pos:position pos:line="36" pos:column="61"/></operator><name pos:line="36" pos:column="57">http_ver<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="38" pos:column="9">PROF_stop<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><name pos:line="38" pos:column="19">parseHttpRequest<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>

        <comment type="block" pos:line="40" pos:column="9">/* partial or incomplete request */</comment>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">!<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">context<pos:position pos:line="41" pos:column="21"/></name></expr>)<pos:position pos:line="41" pos:column="22"/></condition><then pos:line="41" pos:column="22"> <block pos:line="41" pos:column="23">{

            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><operator pos:line="43" pos:column="17">!<pos:position pos:line="43" pos:column="18"/></operator><call><name pos:line="43" pos:column="18">connKeepReadingIncompleteRequest<pos:position pos:line="43" pos:column="50"/></name><argument_list pos:line="43" pos:column="50">(<argument><expr><name pos:line="43" pos:column="51">conn<pos:position pos:line="43" pos:column="55"/></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="57"/></condition><then pos:line="43" pos:column="57">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="44" pos:column="17">connCancelIncompleteRequests<pos:position pos:line="44" pos:column="45"/></name><argument_list pos:line="44" pos:column="45">(<argument><expr><name pos:line="44" pos:column="46">conn<pos:position pos:line="44" pos:column="50"/></name></expr></argument>)<pos:position pos:line="44" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="52"/></expr_stmt></block></then></if>

            <break pos:line="46" pos:column="13">break;<pos:position pos:line="46" pos:column="19"/></break>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="49" pos:column="9">/* status -1 or 1 */</comment>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">context<pos:position pos:line="50" pos:column="20"/></name></expr>)<pos:position pos:line="50" pos:column="21"/></condition><then pos:line="50" pos:column="21"> <block pos:line="50" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">debugs<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><literal type="number" pos:line="51" pos:column="20">33<pos:position pos:line="51" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="24">5<pos:position pos:line="51" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="27">"clientParseRequest: FD "<pos:position pos:line="51" pos:column="52"/></literal> <operator pos:line="51" pos:column="53">&lt;&lt;<pos:position pos:line="51" pos:column="61"/></operator> <name><name pos:line="51" pos:column="56">conn<pos:position pos:line="51" pos:column="60"/></name><operator pos:line="51" pos:column="60">-&gt;<pos:position pos:line="51" pos:column="65"/></operator><name pos:line="51" pos:column="62">fd<pos:position pos:line="51" pos:column="64"/></name></name> <operator pos:line="51" pos:column="65">&lt;&lt;<pos:position pos:line="51" pos:column="73"/></operator> <literal type="string" pos:line="51" pos:column="68">": parsed a request"<pos:position pos:line="51" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="90"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="52" pos:column="13">commSetTimeout<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name><name pos:line="52" pos:column="28">conn<pos:position pos:line="52" pos:column="32"/></name><operator pos:line="52" pos:column="32">-&gt;<pos:position pos:line="52" pos:column="37"/></operator><name pos:line="52" pos:column="34">fd<pos:position pos:line="52" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="52" pos:column="38">Config<pos:position pos:line="52" pos:column="44"/></name><operator pos:line="52" pos:column="44">.<pos:position pos:line="52" pos:column="45"/></operator><name pos:line="52" pos:column="45">Timeout<pos:position pos:line="52" pos:column="52"/></name><operator pos:line="52" pos:column="52">.<pos:position pos:line="52" pos:column="53"/></operator><name pos:line="52" pos:column="53">lifetime<pos:position pos:line="52" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="63">clientLifetimeTimeout<pos:position pos:line="52" pos:column="84"/></name></expr></argument>,
                           <argument><expr><name><name pos:line="53" pos:column="28">context<pos:position pos:line="53" pos:column="35"/></name><operator pos:line="53" pos:column="35">-&gt;<pos:position pos:line="53" pos:column="40"/></operator><name pos:line="53" pos:column="37">http<pos:position pos:line="53" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="43"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="55" pos:column="13">clientProcessRequest<pos:position pos:line="55" pos:column="33"/></name><argument_list pos:line="55" pos:column="33">(<argument><expr><name pos:line="55" pos:column="34">conn<pos:position pos:line="55" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="40">&amp;<pos:position pos:line="55" pos:column="45"/></operator><name pos:line="55" pos:column="41">hp<pos:position pos:line="55" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="45">context<pos:position pos:line="55" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="54">method<pos:position pos:line="55" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="62">http_ver<pos:position pos:line="55" pos:column="70"/></name></expr></argument>)<pos:position pos:line="55" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="72"/></expr_stmt>

            <expr_stmt><expr><name pos:line="57" pos:column="13">parsed_req<pos:position pos:line="57" pos:column="23"/></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <literal type="boolean" pos:line="57" pos:column="26">true<pos:position pos:line="57" pos:column="30"/></literal></expr>;<pos:position pos:line="57" pos:column="31"/></expr_stmt>

            <if pos:line="59" pos:column="13">if <condition pos:line="59" pos:column="16">(<expr><call><name><name pos:line="59" pos:column="17">context<pos:position pos:line="59" pos:column="24"/></name><operator pos:line="59" pos:column="24">-&gt;<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="26">mayUseConnection<pos:position pos:line="59" pos:column="42"/></name></name><argument_list pos:line="59" pos:column="42">()<pos:position pos:line="59" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="45"/></condition><then pos:line="59" pos:column="45"> <block pos:line="59" pos:column="46">{
                <expr_stmt><expr><call><name pos:line="60" pos:column="17">debugs<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><literal type="number" pos:line="60" pos:column="24">33<pos:position pos:line="60" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="28">3<pos:position pos:line="60" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="31">"clientParseRequest: Not reading, as this request may need the connection"<pos:position pos:line="60" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="107"/></expr_stmt>
                <expr_stmt><expr><name pos:line="61" pos:column="17">do_next_read<pos:position pos:line="61" pos:column="29"/></name> <operator pos:line="61" pos:column="30">=<pos:position pos:line="61" pos:column="31"/></operator> <literal type="number" pos:line="61" pos:column="32">0<pos:position pos:line="61" pos:column="33"/></literal></expr>;<pos:position pos:line="61" pos:column="34"/></expr_stmt>
                <break pos:line="62" pos:column="17">break;<pos:position pos:line="62" pos:column="23"/></break>
            }<pos:position pos:line="63" pos:column="14"/></block></then></if>

            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><operator pos:line="65" pos:column="17">!<pos:position pos:line="65" pos:column="18"/></operator><name><name pos:line="65" pos:column="18">conn<pos:position pos:line="65" pos:column="22"/></name><operator pos:line="65" pos:column="22">-&gt;<pos:position pos:line="65" pos:column="27"/></operator><name pos:line="65" pos:column="24">flags<pos:position pos:line="65" pos:column="29"/></name><operator pos:line="65" pos:column="29">.<pos:position pos:line="65" pos:column="30"/></operator><name pos:line="65" pos:column="30">readMoreRequests<pos:position pos:line="65" pos:column="46"/></name></name></expr>)<pos:position pos:line="65" pos:column="47"/></condition><then pos:line="65" pos:column="47"> <block pos:line="65" pos:column="48">{
                <expr_stmt><expr><name><name pos:line="66" pos:column="17">conn<pos:position pos:line="66" pos:column="21"/></name><operator pos:line="66" pos:column="21">-&gt;<pos:position pos:line="66" pos:column="26"/></operator><name pos:line="66" pos:column="23">flags<pos:position pos:line="66" pos:column="28"/></name><operator pos:line="66" pos:column="28">.<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="29">readMoreRequests<pos:position pos:line="66" pos:column="45"/></name></name> <operator pos:line="66" pos:column="46">=<pos:position pos:line="66" pos:column="47"/></operator> <literal type="boolean" pos:line="66" pos:column="48">true<pos:position pos:line="66" pos:column="52"/></literal></expr>;<pos:position pos:line="66" pos:column="53"/></expr_stmt>
                <break pos:line="67" pos:column="17">break;<pos:position pos:line="67" pos:column="23"/></break>
            }<pos:position pos:line="68" pos:column="14"/></block></then></if>

            <continue pos:line="70" pos:column="13">continue;<pos:position pos:line="70" pos:column="22"/></continue>		<comment type="block" pos:line="70" pos:column="33">/* while offset &gt; 0 &amp;&amp; conn-&gt;bodySizeLeft() == 0 */</comment>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
    }<pos:position pos:line="72" pos:column="6"/></block></while>				<comment type="block" pos:line="72" pos:column="33">/* while offset &gt; 0 &amp;&amp; conn-&gt;bodySizeLeft() == 0 */</comment>

    <comment type="block" pos:line="74" pos:column="5">/* XXX where to 'finish' the parsing pass? */</comment>

    <return pos:line="76" pos:column="5">return <expr><name pos:line="76" pos:column="12">parsed_req<pos:position pos:line="76" pos:column="22"/></name></expr>;<pos:position pos:line="76" pos:column="23"/></return>
}<pos:position pos:line="77" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2594_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FtpChannel<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">opened<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name><name pos:line="2" pos:column="26">Comm<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">ConnectionPointer<pos:position pos:line="2" pos:column="49"/></name></name> <modifier pos:line="2" pos:column="50">&amp;<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="51">newConn<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="60">const<pos:position pos:line="2" pos:column="65"/></specifier> <name><name pos:line="2" pos:column="66">AsyncCall<pos:position pos:line="2" pos:column="75"/></name><operator pos:line="2" pos:column="75">::<pos:position pos:line="2" pos:column="77"/></operator><name pos:line="2" pos:column="77">Pointer<pos:position pos:line="2" pos:column="84"/></name></name> <modifier pos:line="2" pos:column="85">&amp;<pos:position pos:line="2" pos:column="90"/></modifier></type><name pos:line="2" pos:column="86">aCloser<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="94"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><call><name><name pos:line="4" pos:column="13">Comm<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">::<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">IsConnOpen<pos:position pos:line="4" pos:column="29"/></name></name><argument_list pos:line="4" pos:column="29">(<argument><expr><name pos:line="4" pos:column="30">conn<pos:position pos:line="4" pos:column="34"/></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">closer<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">==<pos:position pos:line="5" pos:column="21"/></operator> <name pos:line="5" pos:column="22">NULL<pos:position pos:line="5" pos:column="26"/></name></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><call><name><name pos:line="7" pos:column="12">Comm<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">::<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">IsConnOpen<pos:position pos:line="7" pos:column="28"/></name></name><argument_list pos:line="7" pos:column="28">(<argument><expr><name pos:line="7" pos:column="29">newConn<pos:position pos:line="7" pos:column="36"/></name></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">aCloser<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">!=<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">NULL<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">conn<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <name pos:line="10" pos:column="12">newConn<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">closer<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">aCloser<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">comm_add_close_handler<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name><name pos:line="12" pos:column="28">conn<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">-&gt;<pos:position pos:line="12" pos:column="37"/></operator><name pos:line="12" pos:column="34">fd<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="38">closer<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

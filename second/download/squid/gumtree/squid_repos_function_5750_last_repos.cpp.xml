<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5750_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Auth<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Scheme<pos:position pos:line="1" pos:column="13"/></name><operator pos:line="1" pos:column="13">::<pos:position pos:line="1" pos:column="15"/></operator><name pos:line="1" pos:column="15">Pointer<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Negotiate<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">Scheme<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">GetInstance<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">()<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">_instance<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">==<pos:position pos:line="4" pos:column="21"/></operator> <name pos:line="4" pos:column="22">NULL<pos:position pos:line="4" pos:column="26"/></name></expr>)<pos:position pos:line="4" pos:column="27"/></condition><then pos:line="4" pos:column="27"> <block pos:line="4" pos:column="28">{
        <expr_stmt><expr><name pos:line="5" pos:column="9">_instance<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">=<pos:position pos:line="5" pos:column="20"/></operator> <operator pos:line="5" pos:column="21">new<pos:position pos:line="5" pos:column="24"/></operator> <call><name><name pos:line="5" pos:column="25">Auth<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">::<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">Negotiate<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">::<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">Scheme<pos:position pos:line="5" pos:column="48"/></name></name><argument_list pos:line="5" pos:column="48">()<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">AddScheme<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name pos:line="6" pos:column="19">_instance<pos:position pos:line="6" pos:column="28"/></name></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">_instance<pos:position pos:line="8" pos:column="21"/></name></expr>;<pos:position pos:line="8" pos:column="22"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3548_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">ConnStateData<pos:position pos:line="1" pos:column="19"/></name><operator pos:line="1" pos:column="19">::<pos:position pos:line="1" pos:column="21"/></operator><name pos:line="1" pos:column="21">serveDelayedError<pos:position pos:line="1" pos:column="38"/></name></name><parameter_list pos:line="1" pos:column="38">(<parameter><decl><type><name pos:line="1" pos:column="39">ClientSocketContext<pos:position pos:line="1" pos:column="58"/></name> <modifier pos:line="1" pos:column="59">*<pos:position pos:line="1" pos:column="60"/></modifier></type><name pos:line="1" pos:column="60">context<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">ClientHttpRequest<pos:position pos:line="3" pos:column="22"/></name> <modifier pos:line="3" pos:column="23">*<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="24">http<pos:position pos:line="3" pos:column="28"/></name> <init pos:line="3" pos:column="29">= <expr><name><name pos:line="3" pos:column="31">context<pos:position pos:line="3" pos:column="38"/></name><operator pos:line="3" pos:column="38">-&gt;<pos:position pos:line="3" pos:column="43"/></operator><name pos:line="3" pos:column="40">http<pos:position pos:line="3" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="3" pos:column="45"/></decl_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">sslServerBump<pos:position pos:line="5" pos:column="23"/></name></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">false<pos:position pos:line="6" pos:column="21"/></literal></expr>;<pos:position pos:line="6" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name><name pos:line="8" pos:column="12">sslServerBump<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">entry<pos:position pos:line="8" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt>
    <comment type="line" pos:line="9" pos:column="5">// Did we create an error entry while processing CONNECT?</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name><name pos:line="10" pos:column="10">sslServerBump<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">-&gt;<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="25">entry<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">-&gt;<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="32">isEmpty<pos:position pos:line="10" pos:column="39"/></name></name><argument_list pos:line="10" pos:column="39">()<pos:position pos:line="10" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42"> <block pos:line="10" pos:column="43">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">quitAfterError<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name><name pos:line="11" pos:column="24">http<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">request<pos:position pos:line="11" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>

        <comment type="line" pos:line="13" pos:column="9">// Get the saved error entry and send it to the client by replacing the</comment>
        <comment type="line" pos:line="14" pos:column="9">// ClientHttpRequest store entry with it.</comment>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">clientStreamNode<pos:position pos:line="15" pos:column="25"/></name> <modifier pos:line="15" pos:column="26">*<pos:position pos:line="15" pos:column="27"/></modifier></type><name pos:line="15" pos:column="27">node<pos:position pos:line="15" pos:column="31"/></name> <init pos:line="15" pos:column="32">= <expr><call><name><name pos:line="15" pos:column="34">context<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">getClientReplyContext<pos:position pos:line="15" pos:column="64"/></name></name><argument_list pos:line="15" pos:column="64">()<pos:position pos:line="15" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="67"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">clientReplyContext<pos:position pos:line="16" pos:column="27"/></name> <modifier pos:line="16" pos:column="28">*<pos:position pos:line="16" pos:column="29"/></modifier></type><name pos:line="16" pos:column="29">repContext<pos:position pos:line="16" pos:column="39"/></name> <init pos:line="16" pos:column="40">= <expr><cast type="dynamic" pos:line="16" pos:column="42">dynamic_cast<argument_list type="generic" pos:line="16" pos:column="54">&lt;<argument><expr><name pos:line="16" pos:column="55">clientReplyContext<pos:position pos:line="16" pos:column="73"/></name> <operator pos:line="16" pos:column="74">*<pos:position pos:line="16" pos:column="75"/></operator></expr></argument>&gt;<pos:position pos:line="16" pos:column="79"/></argument_list><argument_list pos:line="16" pos:column="76">(<argument><expr><call><name><name pos:line="16" pos:column="77">node<pos:position pos:line="16" pos:column="81"/></name><operator pos:line="16" pos:column="81">-&gt;<pos:position pos:line="16" pos:column="86"/></operator><name pos:line="16" pos:column="83">data<pos:position pos:line="16" pos:column="87"/></name><operator pos:line="16" pos:column="87">.<pos:position pos:line="16" pos:column="88"/></operator><name pos:line="16" pos:column="88">getRaw<pos:position pos:line="16" pos:column="94"/></name></name><argument_list pos:line="16" pos:column="94">()<pos:position pos:line="16" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="97"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="16" pos:column="98"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">assert<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">repContext<pos:position pos:line="17" pos:column="26"/></name></expr></argument>)<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">33<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">5<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"Responding with delated error for "<pos:position pos:line="18" pos:column="59"/></literal> <operator pos:line="18" pos:column="60">&lt;&lt;<pos:position pos:line="18" pos:column="68"/></operator> <name><name pos:line="18" pos:column="63">http<pos:position pos:line="18" pos:column="67"/></name><operator pos:line="18" pos:column="67">-&gt;<pos:position pos:line="18" pos:column="72"/></operator><name pos:line="18" pos:column="69">uri<pos:position pos:line="18" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">repContext<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">setReplyToStoreEntry<pos:position pos:line="19" pos:column="41"/></name></name><argument_list pos:line="19" pos:column="41">(<argument><expr><name><name pos:line="19" pos:column="42">sslServerBump<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">-&gt;<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="57">entry<pos:position pos:line="19" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="64">"delayed SslBump error"<pos:position pos:line="19" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="89"/></expr_stmt>

        <comment type="line" pos:line="21" pos:column="9">// save the original request for logging purposes</comment>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><name><name pos:line="22" pos:column="14">context<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">http<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">al<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">request<pos:position pos:line="22" pos:column="40"/></name></name></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="13">context<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">http<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">al<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">-&gt;<pos:position pos:line="23" pos:column="35"/></operator><name pos:line="23" pos:column="32">request<pos:position pos:line="23" pos:column="39"/></name></name> <operator pos:line="23" pos:column="40">=<pos:position pos:line="23" pos:column="41"/></operator> <call><name pos:line="23" pos:column="42">HTTPMSGLOCK<pos:position pos:line="23" pos:column="53"/></name><argument_list pos:line="23" pos:column="53">(<argument><expr><name><name pos:line="23" pos:column="54">http<pos:position pos:line="23" pos:column="58"/></name><operator pos:line="23" pos:column="58">-&gt;<pos:position pos:line="23" pos:column="63"/></operator><name pos:line="23" pos:column="60">request<pos:position pos:line="23" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="69"/></expr_stmt></block></then></if>

        <comment type="line" pos:line="25" pos:column="9">// Get error details from the fake certificate-peeking request.</comment>
        <expr_stmt><expr><call><name><name pos:line="26" pos:column="9">http<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">-&gt;<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="15">request<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">detailError<pos:position pos:line="26" pos:column="35"/></name></name><argument_list pos:line="26" pos:column="35">(<argument><expr><name><name pos:line="26" pos:column="36">sslServerBump<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">-&gt;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="51">request<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">-&gt;<pos:position pos:line="26" pos:column="63"/></operator><name pos:line="26" pos:column="60">errType<pos:position pos:line="26" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="69">sslServerBump<pos:position pos:line="26" pos:column="82"/></name><operator pos:line="26" pos:column="82">-&gt;<pos:position pos:line="26" pos:column="87"/></operator><name pos:line="26" pos:column="84">request<pos:position pos:line="26" pos:column="91"/></name><operator pos:line="26" pos:column="91">-&gt;<pos:position pos:line="26" pos:column="96"/></operator><name pos:line="26" pos:column="93">errDetail<pos:position pos:line="26" pos:column="102"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="104"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="27" pos:column="9">context<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">pullData<pos:position pos:line="27" pos:column="26"/></name></name><argument_list pos:line="27" pos:column="26">()<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><literal type="boolean" pos:line="28" pos:column="16">true<pos:position pos:line="28" pos:column="20"/></literal></expr>;<pos:position pos:line="28" pos:column="21"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="31" pos:column="5">// In bump-server-first mode, we have not necessarily seen the intended</comment>
    <comment type="line" pos:line="32" pos:column="5">// server name at certificate-peeking time. Check for domain mismatch now,</comment>
    <comment type="line" pos:line="33" pos:column="5">// when we can extract the intended name from the bumped HTTP request.</comment>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><call><name><name pos:line="34" pos:column="9">sslServerBump<pos:position pos:line="34" pos:column="22"/></name><operator pos:line="34" pos:column="22">-&gt;<pos:position pos:line="34" pos:column="27"/></operator><name pos:line="34" pos:column="24">serverCert<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">.<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">get<pos:position pos:line="34" pos:column="38"/></name></name><argument_list pos:line="34" pos:column="38">()<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="41"/></condition><then pos:line="34" pos:column="41"> <block pos:line="34" pos:column="42">{
        <decl_stmt><decl><type><name pos:line="35" pos:column="9">HttpRequest<pos:position pos:line="35" pos:column="20"/></name> <modifier pos:line="35" pos:column="21">*<pos:position pos:line="35" pos:column="22"/></modifier></type><name pos:line="35" pos:column="22">request<pos:position pos:line="35" pos:column="29"/></name> <init pos:line="35" pos:column="30">= <expr><name><name pos:line="35" pos:column="32">http<pos:position pos:line="35" pos:column="36"/></name><operator pos:line="35" pos:column="36">-&gt;<pos:position pos:line="35" pos:column="41"/></operator><name pos:line="35" pos:column="38">request<pos:position pos:line="35" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="35" pos:column="46"/></decl_stmt>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><call><name><name pos:line="36" pos:column="14">Ssl<pos:position pos:line="36" pos:column="17"/></name><operator pos:line="36" pos:column="17">::<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">checkX509ServerValidity<pos:position pos:line="36" pos:column="42"/></name></name><argument_list pos:line="36" pos:column="42">(<argument><expr><call><name><name pos:line="36" pos:column="43">sslServerBump<pos:position pos:line="36" pos:column="56"/></name><operator pos:line="36" pos:column="56">-&gt;<pos:position pos:line="36" pos:column="61"/></operator><name pos:line="36" pos:column="58">serverCert<pos:position pos:line="36" pos:column="68"/></name><operator pos:line="36" pos:column="68">.<pos:position pos:line="36" pos:column="69"/></operator><name pos:line="36" pos:column="69">get<pos:position pos:line="36" pos:column="72"/></name></name><argument_list pos:line="36" pos:column="72">()<pos:position pos:line="36" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="36" pos:column="76">request<pos:position pos:line="36" pos:column="83"/></name><operator pos:line="36" pos:column="83">-&gt;<pos:position pos:line="36" pos:column="88"/></operator><name pos:line="36" pos:column="85">GetHost<pos:position pos:line="36" pos:column="92"/></name></name><argument_list pos:line="36" pos:column="92">()<pos:position pos:line="36" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="95"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="96"/></condition><then pos:line="36" pos:column="96"> <block pos:line="36" pos:column="97">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">debugs<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><literal type="number" pos:line="37" pos:column="20">33<pos:position pos:line="37" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="24">2<pos:position pos:line="37" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="27">"SQUID_X509_V_ERR_DOMAIN_MISMATCH: Certificate "<pos:position pos:line="37" pos:column="75"/></literal> <operator pos:line="37" pos:column="76">&lt;&lt;<pos:position pos:line="37" pos:column="84"/></operator>
                   <literal type="string" pos:line="38" pos:column="20">"does not match domainname "<pos:position pos:line="38" pos:column="48"/></literal> <operator pos:line="38" pos:column="49">&lt;&lt;<pos:position pos:line="38" pos:column="57"/></operator> <call><name><name pos:line="38" pos:column="52">request<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">-&gt;<pos:position pos:line="38" pos:column="64"/></operator><name pos:line="38" pos:column="61">GetHost<pos:position pos:line="38" pos:column="68"/></name></name><argument_list pos:line="38" pos:column="68">()<pos:position pos:line="38" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="72"/></expr_stmt>

            <decl_stmt><decl><type><name pos:line="40" pos:column="13">bool<pos:position pos:line="40" pos:column="17"/></name></type> <name pos:line="40" pos:column="18">allowDomainMismatch<pos:position pos:line="40" pos:column="37"/></name> <init pos:line="40" pos:column="38">= <expr><literal type="boolean" pos:line="40" pos:column="40">false<pos:position pos:line="40" pos:column="45"/></literal></expr></init></decl>;<pos:position pos:line="40" pos:column="46"/></decl_stmt>
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><name><name pos:line="41" pos:column="17">Config<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">.<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">ssl_client<pos:position pos:line="41" pos:column="34"/></name><operator pos:line="41" pos:column="34">.<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">cert_error<pos:position pos:line="41" pos:column="45"/></name></name></expr>)<pos:position pos:line="41" pos:column="46"/></condition><then pos:line="41" pos:column="46"> <block pos:line="41" pos:column="47">{
                <decl_stmt><decl><type><name pos:line="42" pos:column="17">ACLFilledChecklist<pos:position pos:line="42" pos:column="35"/></name></type> <name pos:line="42" pos:column="36">check<pos:position pos:line="42" pos:column="41"/></name><argument_list pos:line="42" pos:column="41">(<argument><expr><name><name pos:line="42" pos:column="42">Config<pos:position pos:line="42" pos:column="48"/></name><operator pos:line="42" pos:column="48">.<pos:position pos:line="42" pos:column="49"/></operator><name pos:line="42" pos:column="49">ssl_client<pos:position pos:line="42" pos:column="59"/></name><operator pos:line="42" pos:column="59">.<pos:position pos:line="42" pos:column="60"/></operator><name pos:line="42" pos:column="60">cert_error<pos:position pos:line="42" pos:column="70"/></name></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="72">request<pos:position pos:line="42" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="81">dash_str<pos:position pos:line="42" pos:column="89"/></name></expr></argument>)<pos:position pos:line="42" pos:column="90"/></argument_list></decl>;<pos:position pos:line="42" pos:column="91"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="43" pos:column="17">check<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">.<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">sslErrors<pos:position pos:line="43" pos:column="32"/></name></name> <operator pos:line="43" pos:column="33">=<pos:position pos:line="43" pos:column="34"/></operator> <operator pos:line="43" pos:column="35">new<pos:position pos:line="43" pos:column="38"/></operator> <call><name><name pos:line="43" pos:column="39">Ssl<pos:position pos:line="43" pos:column="42"/></name><operator pos:line="43" pos:column="42">::<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="44">Errors<pos:position pos:line="43" pos:column="50"/></name></name><argument_list pos:line="43" pos:column="50">(<argument><expr><name pos:line="43" pos:column="51">SQUID_X509_V_ERR_DOMAIN_MISMATCH<pos:position pos:line="43" pos:column="83"/></name></expr></argument>)<pos:position pos:line="43" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="85"/></expr_stmt>
                <expr_stmt><expr><name pos:line="44" pos:column="17">allowDomainMismatch<pos:position pos:line="44" pos:column="36"/></name> <operator pos:line="44" pos:column="37">=<pos:position pos:line="44" pos:column="38"/></operator> <operator pos:line="44" pos:column="39">(<pos:position pos:line="44" pos:column="40"/></operator><call><name><name pos:line="44" pos:column="40">check<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">.<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="46">fastCheck<pos:position pos:line="44" pos:column="55"/></name></name><argument_list pos:line="44" pos:column="55">()<pos:position pos:line="44" pos:column="57"/></argument_list></call> <operator pos:line="44" pos:column="58">==<pos:position pos:line="44" pos:column="60"/></operator> <name pos:line="44" pos:column="61">ACCESS_ALLOWED<pos:position pos:line="44" pos:column="75"/></name><operator pos:line="44" pos:column="75">)<pos:position pos:line="44" pos:column="76"/></operator></expr>;<pos:position pos:line="44" pos:column="77"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="45" pos:column="17">delete<pos:position pos:line="45" pos:column="23"/></operator> <name><name pos:line="45" pos:column="24">check<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">.<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">sslErrors<pos:position pos:line="45" pos:column="39"/></name></name></expr>;<pos:position pos:line="45" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="46" pos:column="17">check<pos:position pos:line="46" pos:column="22"/></name><operator pos:line="46" pos:column="22">.<pos:position pos:line="46" pos:column="23"/></operator><name pos:line="46" pos:column="23">sslErrors<pos:position pos:line="46" pos:column="32"/></name></name> <operator pos:line="46" pos:column="33">=<pos:position pos:line="46" pos:column="34"/></operator> <name pos:line="46" pos:column="35">NULL<pos:position pos:line="46" pos:column="39"/></name></expr>;<pos:position pos:line="46" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="47" pos:column="14"/></block></then></if>

            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><operator pos:line="49" pos:column="17">!<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">allowDomainMismatch<pos:position pos:line="49" pos:column="37"/></name></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38"> <block pos:line="49" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="50" pos:column="17">quitAfterError<pos:position pos:line="50" pos:column="31"/></name><argument_list pos:line="50" pos:column="31">(<argument><expr><name pos:line="50" pos:column="32">request<pos:position pos:line="50" pos:column="39"/></name></expr></argument>)<pos:position pos:line="50" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="41"/></expr_stmt>

                <decl_stmt><decl><type><name pos:line="52" pos:column="17">clientStreamNode<pos:position pos:line="52" pos:column="33"/></name> <modifier pos:line="52" pos:column="34">*<pos:position pos:line="52" pos:column="35"/></modifier></type><name pos:line="52" pos:column="35">node<pos:position pos:line="52" pos:column="39"/></name> <init pos:line="52" pos:column="40">= <expr><call><name><name pos:line="52" pos:column="42">context<pos:position pos:line="52" pos:column="49"/></name><operator pos:line="52" pos:column="49">-&gt;<pos:position pos:line="52" pos:column="54"/></operator><name pos:line="52" pos:column="51">getClientReplyContext<pos:position pos:line="52" pos:column="72"/></name></name><argument_list pos:line="52" pos:column="72">()<pos:position pos:line="52" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="52" pos:column="75"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="53" pos:column="17">clientReplyContext<pos:position pos:line="53" pos:column="35"/></name> <modifier pos:line="53" pos:column="36">*<pos:position pos:line="53" pos:column="37"/></modifier></type><name pos:line="53" pos:column="37">repContext<pos:position pos:line="53" pos:column="47"/></name> <init pos:line="53" pos:column="48">= <expr><cast type="dynamic" pos:line="53" pos:column="50">dynamic_cast<argument_list type="generic" pos:line="53" pos:column="62">&lt;<argument><expr><name pos:line="53" pos:column="63">clientReplyContext<pos:position pos:line="53" pos:column="81"/></name> <operator pos:line="53" pos:column="82">*<pos:position pos:line="53" pos:column="83"/></operator></expr></argument>&gt;<pos:position pos:line="53" pos:column="87"/></argument_list><argument_list pos:line="53" pos:column="84">(<argument><expr><call><name><name pos:line="53" pos:column="85">node<pos:position pos:line="53" pos:column="89"/></name><operator pos:line="53" pos:column="89">-&gt;<pos:position pos:line="53" pos:column="94"/></operator><name pos:line="53" pos:column="91">data<pos:position pos:line="53" pos:column="95"/></name><operator pos:line="53" pos:column="95">.<pos:position pos:line="53" pos:column="96"/></operator><name pos:line="53" pos:column="96">getRaw<pos:position pos:line="53" pos:column="102"/></name></name><argument_list pos:line="53" pos:column="102">()<pos:position pos:line="53" pos:column="104"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="105"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="53" pos:column="106"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="54" pos:column="17">assert<pos:position pos:line="54" pos:column="23"/></name> <argument_list pos:line="54" pos:column="24">(<argument><expr><name pos:line="54" pos:column="25">repContext<pos:position pos:line="54" pos:column="35"/></name></expr></argument>)<pos:position pos:line="54" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="37"/></expr_stmt>

                <comment type="line" pos:line="56" pos:column="17">// Fill the server IP and hostname for error page generation.</comment>
                <decl_stmt><decl><type><name><name pos:line="57" pos:column="17">HttpRequest<pos:position pos:line="57" pos:column="28"/></name><operator pos:line="57" pos:column="28">::<pos:position pos:line="57" pos:column="30"/></operator><name pos:line="57" pos:column="30">Pointer<pos:position pos:line="57" pos:column="37"/></name></name> <specifier pos:line="57" pos:column="38">const<pos:position pos:line="57" pos:column="43"/></specifier> <modifier pos:line="57" pos:column="44">&amp;<pos:position pos:line="57" pos:column="49"/></modifier></type> <name pos:line="57" pos:column="46">peekerRequest<pos:position pos:line="57" pos:column="59"/></name> <init pos:line="57" pos:column="60">= <expr><name><name pos:line="57" pos:column="62">sslServerBump<pos:position pos:line="57" pos:column="75"/></name><operator pos:line="57" pos:column="75">-&gt;<pos:position pos:line="57" pos:column="80"/></operator><name pos:line="57" pos:column="77">request<pos:position pos:line="57" pos:column="84"/></name></name></expr></init></decl>;<pos:position pos:line="57" pos:column="85"/></decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="58" pos:column="17">request<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">hier<pos:position pos:line="58" pos:column="30"/></name><operator pos:line="58" pos:column="30">.<pos:position pos:line="58" pos:column="31"/></operator><name pos:line="58" pos:column="31">note<pos:position pos:line="58" pos:column="35"/></name></name><argument_list pos:line="58" pos:column="35">(<argument><expr><name><name pos:line="58" pos:column="36">peekerRequest<pos:position pos:line="58" pos:column="49"/></name><operator pos:line="58" pos:column="49">-&gt;<pos:position pos:line="58" pos:column="54"/></operator><name pos:line="58" pos:column="51">hier<pos:position pos:line="58" pos:column="55"/></name><operator pos:line="58" pos:column="55">.<pos:position pos:line="58" pos:column="56"/></operator><name pos:line="58" pos:column="56">tcpServer<pos:position pos:line="58" pos:column="65"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="58" pos:column="67">request<pos:position pos:line="58" pos:column="74"/></name><operator pos:line="58" pos:column="74">-&gt;<pos:position pos:line="58" pos:column="79"/></operator><name pos:line="58" pos:column="76">GetHost<pos:position pos:line="58" pos:column="83"/></name></name><argument_list pos:line="58" pos:column="83">()<pos:position pos:line="58" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="58" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="87"/></expr_stmt>

                <comment type="line" pos:line="60" pos:column="17">// Create an error object and fill it</comment>
                <decl_stmt><decl><type><name pos:line="61" pos:column="17">ErrorState<pos:position pos:line="61" pos:column="27"/></name> <modifier pos:line="61" pos:column="28">*<pos:position pos:line="61" pos:column="29"/></modifier></type><name pos:line="61" pos:column="29">err<pos:position pos:line="61" pos:column="32"/></name> <init pos:line="61" pos:column="33">= <expr><operator pos:line="61" pos:column="35">new<pos:position pos:line="61" pos:column="38"/></operator> <call><name pos:line="61" pos:column="39">ErrorState<pos:position pos:line="61" pos:column="49"/></name><argument_list pos:line="61" pos:column="49">(<argument><expr><name pos:line="61" pos:column="50">ERR_SECURE_CONNECT_FAIL<pos:position pos:line="61" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="75">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="61" pos:column="99"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="101">request<pos:position pos:line="61" pos:column="108"/></name></expr></argument>)<pos:position pos:line="61" pos:column="109"/></argument_list></call></expr></init></decl>;<pos:position pos:line="61" pos:column="110"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="62" pos:column="17">err<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">-&gt;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="22">src_addr<pos:position pos:line="62" pos:column="30"/></name></name> <operator pos:line="62" pos:column="31">=<pos:position pos:line="62" pos:column="32"/></operator> <name><name pos:line="62" pos:column="33">clientConnection<pos:position pos:line="62" pos:column="49"/></name><operator pos:line="62" pos:column="49">-&gt;<pos:position pos:line="62" pos:column="54"/></operator><name pos:line="62" pos:column="51">remote<pos:position pos:line="62" pos:column="57"/></name></name></expr>;<pos:position pos:line="62" pos:column="58"/></expr_stmt>
                <decl_stmt><decl><type><name><name pos:line="63" pos:column="17">Ssl<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">::<pos:position pos:line="63" pos:column="22"/></operator><name pos:line="63" pos:column="22">ErrorDetail<pos:position pos:line="63" pos:column="33"/></name></name> <modifier pos:line="63" pos:column="34">*<pos:position pos:line="63" pos:column="35"/></modifier></type><name pos:line="63" pos:column="35">errDetail<pos:position pos:line="63" pos:column="44"/></name> <init pos:line="63" pos:column="45">= <expr><operator pos:line="63" pos:column="47">new<pos:position pos:line="63" pos:column="50"/></operator> <call><name><name pos:line="63" pos:column="51">Ssl<pos:position pos:line="63" pos:column="54"/></name><operator pos:line="63" pos:column="54">::<pos:position pos:line="63" pos:column="56"/></operator><name pos:line="63" pos:column="56">ErrorDetail<pos:position pos:line="63" pos:column="67"/></name></name><argument_list pos:line="63" pos:column="67">(
                    <argument><expr><name pos:line="64" pos:column="21">SQUID_X509_V_ERR_DOMAIN_MISMATCH<pos:position pos:line="64" pos:column="53"/></name></expr></argument>,
                    <argument><expr><call><name><name pos:line="65" pos:column="21">sslServerBump<pos:position pos:line="65" pos:column="34"/></name><operator pos:line="65" pos:column="34">-&gt;<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="36">serverCert<pos:position pos:line="65" pos:column="46"/></name><operator pos:line="65" pos:column="46">.<pos:position pos:line="65" pos:column="47"/></operator><name pos:line="65" pos:column="47">get<pos:position pos:line="65" pos:column="50"/></name></name><argument_list pos:line="65" pos:column="50">()<pos:position pos:line="65" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="65" pos:column="54">NULL<pos:position pos:line="65" pos:column="58"/></name></expr></argument>)<pos:position pos:line="65" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="65" pos:column="60"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="66" pos:column="17">err<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">-&gt;<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="22">detail<pos:position pos:line="66" pos:column="28"/></name></name> <operator pos:line="66" pos:column="29">=<pos:position pos:line="66" pos:column="30"/></operator> <name pos:line="66" pos:column="31">errDetail<pos:position pos:line="66" pos:column="40"/></name></expr>;<pos:position pos:line="66" pos:column="41"/></expr_stmt>
                <comment type="line" pos:line="67" pos:column="17">// Save the original request for logging purposes.</comment>
                <if pos:line="68" pos:column="17">if <condition pos:line="68" pos:column="20">(<expr><operator pos:line="68" pos:column="21">!<pos:position pos:line="68" pos:column="22"/></operator><name><name pos:line="68" pos:column="22">context<pos:position pos:line="68" pos:column="29"/></name><operator pos:line="68" pos:column="29">-&gt;<pos:position pos:line="68" pos:column="34"/></operator><name pos:line="68" pos:column="31">http<pos:position pos:line="68" pos:column="35"/></name><operator pos:line="68" pos:column="35">-&gt;<pos:position pos:line="68" pos:column="40"/></operator><name pos:line="68" pos:column="37">al<pos:position pos:line="68" pos:column="39"/></name><operator pos:line="68" pos:column="39">-&gt;<pos:position pos:line="68" pos:column="44"/></operator><name pos:line="68" pos:column="41">request<pos:position pos:line="68" pos:column="48"/></name></name></expr>)<pos:position pos:line="68" pos:column="49"/></condition><then pos:line="68" pos:column="49">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="69" pos:column="21">context<pos:position pos:line="69" pos:column="28"/></name><operator pos:line="69" pos:column="28">-&gt;<pos:position pos:line="69" pos:column="33"/></operator><name pos:line="69" pos:column="30">http<pos:position pos:line="69" pos:column="34"/></name><operator pos:line="69" pos:column="34">-&gt;<pos:position pos:line="69" pos:column="39"/></operator><name pos:line="69" pos:column="36">al<pos:position pos:line="69" pos:column="38"/></name><operator pos:line="69" pos:column="38">-&gt;<pos:position pos:line="69" pos:column="43"/></operator><name pos:line="69" pos:column="40">request<pos:position pos:line="69" pos:column="47"/></name></name> <operator pos:line="69" pos:column="48">=<pos:position pos:line="69" pos:column="49"/></operator> <call><name pos:line="69" pos:column="50">HTTPMSGLOCK<pos:position pos:line="69" pos:column="61"/></name><argument_list pos:line="69" pos:column="61">(<argument><expr><name pos:line="69" pos:column="62">request<pos:position pos:line="69" pos:column="69"/></name></expr></argument>)<pos:position pos:line="69" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="71"/></expr_stmt></block></then></if>
                <expr_stmt><expr><call><name><name pos:line="70" pos:column="17">repContext<pos:position pos:line="70" pos:column="27"/></name><operator pos:line="70" pos:column="27">-&gt;<pos:position pos:line="70" pos:column="32"/></operator><name pos:line="70" pos:column="29">setReplyToError<pos:position pos:line="70" pos:column="44"/></name></name><argument_list pos:line="70" pos:column="44">(<argument><expr><name><name pos:line="70" pos:column="45">request<pos:position pos:line="70" pos:column="52"/></name><operator pos:line="70" pos:column="52">-&gt;<pos:position pos:line="70" pos:column="57"/></operator><name pos:line="70" pos:column="54">method<pos:position pos:line="70" pos:column="60"/></name></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="62">err<pos:position pos:line="70" pos:column="65"/></name></expr></argument>)<pos:position pos:line="70" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="71" pos:column="17">assert<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><name><name pos:line="71" pos:column="24">context<pos:position pos:line="71" pos:column="31"/></name><operator pos:line="71" pos:column="31">-&gt;<pos:position pos:line="71" pos:column="36"/></operator><name pos:line="71" pos:column="33">http<pos:position pos:line="71" pos:column="37"/></name><operator pos:line="71" pos:column="37">-&gt;<pos:position pos:line="71" pos:column="42"/></operator><name pos:line="71" pos:column="39">out<pos:position pos:line="71" pos:column="42"/></name><operator pos:line="71" pos:column="42">.<pos:position pos:line="71" pos:column="43"/></operator><name pos:line="71" pos:column="43">offset<pos:position pos:line="71" pos:column="49"/></name></name> <operator pos:line="71" pos:column="50">==<pos:position pos:line="71" pos:column="52"/></operator> <literal type="number" pos:line="71" pos:column="53">0<pos:position pos:line="71" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="72" pos:column="17">context<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">-&gt;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="26">pullData<pos:position pos:line="72" pos:column="34"/></name></name><argument_list pos:line="72" pos:column="34">()<pos:position pos:line="72" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="37"/></expr_stmt>
                <return pos:line="73" pos:column="17">return <expr><literal type="boolean" pos:line="73" pos:column="24">true<pos:position pos:line="73" pos:column="28"/></literal></expr>;<pos:position pos:line="73" pos:column="29"/></return>
            }<pos:position pos:line="74" pos:column="14"/></block></then></if>
        }<pos:position pos:line="75" pos:column="10"/></block></then></if>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>

    <return pos:line="78" pos:column="5">return <expr><literal type="boolean" pos:line="78" pos:column="12">false<pos:position pos:line="78" pos:column="17"/></literal></expr>;<pos:position pos:line="78" pos:column="18"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

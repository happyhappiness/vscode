<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4763_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLIP<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">match<pos:position pos:line="2" pos:column="13"/></name></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name><name pos:line="2" pos:column="14">Ip<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">Address<pos:position pos:line="2" pos:column="25"/></name></name> <modifier pos:line="2" pos:column="26">&amp;<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="27">clientip<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">acl_ip_data<pos:position pos:line="4" pos:column="23"/></name></type> <name pos:line="4" pos:column="24">ClientAddress<pos:position pos:line="4" pos:column="37"/></name></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/*
     * aclIpAddrNetworkCompare() takes two acl_ip_data pointers as
     * arguments, so we must create a fake one for the client's IP
     * address. Since we are scanning for a single IP mask and addr2
     * MUST be set to empty.
     */</comment>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">ClientAddress<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">.<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">addr1<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">clientip<pos:position pos:line="11" pos:column="35"/></name></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">ClientAddress<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">addr2<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">.<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">setEmpty<pos:position pos:line="12" pos:column="33"/></name></name><argument_list pos:line="12" pos:column="33">()<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">ClientAddress<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">.<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">mask<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">.<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">setEmpty<pos:position pos:line="13" pos:column="32"/></name></name><argument_list pos:line="13" pos:column="32">()<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">const<pos:position pos:line="15" pos:column="10"/></specifier> <name pos:line="15" pos:column="11">acl_ip_data<pos:position pos:line="15" pos:column="22"/></name> <modifier pos:line="15" pos:column="23">*<pos:position pos:line="15" pos:column="24"/></modifier> <specifier pos:line="15" pos:column="25">const<pos:position pos:line="15" pos:column="30"/></specifier> <modifier pos:line="15" pos:column="31">*<pos:position pos:line="15" pos:column="32"/></modifier></type> <name pos:line="15" pos:column="33">result<pos:position pos:line="15" pos:column="39"/></name> <init pos:line="15" pos:column="40">=  <expr><call><name><name pos:line="15" pos:column="43">data<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">-&gt;<pos:position pos:line="15" pos:column="52"/></operator><name pos:line="15" pos:column="49">find<pos:position pos:line="15" pos:column="53"/></name></name><argument_list pos:line="15" pos:column="53">(<argument><expr><operator pos:line="15" pos:column="54">&amp;<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="55">ClientAddress<pos:position pos:line="15" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="70">aclIpAddrNetworkCompare<pos:position pos:line="15" pos:column="93"/></name></expr></argument>)<pos:position pos:line="15" pos:column="94"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="95"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">28<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">3<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"aclIpMatchIp: '"<pos:position pos:line="16" pos:column="36"/></literal> <operator pos:line="16" pos:column="37">&lt;&lt;<pos:position pos:line="16" pos:column="45"/></operator> <name pos:line="16" pos:column="40">clientip<pos:position pos:line="16" pos:column="48"/></name> <operator pos:line="16" pos:column="49">&lt;&lt;<pos:position pos:line="16" pos:column="57"/></operator> <literal type="string" pos:line="16" pos:column="52">"' "<pos:position pos:line="16" pos:column="56"/></literal> <operator pos:line="16" pos:column="57">&lt;&lt;<pos:position pos:line="16" pos:column="65"/></operator> <operator pos:line="16" pos:column="60">(<pos:position pos:line="16" pos:column="61"/></operator><ternary><condition><expr><name pos:line="16" pos:column="61">result<pos:position pos:line="16" pos:column="67"/></name></expr> ?<pos:position pos:line="16" pos:column="69"/></condition><then pos:line="16" pos:column="69"> <expr><literal type="string" pos:line="16" pos:column="70">"found"<pos:position pos:line="16" pos:column="77"/></literal></expr> <pos:position pos:line="16" pos:column="78"/></then><else pos:line="16" pos:column="78">: <expr><literal type="string" pos:line="16" pos:column="80">"NOT found"<pos:position pos:line="16" pos:column="91"/></literal></expr></else></ternary><operator pos:line="16" pos:column="91">)<pos:position pos:line="16" pos:column="92"/></operator></expr></argument>)<pos:position pos:line="16" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="94"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">result<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">!=<pos:position pos:line="17" pos:column="22"/></operator> <name pos:line="17" pos:column="23">NULL<pos:position pos:line="17" pos:column="27"/></name><operator pos:line="17" pos:column="27">)<pos:position pos:line="17" pos:column="28"/></operator></expr>;<pos:position pos:line="17" pos:column="29"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

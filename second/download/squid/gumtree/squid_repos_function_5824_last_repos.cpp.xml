<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5824_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Auth<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">UserRequest<pos:position pos:line="1" pos:column="18"/></name><operator pos:line="1" pos:column="18">::<pos:position pos:line="1" pos:column="20"/></operator><name pos:line="1" pos:column="20">Pointer<pos:position pos:line="1" pos:column="27"/></name></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Basic<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">Config<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">decode<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">proxy_auth<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier> <name pos:line="2" pos:column="59">char<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">aRequestRealm<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Auth<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">::<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">UserRequest<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">::<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">Pointer<pos:position pos:line="4" pos:column="31"/></name></name></type> <name pos:line="4" pos:column="32">auth_user_request<pos:position pos:line="4" pos:column="49"/></name> <init pos:line="4" pos:column="50">= <expr><cast type="dynamic" pos:line="4" pos:column="52">dynamic_cast<argument_list type="generic" pos:line="4" pos:column="64">&lt;<argument><expr><name><name pos:line="4" pos:column="65">Auth<pos:position pos:line="4" pos:column="69"/></name><operator pos:line="4" pos:column="69">::<pos:position pos:line="4" pos:column="71"/></operator><name pos:line="4" pos:column="71">UserRequest<pos:position pos:line="4" pos:column="82"/></name></name><operator pos:line="4" pos:column="82">*<pos:position pos:line="4" pos:column="83"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="87"/></argument_list><argument_list pos:line="4" pos:column="84">(<argument><expr><operator pos:line="4" pos:column="85">new<pos:position pos:line="4" pos:column="88"/></operator> <name><name pos:line="4" pos:column="89">Auth<pos:position pos:line="4" pos:column="93"/></name><operator pos:line="4" pos:column="93">::<pos:position pos:line="4" pos:column="95"/></operator><name pos:line="4" pos:column="95">Basic<pos:position pos:line="4" pos:column="100"/></name><operator pos:line="4" pos:column="100">::<pos:position pos:line="4" pos:column="102"/></operator><name pos:line="4" pos:column="102">UserRequest<pos:position pos:line="4" pos:column="113"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="114"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="115"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* decode the username */</comment>

    <comment type="line" pos:line="7" pos:column="5">// retrieve the cleartext (in a dynamically allocated char*)</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">cleartext<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><call><name pos:line="8" pos:column="23">decodeCleartext<pos:position pos:line="8" pos:column="38"/></name><argument_list pos:line="8" pos:column="38">(<argument><expr><name pos:line="8" pos:column="39">proxy_auth<pos:position pos:line="8" pos:column="49"/></name></expr></argument>)<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>

    <comment type="line" pos:line="10" pos:column="5">// empty header? no auth details produced...</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">cleartext<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">auth_user_request<pos:position pos:line="12" pos:column="33"/></name></expr>;<pos:position pos:line="12" pos:column="34"/></return></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">Auth<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">::<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">User<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">::<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">Pointer<pos:position pos:line="14" pos:column="24"/></name></name></type> <name pos:line="14" pos:column="25">lb<pos:position pos:line="14" pos:column="27"/></name></decl>;<pos:position pos:line="14" pos:column="28"/></decl_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* permitted because local_basic is purely local function scope. */</comment>
    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">Auth<pos:position pos:line="16" pos:column="9"/></name><operator pos:line="16" pos:column="9">::<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">Basic<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">::<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">User<pos:position pos:line="16" pos:column="22"/></name></name> <modifier pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></modifier></type><name pos:line="16" pos:column="24">local_basic<pos:position pos:line="16" pos:column="35"/></name> <init pos:line="16" pos:column="36">= <expr><name pos:line="16" pos:column="38">NULL<pos:position pos:line="16" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="43"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">char<pos:position pos:line="18" pos:column="9"/></name> <modifier pos:line="18" pos:column="10">*<pos:position pos:line="18" pos:column="11"/></modifier></type><name pos:line="18" pos:column="11">separator<pos:position pos:line="18" pos:column="20"/></name> <init pos:line="18" pos:column="21">= <expr><call><name pos:line="18" pos:column="23">strchr<pos:position pos:line="18" pos:column="29"/></name><argument_list pos:line="18" pos:column="29">(<argument><expr><name pos:line="18" pos:column="30">cleartext<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="41">':'<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="46"/></decl_stmt>

    <expr_stmt><expr><name pos:line="20" pos:column="5">lb<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <name pos:line="20" pos:column="10">local_basic<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <operator pos:line="20" pos:column="24">new<pos:position pos:line="20" pos:column="27"/></operator> <call><name><name pos:line="20" pos:column="28">Auth<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">::<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">Basic<pos:position pos:line="20" pos:column="39"/></name><operator pos:line="20" pos:column="39">::<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="41">User<pos:position pos:line="20" pos:column="45"/></name></name><argument_list pos:line="20" pos:column="45">(<argument><expr><name pos:line="20" pos:column="46">this<pos:position pos:line="20" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="52">aRequestRealm<pos:position pos:line="20" pos:column="65"/></name></expr></argument>)<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">separator<pos:position pos:line="22" pos:column="18"/></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
        <comment type="block" pos:line="23" pos:column="9">/* terminate the username */</comment>
        <expr_stmt><expr><operator pos:line="24" pos:column="9">*<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">separator<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <literal type="char" pos:line="24" pos:column="22">'\0'<pos:position pos:line="24" pos:column="26"/></literal></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="25" pos:column="9">local_basic<pos:position pos:line="25" pos:column="20"/></name><operator pos:line="25" pos:column="20">-&gt;<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="22">passwd<pos:position pos:line="25" pos:column="28"/></name></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <call><name pos:line="25" pos:column="31">xstrdup<pos:position pos:line="25" pos:column="38"/></name><argument_list pos:line="25" pos:column="38">(<argument><expr><name pos:line="25" pos:column="39">separator<pos:position pos:line="25" pos:column="48"/></name><operator pos:line="25" pos:column="48">+<pos:position pos:line="25" pos:column="49"/></operator><literal type="number" pos:line="25" pos:column="49">1<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">casesensitive<pos:position pos:line="28" pos:column="23"/></name></expr>)<pos:position pos:line="28" pos:column="24"/></condition><then pos:line="28" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="9">Tolower<pos:position pos:line="29" pos:column="16"/></name><argument_list pos:line="29" pos:column="16">(<argument><expr><name pos:line="29" pos:column="17">cleartext<pos:position pos:line="29" pos:column="26"/></name></expr></argument>)<pos:position pos:line="29" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="30" pos:column="5">local_basic<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">-&gt;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="18">username<pos:position pos:line="30" pos:column="26"/></name></name><argument_list pos:line="30" pos:column="26">(<argument><expr><name pos:line="30" pos:column="27">cleartext<pos:position pos:line="30" pos:column="36"/></name></expr></argument>)<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">local_basic<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">passwd<pos:position pos:line="32" pos:column="28"/></name></name> <operator pos:line="32" pos:column="29">==<pos:position pos:line="32" pos:column="31"/></operator> <name pos:line="32" pos:column="32">NULL<pos:position pos:line="32" pos:column="36"/></name></expr>)<pos:position pos:line="32" pos:column="37"/></condition><then pos:line="32" pos:column="37"> <block pos:line="32" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">debugs<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="number" pos:line="33" pos:column="16">29<pos:position pos:line="33" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="20">4<pos:position pos:line="33" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="33" pos:column="23">HERE<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">&lt;&lt;<pos:position pos:line="33" pos:column="36"/></operator> <literal type="string" pos:line="33" pos:column="31">"no password in proxy authorization header '"<pos:position pos:line="33" pos:column="76"/></literal> <operator pos:line="33" pos:column="77">&lt;&lt;<pos:position pos:line="33" pos:column="85"/></operator> <name pos:line="33" pos:column="80">proxy_auth<pos:position pos:line="33" pos:column="90"/></name> <operator pos:line="33" pos:column="91">&lt;&lt;<pos:position pos:line="33" pos:column="99"/></operator> <literal type="string" pos:line="33" pos:column="94">"'"<pos:position pos:line="33" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="99"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="34" pos:column="9">auth_user_request<pos:position pos:line="34" pos:column="26"/></name><operator pos:line="34" pos:column="26">-&gt;<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="28">setDenyMessage<pos:position pos:line="34" pos:column="42"/></name></name><argument_list pos:line="34" pos:column="42">(<argument><expr><literal type="string" pos:line="34" pos:column="43">"no password was present in the HTTP [proxy-]authorization header. This is most likely a browser bug"<pos:position pos:line="34" pos:column="144"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="145"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="146"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then> <else pos:line="35" pos:column="7">else <block pos:line="35" pos:column="12">{
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">local_basic<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">-&gt;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="26">passwd<pos:position pos:line="36" pos:column="32"/></name><index pos:line="36" pos:column="32">[<expr><literal type="number" pos:line="36" pos:column="33">0<pos:position pos:line="36" pos:column="34"/></literal></expr>]<pos:position pos:line="36" pos:column="35"/></index></name> <operator pos:line="36" pos:column="36">==<pos:position pos:line="36" pos:column="38"/></operator> <literal type="char" pos:line="36" pos:column="39">'\0'<pos:position pos:line="36" pos:column="43"/></literal></expr>)<pos:position pos:line="36" pos:column="44"/></condition><then pos:line="36" pos:column="44"> <block pos:line="36" pos:column="45">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">debugs<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><literal type="number" pos:line="37" pos:column="20">29<pos:position pos:line="37" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="24">4<pos:position pos:line="37" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="27">HERE<pos:position pos:line="37" pos:column="31"/></name> <operator pos:line="37" pos:column="32">&lt;&lt;<pos:position pos:line="37" pos:column="40"/></operator> <literal type="string" pos:line="37" pos:column="35">"Disallowing empty password. User is '"<pos:position pos:line="37" pos:column="74"/></literal> <operator pos:line="37" pos:column="75">&lt;&lt;<pos:position pos:line="37" pos:column="83"/></operator> <call><name><name pos:line="37" pos:column="78">local_basic<pos:position pos:line="37" pos:column="89"/></name><operator pos:line="37" pos:column="89">-&gt;<pos:position pos:line="37" pos:column="94"/></operator><name pos:line="37" pos:column="91">username<pos:position pos:line="37" pos:column="99"/></name></name><argument_list pos:line="37" pos:column="99">()<pos:position pos:line="37" pos:column="101"/></argument_list></call> <operator pos:line="37" pos:column="102">&lt;&lt;<pos:position pos:line="37" pos:column="110"/></operator> <literal type="string" pos:line="37" pos:column="105">"'"<pos:position pos:line="37" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="110"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">safe_free<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><name><name pos:line="38" pos:column="23">local_basic<pos:position pos:line="38" pos:column="34"/></name><operator pos:line="38" pos:column="34">-&gt;<pos:position pos:line="38" pos:column="39"/></operator><name pos:line="38" pos:column="36">passwd<pos:position pos:line="38" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="39" pos:column="13">auth_user_request<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">setDenyMessage<pos:position pos:line="39" pos:column="46"/></name></name><argument_list pos:line="39" pos:column="46">(<argument><expr><literal type="string" pos:line="39" pos:column="47">"Request denied because you provided an empty password. Users MUST have a password."<pos:position pos:line="39" pos:column="131"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="132"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="133"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
    }<pos:position pos:line="41" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">xfree<pos:position pos:line="43" pos:column="10"/></name><argument_list pos:line="43" pos:column="10">(<argument><expr><name pos:line="43" pos:column="11">cleartext<pos:position pos:line="43" pos:column="20"/></name></expr></argument>)<pos:position pos:line="43" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><operator pos:line="45" pos:column="9">!<pos:position pos:line="45" pos:column="10"/></operator><call><name><name pos:line="45" pos:column="10">local_basic<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">-&gt;<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="23">valid<pos:position pos:line="45" pos:column="28"/></name></name><argument_list pos:line="45" pos:column="28">()<pos:position pos:line="45" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="31"/></condition><then pos:line="45" pos:column="31"> <block pos:line="45" pos:column="32">{
        <expr_stmt><expr><name><name pos:line="46" pos:column="9">lb<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">-&gt;<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="13">auth_type<pos:position pos:line="46" pos:column="22"/></name></name> <operator pos:line="46" pos:column="23">=<pos:position pos:line="46" pos:column="24"/></operator> <name><name pos:line="46" pos:column="25">Auth<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">::<pos:position pos:line="46" pos:column="31"/></operator><name pos:line="46" pos:column="31">AUTH_BROKEN<pos:position pos:line="46" pos:column="42"/></name></name></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="47" pos:column="9">auth_user_request<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">-&gt;<pos:position pos:line="47" pos:column="31"/></operator><name pos:line="47" pos:column="28">user<pos:position pos:line="47" pos:column="32"/></name></name><argument_list pos:line="47" pos:column="32">(<argument><expr><name pos:line="47" pos:column="33">lb<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><name pos:line="48" pos:column="16">auth_user_request<pos:position pos:line="48" pos:column="33"/></name></expr>;<pos:position pos:line="48" pos:column="34"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="51" pos:column="5">/* now lookup and see if we have a matching auth_user structure in memory. */</comment>
    <decl_stmt><decl><type><name><name pos:line="52" pos:column="5">Auth<pos:position pos:line="52" pos:column="9"/></name><operator pos:line="52" pos:column="9">::<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="11">User<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">::<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">Pointer<pos:position pos:line="52" pos:column="24"/></name></name></type> <name pos:line="52" pos:column="25">auth_user<pos:position pos:line="52" pos:column="34"/></name></decl>;<pos:position pos:line="52" pos:column="35"/></decl_stmt>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><operator pos:line="54" pos:column="9">!<pos:position pos:line="54" pos:column="10"/></operator><operator pos:line="54" pos:column="10">(<pos:position pos:line="54" pos:column="11"/></operator><name pos:line="54" pos:column="11">auth_user<pos:position pos:line="54" pos:column="20"/></name> <operator pos:line="54" pos:column="21">=<pos:position pos:line="54" pos:column="22"/></operator> <call><name><name pos:line="54" pos:column="23">Auth<pos:position pos:line="54" pos:column="27"/></name><operator pos:line="54" pos:column="27">::<pos:position pos:line="54" pos:column="29"/></operator><name pos:line="54" pos:column="29">Basic<pos:position pos:line="54" pos:column="34"/></name><operator pos:line="54" pos:column="34">::<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="36">User<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">::<pos:position pos:line="54" pos:column="42"/></operator><name pos:line="54" pos:column="42">Cache<pos:position pos:line="54" pos:column="47"/></name></name><argument_list pos:line="54" pos:column="47">()<pos:position pos:line="54" pos:column="49"/></argument_list></call><operator pos:line="54" pos:column="49">-&gt;<pos:position pos:line="54" pos:column="54"/></operator><call><name pos:line="54" pos:column="51">lookup<pos:position pos:line="54" pos:column="57"/></name><argument_list pos:line="54" pos:column="57">(<argument><expr><call><name><name pos:line="54" pos:column="58">lb<pos:position pos:line="54" pos:column="60"/></name><operator pos:line="54" pos:column="60">-&gt;<pos:position pos:line="54" pos:column="65"/></operator><name pos:line="54" pos:column="62">userKey<pos:position pos:line="54" pos:column="69"/></name></name><argument_list pos:line="54" pos:column="69">()<pos:position pos:line="54" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="72"/></argument_list></call><operator pos:line="54" pos:column="72">)<pos:position pos:line="54" pos:column="73"/></operator></expr>)<pos:position pos:line="54" pos:column="74"/></condition><then pos:line="54" pos:column="74"> <block pos:line="54" pos:column="75">{
        <comment type="block" pos:line="55" pos:column="9">/* the user doesn't exist in the username cache yet */</comment>
        <comment type="block" pos:line="56" pos:column="9">/* save the credentials */</comment>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">debugs<pos:position pos:line="57" pos:column="15"/></name><argument_list pos:line="57" pos:column="15">(<argument><expr><literal type="number" pos:line="57" pos:column="16">29<pos:position pos:line="57" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="20">9<pos:position pos:line="57" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="23">HERE<pos:position pos:line="57" pos:column="27"/></name> <operator pos:line="57" pos:column="28">&lt;&lt;<pos:position pos:line="57" pos:column="36"/></operator> <literal type="string" pos:line="57" pos:column="31">"Creating new user '"<pos:position pos:line="57" pos:column="52"/></literal> <operator pos:line="57" pos:column="53">&lt;&lt;<pos:position pos:line="57" pos:column="61"/></operator> <call><name><name pos:line="57" pos:column="56">lb<pos:position pos:line="57" pos:column="58"/></name><operator pos:line="57" pos:column="58">-&gt;<pos:position pos:line="57" pos:column="63"/></operator><name pos:line="57" pos:column="60">username<pos:position pos:line="57" pos:column="68"/></name></name><argument_list pos:line="57" pos:column="68">()<pos:position pos:line="57" pos:column="70"/></argument_list></call> <operator pos:line="57" pos:column="71">&lt;&lt;<pos:position pos:line="57" pos:column="79"/></operator> <literal type="string" pos:line="57" pos:column="74">"'"<pos:position pos:line="57" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="79"/></expr_stmt>
        <comment type="block" pos:line="58" pos:column="9">/* set the auth_user type */</comment>
        <expr_stmt><expr><name><name pos:line="59" pos:column="9">lb<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">-&gt;<pos:position pos:line="59" pos:column="16"/></operator><name pos:line="59" pos:column="13">auth_type<pos:position pos:line="59" pos:column="22"/></name></name> <operator pos:line="59" pos:column="23">=<pos:position pos:line="59" pos:column="24"/></operator> <name><name pos:line="59" pos:column="25">Auth<pos:position pos:line="59" pos:column="29"/></name><operator pos:line="59" pos:column="29">::<pos:position pos:line="59" pos:column="31"/></operator><name pos:line="59" pos:column="31">AUTH_BASIC<pos:position pos:line="59" pos:column="41"/></name></name></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>
        <comment type="block" pos:line="60" pos:column="9">/* current time for timeouts */</comment>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">lb<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">-&gt;<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="13">expiretime<pos:position pos:line="61" pos:column="23"/></name></name> <operator pos:line="61" pos:column="24">=<pos:position pos:line="61" pos:column="25"/></operator> <name><name pos:line="61" pos:column="26">current_time<pos:position pos:line="61" pos:column="38"/></name><operator pos:line="61" pos:column="38">.<pos:position pos:line="61" pos:column="39"/></operator><name pos:line="61" pos:column="39">tv_sec<pos:position pos:line="61" pos:column="45"/></name></name></expr>;<pos:position pos:line="61" pos:column="46"/></expr_stmt>

        <comment type="block" pos:line="63" pos:column="9">/* this basic_user struct is the 'lucky one' to get added to the username cache */</comment>
        <comment type="block" pos:line="64" pos:column="9">/* the requests after this link to the basic_user */</comment>
        <comment type="block" pos:line="65" pos:column="9">/* store user in hash */</comment>
        <expr_stmt><expr><call><name><name pos:line="66" pos:column="9">lb<pos:position pos:line="66" pos:column="11"/></name><operator pos:line="66" pos:column="11">-&gt;<pos:position pos:line="66" pos:column="16"/></operator><name pos:line="66" pos:column="13">addToNameCache<pos:position pos:line="66" pos:column="27"/></name></name><argument_list pos:line="66" pos:column="27">()<pos:position pos:line="66" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><name pos:line="68" pos:column="9">auth_user<pos:position pos:line="68" pos:column="18"/></name> <operator pos:line="68" pos:column="19">=<pos:position pos:line="68" pos:column="20"/></operator> <name pos:line="68" pos:column="21">lb<pos:position pos:line="68" pos:column="23"/></name></expr>;<pos:position pos:line="68" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">assert<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><name pos:line="69" pos:column="16">auth_user<pos:position pos:line="69" pos:column="25"/></name> <operator pos:line="69" pos:column="26">!=<pos:position pos:line="69" pos:column="28"/></operator> <name pos:line="69" pos:column="29">NULL<pos:position pos:line="69" pos:column="33"/></name></expr></argument>)<pos:position pos:line="69" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then> <else pos:line="70" pos:column="7">else <block pos:line="70" pos:column="12">{
        <comment type="block" pos:line="71" pos:column="9">/* replace the current cached password with the new one */</comment>
        <decl_stmt><decl><type><name><name pos:line="72" pos:column="9">Auth<pos:position pos:line="72" pos:column="13"/></name><operator pos:line="72" pos:column="13">::<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">Basic<pos:position pos:line="72" pos:column="20"/></name><operator pos:line="72" pos:column="20">::<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="22">User<pos:position pos:line="72" pos:column="26"/></name></name> <modifier pos:line="72" pos:column="27">*<pos:position pos:line="72" pos:column="28"/></modifier></type><name pos:line="72" pos:column="28">basic_auth<pos:position pos:line="72" pos:column="38"/></name> <init pos:line="72" pos:column="39">= <expr><cast type="dynamic" pos:line="72" pos:column="41">dynamic_cast<argument_list type="generic" pos:line="72" pos:column="53">&lt;<argument><expr><name><name pos:line="72" pos:column="54">Auth<pos:position pos:line="72" pos:column="58"/></name><operator pos:line="72" pos:column="58">::<pos:position pos:line="72" pos:column="60"/></operator><name pos:line="72" pos:column="60">Basic<pos:position pos:line="72" pos:column="65"/></name><operator pos:line="72" pos:column="65">::<pos:position pos:line="72" pos:column="67"/></operator><name pos:line="72" pos:column="67">User<pos:position pos:line="72" pos:column="71"/></name></name> <operator pos:line="72" pos:column="72">*<pos:position pos:line="72" pos:column="73"/></operator></expr></argument>&gt;<pos:position pos:line="72" pos:column="77"/></argument_list><argument_list pos:line="72" pos:column="74">(<argument><expr><call><name><name pos:line="72" pos:column="75">auth_user<pos:position pos:line="72" pos:column="84"/></name><operator pos:line="72" pos:column="84">.<pos:position pos:line="72" pos:column="85"/></operator><name pos:line="72" pos:column="85">getRaw<pos:position pos:line="72" pos:column="91"/></name></name><argument_list pos:line="72" pos:column="91">()<pos:position pos:line="72" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="94"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="72" pos:column="95"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">assert<pos:position pos:line="73" pos:column="15"/></name><argument_list pos:line="73" pos:column="15">(<argument><expr><name pos:line="73" pos:column="16">basic_auth<pos:position pos:line="73" pos:column="26"/></name></expr></argument>)<pos:position pos:line="73" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="74" pos:column="9">basic_auth<pos:position pos:line="74" pos:column="19"/></name><operator pos:line="74" pos:column="19">-&gt;<pos:position pos:line="74" pos:column="24"/></operator><name pos:line="74" pos:column="21">updateCached<pos:position pos:line="74" pos:column="33"/></name></name><argument_list pos:line="74" pos:column="33">(<argument><expr><name pos:line="74" pos:column="34">local_basic<pos:position pos:line="74" pos:column="45"/></name></expr></argument>)<pos:position pos:line="74" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="75" pos:column="9">auth_user<pos:position pos:line="75" pos:column="18"/></name> <operator pos:line="75" pos:column="19">=<pos:position pos:line="75" pos:column="20"/></operator> <name pos:line="75" pos:column="21">basic_auth<pos:position pos:line="75" pos:column="31"/></name></expr>;<pos:position pos:line="75" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="76" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="78" pos:column="5">/* link the request to the in-cache user */</comment>
    <expr_stmt><expr><call><name><name pos:line="79" pos:column="5">auth_user_request<pos:position pos:line="79" pos:column="22"/></name><operator pos:line="79" pos:column="22">-&gt;<pos:position pos:line="79" pos:column="27"/></operator><name pos:line="79" pos:column="24">user<pos:position pos:line="79" pos:column="28"/></name></name><argument_list pos:line="79" pos:column="28">(<argument><expr><name pos:line="79" pos:column="29">auth_user<pos:position pos:line="79" pos:column="38"/></name></expr></argument>)<pos:position pos:line="79" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="40"/></expr_stmt>
    <return pos:line="80" pos:column="5">return <expr><name pos:line="80" pos:column="12">auth_user_request<pos:position pos:line="80" pos:column="29"/></name></expr>;<pos:position pos:line="80" pos:column="30"/></return>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

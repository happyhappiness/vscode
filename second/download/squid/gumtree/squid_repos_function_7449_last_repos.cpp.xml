<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7449_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">HandshakeParser<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">parseVersion2HandshakeMessage<pos:position pos:line="2" pos:column="57"/></name></name><parameter_list pos:line="2" pos:column="57">(<parameter><decl><type><specifier pos:line="2" pos:column="58">const<pos:position pos:line="2" pos:column="63"/></specifier> <name pos:line="2" pos:column="64">SBuf<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">&amp;<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="70">raw<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Parser<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">::<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">BinaryTokenizer<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">tk<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><name pos:line="4" pos:column="32">raw<pos:position pos:line="4" pos:column="35"/></name></expr></argument>)<pos:position pos:line="4" pos:column="36"/></argument_list></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Parser<pos:position pos:line="5" pos:column="11"/></name><operator pos:line="5" pos:column="11">::<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">BinaryTokenizerContext<pos:position pos:line="5" pos:column="35"/></name></name></type> <name pos:line="5" pos:column="36">hello<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><name pos:line="5" pos:column="42">tk<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="46">"V2ClientHello"<pos:position pos:line="5" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></decl>;<pos:position pos:line="5" pos:column="63"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><call><name><name pos:line="6" pos:column="10">tk<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">.<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">uint8<pos:position pos:line="6" pos:column="18"/></name></name><argument_list pos:line="6" pos:column="18">(<argument><expr><literal type="string" pos:line="6" pos:column="19">".type"<pos:position pos:line="6" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call> <operator pos:line="6" pos:column="28">==<pos:position pos:line="6" pos:column="30"/></operator> <name pos:line="6" pos:column="31">hskClientHello<pos:position pos:line="6" pos:column="45"/></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="47"/></expr_stmt> <comment type="line" pos:line="6" pos:column="48">// Only client hello supported.</comment>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">details<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">tlsSupportedVersion<pos:position pos:line="7" pos:column="33"/></name></name> <operator pos:line="7" pos:column="34">=<pos:position pos:line="7" pos:column="35"/></operator> <call><name pos:line="7" pos:column="36">ParseProtocolVersion<pos:position pos:line="7" pos:column="56"/></name><argument_list pos:line="7" pos:column="56">(<argument><expr><name pos:line="7" pos:column="57">tk<pos:position pos:line="7" pos:column="59"/></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">uint16_t<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">ciphersLen<pos:position pos:line="8" pos:column="30"/></name> <init pos:line="8" pos:column="31">= <expr><call><name><name pos:line="8" pos:column="33">tk<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">.<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">uint16<pos:position pos:line="8" pos:column="42"/></name></name><argument_list pos:line="8" pos:column="42">(<argument><expr><literal type="string" pos:line="8" pos:column="43">".cipher_specs.length"<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">uint16_t<pos:position pos:line="9" pos:column="19"/></name></type> <name pos:line="9" pos:column="20">sessionIdLen<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><call><name><name pos:line="9" pos:column="35">tk<pos:position pos:line="9" pos:column="37"/></name><operator pos:line="9" pos:column="37">.<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">uint16<pos:position pos:line="9" pos:column="44"/></name></name><argument_list pos:line="9" pos:column="44">(<argument><expr><literal type="string" pos:line="9" pos:column="45">".session_id.length"<pos:position pos:line="9" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="67"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">uint16_t<pos:position pos:line="10" pos:column="19"/></name></type> <name pos:line="10" pos:column="20">challengeLen<pos:position pos:line="10" pos:column="32"/></name> <init pos:line="10" pos:column="33">= <expr><call><name><name pos:line="10" pos:column="35">tk<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">.<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="38">uint16<pos:position pos:line="10" pos:column="44"/></name></name><argument_list pos:line="10" pos:column="44">(<argument><expr><literal type="string" pos:line="10" pos:column="45">".challenge.length"<pos:position pos:line="10" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">parseV23Ciphers<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><call><name><name pos:line="11" pos:column="21">tk<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">.<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">area<pos:position pos:line="11" pos:column="28"/></name></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">ciphersLen<pos:position pos:line="11" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="41">".cipher_specs.body"<pos:position pos:line="11" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">details<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">sessionId<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <call><name><name pos:line="12" pos:column="26">tk<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">.<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">area<pos:position pos:line="12" pos:column="33"/></name></name><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">sessionIdLen<pos:position pos:line="12" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="48">".session_id.body"<pos:position pos:line="12" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">tk<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">.<pos:position pos:line="13" pos:column="8"/></operator><name pos:line="13" pos:column="8">skip<pos:position pos:line="13" pos:column="12"/></name></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">challengeLen<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="27">".challenge.body"<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">hello<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">.<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">success<pos:position pos:line="14" pos:column="18"/></name></name><argument_list pos:line="14" pos:column="18">()<pos:position pos:line="14" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

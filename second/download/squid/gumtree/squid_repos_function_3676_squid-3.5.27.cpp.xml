<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3676_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">clientHttpsConnectionsOpen<pos:position pos:line="2" pos:column="27"/></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">void<pos:position pos:line="2" pos:column="32"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name><name pos:line="4" pos:column="10">AnyP<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">::<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">PortCfgPointer<pos:position pos:line="4" pos:column="30"/></name></name></type> <name pos:line="4" pos:column="31">s<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name pos:line="4" pos:column="35">HttpsPortList<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></init> <condition><expr><name pos:line="4" pos:column="50">s<pos:position pos:line="4" pos:column="51"/></name> <operator pos:line="4" pos:column="52">!=<pos:position pos:line="4" pos:column="54"/></operator> <name pos:line="4" pos:column="55">NULL<pos:position pos:line="4" pos:column="59"/></name></expr>;<pos:position pos:line="4" pos:column="60"/></condition> <incr><expr><name pos:line="4" pos:column="61">s<pos:position pos:line="4" pos:column="62"/></name> <operator pos:line="4" pos:column="63">=<pos:position pos:line="4" pos:column="64"/></operator> <name><name pos:line="4" pos:column="65">s<pos:position pos:line="4" pos:column="66"/></name><operator pos:line="4" pos:column="66">-&gt;<pos:position pos:line="4" pos:column="71"/></operator><name pos:line="4" pos:column="68">next<pos:position pos:line="4" pos:column="72"/></name></name></expr></incr>)<pos:position pos:line="4" pos:column="73"/></control> <block pos:line="4" pos:column="74">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">MAXTCPLISTENPORTS<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">==<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="34">NHttpSockets<pos:position pos:line="5" pos:column="46"/></name></expr>)<pos:position pos:line="5" pos:column="47"/></condition><then pos:line="5" pos:column="47"> <block pos:line="5" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="6" pos:column="13">debugs<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><literal type="number" pos:line="6" pos:column="20">1<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">DBG_IMPORTANT<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="38">"Ignoring 'https_port' lines exceeding the limit."<pos:position pos:line="6" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="90"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="7" pos:column="13">debugs<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><literal type="number" pos:line="7" pos:column="20">1<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">DBG_IMPORTANT<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="38">"The limit is "<pos:position pos:line="7" pos:column="53"/></literal> <operator pos:line="7" pos:column="54">&lt;&lt;<pos:position pos:line="7" pos:column="62"/></operator> <name pos:line="7" pos:column="57">MAXTCPLISTENPORTS<pos:position pos:line="7" pos:column="74"/></name> <operator pos:line="7" pos:column="75">&lt;&lt;<pos:position pos:line="7" pos:column="83"/></operator> <literal type="string" pos:line="7" pos:column="78">" HTTPS ports."<pos:position pos:line="7" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="95"/></expr_stmt>
            <continue pos:line="8" pos:column="13">continue;<pos:position pos:line="8" pos:column="22"/></continue>
        }<pos:position pos:line="9" pos:column="10"/></block></then></if>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">s<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">-&gt;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="17">staticSslContext<pos:position pos:line="11" pos:column="33"/></name></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <block pos:line="11" pos:column="35">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">debugs<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="number" pos:line="12" pos:column="20">1<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">DBG_IMPORTANT<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="38">"Ignoring https_port "<pos:position pos:line="12" pos:column="60"/></literal> <operator pos:line="12" pos:column="61">&lt;&lt;<pos:position pos:line="12" pos:column="69"/></operator> <name><name pos:line="12" pos:column="64">s<pos:position pos:line="12" pos:column="65"/></name><operator pos:line="12" pos:column="65">-&gt;<pos:position pos:line="12" pos:column="70"/></operator><name pos:line="12" pos:column="67">s<pos:position pos:line="12" pos:column="68"/></name></name> <operator pos:line="12" pos:column="69">&lt;&lt;<pos:position pos:line="12" pos:column="77"/></operator>
                   <literal type="string" pos:line="13" pos:column="20">" due to SSL initialization failure."<pos:position pos:line="13" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>
            <continue pos:line="14" pos:column="13">continue;<pos:position pos:line="14" pos:column="22"/></continue>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="17" pos:column="9">// TODO: merge with similar code in clientHttpConnectionsOpen()</comment>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">s<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">flags<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">.<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">tunnelSslBumping<pos:position pos:line="18" pos:column="38"/></name></name> <operator pos:line="18" pos:column="39">&amp;&amp;<pos:position pos:line="18" pos:column="49"/></operator> <operator pos:line="18" pos:column="42">!<pos:position pos:line="18" pos:column="43"/></operator><name><name pos:line="18" pos:column="43">Config<pos:position pos:line="18" pos:column="49"/></name><operator pos:line="18" pos:column="49">.<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="50">accessList<pos:position pos:line="18" pos:column="60"/></name><operator pos:line="18" pos:column="60">.<pos:position pos:line="18" pos:column="61"/></operator><name pos:line="18" pos:column="61">ssl_bump<pos:position pos:line="18" pos:column="69"/></name></name></expr>)<pos:position pos:line="18" pos:column="70"/></condition><then pos:line="18" pos:column="70"> <block pos:line="18" pos:column="71">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">debugs<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><literal type="number" pos:line="19" pos:column="20">33<pos:position pos:line="19" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="24">DBG_IMPORTANT<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="39">"WARNING: No ssl_bump configured. Disabling ssl-bump on "<pos:position pos:line="19" pos:column="96"/></literal> <operator pos:line="19" pos:column="97">&lt;&lt;<pos:position pos:line="19" pos:column="105"/></operator> <call><name><name pos:line="19" pos:column="100">AnyP<pos:position pos:line="19" pos:column="104"/></name><operator pos:line="19" pos:column="104">::<pos:position pos:line="19" pos:column="106"/></operator><name pos:line="19" pos:column="106">UriScheme<pos:position pos:line="19" pos:column="115"/></name></name><argument_list pos:line="19" pos:column="115">(<argument><expr><name><name pos:line="19" pos:column="116">s<pos:position pos:line="19" pos:column="117"/></name><operator pos:line="19" pos:column="117">-&gt;<pos:position pos:line="19" pos:column="122"/></operator><name pos:line="19" pos:column="119">transport<pos:position pos:line="19" pos:column="128"/></name><operator pos:line="19" pos:column="128">.<pos:position pos:line="19" pos:column="129"/></operator><name pos:line="19" pos:column="129">protocol<pos:position pos:line="19" pos:column="137"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="138"/></argument_list></call> <operator pos:line="19" pos:column="139">&lt;&lt;<pos:position pos:line="19" pos:column="147"/></operator> <literal type="string" pos:line="19" pos:column="142">"_port "<pos:position pos:line="19" pos:column="150"/></literal> <operator pos:line="19" pos:column="151">&lt;&lt;<pos:position pos:line="19" pos:column="159"/></operator> <name><name pos:line="19" pos:column="154">s<pos:position pos:line="19" pos:column="155"/></name><operator pos:line="19" pos:column="155">-&gt;<pos:position pos:line="19" pos:column="160"/></operator><name pos:line="19" pos:column="157">s<pos:position pos:line="19" pos:column="158"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="159"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="160"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="20" pos:column="13">s<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">flags<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">.<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">tunnelSslBumping<pos:position pos:line="20" pos:column="38"/></name></name> <operator pos:line="20" pos:column="39">=<pos:position pos:line="20" pos:column="40"/></operator> <literal type="boolean" pos:line="20" pos:column="41">false<pos:position pos:line="20" pos:column="46"/></literal></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">s<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">flags<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">.<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">tunnelSslBumping<pos:position pos:line="23" pos:column="38"/></name></name> <operator pos:line="23" pos:column="39">&amp;&amp;<pos:position pos:line="23" pos:column="49"/></operator> <operator pos:line="23" pos:column="42">!<pos:position pos:line="23" pos:column="43"/></operator><name><name pos:line="23" pos:column="43">s<pos:position pos:line="23" pos:column="44"/></name><operator pos:line="23" pos:column="44">-&gt;<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="46">staticSslContext<pos:position pos:line="23" pos:column="62"/></name></name> <operator pos:line="23" pos:column="63">&amp;&amp;<pos:position pos:line="23" pos:column="73"/></operator> <operator pos:line="23" pos:column="66">!<pos:position pos:line="23" pos:column="67"/></operator><name><name pos:line="23" pos:column="67">s<pos:position pos:line="23" pos:column="68"/></name><operator pos:line="23" pos:column="68">-&gt;<pos:position pos:line="23" pos:column="73"/></operator><name pos:line="23" pos:column="70">generateHostCertificates<pos:position pos:line="23" pos:column="94"/></name></name></expr>)<pos:position pos:line="23" pos:column="95"/></condition><then pos:line="23" pos:column="95"> <block pos:line="23" pos:column="96">{
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">debugs<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><literal type="number" pos:line="24" pos:column="20">1<pos:position pos:line="24" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="23">DBG_IMPORTANT<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="38">"Will not bump SSL at https_port "<pos:position pos:line="24" pos:column="72"/></literal> <operator pos:line="24" pos:column="73">&lt;&lt;<pos:position pos:line="24" pos:column="81"/></operator> <name><name pos:line="24" pos:column="76">s<pos:position pos:line="24" pos:column="77"/></name><operator pos:line="24" pos:column="77">-&gt;<pos:position pos:line="24" pos:column="82"/></operator><name pos:line="24" pos:column="79">s<pos:position pos:line="24" pos:column="80"/></name></name> <operator pos:line="24" pos:column="81">&lt;&lt;<pos:position pos:line="24" pos:column="89"/></operator> <literal type="string" pos:line="24" pos:column="84">" due to SSL initialization failure."<pos:position pos:line="24" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="123"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">s<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">flags<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">.<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">tunnelSslBumping<pos:position pos:line="25" pos:column="38"/></name></name> <operator pos:line="25" pos:column="39">=<pos:position pos:line="25" pos:column="40"/></operator> <literal type="boolean" pos:line="25" pos:column="41">false<pos:position pos:line="25" pos:column="46"/></literal></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name><name pos:line="28" pos:column="13">s<pos:position pos:line="28" pos:column="14"/></name><operator pos:line="28" pos:column="14">-&gt;<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="16">flags<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">.<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">tunnelSslBumping<pos:position pos:line="28" pos:column="38"/></name></name></expr>)<pos:position pos:line="28" pos:column="39"/></condition><then pos:line="28" pos:column="39"> <block pos:line="28" pos:column="40">{
            <comment type="line" pos:line="29" pos:column="13">// Create ssl_ctx cache for this port.</comment>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">Ssl<pos:position pos:line="30" pos:column="16"/></name><operator pos:line="30" pos:column="16">::<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">TheGlobalContextStorage<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">.<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="42">addLocalStorage<pos:position pos:line="30" pos:column="57"/></name></name><argument_list pos:line="30" pos:column="57">(<argument><expr><name><name pos:line="30" pos:column="58">s<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">-&gt;<pos:position pos:line="30" pos:column="64"/></operator><name pos:line="30" pos:column="61">s<pos:position pos:line="30" pos:column="62"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="30" pos:column="64">s<pos:position pos:line="30" pos:column="65"/></name><operator pos:line="30" pos:column="65">-&gt;<pos:position pos:line="30" pos:column="70"/></operator><name pos:line="30" pos:column="67">dynamicCertMemCacheSize<pos:position pos:line="30" pos:column="90"/></name></name> <operator pos:line="30" pos:column="91">==<pos:position pos:line="30" pos:column="93"/></operator> <call><name><name pos:line="30" pos:column="94">std<pos:position pos:line="30" pos:column="97"/></name><operator pos:line="30" pos:column="97">::<pos:position pos:line="30" pos:column="99"/></operator><name><name pos:line="30" pos:column="99">numeric_limits<pos:position pos:line="30" pos:column="113"/></name><argument_list type="generic" pos:line="30" pos:column="113">&lt;<argument><expr><name pos:line="30" pos:column="114">size_t<pos:position pos:line="30" pos:column="120"/></name></expr></argument>&gt;<pos:position pos:line="30" pos:column="124"/></argument_list></name><operator pos:line="30" pos:column="121">::<pos:position pos:line="30" pos:column="123"/></operator><name pos:line="30" pos:column="123">max<pos:position pos:line="30" pos:column="126"/></name></name><argument_list pos:line="30" pos:column="126">()<pos:position pos:line="30" pos:column="128"/></argument_list></call></expr> ?<pos:position pos:line="30" pos:column="130"/></condition><then pos:line="30" pos:column="130"> <expr><literal type="number" pos:line="30" pos:column="131">4194304<pos:position pos:line="30" pos:column="138"/></literal></expr> <pos:position pos:line="30" pos:column="139"/></then><else pos:line="30" pos:column="139">: <expr><name><name pos:line="30" pos:column="141">s<pos:position pos:line="30" pos:column="142"/></name><operator pos:line="30" pos:column="142">-&gt;<pos:position pos:line="30" pos:column="147"/></operator><name pos:line="30" pos:column="144">dynamicCertMemCacheSize<pos:position pos:line="30" pos:column="167"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="30" pos:column="168"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="169"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="33" pos:column="9">// Fill out a Comm::Connection which IPC will open as a listener for us</comment>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">s<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">listenConn<pos:position pos:line="34" pos:column="22"/></name></name> <operator pos:line="34" pos:column="23">=<pos:position pos:line="34" pos:column="24"/></operator> <operator pos:line="34" pos:column="25">new<pos:position pos:line="34" pos:column="28"/></operator> <name><name pos:line="34" pos:column="29">Comm<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">::<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">Connection<pos:position pos:line="34" pos:column="45"/></name></name></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">s<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">listenConn<pos:position pos:line="35" pos:column="22"/></name><operator pos:line="35" pos:column="22">-&gt;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="24">local<pos:position pos:line="35" pos:column="29"/></name></name> <operator pos:line="35" pos:column="30">=<pos:position pos:line="35" pos:column="31"/></operator> <name><name pos:line="35" pos:column="32">s<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">-&gt;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="35">s<pos:position pos:line="35" pos:column="36"/></name></name></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">s<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">listenConn<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">flags<pos:position pos:line="36" pos:column="29"/></name></name> <operator pos:line="36" pos:column="30">=<pos:position pos:line="36" pos:column="31"/></operator> <name pos:line="36" pos:column="32">COMM_NONBLOCKING<pos:position pos:line="36" pos:column="48"/></name> <operator pos:line="36" pos:column="49">|<pos:position pos:line="36" pos:column="50"/></operator> <operator pos:line="36" pos:column="51">(<pos:position pos:line="36" pos:column="52"/></operator><ternary><condition><expr><name><name pos:line="36" pos:column="52">s<pos:position pos:line="36" pos:column="53"/></name><operator pos:line="36" pos:column="53">-&gt;<pos:position pos:line="36" pos:column="58"/></operator><name pos:line="36" pos:column="55">flags<pos:position pos:line="36" pos:column="60"/></name><operator pos:line="36" pos:column="60">.<pos:position pos:line="36" pos:column="61"/></operator><name pos:line="36" pos:column="61">tproxyIntercept<pos:position pos:line="36" pos:column="76"/></name></name></expr> ?<pos:position pos:line="36" pos:column="78"/></condition><then pos:line="36" pos:column="78"> <expr><name pos:line="36" pos:column="79">COMM_TRANSPARENT<pos:position pos:line="36" pos:column="95"/></name></expr> <pos:position pos:line="36" pos:column="96"/></then><else pos:line="36" pos:column="96">: <expr><literal type="number" pos:line="36" pos:column="98">0<pos:position pos:line="36" pos:column="99"/></literal></expr></else></ternary><operator pos:line="36" pos:column="99">)<pos:position pos:line="36" pos:column="100"/></operator> <operator pos:line="36" pos:column="101">|<pos:position pos:line="36" pos:column="102"/></operator>
                               <operator pos:line="37" pos:column="32">(<pos:position pos:line="37" pos:column="33"/></operator><ternary><condition><expr><name><name pos:line="37" pos:column="33">s<pos:position pos:line="37" pos:column="34"/></name><operator pos:line="37" pos:column="34">-&gt;<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="36">flags<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">.<pos:position pos:line="37" pos:column="42"/></operator><name pos:line="37" pos:column="42">natIntercept<pos:position pos:line="37" pos:column="54"/></name></name></expr> ?<pos:position pos:line="37" pos:column="56"/></condition><then pos:line="37" pos:column="56"> <expr><name pos:line="37" pos:column="57">COMM_INTERCEPTION<pos:position pos:line="37" pos:column="74"/></name></expr> <pos:position pos:line="37" pos:column="75"/></then><else pos:line="37" pos:column="75">: <expr><literal type="number" pos:line="37" pos:column="77">0<pos:position pos:line="37" pos:column="78"/></literal></expr></else></ternary><operator pos:line="37" pos:column="78">)<pos:position pos:line="37" pos:column="79"/></operator></expr>;<pos:position pos:line="37" pos:column="80"/></expr_stmt>

        <comment type="line" pos:line="39" pos:column="9">// setup the subscriptions such that new connections accepted by listenConn are handled by HTTPS</comment>
        <typedef pos:line="40" pos:column="9">typedef <type><name><name pos:line="40" pos:column="17">CommCbFunPtrCallT<pos:position pos:line="40" pos:column="34"/></name><argument_list type="generic" pos:line="40" pos:column="34">&lt;<argument><expr><name pos:line="40" pos:column="35">CommAcceptCbPtrFun<pos:position pos:line="40" pos:column="53"/></name></expr></argument>&gt;<pos:position pos:line="40" pos:column="57"/></argument_list></name></type> <name pos:line="40" pos:column="55">AcceptCall<pos:position pos:line="40" pos:column="65"/></name>;<pos:position pos:line="40" pos:column="66"/></typedef>
        <decl_stmt><decl><type><name><name pos:line="41" pos:column="9">RefCount<pos:position pos:line="41" pos:column="17"/></name><argument_list type="generic" pos:line="41" pos:column="17">&lt;<argument><expr><name pos:line="41" pos:column="18">AcceptCall<pos:position pos:line="41" pos:column="28"/></name></expr></argument>&gt;<pos:position pos:line="41" pos:column="32"/></argument_list></name></type> <name pos:line="41" pos:column="30">subCall<pos:position pos:line="41" pos:column="37"/></name> <init pos:line="41" pos:column="38">= <expr><call><name pos:line="41" pos:column="40">commCbCall<pos:position pos:line="41" pos:column="50"/></name><argument_list pos:line="41" pos:column="50">(<argument><expr><literal type="number" pos:line="41" pos:column="51">5<pos:position pos:line="41" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="54">5<pos:position pos:line="41" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="57">"httpsAccept"<pos:position pos:line="41" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="72">CommAcceptCbPtrFun<pos:position pos:line="41" pos:column="90"/></name><argument_list pos:line="41" pos:column="90">(<argument><expr><name pos:line="41" pos:column="91">httpsAccept<pos:position pos:line="41" pos:column="102"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="104">CommAcceptCbParams<pos:position pos:line="41" pos:column="122"/></name><argument_list pos:line="41" pos:column="122">(<argument><expr><name pos:line="41" pos:column="123">NULL<pos:position pos:line="41" pos:column="127"/></name></expr></argument>)<pos:position pos:line="41" pos:column="128"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="129"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="130"/></argument_list></call></expr></init></decl>;<pos:position pos:line="41" pos:column="131"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="42" pos:column="9">Subscription<pos:position pos:line="42" pos:column="21"/></name><operator pos:line="42" pos:column="21">::<pos:position pos:line="42" pos:column="23"/></operator><name pos:line="42" pos:column="23">Pointer<pos:position pos:line="42" pos:column="30"/></name></name></type> <name pos:line="42" pos:column="31">sub<pos:position pos:line="42" pos:column="34"/></name> <init pos:line="42" pos:column="35">= <expr><operator pos:line="42" pos:column="37">new<pos:position pos:line="42" pos:column="40"/></operator> <call><name><name pos:line="42" pos:column="41">CallSubscription<pos:position pos:line="42" pos:column="57"/></name><argument_list type="generic" pos:line="42" pos:column="57">&lt;<argument><expr><name pos:line="42" pos:column="58">AcceptCall<pos:position pos:line="42" pos:column="68"/></name></expr></argument>&gt;<pos:position pos:line="42" pos:column="72"/></argument_list></name><argument_list pos:line="42" pos:column="69">(<argument><expr><name pos:line="42" pos:column="70">subCall<pos:position pos:line="42" pos:column="77"/></name></expr></argument>)<pos:position pos:line="42" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="42" pos:column="79"/></decl_stmt>

        <decl_stmt><decl><type><name><name pos:line="44" pos:column="9">AsyncCall<pos:position pos:line="44" pos:column="18"/></name><operator pos:line="44" pos:column="18">::<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="20">Pointer<pos:position pos:line="44" pos:column="27"/></name></name></type> <name pos:line="44" pos:column="28">listenCall<pos:position pos:line="44" pos:column="38"/></name> <init pos:line="44" pos:column="39">= <expr><call><name pos:line="44" pos:column="41">asyncCall<pos:position pos:line="44" pos:column="50"/></name><argument_list pos:line="44" pos:column="50">(<argument><expr><literal type="number" pos:line="44" pos:column="51">33<pos:position pos:line="44" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="55">2<pos:position pos:line="44" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="58">"clientListenerConnectionOpened"<pos:position pos:line="44" pos:column="90"/></literal></expr></argument>,
                                        <argument><expr><call><name pos:line="45" pos:column="41">ListeningStartedDialer<pos:position pos:line="45" pos:column="63"/></name><argument_list pos:line="45" pos:column="63">(<argument><expr><operator pos:line="45" pos:column="64">&amp;<pos:position pos:line="45" pos:column="69"/></operator><name pos:line="45" pos:column="65">clientListenerConnectionOpened<pos:position pos:line="45" pos:column="95"/></name></expr></argument>,
                                                <argument><expr><name pos:line="46" pos:column="49">s<pos:position pos:line="46" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="52">Ipc<pos:position pos:line="46" pos:column="55"/></name><operator pos:line="46" pos:column="55">::<pos:position pos:line="46" pos:column="57"/></operator><name pos:line="46" pos:column="57">fdnHttpsSocket<pos:position pos:line="46" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="73">sub<pos:position pos:line="46" pos:column="76"/></name></expr></argument>)<pos:position pos:line="46" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="79"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="47" pos:column="9">Ipc<pos:position pos:line="47" pos:column="12"/></name><operator pos:line="47" pos:column="12">::<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">StartListening<pos:position pos:line="47" pos:column="28"/></name></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">SOCK_STREAM<pos:position pos:line="47" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="42">IPPROTO_TCP<pos:position pos:line="47" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="55">s<pos:position pos:line="47" pos:column="56"/></name><operator pos:line="47" pos:column="56">-&gt;<pos:position pos:line="47" pos:column="61"/></operator><name pos:line="47" pos:column="58">listenConn<pos:position pos:line="47" pos:column="68"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="70">Ipc<pos:position pos:line="47" pos:column="73"/></name><operator pos:line="47" pos:column="73">::<pos:position pos:line="47" pos:column="75"/></operator><name pos:line="47" pos:column="75">fdnHttpsSocket<pos:position pos:line="47" pos:column="89"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="91">listenCall<pos:position pos:line="47" pos:column="101"/></name></expr></argument>)<pos:position pos:line="47" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="103"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">HttpSockets<pos:position pos:line="48" pos:column="20"/></name><index pos:line="48" pos:column="20">[<expr><name pos:line="48" pos:column="21">NHttpSockets<pos:position pos:line="48" pos:column="33"/></name></expr>]<pos:position pos:line="48" pos:column="34"/></index></name> <operator pos:line="48" pos:column="35">=<pos:position pos:line="48" pos:column="36"/></operator> <operator pos:line="48" pos:column="37">-<pos:position pos:line="48" pos:column="38"/></operator><literal type="number" pos:line="48" pos:column="38">1<pos:position pos:line="48" pos:column="39"/></literal></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="49" pos:column="9">++<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">NHttpSockets<pos:position pos:line="49" pos:column="23"/></name></expr>;<pos:position pos:line="49" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></for>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

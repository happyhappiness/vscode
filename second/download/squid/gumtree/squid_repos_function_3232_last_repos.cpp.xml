<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3232_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">Ip<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Address<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">compareWhole<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name><name pos:line="2" pos:column="33">Ip<pos:position pos:line="2" pos:column="35"/></name><operator pos:line="2" pos:column="35">::<pos:position pos:line="2" pos:column="37"/></operator><name pos:line="2" pos:column="37">Address<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">&amp;<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="46">rhs<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list> <specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier>
<block pos:line="3" pos:column="1">{
    <return pos:line="4" pos:column="5">return <expr><call><name pos:line="4" pos:column="12">memcmp<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">(<argument><expr><name pos:line="4" pos:column="19">this<pos:position pos:line="4" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="25">&amp;<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="26">rhs<pos:position pos:line="4" pos:column="29"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="31">sizeof<argument_list pos:line="4" pos:column="37">(<argument><expr><operator pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">this<pos:position pos:line="4" pos:column="43"/></name></expr></argument>)<pos:position pos:line="4" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="46"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6878_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">ntlm_unpack_auth<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">ntlm_authenticate<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">auth<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">char<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">user<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">char<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="67">domain<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="75">const<pos:position pos:line="2" pos:column="80"/></specifier> <name pos:line="2" pos:column="81">int32_t<pos:position pos:line="2" pos:column="88"/></name></type> <name pos:line="2" pos:column="89">size<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="94"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">lstring<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">rv<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">ntlm_validate_packet<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">(<argument><expr><operator pos:line="6" pos:column="30">&amp;<pos:position pos:line="6" pos:column="35"/></operator><name><name pos:line="6" pos:column="31">auth<pos:position pos:line="6" pos:column="35"/></name><operator pos:line="6" pos:column="35">-&gt;<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="37">hdr<pos:position pos:line="6" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="42">NTLM_AUTHENTICATE<pos:position pos:line="6" pos:column="59"/></name></expr></argument>)<pos:position pos:line="6" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="61"/></condition><then pos:line="6" pos:column="61"> <block pos:line="6" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">fprintf<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">stderr<pos:position pos:line="7" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="25">"ntlm_unpack_auth: header check fails\n"<pos:position pos:line="7" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="67"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">NTLM_ERR_PROTOCOL<pos:position pos:line="8" pos:column="33"/></name></expr>;<pos:position pos:line="8" pos:column="34"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debug<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">(<argument><expr><literal type="string" pos:line="10" pos:column="11">"ntlm_unpack_auth: size of %d\n"<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="45">size<pos:position pos:line="10" pos:column="49"/></name></expr></argument>)<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debug<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><literal type="string" pos:line="11" pos:column="11">"ntlm_unpack_auth: flg %08x\n"<pos:position pos:line="11" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="43">auth<pos:position pos:line="11" pos:column="47"/></name><operator pos:line="11" pos:column="47">-&gt;<pos:position pos:line="11" pos:column="52"/></operator><name pos:line="11" pos:column="49">flags<pos:position pos:line="11" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debug<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><literal type="string" pos:line="12" pos:column="11">"ntlm_unpack_auth: lmr o(%d) l(%d)\n"<pos:position pos:line="12" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="50">le32toh<pos:position pos:line="12" pos:column="57"/></name><argument_list pos:line="12" pos:column="57">(<argument><expr><name><name pos:line="12" pos:column="58">auth<pos:position pos:line="12" pos:column="62"/></name><operator pos:line="12" pos:column="62">-&gt;<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="64">lmresponse<pos:position pos:line="12" pos:column="74"/></name><operator pos:line="12" pos:column="74">.<pos:position pos:line="12" pos:column="75"/></operator><name pos:line="12" pos:column="75">offset<pos:position pos:line="12" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="84">auth<pos:position pos:line="12" pos:column="88"/></name><operator pos:line="12" pos:column="88">-&gt;<pos:position pos:line="12" pos:column="93"/></operator><name pos:line="12" pos:column="90">lmresponse<pos:position pos:line="12" pos:column="100"/></name><operator pos:line="12" pos:column="100">.<pos:position pos:line="12" pos:column="101"/></operator><name pos:line="12" pos:column="101">len<pos:position pos:line="12" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="106"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debug<pos:position pos:line="13" pos:column="10"/></name><argument_list pos:line="13" pos:column="10">(<argument><expr><literal type="string" pos:line="13" pos:column="11">"ntlm_unpack_auth: ntr o(%d) l(%d)\n"<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="50">le32toh<pos:position pos:line="13" pos:column="57"/></name><argument_list pos:line="13" pos:column="57">(<argument><expr><name><name pos:line="13" pos:column="58">auth<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">-&gt;<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="64">ntresponse<pos:position pos:line="13" pos:column="74"/></name><operator pos:line="13" pos:column="74">.<pos:position pos:line="13" pos:column="75"/></operator><name pos:line="13" pos:column="75">offset<pos:position pos:line="13" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="84">auth<pos:position pos:line="13" pos:column="88"/></name><operator pos:line="13" pos:column="88">-&gt;<pos:position pos:line="13" pos:column="93"/></operator><name pos:line="13" pos:column="90">ntresponse<pos:position pos:line="13" pos:column="100"/></name><operator pos:line="13" pos:column="100">.<pos:position pos:line="13" pos:column="101"/></operator><name pos:line="13" pos:column="101">len<pos:position pos:line="13" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="106"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debug<pos:position pos:line="14" pos:column="10"/></name><argument_list pos:line="14" pos:column="10">(<argument><expr><literal type="string" pos:line="14" pos:column="11">"ntlm_unpack_auth: dom o(%d) l(%d)\n"<pos:position pos:line="14" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="50">le32toh<pos:position pos:line="14" pos:column="57"/></name><argument_list pos:line="14" pos:column="57">(<argument><expr><name><name pos:line="14" pos:column="58">auth<pos:position pos:line="14" pos:column="62"/></name><operator pos:line="14" pos:column="62">-&gt;<pos:position pos:line="14" pos:column="67"/></operator><name pos:line="14" pos:column="64">domain<pos:position pos:line="14" pos:column="70"/></name><operator pos:line="14" pos:column="70">.<pos:position pos:line="14" pos:column="71"/></operator><name pos:line="14" pos:column="71">offset<pos:position pos:line="14" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="80">auth<pos:position pos:line="14" pos:column="84"/></name><operator pos:line="14" pos:column="84">-&gt;<pos:position pos:line="14" pos:column="89"/></operator><name pos:line="14" pos:column="86">domain<pos:position pos:line="14" pos:column="92"/></name><operator pos:line="14" pos:column="92">.<pos:position pos:line="14" pos:column="93"/></operator><name pos:line="14" pos:column="93">len<pos:position pos:line="14" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="98"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debug<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="string" pos:line="15" pos:column="11">"ntlm_unpack_auth: usr o(%d) l(%d)\n"<pos:position pos:line="15" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="50">le32toh<pos:position pos:line="15" pos:column="57"/></name><argument_list pos:line="15" pos:column="57">(<argument><expr><name><name pos:line="15" pos:column="58">auth<pos:position pos:line="15" pos:column="62"/></name><operator pos:line="15" pos:column="62">-&gt;<pos:position pos:line="15" pos:column="67"/></operator><name pos:line="15" pos:column="64">user<pos:position pos:line="15" pos:column="68"/></name><operator pos:line="15" pos:column="68">.<pos:position pos:line="15" pos:column="69"/></operator><name pos:line="15" pos:column="69">offset<pos:position pos:line="15" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="78">auth<pos:position pos:line="15" pos:column="82"/></name><operator pos:line="15" pos:column="82">-&gt;<pos:position pos:line="15" pos:column="87"/></operator><name pos:line="15" pos:column="84">user<pos:position pos:line="15" pos:column="88"/></name><operator pos:line="15" pos:column="88">.<pos:position pos:line="15" pos:column="89"/></operator><name pos:line="15" pos:column="89">len<pos:position pos:line="15" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="94"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debug<pos:position pos:line="16" pos:column="10"/></name><argument_list pos:line="16" pos:column="10">(<argument><expr><literal type="string" pos:line="16" pos:column="11">"ntlm_unpack_auth: wst o(%d) l(%d)\n"<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="16" pos:column="50">le32toh<pos:position pos:line="16" pos:column="57"/></name><argument_list pos:line="16" pos:column="57">(<argument><expr><name><name pos:line="16" pos:column="58">auth<pos:position pos:line="16" pos:column="62"/></name><operator pos:line="16" pos:column="62">-&gt;<pos:position pos:line="16" pos:column="67"/></operator><name pos:line="16" pos:column="64">workstation<pos:position pos:line="16" pos:column="75"/></name><operator pos:line="16" pos:column="75">.<pos:position pos:line="16" pos:column="76"/></operator><name pos:line="16" pos:column="76">offset<pos:position pos:line="16" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="85">auth<pos:position pos:line="16" pos:column="89"/></name><operator pos:line="16" pos:column="89">-&gt;<pos:position pos:line="16" pos:column="94"/></operator><name pos:line="16" pos:column="91">workstation<pos:position pos:line="16" pos:column="102"/></name><operator pos:line="16" pos:column="102">.<pos:position pos:line="16" pos:column="103"/></operator><name pos:line="16" pos:column="103">len<pos:position pos:line="16" pos:column="106"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="108"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debug<pos:position pos:line="17" pos:column="10"/></name><argument_list pos:line="17" pos:column="10">(<argument><expr><literal type="string" pos:line="17" pos:column="11">"ntlm_unpack_auth: key o(%d) l(%d)\n"<pos:position pos:line="17" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="50">le32toh<pos:position pos:line="17" pos:column="57"/></name><argument_list pos:line="17" pos:column="57">(<argument><expr><name><name pos:line="17" pos:column="58">auth<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">sessionkey<pos:position pos:line="17" pos:column="74"/></name><operator pos:line="17" pos:column="74">.<pos:position pos:line="17" pos:column="75"/></operator><name pos:line="17" pos:column="75">offset<pos:position pos:line="17" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="84">auth<pos:position pos:line="17" pos:column="88"/></name><operator pos:line="17" pos:column="88">-&gt;<pos:position pos:line="17" pos:column="93"/></operator><name pos:line="17" pos:column="90">sessionkey<pos:position pos:line="17" pos:column="100"/></name><operator pos:line="17" pos:column="100">.<pos:position pos:line="17" pos:column="101"/></operator><name pos:line="17" pos:column="101">len<pos:position pos:line="17" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="106"/></expr_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">rv<pos:position pos:line="19" pos:column="7"/></name> <operator pos:line="19" pos:column="8">=<pos:position pos:line="19" pos:column="9"/></operator> <call><name pos:line="19" pos:column="10">ntlm_fetch_string<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><operator pos:line="19" pos:column="28">&amp;<pos:position pos:line="19" pos:column="33"/></operator><name><name pos:line="19" pos:column="29">auth<pos:position pos:line="19" pos:column="33"/></name><operator pos:line="19" pos:column="33">-&gt;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="35">hdr<pos:position pos:line="19" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="40">size<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="46">&amp;<pos:position pos:line="19" pos:column="51"/></operator><name><name pos:line="19" pos:column="47">auth<pos:position pos:line="19" pos:column="51"/></name><operator pos:line="19" pos:column="51">-&gt;<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="53">domain<pos:position pos:line="19" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="61">auth<pos:position pos:line="19" pos:column="65"/></name><operator pos:line="19" pos:column="65">-&gt;<pos:position pos:line="19" pos:column="70"/></operator><name pos:line="19" pos:column="67">flags<pos:position pos:line="19" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="74"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">rv<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">l<pos:position pos:line="20" pos:column="13"/></name></name> <operator pos:line="20" pos:column="14">&gt;<pos:position pos:line="20" pos:column="18"/></operator> <literal type="number" pos:line="20" pos:column="16">0<pos:position pos:line="20" pos:column="17"/></literal></expr>)<pos:position pos:line="20" pos:column="18"/></condition><then pos:line="20" pos:column="18"> <block pos:line="20" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">memcpy<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">domain<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="24">rv<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">.<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">str<pos:position pos:line="21" pos:column="30"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="32">rv<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">.<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">l<pos:position pos:line="21" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">domain<pos:position pos:line="22" pos:column="15"/></name><index pos:line="22" pos:column="15">[<expr><name><name pos:line="22" pos:column="16">rv<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">l<pos:position pos:line="22" pos:column="20"/></name></name></expr>]<pos:position pos:line="22" pos:column="21"/></index></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <literal type="char" pos:line="22" pos:column="24">'\0'<pos:position pos:line="22" pos:column="28"/></literal></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debug<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><literal type="string" pos:line="23" pos:column="15">"ntlm_unpack_auth: Domain '%s' (len=%d).\n"<pos:position pos:line="23" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="60">domain<pos:position pos:line="23" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="68">rv<pos:position pos:line="23" pos:column="70"/></name><operator pos:line="23" pos:column="70">.<pos:position pos:line="23" pos:column="71"/></operator><name pos:line="23" pos:column="71">l<pos:position pos:line="23" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">rv<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">.<pos:position pos:line="25" pos:column="12"/></operator><name pos:line="25" pos:column="12">l<pos:position pos:line="25" pos:column="13"/></name></name> <operator pos:line="25" pos:column="14">&gt;=<pos:position pos:line="25" pos:column="19"/></operator> <name pos:line="25" pos:column="17">size<pos:position pos:line="25" pos:column="21"/></name></expr>)<pos:position pos:line="25" pos:column="22"/></condition><then pos:line="25" pos:column="22"> <block pos:line="25" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">debug<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><literal type="string" pos:line="26" pos:column="15">"ntlm_unpack_auth: Domain length %d too big for %d byte packet.\n"<pos:position pos:line="26" pos:column="81"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="83">rv<pos:position pos:line="26" pos:column="85"/></name><operator pos:line="26" pos:column="85">.<pos:position pos:line="26" pos:column="86"/></operator><name pos:line="26" pos:column="86">l<pos:position pos:line="26" pos:column="87"/></name></name></expr></argument> , <argument><expr><name pos:line="26" pos:column="90">size<pos:position pos:line="26" pos:column="94"/></name></expr></argument>)<pos:position pos:line="26" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="96"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NTLM_ERR_BLOB<pos:position pos:line="27" pos:column="29"/></name></expr>;<pos:position pos:line="27" pos:column="30"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="30" pos:column="5">rv<pos:position pos:line="30" pos:column="7"/></name> <operator pos:line="30" pos:column="8">=<pos:position pos:line="30" pos:column="9"/></operator> <call><name pos:line="30" pos:column="10">ntlm_fetch_string<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><operator pos:line="30" pos:column="28">&amp;<pos:position pos:line="30" pos:column="33"/></operator><name><name pos:line="30" pos:column="29">auth<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">hdr<pos:position pos:line="30" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">size<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="46">&amp;<pos:position pos:line="30" pos:column="51"/></operator><name><name pos:line="30" pos:column="47">auth<pos:position pos:line="30" pos:column="51"/></name><operator pos:line="30" pos:column="51">-&gt;<pos:position pos:line="30" pos:column="56"/></operator><name pos:line="30" pos:column="53">user<pos:position pos:line="30" pos:column="57"/></name></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="59">auth<pos:position pos:line="30" pos:column="63"/></name><operator pos:line="30" pos:column="63">-&gt;<pos:position pos:line="30" pos:column="68"/></operator><name pos:line="30" pos:column="65">flags<pos:position pos:line="30" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="72"/></expr_stmt>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">rv<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">l<pos:position pos:line="31" pos:column="13"/></name></name> <operator pos:line="31" pos:column="14">&gt;<pos:position pos:line="31" pos:column="18"/></operator> <literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>)<pos:position pos:line="31" pos:column="18"/></condition><then pos:line="31" pos:column="18"> <block pos:line="31" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">memcpy<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><name pos:line="32" pos:column="16">user<pos:position pos:line="32" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="22">rv<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">.<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="25">str<pos:position pos:line="32" pos:column="28"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="30">rv<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">.<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">l<pos:position pos:line="32" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">user<pos:position pos:line="33" pos:column="13"/></name><index pos:line="33" pos:column="13">[<expr><name><name pos:line="33" pos:column="14">rv<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">.<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="17">l<pos:position pos:line="33" pos:column="18"/></name></name></expr>]<pos:position pos:line="33" pos:column="19"/></index></name> <operator pos:line="33" pos:column="20">=<pos:position pos:line="33" pos:column="21"/></operator> <literal type="char" pos:line="33" pos:column="22">'\0'<pos:position pos:line="33" pos:column="26"/></literal></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">debug<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><literal type="string" pos:line="34" pos:column="15">"ntlm_unpack_auth: Username '%s' (len=%d).\n"<pos:position pos:line="34" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="62">user<pos:position pos:line="34" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="68">rv<pos:position pos:line="34" pos:column="70"/></name><operator pos:line="34" pos:column="70">.<pos:position pos:line="34" pos:column="71"/></operator><name pos:line="34" pos:column="71">l<pos:position pos:line="34" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then> <else pos:line="35" pos:column="7">else
        <block type="pseudo"><return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">NTLM_ERR_LOGON<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></return></block></else></if>

    <return pos:line="38" pos:column="5">return <expr><name pos:line="38" pos:column="12">NTLM_ERR_NONE<pos:position pos:line="38" pos:column="25"/></name></expr>;<pos:position pos:line="38" pos:column="26"/></return>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

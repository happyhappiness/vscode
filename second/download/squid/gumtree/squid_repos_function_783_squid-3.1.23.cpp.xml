<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_783_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">MemBuf<pos:position pos:line="1" pos:column="7"/></name> <modifier pos:line="1" pos:column="8">*<pos:position pos:line="1" pos:column="9"/></modifier></type>
<name pos:line="2" pos:column="1">httpPackedReply<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">http_status<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">status<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">ctype<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">int64_t<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">clen<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="70">time_t<pos:position pos:line="2" pos:column="76"/></name></type> <name pos:line="2" pos:column="77">lmt<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="82">time_t<pos:position pos:line="2" pos:column="88"/></name></type> <name pos:line="2" pos:column="89">expires<pos:position pos:line="2" pos:column="96"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="97"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpReply<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">rep<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><operator pos:line="4" pos:column="22">new<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="26">HttpReply<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">rep<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">-&gt;<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="10">setHeaders<pos:position pos:line="5" pos:column="20"/></name></name><argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">status<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="29">ctype<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">NULL<pos:position pos:line="5" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="42">clen<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="48">lmt<pos:position pos:line="5" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="53">expires<pos:position pos:line="5" pos:column="60"/></name></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="62"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">MemBuf<pos:position pos:line="6" pos:column="11"/></name> <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier></type><name pos:line="6" pos:column="13">mb<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><call><name><name pos:line="6" pos:column="18">rep<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">pack<pos:position pos:line="6" pos:column="27"/></name></name><argument_list pos:line="6" pos:column="27">()<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="30"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="7" pos:column="5">delete<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">rep<pos:position pos:line="7" pos:column="15"/></name></expr>;<pos:position pos:line="7" pos:column="16"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">mb<pos:position pos:line="8" pos:column="14"/></name></expr>;<pos:position pos:line="8" pos:column="15"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_26_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name><name pos:line="2" pos:column="22">argv<pos:position pos:line="2" pos:column="26"/></name><index pos:line="2" pos:column="26">[]<pos:position pos:line="2" pos:column="28"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">conn<pos:position pos:line="4" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="15">c<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="18">len<pos:position pos:line="4" pos:column="21"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="23">bytesWritten<pos:position pos:line="4" pos:column="35"/></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">port<pos:position pos:line="5" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="15">to_stdout<pos:position pos:line="5" pos:column="24"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="26">reload<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ping<pos:position pos:line="6" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="15">pcount<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">keep_alive<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">opt_noaccept<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">opt_verbose<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">hostname<pos:position pos:line="10" pos:column="25"/></name></decl>, <modifier pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></modifier><decl><type ref="prev"/><name pos:line="10" pos:column="28">localhost<pos:position pos:line="10" pos:column="37"/></name></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">IpAddress<pos:position pos:line="11" pos:column="14"/></name></type> <name pos:line="11" pos:column="15">iaddr<pos:position pos:line="11" pos:column="20"/></name></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name></type> <name><name pos:line="12" pos:column="10">url<pos:position pos:line="12" pos:column="13"/></name><index pos:line="12" pos:column="13">[<expr><name pos:line="12" pos:column="14">BUFSIZ<pos:position pos:line="12" pos:column="20"/></name></expr>]<pos:position pos:line="12" pos:column="21"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="12" pos:column="23">msg<pos:position pos:line="12" pos:column="26"/></name><index pos:line="12" pos:column="26">[<expr><name pos:line="12" pos:column="27">MESSAGELEN<pos:position pos:line="12" pos:column="37"/></name></expr>]<pos:position pos:line="12" pos:column="38"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="12" pos:column="40">buf<pos:position pos:line="12" pos:column="43"/></name><index pos:line="12" pos:column="43">[<expr><name pos:line="12" pos:column="44">BUFSIZ<pos:position pos:line="12" pos:column="50"/></name></expr>]<pos:position pos:line="12" pos:column="51"/></index></name></decl>;<pos:position pos:line="12" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name></type> <name><name pos:line="13" pos:column="10">extra_hdrs<pos:position pos:line="13" pos:column="20"/></name><index pos:line="13" pos:column="20">[<expr><name pos:line="13" pos:column="21">HEADERLEN<pos:position pos:line="13" pos:column="30"/></name></expr>]<pos:position pos:line="13" pos:column="31"/></index></name></decl>;<pos:position pos:line="13" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">char<pos:position pos:line="14" pos:column="15"/></name> <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier></type><name pos:line="14" pos:column="17">method<pos:position pos:line="14" pos:column="23"/></name> <init pos:line="14" pos:column="24">= <expr><literal type="string" pos:line="14" pos:column="26">"GET"<pos:position pos:line="14" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="15" pos:column="5">extern<pos:position pos:line="15" pos:column="11"/></specifier> <type><name pos:line="15" pos:column="12">char<pos:position pos:line="15" pos:column="16"/></name> <modifier pos:line="15" pos:column="17">*<pos:position pos:line="15" pos:column="18"/></modifier></type><name pos:line="15" pos:column="18">optarg<pos:position pos:line="15" pos:column="24"/></name></decl>;<pos:position pos:line="15" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">time_t<pos:position pos:line="16" pos:column="11"/></name></type> <name pos:line="16" pos:column="12">ims<pos:position pos:line="16" pos:column="15"/></name> <init pos:line="16" pos:column="16">= <expr><literal type="number" pos:line="16" pos:column="18">0<pos:position pos:line="16" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">max_forwards<pos:position pos:line="17" pos:column="21"/></name> <init pos:line="17" pos:column="22">= <expr><operator pos:line="17" pos:column="24">-<pos:position pos:line="17" pos:column="25"/></operator><literal type="number" pos:line="17" pos:column="25">1<pos:position pos:line="17" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="27"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="19" pos:column="5">struct<pos:position pos:line="19" pos:column="11"/></name> <name pos:line="19" pos:column="12">timeval<pos:position pos:line="19" pos:column="19"/></name></name></type> <name pos:line="19" pos:column="20">tv1<pos:position pos:line="19" pos:column="23"/></name></decl>, <decl><type ref="prev"/><name pos:line="19" pos:column="25">tv2<pos:position pos:line="19" pos:column="28"/></name></decl>;<pos:position pos:line="19" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">i<pos:position pos:line="20" pos:column="10"/></name> <init pos:line="20" pos:column="11">= <expr><literal type="number" pos:line="20" pos:column="13">0<pos:position pos:line="20" pos:column="14"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="20" pos:column="16">loops<pos:position pos:line="20" pos:column="21"/></name></decl>;<pos:position pos:line="20" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">long<pos:position pos:line="21" pos:column="9"/></name></type> <name pos:line="21" pos:column="10">ping_int<pos:position pos:line="21" pos:column="18"/></name></decl>;<pos:position pos:line="21" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">long<pos:position pos:line="22" pos:column="9"/></name></type> <name pos:line="22" pos:column="10">ping_min<pos:position pos:line="22" pos:column="18"/></name> <init pos:line="22" pos:column="19">= <expr><literal type="number" pos:line="22" pos:column="21">0<pos:position pos:line="22" pos:column="22"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="24">ping_max<pos:position pos:line="22" pos:column="32"/></name> <init pos:line="22" pos:column="33">= <expr><literal type="number" pos:line="22" pos:column="35">0<pos:position pos:line="22" pos:column="36"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="38">ping_sum<pos:position pos:line="22" pos:column="46"/></name> <init pos:line="22" pos:column="47">= <expr><literal type="number" pos:line="22" pos:column="49">0<pos:position pos:line="22" pos:column="50"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="22" pos:column="52">ping_mean<pos:position pos:line="22" pos:column="61"/></name> <init pos:line="22" pos:column="62">= <expr><literal type="number" pos:line="22" pos:column="64">0<pos:position pos:line="22" pos:column="65"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="66"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="23" pos:column="5">const<pos:position pos:line="23" pos:column="10"/></specifier> <name pos:line="23" pos:column="11">char<pos:position pos:line="23" pos:column="15"/></name> <modifier pos:line="23" pos:column="16">*<pos:position pos:line="23" pos:column="17"/></modifier></type><name pos:line="23" pos:column="17">proxy_user<pos:position pos:line="23" pos:column="27"/></name> <init pos:line="23" pos:column="28">= <expr><name pos:line="23" pos:column="30">NULL<pos:position pos:line="23" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="24" pos:column="5">const<pos:position pos:line="24" pos:column="10"/></specifier> <name pos:line="24" pos:column="11">char<pos:position pos:line="24" pos:column="15"/></name> <modifier pos:line="24" pos:column="16">*<pos:position pos:line="24" pos:column="17"/></modifier></type><name pos:line="24" pos:column="17">proxy_password<pos:position pos:line="24" pos:column="31"/></name> <init pos:line="24" pos:column="32">= <expr><name pos:line="24" pos:column="34">NULL<pos:position pos:line="24" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="25" pos:column="5">const<pos:position pos:line="25" pos:column="10"/></specifier> <name pos:line="25" pos:column="11">char<pos:position pos:line="25" pos:column="15"/></name> <modifier pos:line="25" pos:column="16">*<pos:position pos:line="25" pos:column="17"/></modifier></type><name pos:line="25" pos:column="17">www_user<pos:position pos:line="25" pos:column="25"/></name> <init pos:line="25" pos:column="26">= <expr><name pos:line="25" pos:column="28">NULL<pos:position pos:line="25" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="25" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="26" pos:column="5">const<pos:position pos:line="26" pos:column="10"/></specifier> <name pos:line="26" pos:column="11">char<pos:position pos:line="26" pos:column="15"/></name> <modifier pos:line="26" pos:column="16">*<pos:position pos:line="26" pos:column="17"/></modifier></type><name pos:line="26" pos:column="17">www_password<pos:position pos:line="26" pos:column="29"/></name> <init pos:line="26" pos:column="30">= <expr><name pos:line="26" pos:column="32">NULL<pos:position pos:line="26" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="27" pos:column="5">const<pos:position pos:line="27" pos:column="10"/></specifier> <name pos:line="27" pos:column="11">char<pos:position pos:line="27" pos:column="15"/></name> <modifier pos:line="27" pos:column="16">*<pos:position pos:line="27" pos:column="17"/></modifier></type><name pos:line="27" pos:column="17">host<pos:position pos:line="27" pos:column="21"/></name> <init pos:line="27" pos:column="22">= <expr><name pos:line="27" pos:column="24">NULL<pos:position pos:line="27" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="28" pos:column="5">const<pos:position pos:line="28" pos:column="10"/></specifier> <name pos:line="28" pos:column="11">char<pos:position pos:line="28" pos:column="15"/></name> <modifier pos:line="28" pos:column="16">*<pos:position pos:line="28" pos:column="17"/></modifier></type><name pos:line="28" pos:column="17">version<pos:position pos:line="28" pos:column="24"/></name> <init pos:line="28" pos:column="25">= <expr><literal type="string" pos:line="28" pos:column="27">"1.0"<pos:position pos:line="28" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="29" pos:column="5">const<pos:position pos:line="29" pos:column="10"/></specifier> <name pos:line="29" pos:column="11">char<pos:position pos:line="29" pos:column="15"/></name> <modifier pos:line="29" pos:column="16">*<pos:position pos:line="29" pos:column="17"/></modifier></type><name pos:line="29" pos:column="17">useragent<pos:position pos:line="29" pos:column="26"/></name> <init pos:line="29" pos:column="27">= <expr><name pos:line="29" pos:column="29">NULL<pos:position pos:line="29" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="34"/></decl_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* set the defaults */</comment>
    <expr_stmt><expr><name pos:line="32" pos:column="5">hostname<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <literal type="string" pos:line="32" pos:column="16">"localhost"<pos:position pos:line="32" pos:column="27"/></literal></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">localhost<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">=<pos:position pos:line="33" pos:column="16"/></operator> <name pos:line="33" pos:column="17">NULL<pos:position pos:line="33" pos:column="21"/></name></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">extra_hdrs<pos:position pos:line="34" pos:column="15"/></name><index pos:line="34" pos:column="15">[<expr><literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>]<pos:position pos:line="34" pos:column="18"/></index></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <literal type="char" pos:line="34" pos:column="21">'\0'<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">port<pos:position pos:line="35" pos:column="9"/></name> <operator pos:line="35" pos:column="10">=<pos:position pos:line="35" pos:column="11"/></operator> <name pos:line="35" pos:column="12">CACHE_HTTP_PORT<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">to_stdout<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <literal type="number" pos:line="36" pos:column="17">1<pos:position pos:line="36" pos:column="18"/></literal></expr>;<pos:position pos:line="36" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">reload<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <literal type="number" pos:line="37" pos:column="14">0<pos:position pos:line="37" pos:column="15"/></literal></expr>;<pos:position pos:line="37" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">ping<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <literal type="number" pos:line="38" pos:column="12">0<pos:position pos:line="38" pos:column="13"/></literal></expr>;<pos:position pos:line="38" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="39" pos:column="5">pcount<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <literal type="number" pos:line="39" pos:column="14">0<pos:position pos:line="39" pos:column="15"/></literal></expr>;<pos:position pos:line="39" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">ping_int<pos:position pos:line="40" pos:column="13"/></name> <operator pos:line="40" pos:column="14">=<pos:position pos:line="40" pos:column="15"/></operator> <literal type="number" pos:line="40" pos:column="16">1<pos:position pos:line="40" pos:column="17"/></literal> <operator pos:line="40" pos:column="18">*<pos:position pos:line="40" pos:column="19"/></operator> <literal type="number" pos:line="40" pos:column="20">1000<pos:position pos:line="40" pos:column="24"/></literal></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="42" pos:column="5">Ip<pos:position pos:line="42" pos:column="7"/></name><operator pos:line="42" pos:column="7">::<pos:position pos:line="42" pos:column="9"/></operator><name pos:line="42" pos:column="9">ProbeTransport<pos:position pos:line="42" pos:column="23"/></name></name><argument_list pos:line="42" pos:column="23">()<pos:position pos:line="42" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt> <comment type="line" pos:line="42" pos:column="27">// determine IPv4 or IPv6 capabilities before parsing.</comment>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">argc<pos:position pos:line="43" pos:column="13"/></name> <operator pos:line="43" pos:column="14">&lt;<pos:position pos:line="43" pos:column="18"/></operator> <literal type="number" pos:line="43" pos:column="16">2<pos:position pos:line="43" pos:column="17"/></literal></expr>)<pos:position pos:line="43" pos:column="18"/></condition><then pos:line="43" pos:column="18"> <block pos:line="43" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">usage<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><name><name pos:line="44" pos:column="15">argv<pos:position pos:line="44" pos:column="19"/></name><index pos:line="44" pos:column="19">[<expr><literal type="number" pos:line="44" pos:column="20">0<pos:position pos:line="44" pos:column="21"/></literal></expr>]<pos:position pos:line="44" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="44" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="24"/></expr_stmt>		<comment type="block" pos:line="44" pos:column="33">/* need URL */</comment>
    }<pos:position pos:line="45" pos:column="6"/></block></then> <elseif pos:line="45" pos:column="7">else <if pos:line="45" pos:column="12">if <condition pos:line="45" pos:column="15">(<expr><name pos:line="45" pos:column="16">argc<pos:position pos:line="45" pos:column="20"/></name> <operator pos:line="45" pos:column="21">&gt;=<pos:position pos:line="45" pos:column="26"/></operator> <literal type="number" pos:line="45" pos:column="24">2<pos:position pos:line="45" pos:column="25"/></literal></expr>)<pos:position pos:line="45" pos:column="26"/></condition><then pos:line="45" pos:column="26"> <block pos:line="45" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">strncpy<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">(<argument><expr><name pos:line="46" pos:column="17">url<pos:position pos:line="46" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="22">argv<pos:position pos:line="46" pos:column="26"/></name><index pos:line="46" pos:column="26">[<expr><name pos:line="46" pos:column="27">argc<pos:position pos:line="46" pos:column="31"/></name> <operator pos:line="46" pos:column="32">-<pos:position pos:line="46" pos:column="33"/></operator> <literal type="number" pos:line="46" pos:column="34">1<pos:position pos:line="46" pos:column="35"/></literal></expr>]<pos:position pos:line="46" pos:column="36"/></index></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="38">BUFSIZ<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="47" pos:column="9">url<pos:position pos:line="47" pos:column="12"/></name><index pos:line="47" pos:column="12">[<expr><name pos:line="47" pos:column="13">BUFSIZ<pos:position pos:line="47" pos:column="19"/></name> <operator pos:line="47" pos:column="20">-<pos:position pos:line="47" pos:column="21"/></operator> <literal type="number" pos:line="47" pos:column="22">1<pos:position pos:line="47" pos:column="23"/></literal></expr>]<pos:position pos:line="47" pos:column="24"/></index></name> <operator pos:line="47" pos:column="25">=<pos:position pos:line="47" pos:column="26"/></operator> <literal type="char" pos:line="47" pos:column="27">'\0'<pos:position pos:line="47" pos:column="31"/></literal></expr>;<pos:position pos:line="47" pos:column="32"/></expr_stmt>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name><name pos:line="49" pos:column="13">url<pos:position pos:line="49" pos:column="16"/></name><index pos:line="49" pos:column="16">[<expr><literal type="number" pos:line="49" pos:column="17">0<pos:position pos:line="49" pos:column="18"/></literal></expr>]<pos:position pos:line="49" pos:column="19"/></index></name> <operator pos:line="49" pos:column="20">==<pos:position pos:line="49" pos:column="22"/></operator> <literal type="char" pos:line="49" pos:column="23">'-'<pos:position pos:line="49" pos:column="26"/></literal></expr>)<pos:position pos:line="49" pos:column="27"/></condition><then pos:line="49" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="13">usage<pos:position pos:line="50" pos:column="18"/></name><argument_list pos:line="50" pos:column="18">(<argument><expr><name><name pos:line="50" pos:column="19">argv<pos:position pos:line="50" pos:column="23"/></name><index pos:line="50" pos:column="23">[<expr><literal type="number" pos:line="50" pos:column="24">0<pos:position pos:line="50" pos:column="25"/></literal></expr>]<pos:position pos:line="50" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="28"/></expr_stmt></block></then></if>

        <while pos:line="52" pos:column="9">while <condition pos:line="52" pos:column="15">(<expr><operator pos:line="52" pos:column="16">(<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="17">c<pos:position pos:line="52" pos:column="18"/></name> <operator pos:line="52" pos:column="19">=<pos:position pos:line="52" pos:column="20"/></operator> <call><name pos:line="52" pos:column="21">getopt<pos:position pos:line="52" pos:column="27"/></name><argument_list pos:line="52" pos:column="27">(<argument><expr><name pos:line="52" pos:column="28">argc<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="34">argv<pos:position pos:line="52" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="40">"aA:h:j:V:l:P:i:km:p:rsvt:g:p:I:H:T:u:U:w:W:?"<pos:position pos:line="52" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="87"/></argument_list></call><operator pos:line="52" pos:column="87">)<pos:position pos:line="52" pos:column="88"/></operator> <operator pos:line="52" pos:column="89">!=<pos:position pos:line="52" pos:column="91"/></operator> <operator pos:line="52" pos:column="92">-<pos:position pos:line="52" pos:column="93"/></operator><literal type="number" pos:line="52" pos:column="93">1<pos:position pos:line="52" pos:column="94"/></literal></expr>)<pos:position pos:line="52" pos:column="95"/></condition>
            <block type="pseudo"><switch pos:line="53" pos:column="13">switch <condition pos:line="53" pos:column="20">(<expr><name pos:line="53" pos:column="21">c<pos:position pos:line="53" pos:column="22"/></name></expr>)<pos:position pos:line="53" pos:column="23"/></condition> <block pos:line="53" pos:column="24">{

            <case pos:line="55" pos:column="13">case <expr><literal type="char" pos:line="55" pos:column="18">'a'<pos:position pos:line="55" pos:column="21"/></literal></expr>:<pos:position pos:line="55" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="56" pos:column="17">opt_noaccept<pos:position pos:line="56" pos:column="29"/></name> <operator pos:line="56" pos:column="30">=<pos:position pos:line="56" pos:column="31"/></operator> <literal type="number" pos:line="56" pos:column="32">1<pos:position pos:line="56" pos:column="33"/></literal></expr>;<pos:position pos:line="56" pos:column="34"/></expr_stmt>
                <break pos:line="57" pos:column="17">break;<pos:position pos:line="57" pos:column="23"/></break>

            <case pos:line="59" pos:column="13">case <expr><literal type="char" pos:line="59" pos:column="18">'A'<pos:position pos:line="59" pos:column="21"/></literal></expr>:<pos:position pos:line="59" pos:column="22"/></case>
                <if pos:line="60" pos:column="17">if <condition pos:line="60" pos:column="20">(<expr><name pos:line="60" pos:column="21">optarg<pos:position pos:line="60" pos:column="27"/></name> <operator pos:line="60" pos:column="28">!=<pos:position pos:line="60" pos:column="30"/></operator> <name pos:line="60" pos:column="31">NULL<pos:position pos:line="60" pos:column="35"/></name></expr>)<pos:position pos:line="60" pos:column="36"/></condition><then pos:line="60" pos:column="36">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="21">useragent<pos:position pos:line="61" pos:column="30"/></name> <operator pos:line="61" pos:column="31">=<pos:position pos:line="61" pos:column="32"/></operator> <name pos:line="61" pos:column="33">optarg<pos:position pos:line="61" pos:column="39"/></name></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt></block></then></if>
                <break pos:line="62" pos:column="17">break;<pos:position pos:line="62" pos:column="23"/></break>

            <case pos:line="64" pos:column="13">case <expr><literal type="char" pos:line="64" pos:column="18">'h'<pos:position pos:line="64" pos:column="21"/></literal></expr>:<pos:position pos:line="64" pos:column="22"/></case>		<comment type="block" pos:line="64" pos:column="33">/* remote host */</comment>
                <if pos:line="65" pos:column="17">if <condition pos:line="65" pos:column="20">(<expr><name pos:line="65" pos:column="21">optarg<pos:position pos:line="65" pos:column="27"/></name> <operator pos:line="65" pos:column="28">!=<pos:position pos:line="65" pos:column="30"/></operator> <name pos:line="65" pos:column="31">NULL<pos:position pos:line="65" pos:column="35"/></name></expr>)<pos:position pos:line="65" pos:column="36"/></condition><then pos:line="65" pos:column="36">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="21">hostname<pos:position pos:line="66" pos:column="29"/></name> <operator pos:line="66" pos:column="30">=<pos:position pos:line="66" pos:column="31"/></operator> <name pos:line="66" pos:column="32">optarg<pos:position pos:line="66" pos:column="38"/></name></expr>;<pos:position pos:line="66" pos:column="39"/></expr_stmt></block></then></if>
                <break pos:line="67" pos:column="17">break;<pos:position pos:line="67" pos:column="23"/></break>

            <case pos:line="69" pos:column="13">case <expr><literal type="char" pos:line="69" pos:column="18">'j'<pos:position pos:line="69" pos:column="21"/></literal></expr>:<pos:position pos:line="69" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="70" pos:column="17">host<pos:position pos:line="70" pos:column="21"/></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <name pos:line="70" pos:column="24">optarg<pos:position pos:line="70" pos:column="30"/></name></expr>;<pos:position pos:line="70" pos:column="31"/></expr_stmt>
                <break pos:line="71" pos:column="17">break;<pos:position pos:line="71" pos:column="23"/></break>

            <case pos:line="73" pos:column="13">case <expr><literal type="char" pos:line="73" pos:column="18">'V'<pos:position pos:line="73" pos:column="21"/></literal></expr>:<pos:position pos:line="73" pos:column="22"/></case>
                <if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name pos:line="74" pos:column="21">optarg<pos:position pos:line="74" pos:column="27"/></name> <operator pos:line="74" pos:column="28">!=<pos:position pos:line="74" pos:column="30"/></operator> <name pos:line="74" pos:column="31">NULL<pos:position pos:line="74" pos:column="35"/></name></expr>)<pos:position pos:line="74" pos:column="36"/></condition><then pos:line="74" pos:column="36">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="75" pos:column="21">version<pos:position pos:line="75" pos:column="28"/></name> <operator pos:line="75" pos:column="29">=<pos:position pos:line="75" pos:column="30"/></operator> <name pos:line="75" pos:column="31">optarg<pos:position pos:line="75" pos:column="37"/></name></expr>;<pos:position pos:line="75" pos:column="38"/></expr_stmt></block></then></if>
                <break pos:line="76" pos:column="17">break;<pos:position pos:line="76" pos:column="23"/></break>

            <case pos:line="78" pos:column="13">case <expr><literal type="char" pos:line="78" pos:column="18">'l'<pos:position pos:line="78" pos:column="21"/></literal></expr>:<pos:position pos:line="78" pos:column="22"/></case>		<comment type="block" pos:line="78" pos:column="33">/* local host */</comment>
                <if pos:line="79" pos:column="17">if <condition pos:line="79" pos:column="20">(<expr><name pos:line="79" pos:column="21">optarg<pos:position pos:line="79" pos:column="27"/></name> <operator pos:line="79" pos:column="28">!=<pos:position pos:line="79" pos:column="30"/></operator> <name pos:line="79" pos:column="31">NULL<pos:position pos:line="79" pos:column="35"/></name></expr>)<pos:position pos:line="79" pos:column="36"/></condition><then pos:line="79" pos:column="36">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="80" pos:column="21">localhost<pos:position pos:line="80" pos:column="30"/></name> <operator pos:line="80" pos:column="31">=<pos:position pos:line="80" pos:column="32"/></operator> <name pos:line="80" pos:column="33">optarg<pos:position pos:line="80" pos:column="39"/></name></expr>;<pos:position pos:line="80" pos:column="40"/></expr_stmt></block></then></if>
                <break pos:line="81" pos:column="17">break;<pos:position pos:line="81" pos:column="23"/></break>

            <case pos:line="83" pos:column="13">case <expr><literal type="char" pos:line="83" pos:column="18">'s'<pos:position pos:line="83" pos:column="21"/></literal></expr>:<pos:position pos:line="83" pos:column="22"/></case>		<comment type="block" pos:line="83" pos:column="33">/* silent */</comment>
                <expr_stmt><expr><name pos:line="84" pos:column="17">to_stdout<pos:position pos:line="84" pos:column="26"/></name> <operator pos:line="84" pos:column="27">=<pos:position pos:line="84" pos:column="28"/></operator> <literal type="number" pos:line="84" pos:column="29">0<pos:position pos:line="84" pos:column="30"/></literal></expr>;<pos:position pos:line="84" pos:column="31"/></expr_stmt>
                <break pos:line="85" pos:column="17">break;<pos:position pos:line="85" pos:column="23"/></break>

            <case pos:line="87" pos:column="13">case <expr><literal type="char" pos:line="87" pos:column="18">'k'<pos:position pos:line="87" pos:column="21"/></literal></expr>:<pos:position pos:line="87" pos:column="22"/></case>		<comment type="block" pos:line="87" pos:column="33">/* backward compat */</comment>
                <expr_stmt><expr><name pos:line="88" pos:column="17">keep_alive<pos:position pos:line="88" pos:column="27"/></name> <operator pos:line="88" pos:column="28">=<pos:position pos:line="88" pos:column="29"/></operator> <literal type="number" pos:line="88" pos:column="30">1<pos:position pos:line="88" pos:column="31"/></literal></expr>;<pos:position pos:line="88" pos:column="32"/></expr_stmt>
                <break pos:line="89" pos:column="17">break;<pos:position pos:line="89" pos:column="23"/></break>

            <case pos:line="91" pos:column="13">case <expr><literal type="char" pos:line="91" pos:column="18">'r'<pos:position pos:line="91" pos:column="21"/></literal></expr>:<pos:position pos:line="91" pos:column="22"/></case>		<comment type="block" pos:line="91" pos:column="33">/* reload */</comment>
                <expr_stmt><expr><name pos:line="92" pos:column="17">reload<pos:position pos:line="92" pos:column="23"/></name> <operator pos:line="92" pos:column="24">=<pos:position pos:line="92" pos:column="25"/></operator> <literal type="number" pos:line="92" pos:column="26">1<pos:position pos:line="92" pos:column="27"/></literal></expr>;<pos:position pos:line="92" pos:column="28"/></expr_stmt>
                <break pos:line="93" pos:column="17">break;<pos:position pos:line="93" pos:column="23"/></break>

            <case pos:line="95" pos:column="13">case <expr><literal type="char" pos:line="95" pos:column="18">'p'<pos:position pos:line="95" pos:column="21"/></literal></expr>:<pos:position pos:line="95" pos:column="22"/></case>		<comment type="block" pos:line="95" pos:column="33">/* port number */</comment>
                <expr_stmt><expr><call><name pos:line="96" pos:column="17">sscanf<pos:position pos:line="96" pos:column="23"/></name><argument_list pos:line="96" pos:column="23">(<argument><expr><name pos:line="96" pos:column="24">optarg<pos:position pos:line="96" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="96" pos:column="32">"%d"<pos:position pos:line="96" pos:column="36"/></literal></expr></argument>, <argument><expr><operator pos:line="96" pos:column="38">&amp;<pos:position pos:line="96" pos:column="43"/></operator><name pos:line="96" pos:column="39">port<pos:position pos:line="96" pos:column="43"/></name></expr></argument>)<pos:position pos:line="96" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="45"/></expr_stmt>
                <if pos:line="97" pos:column="17">if <condition pos:line="97" pos:column="20">(<expr><name pos:line="97" pos:column="21">port<pos:position pos:line="97" pos:column="25"/></name> <operator pos:line="97" pos:column="26">&lt;<pos:position pos:line="97" pos:column="30"/></operator> <literal type="number" pos:line="97" pos:column="28">1<pos:position pos:line="97" pos:column="29"/></literal></expr>)<pos:position pos:line="97" pos:column="30"/></condition><then pos:line="97" pos:column="30">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="21">port<pos:position pos:line="98" pos:column="25"/></name> <operator pos:line="98" pos:column="26">=<pos:position pos:line="98" pos:column="27"/></operator> <name pos:line="98" pos:column="28">CACHE_HTTP_PORT<pos:position pos:line="98" pos:column="43"/></name></expr>;<pos:position pos:line="98" pos:column="44"/></expr_stmt></block></then></if>	<comment type="block" pos:line="98" pos:column="49">/* default */</comment>
                <break pos:line="99" pos:column="17">break;<pos:position pos:line="99" pos:column="23"/></break>

            <case pos:line="101" pos:column="13">case <expr><literal type="char" pos:line="101" pos:column="18">'P'<pos:position pos:line="101" pos:column="21"/></literal></expr>:<pos:position pos:line="101" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="102" pos:column="17">put_file<pos:position pos:line="102" pos:column="25"/></name> <operator pos:line="102" pos:column="26">=<pos:position pos:line="102" pos:column="27"/></operator> <call><name pos:line="102" pos:column="28">xstrdup<pos:position pos:line="102" pos:column="35"/></name><argument_list pos:line="102" pos:column="35">(<argument><expr><name pos:line="102" pos:column="36">optarg<pos:position pos:line="102" pos:column="42"/></name></expr></argument>)<pos:position pos:line="102" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="44"/></expr_stmt>
                <break pos:line="103" pos:column="17">break;<pos:position pos:line="103" pos:column="23"/></break>

            <case pos:line="105" pos:column="13">case <expr><literal type="char" pos:line="105" pos:column="18">'i'<pos:position pos:line="105" pos:column="21"/></literal></expr>:<pos:position pos:line="105" pos:column="22"/></case>		<comment type="block" pos:line="105" pos:column="33">/* IMS */</comment>
                <expr_stmt><expr><name pos:line="106" pos:column="17">ims<pos:position pos:line="106" pos:column="20"/></name> <operator pos:line="106" pos:column="21">=<pos:position pos:line="106" pos:column="22"/></operator> <operator pos:line="106" pos:column="23">(<pos:position pos:line="106" pos:column="24"/></operator><name pos:line="106" pos:column="24">time_t<pos:position pos:line="106" pos:column="30"/></name><operator pos:line="106" pos:column="30">)<pos:position pos:line="106" pos:column="31"/></operator> <call><name pos:line="106" pos:column="32">atoi<pos:position pos:line="106" pos:column="36"/></name><argument_list pos:line="106" pos:column="36">(<argument><expr><name pos:line="106" pos:column="37">optarg<pos:position pos:line="106" pos:column="43"/></name></expr></argument>)<pos:position pos:line="106" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="45"/></expr_stmt>
                <break pos:line="107" pos:column="17">break;<pos:position pos:line="107" pos:column="23"/></break>

            <case pos:line="109" pos:column="13">case <expr><literal type="char" pos:line="109" pos:column="18">'m'<pos:position pos:line="109" pos:column="21"/></literal></expr>:<pos:position pos:line="109" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="110" pos:column="17">method<pos:position pos:line="110" pos:column="23"/></name> <operator pos:line="110" pos:column="24">=<pos:position pos:line="110" pos:column="25"/></operator> <call><name pos:line="110" pos:column="26">xstrdup<pos:position pos:line="110" pos:column="33"/></name><argument_list pos:line="110" pos:column="33">(<argument><expr><name pos:line="110" pos:column="34">optarg<pos:position pos:line="110" pos:column="40"/></name></expr></argument>)<pos:position pos:line="110" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="42"/></expr_stmt>
                <break pos:line="111" pos:column="17">break;<pos:position pos:line="111" pos:column="23"/></break>

            <case pos:line="113" pos:column="13">case <expr><literal type="char" pos:line="113" pos:column="18">'t'<pos:position pos:line="113" pos:column="21"/></literal></expr>:<pos:position pos:line="113" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="114" pos:column="17">method<pos:position pos:line="114" pos:column="23"/></name> <operator pos:line="114" pos:column="24">=<pos:position pos:line="114" pos:column="25"/></operator> <call><name pos:line="114" pos:column="26">xstrdup<pos:position pos:line="114" pos:column="33"/></name><argument_list pos:line="114" pos:column="33">(<argument><expr><literal type="string" pos:line="114" pos:column="34">"TRACE"<pos:position pos:line="114" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><name pos:line="115" pos:column="17">max_forwards<pos:position pos:line="115" pos:column="29"/></name> <operator pos:line="115" pos:column="30">=<pos:position pos:line="115" pos:column="31"/></operator> <call><name pos:line="115" pos:column="32">atoi<pos:position pos:line="115" pos:column="36"/></name><argument_list pos:line="115" pos:column="36">(<argument><expr><name pos:line="115" pos:column="37">optarg<pos:position pos:line="115" pos:column="43"/></name></expr></argument>)<pos:position pos:line="115" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="45"/></expr_stmt>
                <break pos:line="116" pos:column="17">break;<pos:position pos:line="116" pos:column="23"/></break>

            <case pos:line="118" pos:column="13">case <expr><literal type="char" pos:line="118" pos:column="18">'g'<pos:position pos:line="118" pos:column="21"/></literal></expr>:<pos:position pos:line="118" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="119" pos:column="17">ping<pos:position pos:line="119" pos:column="21"/></name> <operator pos:line="119" pos:column="22">=<pos:position pos:line="119" pos:column="23"/></operator> <literal type="number" pos:line="119" pos:column="24">1<pos:position pos:line="119" pos:column="25"/></literal></expr>;<pos:position pos:line="119" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><name pos:line="120" pos:column="17">pcount<pos:position pos:line="120" pos:column="23"/></name> <operator pos:line="120" pos:column="24">=<pos:position pos:line="120" pos:column="25"/></operator> <call><name pos:line="120" pos:column="26">atoi<pos:position pos:line="120" pos:column="30"/></name><argument_list pos:line="120" pos:column="30">(<argument><expr><name pos:line="120" pos:column="31">optarg<pos:position pos:line="120" pos:column="37"/></name></expr></argument>)<pos:position pos:line="120" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name pos:line="121" pos:column="17">to_stdout<pos:position pos:line="121" pos:column="26"/></name> <operator pos:line="121" pos:column="27">=<pos:position pos:line="121" pos:column="28"/></operator> <literal type="number" pos:line="121" pos:column="29">0<pos:position pos:line="121" pos:column="30"/></literal></expr>;<pos:position pos:line="121" pos:column="31"/></expr_stmt>
                <break pos:line="122" pos:column="17">break;<pos:position pos:line="122" pos:column="23"/></break>

            <case pos:line="124" pos:column="13">case <expr><literal type="char" pos:line="124" pos:column="18">'I'<pos:position pos:line="124" pos:column="21"/></literal></expr>:<pos:position pos:line="124" pos:column="22"/></case>
                <if pos:line="125" pos:column="17">if <condition pos:line="125" pos:column="20">(<expr><operator pos:line="125" pos:column="21">(<pos:position pos:line="125" pos:column="22"/></operator><name pos:line="125" pos:column="22">ping_int<pos:position pos:line="125" pos:column="30"/></name> <operator pos:line="125" pos:column="31">=<pos:position pos:line="125" pos:column="32"/></operator> <call><name pos:line="125" pos:column="33">atoi<pos:position pos:line="125" pos:column="37"/></name><argument_list pos:line="125" pos:column="37">(<argument><expr><name pos:line="125" pos:column="38">optarg<pos:position pos:line="125" pos:column="44"/></name></expr></argument>)<pos:position pos:line="125" pos:column="45"/></argument_list></call> <operator pos:line="125" pos:column="46">*<pos:position pos:line="125" pos:column="47"/></operator> <literal type="number" pos:line="125" pos:column="48">1000<pos:position pos:line="125" pos:column="52"/></literal><operator pos:line="125" pos:column="52">)<pos:position pos:line="125" pos:column="53"/></operator> <operator pos:line="125" pos:column="54">&lt;=<pos:position pos:line="125" pos:column="59"/></operator> <literal type="number" pos:line="125" pos:column="57">0<pos:position pos:line="125" pos:column="58"/></literal></expr>)<pos:position pos:line="125" pos:column="59"/></condition><then pos:line="125" pos:column="59">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="126" pos:column="21">usage<pos:position pos:line="126" pos:column="26"/></name><argument_list pos:line="126" pos:column="26">(<argument><expr><name><name pos:line="126" pos:column="27">argv<pos:position pos:line="126" pos:column="31"/></name><index pos:line="126" pos:column="31">[<expr><literal type="number" pos:line="126" pos:column="32">0<pos:position pos:line="126" pos:column="33"/></literal></expr>]<pos:position pos:line="126" pos:column="34"/></index></name></expr></argument>)<pos:position pos:line="126" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="36"/></expr_stmt></block></then></if>
                <break pos:line="127" pos:column="17">break;<pos:position pos:line="127" pos:column="23"/></break>

            <case pos:line="129" pos:column="13">case <expr><literal type="char" pos:line="129" pos:column="18">'H'<pos:position pos:line="129" pos:column="21"/></literal></expr>:<pos:position pos:line="129" pos:column="22"/></case>
                <if pos:line="130" pos:column="17">if <condition pos:line="130" pos:column="20">(<expr><call><name pos:line="130" pos:column="21">strlen<pos:position pos:line="130" pos:column="27"/></name><argument_list pos:line="130" pos:column="27">(<argument><expr><name pos:line="130" pos:column="28">optarg<pos:position pos:line="130" pos:column="34"/></name></expr></argument>)<pos:position pos:line="130" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="36"/></condition><then pos:line="130" pos:column="36"> <block pos:line="130" pos:column="37">{
                    <decl_stmt><decl><type><name pos:line="131" pos:column="21">char<pos:position pos:line="131" pos:column="25"/></name> <modifier pos:line="131" pos:column="26">*<pos:position pos:line="131" pos:column="27"/></modifier></type><name pos:line="131" pos:column="27">t<pos:position pos:line="131" pos:column="28"/></name></decl>;<pos:position pos:line="131" pos:column="29"/></decl_stmt>
                    <expr_stmt><expr><call><name pos:line="132" pos:column="21">strncpy<pos:position pos:line="132" pos:column="28"/></name><argument_list pos:line="132" pos:column="28">(<argument><expr><name pos:line="132" pos:column="29">extra_hdrs<pos:position pos:line="132" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="132" pos:column="41">optarg<pos:position pos:line="132" pos:column="47"/></name></expr></argument>, <argument><expr><sizeof pos:line="132" pos:column="49">sizeof<argument_list pos:line="132" pos:column="55">(<argument><expr><name pos:line="132" pos:column="56">extra_hdrs<pos:position pos:line="132" pos:column="66"/></name></expr></argument>)<pos:position pos:line="132" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="132" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="69"/></expr_stmt>
                    <while pos:line="133" pos:column="21">while <condition pos:line="133" pos:column="27">(<expr><operator pos:line="133" pos:column="28">(<pos:position pos:line="133" pos:column="29"/></operator><name pos:line="133" pos:column="29">t<pos:position pos:line="133" pos:column="30"/></name> <operator pos:line="133" pos:column="31">=<pos:position pos:line="133" pos:column="32"/></operator> <call><name pos:line="133" pos:column="33">strstr<pos:position pos:line="133" pos:column="39"/></name><argument_list pos:line="133" pos:column="39">(<argument><expr><name pos:line="133" pos:column="40">extra_hdrs<pos:position pos:line="133" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="52">"\\n"<pos:position pos:line="133" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="133" pos:column="58"/></argument_list></call><operator pos:line="133" pos:column="58">)<pos:position pos:line="133" pos:column="59"/></operator></expr>)<pos:position pos:line="133" pos:column="60"/></condition>
                        <block type="pseudo"><expr_stmt><expr><operator pos:line="134" pos:column="25">*<pos:position pos:line="134" pos:column="26"/></operator><name pos:line="134" pos:column="26">t<pos:position pos:line="134" pos:column="27"/></name> <operator pos:line="134" pos:column="28">=<pos:position pos:line="134" pos:column="29"/></operator> <literal type="char" pos:line="134" pos:column="30">'\r'<pos:position pos:line="134" pos:column="34"/></literal></expr><operator pos:line="134" pos:column="34">,<pos:position pos:line="134" pos:column="35"/></operator> <expr><operator pos:line="134" pos:column="36">*<pos:position pos:line="134" pos:column="37"/></operator><operator pos:line="134" pos:column="37">(<pos:position pos:line="134" pos:column="38"/></operator><name pos:line="134" pos:column="38">t<pos:position pos:line="134" pos:column="39"/></name> <operator pos:line="134" pos:column="40">+<pos:position pos:line="134" pos:column="41"/></operator> <literal type="number" pos:line="134" pos:column="42">1<pos:position pos:line="134" pos:column="43"/></literal><operator pos:line="134" pos:column="43">)<pos:position pos:line="134" pos:column="44"/></operator> <operator pos:line="134" pos:column="45">=<pos:position pos:line="134" pos:column="46"/></operator> <literal type="char" pos:line="134" pos:column="47">'\n'<pos:position pos:line="134" pos:column="51"/></literal></expr>;<pos:position pos:line="134" pos:column="52"/></expr_stmt></block></while>
                }<pos:position pos:line="135" pos:column="18"/></block></then></if>
                <break pos:line="136" pos:column="17">break;<pos:position pos:line="136" pos:column="23"/></break>

            <case pos:line="138" pos:column="13">case <expr><literal type="char" pos:line="138" pos:column="18">'T'<pos:position pos:line="138" pos:column="21"/></literal></expr>:<pos:position pos:line="138" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="139" pos:column="17">io_timeout<pos:position pos:line="139" pos:column="27"/></name> <operator pos:line="139" pos:column="28">=<pos:position pos:line="139" pos:column="29"/></operator> <call><name pos:line="139" pos:column="30">atoi<pos:position pos:line="139" pos:column="34"/></name><argument_list pos:line="139" pos:column="34">(<argument><expr><name pos:line="139" pos:column="35">optarg<pos:position pos:line="139" pos:column="41"/></name></expr></argument>)<pos:position pos:line="139" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="43"/></expr_stmt>
                <break pos:line="140" pos:column="17">break;<pos:position pos:line="140" pos:column="23"/></break>

            <case pos:line="142" pos:column="13">case <expr><literal type="char" pos:line="142" pos:column="18">'u'<pos:position pos:line="142" pos:column="21"/></literal></expr>:<pos:position pos:line="142" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="143" pos:column="17">proxy_user<pos:position pos:line="143" pos:column="27"/></name> <operator pos:line="143" pos:column="28">=<pos:position pos:line="143" pos:column="29"/></operator> <name pos:line="143" pos:column="30">optarg<pos:position pos:line="143" pos:column="36"/></name></expr>;<pos:position pos:line="143" pos:column="37"/></expr_stmt>
                <break pos:line="144" pos:column="17">break;<pos:position pos:line="144" pos:column="23"/></break>

            <case pos:line="146" pos:column="13">case <expr><literal type="char" pos:line="146" pos:column="18">'w'<pos:position pos:line="146" pos:column="21"/></literal></expr>:<pos:position pos:line="146" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="147" pos:column="17">proxy_password<pos:position pos:line="147" pos:column="31"/></name> <operator pos:line="147" pos:column="32">=<pos:position pos:line="147" pos:column="33"/></operator> <name pos:line="147" pos:column="34">optarg<pos:position pos:line="147" pos:column="40"/></name></expr>;<pos:position pos:line="147" pos:column="41"/></expr_stmt>
                <break pos:line="148" pos:column="17">break;<pos:position pos:line="148" pos:column="23"/></break>

            <case pos:line="150" pos:column="13">case <expr><literal type="char" pos:line="150" pos:column="18">'U'<pos:position pos:line="150" pos:column="21"/></literal></expr>:<pos:position pos:line="150" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="151" pos:column="17">www_user<pos:position pos:line="151" pos:column="25"/></name> <operator pos:line="151" pos:column="26">=<pos:position pos:line="151" pos:column="27"/></operator> <name pos:line="151" pos:column="28">optarg<pos:position pos:line="151" pos:column="34"/></name></expr>;<pos:position pos:line="151" pos:column="35"/></expr_stmt>
                <break pos:line="152" pos:column="17">break;<pos:position pos:line="152" pos:column="23"/></break>

            <case pos:line="154" pos:column="13">case <expr><literal type="char" pos:line="154" pos:column="18">'W'<pos:position pos:line="154" pos:column="21"/></literal></expr>:<pos:position pos:line="154" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="155" pos:column="17">www_password<pos:position pos:line="155" pos:column="29"/></name> <operator pos:line="155" pos:column="30">=<pos:position pos:line="155" pos:column="31"/></operator> <name pos:line="155" pos:column="32">optarg<pos:position pos:line="155" pos:column="38"/></name></expr>;<pos:position pos:line="155" pos:column="39"/></expr_stmt>
                <break pos:line="156" pos:column="17">break;<pos:position pos:line="156" pos:column="23"/></break>

            <case pos:line="158" pos:column="13">case <expr><literal type="char" pos:line="158" pos:column="18">'v'<pos:position pos:line="158" pos:column="21"/></literal></expr>:<pos:position pos:line="158" pos:column="22"/></case>
                <comment type="block" pos:line="159" pos:column="17">/* undocumented: may increase verb-level by giving more -v's */</comment>
                <expr_stmt><expr><name pos:line="160" pos:column="17">opt_verbose<pos:position pos:line="160" pos:column="28"/></name><operator pos:line="160" pos:column="28">++<pos:position pos:line="160" pos:column="30"/></operator></expr>;<pos:position pos:line="160" pos:column="31"/></expr_stmt>
                <break pos:line="161" pos:column="17">break;<pos:position pos:line="161" pos:column="23"/></break>

            <case pos:line="163" pos:column="13">case <expr><literal type="char" pos:line="163" pos:column="18">'?'<pos:position pos:line="163" pos:column="21"/></literal></expr>:<pos:position pos:line="163" pos:column="22"/></case>		<comment type="block" pos:line="163" pos:column="33">/* usage */</comment>

            <default pos:line="165" pos:column="13">default:<pos:position pos:line="165" pos:column="21"/></default>
                <expr_stmt><expr><call><name pos:line="166" pos:column="17">usage<pos:position pos:line="166" pos:column="22"/></name><argument_list pos:line="166" pos:column="22">(<argument><expr><name><name pos:line="166" pos:column="23">argv<pos:position pos:line="166" pos:column="27"/></name><index pos:line="166" pos:column="27">[<expr><literal type="number" pos:line="166" pos:column="28">0<pos:position pos:line="166" pos:column="29"/></literal></expr>]<pos:position pos:line="166" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="166" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="32"/></expr_stmt>
                <break pos:line="167" pos:column="17">break;<pos:position pos:line="167" pos:column="23"/></break>
            }<pos:position pos:line="168" pos:column="14"/></block></switch></block></while>
    }<pos:position pos:line="169" pos:column="6"/></block></then></if></elseif></if>
<cpp:ifdef pos:line="170" pos:column="1">#<cpp:directive pos:line="170" pos:column="2">ifdef<pos:position pos:line="170" pos:column="7"/></cpp:directive> <name pos:line="170" pos:column="8">_SQUID_MSWIN_<pos:position pos:line="170" pos:column="21"/></name></cpp:ifdef>
    <block pos:line="171" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="172" pos:column="9">WSADATA<pos:position pos:line="172" pos:column="16"/></name></type> <name pos:line="172" pos:column="17">wsaData<pos:position pos:line="172" pos:column="24"/></name></decl>;<pos:position pos:line="172" pos:column="25"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="173" pos:column="9">WSAStartup<pos:position pos:line="173" pos:column="19"/></name><argument_list pos:line="173" pos:column="19">(<argument><expr><literal type="number" pos:line="173" pos:column="20">2<pos:position pos:line="173" pos:column="21"/></literal></expr></argument>, <argument><expr><operator pos:line="173" pos:column="23">&amp;<pos:position pos:line="173" pos:column="28"/></operator><name pos:line="173" pos:column="24">wsaData<pos:position pos:line="173" pos:column="31"/></name></expr></argument>)<pos:position pos:line="173" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="174" pos:column="9">atexit<pos:position pos:line="174" pos:column="15"/></name><argument_list pos:line="174" pos:column="15">(<argument><expr><name pos:line="174" pos:column="16">Win32SockCleanup<pos:position pos:line="174" pos:column="32"/></name></expr></argument>)<pos:position pos:line="174" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="175" pos:column="6"/></block>
<cpp:endif pos:line="176" pos:column="1">#<cpp:directive pos:line="176" pos:column="2">endif<pos:position pos:line="176" pos:column="7"/></cpp:directive></cpp:endif>
    <comment type="block" pos:line="177" pos:column="5">/* Build the HTTP request */</comment>
    <if pos:line="178" pos:column="5">if <condition pos:line="178" pos:column="8">(<expr><call><name pos:line="178" pos:column="9">strncmp<pos:position pos:line="178" pos:column="16"/></name><argument_list pos:line="178" pos:column="16">(<argument><expr><name pos:line="178" pos:column="17">url<pos:position pos:line="178" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="22">"mgr:"<pos:position pos:line="178" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="178" pos:column="30">4<pos:position pos:line="178" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="178" pos:column="32"/></argument_list></call> <operator pos:line="178" pos:column="33">==<pos:position pos:line="178" pos:column="35"/></operator> <literal type="number" pos:line="178" pos:column="36">0<pos:position pos:line="178" pos:column="37"/></literal></expr>)<pos:position pos:line="178" pos:column="38"/></condition><then pos:line="178" pos:column="38"> <block pos:line="178" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="179" pos:column="9">char<pos:position pos:line="179" pos:column="13"/></name> <modifier pos:line="179" pos:column="14">*<pos:position pos:line="179" pos:column="15"/></modifier></type><name pos:line="179" pos:column="15">t<pos:position pos:line="179" pos:column="16"/></name> <init pos:line="179" pos:column="17">= <expr><call><name pos:line="179" pos:column="19">xstrdup<pos:position pos:line="179" pos:column="26"/></name><argument_list pos:line="179" pos:column="26">(<argument><expr><name pos:line="179" pos:column="27">url<pos:position pos:line="179" pos:column="30"/></name> <operator pos:line="179" pos:column="31">+<pos:position pos:line="179" pos:column="32"/></operator> <literal type="number" pos:line="179" pos:column="33">4<pos:position pos:line="179" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="179" pos:column="35"/></argument_list></call></expr></init></decl>;<pos:position pos:line="179" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="180" pos:column="9">const<pos:position pos:line="180" pos:column="14"/></specifier> <name pos:line="180" pos:column="15">char<pos:position pos:line="180" pos:column="19"/></name> <modifier pos:line="180" pos:column="20">*<pos:position pos:line="180" pos:column="21"/></modifier></type><name pos:line="180" pos:column="21">at<pos:position pos:line="180" pos:column="23"/></name> <init pos:line="180" pos:column="24">= <expr><name pos:line="180" pos:column="26">NULL<pos:position pos:line="180" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="180" pos:column="31"/></decl_stmt>
        <if pos:line="181" pos:column="9">if <condition pos:line="181" pos:column="12">(<expr><operator pos:line="181" pos:column="13">!<pos:position pos:line="181" pos:column="14"/></operator><call><name pos:line="181" pos:column="14">strrchr<pos:position pos:line="181" pos:column="21"/></name><argument_list pos:line="181" pos:column="21">(<argument><expr><name pos:line="181" pos:column="22">t<pos:position pos:line="181" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="181" pos:column="25">'@'<pos:position pos:line="181" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="181" pos:column="30"/></condition><then pos:line="181" pos:column="30"> <block pos:line="181" pos:column="31">{ <comment type="line" pos:line="181" pos:column="33">// ignore any -w password if @ is explicit already.</comment>
            <expr_stmt><expr><name pos:line="182" pos:column="13">at<pos:position pos:line="182" pos:column="15"/></name> <operator pos:line="182" pos:column="16">=<pos:position pos:line="182" pos:column="17"/></operator> <name pos:line="182" pos:column="18">proxy_password<pos:position pos:line="182" pos:column="32"/></name></expr>;<pos:position pos:line="182" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="183" pos:column="10"/></block></then></if>
        <comment type="line" pos:line="184" pos:column="9">// embed the -w proxy password into old-style cachemgr URLs</comment>
        <if pos:line="185" pos:column="9">if <condition pos:line="185" pos:column="12">(<expr><name pos:line="185" pos:column="13">at<pos:position pos:line="185" pos:column="15"/></name></expr>)<pos:position pos:line="185" pos:column="16"/></condition><then pos:line="185" pos:column="16">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="186" pos:column="13">snprintf<pos:position pos:line="186" pos:column="21"/></name><argument_list pos:line="186" pos:column="21">(<argument><expr><name pos:line="186" pos:column="22">url<pos:position pos:line="186" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="27">BUFSIZ<pos:position pos:line="186" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="186" pos:column="35">"cache_object://%s/%s@%s"<pos:position pos:line="186" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="186" pos:column="62">hostname<pos:position pos:line="186" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="72">t<pos:position pos:line="186" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="75">at<pos:position pos:line="186" pos:column="77"/></name></expr></argument>)<pos:position pos:line="186" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="79"/></expr_stmt></block></then>
        <else pos:line="187" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="188" pos:column="13">snprintf<pos:position pos:line="188" pos:column="21"/></name><argument_list pos:line="188" pos:column="21">(<argument><expr><name pos:line="188" pos:column="22">url<pos:position pos:line="188" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="27">BUFSIZ<pos:position pos:line="188" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="35">"cache_object://%s/%s"<pos:position pos:line="188" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="59">hostname<pos:position pos:line="188" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="69">t<pos:position pos:line="188" pos:column="70"/></name></expr></argument>)<pos:position pos:line="188" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="72"/></expr_stmt></block></else></if>
        <expr_stmt><expr><call><name pos:line="189" pos:column="9">xfree<pos:position pos:line="189" pos:column="14"/></name><argument_list pos:line="189" pos:column="14">(<argument><expr><name pos:line="189" pos:column="15">t<pos:position pos:line="189" pos:column="16"/></name></expr></argument>)<pos:position pos:line="189" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="190" pos:column="6"/></block></then></if>
    <if pos:line="191" pos:column="5">if <condition pos:line="191" pos:column="8">(<expr><name pos:line="191" pos:column="9">put_file<pos:position pos:line="191" pos:column="17"/></name></expr>)<pos:position pos:line="191" pos:column="18"/></condition><then pos:line="191" pos:column="18"> <block pos:line="191" pos:column="19">{
        <expr_stmt><expr><name pos:line="192" pos:column="9">put_fd<pos:position pos:line="192" pos:column="15"/></name> <operator pos:line="192" pos:column="16">=<pos:position pos:line="192" pos:column="17"/></operator> <call><name pos:line="192" pos:column="18">open<pos:position pos:line="192" pos:column="22"/></name><argument_list pos:line="192" pos:column="22">(<argument><expr><name pos:line="192" pos:column="23">put_file<pos:position pos:line="192" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="192" pos:column="33">O_RDONLY<pos:position pos:line="192" pos:column="41"/></name></expr></argument>)<pos:position pos:line="192" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="193" pos:column="9">set_our_signal<pos:position pos:line="193" pos:column="23"/></name><argument_list pos:line="193" pos:column="23">()<pos:position pos:line="193" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="26"/></expr_stmt>

        <if pos:line="195" pos:column="9">if <condition pos:line="195" pos:column="12">(<expr><name pos:line="195" pos:column="13">put_fd<pos:position pos:line="195" pos:column="19"/></name> <operator pos:line="195" pos:column="20">&lt;<pos:position pos:line="195" pos:column="24"/></operator> <literal type="number" pos:line="195" pos:column="22">0<pos:position pos:line="195" pos:column="23"/></literal></expr>)<pos:position pos:line="195" pos:column="24"/></condition><then pos:line="195" pos:column="24"> <block pos:line="195" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="196" pos:column="13">fprintf<pos:position pos:line="196" pos:column="20"/></name><argument_list pos:line="196" pos:column="20">(<argument><expr><name pos:line="196" pos:column="21">stderr<pos:position pos:line="196" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="29">"%s: can't open file (%s)\n"<pos:position pos:line="196" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="196" pos:column="59">argv<pos:position pos:line="196" pos:column="63"/></name><index pos:line="196" pos:column="63">[<expr><literal type="number" pos:line="196" pos:column="64">0<pos:position pos:line="196" pos:column="65"/></literal></expr>]<pos:position pos:line="196" pos:column="66"/></index></name></expr></argument>,
                    <argument><expr><call><name pos:line="197" pos:column="21">xstrerror<pos:position pos:line="197" pos:column="30"/></name><argument_list pos:line="197" pos:column="30">()<pos:position pos:line="197" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="197" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="198" pos:column="13">exit<pos:position pos:line="198" pos:column="17"/></name><argument_list pos:line="198" pos:column="17">(<argument><expr><operator pos:line="198" pos:column="18">-<pos:position pos:line="198" pos:column="19"/></operator><literal type="number" pos:line="198" pos:column="19">1<pos:position pos:line="198" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="199" pos:column="10"/></block></then></if>
<cpp:ifdef pos:line="200" pos:column="1">#<cpp:directive pos:line="200" pos:column="2">ifdef<pos:position pos:line="200" pos:column="7"/></cpp:directive> <name pos:line="200" pos:column="8">_SQUID_WIN32_<pos:position pos:line="200" pos:column="21"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="201" pos:column="9">setmode<pos:position pos:line="201" pos:column="16"/></name><argument_list pos:line="201" pos:column="16">(<argument><expr><name pos:line="201" pos:column="17">put_fd<pos:position pos:line="201" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="201" pos:column="25">O_BINARY<pos:position pos:line="201" pos:column="33"/></name></expr></argument>)<pos:position pos:line="201" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="35"/></expr_stmt>

<cpp:endif pos:line="203" pos:column="1">#<cpp:directive pos:line="203" pos:column="2">endif<pos:position pos:line="203" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><call><name pos:line="205" pos:column="9">fstat<pos:position pos:line="205" pos:column="14"/></name><argument_list pos:line="205" pos:column="14">(<argument><expr><name pos:line="205" pos:column="15">put_fd<pos:position pos:line="205" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="205" pos:column="23">&amp;<pos:position pos:line="205" pos:column="28"/></operator><name pos:line="205" pos:column="24">sb<pos:position pos:line="205" pos:column="26"/></name></expr></argument>)<pos:position pos:line="205" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="206" pos:column="6"/></block></then></if>

    <if pos:line="208" pos:column="5">if <condition pos:line="208" pos:column="8">(<expr><operator pos:line="208" pos:column="9">!<pos:position pos:line="208" pos:column="10"/></operator><name pos:line="208" pos:column="10">host<pos:position pos:line="208" pos:column="14"/></name></expr>)<pos:position pos:line="208" pos:column="15"/></condition><then pos:line="208" pos:column="15"> <block pos:line="208" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="209" pos:column="9">char<pos:position pos:line="209" pos:column="13"/></name> <modifier pos:line="209" pos:column="14">*<pos:position pos:line="209" pos:column="15"/></modifier></type><name pos:line="209" pos:column="15">newhost<pos:position pos:line="209" pos:column="22"/></name> <init pos:line="209" pos:column="23">= <expr><call><name pos:line="209" pos:column="25">strstr<pos:position pos:line="209" pos:column="31"/></name><argument_list pos:line="209" pos:column="31">(<argument><expr><name pos:line="209" pos:column="32">url<pos:position pos:line="209" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="209" pos:column="37">"://"<pos:position pos:line="209" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="209" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="209" pos:column="44"/></decl_stmt>
        <if pos:line="210" pos:column="9">if <condition pos:line="210" pos:column="12">(<expr><name pos:line="210" pos:column="13">newhost<pos:position pos:line="210" pos:column="20"/></name></expr>)<pos:position pos:line="210" pos:column="21"/></condition><then pos:line="210" pos:column="21"> <block pos:line="210" pos:column="22">{
            <decl_stmt><decl><type><name pos:line="211" pos:column="13">char<pos:position pos:line="211" pos:column="17"/></name> <modifier pos:line="211" pos:column="18">*<pos:position pos:line="211" pos:column="19"/></modifier></type><name pos:line="211" pos:column="19">t<pos:position pos:line="211" pos:column="20"/></name></decl>;<pos:position pos:line="211" pos:column="21"/></decl_stmt>
            <expr_stmt><expr><name pos:line="212" pos:column="13">newhost<pos:position pos:line="212" pos:column="20"/></name> <operator pos:line="212" pos:column="21">+=<pos:position pos:line="212" pos:column="23"/></operator> <literal type="number" pos:line="212" pos:column="24">3<pos:position pos:line="212" pos:column="25"/></literal></expr>;<pos:position pos:line="212" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name pos:line="213" pos:column="13">newhost<pos:position pos:line="213" pos:column="20"/></name> <operator pos:line="213" pos:column="21">=<pos:position pos:line="213" pos:column="22"/></operator> <call><name pos:line="213" pos:column="23">strdup<pos:position pos:line="213" pos:column="29"/></name><argument_list pos:line="213" pos:column="29">(<argument><expr><name pos:line="213" pos:column="30">newhost<pos:position pos:line="213" pos:column="37"/></name></expr></argument>)<pos:position pos:line="213" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="214" pos:column="13">t<pos:position pos:line="214" pos:column="14"/></name> <operator pos:line="214" pos:column="15">=<pos:position pos:line="214" pos:column="16"/></operator> <name pos:line="214" pos:column="17">newhost<pos:position pos:line="214" pos:column="24"/></name> <operator pos:line="214" pos:column="25">+<pos:position pos:line="214" pos:column="26"/></operator> <call><name pos:line="214" pos:column="27">strcspn<pos:position pos:line="214" pos:column="34"/></name><argument_list pos:line="214" pos:column="34">(<argument><expr><name pos:line="214" pos:column="35">newhost<pos:position pos:line="214" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="44">"@/?"<pos:position pos:line="214" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="51"/></expr_stmt>
            <if pos:line="215" pos:column="13">if <condition pos:line="215" pos:column="16">(<expr><operator pos:line="215" pos:column="17">*<pos:position pos:line="215" pos:column="18"/></operator><name pos:line="215" pos:column="18">t<pos:position pos:line="215" pos:column="19"/></name> <operator pos:line="215" pos:column="20">==<pos:position pos:line="215" pos:column="22"/></operator> <literal type="char" pos:line="215" pos:column="23">'@'<pos:position pos:line="215" pos:column="26"/></literal></expr>)<pos:position pos:line="215" pos:column="27"/></condition><then pos:line="215" pos:column="27"> <block pos:line="215" pos:column="28">{
                <expr_stmt><expr><name pos:line="216" pos:column="17">newhost<pos:position pos:line="216" pos:column="24"/></name> <operator pos:line="216" pos:column="25">=<pos:position pos:line="216" pos:column="26"/></operator> <name pos:line="216" pos:column="27">t<pos:position pos:line="216" pos:column="28"/></name> <operator pos:line="216" pos:column="29">+<pos:position pos:line="216" pos:column="30"/></operator> <literal type="number" pos:line="216" pos:column="31">1<pos:position pos:line="216" pos:column="32"/></literal></expr>;<pos:position pos:line="216" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="217" pos:column="17">t<pos:position pos:line="217" pos:column="18"/></name> <operator pos:line="217" pos:column="19">=<pos:position pos:line="217" pos:column="20"/></operator> <name pos:line="217" pos:column="21">newhost<pos:position pos:line="217" pos:column="28"/></name> <operator pos:line="217" pos:column="29">+<pos:position pos:line="217" pos:column="30"/></operator> <call><name pos:line="217" pos:column="31">strcspn<pos:position pos:line="217" pos:column="38"/></name><argument_list pos:line="217" pos:column="38">(<argument><expr><name pos:line="217" pos:column="39">newhost<pos:position pos:line="217" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="217" pos:column="48">"@/?"<pos:position pos:line="217" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="217" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="217" pos:column="55"/></expr_stmt>
            }<pos:position pos:line="218" pos:column="14"/></block></then></if>
            <expr_stmt><expr><operator pos:line="219" pos:column="13">*<pos:position pos:line="219" pos:column="14"/></operator><name pos:line="219" pos:column="14">t<pos:position pos:line="219" pos:column="15"/></name> <operator pos:line="219" pos:column="16">=<pos:position pos:line="219" pos:column="17"/></operator> <literal type="char" pos:line="219" pos:column="18">'\0'<pos:position pos:line="219" pos:column="22"/></literal></expr>;<pos:position pos:line="219" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="220" pos:column="13">host<pos:position pos:line="220" pos:column="17"/></name> <operator pos:line="220" pos:column="18">=<pos:position pos:line="220" pos:column="19"/></operator> <name pos:line="220" pos:column="20">newhost<pos:position pos:line="220" pos:column="27"/></name></expr>;<pos:position pos:line="220" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="221" pos:column="10"/></block></then></if>
    }<pos:position pos:line="222" pos:column="6"/></block></then></if>

    <if pos:line="224" pos:column="5">if <condition pos:line="224" pos:column="8">(<expr><name><name pos:line="224" pos:column="9">version<pos:position pos:line="224" pos:column="16"/></name><index pos:line="224" pos:column="16">[<expr><literal type="number" pos:line="224" pos:column="17">0<pos:position pos:line="224" pos:column="18"/></literal></expr>]<pos:position pos:line="224" pos:column="19"/></index></name> <operator pos:line="224" pos:column="20">==<pos:position pos:line="224" pos:column="22"/></operator> <literal type="char" pos:line="224" pos:column="23">'-'<pos:position pos:line="224" pos:column="26"/></literal> <operator pos:line="224" pos:column="27">||<pos:position pos:line="224" pos:column="29"/></operator> <operator pos:line="224" pos:column="30">!<pos:position pos:line="224" pos:column="31"/></operator><name><name pos:line="224" pos:column="31">version<pos:position pos:line="224" pos:column="38"/></name><index pos:line="224" pos:column="38">[<expr><literal type="number" pos:line="224" pos:column="39">0<pos:position pos:line="224" pos:column="40"/></literal></expr>]<pos:position pos:line="224" pos:column="41"/></index></name></expr>)<pos:position pos:line="224" pos:column="42"/></condition><then pos:line="224" pos:column="42"> <block pos:line="224" pos:column="43">{
        <comment type="block" pos:line="225" pos:column="9">/* HTTP/0.9, no headers, no version */</comment>
        <expr_stmt><expr><call><name pos:line="226" pos:column="9">snprintf<pos:position pos:line="226" pos:column="17"/></name><argument_list pos:line="226" pos:column="17">(<argument><expr><name pos:line="226" pos:column="18">msg<pos:position pos:line="226" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="23">BUFSIZ<pos:position pos:line="226" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="226" pos:column="31">"%s %s\r\n"<pos:position pos:line="226" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="226" pos:column="44">method<pos:position pos:line="226" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="52">url<pos:position pos:line="226" pos:column="55"/></name></expr></argument>)<pos:position pos:line="226" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="227" pos:column="6"/></block></then> <else pos:line="227" pos:column="7">else <block pos:line="227" pos:column="12">{
        <if pos:line="228" pos:column="9">if <condition pos:line="228" pos:column="12">(<expr><operator pos:line="228" pos:column="13">!<pos:position pos:line="228" pos:column="14"/></operator><call><name pos:line="228" pos:column="14">xisdigit<pos:position pos:line="228" pos:column="22"/></name><argument_list pos:line="228" pos:column="22">(<argument><expr><name><name pos:line="228" pos:column="23">version<pos:position pos:line="228" pos:column="30"/></name><index pos:line="228" pos:column="30">[<expr><literal type="number" pos:line="228" pos:column="31">0<pos:position pos:line="228" pos:column="32"/></literal></expr>]<pos:position pos:line="228" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="228" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="228" pos:column="35"/></condition><then pos:line="228" pos:column="35"> <comment type="line" pos:line="228" pos:column="36">// not HTTP/n.n</comment>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="229" pos:column="13">snprintf<pos:position pos:line="229" pos:column="21"/></name><argument_list pos:line="229" pos:column="21">(<argument><expr><name pos:line="229" pos:column="22">msg<pos:position pos:line="229" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="27">BUFSIZ<pos:position pos:line="229" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="229" pos:column="35">"%s %s %s\r\n"<pos:position pos:line="229" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="229" pos:column="51">method<pos:position pos:line="229" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="59">url<pos:position pos:line="229" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="229" pos:column="64">version<pos:position pos:line="229" pos:column="71"/></name></expr></argument>)<pos:position pos:line="229" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="73"/></expr_stmt></block></then>
        <else pos:line="230" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="231" pos:column="13">snprintf<pos:position pos:line="231" pos:column="21"/></name><argument_list pos:line="231" pos:column="21">(<argument><expr><name pos:line="231" pos:column="22">msg<pos:position pos:line="231" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="27">BUFSIZ<pos:position pos:line="231" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="231" pos:column="35">"%s %s HTTP/%s\r\n"<pos:position pos:line="231" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="231" pos:column="56">method<pos:position pos:line="231" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="64">url<pos:position pos:line="231" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="231" pos:column="69">version<pos:position pos:line="231" pos:column="76"/></name></expr></argument>)<pos:position pos:line="231" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="231" pos:column="78"/></expr_stmt></block></else></if>

        <if pos:line="233" pos:column="9">if <condition pos:line="233" pos:column="12">(<expr><name pos:line="233" pos:column="13">host<pos:position pos:line="233" pos:column="17"/></name></expr>)<pos:position pos:line="233" pos:column="18"/></condition><then pos:line="233" pos:column="18"> <block pos:line="233" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="234" pos:column="13">snprintf<pos:position pos:line="234" pos:column="21"/></name><argument_list pos:line="234" pos:column="21">(<argument><expr><name pos:line="234" pos:column="22">buf<pos:position pos:line="234" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="234" pos:column="27">BUFSIZ<pos:position pos:line="234" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="234" pos:column="35">"Host: %s\r\n"<pos:position pos:line="234" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="234" pos:column="51">host<pos:position pos:line="234" pos:column="55"/></name></expr></argument>)<pos:position pos:line="234" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="235" pos:column="13">strcat<pos:position pos:line="235" pos:column="19"/></name><argument_list pos:line="235" pos:column="19">(<argument><expr><name pos:line="235" pos:column="20">msg<pos:position pos:line="235" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="235" pos:column="24">buf<pos:position pos:line="235" pos:column="27"/></name></expr></argument>)<pos:position pos:line="235" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="236" pos:column="10"/></block></then></if>

        <if pos:line="238" pos:column="9">if <condition pos:line="238" pos:column="12">(<expr><name pos:line="238" pos:column="13">useragent<pos:position pos:line="238" pos:column="22"/></name> <operator pos:line="238" pos:column="23">==<pos:position pos:line="238" pos:column="25"/></operator> <name pos:line="238" pos:column="26">NULL<pos:position pos:line="238" pos:column="30"/></name></expr>)<pos:position pos:line="238" pos:column="31"/></condition><then pos:line="238" pos:column="31"> <block pos:line="238" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="239" pos:column="13">snprintf<pos:position pos:line="239" pos:column="21"/></name><argument_list pos:line="239" pos:column="21">(<argument><expr><name pos:line="239" pos:column="22">buf<pos:position pos:line="239" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="239" pos:column="27">BUFSIZ<pos:position pos:line="239" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="239" pos:column="35">"User-Agent: squidclient/%s\r\n"<pos:position pos:line="239" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="239" pos:column="69">VERSION<pos:position pos:line="239" pos:column="76"/></name></expr></argument>)<pos:position pos:line="239" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="239" pos:column="78"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="240" pos:column="13">strcat<pos:position pos:line="240" pos:column="19"/></name><argument_list pos:line="240" pos:column="19">(<argument><expr><name pos:line="240" pos:column="20">msg<pos:position pos:line="240" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="240" pos:column="24">buf<pos:position pos:line="240" pos:column="27"/></name></expr></argument>)<pos:position pos:line="240" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="241" pos:column="10"/></block></then> <elseif pos:line="241" pos:column="11">else <if pos:line="241" pos:column="16">if <condition pos:line="241" pos:column="19">(<expr><name><name pos:line="241" pos:column="20">useragent<pos:position pos:line="241" pos:column="29"/></name><index pos:line="241" pos:column="29">[<expr><literal type="number" pos:line="241" pos:column="30">0<pos:position pos:line="241" pos:column="31"/></literal></expr>]<pos:position pos:line="241" pos:column="32"/></index></name> <operator pos:line="241" pos:column="33">!=<pos:position pos:line="241" pos:column="35"/></operator> <literal type="char" pos:line="241" pos:column="36">'\0'<pos:position pos:line="241" pos:column="40"/></literal></expr>)<pos:position pos:line="241" pos:column="41"/></condition><then pos:line="241" pos:column="41"> <block pos:line="241" pos:column="42">{
            <expr_stmt><expr><call><name pos:line="242" pos:column="13">snprintf<pos:position pos:line="242" pos:column="21"/></name><argument_list pos:line="242" pos:column="21">(<argument><expr><name pos:line="242" pos:column="22">buf<pos:position pos:line="242" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="27">BUFSIZ<pos:position pos:line="242" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="242" pos:column="35">"User-Agent: %s\r\n"<pos:position pos:line="242" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="242" pos:column="57">useragent<pos:position pos:line="242" pos:column="66"/></name></expr></argument>)<pos:position pos:line="242" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="243" pos:column="13">strcat<pos:position pos:line="243" pos:column="19"/></name><argument_list pos:line="243" pos:column="19">(<argument><expr><name pos:line="243" pos:column="20">msg<pos:position pos:line="243" pos:column="23"/></name></expr></argument>,<argument><expr><name pos:line="243" pos:column="24">buf<pos:position pos:line="243" pos:column="27"/></name></expr></argument>)<pos:position pos:line="243" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="244" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="246" pos:column="9">if <condition pos:line="246" pos:column="12">(<expr><name pos:line="246" pos:column="13">reload<pos:position pos:line="246" pos:column="19"/></name></expr>)<pos:position pos:line="246" pos:column="20"/></condition><then pos:line="246" pos:column="20"> <block pos:line="246" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="247" pos:column="13">snprintf<pos:position pos:line="247" pos:column="21"/></name><argument_list pos:line="247" pos:column="21">(<argument><expr><name pos:line="247" pos:column="22">buf<pos:position pos:line="247" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="247" pos:column="27">BUFSIZ<pos:position pos:line="247" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="247" pos:column="35">"Cache-Control: no-cache\r\n"<pos:position pos:line="247" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="247" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="248" pos:column="13">strcat<pos:position pos:line="248" pos:column="19"/></name><argument_list pos:line="248" pos:column="19">(<argument><expr><name pos:line="248" pos:column="20">msg<pos:position pos:line="248" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="248" pos:column="25">buf<pos:position pos:line="248" pos:column="28"/></name></expr></argument>)<pos:position pos:line="248" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="249" pos:column="10"/></block></then></if>
        <if pos:line="250" pos:column="9">if <condition pos:line="250" pos:column="12">(<expr><name pos:line="250" pos:column="13">put_fd<pos:position pos:line="250" pos:column="19"/></name> <operator pos:line="250" pos:column="20">&gt;<pos:position pos:line="250" pos:column="24"/></operator> <literal type="number" pos:line="250" pos:column="22">0<pos:position pos:line="250" pos:column="23"/></literal></expr>)<pos:position pos:line="250" pos:column="24"/></condition><then pos:line="250" pos:column="24"> <block pos:line="250" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="251" pos:column="13">snprintf<pos:position pos:line="251" pos:column="21"/></name><argument_list pos:line="251" pos:column="21">(<argument><expr><name pos:line="251" pos:column="22">buf<pos:position pos:line="251" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="251" pos:column="27">BUFSIZ<pos:position pos:line="251" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="35">"Content-length: %"<pos:position pos:line="251" pos:column="54"/></literal> <name pos:line="251" pos:column="55">PRId64<pos:position pos:line="251" pos:column="61"/></name> <literal type="string" pos:line="251" pos:column="62">"\r\n"<pos:position pos:line="251" pos:column="68"/></literal></expr></argument>, <argument><expr><operator pos:line="251" pos:column="70">(<pos:position pos:line="251" pos:column="71"/></operator><name pos:line="251" pos:column="71">int64_t<pos:position pos:line="251" pos:column="78"/></name><operator pos:line="251" pos:column="78">)<pos:position pos:line="251" pos:column="79"/></operator> <name><name pos:line="251" pos:column="80">sb<pos:position pos:line="251" pos:column="82"/></name><operator pos:line="251" pos:column="82">.<pos:position pos:line="251" pos:column="83"/></operator><name pos:line="251" pos:column="83">st_size<pos:position pos:line="251" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="251" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="92"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="252" pos:column="13">strcat<pos:position pos:line="252" pos:column="19"/></name><argument_list pos:line="252" pos:column="19">(<argument><expr><name pos:line="252" pos:column="20">msg<pos:position pos:line="252" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="252" pos:column="25">buf<pos:position pos:line="252" pos:column="28"/></name></expr></argument>)<pos:position pos:line="252" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="253" pos:column="10"/></block></then></if>
        <if pos:line="254" pos:column="9">if <condition pos:line="254" pos:column="12">(<expr><name pos:line="254" pos:column="13">opt_noaccept<pos:position pos:line="254" pos:column="25"/></name> <operator pos:line="254" pos:column="26">==<pos:position pos:line="254" pos:column="28"/></operator> <literal type="number" pos:line="254" pos:column="29">0<pos:position pos:line="254" pos:column="30"/></literal></expr>)<pos:position pos:line="254" pos:column="31"/></condition><then pos:line="254" pos:column="31"> <block pos:line="254" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="255" pos:column="13">snprintf<pos:position pos:line="255" pos:column="21"/></name><argument_list pos:line="255" pos:column="21">(<argument><expr><name pos:line="255" pos:column="22">buf<pos:position pos:line="255" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="27">BUFSIZ<pos:position pos:line="255" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="255" pos:column="35">"Accept: */*\r\n"<pos:position pos:line="255" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="255" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="256" pos:column="13">strcat<pos:position pos:line="256" pos:column="19"/></name><argument_list pos:line="256" pos:column="19">(<argument><expr><name pos:line="256" pos:column="20">msg<pos:position pos:line="256" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="25">buf<pos:position pos:line="256" pos:column="28"/></name></expr></argument>)<pos:position pos:line="256" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="257" pos:column="10"/></block></then></if>
        <if pos:line="258" pos:column="9">if <condition pos:line="258" pos:column="12">(<expr><name pos:line="258" pos:column="13">ims<pos:position pos:line="258" pos:column="16"/></name></expr>)<pos:position pos:line="258" pos:column="17"/></condition><then pos:line="258" pos:column="17"> <block pos:line="258" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="259" pos:column="13">snprintf<pos:position pos:line="259" pos:column="21"/></name><argument_list pos:line="259" pos:column="21">(<argument><expr><name pos:line="259" pos:column="22">buf<pos:position pos:line="259" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="259" pos:column="27">BUFSIZ<pos:position pos:line="259" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="259" pos:column="35">"If-Modified-Since: %s\r\n"<pos:position pos:line="259" pos:column="62"/></literal></expr></argument>, <argument><expr><call><name pos:line="259" pos:column="64">mkrfc1123<pos:position pos:line="259" pos:column="73"/></name><argument_list pos:line="259" pos:column="73">(<argument><expr><name pos:line="259" pos:column="74">ims<pos:position pos:line="259" pos:column="77"/></name></expr></argument>)<pos:position pos:line="259" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="259" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="259" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="260" pos:column="13">strcat<pos:position pos:line="260" pos:column="19"/></name><argument_list pos:line="260" pos:column="19">(<argument><expr><name pos:line="260" pos:column="20">msg<pos:position pos:line="260" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="260" pos:column="25">buf<pos:position pos:line="260" pos:column="28"/></name></expr></argument>)<pos:position pos:line="260" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="260" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="261" pos:column="10"/></block></then></if>
        <if pos:line="262" pos:column="9">if <condition pos:line="262" pos:column="12">(<expr><name pos:line="262" pos:column="13">max_forwards<pos:position pos:line="262" pos:column="25"/></name> <operator pos:line="262" pos:column="26">&gt;<pos:position pos:line="262" pos:column="30"/></operator> <operator pos:line="262" pos:column="28">-<pos:position pos:line="262" pos:column="29"/></operator><literal type="number" pos:line="262" pos:column="29">1<pos:position pos:line="262" pos:column="30"/></literal></expr>)<pos:position pos:line="262" pos:column="31"/></condition><then pos:line="262" pos:column="31"> <block pos:line="262" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="263" pos:column="13">snprintf<pos:position pos:line="263" pos:column="21"/></name><argument_list pos:line="263" pos:column="21">(<argument><expr><name pos:line="263" pos:column="22">buf<pos:position pos:line="263" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="27">BUFSIZ<pos:position pos:line="263" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="263" pos:column="35">"Max-Forwards: %d\r\n"<pos:position pos:line="263" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="263" pos:column="59">max_forwards<pos:position pos:line="263" pos:column="71"/></name></expr></argument>)<pos:position pos:line="263" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="264" pos:column="13">strcat<pos:position pos:line="264" pos:column="19"/></name><argument_list pos:line="264" pos:column="19">(<argument><expr><name pos:line="264" pos:column="20">msg<pos:position pos:line="264" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="264" pos:column="25">buf<pos:position pos:line="264" pos:column="28"/></name></expr></argument>)<pos:position pos:line="264" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="265" pos:column="10"/></block></then></if>
        <if pos:line="266" pos:column="9">if <condition pos:line="266" pos:column="12">(<expr><name pos:line="266" pos:column="13">proxy_user<pos:position pos:line="266" pos:column="23"/></name></expr>)<pos:position pos:line="266" pos:column="24"/></condition><then pos:line="266" pos:column="24"> <block pos:line="266" pos:column="25">{
            <decl_stmt><decl><type><specifier pos:line="267" pos:column="13">const<pos:position pos:line="267" pos:column="18"/></specifier> <name pos:line="267" pos:column="19">char<pos:position pos:line="267" pos:column="23"/></name> <modifier pos:line="267" pos:column="24">*<pos:position pos:line="267" pos:column="25"/></modifier></type><name pos:line="267" pos:column="25">user<pos:position pos:line="267" pos:column="29"/></name> <init pos:line="267" pos:column="30">= <expr><name pos:line="267" pos:column="32">proxy_user<pos:position pos:line="267" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="267" pos:column="43"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="268" pos:column="13">const<pos:position pos:line="268" pos:column="18"/></specifier> <name pos:line="268" pos:column="19">char<pos:position pos:line="268" pos:column="23"/></name> <modifier pos:line="268" pos:column="24">*<pos:position pos:line="268" pos:column="25"/></modifier></type><name pos:line="268" pos:column="25">password<pos:position pos:line="268" pos:column="33"/></name> <init pos:line="268" pos:column="34">= <expr><name pos:line="268" pos:column="36">proxy_password<pos:position pos:line="268" pos:column="50"/></name></expr></init></decl>;<pos:position pos:line="268" pos:column="51"/></decl_stmt>
<cpp:if pos:line="269" pos:column="1">#<cpp:directive pos:line="269" pos:column="2">if<pos:position pos:line="269" pos:column="4"/></cpp:directive> <expr><name pos:line="269" pos:column="5">HAVE_GETPASS<pos:position pos:line="269" pos:column="17"/></name></expr></cpp:if>
            <if pos:line="270" pos:column="13">if <condition pos:line="270" pos:column="16">(<expr><operator pos:line="270" pos:column="17">!<pos:position pos:line="270" pos:column="18"/></operator><name pos:line="270" pos:column="18">password<pos:position pos:line="270" pos:column="26"/></name></expr>)<pos:position pos:line="270" pos:column="27"/></condition><then pos:line="270" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><name pos:line="271" pos:column="17">password<pos:position pos:line="271" pos:column="25"/></name> <operator pos:line="271" pos:column="26">=<pos:position pos:line="271" pos:column="27"/></operator> <call><name pos:line="271" pos:column="28">getpass<pos:position pos:line="271" pos:column="35"/></name><argument_list pos:line="271" pos:column="35">(<argument><expr><literal type="string" pos:line="271" pos:column="36">"Proxy password: "<pos:position pos:line="271" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="271" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="271" pos:column="56"/></expr_stmt></block></then></if>
<cpp:endif pos:line="272" pos:column="1">#<cpp:directive pos:line="272" pos:column="2">endif<pos:position pos:line="272" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="273" pos:column="13">if <condition pos:line="273" pos:column="16">(<expr><operator pos:line="273" pos:column="17">!<pos:position pos:line="273" pos:column="18"/></operator><name pos:line="273" pos:column="18">password<pos:position pos:line="273" pos:column="26"/></name></expr>)<pos:position pos:line="273" pos:column="27"/></condition><then pos:line="273" pos:column="27"> <block pos:line="273" pos:column="28">{
                <expr_stmt><expr><call><name pos:line="274" pos:column="17">fprintf<pos:position pos:line="274" pos:column="24"/></name><argument_list pos:line="274" pos:column="24">(<argument><expr><name pos:line="274" pos:column="25">stderr<pos:position pos:line="274" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="274" pos:column="33">"ERROR: Proxy password missing\n"<pos:position pos:line="274" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="274" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="68"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="275" pos:column="17">exit<pos:position pos:line="275" pos:column="21"/></name><argument_list pos:line="275" pos:column="21">(<argument><expr><literal type="number" pos:line="275" pos:column="22">1<pos:position pos:line="275" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="275" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="276" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="277" pos:column="13">snprintf<pos:position pos:line="277" pos:column="21"/></name><argument_list pos:line="277" pos:column="21">(<argument><expr><name pos:line="277" pos:column="22">buf<pos:position pos:line="277" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="27">BUFSIZ<pos:position pos:line="277" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="277" pos:column="35">"%s:%s"<pos:position pos:line="277" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="277" pos:column="44">user<pos:position pos:line="277" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="50">password<pos:position pos:line="277" pos:column="58"/></name></expr></argument>)<pos:position pos:line="277" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="278" pos:column="13">snprintf<pos:position pos:line="278" pos:column="21"/></name><argument_list pos:line="278" pos:column="21">(<argument><expr><name pos:line="278" pos:column="22">buf<pos:position pos:line="278" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="27">BUFSIZ<pos:position pos:line="278" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="278" pos:column="35">"Proxy-Authorization: Basic %s\r\n"<pos:position pos:line="278" pos:column="70"/></literal></expr></argument>, <argument><expr><call><name pos:line="278" pos:column="72">base64_encode<pos:position pos:line="278" pos:column="85"/></name><argument_list pos:line="278" pos:column="85">(<argument><expr><name pos:line="278" pos:column="86">buf<pos:position pos:line="278" pos:column="89"/></name></expr></argument>)<pos:position pos:line="278" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="278" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="92"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="279" pos:column="13">strcat<pos:position pos:line="279" pos:column="19"/></name><argument_list pos:line="279" pos:column="19">(<argument><expr><name pos:line="279" pos:column="20">msg<pos:position pos:line="279" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="279" pos:column="25">buf<pos:position pos:line="279" pos:column="28"/></name></expr></argument>)<pos:position pos:line="279" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="279" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="280" pos:column="10"/></block></then></if>
        <if pos:line="281" pos:column="9">if <condition pos:line="281" pos:column="12">(<expr><name pos:line="281" pos:column="13">www_user<pos:position pos:line="281" pos:column="21"/></name></expr>)<pos:position pos:line="281" pos:column="22"/></condition><then pos:line="281" pos:column="22"> <block pos:line="281" pos:column="23">{
            <decl_stmt><decl><type><specifier pos:line="282" pos:column="13">const<pos:position pos:line="282" pos:column="18"/></specifier> <name pos:line="282" pos:column="19">char<pos:position pos:line="282" pos:column="23"/></name> <modifier pos:line="282" pos:column="24">*<pos:position pos:line="282" pos:column="25"/></modifier></type><name pos:line="282" pos:column="25">user<pos:position pos:line="282" pos:column="29"/></name> <init pos:line="282" pos:column="30">= <expr><name pos:line="282" pos:column="32">www_user<pos:position pos:line="282" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="282" pos:column="41"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="283" pos:column="13">const<pos:position pos:line="283" pos:column="18"/></specifier> <name pos:line="283" pos:column="19">char<pos:position pos:line="283" pos:column="23"/></name> <modifier pos:line="283" pos:column="24">*<pos:position pos:line="283" pos:column="25"/></modifier></type><name pos:line="283" pos:column="25">password<pos:position pos:line="283" pos:column="33"/></name> <init pos:line="283" pos:column="34">= <expr><name pos:line="283" pos:column="36">www_password<pos:position pos:line="283" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="283" pos:column="49"/></decl_stmt>
<cpp:if pos:line="284" pos:column="1">#<cpp:directive pos:line="284" pos:column="2">if<pos:position pos:line="284" pos:column="4"/></cpp:directive> <expr><name pos:line="284" pos:column="5">HAVE_GETPASS<pos:position pos:line="284" pos:column="17"/></name></expr></cpp:if>
            <if pos:line="285" pos:column="13">if <condition pos:line="285" pos:column="16">(<expr><operator pos:line="285" pos:column="17">!<pos:position pos:line="285" pos:column="18"/></operator><name pos:line="285" pos:column="18">password<pos:position pos:line="285" pos:column="26"/></name></expr>)<pos:position pos:line="285" pos:column="27"/></condition><then pos:line="285" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><name pos:line="286" pos:column="17">password<pos:position pos:line="286" pos:column="25"/></name> <operator pos:line="286" pos:column="26">=<pos:position pos:line="286" pos:column="27"/></operator> <call><name pos:line="286" pos:column="28">getpass<pos:position pos:line="286" pos:column="35"/></name><argument_list pos:line="286" pos:column="35">(<argument><expr><literal type="string" pos:line="286" pos:column="36">"WWW password: "<pos:position pos:line="286" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="286" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="54"/></expr_stmt></block></then></if>
<cpp:endif pos:line="287" pos:column="1">#<cpp:directive pos:line="287" pos:column="2">endif<pos:position pos:line="287" pos:column="7"/></cpp:directive></cpp:endif>
            <if pos:line="288" pos:column="13">if <condition pos:line="288" pos:column="16">(<expr><operator pos:line="288" pos:column="17">!<pos:position pos:line="288" pos:column="18"/></operator><name pos:line="288" pos:column="18">password<pos:position pos:line="288" pos:column="26"/></name></expr>)<pos:position pos:line="288" pos:column="27"/></condition><then pos:line="288" pos:column="27"> <block pos:line="288" pos:column="28">{
                <expr_stmt><expr><call><name pos:line="289" pos:column="17">fprintf<pos:position pos:line="289" pos:column="24"/></name><argument_list pos:line="289" pos:column="24">(<argument><expr><name pos:line="289" pos:column="25">stderr<pos:position pos:line="289" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="289" pos:column="33">"ERROR: WWW password missing\n"<pos:position pos:line="289" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="66"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="290" pos:column="17">exit<pos:position pos:line="290" pos:column="21"/></name><argument_list pos:line="290" pos:column="21">(<argument><expr><literal type="number" pos:line="290" pos:column="22">1<pos:position pos:line="290" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="290" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="290" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="291" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="292" pos:column="13">snprintf<pos:position pos:line="292" pos:column="21"/></name><argument_list pos:line="292" pos:column="21">(<argument><expr><name pos:line="292" pos:column="22">buf<pos:position pos:line="292" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="27">BUFSIZ<pos:position pos:line="292" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="35">"%s:%s"<pos:position pos:line="292" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="292" pos:column="44">user<pos:position pos:line="292" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="292" pos:column="50">password<pos:position pos:line="292" pos:column="58"/></name></expr></argument>)<pos:position pos:line="292" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="293" pos:column="13">snprintf<pos:position pos:line="293" pos:column="21"/></name><argument_list pos:line="293" pos:column="21">(<argument><expr><name pos:line="293" pos:column="22">buf<pos:position pos:line="293" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="293" pos:column="27">BUFSIZ<pos:position pos:line="293" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="293" pos:column="35">"Authorization: Basic %s\r\n"<pos:position pos:line="293" pos:column="64"/></literal></expr></argument>, <argument><expr><call><name pos:line="293" pos:column="66">base64_encode<pos:position pos:line="293" pos:column="79"/></name><argument_list pos:line="293" pos:column="79">(<argument><expr><name pos:line="293" pos:column="80">buf<pos:position pos:line="293" pos:column="83"/></name></expr></argument>)<pos:position pos:line="293" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="293" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="86"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="294" pos:column="13">strcat<pos:position pos:line="294" pos:column="19"/></name><argument_list pos:line="294" pos:column="19">(<argument><expr><name pos:line="294" pos:column="20">msg<pos:position pos:line="294" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="294" pos:column="25">buf<pos:position pos:line="294" pos:column="28"/></name></expr></argument>)<pos:position pos:line="294" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="295" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="297" pos:column="9">/* HTTP/1.0 may need keep-alive explicitly */</comment>
        <if pos:line="298" pos:column="9">if <condition pos:line="298" pos:column="12">(<expr><call><name pos:line="298" pos:column="13">strcmp<pos:position pos:line="298" pos:column="19"/></name><argument_list pos:line="298" pos:column="19">(<argument><expr><name pos:line="298" pos:column="20">version<pos:position pos:line="298" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="298" pos:column="29">"1.0"<pos:position pos:line="298" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="298" pos:column="35"/></argument_list></call> <operator pos:line="298" pos:column="36">==<pos:position pos:line="298" pos:column="38"/></operator> <literal type="number" pos:line="298" pos:column="39">0<pos:position pos:line="298" pos:column="40"/></literal> <operator pos:line="298" pos:column="41">&amp;&amp;<pos:position pos:line="298" pos:column="51"/></operator> <name pos:line="298" pos:column="44">keep_alive<pos:position pos:line="298" pos:column="54"/></name></expr>)<pos:position pos:line="298" pos:column="55"/></condition><then pos:line="298" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="299" pos:column="13">strcat<pos:position pos:line="299" pos:column="19"/></name><argument_list pos:line="299" pos:column="19">(<argument><expr><name pos:line="299" pos:column="20">msg<pos:position pos:line="299" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="299" pos:column="25">"Connection: keep-alive\r\n"<pos:position pos:line="299" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="299" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="299" pos:column="55"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="301" pos:column="9">/* HTTP/1.1 may need close explicitly */</comment>
        <if pos:line="302" pos:column="9">if <condition pos:line="302" pos:column="12">(<expr><operator pos:line="302" pos:column="13">!<pos:position pos:line="302" pos:column="14"/></operator><name pos:line="302" pos:column="14">keep_alive<pos:position pos:line="302" pos:column="24"/></name></expr>)<pos:position pos:line="302" pos:column="25"/></condition><then pos:line="302" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="303" pos:column="13">strcat<pos:position pos:line="303" pos:column="19"/></name><argument_list pos:line="303" pos:column="19">(<argument><expr><name pos:line="303" pos:column="20">msg<pos:position pos:line="303" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="303" pos:column="25">"Connection: close\r\n"<pos:position pos:line="303" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="303" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="303" pos:column="50"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="305" pos:column="9">strcat<pos:position pos:line="305" pos:column="15"/></name><argument_list pos:line="305" pos:column="15">(<argument><expr><name pos:line="305" pos:column="16">msg<pos:position pos:line="305" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="305" pos:column="21">extra_hdrs<pos:position pos:line="305" pos:column="31"/></name></expr></argument>)<pos:position pos:line="305" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="305" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="306" pos:column="9">strcat<pos:position pos:line="306" pos:column="15"/></name><argument_list pos:line="306" pos:column="15">(<argument><expr><name pos:line="306" pos:column="16">msg<pos:position pos:line="306" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="306" pos:column="21">"\r\n"<pos:position pos:line="306" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="306" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="306" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="307" pos:column="6"/></block></else></if>

    <if pos:line="309" pos:column="5">if <condition pos:line="309" pos:column="8">(<expr><name pos:line="309" pos:column="9">opt_verbose<pos:position pos:line="309" pos:column="20"/></name></expr>)<pos:position pos:line="309" pos:column="21"/></condition><then pos:line="309" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="310" pos:column="9">fprintf<pos:position pos:line="310" pos:column="16"/></name><argument_list pos:line="310" pos:column="16">(<argument><expr><name pos:line="310" pos:column="17">stderr<pos:position pos:line="310" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="310" pos:column="25">"Request:'%s'\n"<pos:position pos:line="310" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="310" pos:column="43">msg<pos:position pos:line="310" pos:column="46"/></name></expr></argument>)<pos:position pos:line="310" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="48"/></expr_stmt></block></then></if>

    <if pos:line="312" pos:column="5">if <condition pos:line="312" pos:column="8">(<expr><name pos:line="312" pos:column="9">ping<pos:position pos:line="312" pos:column="13"/></name></expr>)<pos:position pos:line="312" pos:column="14"/></condition><then pos:line="312" pos:column="14"> <block pos:line="312" pos:column="15">{
<cpp:if pos:line="313" pos:column="1">#<cpp:directive pos:line="313" pos:column="2">if<pos:position pos:line="313" pos:column="4"/></cpp:directive> <expr><name pos:line="313" pos:column="5">HAVE_SIGACTION<pos:position pos:line="313" pos:column="19"/></name></expr></cpp:if>

        <decl_stmt><decl><type><name><name pos:line="315" pos:column="9">struct<pos:position pos:line="315" pos:column="15"/></name> <name pos:line="315" pos:column="16">sigaction<pos:position pos:line="315" pos:column="25"/></name></name></type> <name pos:line="315" pos:column="26">sa<pos:position pos:line="315" pos:column="28"/></name></decl>, <decl><type ref="prev"/><name pos:line="315" pos:column="30">osa<pos:position pos:line="315" pos:column="33"/></name></decl>;<pos:position pos:line="315" pos:column="34"/></decl_stmt>

        <if pos:line="317" pos:column="9">if <condition pos:line="317" pos:column="12">(<expr><call><name pos:line="317" pos:column="13">sigaction<pos:position pos:line="317" pos:column="22"/></name><argument_list pos:line="317" pos:column="22">(<argument><expr><name pos:line="317" pos:column="23">SIGINT<pos:position pos:line="317" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="317" pos:column="31">NULL<pos:position pos:line="317" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="317" pos:column="37">&amp;<pos:position pos:line="317" pos:column="42"/></operator><name pos:line="317" pos:column="38">osa<pos:position pos:line="317" pos:column="41"/></name></expr></argument>)<pos:position pos:line="317" pos:column="42"/></argument_list></call> <operator pos:line="317" pos:column="43">==<pos:position pos:line="317" pos:column="45"/></operator> <literal type="number" pos:line="317" pos:column="46">0<pos:position pos:line="317" pos:column="47"/></literal> <operator pos:line="317" pos:column="48">&amp;&amp;<pos:position pos:line="317" pos:column="58"/></operator> <name><name pos:line="317" pos:column="51">osa<pos:position pos:line="317" pos:column="54"/></name><operator pos:line="317" pos:column="54">.<pos:position pos:line="317" pos:column="55"/></operator><name pos:line="317" pos:column="55">sa_handler<pos:position pos:line="317" pos:column="65"/></name></name> <operator pos:line="317" pos:column="66">==<pos:position pos:line="317" pos:column="68"/></operator> <name pos:line="317" pos:column="69">SIG_DFL<pos:position pos:line="317" pos:column="76"/></name></expr>)<pos:position pos:line="317" pos:column="77"/></condition><then pos:line="317" pos:column="77"> <block pos:line="317" pos:column="78">{
            <expr_stmt><expr><name><name pos:line="318" pos:column="13">sa<pos:position pos:line="318" pos:column="15"/></name><operator pos:line="318" pos:column="15">.<pos:position pos:line="318" pos:column="16"/></operator><name pos:line="318" pos:column="16">sa_handler<pos:position pos:line="318" pos:column="26"/></name></name> <operator pos:line="318" pos:column="27">=<pos:position pos:line="318" pos:column="28"/></operator> <name pos:line="318" pos:column="29">catchSignal<pos:position pos:line="318" pos:column="40"/></name></expr>;<pos:position pos:line="318" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="319" pos:column="13">sa<pos:position pos:line="319" pos:column="15"/></name><operator pos:line="319" pos:column="15">.<pos:position pos:line="319" pos:column="16"/></operator><name pos:line="319" pos:column="16">sa_flags<pos:position pos:line="319" pos:column="24"/></name></name> <operator pos:line="319" pos:column="25">=<pos:position pos:line="319" pos:column="26"/></operator> <literal type="number" pos:line="319" pos:column="27">0<pos:position pos:line="319" pos:column="28"/></literal></expr>;<pos:position pos:line="319" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="320" pos:column="13">sigemptyset<pos:position pos:line="320" pos:column="24"/></name><argument_list pos:line="320" pos:column="24">(<argument><expr><operator pos:line="320" pos:column="25">&amp;<pos:position pos:line="320" pos:column="30"/></operator><name><name pos:line="320" pos:column="26">sa<pos:position pos:line="320" pos:column="28"/></name><operator pos:line="320" pos:column="28">.<pos:position pos:line="320" pos:column="29"/></operator><name pos:line="320" pos:column="29">sa_mask<pos:position pos:line="320" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="320" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="321" pos:column="13">(<pos:position pos:line="321" pos:column="14"/></operator><name pos:line="321" pos:column="14">void<pos:position pos:line="321" pos:column="18"/></name><operator pos:line="321" pos:column="18">)<pos:position pos:line="321" pos:column="19"/></operator> <call><name pos:line="321" pos:column="20">sigaction<pos:position pos:line="321" pos:column="29"/></name><argument_list pos:line="321" pos:column="29">(<argument><expr><name pos:line="321" pos:column="30">SIGINT<pos:position pos:line="321" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="321" pos:column="38">&amp;<pos:position pos:line="321" pos:column="43"/></operator><name pos:line="321" pos:column="39">sa<pos:position pos:line="321" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="43">NULL<pos:position pos:line="321" pos:column="47"/></name></expr></argument>)<pos:position pos:line="321" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="321" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="322" pos:column="10"/></block></then></if>
<cpp:else pos:line="323" pos:column="1">#<cpp:directive pos:line="323" pos:column="2">else<pos:position pos:line="323" pos:column="6"/></cpp:directive></cpp:else>
        <function_decl><type><name pos:line="324" pos:column="9">void<pos:position pos:line="324" pos:column="13"/></name></type> (<modifier pos:line="324" pos:column="15">*<pos:position pos:line="324" pos:column="16"/></modifier><name pos:line="324" pos:column="16">osig<pos:position pos:line="324" pos:column="20"/></name>) <parameter_list pos:line="324" pos:column="22">(<parameter><decl><type><name pos:line="324" pos:column="23">int<pos:position pos:line="324" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="324" pos:column="27"/></parameter_list>;<pos:position pos:line="324" pos:column="28"/></function_decl>

        <if pos:line="326" pos:column="9">if <condition pos:line="326" pos:column="12">(<expr><operator pos:line="326" pos:column="13">(<pos:position pos:line="326" pos:column="14"/></operator><name pos:line="326" pos:column="14">osig<pos:position pos:line="326" pos:column="18"/></name> <operator pos:line="326" pos:column="19">=<pos:position pos:line="326" pos:column="20"/></operator> <call><name pos:line="326" pos:column="21">signal<pos:position pos:line="326" pos:column="27"/></name><argument_list pos:line="326" pos:column="27">(<argument><expr><name pos:line="326" pos:column="28">SIGINT<pos:position pos:line="326" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="326" pos:column="36">catchSignal<pos:position pos:line="326" pos:column="47"/></name></expr></argument>)<pos:position pos:line="326" pos:column="48"/></argument_list></call><operator pos:line="326" pos:column="48">)<pos:position pos:line="326" pos:column="49"/></operator> <operator pos:line="326" pos:column="50">!=<pos:position pos:line="326" pos:column="52"/></operator> <name pos:line="326" pos:column="53">SIG_DFL<pos:position pos:line="326" pos:column="60"/></name></expr>)<pos:position pos:line="326" pos:column="61"/></condition><then pos:line="326" pos:column="61">
            <block type="pseudo"><expr_stmt><expr><operator pos:line="327" pos:column="13">(<pos:position pos:line="327" pos:column="14"/></operator><name pos:line="327" pos:column="14">void<pos:position pos:line="327" pos:column="18"/></name><operator pos:line="327" pos:column="18">)<pos:position pos:line="327" pos:column="19"/></operator> <call><name pos:line="327" pos:column="20">signal<pos:position pos:line="327" pos:column="26"/></name><argument_list pos:line="327" pos:column="26">(<argument><expr><name pos:line="327" pos:column="27">SIGINT<pos:position pos:line="327" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="327" pos:column="35">osig<pos:position pos:line="327" pos:column="39"/></name></expr></argument>)<pos:position pos:line="327" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="327" pos:column="41"/></expr_stmt></block></then></if>

<cpp:endif pos:line="329" pos:column="1">#<cpp:directive pos:line="329" pos:column="2">endif<pos:position pos:line="329" pos:column="7"/></cpp:directive></cpp:endif>

    }<pos:position pos:line="331" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="332" pos:column="5">loops<pos:position pos:line="332" pos:column="10"/></name> <operator pos:line="332" pos:column="11">=<pos:position pos:line="332" pos:column="12"/></operator> <ternary><condition><expr><name pos:line="332" pos:column="13">ping<pos:position pos:line="332" pos:column="17"/></name></expr> ?<pos:position pos:line="332" pos:column="19"/></condition><then pos:line="332" pos:column="19"> <expr><name pos:line="332" pos:column="20">pcount<pos:position pos:line="332" pos:column="26"/></name></expr> <pos:position pos:line="332" pos:column="27"/></then><else pos:line="332" pos:column="27">: <expr><literal type="number" pos:line="332" pos:column="29">1<pos:position pos:line="332" pos:column="30"/></literal></expr></else></ternary></expr>;<pos:position pos:line="332" pos:column="31"/></expr_stmt>

    <for pos:line="334" pos:column="5">for <control pos:line="334" pos:column="9">(<init><expr><name pos:line="334" pos:column="10">i<pos:position pos:line="334" pos:column="11"/></name> <operator pos:line="334" pos:column="12">=<pos:position pos:line="334" pos:column="13"/></operator> <literal type="number" pos:line="334" pos:column="14">0<pos:position pos:line="334" pos:column="15"/></literal></expr>;<pos:position pos:line="334" pos:column="16"/></init> <condition><expr><name pos:line="334" pos:column="17">loops<pos:position pos:line="334" pos:column="22"/></name> <operator pos:line="334" pos:column="23">==<pos:position pos:line="334" pos:column="25"/></operator> <literal type="number" pos:line="334" pos:column="26">0<pos:position pos:line="334" pos:column="27"/></literal> <operator pos:line="334" pos:column="28">||<pos:position pos:line="334" pos:column="30"/></operator> <name pos:line="334" pos:column="31">i<pos:position pos:line="334" pos:column="32"/></name> <operator pos:line="334" pos:column="33">&lt;<pos:position pos:line="334" pos:column="37"/></operator> <name pos:line="334" pos:column="35">loops<pos:position pos:line="334" pos:column="40"/></name></expr>;<pos:position pos:line="334" pos:column="41"/></condition> <incr><expr><name pos:line="334" pos:column="42">i<pos:position pos:line="334" pos:column="43"/></name><operator pos:line="334" pos:column="43">++<pos:position pos:line="334" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="334" pos:column="46"/></control> <block pos:line="334" pos:column="47">{
        <decl_stmt><decl><type><name pos:line="335" pos:column="9">int<pos:position pos:line="335" pos:column="12"/></name></type> <name pos:line="335" pos:column="13">fsize<pos:position pos:line="335" pos:column="18"/></name> <init pos:line="335" pos:column="19">= <expr><literal type="number" pos:line="335" pos:column="21">0<pos:position pos:line="335" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="335" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="336" pos:column="9">struct<pos:position pos:line="336" pos:column="15"/></name> <name pos:line="336" pos:column="16">addrinfo<pos:position pos:line="336" pos:column="24"/></name></name> <modifier pos:line="336" pos:column="25">*<pos:position pos:line="336" pos:column="26"/></modifier></type><name pos:line="336" pos:column="26">AI<pos:position pos:line="336" pos:column="28"/></name> <init pos:line="336" pos:column="29">= <expr><name pos:line="336" pos:column="31">NULL<pos:position pos:line="336" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="336" pos:column="36"/></decl_stmt>

        <if pos:line="338" pos:column="9">if <condition pos:line="338" pos:column="12">(<expr><name pos:line="338" pos:column="13">opt_verbose<pos:position pos:line="338" pos:column="24"/></name></expr>)<pos:position pos:line="338" pos:column="25"/></condition><then pos:line="338" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="339" pos:column="13">fprintf<pos:position pos:line="339" pos:column="20"/></name><argument_list pos:line="339" pos:column="20">(<argument><expr><name pos:line="339" pos:column="21">stderr<pos:position pos:line="339" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="339" pos:column="29">"Resolving... %s\n"<pos:position pos:line="339" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="339" pos:column="50">hostname<pos:position pos:line="339" pos:column="58"/></name></expr></argument>)<pos:position pos:line="339" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="60"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="341" pos:column="9">/* Connect to the server */</comment>

        <if pos:line="343" pos:column="9">if <condition pos:line="343" pos:column="12">(<expr><name pos:line="343" pos:column="13">localhost<pos:position pos:line="343" pos:column="22"/></name></expr>)<pos:position pos:line="343" pos:column="23"/></condition><then pos:line="343" pos:column="23"> <block pos:line="343" pos:column="24">{
            <if pos:line="344" pos:column="13">if <condition pos:line="344" pos:column="16">( <expr><operator pos:line="344" pos:column="18">!<pos:position pos:line="344" pos:column="19"/></operator><call><name><name pos:line="344" pos:column="19">iaddr<pos:position pos:line="344" pos:column="24"/></name><operator pos:line="344" pos:column="24">.<pos:position pos:line="344" pos:column="25"/></operator><name pos:line="344" pos:column="25">GetHostByName<pos:position pos:line="344" pos:column="38"/></name></name><argument_list pos:line="344" pos:column="38">(<argument><expr><name pos:line="344" pos:column="39">localhost<pos:position pos:line="344" pos:column="48"/></name></expr></argument>)<pos:position pos:line="344" pos:column="49"/></argument_list></call></expr> )<pos:position pos:line="344" pos:column="51"/></condition><then pos:line="344" pos:column="51"> <block pos:line="344" pos:column="52">{
                <expr_stmt><expr><call><name pos:line="345" pos:column="17">fprintf<pos:position pos:line="345" pos:column="24"/></name><argument_list pos:line="345" pos:column="24">(<argument><expr><name pos:line="345" pos:column="25">stderr<pos:position pos:line="345" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="345" pos:column="33">"client: ERROR: Cannot resolve %s: Host unknown.\n"<pos:position pos:line="345" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="345" pos:column="86">localhost<pos:position pos:line="345" pos:column="95"/></name></expr></argument>)<pos:position pos:line="345" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="345" pos:column="97"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="346" pos:column="17">exit<pos:position pos:line="346" pos:column="21"/></name><argument_list pos:line="346" pos:column="21">(<argument><expr><literal type="number" pos:line="346" pos:column="22">1<pos:position pos:line="346" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="346" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="346" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="347" pos:column="14"/></block></then></if>
        }<pos:position pos:line="348" pos:column="10"/></block></then> <else pos:line="348" pos:column="11">else <block pos:line="348" pos:column="16">{
            <comment type="block" pos:line="349" pos:column="13">/* Process the remote host name to locate the Protocol required
               in case we are being asked to link to another version of squid */</comment>
            <if pos:line="351" pos:column="13">if <condition pos:line="351" pos:column="16">( <expr><operator pos:line="351" pos:column="18">!<pos:position pos:line="351" pos:column="19"/></operator><call><name><name pos:line="351" pos:column="19">iaddr<pos:position pos:line="351" pos:column="24"/></name><operator pos:line="351" pos:column="24">.<pos:position pos:line="351" pos:column="25"/></operator><name pos:line="351" pos:column="25">GetHostByName<pos:position pos:line="351" pos:column="38"/></name></name><argument_list pos:line="351" pos:column="38">(<argument><expr><name pos:line="351" pos:column="39">hostname<pos:position pos:line="351" pos:column="47"/></name></expr></argument>)<pos:position pos:line="351" pos:column="48"/></argument_list></call></expr> )<pos:position pos:line="351" pos:column="50"/></condition><then pos:line="351" pos:column="50"> <block pos:line="351" pos:column="51">{
                <expr_stmt><expr><call><name pos:line="352" pos:column="17">fprintf<pos:position pos:line="352" pos:column="24"/></name><argument_list pos:line="352" pos:column="24">(<argument><expr><name pos:line="352" pos:column="25">stderr<pos:position pos:line="352" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="352" pos:column="33">"client: ERROR: Cannot resolve %s: Host unknown.\n"<pos:position pos:line="352" pos:column="84"/></literal></expr></argument>, <argument><expr><name pos:line="352" pos:column="86">hostname<pos:position pos:line="352" pos:column="94"/></name></expr></argument>)<pos:position pos:line="352" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="96"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="353" pos:column="17">exit<pos:position pos:line="353" pos:column="21"/></name><argument_list pos:line="353" pos:column="21">(<argument><expr><literal type="number" pos:line="353" pos:column="22">1<pos:position pos:line="353" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="353" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="353" pos:column="25"/></expr_stmt>
            }<pos:position pos:line="354" pos:column="14"/></block></then></if>
        }<pos:position pos:line="355" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name><name pos:line="357" pos:column="9">iaddr<pos:position pos:line="357" pos:column="14"/></name><operator pos:line="357" pos:column="14">.<pos:position pos:line="357" pos:column="15"/></operator><name pos:line="357" pos:column="15">GetAddrInfo<pos:position pos:line="357" pos:column="26"/></name></name><argument_list pos:line="357" pos:column="26">(<argument><expr><name pos:line="357" pos:column="27">AI<pos:position pos:line="357" pos:column="29"/></name></expr></argument>)<pos:position pos:line="357" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="357" pos:column="31"/></expr_stmt>
        <if pos:line="358" pos:column="9">if <condition pos:line="358" pos:column="12">(<expr><operator pos:line="358" pos:column="13">(<pos:position pos:line="358" pos:column="14"/></operator><name pos:line="358" pos:column="14">conn<pos:position pos:line="358" pos:column="18"/></name> <operator pos:line="358" pos:column="19">=<pos:position pos:line="358" pos:column="20"/></operator> <call><name pos:line="358" pos:column="21">socket<pos:position pos:line="358" pos:column="27"/></name><argument_list pos:line="358" pos:column="27">(<argument><expr><name><name pos:line="358" pos:column="28">AI<pos:position pos:line="358" pos:column="30"/></name><operator pos:line="358" pos:column="30">-&gt;<pos:position pos:line="358" pos:column="35"/></operator><name pos:line="358" pos:column="32">ai_family<pos:position pos:line="358" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="358" pos:column="43">AI<pos:position pos:line="358" pos:column="45"/></name><operator pos:line="358" pos:column="45">-&gt;<pos:position pos:line="358" pos:column="50"/></operator><name pos:line="358" pos:column="47">ai_socktype<pos:position pos:line="358" pos:column="58"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="358" pos:column="60">0<pos:position pos:line="358" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="358" pos:column="62"/></argument_list></call><operator pos:line="358" pos:column="62">)<pos:position pos:line="358" pos:column="63"/></operator> <operator pos:line="358" pos:column="64">&lt;<pos:position pos:line="358" pos:column="68"/></operator> <literal type="number" pos:line="358" pos:column="66">0<pos:position pos:line="358" pos:column="67"/></literal></expr>)<pos:position pos:line="358" pos:column="68"/></condition><then pos:line="358" pos:column="68"> <block pos:line="358" pos:column="69">{
            <expr_stmt><expr><call><name pos:line="359" pos:column="13">perror<pos:position pos:line="359" pos:column="19"/></name><argument_list pos:line="359" pos:column="19">(<argument><expr><literal type="string" pos:line="359" pos:column="20">"client: socket"<pos:position pos:line="359" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="359" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="360" pos:column="13">iaddr<pos:position pos:line="360" pos:column="18"/></name><operator pos:line="360" pos:column="18">.<pos:position pos:line="360" pos:column="19"/></operator><name pos:line="360" pos:column="19">FreeAddrInfo<pos:position pos:line="360" pos:column="31"/></name></name><argument_list pos:line="360" pos:column="31">(<argument><expr><name pos:line="360" pos:column="32">AI<pos:position pos:line="360" pos:column="34"/></name></expr></argument>)<pos:position pos:line="360" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="360" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="361" pos:column="13">exit<pos:position pos:line="361" pos:column="17"/></name><argument_list pos:line="361" pos:column="17">(<argument><expr><literal type="number" pos:line="361" pos:column="18">1<pos:position pos:line="361" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="361" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="362" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="363" pos:column="9">iaddr<pos:position pos:line="363" pos:column="14"/></name><operator pos:line="363" pos:column="14">.<pos:position pos:line="363" pos:column="15"/></operator><name pos:line="363" pos:column="15">FreeAddrInfo<pos:position pos:line="363" pos:column="27"/></name></name><argument_list pos:line="363" pos:column="27">(<argument><expr><name pos:line="363" pos:column="28">AI<pos:position pos:line="363" pos:column="30"/></name></expr></argument>)<pos:position pos:line="363" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="363" pos:column="32"/></expr_stmt>

        <if pos:line="365" pos:column="9">if <condition pos:line="365" pos:column="12">(<expr><name pos:line="365" pos:column="13">localhost<pos:position pos:line="365" pos:column="22"/></name> <operator pos:line="365" pos:column="23">&amp;&amp;<pos:position pos:line="365" pos:column="33"/></operator> <call><name pos:line="365" pos:column="26">client_comm_bind<pos:position pos:line="365" pos:column="42"/></name><argument_list pos:line="365" pos:column="42">(<argument><expr><name pos:line="365" pos:column="43">conn<pos:position pos:line="365" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="365" pos:column="49">iaddr<pos:position pos:line="365" pos:column="54"/></name></expr></argument>)<pos:position pos:line="365" pos:column="55"/></argument_list></call> <operator pos:line="365" pos:column="56">&lt;<pos:position pos:line="365" pos:column="60"/></operator> <literal type="number" pos:line="365" pos:column="58">0<pos:position pos:line="365" pos:column="59"/></literal></expr>)<pos:position pos:line="365" pos:column="60"/></condition><then pos:line="365" pos:column="60"> <block pos:line="365" pos:column="61">{
            <expr_stmt><expr><call><name pos:line="366" pos:column="13">perror<pos:position pos:line="366" pos:column="19"/></name><argument_list pos:line="366" pos:column="19">(<argument><expr><literal type="string" pos:line="366" pos:column="20">"client: bind"<pos:position pos:line="366" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="366" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="366" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="367" pos:column="13">exit<pos:position pos:line="367" pos:column="17"/></name><argument_list pos:line="367" pos:column="17">(<argument><expr><literal type="number" pos:line="367" pos:column="18">1<pos:position pos:line="367" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="367" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="367" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="368" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="370" pos:column="9">iaddr<pos:position pos:line="370" pos:column="14"/></name><operator pos:line="370" pos:column="14">.<pos:position pos:line="370" pos:column="15"/></operator><name pos:line="370" pos:column="15">SetEmpty<pos:position pos:line="370" pos:column="23"/></name></name><argument_list pos:line="370" pos:column="23">()<pos:position pos:line="370" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="370" pos:column="26"/></expr_stmt>
        <if pos:line="371" pos:column="9">if <condition pos:line="371" pos:column="12">( <expr><operator pos:line="371" pos:column="14">!<pos:position pos:line="371" pos:column="15"/></operator><call><name><name pos:line="371" pos:column="15">iaddr<pos:position pos:line="371" pos:column="20"/></name><operator pos:line="371" pos:column="20">.<pos:position pos:line="371" pos:column="21"/></operator><name pos:line="371" pos:column="21">GetHostByName<pos:position pos:line="371" pos:column="34"/></name></name><argument_list pos:line="371" pos:column="34">(<argument><expr><name pos:line="371" pos:column="35">hostname<pos:position pos:line="371" pos:column="43"/></name></expr></argument>)<pos:position pos:line="371" pos:column="44"/></argument_list></call></expr> )<pos:position pos:line="371" pos:column="46"/></condition><then pos:line="371" pos:column="46"> <block pos:line="371" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="372" pos:column="13">fprintf<pos:position pos:line="372" pos:column="20"/></name><argument_list pos:line="372" pos:column="20">(<argument><expr><name pos:line="372" pos:column="21">stderr<pos:position pos:line="372" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="372" pos:column="29">"client: ERROR: Cannot resolve %s: Host unknown.\n"<pos:position pos:line="372" pos:column="80"/></literal></expr></argument>, <argument><expr><name pos:line="372" pos:column="82">hostname<pos:position pos:line="372" pos:column="90"/></name></expr></argument>)<pos:position pos:line="372" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="372" pos:column="92"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="373" pos:column="13">exit<pos:position pos:line="373" pos:column="17"/></name><argument_list pos:line="373" pos:column="17">(<argument><expr><literal type="number" pos:line="373" pos:column="18">1<pos:position pos:line="373" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="373" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="374" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="376" pos:column="9">iaddr<pos:position pos:line="376" pos:column="14"/></name><operator pos:line="376" pos:column="14">.<pos:position pos:line="376" pos:column="15"/></operator><name pos:line="376" pos:column="15">SetPort<pos:position pos:line="376" pos:column="22"/></name></name><argument_list pos:line="376" pos:column="22">(<argument><expr><name pos:line="376" pos:column="23">port<pos:position pos:line="376" pos:column="27"/></name></expr></argument>)<pos:position pos:line="376" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="29"/></expr_stmt>

        <if pos:line="378" pos:column="9">if <condition pos:line="378" pos:column="12">(<expr><name pos:line="378" pos:column="13">opt_verbose<pos:position pos:line="378" pos:column="24"/></name></expr>)<pos:position pos:line="378" pos:column="25"/></condition><then pos:line="378" pos:column="25"> <block pos:line="378" pos:column="26">{
            <decl_stmt><decl><type><name pos:line="379" pos:column="13">char<pos:position pos:line="379" pos:column="17"/></name></type> <name><name pos:line="379" pos:column="18">ipbuf<pos:position pos:line="379" pos:column="23"/></name><index pos:line="379" pos:column="23">[<expr><name pos:line="379" pos:column="24">MAX_IPSTRLEN<pos:position pos:line="379" pos:column="36"/></name></expr>]<pos:position pos:line="379" pos:column="37"/></index></name></decl>;<pos:position pos:line="379" pos:column="38"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="380" pos:column="13">fprintf<pos:position pos:line="380" pos:column="20"/></name><argument_list pos:line="380" pos:column="20">(<argument><expr><name pos:line="380" pos:column="21">stderr<pos:position pos:line="380" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="380" pos:column="29">"Connecting... %s(%s)\n"<pos:position pos:line="380" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="380" pos:column="55">hostname<pos:position pos:line="380" pos:column="63"/></name></expr></argument>, <argument><expr><call><name><name pos:line="380" pos:column="65">iaddr<pos:position pos:line="380" pos:column="70"/></name><operator pos:line="380" pos:column="70">.<pos:position pos:line="380" pos:column="71"/></operator><name pos:line="380" pos:column="71">NtoA<pos:position pos:line="380" pos:column="75"/></name></name><argument_list pos:line="380" pos:column="75">(<argument><expr><name pos:line="380" pos:column="76">ipbuf<pos:position pos:line="380" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="380" pos:column="83">MAX_IPSTRLEN<pos:position pos:line="380" pos:column="95"/></name></expr></argument>)<pos:position pos:line="380" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="380" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="98"/></expr_stmt>
        }<pos:position pos:line="381" pos:column="10"/></block></then></if>

        <if pos:line="383" pos:column="9">if <condition pos:line="383" pos:column="12">(<expr><call><name pos:line="383" pos:column="13">client_comm_connect<pos:position pos:line="383" pos:column="32"/></name><argument_list pos:line="383" pos:column="32">(<argument><expr><name pos:line="383" pos:column="33">conn<pos:position pos:line="383" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="383" pos:column="39">iaddr<pos:position pos:line="383" pos:column="44"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="383" pos:column="46">ping<pos:position pos:line="383" pos:column="50"/></name></expr> ?<pos:position pos:line="383" pos:column="52"/></condition><then pos:line="383" pos:column="52"> <expr><operator pos:line="383" pos:column="53">&amp;<pos:position pos:line="383" pos:column="58"/></operator><name pos:line="383" pos:column="54">tv1<pos:position pos:line="383" pos:column="57"/></name></expr> <pos:position pos:line="383" pos:column="58"/></then><else pos:line="383" pos:column="58">: <expr><name pos:line="383" pos:column="60">NULL<pos:position pos:line="383" pos:column="64"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="383" pos:column="65"/></argument_list></call> <operator pos:line="383" pos:column="66">&lt;<pos:position pos:line="383" pos:column="70"/></operator> <literal type="number" pos:line="383" pos:column="68">0<pos:position pos:line="383" pos:column="69"/></literal></expr>)<pos:position pos:line="383" pos:column="70"/></condition><then pos:line="383" pos:column="70"> <block pos:line="383" pos:column="71">{
            <decl_stmt><decl><type><name pos:line="384" pos:column="13">char<pos:position pos:line="384" pos:column="17"/></name></type> <name><name pos:line="384" pos:column="18">hostnameBuf<pos:position pos:line="384" pos:column="29"/></name><index pos:line="384" pos:column="29">[<expr><name pos:line="384" pos:column="30">MAX_IPSTRLEN<pos:position pos:line="384" pos:column="42"/></name></expr>]<pos:position pos:line="384" pos:column="43"/></index></name></decl>;<pos:position pos:line="384" pos:column="44"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="385" pos:column="13">iaddr<pos:position pos:line="385" pos:column="18"/></name><operator pos:line="385" pos:column="18">.<pos:position pos:line="385" pos:column="19"/></operator><name pos:line="385" pos:column="19">ToURL<pos:position pos:line="385" pos:column="24"/></name></name><argument_list pos:line="385" pos:column="24">(<argument><expr><name pos:line="385" pos:column="25">hostnameBuf<pos:position pos:line="385" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="385" pos:column="38">MAX_IPSTRLEN<pos:position pos:line="385" pos:column="50"/></name></expr></argument>)<pos:position pos:line="385" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="385" pos:column="52"/></expr_stmt>
            <if pos:line="386" pos:column="13">if <condition pos:line="386" pos:column="16">(<expr><name pos:line="386" pos:column="17">errno<pos:position pos:line="386" pos:column="22"/></name> <operator pos:line="386" pos:column="23">==<pos:position pos:line="386" pos:column="25"/></operator> <literal type="number" pos:line="386" pos:column="26">0<pos:position pos:line="386" pos:column="27"/></literal></expr>)<pos:position pos:line="386" pos:column="28"/></condition><then pos:line="386" pos:column="28"> <block pos:line="386" pos:column="29">{
                <expr_stmt><expr><call><name pos:line="387" pos:column="17">fprintf<pos:position pos:line="387" pos:column="24"/></name><argument_list pos:line="387" pos:column="24">(<argument><expr><name pos:line="387" pos:column="25">stderr<pos:position pos:line="387" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="387" pos:column="33">"client: ERROR: Cannot connect to %s: Host unknown.\n"<pos:position pos:line="387" pos:column="87"/></literal></expr></argument>, <argument><expr><name pos:line="387" pos:column="89">hostnameBuf<pos:position pos:line="387" pos:column="100"/></name></expr></argument>)<pos:position pos:line="387" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="387" pos:column="102"/></expr_stmt>
            }<pos:position pos:line="388" pos:column="14"/></block></then> <else pos:line="388" pos:column="15">else <block pos:line="388" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="389" pos:column="17">char<pos:position pos:line="389" pos:column="21"/></name></type> <name><name pos:line="389" pos:column="22">tbuf<pos:position pos:line="389" pos:column="26"/></name><index pos:line="389" pos:column="26">[<expr><name pos:line="389" pos:column="27">BUFSIZ<pos:position pos:line="389" pos:column="33"/></name></expr>]<pos:position pos:line="389" pos:column="34"/></index></name></decl>;<pos:position pos:line="389" pos:column="35"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="390" pos:column="17">snprintf<pos:position pos:line="390" pos:column="25"/></name><argument_list pos:line="390" pos:column="25">(<argument><expr><name pos:line="390" pos:column="26">tbuf<pos:position pos:line="390" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="390" pos:column="32">BUFSIZ<pos:position pos:line="390" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="390" pos:column="40">"client: ERROR: Cannot connect to %s"<pos:position pos:line="390" pos:column="77"/></literal></expr></argument>, <argument><expr><name pos:line="390" pos:column="79">hostnameBuf<pos:position pos:line="390" pos:column="90"/></name></expr></argument>)<pos:position pos:line="390" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="390" pos:column="92"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="391" pos:column="17">perror<pos:position pos:line="391" pos:column="23"/></name><argument_list pos:line="391" pos:column="23">(<argument><expr><name pos:line="391" pos:column="24">tbuf<pos:position pos:line="391" pos:column="28"/></name></expr></argument>)<pos:position pos:line="391" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="391" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="392" pos:column="14"/></block></else></if>
            <expr_stmt><expr><call><name pos:line="393" pos:column="13">exit<pos:position pos:line="393" pos:column="17"/></name><argument_list pos:line="393" pos:column="17">(<argument><expr><literal type="number" pos:line="393" pos:column="18">1<pos:position pos:line="393" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="393" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="394" pos:column="10"/></block></then></if>
        <if pos:line="395" pos:column="9">if <condition pos:line="395" pos:column="12">(<expr><name pos:line="395" pos:column="13">opt_verbose<pos:position pos:line="395" pos:column="24"/></name></expr>)<pos:position pos:line="395" pos:column="25"/></condition><then pos:line="395" pos:column="25"> <block pos:line="395" pos:column="26">{
            <decl_stmt><decl><type><name pos:line="396" pos:column="13">char<pos:position pos:line="396" pos:column="17"/></name></type> <name><name pos:line="396" pos:column="18">ipbuf<pos:position pos:line="396" pos:column="23"/></name><index pos:line="396" pos:column="23">[<expr><name pos:line="396" pos:column="24">MAX_IPSTRLEN<pos:position pos:line="396" pos:column="36"/></name></expr>]<pos:position pos:line="396" pos:column="37"/></index></name></decl>;<pos:position pos:line="396" pos:column="38"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="397" pos:column="13">fprintf<pos:position pos:line="397" pos:column="20"/></name><argument_list pos:line="397" pos:column="20">(<argument><expr><name pos:line="397" pos:column="21">stderr<pos:position pos:line="397" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="397" pos:column="29">"Connected to: %s (%s)\n"<pos:position pos:line="397" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="397" pos:column="56">hostname<pos:position pos:line="397" pos:column="64"/></name></expr></argument>, <argument><expr><call><name><name pos:line="397" pos:column="66">iaddr<pos:position pos:line="397" pos:column="71"/></name><operator pos:line="397" pos:column="71">.<pos:position pos:line="397" pos:column="72"/></operator><name pos:line="397" pos:column="72">NtoA<pos:position pos:line="397" pos:column="76"/></name></name><argument_list pos:line="397" pos:column="76">(<argument><expr><name pos:line="397" pos:column="77">ipbuf<pos:position pos:line="397" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="84">MAX_IPSTRLEN<pos:position pos:line="397" pos:column="96"/></name></expr></argument>)<pos:position pos:line="397" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="397" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="99"/></expr_stmt>
        }<pos:position pos:line="398" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="400" pos:column="9">/* Send the HTTP request */</comment>
        <expr_stmt><expr><name pos:line="401" pos:column="9">bytesWritten<pos:position pos:line="401" pos:column="21"/></name> <operator pos:line="401" pos:column="22">=<pos:position pos:line="401" pos:column="23"/></operator> <call><name pos:line="401" pos:column="24">mywrite<pos:position pos:line="401" pos:column="31"/></name><argument_list pos:line="401" pos:column="31">(<argument><expr><name pos:line="401" pos:column="32">conn<pos:position pos:line="401" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="401" pos:column="38">msg<pos:position pos:line="401" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="401" pos:column="43">strlen<pos:position pos:line="401" pos:column="49"/></name><argument_list pos:line="401" pos:column="49">(<argument><expr><name pos:line="401" pos:column="50">msg<pos:position pos:line="401" pos:column="53"/></name></expr></argument>)<pos:position pos:line="401" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="401" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="401" pos:column="56"/></expr_stmt>

        <if pos:line="403" pos:column="9">if <condition pos:line="403" pos:column="12">(<expr><name pos:line="403" pos:column="13">bytesWritten<pos:position pos:line="403" pos:column="25"/></name> <operator pos:line="403" pos:column="26">&lt;<pos:position pos:line="403" pos:column="30"/></operator> <literal type="number" pos:line="403" pos:column="28">0<pos:position pos:line="403" pos:column="29"/></literal></expr>)<pos:position pos:line="403" pos:column="30"/></condition><then pos:line="403" pos:column="30"> <block pos:line="403" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="404" pos:column="13">perror<pos:position pos:line="404" pos:column="19"/></name><argument_list pos:line="404" pos:column="19">(<argument><expr><literal type="string" pos:line="404" pos:column="20">"client: ERROR: write"<pos:position pos:line="404" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="404" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="404" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="405" pos:column="13">exit<pos:position pos:line="405" pos:column="17"/></name><argument_list pos:line="405" pos:column="17">(<argument><expr><literal type="number" pos:line="405" pos:column="18">1<pos:position pos:line="405" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="405" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="406" pos:column="10"/></block></then> <elseif pos:line="406" pos:column="11">else <if pos:line="406" pos:column="16">if <condition pos:line="406" pos:column="19">(<expr><operator pos:line="406" pos:column="20">(<pos:position pos:line="406" pos:column="21"/></operator><name pos:line="406" pos:column="21">unsigned<pos:position pos:line="406" pos:column="29"/></name><operator pos:line="406" pos:column="29">)<pos:position pos:line="406" pos:column="30"/></operator> <name pos:line="406" pos:column="31">bytesWritten<pos:position pos:line="406" pos:column="43"/></name> <operator pos:line="406" pos:column="44">!=<pos:position pos:line="406" pos:column="46"/></operator> <call><name pos:line="406" pos:column="47">strlen<pos:position pos:line="406" pos:column="53"/></name><argument_list pos:line="406" pos:column="53">(<argument><expr><name pos:line="406" pos:column="54">msg<pos:position pos:line="406" pos:column="57"/></name></expr></argument>)<pos:position pos:line="406" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="406" pos:column="59"/></condition><then pos:line="406" pos:column="59"> <block pos:line="406" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="407" pos:column="13">fprintf<pos:position pos:line="407" pos:column="20"/></name><argument_list pos:line="407" pos:column="20">(<argument><expr><name pos:line="407" pos:column="21">stderr<pos:position pos:line="407" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="407" pos:column="29">"client: ERROR: Cannot send request?: %s\n"<pos:position pos:line="407" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="407" pos:column="74">msg<pos:position pos:line="407" pos:column="77"/></name></expr></argument>)<pos:position pos:line="407" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="407" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="408" pos:column="13">exit<pos:position pos:line="408" pos:column="17"/></name><argument_list pos:line="408" pos:column="17">(<argument><expr><literal type="number" pos:line="408" pos:column="18">1<pos:position pos:line="408" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="408" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="408" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="409" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="411" pos:column="9">if <condition pos:line="411" pos:column="12">(<expr><name pos:line="411" pos:column="13">put_file<pos:position pos:line="411" pos:column="21"/></name></expr>)<pos:position pos:line="411" pos:column="22"/></condition><then pos:line="411" pos:column="22"> <block pos:line="411" pos:column="23">{
            <decl_stmt><decl><type><name pos:line="412" pos:column="13">int<pos:position pos:line="412" pos:column="16"/></name></type> <name pos:line="412" pos:column="17">x<pos:position pos:line="412" pos:column="18"/></name></decl>;<pos:position pos:line="412" pos:column="19"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="413" pos:column="13">lseek<pos:position pos:line="413" pos:column="18"/></name><argument_list pos:line="413" pos:column="18">(<argument><expr><name pos:line="413" pos:column="19">put_fd<pos:position pos:line="413" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="413" pos:column="27">0<pos:position pos:line="413" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="413" pos:column="30">SEEK_SET<pos:position pos:line="413" pos:column="38"/></name></expr></argument>)<pos:position pos:line="413" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="413" pos:column="40"/></expr_stmt>
<cpp:ifdef pos:line="414" pos:column="1">#<cpp:directive pos:line="414" pos:column="2">ifdef<pos:position pos:line="414" pos:column="7"/></cpp:directive> <name pos:line="414" pos:column="8">_SQUID_MSWIN_<pos:position pos:line="414" pos:column="21"/></name></cpp:ifdef>

            <while pos:line="416" pos:column="13">while <condition pos:line="416" pos:column="19">(<expr><operator pos:line="416" pos:column="20">(<pos:position pos:line="416" pos:column="21"/></operator><name pos:line="416" pos:column="21">x<pos:position pos:line="416" pos:column="22"/></name> <operator pos:line="416" pos:column="23">=<pos:position pos:line="416" pos:column="24"/></operator> <call><name pos:line="416" pos:column="25">read<pos:position pos:line="416" pos:column="29"/></name><argument_list pos:line="416" pos:column="29">(<argument><expr><name pos:line="416" pos:column="30">put_fd<pos:position pos:line="416" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="416" pos:column="38">buf<pos:position pos:line="416" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="416" pos:column="43">sizeof<argument_list pos:line="416" pos:column="49">(<argument><expr><name pos:line="416" pos:column="50">buf<pos:position pos:line="416" pos:column="53"/></name></expr></argument>)<pos:position pos:line="416" pos:column="54"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="416" pos:column="55"/></argument_list></call><operator pos:line="416" pos:column="55">)<pos:position pos:line="416" pos:column="56"/></operator> <operator pos:line="416" pos:column="57">&gt;<pos:position pos:line="416" pos:column="61"/></operator> <literal type="number" pos:line="416" pos:column="59">0<pos:position pos:line="416" pos:column="60"/></literal></expr>)<pos:position pos:line="416" pos:column="61"/></condition> <block pos:line="416" pos:column="62">{
<cpp:else pos:line="417" pos:column="1">#<cpp:directive pos:line="417" pos:column="2">else<pos:position pos:line="417" pos:column="6"/></cpp:directive></cpp:else>

            <while pos:line="419" pos:column="13">while <condition pos:line="419" pos:column="19">(<expr><operator pos:line="419" pos:column="20">(<pos:position pos:line="419" pos:column="21"/></operator><name pos:line="419" pos:column="21">x<pos:position pos:line="419" pos:column="22"/></name> <operator pos:line="419" pos:column="23">=<pos:position pos:line="419" pos:column="24"/></operator> <call><name pos:line="419" pos:column="25">myread<pos:position pos:line="419" pos:column="31"/></name><argument_list pos:line="419" pos:column="31">(<argument><expr><name pos:line="419" pos:column="32">put_fd<pos:position pos:line="419" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="419" pos:column="40">buf<pos:position pos:line="419" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="419" pos:column="45">sizeof<argument_list pos:line="419" pos:column="51">(<argument><expr><name pos:line="419" pos:column="52">buf<pos:position pos:line="419" pos:column="55"/></name></expr></argument>)<pos:position pos:line="419" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="419" pos:column="57"/></argument_list></call><operator pos:line="419" pos:column="57">)<pos:position pos:line="419" pos:column="58"/></operator> <operator pos:line="419" pos:column="59">&gt;<pos:position pos:line="419" pos:column="63"/></operator> <literal type="number" pos:line="419" pos:column="61">0<pos:position pos:line="419" pos:column="62"/></literal></expr>)<pos:position pos:line="419" pos:column="63"/></condition> <block pos:line="419" pos:column="64">{
<cpp:endif pos:line="420" pos:column="1">#<cpp:directive pos:line="420" pos:column="2">endif<pos:position pos:line="420" pos:column="7"/></cpp:directive></cpp:endif>
                <expr_stmt><expr><name pos:line="421" pos:column="17">x<pos:position pos:line="421" pos:column="18"/></name> <operator pos:line="421" pos:column="19">=<pos:position pos:line="421" pos:column="20"/></operator> <call><name pos:line="421" pos:column="21">mywrite<pos:position pos:line="421" pos:column="28"/></name><argument_list pos:line="421" pos:column="28">(<argument><expr><name pos:line="421" pos:column="29">conn<pos:position pos:line="421" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="421" pos:column="35">buf<pos:position pos:line="421" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="421" pos:column="40">x<pos:position pos:line="421" pos:column="41"/></name></expr></argument>)<pos:position pos:line="421" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="43"/></expr_stmt>

                <expr_stmt><expr><name pos:line="423" pos:column="17">total_bytes<pos:position pos:line="423" pos:column="28"/></name> <operator pos:line="423" pos:column="29">+=<pos:position pos:line="423" pos:column="31"/></operator> <name pos:line="423" pos:column="32">x<pos:position pos:line="423" pos:column="33"/></name></expr>;<pos:position pos:line="423" pos:column="34"/></expr_stmt>

                <if pos:line="425" pos:column="17">if <condition pos:line="425" pos:column="20">(<expr><name pos:line="425" pos:column="21">x<pos:position pos:line="425" pos:column="22"/></name> <operator pos:line="425" pos:column="23">&lt;=<pos:position pos:line="425" pos:column="28"/></operator> <literal type="number" pos:line="425" pos:column="26">0<pos:position pos:line="425" pos:column="27"/></literal></expr>)<pos:position pos:line="425" pos:column="28"/></condition><then pos:line="425" pos:column="28">
                    <block type="pseudo"><break pos:line="426" pos:column="21">break;<pos:position pos:line="426" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="427" pos:column="14"/></block></while>

            <if pos:line="429" pos:column="13">if <condition pos:line="429" pos:column="16">(<expr><name pos:line="429" pos:column="17">x<pos:position pos:line="429" pos:column="18"/></name> <operator pos:line="429" pos:column="19">!=<pos:position pos:line="429" pos:column="21"/></operator> <literal type="number" pos:line="429" pos:column="22">0<pos:position pos:line="429" pos:column="23"/></literal></expr>)<pos:position pos:line="429" pos:column="24"/></condition><then pos:line="429" pos:column="24">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="430" pos:column="17">fprintf<pos:position pos:line="430" pos:column="24"/></name><argument_list pos:line="430" pos:column="24">(<argument><expr><name pos:line="430" pos:column="25">stderr<pos:position pos:line="430" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="430" pos:column="33">"client: ERROR: Cannot send file.\n"<pos:position pos:line="430" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="430" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="430" pos:column="71"/></expr_stmt></block></then></if>
        }<pos:position pos:line="431" pos:column="10"/></block></while>
        <comment type="block" pos:line="432" pos:column="9">/* Read the data */</comment>

<cpp:ifdef pos:line="434" pos:column="1">#<cpp:directive pos:line="434" pos:column="2">ifdef<pos:position pos:line="434" pos:column="7"/></cpp:directive> <name pos:line="434" pos:column="8">_SQUID_MSWIN_<pos:position pos:line="434" pos:column="21"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="435" pos:column="9">setmode<pos:position pos:line="435" pos:column="16"/></name><argument_list pos:line="435" pos:column="16">(<argument><expr><literal type="number" pos:line="435" pos:column="17">1<pos:position pos:line="435" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="435" pos:column="20">O_BINARY<pos:position pos:line="435" pos:column="28"/></name></expr></argument>)<pos:position pos:line="435" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="435" pos:column="30"/></expr_stmt>

<cpp:endif pos:line="437" pos:column="1">#<cpp:directive pos:line="437" pos:column="2">endif<pos:position pos:line="437" pos:column="7"/></cpp:directive></cpp:endif>

        <while pos:line="439" pos:column="9">while <condition pos:line="439" pos:column="15">(<expr><operator pos:line="439" pos:column="16">(<pos:position pos:line="439" pos:column="17"/></operator><name pos:line="439" pos:column="17">len<pos:position pos:line="439" pos:column="20"/></name> <operator pos:line="439" pos:column="21">=<pos:position pos:line="439" pos:column="22"/></operator> <call><name pos:line="439" pos:column="23">myread<pos:position pos:line="439" pos:column="29"/></name><argument_list pos:line="439" pos:column="29">(<argument><expr><name pos:line="439" pos:column="30">conn<pos:position pos:line="439" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="439" pos:column="36">buf<pos:position pos:line="439" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="439" pos:column="41">sizeof<argument_list pos:line="439" pos:column="47">(<argument><expr><name pos:line="439" pos:column="48">buf<pos:position pos:line="439" pos:column="51"/></name></expr></argument>)<pos:position pos:line="439" pos:column="52"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="439" pos:column="53"/></argument_list></call><operator pos:line="439" pos:column="53">)<pos:position pos:line="439" pos:column="54"/></operator> <operator pos:line="439" pos:column="55">&gt;<pos:position pos:line="439" pos:column="59"/></operator> <literal type="number" pos:line="439" pos:column="57">0<pos:position pos:line="439" pos:column="58"/></literal></expr>)<pos:position pos:line="439" pos:column="59"/></condition> <block pos:line="439" pos:column="60">{
            <expr_stmt><expr><name pos:line="440" pos:column="13">fsize<pos:position pos:line="440" pos:column="18"/></name> <operator pos:line="440" pos:column="19">+=<pos:position pos:line="440" pos:column="21"/></operator> <name pos:line="440" pos:column="22">len<pos:position pos:line="440" pos:column="25"/></name></expr>;<pos:position pos:line="440" pos:column="26"/></expr_stmt>

            <if pos:line="442" pos:column="13">if <condition pos:line="442" pos:column="16">(<expr><name pos:line="442" pos:column="17">to_stdout<pos:position pos:line="442" pos:column="26"/></name> <operator pos:line="442" pos:column="27">&amp;&amp;<pos:position pos:line="442" pos:column="37"/></operator> <call><name pos:line="442" pos:column="30">fwrite<pos:position pos:line="442" pos:column="36"/></name><argument_list pos:line="442" pos:column="36">(<argument><expr><name pos:line="442" pos:column="37">buf<pos:position pos:line="442" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="442" pos:column="42">len<pos:position pos:line="442" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="442" pos:column="47">1<pos:position pos:line="442" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="442" pos:column="50">stdout<pos:position pos:line="442" pos:column="56"/></name></expr></argument>)<pos:position pos:line="442" pos:column="57"/></argument_list></call> <operator pos:line="442" pos:column="58">!=<pos:position pos:line="442" pos:column="60"/></operator> <literal type="number" pos:line="442" pos:column="61">1<pos:position pos:line="442" pos:column="62"/></literal></expr>)<pos:position pos:line="442" pos:column="63"/></condition><then pos:line="442" pos:column="63">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="443" pos:column="17">perror<pos:position pos:line="443" pos:column="23"/></name><argument_list pos:line="443" pos:column="23">(<argument><expr><literal type="string" pos:line="443" pos:column="24">"client: ERROR writing to stdout"<pos:position pos:line="443" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="443" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="443" pos:column="59"/></expr_stmt></block></then></if>
        }<pos:position pos:line="444" pos:column="10"/></block></while>

<cpp:ifdef pos:line="446" pos:column="1">#<cpp:directive pos:line="446" pos:column="2">ifdef<pos:position pos:line="446" pos:column="7"/></cpp:directive> <name pos:line="446" pos:column="8">_SQUID_MSWIN_<pos:position pos:line="446" pos:column="21"/></name></cpp:ifdef>
        <expr_stmt><expr><call><name pos:line="447" pos:column="9">setmode<pos:position pos:line="447" pos:column="16"/></name><argument_list pos:line="447" pos:column="16">(<argument><expr><literal type="number" pos:line="447" pos:column="17">1<pos:position pos:line="447" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="447" pos:column="20">O_TEXT<pos:position pos:line="447" pos:column="26"/></name></expr></argument>)<pos:position pos:line="447" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="447" pos:column="28"/></expr_stmt>

<cpp:endif pos:line="449" pos:column="1">#<cpp:directive pos:line="449" pos:column="2">endif<pos:position pos:line="449" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><operator pos:line="451" pos:column="9">(<pos:position pos:line="451" pos:column="10"/></operator><name pos:line="451" pos:column="10">void<pos:position pos:line="451" pos:column="14"/></name><operator pos:line="451" pos:column="14">)<pos:position pos:line="451" pos:column="15"/></operator> <call><name pos:line="451" pos:column="16">close<pos:position pos:line="451" pos:column="21"/></name><argument_list pos:line="451" pos:column="21">(<argument><expr><name pos:line="451" pos:column="22">conn<pos:position pos:line="451" pos:column="26"/></name></expr></argument>)<pos:position pos:line="451" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="451" pos:column="28"/></expr_stmt>	<comment type="block" pos:line="451" pos:column="33">/* done with socket */</comment>

        <if pos:line="453" pos:column="9">if <condition pos:line="453" pos:column="12">(<expr><name pos:line="453" pos:column="13">interrupted<pos:position pos:line="453" pos:column="24"/></name></expr>)<pos:position pos:line="453" pos:column="25"/></condition><then pos:line="453" pos:column="25">
            <block type="pseudo"><break pos:line="454" pos:column="13">break;<pos:position pos:line="454" pos:column="19"/></break></block></then></if>

        <if pos:line="456" pos:column="9">if <condition pos:line="456" pos:column="12">(<expr><name pos:line="456" pos:column="13">ping<pos:position pos:line="456" pos:column="17"/></name></expr>)<pos:position pos:line="456" pos:column="18"/></condition><then pos:line="456" pos:column="18"> <block pos:line="456" pos:column="19">{

            <decl_stmt><decl><type><name><name pos:line="458" pos:column="13">struct<pos:position pos:line="458" pos:column="19"/></name> <name pos:line="458" pos:column="20">tm<pos:position pos:line="458" pos:column="22"/></name></name> <modifier pos:line="458" pos:column="23">*<pos:position pos:line="458" pos:column="24"/></modifier></type><name pos:line="458" pos:column="24">tmp<pos:position pos:line="458" pos:column="27"/></name></decl>;<pos:position pos:line="458" pos:column="28"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="459" pos:column="13">time_t<pos:position pos:line="459" pos:column="19"/></name></type> <name pos:line="459" pos:column="20">t2s<pos:position pos:line="459" pos:column="23"/></name></decl>;<pos:position pos:line="459" pos:column="24"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="460" pos:column="13">long<pos:position pos:line="460" pos:column="17"/></name></type> <name pos:line="460" pos:column="18">elapsed_msec<pos:position pos:line="460" pos:column="30"/></name></decl>;<pos:position pos:line="460" pos:column="31"/></decl_stmt>

            <expr_stmt><expr><operator pos:line="462" pos:column="13">(<pos:position pos:line="462" pos:column="14"/></operator><name pos:line="462" pos:column="14">void<pos:position pos:line="462" pos:column="18"/></name><operator pos:line="462" pos:column="18">)<pos:position pos:line="462" pos:column="19"/></operator> <call><name pos:line="462" pos:column="20">Now<pos:position pos:line="462" pos:column="23"/></name><argument_list pos:line="462" pos:column="23">(<argument><expr><operator pos:line="462" pos:column="24">&amp;<pos:position pos:line="462" pos:column="29"/></operator><name pos:line="462" pos:column="25">tv2<pos:position pos:line="462" pos:column="28"/></name></expr></argument>)<pos:position pos:line="462" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="462" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="463" pos:column="13">elapsed_msec<pos:position pos:line="463" pos:column="25"/></name> <operator pos:line="463" pos:column="26">=<pos:position pos:line="463" pos:column="27"/></operator> <call><name pos:line="463" pos:column="28">tvSubMsec<pos:position pos:line="463" pos:column="37"/></name><argument_list pos:line="463" pos:column="37">(<argument><expr><name pos:line="463" pos:column="38">tv1<pos:position pos:line="463" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="463" pos:column="43">tv2<pos:position pos:line="463" pos:column="46"/></name></expr></argument>)<pos:position pos:line="463" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="463" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="464" pos:column="13">t2s<pos:position pos:line="464" pos:column="16"/></name> <operator pos:line="464" pos:column="17">=<pos:position pos:line="464" pos:column="18"/></operator> <name><name pos:line="464" pos:column="19">tv2<pos:position pos:line="464" pos:column="22"/></name><operator pos:line="464" pos:column="22">.<pos:position pos:line="464" pos:column="23"/></operator><name pos:line="464" pos:column="23">tv_sec<pos:position pos:line="464" pos:column="29"/></name></name></expr>;<pos:position pos:line="464" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="465" pos:column="13">tmp<pos:position pos:line="465" pos:column="16"/></name> <operator pos:line="465" pos:column="17">=<pos:position pos:line="465" pos:column="18"/></operator> <call><name pos:line="465" pos:column="19">localtime<pos:position pos:line="465" pos:column="28"/></name><argument_list pos:line="465" pos:column="28">(<argument><expr><operator pos:line="465" pos:column="29">&amp;<pos:position pos:line="465" pos:column="34"/></operator><name pos:line="465" pos:column="30">t2s<pos:position pos:line="465" pos:column="33"/></name></expr></argument>)<pos:position pos:line="465" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="465" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="466" pos:column="13">fprintf<pos:position pos:line="466" pos:column="20"/></name><argument_list pos:line="466" pos:column="20">(<argument><expr><name pos:line="466" pos:column="21">stderr<pos:position pos:line="466" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="466" pos:column="29">"%d-%02d-%02d %02d:%02d:%02d [%d]: %ld.%03ld secs, %f KB/s\n"<pos:position pos:line="466" pos:column="90"/></literal></expr></argument>,
                    <argument><expr><name><name pos:line="467" pos:column="21">tmp<pos:position pos:line="467" pos:column="24"/></name><operator pos:line="467" pos:column="24">-&gt;<pos:position pos:line="467" pos:column="29"/></operator><name pos:line="467" pos:column="26">tm_year<pos:position pos:line="467" pos:column="33"/></name></name> <operator pos:line="467" pos:column="34">+<pos:position pos:line="467" pos:column="35"/></operator> <literal type="number" pos:line="467" pos:column="36">1900<pos:position pos:line="467" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="467" pos:column="42">tmp<pos:position pos:line="467" pos:column="45"/></name><operator pos:line="467" pos:column="45">-&gt;<pos:position pos:line="467" pos:column="50"/></operator><name pos:line="467" pos:column="47">tm_mon<pos:position pos:line="467" pos:column="53"/></name></name> <operator pos:line="467" pos:column="54">+<pos:position pos:line="467" pos:column="55"/></operator> <literal type="number" pos:line="467" pos:column="56">1<pos:position pos:line="467" pos:column="57"/></literal></expr></argument>, <argument><expr><name><name pos:line="467" pos:column="59">tmp<pos:position pos:line="467" pos:column="62"/></name><operator pos:line="467" pos:column="62">-&gt;<pos:position pos:line="467" pos:column="67"/></operator><name pos:line="467" pos:column="64">tm_mday<pos:position pos:line="467" pos:column="71"/></name></name></expr></argument>,
                    <argument><expr><name><name pos:line="468" pos:column="21">tmp<pos:position pos:line="468" pos:column="24"/></name><operator pos:line="468" pos:column="24">-&gt;<pos:position pos:line="468" pos:column="29"/></operator><name pos:line="468" pos:column="26">tm_hour<pos:position pos:line="468" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="468" pos:column="35">tmp<pos:position pos:line="468" pos:column="38"/></name><operator pos:line="468" pos:column="38">-&gt;<pos:position pos:line="468" pos:column="43"/></operator><name pos:line="468" pos:column="40">tm_min<pos:position pos:line="468" pos:column="46"/></name></name></expr></argument>, <argument><expr><name><name pos:line="468" pos:column="48">tmp<pos:position pos:line="468" pos:column="51"/></name><operator pos:line="468" pos:column="51">-&gt;<pos:position pos:line="468" pos:column="56"/></operator><name pos:line="468" pos:column="53">tm_sec<pos:position pos:line="468" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="468" pos:column="61">i<pos:position pos:line="468" pos:column="62"/></name> <operator pos:line="468" pos:column="63">+<pos:position pos:line="468" pos:column="64"/></operator> <literal type="number" pos:line="468" pos:column="65">1<pos:position pos:line="468" pos:column="66"/></literal></expr></argument>,
                    <argument><expr><name pos:line="469" pos:column="21">elapsed_msec<pos:position pos:line="469" pos:column="33"/></name> <operator pos:line="469" pos:column="34">/<pos:position pos:line="469" pos:column="35"/></operator> <literal type="number" pos:line="469" pos:column="36">1000<pos:position pos:line="469" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="469" pos:column="42">elapsed_msec<pos:position pos:line="469" pos:column="54"/></name> <operator pos:line="469" pos:column="55">%<pos:position pos:line="469" pos:column="56"/></operator> <literal type="number" pos:line="469" pos:column="57">1000<pos:position pos:line="469" pos:column="61"/></literal></expr></argument>,
                    <argument><expr><ternary><condition><expr><name pos:line="470" pos:column="21">elapsed_msec<pos:position pos:line="470" pos:column="33"/></name></expr> ?<pos:position pos:line="470" pos:column="35"/></condition><then pos:line="470" pos:column="35"> <expr><operator pos:line="470" pos:column="36">(<pos:position pos:line="470" pos:column="37"/></operator><name pos:line="470" pos:column="37">double<pos:position pos:line="470" pos:column="43"/></name><operator pos:line="470" pos:column="43">)<pos:position pos:line="470" pos:column="44"/></operator> <name pos:line="470" pos:column="45">fsize<pos:position pos:line="470" pos:column="50"/></name> <operator pos:line="470" pos:column="51">/<pos:position pos:line="470" pos:column="52"/></operator> <name pos:line="470" pos:column="53">elapsed_msec<pos:position pos:line="470" pos:column="65"/></name></expr> <pos:position pos:line="470" pos:column="66"/></then><else pos:line="470" pos:column="66">: <expr><operator pos:line="470" pos:column="68">-<pos:position pos:line="470" pos:column="69"/></operator><literal type="number" pos:line="470" pos:column="69">1.0<pos:position pos:line="470" pos:column="72"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="470" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="74"/></expr_stmt>

            <if pos:line="472" pos:column="13">if <condition pos:line="472" pos:column="16">(<expr><name pos:line="472" pos:column="17">i<pos:position pos:line="472" pos:column="18"/></name> <operator pos:line="472" pos:column="19">==<pos:position pos:line="472" pos:column="21"/></operator> <literal type="number" pos:line="472" pos:column="22">0<pos:position pos:line="472" pos:column="23"/></literal> <operator pos:line="472" pos:column="24">||<pos:position pos:line="472" pos:column="26"/></operator> <name pos:line="472" pos:column="27">elapsed_msec<pos:position pos:line="472" pos:column="39"/></name> <operator pos:line="472" pos:column="40">&lt;<pos:position pos:line="472" pos:column="44"/></operator> <name pos:line="472" pos:column="42">ping_min<pos:position pos:line="472" pos:column="50"/></name></expr>)<pos:position pos:line="472" pos:column="51"/></condition><then pos:line="472" pos:column="51">
                <block type="pseudo"><expr_stmt><expr><name pos:line="473" pos:column="17">ping_min<pos:position pos:line="473" pos:column="25"/></name> <operator pos:line="473" pos:column="26">=<pos:position pos:line="473" pos:column="27"/></operator> <name pos:line="473" pos:column="28">elapsed_msec<pos:position pos:line="473" pos:column="40"/></name></expr>;<pos:position pos:line="473" pos:column="41"/></expr_stmt></block></then></if>

            <if pos:line="475" pos:column="13">if <condition pos:line="475" pos:column="16">(<expr><name pos:line="475" pos:column="17">i<pos:position pos:line="475" pos:column="18"/></name> <operator pos:line="475" pos:column="19">==<pos:position pos:line="475" pos:column="21"/></operator> <literal type="number" pos:line="475" pos:column="22">0<pos:position pos:line="475" pos:column="23"/></literal> <operator pos:line="475" pos:column="24">||<pos:position pos:line="475" pos:column="26"/></operator> <name pos:line="475" pos:column="27">elapsed_msec<pos:position pos:line="475" pos:column="39"/></name> <operator pos:line="475" pos:column="40">&gt;<pos:position pos:line="475" pos:column="44"/></operator> <name pos:line="475" pos:column="42">ping_max<pos:position pos:line="475" pos:column="50"/></name></expr>)<pos:position pos:line="475" pos:column="51"/></condition><then pos:line="475" pos:column="51">
                <block type="pseudo"><expr_stmt><expr><name pos:line="476" pos:column="17">ping_max<pos:position pos:line="476" pos:column="25"/></name> <operator pos:line="476" pos:column="26">=<pos:position pos:line="476" pos:column="27"/></operator> <name pos:line="476" pos:column="28">elapsed_msec<pos:position pos:line="476" pos:column="40"/></name></expr>;<pos:position pos:line="476" pos:column="41"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="478" pos:column="13">ping_sum<pos:position pos:line="478" pos:column="21"/></name> <operator pos:line="478" pos:column="22">+=<pos:position pos:line="478" pos:column="24"/></operator> <name pos:line="478" pos:column="25">elapsed_msec<pos:position pos:line="478" pos:column="37"/></name></expr>;<pos:position pos:line="478" pos:column="38"/></expr_stmt>

            <comment type="block" pos:line="480" pos:column="13">/* Delay until next "ping_int" boundary */</comment>
            <if pos:line="481" pos:column="13">if <condition pos:line="481" pos:column="16">(<expr><operator pos:line="481" pos:column="17">(<pos:position pos:line="481" pos:column="18"/></operator><name pos:line="481" pos:column="18">loops<pos:position pos:line="481" pos:column="23"/></name> <operator pos:line="481" pos:column="24">==<pos:position pos:line="481" pos:column="26"/></operator> <literal type="number" pos:line="481" pos:column="27">0<pos:position pos:line="481" pos:column="28"/></literal> <operator pos:line="481" pos:column="29">||<pos:position pos:line="481" pos:column="31"/></operator> <name pos:line="481" pos:column="32">i<pos:position pos:line="481" pos:column="33"/></name> <operator pos:line="481" pos:column="34">+<pos:position pos:line="481" pos:column="35"/></operator> <literal type="number" pos:line="481" pos:column="36">1<pos:position pos:line="481" pos:column="37"/></literal> <operator pos:line="481" pos:column="38">&lt;<pos:position pos:line="481" pos:column="42"/></operator> <name pos:line="481" pos:column="40">loops<pos:position pos:line="481" pos:column="45"/></name><operator pos:line="481" pos:column="45">)<pos:position pos:line="481" pos:column="46"/></operator> <operator pos:line="481" pos:column="47">&amp;&amp;<pos:position pos:line="481" pos:column="57"/></operator> <name pos:line="481" pos:column="50">elapsed_msec<pos:position pos:line="481" pos:column="62"/></name> <operator pos:line="481" pos:column="63">&lt;<pos:position pos:line="481" pos:column="67"/></operator> <name pos:line="481" pos:column="65">ping_int<pos:position pos:line="481" pos:column="73"/></name></expr>)<pos:position pos:line="481" pos:column="74"/></condition><then pos:line="481" pos:column="74"> <block pos:line="481" pos:column="75">{

                <decl_stmt><decl><type><name><name pos:line="483" pos:column="17">struct<pos:position pos:line="483" pos:column="23"/></name> <name pos:line="483" pos:column="24">timeval<pos:position pos:line="483" pos:column="31"/></name></name></type> <name pos:line="483" pos:column="32">tvs<pos:position pos:line="483" pos:column="35"/></name></decl>;<pos:position pos:line="483" pos:column="36"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="484" pos:column="17">long<pos:position pos:line="484" pos:column="21"/></name></type> <name pos:line="484" pos:column="22">msec_left<pos:position pos:line="484" pos:column="31"/></name> <init pos:line="484" pos:column="32">= <expr><name pos:line="484" pos:column="34">ping_int<pos:position pos:line="484" pos:column="42"/></name> <operator pos:line="484" pos:column="43">-<pos:position pos:line="484" pos:column="44"/></operator> <name pos:line="484" pos:column="45">elapsed_msec<pos:position pos:line="484" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="484" pos:column="58"/></decl_stmt>

                <expr_stmt><expr><name><name pos:line="486" pos:column="17">tvs<pos:position pos:line="486" pos:column="20"/></name><operator pos:line="486" pos:column="20">.<pos:position pos:line="486" pos:column="21"/></operator><name pos:line="486" pos:column="21">tv_sec<pos:position pos:line="486" pos:column="27"/></name></name> <operator pos:line="486" pos:column="28">=<pos:position pos:line="486" pos:column="29"/></operator> <name pos:line="486" pos:column="30">msec_left<pos:position pos:line="486" pos:column="39"/></name> <operator pos:line="486" pos:column="40">/<pos:position pos:line="486" pos:column="41"/></operator> <literal type="number" pos:line="486" pos:column="42">1000<pos:position pos:line="486" pos:column="46"/></literal></expr>;<pos:position pos:line="486" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="487" pos:column="17">tvs<pos:position pos:line="487" pos:column="20"/></name><operator pos:line="487" pos:column="20">.<pos:position pos:line="487" pos:column="21"/></operator><name pos:line="487" pos:column="21">tv_usec<pos:position pos:line="487" pos:column="28"/></name></name> <operator pos:line="487" pos:column="29">=<pos:position pos:line="487" pos:column="30"/></operator> <operator pos:line="487" pos:column="31">(<pos:position pos:line="487" pos:column="32"/></operator><name pos:line="487" pos:column="32">msec_left<pos:position pos:line="487" pos:column="41"/></name> <operator pos:line="487" pos:column="42">%<pos:position pos:line="487" pos:column="43"/></operator> <literal type="number" pos:line="487" pos:column="44">1000<pos:position pos:line="487" pos:column="48"/></literal><operator pos:line="487" pos:column="48">)<pos:position pos:line="487" pos:column="49"/></operator> <operator pos:line="487" pos:column="50">*<pos:position pos:line="487" pos:column="51"/></operator> <literal type="number" pos:line="487" pos:column="52">1000<pos:position pos:line="487" pos:column="56"/></literal></expr>;<pos:position pos:line="487" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="488" pos:column="17">select<pos:position pos:line="488" pos:column="23"/></name><argument_list pos:line="488" pos:column="23">(<argument><expr><literal type="number" pos:line="488" pos:column="24">0<pos:position pos:line="488" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="488" pos:column="27">NULL<pos:position pos:line="488" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="488" pos:column="33">NULL<pos:position pos:line="488" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="488" pos:column="39">NULL<pos:position pos:line="488" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="488" pos:column="45">&amp;<pos:position pos:line="488" pos:column="50"/></operator><name pos:line="488" pos:column="46">tvs<pos:position pos:line="488" pos:column="49"/></name></expr></argument>)<pos:position pos:line="488" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="488" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="489" pos:column="14"/></block></then></if>
        }<pos:position pos:line="490" pos:column="10"/></block></then></if>
    }<pos:position pos:line="491" pos:column="6"/></block></then></if>

    <if pos:line="493" pos:column="5">if <condition pos:line="493" pos:column="8">(<expr><name pos:line="493" pos:column="9">ping<pos:position pos:line="493" pos:column="13"/></name> <operator pos:line="493" pos:column="14">&amp;&amp;<pos:position pos:line="493" pos:column="24"/></operator> <name pos:line="493" pos:column="17">i<pos:position pos:line="493" pos:column="18"/></name></expr>)<pos:position pos:line="493" pos:column="19"/></condition><then pos:line="493" pos:column="19"> <block pos:line="493" pos:column="20">{
        <expr_stmt><expr><name pos:line="494" pos:column="9">ping_mean<pos:position pos:line="494" pos:column="18"/></name> <operator pos:line="494" pos:column="19">=<pos:position pos:line="494" pos:column="20"/></operator> <name pos:line="494" pos:column="21">ping_sum<pos:position pos:line="494" pos:column="29"/></name> <operator pos:line="494" pos:column="30">/<pos:position pos:line="494" pos:column="31"/></operator> <name pos:line="494" pos:column="32">i<pos:position pos:line="494" pos:column="33"/></name></expr>;<pos:position pos:line="494" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="495" pos:column="9">fprintf<pos:position pos:line="495" pos:column="16"/></name><argument_list pos:line="495" pos:column="16">(<argument><expr><name pos:line="495" pos:column="17">stderr<pos:position pos:line="495" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="495" pos:column="25">"%d requests, round-trip (secs) min/avg/max = "<pos:position pos:line="495" pos:column="72"/></literal>
                <literal type="string" pos:line="496" pos:column="17">"%ld.%03ld/%ld.%03ld/%ld.%03ld\n"<pos:position pos:line="496" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="496" pos:column="52">i<pos:position pos:line="496" pos:column="53"/></name></expr></argument>,
                <argument><expr><name pos:line="497" pos:column="17">ping_min<pos:position pos:line="497" pos:column="25"/></name> <operator pos:line="497" pos:column="26">/<pos:position pos:line="497" pos:column="27"/></operator> <literal type="number" pos:line="497" pos:column="28">1000<pos:position pos:line="497" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="497" pos:column="34">ping_min<pos:position pos:line="497" pos:column="42"/></name> <operator pos:line="497" pos:column="43">%<pos:position pos:line="497" pos:column="44"/></operator> <literal type="number" pos:line="497" pos:column="45">1000<pos:position pos:line="497" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="497" pos:column="51">ping_mean<pos:position pos:line="497" pos:column="60"/></name> <operator pos:line="497" pos:column="61">/<pos:position pos:line="497" pos:column="62"/></operator> <literal type="number" pos:line="497" pos:column="63">1000<pos:position pos:line="497" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="497" pos:column="69">ping_mean<pos:position pos:line="497" pos:column="78"/></name> <operator pos:line="497" pos:column="79">%<pos:position pos:line="497" pos:column="80"/></operator> <literal type="number" pos:line="497" pos:column="81">1000<pos:position pos:line="497" pos:column="85"/></literal></expr></argument>,
                <argument><expr><name pos:line="498" pos:column="17">ping_max<pos:position pos:line="498" pos:column="25"/></name> <operator pos:line="498" pos:column="26">/<pos:position pos:line="498" pos:column="27"/></operator> <literal type="number" pos:line="498" pos:column="28">1000<pos:position pos:line="498" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="498" pos:column="34">ping_max<pos:position pos:line="498" pos:column="42"/></name> <operator pos:line="498" pos:column="43">%<pos:position pos:line="498" pos:column="44"/></operator> <literal type="number" pos:line="498" pos:column="45">1000<pos:position pos:line="498" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="498" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="498" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="499" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="500" pos:column="5">exit<pos:position pos:line="500" pos:column="9"/></name><argument_list pos:line="500" pos:column="9">(<argument><expr><literal type="number" pos:line="500" pos:column="10">0<pos:position pos:line="500" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="500" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="500" pos:column="13"/></expr_stmt>
    <comment type="block" pos:line="501" pos:column="5">/*NOTREACHED */</comment>
    <return pos:line="502" pos:column="5">return <expr><literal type="number" pos:line="502" pos:column="12">0<pos:position pos:line="502" pos:column="13"/></literal></expr>;<pos:position pos:line="502" pos:column="14"/></return>
}<pos:position pos:line="503" pos:column="2"/></block></for>

<function><specifier pos:line="505" pos:column="1">static<pos:position pos:line="505" pos:column="7"/></specifier> <type><name pos:line="505" pos:column="8">int<pos:position pos:line="505" pos:column="11"/></name></type>
<name pos:line="506" pos:column="1">client_comm_bind<pos:position pos:line="506" pos:column="17"/></name><parameter_list pos:line="506" pos:column="17">(<parameter><decl><type><name pos:line="506" pos:column="18">int<pos:position pos:line="506" pos:column="21"/></name></type> <name pos:line="506" pos:column="22">sock<pos:position pos:line="506" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="506" pos:column="28">const<pos:position pos:line="506" pos:column="33"/></specifier> <name pos:line="506" pos:column="34">IpAddress<pos:position pos:line="506" pos:column="43"/></name> <modifier pos:line="506" pos:column="44">&amp;<pos:position pos:line="506" pos:column="49"/></modifier></type><name pos:line="506" pos:column="45">addr<pos:position pos:line="506" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="506" pos:column="50"/></parameter_list>
<block pos:line="507" pos:column="1">{

    <decl_stmt><decl><type><name pos:line="509" pos:column="5">int<pos:position pos:line="509" pos:column="8"/></name></type> <name pos:line="509" pos:column="9">res<pos:position pos:line="509" pos:column="12"/></name></decl>;<pos:position pos:line="509" pos:column="13"/></decl_stmt>

    <decl_stmt><decl><specifier pos:line="511" pos:column="5">static<pos:position pos:line="511" pos:column="11"/></specifier> <type><name><name pos:line="511" pos:column="12">struct<pos:position pos:line="511" pos:column="18"/></name> <name pos:line="511" pos:column="19">addrinfo<pos:position pos:line="511" pos:column="27"/></name></name> <modifier pos:line="511" pos:column="28">*<pos:position pos:line="511" pos:column="29"/></modifier></type><name pos:line="511" pos:column="29">AI<pos:position pos:line="511" pos:column="31"/></name> <init pos:line="511" pos:column="32">= <expr><name pos:line="511" pos:column="34">NULL<pos:position pos:line="511" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="511" pos:column="39"/></decl_stmt>

    <comment type="block" pos:line="513" pos:column="5">/* Set up the source socket address from which to send. */</comment>

    <expr_stmt><expr><call><name><name pos:line="515" pos:column="5">addr<pos:position pos:line="515" pos:column="9"/></name><operator pos:line="515" pos:column="9">.<pos:position pos:line="515" pos:column="10"/></operator><name pos:line="515" pos:column="10">GetAddrInfo<pos:position pos:line="515" pos:column="21"/></name></name><argument_list pos:line="515" pos:column="21">(<argument><expr><name pos:line="515" pos:column="22">AI<pos:position pos:line="515" pos:column="24"/></name></expr></argument>)<pos:position pos:line="515" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="515" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="517" pos:column="5">res<pos:position pos:line="517" pos:column="8"/></name> <operator pos:line="517" pos:column="9">=<pos:position pos:line="517" pos:column="10"/></operator> <call><name pos:line="517" pos:column="11">bind<pos:position pos:line="517" pos:column="15"/></name><argument_list pos:line="517" pos:column="15">(<argument><expr><name pos:line="517" pos:column="16">sock<pos:position pos:line="517" pos:column="20"/></name></expr></argument>, <argument><expr><name><name pos:line="517" pos:column="22">AI<pos:position pos:line="517" pos:column="24"/></name><operator pos:line="517" pos:column="24">-&gt;<pos:position pos:line="517" pos:column="29"/></operator><name pos:line="517" pos:column="26">ai_addr<pos:position pos:line="517" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="517" pos:column="35">AI<pos:position pos:line="517" pos:column="37"/></name><operator pos:line="517" pos:column="37">-&gt;<pos:position pos:line="517" pos:column="42"/></operator><name pos:line="517" pos:column="39">ai_addrlen<pos:position pos:line="517" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="517" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="517" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="519" pos:column="5">addr<pos:position pos:line="519" pos:column="9"/></name><operator pos:line="519" pos:column="9">.<pos:position pos:line="519" pos:column="10"/></operator><name pos:line="519" pos:column="10">FreeAddrInfo<pos:position pos:line="519" pos:column="22"/></name></name><argument_list pos:line="519" pos:column="22">(<argument><expr><name pos:line="519" pos:column="23">AI<pos:position pos:line="519" pos:column="25"/></name></expr></argument>)<pos:position pos:line="519" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="519" pos:column="27"/></expr_stmt>

    <return pos:line="521" pos:column="5">return <expr><name pos:line="521" pos:column="12">res<pos:position pos:line="521" pos:column="15"/></name></expr>;<pos:position pos:line="521" pos:column="16"/></return>
}<pos:position pos:line="522" pos:column="2"/></block></function>

<function><specifier pos:line="524" pos:column="1">static<pos:position pos:line="524" pos:column="7"/></specifier> <type><name pos:line="524" pos:column="8">int<pos:position pos:line="524" pos:column="11"/></name></type>
<name pos:line="525" pos:column="1">client_comm_connect<pos:position pos:line="525" pos:column="20"/></name><parameter_list pos:line="525" pos:column="20">(<parameter><decl><type><name pos:line="525" pos:column="21">int<pos:position pos:line="525" pos:column="24"/></name></type> <name pos:line="525" pos:column="25">sock<pos:position pos:line="525" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="525" pos:column="31">const<pos:position pos:line="525" pos:column="36"/></specifier> <name pos:line="525" pos:column="37">IpAddress<pos:position pos:line="525" pos:column="46"/></name> <modifier pos:line="525" pos:column="47">&amp;<pos:position pos:line="525" pos:column="52"/></modifier></type><name pos:line="525" pos:column="48">addr<pos:position pos:line="525" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="525" pos:column="54">struct<pos:position pos:line="525" pos:column="60"/></name> <name pos:line="525" pos:column="61">timeval<pos:position pos:line="525" pos:column="68"/></name></name> <modifier pos:line="525" pos:column="69">*<pos:position pos:line="525" pos:column="70"/></modifier></type><name pos:line="525" pos:column="70">tvp<pos:position pos:line="525" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="525" pos:column="74"/></parameter_list>
<block pos:line="526" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="527" pos:column="5">int<pos:position pos:line="527" pos:column="8"/></name></type> <name pos:line="527" pos:column="9">res<pos:position pos:line="527" pos:column="12"/></name></decl>;<pos:position pos:line="527" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="528" pos:column="5">static<pos:position pos:line="528" pos:column="11"/></specifier> <type><name><name pos:line="528" pos:column="12">struct<pos:position pos:line="528" pos:column="18"/></name> <name pos:line="528" pos:column="19">addrinfo<pos:position pos:line="528" pos:column="27"/></name></name> <modifier pos:line="528" pos:column="28">*<pos:position pos:line="528" pos:column="29"/></modifier></type><name pos:line="528" pos:column="29">AI<pos:position pos:line="528" pos:column="31"/></name> <init pos:line="528" pos:column="32">= <expr><name pos:line="528" pos:column="34">NULL<pos:position pos:line="528" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="528" pos:column="39"/></decl_stmt>

    <comment type="block" pos:line="530" pos:column="5">/* Set up the destination socket address for message to send to. */</comment>

    <expr_stmt><expr><call><name><name pos:line="532" pos:column="5">addr<pos:position pos:line="532" pos:column="9"/></name><operator pos:line="532" pos:column="9">.<pos:position pos:line="532" pos:column="10"/></operator><name pos:line="532" pos:column="10">GetAddrInfo<pos:position pos:line="532" pos:column="21"/></name></name><argument_list pos:line="532" pos:column="21">(<argument><expr><name pos:line="532" pos:column="22">AI<pos:position pos:line="532" pos:column="24"/></name></expr></argument>)<pos:position pos:line="532" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="532" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="534" pos:column="5">res<pos:position pos:line="534" pos:column="8"/></name> <operator pos:line="534" pos:column="9">=<pos:position pos:line="534" pos:column="10"/></operator> <call><name pos:line="534" pos:column="11">connect<pos:position pos:line="534" pos:column="18"/></name><argument_list pos:line="534" pos:column="18">(<argument><expr><name pos:line="534" pos:column="19">sock<pos:position pos:line="534" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="534" pos:column="25">AI<pos:position pos:line="534" pos:column="27"/></name><operator pos:line="534" pos:column="27">-&gt;<pos:position pos:line="534" pos:column="32"/></operator><name pos:line="534" pos:column="29">ai_addr<pos:position pos:line="534" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="534" pos:column="38">AI<pos:position pos:line="534" pos:column="40"/></name><operator pos:line="534" pos:column="40">-&gt;<pos:position pos:line="534" pos:column="45"/></operator><name pos:line="534" pos:column="42">ai_addrlen<pos:position pos:line="534" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="534" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="534" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="536" pos:column="5">addr<pos:position pos:line="536" pos:column="9"/></name><operator pos:line="536" pos:column="9">.<pos:position pos:line="536" pos:column="10"/></operator><name pos:line="536" pos:column="10">FreeAddrInfo<pos:position pos:line="536" pos:column="22"/></name></name><argument_list pos:line="536" pos:column="22">(<argument><expr><name pos:line="536" pos:column="23">AI<pos:position pos:line="536" pos:column="25"/></name></expr></argument>)<pos:position pos:line="536" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="536" pos:column="27"/></expr_stmt>

    <if pos:line="538" pos:column="5">if <condition pos:line="538" pos:column="8">(<expr><name pos:line="538" pos:column="9">tvp<pos:position pos:line="538" pos:column="12"/></name></expr>)<pos:position pos:line="538" pos:column="13"/></condition><then pos:line="538" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="539" pos:column="9">(<pos:position pos:line="539" pos:column="10"/></operator><name pos:line="539" pos:column="10">void<pos:position pos:line="539" pos:column="14"/></name><operator pos:line="539" pos:column="14">)<pos:position pos:line="539" pos:column="15"/></operator> <call><name pos:line="539" pos:column="16">Now<pos:position pos:line="539" pos:column="19"/></name><argument_list pos:line="539" pos:column="19">(<argument><expr><name pos:line="539" pos:column="20">tvp<pos:position pos:line="539" pos:column="23"/></name></expr></argument>)<pos:position pos:line="539" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="539" pos:column="25"/></expr_stmt></block></then></if>

    <return pos:line="541" pos:column="5">return <expr><name pos:line="541" pos:column="12">res<pos:position pos:line="541" pos:column="15"/></name></expr>;<pos:position pos:line="541" pos:column="16"/></return>
}<pos:position pos:line="542" pos:column="2"/></block></function>

<function><specifier pos:line="544" pos:column="1">static<pos:position pos:line="544" pos:column="7"/></specifier> <type><name pos:line="544" pos:column="8">int<pos:position pos:line="544" pos:column="11"/></name></type>
<name pos:line="545" pos:column="1">Now<pos:position pos:line="545" pos:column="4"/></name><parameter_list pos:line="545" pos:column="4">(<parameter><decl><type><name><name pos:line="545" pos:column="5">struct<pos:position pos:line="545" pos:column="11"/></name> <name pos:line="545" pos:column="12">timeval<pos:position pos:line="545" pos:column="19"/></name></name> <modifier pos:line="545" pos:column="20">*<pos:position pos:line="545" pos:column="21"/></modifier></type><name pos:line="545" pos:column="21">tp<pos:position pos:line="545" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="545" pos:column="24"/></parameter_list>
<block pos:line="546" pos:column="1">{
<cpp:if pos:line="547" pos:column="1">#<cpp:directive pos:line="547" pos:column="2">if<pos:position pos:line="547" pos:column="4"/></cpp:directive> <expr><name pos:line="547" pos:column="5">GETTIMEOFDAY_NO_TZP<pos:position pos:line="547" pos:column="24"/></name></expr></cpp:if>
    <return pos:line="548" pos:column="5">return <expr><call><name pos:line="548" pos:column="12">gettimeofday<pos:position pos:line="548" pos:column="24"/></name><argument_list pos:line="548" pos:column="24">(<argument><expr><name pos:line="548" pos:column="25">tp<pos:position pos:line="548" pos:column="27"/></name></expr></argument>)<pos:position pos:line="548" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="548" pos:column="29"/></return>
<cpp:else pos:line="549" pos:column="1">#<cpp:directive pos:line="549" pos:column="2">else<pos:position pos:line="549" pos:column="6"/></cpp:directive></cpp:else>

    <return pos:line="551" pos:column="5">return <expr><call><name pos:line="551" pos:column="12">gettimeofday<pos:position pos:line="551" pos:column="24"/></name><argument_list pos:line="551" pos:column="24">(<argument><expr><name pos:line="551" pos:column="25">tp<pos:position pos:line="551" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="551" pos:column="29">NULL<pos:position pos:line="551" pos:column="33"/></name></expr></argument>)<pos:position pos:line="551" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="551" pos:column="35"/></return>
<cpp:endif pos:line="552" pos:column="1">#<cpp:directive pos:line="552" pos:column="2">endif<pos:position pos:line="552" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="553" pos:column="2"/></block></function>				<comment type="block" pos:line="553" pos:column="33">/* ARGSUSED */</comment>

<function><specifier pos:line="555" pos:column="1">static<pos:position pos:line="555" pos:column="7"/></specifier> <type><name pos:line="555" pos:column="8">void<pos:position pos:line="555" pos:column="12"/></name></type>
<name pos:line="556" pos:column="1">catchSignal<pos:position pos:line="556" pos:column="12"/></name><parameter_list pos:line="556" pos:column="12">(<parameter><decl><type><name pos:line="556" pos:column="13">int<pos:position pos:line="556" pos:column="16"/></name></type> <name pos:line="556" pos:column="17">sig<pos:position pos:line="556" pos:column="20"/></name></decl></parameter>)<pos:position pos:line="556" pos:column="21"/></parameter_list>
<block pos:line="557" pos:column="1">{
    <expr_stmt><expr><name pos:line="558" pos:column="5">interrupted<pos:position pos:line="558" pos:column="16"/></name> <operator pos:line="558" pos:column="17">=<pos:position pos:line="558" pos:column="18"/></operator> <literal type="number" pos:line="558" pos:column="19">1<pos:position pos:line="558" pos:column="20"/></literal></expr>;<pos:position pos:line="558" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="559" pos:column="5">fprintf<pos:position pos:line="559" pos:column="12"/></name><argument_list pos:line="559" pos:column="12">(<argument><expr><name pos:line="559" pos:column="13">stderr<pos:position pos:line="559" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="559" pos:column="21">"Interrupted.\n"<pos:position pos:line="559" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="559" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="559" pos:column="39"/></expr_stmt>
}<pos:position pos:line="560" pos:column="2"/></block></function>

<function><specifier pos:line="562" pos:column="1">static<pos:position pos:line="562" pos:column="7"/></specifier> <type><name pos:line="562" pos:column="8">void<pos:position pos:line="562" pos:column="12"/></name></type>
<name pos:line="563" pos:column="1">pipe_handler<pos:position pos:line="563" pos:column="13"/></name><parameter_list pos:line="563" pos:column="13">(<parameter><decl><type><name pos:line="563" pos:column="14">int<pos:position pos:line="563" pos:column="17"/></name></type> <name pos:line="563" pos:column="18">sig<pos:position pos:line="563" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="563" pos:column="22"/></parameter_list>
<block pos:line="564" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="565" pos:column="5">fprintf<pos:position pos:line="565" pos:column="12"/></name><argument_list pos:line="565" pos:column="12">(<argument><expr><name pos:line="565" pos:column="13">stderr<pos:position pos:line="565" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="565" pos:column="21">"SIGPIPE received.\n"<pos:position pos:line="565" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="565" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="565" pos:column="44"/></expr_stmt>
}<pos:position pos:line="566" pos:column="2"/></block></function>

<function><specifier pos:line="568" pos:column="1">static<pos:position pos:line="568" pos:column="7"/></specifier> <type><name pos:line="568" pos:column="8">void<pos:position pos:line="568" pos:column="12"/></name></type>
<name pos:line="569" pos:column="1">set_our_signal<pos:position pos:line="569" pos:column="15"/></name><parameter_list pos:line="569" pos:column="15">(<parameter><decl><type><name pos:line="569" pos:column="16">void<pos:position pos:line="569" pos:column="20"/></name></type></decl></parameter>)<pos:position pos:line="569" pos:column="21"/></parameter_list>
<block pos:line="570" pos:column="1">{
<cpp:if pos:line="571" pos:column="1">#<cpp:directive pos:line="571" pos:column="2">if<pos:position pos:line="571" pos:column="4"/></cpp:directive> <expr><name pos:line="571" pos:column="5">HAVE_SIGACTION<pos:position pos:line="571" pos:column="19"/></name></expr></cpp:if>

    <decl_stmt><decl><type><name><name pos:line="573" pos:column="5">struct<pos:position pos:line="573" pos:column="11"/></name> <name pos:line="573" pos:column="12">sigaction<pos:position pos:line="573" pos:column="21"/></name></name></type> <name pos:line="573" pos:column="22">sa<pos:position pos:line="573" pos:column="24"/></name></decl>;<pos:position pos:line="573" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="574" pos:column="5">sa<pos:position pos:line="574" pos:column="7"/></name><operator pos:line="574" pos:column="7">.<pos:position pos:line="574" pos:column="8"/></operator><name pos:line="574" pos:column="8">sa_handler<pos:position pos:line="574" pos:column="18"/></name></name> <operator pos:line="574" pos:column="19">=<pos:position pos:line="574" pos:column="20"/></operator> <name pos:line="574" pos:column="21">pipe_handler<pos:position pos:line="574" pos:column="33"/></name></expr>;<pos:position pos:line="574" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="575" pos:column="5">sa<pos:position pos:line="575" pos:column="7"/></name><operator pos:line="575" pos:column="7">.<pos:position pos:line="575" pos:column="8"/></operator><name pos:line="575" pos:column="8">sa_flags<pos:position pos:line="575" pos:column="16"/></name></name> <operator pos:line="575" pos:column="17">=<pos:position pos:line="575" pos:column="18"/></operator> <name pos:line="575" pos:column="19">SA_RESTART<pos:position pos:line="575" pos:column="29"/></name></expr>;<pos:position pos:line="575" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="576" pos:column="5">sigemptyset<pos:position pos:line="576" pos:column="16"/></name><argument_list pos:line="576" pos:column="16">(<argument><expr><operator pos:line="576" pos:column="17">&amp;<pos:position pos:line="576" pos:column="22"/></operator><name><name pos:line="576" pos:column="18">sa<pos:position pos:line="576" pos:column="20"/></name><operator pos:line="576" pos:column="20">.<pos:position pos:line="576" pos:column="21"/></operator><name pos:line="576" pos:column="21">sa_mask<pos:position pos:line="576" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="576" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="576" pos:column="30"/></expr_stmt>

    <if pos:line="578" pos:column="5">if <condition pos:line="578" pos:column="8">(<expr><call><name pos:line="578" pos:column="9">sigaction<pos:position pos:line="578" pos:column="18"/></name><argument_list pos:line="578" pos:column="18">(<argument><expr><name pos:line="578" pos:column="19">SIGPIPE<pos:position pos:line="578" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="578" pos:column="28">&amp;<pos:position pos:line="578" pos:column="33"/></operator><name pos:line="578" pos:column="29">sa<pos:position pos:line="578" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="578" pos:column="33">NULL<pos:position pos:line="578" pos:column="37"/></name></expr></argument>)<pos:position pos:line="578" pos:column="38"/></argument_list></call> <operator pos:line="578" pos:column="39">&lt;<pos:position pos:line="578" pos:column="43"/></operator> <literal type="number" pos:line="578" pos:column="41">0<pos:position pos:line="578" pos:column="42"/></literal></expr>)<pos:position pos:line="578" pos:column="43"/></condition><then pos:line="578" pos:column="43"> <block pos:line="578" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="579" pos:column="9">fprintf<pos:position pos:line="579" pos:column="16"/></name><argument_list pos:line="579" pos:column="16">(<argument><expr><name pos:line="579" pos:column="17">stderr<pos:position pos:line="579" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="579" pos:column="25">"Cannot set PIPE signal.\n"<pos:position pos:line="579" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="579" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="579" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="580" pos:column="9">exit<pos:position pos:line="580" pos:column="13"/></name><argument_list pos:line="580" pos:column="13">(<argument><expr><operator pos:line="580" pos:column="14">-<pos:position pos:line="580" pos:column="15"/></operator><literal type="number" pos:line="580" pos:column="15">1<pos:position pos:line="580" pos:column="16"/></literal></expr></argument>)<pos:position pos:line="580" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="580" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="581" pos:column="6"/></block></then></if>
<cpp:else pos:line="582" pos:column="1">#<cpp:directive pos:line="582" pos:column="2">else<pos:position pos:line="582" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name pos:line="583" pos:column="5">signal<pos:position pos:line="583" pos:column="11"/></name><argument_list pos:line="583" pos:column="11">(<argument><expr><name pos:line="583" pos:column="12">SIGPIPE<pos:position pos:line="583" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="583" pos:column="21">pipe_handler<pos:position pos:line="583" pos:column="33"/></name></expr></argument>)<pos:position pos:line="583" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="583" pos:column="35"/></expr_stmt>

<cpp:endif pos:line="585" pos:column="1">#<cpp:directive pos:line="585" pos:column="2">endif<pos:position pos:line="585" pos:column="7"/></cpp:directive></cpp:endif>

}<pos:position pos:line="587" pos:column="2"/></block></function>

<function><specifier pos:line="589" pos:column="1">static<pos:position pos:line="589" pos:column="7"/></specifier> <type><name pos:line="589" pos:column="8">ssize_t<pos:position pos:line="589" pos:column="15"/></name></type>
<name pos:line="590" pos:column="1">myread<pos:position pos:line="590" pos:column="7"/></name><parameter_list pos:line="590" pos:column="7">(<parameter><decl><type><name pos:line="590" pos:column="8">int<pos:position pos:line="590" pos:column="11"/></name></type> <name pos:line="590" pos:column="12">fd<pos:position pos:line="590" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="590" pos:column="16">void<pos:position pos:line="590" pos:column="20"/></name> <modifier pos:line="590" pos:column="21">*<pos:position pos:line="590" pos:column="22"/></modifier></type><name pos:line="590" pos:column="22">buf<pos:position pos:line="590" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="590" pos:column="27">size_t<pos:position pos:line="590" pos:column="33"/></name></type> <name pos:line="590" pos:column="34">len<pos:position pos:line="590" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="590" pos:column="38"/></parameter_list>
<block pos:line="591" pos:column="1">{
<cpp:ifndef pos:line="592" pos:column="1">#<cpp:directive pos:line="592" pos:column="2">ifndef<pos:position pos:line="592" pos:column="8"/></cpp:directive> <name pos:line="592" pos:column="9">_SQUID_MSWIN_<pos:position pos:line="592" pos:column="22"/></name></cpp:ifndef>
    <expr_stmt><expr><call><name pos:line="593" pos:column="5">alarm<pos:position pos:line="593" pos:column="10"/></name><argument_list pos:line="593" pos:column="10">(<argument><expr><name pos:line="593" pos:column="11">io_timeout<pos:position pos:line="593" pos:column="21"/></name></expr></argument>)<pos:position pos:line="593" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="593" pos:column="23"/></expr_stmt>
    <return pos:line="594" pos:column="5">return <expr><call><name pos:line="594" pos:column="12">read<pos:position pos:line="594" pos:column="16"/></name><argument_list pos:line="594" pos:column="16">(<argument><expr><name pos:line="594" pos:column="17">fd<pos:position pos:line="594" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="594" pos:column="21">buf<pos:position pos:line="594" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="594" pos:column="26">len<pos:position pos:line="594" pos:column="29"/></name></expr></argument>)<pos:position pos:line="594" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="594" pos:column="31"/></return>
<cpp:else pos:line="595" pos:column="1">#<cpp:directive pos:line="595" pos:column="2">else<pos:position pos:line="595" pos:column="6"/></cpp:directive></cpp:else>

    <return pos:line="597" pos:column="5">return <expr><call><name pos:line="597" pos:column="12">recv<pos:position pos:line="597" pos:column="16"/></name><argument_list pos:line="597" pos:column="16">(<argument><expr><name pos:line="597" pos:column="17">fd<pos:position pos:line="597" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="597" pos:column="21">buf<pos:position pos:line="597" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="597" pos:column="26">len<pos:position pos:line="597" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="597" pos:column="31">0<pos:position pos:line="597" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="597" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="597" pos:column="34"/></return>
<cpp:endif pos:line="598" pos:column="1">#<cpp:directive pos:line="598" pos:column="2">endif<pos:position pos:line="598" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="599" pos:column="2"/></block></function>

<function><specifier pos:line="601" pos:column="1">static<pos:position pos:line="601" pos:column="7"/></specifier> <type><name pos:line="601" pos:column="8">ssize_t<pos:position pos:line="601" pos:column="15"/></name></type>
<name pos:line="602" pos:column="1">mywrite<pos:position pos:line="602" pos:column="8"/></name><parameter_list pos:line="602" pos:column="8">(<parameter><decl><type><name pos:line="602" pos:column="9">int<pos:position pos:line="602" pos:column="12"/></name></type> <name pos:line="602" pos:column="13">fd<pos:position pos:line="602" pos:column="15"/></name></decl></parameter>, <parameter><decl><type><name pos:line="602" pos:column="17">void<pos:position pos:line="602" pos:column="21"/></name> <modifier pos:line="602" pos:column="22">*<pos:position pos:line="602" pos:column="23"/></modifier></type><name pos:line="602" pos:column="23">buf<pos:position pos:line="602" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="602" pos:column="28">size_t<pos:position pos:line="602" pos:column="34"/></name></type> <name pos:line="602" pos:column="35">len<pos:position pos:line="602" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="602" pos:column="39"/></parameter_list>
<block pos:line="603" pos:column="1">{
<cpp:ifndef pos:line="604" pos:column="1">#<cpp:directive pos:line="604" pos:column="2">ifndef<pos:position pos:line="604" pos:column="8"/></cpp:directive> <name pos:line="604" pos:column="9">_SQUID_MSWIN_<pos:position pos:line="604" pos:column="22"/></name></cpp:ifndef>
    <expr_stmt><expr><call><name pos:line="605" pos:column="5">alarm<pos:position pos:line="605" pos:column="10"/></name><argument_list pos:line="605" pos:column="10">(<argument><expr><name pos:line="605" pos:column="11">io_timeout<pos:position pos:line="605" pos:column="21"/></name></expr></argument>)<pos:position pos:line="605" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="605" pos:column="23"/></expr_stmt>
    <return pos:line="606" pos:column="5">return <expr><call><name pos:line="606" pos:column="12">write<pos:position pos:line="606" pos:column="17"/></name><argument_list pos:line="606" pos:column="17">(<argument><expr><name pos:line="606" pos:column="18">fd<pos:position pos:line="606" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="606" pos:column="22">buf<pos:position pos:line="606" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="606" pos:column="27">len<pos:position pos:line="606" pos:column="30"/></name></expr></argument>)<pos:position pos:line="606" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="606" pos:column="32"/></return>
<cpp:else pos:line="607" pos:column="1">#<cpp:directive pos:line="607" pos:column="2">else<pos:position pos:line="607" pos:column="6"/></cpp:directive></cpp:else>

    <return pos:line="609" pos:column="5">return <expr><call><name pos:line="609" pos:column="12">send<pos:position pos:line="609" pos:column="16"/></name><argument_list pos:line="609" pos:column="16">(<argument><expr><name pos:line="609" pos:column="17">fd<pos:position pos:line="609" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="609" pos:column="21">buf<pos:position pos:line="609" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="609" pos:column="26">len<pos:position pos:line="609" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="609" pos:column="31">0<pos:position pos:line="609" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="609" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="609" pos:column="34"/></return>
<cpp:endif pos:line="610" pos:column="1">#<cpp:directive pos:line="610" pos:column="2">endif<pos:position pos:line="610" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="611" pos:column="2"/></block></function></block></function></unit>

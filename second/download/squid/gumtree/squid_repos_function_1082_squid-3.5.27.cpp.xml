<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1082_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">dump_acl_b_size_t<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">StoreEntry<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">entry<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">name<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">AclSizeLimit<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type> <name pos:line="2" pos:column="72">head<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">AclSizeLimit<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">l<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">l<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">head<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></init> <condition><expr><name pos:line="6" pos:column="20">l<pos:position pos:line="6" pos:column="21"/></name></expr>;<pos:position pos:line="6" pos:column="22"/></condition> <incr><expr><name pos:line="6" pos:column="23">l<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">=<pos:position pos:line="6" pos:column="26"/></operator> <name><name pos:line="6" pos:column="27">l<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">next<pos:position pos:line="6" pos:column="34"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="35"/></control> <block pos:line="6" pos:column="36">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name><name pos:line="7" pos:column="13">l<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">size<pos:position pos:line="7" pos:column="20"/></name></name> <operator pos:line="7" pos:column="21">!=<pos:position pos:line="7" pos:column="23"/></operator> <operator pos:line="7" pos:column="24">-<pos:position pos:line="7" pos:column="25"/></operator><literal type="number" pos:line="7" pos:column="25">1<pos:position pos:line="7" pos:column="26"/></literal></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="13">storeAppendPrintf<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">entry<pos:position pos:line="8" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="38">"%s %d %s\n"<pos:position pos:line="8" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="52">name<pos:position pos:line="8" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="58">(<pos:position pos:line="8" pos:column="59"/></operator><name pos:line="8" pos:column="59">int<pos:position pos:line="8" pos:column="62"/></name><operator pos:line="8" pos:column="62">)<pos:position pos:line="8" pos:column="63"/></operator> <name><name pos:line="8" pos:column="64">l<pos:position pos:line="8" pos:column="65"/></name><operator pos:line="8" pos:column="65">-&gt;<pos:position pos:line="8" pos:column="70"/></operator><name pos:line="8" pos:column="67">size<pos:position pos:line="8" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="73">B_BYTES_STR<pos:position pos:line="8" pos:column="84"/></name></expr></argument>)<pos:position pos:line="8" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="86"/></expr_stmt></block></then>
        <else pos:line="9" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="13">storeAppendPrintf<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">entry<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="38">"%s none"<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="49">name<pos:position pos:line="10" pos:column="53"/></name></expr></argument>)<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name pos:line="12" pos:column="9">dump_acl_list<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">entry<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="30">l<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">-&gt;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="33">aclList<pos:position pos:line="12" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="14" pos:column="9">storeAppendPrintf<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">entry<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"\n"<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></for>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

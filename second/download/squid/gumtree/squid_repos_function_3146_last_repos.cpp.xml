<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3146_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int64_t<pos:position pos:line="1" pos:column="8"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHdrRange<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">firstOffset<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list> <specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int64_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">offset<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><name><name pos:line="4" pos:column="22">HttpHdrRangeSpec<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">::<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">UnknownPosition<pos:position pos:line="4" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">const_iterator<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">pos<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><call><name pos:line="5" pos:column="26">begin<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">()<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>

    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><name pos:line="7" pos:column="12">pos<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">!=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">end<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">()<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="25"/></condition> <block pos:line="7" pos:column="26">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><operator pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">pos<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">)<pos:position pos:line="8" pos:column="19"/></operator><operator pos:line="8" pos:column="19">-&gt;<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="21">offset<pos:position pos:line="8" pos:column="27"/></name></name> <operator pos:line="8" pos:column="28">&lt;<pos:position pos:line="8" pos:column="32"/></operator> <name pos:line="8" pos:column="30">offset<pos:position pos:line="8" pos:column="36"/></name> <operator pos:line="8" pos:column="37">||<pos:position pos:line="8" pos:column="39"/></operator> <operator pos:line="8" pos:column="40">!<pos:position pos:line="8" pos:column="41"/></operator><call><name pos:line="8" pos:column="41">known_spec<pos:position pos:line="8" pos:column="51"/></name><argument_list pos:line="8" pos:column="51">(<argument><expr><name pos:line="8" pos:column="52">offset<pos:position pos:line="8" pos:column="58"/></name></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="60"/></condition><then pos:line="8" pos:column="60">
            <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="13">offset<pos:position pos:line="9" pos:column="19"/></name> <operator pos:line="9" pos:column="20">=<pos:position pos:line="9" pos:column="21"/></operator> <name><operator pos:line="9" pos:column="22">(<pos:position pos:line="9" pos:column="23"/></operator><operator pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">pos<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">)<pos:position pos:line="9" pos:column="28"/></operator><operator pos:line="9" pos:column="28">-&gt;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="30">offset<pos:position pos:line="9" pos:column="36"/></name></name></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt></block></then></if>

        <expr_stmt><expr><operator pos:line="11" pos:column="9">++<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">pos<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></while>

    <return pos:line="14" pos:column="5">return <expr><name pos:line="14" pos:column="12">offset<pos:position pos:line="14" pos:column="18"/></name></expr>;<pos:position pos:line="14" pos:column="19"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1250_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">MemPoolReportSorter<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">void<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">a<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">void<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">b<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">MemPoolStats<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">A<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">=  <expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">MemPoolStats<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">*<pos:position pos:line="4" pos:column="45"/></operator><operator pos:line="4" pos:column="45">)<pos:position pos:line="4" pos:column="46"/></operator> <name pos:line="4" pos:column="47">a<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">MemPoolStats<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">B<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">=  <expr><operator pos:line="5" pos:column="30">(<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">MemPoolStats<pos:position pos:line="5" pos:column="43"/></name> <operator pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></operator><operator pos:line="5" pos:column="45">)<pos:position pos:line="5" pos:column="46"/></operator> <name pos:line="5" pos:column="47">b<pos:position pos:line="5" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>

    <comment type="line" pos:line="7" pos:column="5">// use this to sort on %Total Allocated</comment>
    <comment type="line" pos:line="8" pos:column="5">//</comment>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">double<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">pa<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><operator pos:line="9" pos:column="17">(<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">double<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">)<pos:position pos:line="9" pos:column="25"/></operator> <name><name pos:line="9" pos:column="26">A<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">-&gt;<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="29">obj_size<pos:position pos:line="9" pos:column="37"/></name></name> <operator pos:line="9" pos:column="38">*<pos:position pos:line="9" pos:column="39"/></operator> <name><name pos:line="9" pos:column="40">A<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">meter<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">-&gt;<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="50">alloc<pos:position pos:line="9" pos:column="55"/></name><operator pos:line="9" pos:column="55">.<pos:position pos:line="9" pos:column="56"/></operator><name pos:line="9" pos:column="56">level<pos:position pos:line="9" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="62"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">double<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">pb<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><operator pos:line="10" pos:column="17">(<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">double<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">)<pos:position pos:line="10" pos:column="25"/></operator> <name><name pos:line="10" pos:column="26">B<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">obj_size<pos:position pos:line="10" pos:column="37"/></name></name> <operator pos:line="10" pos:column="38">*<pos:position pos:line="10" pos:column="39"/></operator> <name><name pos:line="10" pos:column="40">B<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">-&gt;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="43">meter<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">-&gt;<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="50">alloc<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">.<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="56">level<pos:position pos:line="10" pos:column="61"/></name></name></expr></init></decl>;<pos:position pos:line="10" pos:column="62"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">pa<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">&gt;<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="14">pb<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><operator pos:line="13" pos:column="16">-<pos:position pos:line="13" pos:column="17"/></operator><literal type="number" pos:line="13" pos:column="17">1<pos:position pos:line="13" pos:column="18"/></literal></expr>;<pos:position pos:line="13" pos:column="19"/></return></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">pb<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">&gt;<pos:position pos:line="15" pos:column="16"/></operator> <name pos:line="15" pos:column="14">pa<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">1<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return></block></then></if>

<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="18" pos:column="5">0<pos:position pos:line="18" pos:column="6"/></literal></expr></cpp:if>
    <comment type="line" pos:line="19" pos:column="5">// use this to sort on In Use high(hrs)</comment>
    <comment type="line" pos:line="20" pos:column="5">//</comment>
    if (A-&gt;meter-&gt;inuse.hwater_stamp &gt; B-&gt;meter-&gt;inuse.hwater_stamp)
        return -1;

    if (B-&gt;meter-&gt;inuse.hwater_stamp &gt; A-&gt;meter-&gt;inuse.hwater_stamp)
        return 1;

<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="29" pos:column="5">return <expr><literal type="number" pos:line="29" pos:column="12">0<pos:position pos:line="29" pos:column="13"/></literal></expr>;<pos:position pos:line="29" pos:column="14"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

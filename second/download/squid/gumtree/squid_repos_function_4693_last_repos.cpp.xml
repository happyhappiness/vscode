<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4693_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">AnyP<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">PortCfg<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">configureSslServerContext<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">()<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">secure<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">.<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">certs<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">.<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">empty<pos:position pos:line="4" pos:column="28"/></name></name><argument_list pos:line="4" pos:column="28">()<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31"> <block pos:line="4" pos:column="32">{
        <decl_stmt><decl><type><name><name pos:line="5" pos:column="9">Security<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">::<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">KeyData<pos:position pos:line="5" pos:column="26"/></name></name> <modifier pos:line="5" pos:column="27">&amp;<pos:position pos:line="5" pos:column="32"/></modifier></type><name pos:line="5" pos:column="28">keys<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><call><name><name pos:line="5" pos:column="35">secure<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">.<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">certs<pos:position pos:line="5" pos:column="47"/></name><operator pos:line="5" pos:column="47">.<pos:position pos:line="5" pos:column="48"/></operator><name pos:line="5" pos:column="48">front<pos:position pos:line="5" pos:column="53"/></name></name><argument_list pos:line="5" pos:column="53">()<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="56"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="6" pos:column="9">Ssl<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">::<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">readCertChainAndPrivateKeyFromFiles<pos:position pos:line="6" pos:column="49"/></name></name><argument_list pos:line="6" pos:column="49">(<argument><expr><name pos:line="6" pos:column="50">signingCert<pos:position pos:line="6" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="63">signPkey<pos:position pos:line="6" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="73">certsToChain<pos:position pos:line="6" pos:column="85"/></name></expr></argument>, <argument><expr><call><name><name pos:line="6" pos:column="87">keys<pos:position pos:line="6" pos:column="91"/></name><operator pos:line="6" pos:column="91">.<pos:position pos:line="6" pos:column="92"/></operator><name pos:line="6" pos:column="92">certFile<pos:position pos:line="6" pos:column="100"/></name><operator pos:line="6" pos:column="100">.<pos:position pos:line="6" pos:column="101"/></operator><name pos:line="6" pos:column="101">c_str<pos:position pos:line="6" pos:column="106"/></name></name><argument_list pos:line="6" pos:column="106">()<pos:position pos:line="6" pos:column="108"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="6" pos:column="110">keys<pos:position pos:line="6" pos:column="114"/></name><operator pos:line="6" pos:column="114">.<pos:position pos:line="6" pos:column="115"/></operator><name pos:line="6" pos:column="115">privateKeyFile<pos:position pos:line="6" pos:column="129"/></name><operator pos:line="6" pos:column="129">.<pos:position pos:line="6" pos:column="130"/></operator><name pos:line="6" pos:column="130">c_str<pos:position pos:line="6" pos:column="135"/></name></name><argument_list pos:line="6" pos:column="135">()<pos:position pos:line="6" pos:column="137"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="138"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="139"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">signingCert<pos:position pos:line="9" pos:column="21"/></name></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22"> <block pos:line="9" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type> <name><name pos:line="10" pos:column="14">buf<pos:position pos:line="10" pos:column="17"/></name><index pos:line="10" pos:column="17">[<expr><literal type="number" pos:line="10" pos:column="18">128<pos:position pos:line="10" pos:column="21"/></literal></expr>]<pos:position pos:line="10" pos:column="22"/></index></name></decl>;<pos:position pos:line="10" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">fatalf<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="string" pos:line="11" pos:column="16">"No valid signing SSL certificate configured for %s_port %s"<pos:position pos:line="11" pos:column="76"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="78">AnyP<pos:position pos:line="11" pos:column="82"/></name><operator pos:line="11" pos:column="82">::<pos:position pos:line="11" pos:column="84"/></operator><name pos:line="11" pos:column="84">ProtocolType_str<pos:position pos:line="11" pos:column="100"/></name><index pos:line="11" pos:column="100">[<expr><name><name pos:line="11" pos:column="101">transport<pos:position pos:line="11" pos:column="110"/></name><operator pos:line="11" pos:column="110">.<pos:position pos:line="11" pos:column="111"/></operator><name pos:line="11" pos:column="111">protocol<pos:position pos:line="11" pos:column="119"/></name></name></expr>]<pos:position pos:line="11" pos:column="120"/></index></name></expr></argument>,  <argument><expr><call><name><name pos:line="11" pos:column="123">s<pos:position pos:line="11" pos:column="124"/></name><operator pos:line="11" pos:column="124">.<pos:position pos:line="11" pos:column="125"/></operator><name pos:line="11" pos:column="125">toUrl<pos:position pos:line="11" pos:column="130"/></name></name><argument_list pos:line="11" pos:column="130">(<argument><expr><name pos:line="11" pos:column="131">buf<pos:position pos:line="11" pos:column="134"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="136">sizeof<argument_list pos:line="11" pos:column="142">(<argument><expr><name pos:line="11" pos:column="143">buf<pos:position pos:line="11" pos:column="146"/></name></expr></argument>)<pos:position pos:line="11" pos:column="147"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="148"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="149"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="150"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">signPkey<pos:position pos:line="14" pos:column="18"/></name></expr>)<pos:position pos:line="14" pos:column="19"/></condition><then pos:line="14" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">3<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="19">DBG_IMPORTANT<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="34">"No SSL private key configured for  "<pos:position pos:line="15" pos:column="71"/></literal> <operator pos:line="15" pos:column="72">&lt;&lt;<pos:position pos:line="15" pos:column="80"/></operator> <name><name pos:line="15" pos:column="75">AnyP<pos:position pos:line="15" pos:column="79"/></name><operator pos:line="15" pos:column="79">::<pos:position pos:line="15" pos:column="81"/></operator><name pos:line="15" pos:column="81">ProtocolType_str<pos:position pos:line="15" pos:column="97"/></name><index pos:line="15" pos:column="97">[<expr><name><name pos:line="15" pos:column="98">transport<pos:position pos:line="15" pos:column="107"/></name><operator pos:line="15" pos:column="107">.<pos:position pos:line="15" pos:column="108"/></operator><name pos:line="15" pos:column="108">protocol<pos:position pos:line="15" pos:column="116"/></name></name></expr>]<pos:position pos:line="15" pos:column="117"/></index></name> <operator pos:line="15" pos:column="118">&lt;&lt;<pos:position pos:line="15" pos:column="126"/></operator> <literal type="string" pos:line="15" pos:column="121">"_port "<pos:position pos:line="15" pos:column="129"/></literal> <operator pos:line="15" pos:column="130">&lt;&lt;<pos:position pos:line="15" pos:column="138"/></operator> <name pos:line="15" pos:column="133">s<pos:position pos:line="15" pos:column="134"/></name></expr></argument>)<pos:position pos:line="15" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="136"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">Ssl<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">::<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">generateUntrustedCert<pos:position pos:line="17" pos:column="31"/></name></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">untrustedSigningCert<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">untrustedSignPkey<pos:position pos:line="17" pos:column="71"/></name></expr></argument>,
                               <argument><expr><name pos:line="18" pos:column="32">signingCert<pos:position pos:line="18" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="45">signPkey<pos:position pos:line="18" pos:column="53"/></name></expr></argument>)<pos:position pos:line="18" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="55"/></expr_stmt>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">untrustedSigningCert<pos:position pos:line="20" pos:column="30"/></name></expr>)<pos:position pos:line="20" pos:column="31"/></condition><then pos:line="20" pos:column="31"> <block pos:line="20" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">char<pos:position pos:line="21" pos:column="13"/></name></type> <name><name pos:line="21" pos:column="14">buf<pos:position pos:line="21" pos:column="17"/></name><index pos:line="21" pos:column="17">[<expr><literal type="number" pos:line="21" pos:column="18">128<pos:position pos:line="21" pos:column="21"/></literal></expr>]<pos:position pos:line="21" pos:column="22"/></index></name></decl>;<pos:position pos:line="21" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">fatalf<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="string" pos:line="22" pos:column="16">"Unable to generate signing SSL certificate for untrusted sites for %s_port %s"<pos:position pos:line="22" pos:column="95"/></literal></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="97">AnyP<pos:position pos:line="22" pos:column="101"/></name><operator pos:line="22" pos:column="101">::<pos:position pos:line="22" pos:column="103"/></operator><name pos:line="22" pos:column="103">ProtocolType_str<pos:position pos:line="22" pos:column="119"/></name><index pos:line="22" pos:column="119">[<expr><name><name pos:line="22" pos:column="120">transport<pos:position pos:line="22" pos:column="129"/></name><operator pos:line="22" pos:column="129">.<pos:position pos:line="22" pos:column="130"/></operator><name pos:line="22" pos:column="130">protocol<pos:position pos:line="22" pos:column="138"/></name></name></expr>]<pos:position pos:line="22" pos:column="139"/></index></name></expr></argument>, <argument><expr><call><name><name pos:line="22" pos:column="141">s<pos:position pos:line="22" pos:column="142"/></name><operator pos:line="22" pos:column="142">.<pos:position pos:line="22" pos:column="143"/></operator><name pos:line="22" pos:column="143">toUrl<pos:position pos:line="22" pos:column="148"/></name></name><argument_list pos:line="22" pos:column="148">(<argument><expr><name pos:line="22" pos:column="149">buf<pos:position pos:line="22" pos:column="152"/></name></expr></argument>, <argument><expr><sizeof pos:line="22" pos:column="154">sizeof<argument_list pos:line="22" pos:column="160">(<argument><expr><name pos:line="22" pos:column="161">buf<pos:position pos:line="22" pos:column="164"/></name></expr></argument>)<pos:position pos:line="22" pos:column="165"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="22" pos:column="166"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="167"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="168"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">clientca<pos:position pos:line="25" pos:column="17"/></name></expr>)<pos:position pos:line="25" pos:column="18"/></condition><then pos:line="25" pos:column="18"> <block pos:line="25" pos:column="19">{
        <expr_stmt><expr><call><name><name pos:line="26" pos:column="9">clientCA<pos:position pos:line="26" pos:column="17"/></name><operator pos:line="26" pos:column="17">.<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">reset<pos:position pos:line="26" pos:column="23"/></name></name><argument_list pos:line="26" pos:column="23">(<argument><expr><call><name pos:line="26" pos:column="24">SSL_load_client_CA_file<pos:position pos:line="26" pos:column="47"/></name><argument_list pos:line="26" pos:column="47">(<argument><expr><name pos:line="26" pos:column="48">clientca<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="59"/></expr_stmt>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name><name pos:line="27" pos:column="13">clientCA<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">get<pos:position pos:line="27" pos:column="25"/></name></name><argument_list pos:line="27" pos:column="25">()<pos:position pos:line="27" pos:column="27"/></argument_list></call> <operator pos:line="27" pos:column="28">==<pos:position pos:line="27" pos:column="30"/></operator> <name pos:line="27" pos:column="31">NULL<pos:position pos:line="27" pos:column="35"/></name></expr>)<pos:position pos:line="27" pos:column="36"/></condition><then pos:line="27" pos:column="36"> <block pos:line="27" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">fatalf<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><literal type="string" pos:line="28" pos:column="20">"Unable to read client CAs! from %s"<pos:position pos:line="28" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="58">clientca<pos:position pos:line="28" pos:column="66"/></name></expr></argument>)<pos:position pos:line="28" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><operator pos:line="32" pos:column="9">!<pos:position pos:line="32" pos:column="10"/></operator><call><name><name pos:line="32" pos:column="10">secure<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">.<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">createStaticServerContext<pos:position pos:line="32" pos:column="42"/></name></name><argument_list pos:line="32" pos:column="42">(<argument><expr><operator pos:line="32" pos:column="43">*<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="44">this<pos:position pos:line="32" pos:column="48"/></name></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="50"/></condition><then pos:line="32" pos:column="50"> <block pos:line="32" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="33" pos:column="9">char<pos:position pos:line="33" pos:column="13"/></name></type> <name><name pos:line="33" pos:column="14">buf<pos:position pos:line="33" pos:column="17"/></name><index pos:line="33" pos:column="17">[<expr><literal type="number" pos:line="33" pos:column="18">128<pos:position pos:line="33" pos:column="21"/></literal></expr>]<pos:position pos:line="33" pos:column="22"/></index></name></decl>;<pos:position pos:line="33" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">fatalf<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="string" pos:line="34" pos:column="16">"%s_port %s initialization error"<pos:position pos:line="34" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="51">AnyP<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">::<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="57">ProtocolType_str<pos:position pos:line="34" pos:column="73"/></name><index pos:line="34" pos:column="73">[<expr><name><name pos:line="34" pos:column="74">transport<pos:position pos:line="34" pos:column="83"/></name><operator pos:line="34" pos:column="83">.<pos:position pos:line="34" pos:column="84"/></operator><name pos:line="34" pos:column="84">protocol<pos:position pos:line="34" pos:column="92"/></name></name></expr>]<pos:position pos:line="34" pos:column="93"/></index></name></expr></argument>, <argument><expr><call><name><name pos:line="34" pos:column="95">s<pos:position pos:line="34" pos:column="96"/></name><operator pos:line="34" pos:column="96">.<pos:position pos:line="34" pos:column="97"/></operator><name pos:line="34" pos:column="97">toUrl<pos:position pos:line="34" pos:column="102"/></name></name><argument_list pos:line="34" pos:column="102">(<argument><expr><name pos:line="34" pos:column="103">buf<pos:position pos:line="34" pos:column="106"/></name></expr></argument>, <argument><expr><sizeof pos:line="34" pos:column="108">sizeof<argument_list pos:line="34" pos:column="114">(<argument><expr><name pos:line="34" pos:column="115">buf<pos:position pos:line="34" pos:column="118"/></name></expr></argument>)<pos:position pos:line="34" pos:column="119"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="34" pos:column="120"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="122"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

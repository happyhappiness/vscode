<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7446_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">ntlm_make_challenge<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">ntlm_challenge<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">ch<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>,
                    <parameter><decl><type><specifier pos:line="3" pos:column="21">const<pos:position pos:line="3" pos:column="26"/></specifier> <name pos:line="3" pos:column="27">char<pos:position pos:line="3" pos:column="31"/></name> <modifier pos:line="3" pos:column="32">*<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="33">domain<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="41">const<pos:position pos:line="3" pos:column="46"/></specifier> <name pos:line="3" pos:column="47">char<pos:position pos:line="3" pos:column="51"/></name> <modifier pos:line="3" pos:column="52">*<pos:position pos:line="3" pos:column="53"/></modifier></type><name pos:line="3" pos:column="53">domain_controller_UNUSED<pos:position pos:line="3" pos:column="77"/></name></decl></parameter>,
                    <parameter><decl><type><specifier pos:line="4" pos:column="21">const<pos:position pos:line="4" pos:column="26"/></specifier> <name pos:line="4" pos:column="27">char<pos:position pos:line="4" pos:column="31"/></name> <modifier pos:line="4" pos:column="32">*<pos:position pos:line="4" pos:column="33"/></modifier></type><name pos:line="4" pos:column="33">challenge_nonce<pos:position pos:line="4" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="4" pos:column="50">const<pos:position pos:line="4" pos:column="55"/></specifier> <name pos:line="4" pos:column="56">int<pos:position pos:line="4" pos:column="59"/></name></type> <name pos:line="4" pos:column="60">challenge_nonce_len<pos:position pos:line="4" pos:column="79"/></name></decl></parameter>,
                    <parameter><decl><type><specifier pos:line="5" pos:column="21">const<pos:position pos:line="5" pos:column="26"/></specifier> <name pos:line="5" pos:column="27">uint32_t<pos:position pos:line="5" pos:column="35"/></name></type> <name pos:line="5" pos:column="36">flags<pos:position pos:line="5" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="42"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">pl<pos:position pos:line="7" pos:column="11"/></name> <init pos:line="7" pos:column="12">= <expr><literal type="number" pos:line="7" pos:column="14">0<pos:position pos:line="7" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">memset<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">ch<pos:position pos:line="8" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="19">sizeof<argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">ntlm_challenge<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt>  <comment type="block" pos:line="8" pos:column="45">/* reset */</comment>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">memcpy<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name><name pos:line="9" pos:column="12">ch<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">hdr<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">.<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">signature<pos:position pos:line="9" pos:column="29"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="31">"NTLMSSP"<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="42">8<pos:position pos:line="9" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>        <comment type="block" pos:line="9" pos:column="53">/* set the signature */</comment>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">ch<pos:position pos:line="10" pos:column="7"/></name><operator pos:line="10" pos:column="7">-&gt;<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="9">hdr<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">.<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">type<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name pos:line="10" pos:column="20">htole32<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">NTLM_CHALLENGE<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt> <comment type="block" pos:line="10" pos:column="45">/* this is a challenge */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">domain<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">!=<pos:position pos:line="11" pos:column="18"/></operator> <name pos:line="11" pos:column="19">NULL<pos:position pos:line="11" pos:column="23"/></name></expr>)<pos:position pos:line="11" pos:column="24"/></condition><then pos:line="11" pos:column="24"> <block pos:line="11" pos:column="25">{
        <comment type="line" pos:line="12" pos:column="9">// silently truncate the domain if it exceeds 2^16-1 bytes.</comment>
        <comment type="line" pos:line="13" pos:column="9">// NTLM packets normally expect 2^8 bytes of domain.</comment>
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">uint16_t<pos:position pos:line="14" pos:column="23"/></name></type> <name pos:line="14" pos:column="24">dlen<pos:position pos:line="14" pos:column="28"/></name> <init pos:line="14" pos:column="29">= <expr><call><name pos:line="14" pos:column="31">strlen<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">domain<pos:position pos:line="14" pos:column="44"/></name></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call> <operator pos:line="14" pos:column="46">&amp;<pos:position pos:line="14" pos:column="51"/></operator> <literal type="number" pos:line="14" pos:column="48">0xFFFF<pos:position pos:line="14" pos:column="54"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="55"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">ntlm_add_to_payload<pos:position pos:line="15" pos:column="28"/></name><argument_list pos:line="15" pos:column="28">(<argument><expr><operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator><name><name pos:line="15" pos:column="30">ch<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">-&gt;<pos:position pos:line="15" pos:column="37"/></operator><name pos:line="15" pos:column="34">hdr<pos:position pos:line="15" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="39">ch<pos:position pos:line="15" pos:column="41"/></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><name pos:line="15" pos:column="43">payload<pos:position pos:line="15" pos:column="50"/></name></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="52">&amp;<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="53">pl<pos:position pos:line="15" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="57">&amp;<pos:position pos:line="15" pos:column="62"/></operator><name><name pos:line="15" pos:column="58">ch<pos:position pos:line="15" pos:column="60"/></name><operator pos:line="15" pos:column="60">-&gt;<pos:position pos:line="15" pos:column="65"/></operator><name pos:line="15" pos:column="62">target<pos:position pos:line="15" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="70">domain<pos:position pos:line="15" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="78">dlen<pos:position pos:line="15" pos:column="82"/></name></expr></argument>)<pos:position pos:line="15" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="84"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">ch<pos:position pos:line="17" pos:column="7"/></name><operator pos:line="17" pos:column="7">-&gt;<pos:position pos:line="17" pos:column="12"/></operator><name pos:line="17" pos:column="9">flags<pos:position pos:line="17" pos:column="14"/></name></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <call><name pos:line="17" pos:column="17">htole32<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">flags<pos:position pos:line="17" pos:column="30"/></name></expr></argument>)<pos:position pos:line="17" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">ch<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">context_low<pos:position pos:line="18" pos:column="20"/></name></name> <operator pos:line="18" pos:column="21">=<pos:position pos:line="18" pos:column="22"/></operator> <literal type="number" pos:line="18" pos:column="23">0<pos:position pos:line="18" pos:column="24"/></literal></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>        <comment type="block" pos:line="18" pos:column="33">/* check this out */</comment>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">ch<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">-&gt;<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="9">context_high<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">0<pos:position pos:line="19" pos:column="25"/></literal></expr>;<pos:position pos:line="19" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">memcpy<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name><name pos:line="20" pos:column="12">ch<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">challenge<pos:position pos:line="20" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="27">challenge_nonce<pos:position pos:line="20" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="44">challenge_nonce_len<pos:position pos:line="20" pos:column="63"/></name></expr></argument>)<pos:position pos:line="20" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="65"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2551_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreEntry<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">hasOneOfEtags<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">String<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">&amp;<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="41">reqETags<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">bool<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">allowWeakMatch<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list> <specifier pos:line="2" pos:column="78">const<pos:position pos:line="2" pos:column="83"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">ETag<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">repETag<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><call><name pos:line="4" pos:column="26">getReply<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">()<pos:position pos:line="4" pos:column="36"/></argument_list></call><operator pos:line="4" pos:column="36">-&gt;<pos:position pos:line="4" pos:column="41"/></operator><call><name><name pos:line="4" pos:column="38">header<pos:position pos:line="4" pos:column="44"/></name><operator pos:line="4" pos:column="44">.<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">getETag<pos:position pos:line="4" pos:column="52"/></name></name><argument_list pos:line="4" pos:column="52">(<argument><expr><name><name pos:line="4" pos:column="53">Http<pos:position pos:line="4" pos:column="57"/></name><operator pos:line="4" pos:column="57">::<pos:position pos:line="4" pos:column="59"/></operator><name pos:line="4" pos:column="59">HdrType<pos:position pos:line="4" pos:column="66"/></name><operator pos:line="4" pos:column="66">::<pos:position pos:line="4" pos:column="68"/></operator><name pos:line="4" pos:column="68">ETAG<pos:position pos:line="4" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="74"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name><name pos:line="5" pos:column="10">repETag<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">.<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">str<pos:position pos:line="5" pos:column="21"/></name></name></expr>)<pos:position pos:line="5" pos:column="22"/></condition><then pos:line="5" pos:column="22">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><call><name pos:line="6" pos:column="16">strListIsMember<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><operator pos:line="6" pos:column="32">&amp;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="33">reqETags<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="43">"*"<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="48">','<pos:position pos:line="6" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="53"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">bool<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">matched<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><literal type="boolean" pos:line="8" pos:column="20">false<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">pos<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><name pos:line="9" pos:column="23">NULL<pos:position pos:line="9" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">char<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">*<pos:position pos:line="10" pos:column="17"/></modifier></type><name pos:line="10" pos:column="17">item<pos:position pos:line="10" pos:column="21"/></name></decl>;<pos:position pos:line="10" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">ilen<pos:position pos:line="11" pos:column="13"/></name></decl>;<pos:position pos:line="11" pos:column="14"/></decl_stmt>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><operator pos:line="12" pos:column="12">!<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">matched<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">&amp;&amp;<pos:position pos:line="12" pos:column="31"/></operator> <call><name pos:line="12" pos:column="24">strListGetItem<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="40">reqETags<pos:position pos:line="12" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="12" pos:column="50">','<pos:position pos:line="12" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="12" pos:column="55">&amp;<pos:position pos:line="12" pos:column="60"/></operator><name pos:line="12" pos:column="56">item<pos:position pos:line="12" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="62">&amp;<pos:position pos:line="12" pos:column="67"/></operator><name pos:line="12" pos:column="63">ilen<pos:position pos:line="12" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="69">&amp;<pos:position pos:line="12" pos:column="74"/></operator><name pos:line="12" pos:column="70">pos<pos:position pos:line="12" pos:column="73"/></name></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="75"/></condition> <block pos:line="12" pos:column="76">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name pos:line="13" pos:column="14">strncmp<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">item<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="28">"*"<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">ilen<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="13">matched<pos:position pos:line="14" pos:column="20"/></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <literal type="boolean" pos:line="14" pos:column="23">true<pos:position pos:line="14" pos:column="27"/></literal></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt></block></then>
        <else pos:line="15" pos:column="9">else <block pos:line="15" pos:column="14">{
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">String<pos:position pos:line="16" pos:column="19"/></name></type> <name pos:line="16" pos:column="20">str<pos:position pos:line="16" pos:column="23"/></name></decl>;<pos:position pos:line="16" pos:column="24"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="17" pos:column="13">str<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">.<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">append<pos:position pos:line="17" pos:column="23"/></name></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">item<pos:position pos:line="17" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="30">ilen<pos:position pos:line="17" pos:column="34"/></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">ETag<pos:position pos:line="18" pos:column="17"/></name></type> <name pos:line="18" pos:column="18">reqETag<pos:position pos:line="18" pos:column="25"/></name></decl>;<pos:position pos:line="18" pos:column="26"/></decl_stmt>
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><call><name pos:line="19" pos:column="17">etagParseInit<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><operator pos:line="19" pos:column="31">&amp;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="32">reqETag<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><call><name><name pos:line="19" pos:column="41">str<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">.<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="45">termedBuf<pos:position pos:line="19" pos:column="54"/></name></name><argument_list pos:line="19" pos:column="54">()<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="58"/></condition><then pos:line="19" pos:column="58"> <block pos:line="19" pos:column="59">{
                <expr_stmt><expr><name pos:line="20" pos:column="17">matched<pos:position pos:line="20" pos:column="24"/></name> <operator pos:line="20" pos:column="25">=<pos:position pos:line="20" pos:column="26"/></operator> <ternary><condition><expr><name pos:line="20" pos:column="27">allowWeakMatch<pos:position pos:line="20" pos:column="41"/></name></expr> ?<pos:position pos:line="20" pos:column="43"/></condition><then pos:line="20" pos:column="43"> <expr><call><name pos:line="20" pos:column="44">etagIsWeakEqual<pos:position pos:line="20" pos:column="59"/></name><argument_list pos:line="20" pos:column="59">(<argument><expr><name pos:line="20" pos:column="60">repETag<pos:position pos:line="20" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="69">reqETag<pos:position pos:line="20" pos:column="76"/></name></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr> <pos:position pos:line="20" pos:column="78"/></then><else pos:line="20" pos:column="78">:
                          <expr><call><name pos:line="21" pos:column="27">etagIsStrongEqual<pos:position pos:line="21" pos:column="44"/></name><argument_list pos:line="21" pos:column="44">(<argument><expr><name pos:line="21" pos:column="45">repETag<pos:position pos:line="21" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="54">reqETag<pos:position pos:line="21" pos:column="61"/></name></expr></argument>)<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="21" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="22" pos:column="14"/></block></then></if>
        }<pos:position pos:line="23" pos:column="10"/></block></else></if>
    }<pos:position pos:line="24" pos:column="6"/></block></while>
    <return pos:line="25" pos:column="5">return <expr><name pos:line="25" pos:column="12">matched<pos:position pos:line="25" pos:column="19"/></name></expr>;<pos:position pos:line="25" pos:column="20"/></return>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1043_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_acl_tos<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">acl_tos<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier><modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type> <name pos:line="2" pos:column="26">head<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">acl_tos<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">l<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">acl_tos<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier><modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">tail<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><name pos:line="5" pos:column="22">head<pos:position pos:line="5" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>	<comment type="block" pos:line="5" pos:column="33">/* sane name below */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">tos<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">junk<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">token<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><call><name pos:line="8" pos:column="19">strtok<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">NULL<pos:position pos:line="8" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="32">w_space<pos:position pos:line="8" pos:column="39"/></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">token<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16"> <block pos:line="10" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">self_destruct<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">()<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">sscanf<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">token<pos:position pos:line="15" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"0x%x%c"<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="33">&amp;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="34">tos<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="39">&amp;<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="40">junk<pos:position pos:line="15" pos:column="44"/></name></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call> <operator pos:line="15" pos:column="46">!=<pos:position pos:line="15" pos:column="48"/></operator> <literal type="number" pos:line="15" pos:column="49">1<pos:position pos:line="15" pos:column="50"/></literal></expr>)<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51"> <block pos:line="15" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">self_destruct<pos:position pos:line="16" pos:column="22"/></name><argument_list pos:line="16" pos:column="22">()<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>
        <return pos:line="17" pos:column="9">return;<pos:position pos:line="17" pos:column="16"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">tos<pos:position pos:line="20" pos:column="12"/></name> <argument_list type="generic" pos:line="20" pos:column="13">&lt; <argument><expr><literal type="number" pos:line="20" pos:column="15">0<pos:position pos:line="20" pos:column="16"/></literal> <operator pos:line="20" pos:column="17">||<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="20">tos<pos:position pos:line="20" pos:column="23"/></name></expr></argument> &gt;<pos:position pos:line="20" pos:column="28"/></argument_list></name> <literal type="number" pos:line="20" pos:column="26">255<pos:position pos:line="20" pos:column="29"/></literal></expr>)<pos:position pos:line="20" pos:column="30"/></condition><then pos:line="20" pos:column="30"> <block pos:line="20" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">self_destruct<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">()<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
        <return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">CBDATA_INIT_TYPE_FREECB<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">acl_tos<pos:position pos:line="25" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="38">freed_acl_tos<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">l<pos:position pos:line="27" pos:column="6"/></name> <operator pos:line="27" pos:column="7">=<pos:position pos:line="27" pos:column="8"/></operator> <call><name pos:line="27" pos:column="9">cbdataAlloc<pos:position pos:line="27" pos:column="20"/></name><argument_list pos:line="27" pos:column="20">(<argument><expr><name pos:line="27" pos:column="21">acl_tos<pos:position pos:line="27" pos:column="28"/></name></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">l<pos:position pos:line="29" pos:column="6"/></name><operator pos:line="29" pos:column="6">-&gt;<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="8">tos<pos:position pos:line="29" pos:column="11"/></name></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <name pos:line="29" pos:column="14">tos<pos:position pos:line="29" pos:column="17"/></name></expr>;<pos:position pos:line="29" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">aclParseAclList<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">LegacyParser<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="35">&amp;<pos:position pos:line="31" pos:column="40"/></operator><name><name pos:line="31" pos:column="36">l<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">-&gt;<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="39">aclList<pos:position pos:line="31" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="48"/></expr_stmt>

    <while pos:line="33" pos:column="5">while <condition pos:line="33" pos:column="11">(<expr><operator pos:line="33" pos:column="12">*<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="13">tail<pos:position pos:line="33" pos:column="17"/></name></expr>)<pos:position pos:line="33" pos:column="18"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="34" pos:column="9">tail<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <operator pos:line="34" pos:column="16">&amp;<pos:position pos:line="34" pos:column="21"/></operator><name><operator pos:line="34" pos:column="17">(<pos:position pos:line="34" pos:column="18"/></operator><operator pos:line="34" pos:column="18">*<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">tail<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">)<pos:position pos:line="34" pos:column="24"/></operator><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">next<pos:position pos:line="34" pos:column="30"/></name></name></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt></block></while>

    <expr_stmt><expr><operator pos:line="36" pos:column="5">*<pos:position pos:line="36" pos:column="6"/></operator><name pos:line="36" pos:column="6">tail<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <name pos:line="36" pos:column="13">l<pos:position pos:line="36" pos:column="14"/></name></expr>;<pos:position pos:line="36" pos:column="15"/></expr_stmt>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

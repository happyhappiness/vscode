<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5053_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">SupportedCommand<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">SBuf<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">&amp;<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="35">name<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name><name pos:line="4" pos:column="12">std<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name><name pos:line="4" pos:column="17">set<pos:position pos:line="4" pos:column="20"/></name><argument_list type="generic" pos:line="4" pos:column="20">&lt;<argument><expr><name pos:line="4" pos:column="21">SBuf<pos:position pos:line="4" pos:column="25"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="29"/></argument_list></name></name></type> <name pos:line="4" pos:column="27">BlackList<pos:position pos:line="4" pos:column="36"/></name></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name><name pos:line="5" pos:column="9">BlackList<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">.<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">empty<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">()<pos:position pos:line="5" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27"> <block pos:line="5" pos:column="28">{
        <comment type="block" pos:line="6" pos:column="9">/* Add FTP commands that Squid cannot relay correctly. */</comment>

        <comment type="line" pos:line="8" pos:column="9">// We probably do not support AUTH TLS.* and AUTH SSL,</comment>
        <comment type="line" pos:line="9" pos:column="9">// but let's disclaim all AUTH support to KISS, for now.</comment>
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">BlackList<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">insert<pos:position pos:line="10" pos:column="25"/></name></name><argument_list pos:line="10" pos:column="25">(<argument><expr><call><name pos:line="10" pos:column="26">cmdAuth<pos:position pos:line="10" pos:column="33"/></name><argument_list pos:line="10" pos:column="33">()<pos:position pos:line="10" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="13" pos:column="5">// we claim support for all commands that we do not know about</comment>
    <return pos:line="14" pos:column="5">return <expr><call><name><name pos:line="14" pos:column="12">BlackList<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">find<pos:position pos:line="14" pos:column="26"/></name></name><argument_list pos:line="14" pos:column="26">(<argument><expr><name pos:line="14" pos:column="27">name<pos:position pos:line="14" pos:column="31"/></name></expr></argument>)<pos:position pos:line="14" pos:column="32"/></argument_list></call> <operator pos:line="14" pos:column="33">==<pos:position pos:line="14" pos:column="35"/></operator> <call><name><name pos:line="14" pos:column="36">BlackList<pos:position pos:line="14" pos:column="45"/></name><operator pos:line="14" pos:column="45">.<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="46">end<pos:position pos:line="14" pos:column="49"/></name></name><argument_list pos:line="14" pos:column="49">()<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></return>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

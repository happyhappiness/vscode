<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2153_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ServerStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">adaptOrFinalizeReply<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">()<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_ADAPTATION<pos:position pos:line="4" pos:column="19"/></name></expr></cpp:if>
    <comment type="line" pos:line="5" pos:column="5">// TODO: merge with client side and return void to hide the on/off logic?</comment>
    <comment type="line" pos:line="6" pos:column="5">// The callback can be called with a NULL service if adaptation is off.</comment>
    <expr_stmt><expr><name pos:line="7" pos:column="5">adaptationAccessCheckPending<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">=<pos:position pos:line="7" pos:column="35"/></operator> <call><name><name pos:line="7" pos:column="36">Adaptation<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">::<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="48">AccessCheck<pos:position pos:line="7" pos:column="59"/></name><operator pos:line="7" pos:column="59">::<pos:position pos:line="7" pos:column="61"/></operator><name pos:line="7" pos:column="61">Start<pos:position pos:line="7" pos:column="66"/></name></name><argument_list pos:line="7" pos:column="66">(
                                       <argument><expr><name><name pos:line="8" pos:column="40">Adaptation<pos:position pos:line="8" pos:column="50"/></name><operator pos:line="8" pos:column="50">::<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="52">methodRespmod<pos:position pos:line="8" pos:column="65"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="67">Adaptation<pos:position pos:line="8" pos:column="77"/></name><operator pos:line="8" pos:column="77">::<pos:position pos:line="8" pos:column="79"/></operator><name pos:line="8" pos:column="79">pointPreCache<pos:position pos:line="8" pos:column="92"/></name></name></expr></argument>,
                                       <argument><expr><call><name pos:line="9" pos:column="40">originalRequest<pos:position pos:line="9" pos:column="55"/></name><argument_list pos:line="9" pos:column="55">()<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="59">virginReply<pos:position pos:line="9" pos:column="70"/></name><argument_list pos:line="9" pos:column="70">()<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="74">adaptationAclCheckDoneWrapper<pos:position pos:line="9" pos:column="103"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="105">this<pos:position pos:line="9" pos:column="109"/></name></expr></argument>)<pos:position pos:line="9" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="111"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">11<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="10" pos:column="15">5<pos:position pos:line="10" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="18">HERE<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">&lt;&lt;<pos:position pos:line="10" pos:column="31"/></operator> <literal type="string" pos:line="10" pos:column="26">"adaptationAccessCheckPending="<pos:position pos:line="10" pos:column="57"/></literal> <operator pos:line="10" pos:column="58">&lt;&lt;<pos:position pos:line="10" pos:column="66"/></operator> <name pos:line="10" pos:column="61">adaptationAccessCheckPending<pos:position pos:line="10" pos:column="89"/></name></expr></argument>)<pos:position pos:line="10" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="91"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">adaptationAccessCheckPending<pos:position pos:line="11" pos:column="37"/></name></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38">
        <block type="pseudo"><return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">setFinalReply<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><call><name pos:line="15" pos:column="19">virginReply<pos:position pos:line="15" pos:column="30"/></name><argument_list pos:line="15" pos:column="30">()<pos:position pos:line="15" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

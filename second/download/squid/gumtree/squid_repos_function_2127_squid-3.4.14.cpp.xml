<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2127_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name><name pos:line="2" pos:column="1">mem_hdr<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">writeAvailable<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">mem_node<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">aNode<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">int64_t<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">location<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">size_t<pos:position pos:line="2" pos:column="66"/></name></type> <name pos:line="2" pos:column="67">amount<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="75">char<pos:position pos:line="2" pos:column="79"/></name> <specifier pos:line="2" pos:column="80">const<pos:position pos:line="2" pos:column="85"/></specifier> <modifier pos:line="2" pos:column="86">*<pos:position pos:line="2" pos:column="87"/></modifier></type><name pos:line="2" pos:column="87">source<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="94"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* if we attempt to overwrite existing data or leave a gap within a node */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">location<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">==<pos:position pos:line="5" pos:column="24"/></operator> <name><name pos:line="5" pos:column="25">aNode<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">-&gt;<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="32">nodeBuffer<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">.<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">offset<pos:position pos:line="5" pos:column="49"/></name></name> <operator pos:line="5" pos:column="50">+<pos:position pos:line="5" pos:column="51"/></operator> <operator pos:line="5" pos:column="52">(<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="53">int64_t<pos:position pos:line="5" pos:column="60"/></name><operator pos:line="5" pos:column="60">)<pos:position pos:line="5" pos:column="61"/></operator><name><name pos:line="5" pos:column="61">aNode<pos:position pos:line="5" pos:column="66"/></name><operator pos:line="5" pos:column="66">-&gt;<pos:position pos:line="5" pos:column="71"/></operator><name pos:line="5" pos:column="68">nodeBuffer<pos:position pos:line="5" pos:column="78"/></name><operator pos:line="5" pos:column="78">.<pos:position pos:line="5" pos:column="79"/></operator><name pos:line="5" pos:column="79">length<pos:position pos:line="5" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="87"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* And we are not at the end of the node */</comment>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name> <argument_list pos:line="7" pos:column="12">(<argument><expr><call><name><name pos:line="7" pos:column="13">aNode<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">canAccept<pos:position pos:line="7" pos:column="29"/></name></name> <argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">location<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* these two can go I think */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name> <argument_list pos:line="10" pos:column="12">(<argument><expr><name pos:line="10" pos:column="13">location<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">-<pos:position pos:line="10" pos:column="23"/></operator> <name><name pos:line="10" pos:column="24">aNode<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">nodeBuffer<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">.<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">offset<pos:position pos:line="10" pos:column="48"/></name></name> <operator pos:line="10" pos:column="49">==<pos:position pos:line="10" pos:column="51"/></operator> <operator pos:line="10" pos:column="52">(<pos:position pos:line="10" pos:column="53"/></operator><name pos:line="10" pos:column="53">int64_t<pos:position pos:line="10" pos:column="60"/></name><operator pos:line="10" pos:column="60">)<pos:position pos:line="10" pos:column="61"/></operator><name><name pos:line="10" pos:column="61">aNode<pos:position pos:line="10" pos:column="66"/></name><operator pos:line="10" pos:column="66">-&gt;<pos:position pos:line="10" pos:column="71"/></operator><name pos:line="10" pos:column="68">nodeBuffer<pos:position pos:line="10" pos:column="78"/></name><operator pos:line="10" pos:column="78">.<pos:position pos:line="10" pos:column="79"/></operator><name pos:line="10" pos:column="79">length<pos:position pos:line="10" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="87"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">size_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">copyLen<pos:position pos:line="11" pos:column="19"/></name> <init pos:line="11" pos:column="20">= <expr><call><name pos:line="11" pos:column="22">min<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">amount<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><call><name><name pos:line="11" pos:column="34">aNode<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">space<pos:position pos:line="11" pos:column="46"/></name></name><argument_list pos:line="11" pos:column="46">()<pos:position pos:line="11" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="50"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">memcpy<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name><name pos:line="13" pos:column="12">aNode<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">nodeBuffer<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">.<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">data<pos:position pos:line="13" pos:column="34"/></name></name> <operator pos:line="13" pos:column="35">+<pos:position pos:line="13" pos:column="36"/></operator> <name><name pos:line="13" pos:column="37">aNode<pos:position pos:line="13" pos:column="42"/></name><operator pos:line="13" pos:column="42">-&gt;<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="44">nodeBuffer<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">.<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="55">length<pos:position pos:line="13" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="63">source<pos:position pos:line="13" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="71">copyLen<pos:position pos:line="13" pos:column="78"/></name></expr></argument>)<pos:position pos:line="13" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="80"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">19<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="16">9<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="19">HERE<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&lt;&lt;<pos:position pos:line="15" pos:column="32"/></operator> <name pos:line="15" pos:column="27">this<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">&lt;&lt;<pos:position pos:line="15" pos:column="40"/></operator> <literal type="string" pos:line="15" pos:column="35">" hi: "<pos:position pos:line="15" pos:column="42"/></literal> <operator pos:line="15" pos:column="43">&lt;&lt;<pos:position pos:line="15" pos:column="51"/></operator> <name pos:line="15" pos:column="46">inmem_hi<pos:position pos:line="15" pos:column="54"/></name></expr></argument>)<pos:position pos:line="15" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="56"/></expr_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">inmem_hi<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">&lt;=<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="21">location<pos:position pos:line="16" pos:column="29"/></name></expr>)<pos:position pos:line="16" pos:column="30"/></condition><then pos:line="16" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="9">inmem_hi<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">location<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">+<pos:position pos:line="17" pos:column="30"/></operator> <name pos:line="17" pos:column="31">copyLen<pos:position pos:line="17" pos:column="38"/></name></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* Adjust the ptr and len according to what was deposited in the page */</comment>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">aNode<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">nodeBuffer<pos:position pos:line="20" pos:column="22"/></name><operator pos:line="20" pos:column="22">.<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="23">length<pos:position pos:line="20" pos:column="29"/></name></name> <operator pos:line="20" pos:column="30">+=<pos:position pos:line="20" pos:column="32"/></operator> <name pos:line="20" pos:column="33">copyLen<pos:position pos:line="20" pos:column="40"/></name></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">debugs<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="number" pos:line="22" pos:column="12">19<pos:position pos:line="22" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="16">9<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="19">HERE<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">&lt;&lt;<pos:position pos:line="22" pos:column="32"/></operator> <name pos:line="22" pos:column="27">this<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">&lt;&lt;<pos:position pos:line="22" pos:column="40"/></operator> <literal type="string" pos:line="22" pos:column="35">" hi: "<pos:position pos:line="22" pos:column="42"/></literal> <operator pos:line="22" pos:column="43">&lt;&lt;<pos:position pos:line="22" pos:column="51"/></operator> <name pos:line="22" pos:column="46">inmem_hi<pos:position pos:line="22" pos:column="54"/></name></expr></argument>)<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">debugs<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="number" pos:line="23" pos:column="12">19<pos:position pos:line="23" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="16">9<pos:position pos:line="23" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="19">HERE<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">&lt;&lt;<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="27">this<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">&lt;&lt;<pos:position pos:line="23" pos:column="40"/></operator> <literal type="string" pos:line="23" pos:column="35">" hi: "<pos:position pos:line="23" pos:column="42"/></literal> <operator pos:line="23" pos:column="43">&lt;&lt;<pos:position pos:line="23" pos:column="51"/></operator> <call><name pos:line="23" pos:column="46">endOffset<pos:position pos:line="23" pos:column="55"/></name><argument_list pos:line="23" pos:column="55">()<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="59"/></expr_stmt>
    <return pos:line="24" pos:column="5">return <expr><name pos:line="24" pos:column="12">copyLen<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4173_squid-3.1.23.cpp" pos:tabs="8"><function><template pos:line="1" pos:column="1">template<parameter_list pos:line="1" pos:column="9">&lt;<parameter><type><name pos:line="1" pos:column="10">class<pos:position pos:line="1" pos:column="15"/></name></type> <name pos:line="1" pos:column="16">T<pos:position pos:line="1" pos:column="17"/></name></parameter>&gt;<pos:position pos:line="1" pos:column="21"/></parameter_list></template>
<specifier pos:line="2" pos:column="1">inline<pos:position pos:line="2" pos:column="7"/></specifier> <type><name pos:line="2" pos:column="8">int<pos:position pos:line="2" pos:column="11"/></name></type>
<name pos:line="3" pos:column="1">splaystrcasecmp<pos:position pos:line="3" pos:column="16"/></name> <parameter_list pos:line="3" pos:column="17">(<parameter><decl><type><name pos:line="3" pos:column="18">T<pos:position pos:line="3" pos:column="19"/></name><modifier pos:line="3" pos:column="19">&amp;<pos:position pos:line="3" pos:column="24"/></modifier></type><name pos:line="3" pos:column="20">l<pos:position pos:line="3" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="23">T<pos:position pos:line="3" pos:column="24"/></name><modifier pos:line="3" pos:column="24">&amp;<pos:position pos:line="3" pos:column="29"/></modifier></type><name pos:line="3" pos:column="25">r<pos:position pos:line="3" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="27"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <return pos:line="5" pos:column="5">return <expr><call><name pos:line="5" pos:column="12">strcasecmp<pos:position pos:line="5" pos:column="22"/></name> <argument_list pos:line="5" pos:column="23">(<argument><expr><operator pos:line="5" pos:column="24">(<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">char<pos:position pos:line="5" pos:column="29"/></name> <operator pos:line="5" pos:column="30">*<pos:position pos:line="5" pos:column="31"/></operator><operator pos:line="5" pos:column="31">)<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">l<pos:position pos:line="5" pos:column="33"/></name></expr></argument>,<argument><expr><operator pos:line="5" pos:column="34">(<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">char<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></operator><operator pos:line="5" pos:column="41">)<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">r<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="45"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_745_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">clientBeginRequest<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">HttpRequestMethod<pos:position pos:line="2" pos:column="43"/></name><modifier pos:line="2" pos:column="43">&amp;<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="45">method<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <specifier pos:line="2" pos:column="58">const<pos:position pos:line="2" pos:column="63"/></specifier> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">url<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="70">CSCB<pos:position pos:line="2" pos:column="74"/></name> <modifier pos:line="2" pos:column="75">*<pos:position pos:line="2" pos:column="76"/></modifier></type> <name pos:line="2" pos:column="77">streamcallback<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="3" pos:column="20">CSD<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type> <name pos:line="3" pos:column="26">streamdetach<pos:position pos:line="3" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="40">ClientStreamData<pos:position pos:line="3" pos:column="56"/></name></type> <name pos:line="3" pos:column="57">streamdata<pos:position pos:line="3" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="69">HttpHeader<pos:position pos:line="3" pos:column="79"/></name> <specifier pos:line="3" pos:column="80">const<pos:position pos:line="3" pos:column="85"/></specifier> <modifier pos:line="3" pos:column="86">*<pos:position pos:line="3" pos:column="87"/></modifier></type><name pos:line="3" pos:column="87">header<pos:position pos:line="3" pos:column="93"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="4" pos:column="20">char<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">tailbuf<pos:position pos:line="4" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="4" pos:column="35">size_t<pos:position pos:line="4" pos:column="41"/></name></type> <name pos:line="4" pos:column="42">taillen<pos:position pos:line="4" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="50"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">url_sz<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ClientHttpRequest<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">http<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><operator pos:line="7" pos:column="31">new<pos:position pos:line="7" pos:column="34"/></operator> <call><name pos:line="7" pos:column="35">ClientHttpRequest<pos:position pos:line="7" pos:column="52"/></name><argument_list pos:line="7" pos:column="52">(<argument><expr><name pos:line="7" pos:column="53">NULL<pos:position pos:line="7" pos:column="57"/></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">HttpRequest<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">request<pos:position pos:line="8" pos:column="25"/></name></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">StoreIOBuffer<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">tempBuffer<pos:position pos:line="9" pos:column="29"/></name></decl>;<pos:position pos:line="9" pos:column="30"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">http<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">start_time<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <name pos:line="10" pos:column="24">current_time<pos:position pos:line="10" pos:column="36"/></name></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>
    <comment type="block" pos:line="11" pos:column="5">/* this is only used to adjust the connection offset in client_side.c */</comment>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">http<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">-&gt;<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="11">req_sz<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="20">0<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">tempBuffer<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">.<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">length<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <name pos:line="13" pos:column="25">taillen<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">tempBuffer<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">data<pos:position pos:line="14" pos:column="20"/></name></name> <operator pos:line="14" pos:column="21">=<pos:position pos:line="14" pos:column="22"/></operator> <name pos:line="14" pos:column="23">tailbuf<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>
    <comment type="block" pos:line="15" pos:column="5">/* client stream setup */</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">clientStreamInit<pos:position pos:line="16" pos:column="21"/></name><argument_list pos:line="16" pos:column="21">(<argument><expr><operator pos:line="16" pos:column="22">&amp;<pos:position pos:line="16" pos:column="27"/></operator><name><name pos:line="16" pos:column="23">http<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">client_stream<pos:position pos:line="16" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="44">clientGetMoreData<pos:position pos:line="16" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="63">clientReplyDetach<pos:position pos:line="16" pos:column="80"/></name></expr></argument>,
                     <argument><expr><name pos:line="17" pos:column="22">clientReplyStatus<pos:position pos:line="17" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="41">new<pos:position pos:line="17" pos:column="44"/></operator> <call><name pos:line="17" pos:column="45">clientReplyContext<pos:position pos:line="17" pos:column="63"/></name><argument_list pos:line="17" pos:column="63">(<argument><expr><name pos:line="17" pos:column="64">http<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="71">streamcallback<pos:position pos:line="17" pos:column="85"/></name></expr></argument>,
                     <argument><expr><name pos:line="18" pos:column="22">streamdetach<pos:position pos:line="18" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="36">streamdata<pos:position pos:line="18" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="48">tempBuffer<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
    <comment type="block" pos:line="19" pos:column="5">/* make it visible in the 'current acctive requests list' */</comment>
    <comment type="block" pos:line="20" pos:column="5">/* Set flags */</comment>
    <comment type="block" pos:line="21" pos:column="5">/* internal requests only makes sense in an
     * accelerator today. TODO: accept flags ? */</comment>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">http<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">flags<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">.<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">accel<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <literal type="number" pos:line="23" pos:column="25">1<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
    <comment type="block" pos:line="24" pos:column="5">/* allow size for url rewriting */</comment>
    <expr_stmt><expr><name pos:line="25" pos:column="5">url_sz<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <call><name pos:line="25" pos:column="14">strlen<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">url<pos:position pos:line="25" pos:column="24"/></name></expr></argument>)<pos:position pos:line="25" pos:column="25"/></argument_list></call> <operator pos:line="25" pos:column="26">+<pos:position pos:line="25" pos:column="27"/></operator> <name><name pos:line="25" pos:column="28">Config<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">.<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="35">appendDomainLen<pos:position pos:line="25" pos:column="50"/></name></name> <operator pos:line="25" pos:column="51">+<pos:position pos:line="25" pos:column="52"/></operator> <literal type="number" pos:line="25" pos:column="53">5<pos:position pos:line="25" pos:column="54"/></literal></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">http<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">-&gt;<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="11">uri<pos:position pos:line="26" pos:column="14"/></name></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <operator pos:line="26" pos:column="17">(<pos:position pos:line="26" pos:column="18"/></operator><name pos:line="26" pos:column="18">char<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">*<pos:position pos:line="26" pos:column="24"/></operator><operator pos:line="26" pos:column="24">)<pos:position pos:line="26" pos:column="25"/></operator><call><name pos:line="26" pos:column="25">xcalloc<pos:position pos:line="26" pos:column="32"/></name><argument_list pos:line="26" pos:column="32">(<argument><expr><name pos:line="26" pos:column="33">url_sz<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="41">1<pos:position pos:line="26" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">strcpy<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name><name pos:line="27" pos:column="12">http<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">uri<pos:position pos:line="27" pos:column="21"/></name></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="23">url<pos:position pos:line="27" pos:column="26"/></name></expr></argument>)<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">request<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <call><name><name pos:line="29" pos:column="20">HttpRequest<pos:position pos:line="29" pos:column="31"/></name><operator pos:line="29" pos:column="31">::<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">CreateFromUrlAndMethod<pos:position pos:line="29" pos:column="55"/></name></name><argument_list pos:line="29" pos:column="55">(<argument><expr><name><name pos:line="29" pos:column="56">http<pos:position pos:line="29" pos:column="60"/></name><operator pos:line="29" pos:column="60">-&gt;<pos:position pos:line="29" pos:column="65"/></operator><name pos:line="29" pos:column="62">uri<pos:position pos:line="29" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="67">method<pos:position pos:line="29" pos:column="73"/></name></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></call><operator pos:line="29" pos:column="74">)<pos:position pos:line="29" pos:column="75"/></operator> <operator pos:line="29" pos:column="76">==<pos:position pos:line="29" pos:column="78"/></operator> <name pos:line="29" pos:column="79">NULL<pos:position pos:line="29" pos:column="83"/></name></expr>)<pos:position pos:line="29" pos:column="84"/></condition><then pos:line="29" pos:column="84"> <block pos:line="29" pos:column="85">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">85<pos:position pos:line="30" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="20">5<pos:position pos:line="30" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="23">"Invalid URL: "<pos:position pos:line="30" pos:column="38"/></literal> <operator pos:line="30" pos:column="39">&lt;&lt;<pos:position pos:line="30" pos:column="47"/></operator> <name><name pos:line="30" pos:column="42">http<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">-&gt;<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="48">uri<pos:position pos:line="30" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><operator pos:line="31" pos:column="16">-<pos:position pos:line="31" pos:column="17"/></operator><literal type="number" pos:line="31" pos:column="17">1<pos:position pos:line="31" pos:column="18"/></literal></expr>;<pos:position pos:line="31" pos:column="19"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/*
     * now update the headers in request with our supplied headers. urlParse
     * should return a blank header set, but we use Update to be sure of
     * correctness.
     */</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">header<pos:position pos:line="39" pos:column="15"/></name></expr>)<pos:position pos:line="39" pos:column="16"/></condition><then pos:line="39" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="40" pos:column="9">request<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">header<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">.<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">update<pos:position pos:line="40" pos:column="31"/></name></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">header<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="40">NULL<pos:position pos:line="40" pos:column="44"/></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="42" pos:column="5">http<pos:position pos:line="42" pos:column="9"/></name><operator pos:line="42" pos:column="9">-&gt;<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="11">log_uri<pos:position pos:line="42" pos:column="18"/></name></name> <operator pos:line="42" pos:column="19">=<pos:position pos:line="42" pos:column="20"/></operator> <call><name pos:line="42" pos:column="21">xstrdup<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><call><name pos:line="42" pos:column="29">urlCanonicalClean<pos:position pos:line="42" pos:column="46"/></name><argument_list pos:line="42" pos:column="46">(<argument><expr><name pos:line="42" pos:column="47">request<pos:position pos:line="42" pos:column="54"/></name></expr></argument>)<pos:position pos:line="42" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="57"/></expr_stmt>

    <comment type="block" pos:line="44" pos:column="5">/* http struct now ready */</comment>

    <comment type="block" pos:line="46" pos:column="5">/*
     * build new header list *? TODO
     */</comment>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">request<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">flags<pos:position pos:line="49" pos:column="19"/></name><operator pos:line="49" pos:column="19">.<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="20">accelerated<pos:position pos:line="49" pos:column="31"/></name></name> <operator pos:line="49" pos:column="32">=<pos:position pos:line="49" pos:column="33"/></operator> <name><name pos:line="49" pos:column="34">http<pos:position pos:line="49" pos:column="38"/></name><operator pos:line="49" pos:column="38">-&gt;<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="40">flags<pos:position pos:line="49" pos:column="45"/></name><operator pos:line="49" pos:column="45">.<pos:position pos:line="49" pos:column="46"/></operator><name pos:line="49" pos:column="46">accel<pos:position pos:line="49" pos:column="51"/></name></name></expr>;<pos:position pos:line="49" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="51" pos:column="5">request<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">-&gt;<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="14">flags<pos:position pos:line="51" pos:column="19"/></name><operator pos:line="51" pos:column="19">.<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="20">internalClient<pos:position pos:line="51" pos:column="34"/></name></name> <operator pos:line="51" pos:column="35">=<pos:position pos:line="51" pos:column="36"/></operator> <literal type="number" pos:line="51" pos:column="37">1<pos:position pos:line="51" pos:column="38"/></literal></expr>;<pos:position pos:line="51" pos:column="39"/></expr_stmt>

    <comment type="block" pos:line="53" pos:column="5">/* this is an internally created
     * request, not subject to acceleration
     * target overrides */</comment>
    <comment type="block" pos:line="56" pos:column="5">/*
     * FIXME? Do we want to detect and handle internal requests of internal
     * objects ?
     */</comment>

    <comment type="block" pos:line="61" pos:column="5">/* Internally created requests cannot have bodies today */</comment>
    <expr_stmt><expr><name><name pos:line="62" pos:column="5">request<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">content_length<pos:position pos:line="62" pos:column="28"/></name></name> <operator pos:line="62" pos:column="29">=<pos:position pos:line="62" pos:column="30"/></operator> <literal type="number" pos:line="62" pos:column="31">0<pos:position pos:line="62" pos:column="32"/></literal></expr>;<pos:position pos:line="62" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="64" pos:column="5">request<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">-&gt;<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="14">client_addr<pos:position pos:line="64" pos:column="25"/></name><operator pos:line="64" pos:column="25">.<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="26">SetNoAddr<pos:position pos:line="64" pos:column="35"/></name></name><argument_list pos:line="64" pos:column="35">()<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="38"/></expr_stmt>

<cpp:if pos:line="66" pos:column="1">#<cpp:directive pos:line="66" pos:column="2">if<pos:position pos:line="66" pos:column="4"/></cpp:directive> <expr><name pos:line="66" pos:column="5">FOLLOW_X_FORWARDED_FOR<pos:position pos:line="66" pos:column="27"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name><name pos:line="67" pos:column="5">request<pos:position pos:line="67" pos:column="12"/></name><operator pos:line="67" pos:column="12">-&gt;<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="14">indirect_client_addr<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">.<pos:position pos:line="67" pos:column="35"/></operator><name pos:line="67" pos:column="35">SetNoAddr<pos:position pos:line="67" pos:column="44"/></name></name><argument_list pos:line="67" pos:column="44">()<pos:position pos:line="67" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="47"/></expr_stmt>
<cpp:endif pos:line="68" pos:column="1">#<cpp:directive pos:line="68" pos:column="2">endif<pos:position pos:line="68" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="68" pos:column="8">/* FOLLOW_X_FORWARDED_FOR */</comment>

    <expr_stmt><expr><call><name><name pos:line="70" pos:column="5">request<pos:position pos:line="70" pos:column="12"/></name><operator pos:line="70" pos:column="12">-&gt;<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="14">my_addr<pos:position pos:line="70" pos:column="21"/></name><operator pos:line="70" pos:column="21">.<pos:position pos:line="70" pos:column="22"/></operator><name pos:line="70" pos:column="22">SetNoAddr<pos:position pos:line="70" pos:column="31"/></name></name><argument_list pos:line="70" pos:column="31">()<pos:position pos:line="70" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="34"/></expr_stmt>	<comment type="block" pos:line="70" pos:column="41">/* undefined for internal requests */</comment>

    <expr_stmt><expr><call><name><name pos:line="72" pos:column="5">request<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">-&gt;<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="14">my_addr<pos:position pos:line="72" pos:column="21"/></name><operator pos:line="72" pos:column="21">.<pos:position pos:line="72" pos:column="22"/></operator><name pos:line="72" pos:column="22">SetPort<pos:position pos:line="72" pos:column="29"/></name></name><argument_list pos:line="72" pos:column="29">(<argument><expr><literal type="number" pos:line="72" pos:column="30">0<pos:position pos:line="72" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="72" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="33"/></expr_stmt>

    <comment type="block" pos:line="74" pos:column="5">/* Our version is HTTP/1.1 */</comment>
    <decl_stmt><decl><type><name pos:line="75" pos:column="5">HttpVersion<pos:position pos:line="75" pos:column="16"/></name></type> <name pos:line="75" pos:column="17">http_ver<pos:position pos:line="75" pos:column="25"/></name><argument_list pos:line="75" pos:column="25">(<argument><expr><literal type="number" pos:line="75" pos:column="26">1<pos:position pos:line="75" pos:column="27"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="75" pos:column="28">1<pos:position pos:line="75" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="30"/></argument_list></decl>;<pos:position pos:line="75" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="76" pos:column="5">request<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">-&gt;<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="14">http_ver<pos:position pos:line="76" pos:column="22"/></name></name> <operator pos:line="76" pos:column="23">=<pos:position pos:line="76" pos:column="24"/></operator> <name pos:line="76" pos:column="25">http_ver<pos:position pos:line="76" pos:column="33"/></name></expr>;<pos:position pos:line="76" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="78" pos:column="5">http<pos:position pos:line="78" pos:column="9"/></name><operator pos:line="78" pos:column="9">-&gt;<pos:position pos:line="78" pos:column="14"/></operator><name pos:line="78" pos:column="11">request<pos:position pos:line="78" pos:column="18"/></name></name> <operator pos:line="78" pos:column="19">=<pos:position pos:line="78" pos:column="20"/></operator> <call><name pos:line="78" pos:column="21">HTTPMSGLOCK<pos:position pos:line="78" pos:column="32"/></name><argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">request<pos:position pos:line="78" pos:column="40"/></name></expr></argument>)<pos:position pos:line="78" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="80" pos:column="5">/* optional - skip the access check ? */</comment>
    <expr_stmt><expr><name><name pos:line="81" pos:column="5">http<pos:position pos:line="81" pos:column="9"/></name><operator pos:line="81" pos:column="9">-&gt;<pos:position pos:line="81" pos:column="14"/></operator><name pos:line="81" pos:column="11">calloutContext<pos:position pos:line="81" pos:column="25"/></name></name> <operator pos:line="81" pos:column="26">=<pos:position pos:line="81" pos:column="27"/></operator> <operator pos:line="81" pos:column="28">new<pos:position pos:line="81" pos:column="31"/></operator> <call><name pos:line="81" pos:column="32">ClientRequestContext<pos:position pos:line="81" pos:column="52"/></name><argument_list pos:line="81" pos:column="52">(<argument><expr><name pos:line="81" pos:column="53">http<pos:position pos:line="81" pos:column="57"/></name></expr></argument>)<pos:position pos:line="81" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="83" pos:column="5">http<pos:position pos:line="83" pos:column="9"/></name><operator pos:line="83" pos:column="9">-&gt;<pos:position pos:line="83" pos:column="14"/></operator><name pos:line="83" pos:column="11">calloutContext<pos:position pos:line="83" pos:column="25"/></name><operator pos:line="83" pos:column="25">-&gt;<pos:position pos:line="83" pos:column="30"/></operator><name pos:line="83" pos:column="27">http_access_done<pos:position pos:line="83" pos:column="43"/></name></name> <operator pos:line="83" pos:column="44">=<pos:position pos:line="83" pos:column="45"/></operator> <literal type="boolean" pos:line="83" pos:column="46">false<pos:position pos:line="83" pos:column="51"/></literal></expr>;<pos:position pos:line="83" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="85" pos:column="5">http<pos:position pos:line="85" pos:column="9"/></name><operator pos:line="85" pos:column="9">-&gt;<pos:position pos:line="85" pos:column="14"/></operator><name pos:line="85" pos:column="11">calloutContext<pos:position pos:line="85" pos:column="25"/></name><operator pos:line="85" pos:column="25">-&gt;<pos:position pos:line="85" pos:column="30"/></operator><name pos:line="85" pos:column="27">redirect_done<pos:position pos:line="85" pos:column="40"/></name></name> <operator pos:line="85" pos:column="41">=<pos:position pos:line="85" pos:column="42"/></operator> <literal type="boolean" pos:line="85" pos:column="43">true<pos:position pos:line="85" pos:column="47"/></literal></expr>;<pos:position pos:line="85" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="87" pos:column="5">http<pos:position pos:line="87" pos:column="9"/></name><operator pos:line="87" pos:column="9">-&gt;<pos:position pos:line="87" pos:column="14"/></operator><name pos:line="87" pos:column="11">calloutContext<pos:position pos:line="87" pos:column="25"/></name><operator pos:line="87" pos:column="25">-&gt;<pos:position pos:line="87" pos:column="30"/></operator><name pos:line="87" pos:column="27">no_cache_done<pos:position pos:line="87" pos:column="40"/></name></name> <operator pos:line="87" pos:column="41">=<pos:position pos:line="87" pos:column="42"/></operator> <literal type="boolean" pos:line="87" pos:column="43">true<pos:position pos:line="87" pos:column="47"/></literal></expr>;<pos:position pos:line="87" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="89" pos:column="5">http<pos:position pos:line="89" pos:column="9"/></name><operator pos:line="89" pos:column="9">-&gt;<pos:position pos:line="89" pos:column="14"/></operator><name pos:line="89" pos:column="11">doCallouts<pos:position pos:line="89" pos:column="21"/></name></name><argument_list pos:line="89" pos:column="21">()<pos:position pos:line="89" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="24"/></expr_stmt>

    <return pos:line="91" pos:column="5">return <expr><literal type="number" pos:line="91" pos:column="12">0<pos:position pos:line="91" pos:column="13"/></literal></expr>;<pos:position pos:line="91" pos:column="14"/></return>
}<pos:position pos:line="92" pos:column="2"/></block></function></unit>

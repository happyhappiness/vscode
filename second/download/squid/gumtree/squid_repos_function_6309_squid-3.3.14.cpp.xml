<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6309_squid-3.3.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">AsyncCall<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">Pointer<pos:position pos:line="1" pos:column="19"/></name></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Inquirer<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">DequeueRequest<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">unsigned<pos:position pos:line="2" pos:column="39"/></name> <name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">requestId<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">54<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <literal type="string" pos:line="4" pos:column="27">" requestId "<pos:position pos:line="4" pos:column="40"/></literal> <operator pos:line="4" pos:column="41">&lt;&lt;<pos:position pos:line="4" pos:column="49"/></operator> <name pos:line="4" pos:column="44">requestId<pos:position pos:line="4" pos:column="53"/></name></expr></argument>)<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">requestId<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">!=<pos:position pos:line="5" pos:column="22"/></operator> <literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">AsyncCall<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">::<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">Pointer<pos:position pos:line="6" pos:column="23"/></name></name></type> <name pos:line="6" pos:column="24">call<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">RequestsMap<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">::<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">iterator<pos:position pos:line="7" pos:column="26"/></name></name></type> <name pos:line="7" pos:column="27">request<pos:position pos:line="7" pos:column="34"/></name> <init pos:line="7" pos:column="35">= <expr><call><name><name pos:line="7" pos:column="37">TheRequestsMap<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">.<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="52">find<pos:position pos:line="7" pos:column="56"/></name></name><argument_list pos:line="7" pos:column="56">(<argument><expr><name pos:line="7" pos:column="57">requestId<pos:position pos:line="7" pos:column="66"/></name></expr></argument>)<pos:position pos:line="7" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="68"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">request<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">!=<pos:position pos:line="8" pos:column="19"/></operator> <call><name><name pos:line="8" pos:column="20">TheRequestsMap<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">.<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="35">end<pos:position pos:line="8" pos:column="38"/></name></name><argument_list pos:line="8" pos:column="38">()<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="41"/></condition><then pos:line="8" pos:column="41"> <block pos:line="8" pos:column="42">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">call<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <name><name pos:line="9" pos:column="16">request<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">-&gt;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="25">second<pos:position pos:line="9" pos:column="31"/></name></name></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">Must<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><name pos:line="10" pos:column="14">call<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">!=<pos:position pos:line="10" pos:column="21"/></operator> <name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">TheRequestsMap<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">.<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">erase<pos:position pos:line="11" pos:column="29"/></name></name><argument_list pos:line="11" pos:column="29">(<argument><expr><name pos:line="11" pos:column="30">request<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">call<pos:position pos:line="13" pos:column="16"/></name></expr>;<pos:position pos:line="13" pos:column="17"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

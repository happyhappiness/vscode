<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1393_squid-3.4.14.cpp" pos:tabs="8"><function type="operator"><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name><name pos:line="2" pos:column="1">DelayUser<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">Id<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">operator <name pos:line="2" pos:column="25">new<pos:position pos:line="2" pos:column="28"/></name></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">size_t<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">size<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">DelayPools<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">MemoryUsed<pos:position pos:line="4" pos:column="27"/></name></name> <operator pos:line="4" pos:column="28">+=<pos:position pos:line="4" pos:column="30"/></operator> <sizeof pos:line="4" pos:column="31">sizeof <argument_list pos:line="4" pos:column="38">(<argument><expr><name pos:line="4" pos:column="39">Id<pos:position pos:line="4" pos:column="41"/></name></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></sizeof></expr>;<pos:position pos:line="4" pos:column="43"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><call><name><operator pos:line="5" pos:column="12">::<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">operator <name pos:line="5" pos:column="23">new<pos:position pos:line="5" pos:column="26"/></name></name></name> <argument_list pos:line="5" pos:column="27">(<argument><expr><name pos:line="5" pos:column="28">size<pos:position pos:line="5" pos:column="32"/></name></expr></argument>)<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5074_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ident<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">Start<pos:position pos:line="2" pos:column="13"/></name></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name><name pos:line="2" pos:column="20">Comm<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">ConnectionPointer<pos:position pos:line="2" pos:column="43"/></name></name> <modifier pos:line="2" pos:column="44">&amp;<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="45">conn<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">IDCB<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type> <name pos:line="2" pos:column="58">callback<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="68">void<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="74">data<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">IdentStateData<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">state<pos:position pos:line="4" pos:column="26"/></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">key1<pos:position pos:line="5" pos:column="14"/></name><index pos:line="5" pos:column="14">[<expr><name pos:line="5" pos:column="15">IDENT_KEY_SZ<pos:position pos:line="5" pos:column="27"/></name></expr>]<pos:position pos:line="5" pos:column="28"/></index></name></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">key2<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">IDENT_KEY_SZ<pos:position pos:line="6" pos:column="27"/></name></expr>]<pos:position pos:line="6" pos:column="28"/></index></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">key<pos:position pos:line="7" pos:column="13"/></name><index pos:line="7" pos:column="13">[<expr><name pos:line="7" pos:column="14">IDENT_KEY_SZ<pos:position pos:line="7" pos:column="26"/></name></expr>]<pos:position pos:line="7" pos:column="27"/></index></name></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">conn<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">local<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">.<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="17">toUrl<pos:position pos:line="9" pos:column="22"/></name></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">key1<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="29">IDENT_KEY_SZ<pos:position pos:line="9" pos:column="41"/></name></expr></argument>)<pos:position pos:line="9" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">conn<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">remote<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">.<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">toUrl<pos:position pos:line="10" pos:column="23"/></name></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">key2<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="30">IDENT_KEY_SZ<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">snprintf<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">key<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="19">IDENT_KEY_SZ<pos:position pos:line="11" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="33">"%s,%s"<pos:position pos:line="11" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="42">key1<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">key2<pos:position pos:line="11" pos:column="52"/></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="54"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">ident_hash<pos:position pos:line="13" pos:column="20"/></name></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">Init<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">()<pos:position pos:line="14" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="16"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">state<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <operator pos:line="16" pos:column="18">(<pos:position pos:line="16" pos:column="19"/></operator><name pos:line="16" pos:column="19">IdentStateData<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">*<pos:position pos:line="16" pos:column="35"/></operator><operator pos:line="16" pos:column="35">)<pos:position pos:line="16" pos:column="36"/></operator><call><name pos:line="16" pos:column="36">hash_lookup<pos:position pos:line="16" pos:column="47"/></name><argument_list pos:line="16" pos:column="47">(<argument><expr><name pos:line="16" pos:column="48">ident_hash<pos:position pos:line="16" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="60">key<pos:position pos:line="16" pos:column="63"/></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call><operator pos:line="16" pos:column="64">)<pos:position pos:line="16" pos:column="65"/></operator> <operator pos:line="16" pos:column="66">!=<pos:position pos:line="16" pos:column="68"/></operator> <name pos:line="16" pos:column="69">NULL<pos:position pos:line="16" pos:column="73"/></name></expr>)<pos:position pos:line="16" pos:column="74"/></condition><then pos:line="16" pos:column="74"> <block pos:line="16" pos:column="75">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">ClientAdd<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">state<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="26">callback<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">data<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
        <return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">state<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <operator pos:line="21" pos:column="13">new<pos:position pos:line="21" pos:column="16"/></operator> <name pos:line="21" pos:column="17">IdentStateData<pos:position pos:line="21" pos:column="31"/></name></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">state<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">hash<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">.<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">key<pos:position pos:line="22" pos:column="20"/></name></name> <operator pos:line="22" pos:column="21">=<pos:position pos:line="22" pos:column="22"/></operator> <call><name pos:line="22" pos:column="23">xstrdup<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name pos:line="22" pos:column="31">key<pos:position pos:line="22" pos:column="34"/></name></expr></argument>)<pos:position pos:line="22" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>

    <comment type="line" pos:line="24" pos:column="5">// copy the conn details. We dont want the original FD to be re-used by IDENT.</comment>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">state<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">conn<pos:position pos:line="25" pos:column="16"/></name></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <call><name><name pos:line="25" pos:column="19">conn<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">copyDetails<pos:position pos:line="25" pos:column="36"/></name></name><argument_list pos:line="25" pos:column="36">()<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt>
    <comment type="line" pos:line="26" pos:column="5">// NP: use random port for secure outbound to IDENT_PORT</comment>
    <expr_stmt><expr><call><name><name pos:line="27" pos:column="5">state<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">conn<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">local<pos:position pos:line="27" pos:column="23"/></name><operator pos:line="27" pos:column="23">.<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="24">port<pos:position pos:line="27" pos:column="28"/></name></name><argument_list pos:line="27" pos:column="28">(<argument><expr><literal type="number" pos:line="27" pos:column="29">0<pos:position pos:line="27" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="28" pos:column="5">state<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">conn<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">remote<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">.<pos:position pos:line="28" pos:column="25"/></operator><name pos:line="28" pos:column="25">port<pos:position pos:line="28" pos:column="29"/></name></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">IDENT_PORT<pos:position pos:line="28" pos:column="40"/></name></expr></argument>)<pos:position pos:line="28" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>

    <comment type="line" pos:line="30" pos:column="5">// build our query from the original connection details</comment>
    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">state<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">queryMsg<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">.<pos:position pos:line="31" pos:column="21"/></operator><name pos:line="31" pos:column="21">init<pos:position pos:line="31" pos:column="25"/></name></name><argument_list pos:line="31" pos:column="25">()<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">state<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">queryMsg<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">.<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">Printf<pos:position pos:line="32" pos:column="27"/></name></name><argument_list pos:line="32" pos:column="27">(<argument><expr><literal type="string" pos:line="32" pos:column="28">"%d, %d\r\n"<pos:position pos:line="32" pos:column="40"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="32" pos:column="42">conn<pos:position pos:line="32" pos:column="46"/></name><operator pos:line="32" pos:column="46">-&gt;<pos:position pos:line="32" pos:column="51"/></operator><name pos:line="32" pos:column="48">remote<pos:position pos:line="32" pos:column="54"/></name><operator pos:line="32" pos:column="54">.<pos:position pos:line="32" pos:column="55"/></operator><name pos:line="32" pos:column="55">port<pos:position pos:line="32" pos:column="59"/></name></name><argument_list pos:line="32" pos:column="59">()<pos:position pos:line="32" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="32" pos:column="63">conn<pos:position pos:line="32" pos:column="67"/></name><operator pos:line="32" pos:column="67">-&gt;<pos:position pos:line="32" pos:column="72"/></operator><name pos:line="32" pos:column="69">local<pos:position pos:line="32" pos:column="74"/></name><operator pos:line="32" pos:column="74">.<pos:position pos:line="32" pos:column="75"/></operator><name pos:line="32" pos:column="75">port<pos:position pos:line="32" pos:column="79"/></name></name><argument_list pos:line="32" pos:column="79">()<pos:position pos:line="32" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="83"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ClientAdd<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><name pos:line="34" pos:column="15">state<pos:position pos:line="34" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="22">callback<pos:position pos:line="34" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="32">data<pos:position pos:line="34" pos:column="36"/></name></expr></argument>)<pos:position pos:line="34" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">hash_join<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">ident_hash<pos:position pos:line="35" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="27">&amp;<pos:position pos:line="35" pos:column="32"/></operator><name><name pos:line="35" pos:column="28">state<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">-&gt;<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="35">hash<pos:position pos:line="35" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="37" pos:column="5">AsyncCall<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">::<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="16">Pointer<pos:position pos:line="37" pos:column="23"/></name></name></type> <name pos:line="37" pos:column="24">call<pos:position pos:line="37" pos:column="28"/></name> <init pos:line="37" pos:column="29">= <expr><call><name pos:line="37" pos:column="31">commCbCall<pos:position pos:line="37" pos:column="41"/></name><argument_list pos:line="37" pos:column="41">(<argument><expr><literal type="number" pos:line="37" pos:column="42">30<pos:position pos:line="37" pos:column="44"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="37" pos:column="45">3<pos:position pos:line="37" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="48">"Ident::ConnectDone"<pos:position pos:line="37" pos:column="68"/></literal></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="70">CommConnectCbPtrFun<pos:position pos:line="37" pos:column="89"/></name><argument_list pos:line="37" pos:column="89">(<argument><expr><name><name pos:line="37" pos:column="90">Ident<pos:position pos:line="37" pos:column="95"/></name><operator pos:line="37" pos:column="95">::<pos:position pos:line="37" pos:column="97"/></operator><name pos:line="37" pos:column="97">ConnectDone<pos:position pos:line="37" pos:column="108"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="110">state<pos:position pos:line="37" pos:column="115"/></name></expr></argument>)<pos:position pos:line="37" pos:column="116"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="117"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="118"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="38" pos:column="5">AsyncJob<pos:position pos:line="38" pos:column="13"/></name><operator pos:line="38" pos:column="13">::<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">Start<pos:position pos:line="38" pos:column="20"/></name></name><argument_list pos:line="38" pos:column="20">(<argument><expr><operator pos:line="38" pos:column="21">new<pos:position pos:line="38" pos:column="24"/></operator> <call><name><name pos:line="38" pos:column="25">Comm<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">::<pos:position pos:line="38" pos:column="31"/></operator><name pos:line="38" pos:column="31">ConnOpener<pos:position pos:line="38" pos:column="41"/></name></name><argument_list pos:line="38" pos:column="41">(<argument><expr><name><name pos:line="38" pos:column="42">state<pos:position pos:line="38" pos:column="47"/></name><operator pos:line="38" pos:column="47">-&gt;<pos:position pos:line="38" pos:column="52"/></operator><name pos:line="38" pos:column="49">conn<pos:position pos:line="38" pos:column="53"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="55">call<pos:position pos:line="38" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="61">Ident<pos:position pos:line="38" pos:column="66"/></name><operator pos:line="38" pos:column="66">::<pos:position pos:line="38" pos:column="68"/></operator><name pos:line="38" pos:column="68">TheConfig<pos:position pos:line="38" pos:column="77"/></name><operator pos:line="38" pos:column="77">.<pos:position pos:line="38" pos:column="78"/></operator><name pos:line="38" pos:column="78">timeout<pos:position pos:line="38" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="88"/></expr_stmt>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

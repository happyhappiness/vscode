<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4620_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CossSwapDir<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">parse<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">anIndex<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">aPath<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">i<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">int<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">size<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">off_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">max_offset<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">i<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">GetInteger<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">()<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">size<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <name pos:line="9" pos:column="12">i<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">&lt;&lt;<pos:position pos:line="9" pos:column="22"/></operator> <literal type="number" pos:line="9" pos:column="17">10<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>		<comment type="block" pos:line="9" pos:column="33">/* Mbytes to Kbytes */</comment>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">size<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&lt;=<pos:position pos:line="11" pos:column="19"/></operator> <literal type="number" pos:line="11" pos:column="17">0<pos:position pos:line="11" pos:column="18"/></literal></expr>)<pos:position pos:line="11" pos:column="19"/></condition><then pos:line="11" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">fatal<pos:position pos:line="12" pos:column="14"/></name><argument_list pos:line="12" pos:column="14">(<argument><expr><literal type="string" pos:line="12" pos:column="15">"storeCossDirParse: invalid size value"<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">index<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <name pos:line="14" pos:column="13">anIndex<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="16" pos:column="5">path<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">xstrdup<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name pos:line="16" pos:column="20">aPath<pos:position pos:line="16" pos:column="25"/></name></expr></argument>)<pos:position pos:line="16" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">max_size<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">size<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">parseOptions<pos:position pos:line="20" pos:column="17"/></name><argument_list pos:line="20" pos:column="17">(<argument><expr><literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">NULL<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">==<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">io<pos:position pos:line="22" pos:column="19"/></name></expr>)<pos:position pos:line="22" pos:column="20"/></condition><then pos:line="22" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="9">changeIO<pos:position pos:line="23" pos:column="17"/></name><argument_list pos:line="23" pos:column="17">(<argument><expr><call><name><name pos:line="23" pos:column="18">DiskIOModule<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">::<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">FindDefault<pos:position pos:line="23" pos:column="43"/></name></name><argument_list pos:line="23" pos:column="43">()<pos:position pos:line="23" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* Enforce maxobjsize being set to something */</comment>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">max_objsize<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">==<pos:position pos:line="26" pos:column="23"/></operator> <operator pos:line="26" pos:column="24">-<pos:position pos:line="26" pos:column="25"/></operator><literal type="number" pos:line="26" pos:column="25">1<pos:position pos:line="26" pos:column="26"/></literal></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="9">fatal<pos:position pos:line="27" pos:column="14"/></name><argument_list pos:line="27" pos:column="14">(<argument><expr><literal type="string" pos:line="27" pos:column="15">"COSS requires max-size to be set to something other than -1!\n"<pos:position pos:line="27" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="81"/></expr_stmt></block></then></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">max_objsize<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">&gt;<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="23">COSS_MEMBUF_SZ<pos:position pos:line="29" pos:column="37"/></name></expr>)<pos:position pos:line="29" pos:column="38"/></condition><then pos:line="29" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">fatalf<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="string" pos:line="30" pos:column="16">"COSS max-size option must be less than COSS_MEMBUF_SZ (%d)\n"<pos:position pos:line="30" pos:column="78"/></literal></expr></argument>,
               <argument><expr><name pos:line="31" pos:column="16">COSS_MEMBUF_SZ<pos:position pos:line="31" pos:column="30"/></name></expr></argument>)<pos:position pos:line="31" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="33" pos:column="5">/*
     * check that we won't overflow sfileno later.  0xFFFFFF is the
     * largest possible sfileno, assuming sfileno is a 25-bit
     * signed integer, as defined in structs.h.
     */</comment>
    <expr_stmt><expr><name pos:line="38" pos:column="5">max_offset<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <operator pos:line="38" pos:column="18">(<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">off_t<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">)<pos:position pos:line="38" pos:column="25"/></operator> <literal type="number" pos:line="38" pos:column="26">0xFFFFFF<pos:position pos:line="38" pos:column="34"/></literal> <operator pos:line="38" pos:column="35">&lt;&lt;<pos:position pos:line="38" pos:column="43"/></operator> <name pos:line="38" pos:column="38">blksz_bits<pos:position pos:line="38" pos:column="48"/></name></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">off_t<pos:position pos:line="40" pos:column="15"/></name><operator pos:line="40" pos:column="15">)<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="16">max_size<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">&gt;<pos:position pos:line="40" pos:column="29"/></operator> <operator pos:line="40" pos:column="27">(<pos:position pos:line="40" pos:column="28"/></operator><name pos:line="40" pos:column="28">max_offset<pos:position pos:line="40" pos:column="38"/></name><operator pos:line="40" pos:column="38">&gt;&gt;<pos:position pos:line="40" pos:column="43"/></operator><literal type="number" pos:line="40" pos:column="40">10<pos:position pos:line="40" pos:column="42"/></literal><operator pos:line="40" pos:column="42">)<pos:position pos:line="40" pos:column="43"/></operator></expr>)<pos:position pos:line="40" pos:column="44"/></condition><then pos:line="40" pos:column="44"> <block pos:line="40" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">debugs<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="number" pos:line="41" pos:column="16">47<pos:position pos:line="41" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="20">0<pos:position pos:line="41" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="23">"COSS block-size = "<pos:position pos:line="41" pos:column="43"/></literal> <operator pos:line="41" pos:column="44">&lt;&lt;<pos:position pos:line="41" pos:column="52"/></operator> <operator pos:line="41" pos:column="47">(<pos:position pos:line="41" pos:column="48"/></operator><literal type="number" pos:line="41" pos:column="48">1<pos:position pos:line="41" pos:column="49"/></literal><operator pos:line="41" pos:column="49">&lt;&lt;<pos:position pos:line="41" pos:column="57"/></operator><name pos:line="41" pos:column="51">blksz_bits<pos:position pos:line="41" pos:column="61"/></name><operator pos:line="41" pos:column="61">)<pos:position pos:line="41" pos:column="62"/></operator> <operator pos:line="41" pos:column="63">&lt;&lt;<pos:position pos:line="41" pos:column="71"/></operator> <literal type="string" pos:line="41" pos:column="66">" bytes"<pos:position pos:line="41" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">debugs<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="number" pos:line="42" pos:column="16">47<pos:position pos:line="42" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="42" pos:column="19">0<pos:position pos:line="42" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="22">"COSS largest file offset = "<pos:position pos:line="42" pos:column="51"/></literal> <operator pos:line="42" pos:column="52">&lt;&lt;<pos:position pos:line="42" pos:column="60"/></operator> <operator pos:line="42" pos:column="55">(<pos:position pos:line="42" pos:column="56"/></operator><name pos:line="42" pos:column="56">max_offset<pos:position pos:line="42" pos:column="66"/></name> <operator pos:line="42" pos:column="67">&gt;&gt;<pos:position pos:line="42" pos:column="72"/></operator> <literal type="number" pos:line="42" pos:column="70">10<pos:position pos:line="42" pos:column="72"/></literal><operator pos:line="42" pos:column="72">)<pos:position pos:line="42" pos:column="73"/></operator> <operator pos:line="42" pos:column="74">&lt;&lt;<pos:position pos:line="42" pos:column="82"/></operator> <literal type="string" pos:line="42" pos:column="77">" KB"<pos:position pos:line="42" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">debugs<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><literal type="number" pos:line="43" pos:column="16">47<pos:position pos:line="43" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="20">0<pos:position pos:line="43" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="23">"COSS cache_dir size = "<pos:position pos:line="43" pos:column="47"/></literal> <operator pos:line="43" pos:column="48">&lt;&lt;<pos:position pos:line="43" pos:column="56"/></operator> <name pos:line="43" pos:column="51">max_size<pos:position pos:line="43" pos:column="59"/></name> <operator pos:line="43" pos:column="60">&lt;&lt;<pos:position pos:line="43" pos:column="68"/></operator> <literal type="string" pos:line="43" pos:column="63">" KB"<pos:position pos:line="43" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">fatal<pos:position pos:line="44" pos:column="14"/></name><argument_list pos:line="44" pos:column="14">(<argument><expr><literal type="string" pos:line="44" pos:column="15">"COSS cache_dir size exceeds largest offset\n"<pos:position pos:line="44" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="63"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

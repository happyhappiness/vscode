<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2057_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">mem_hdr<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">dump<pos:position pos:line="2" pos:column="14"/></name></name><parameter_list pos:line="2" pos:column="14">()<pos:position pos:line="2" pos:column="16"/></parameter_list> <specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">20<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">1<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"mem_hdr: "<pos:position pos:line="4" pos:column="30"/></literal> <operator pos:line="4" pos:column="31">&lt;&lt;<pos:position pos:line="4" pos:column="39"/></operator> <operator pos:line="4" pos:column="34">(<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">void<pos:position pos:line="4" pos:column="39"/></name> <operator pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></operator><operator pos:line="4" pos:column="41">)<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">this<pos:position pos:line="4" pos:column="46"/></name> <operator pos:line="4" pos:column="47">&lt;&lt;<pos:position pos:line="4" pos:column="55"/></operator> <literal type="string" pos:line="4" pos:column="50">" nodes.start() "<pos:position pos:line="4" pos:column="67"/></literal> <operator pos:line="4" pos:column="68">&lt;&lt;<pos:position pos:line="4" pos:column="76"/></operator> <call><name><name pos:line="4" pos:column="71">nodes<pos:position pos:line="4" pos:column="76"/></name><operator pos:line="4" pos:column="76">.<pos:position pos:line="4" pos:column="77"/></operator><name pos:line="4" pos:column="77">start<pos:position pos:line="4" pos:column="82"/></name></name><argument_list pos:line="4" pos:column="82">()<pos:position pos:line="4" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="86"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">20<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">1<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"mem_hdr: "<pos:position pos:line="5" pos:column="30"/></literal> <operator pos:line="5" pos:column="31">&lt;&lt;<pos:position pos:line="5" pos:column="39"/></operator> <operator pos:line="5" pos:column="34">(<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">void<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">*<pos:position pos:line="5" pos:column="41"/></operator><operator pos:line="5" pos:column="41">)<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">this<pos:position pos:line="5" pos:column="46"/></name> <operator pos:line="5" pos:column="47">&lt;&lt;<pos:position pos:line="5" pos:column="55"/></operator> <literal type="string" pos:line="5" pos:column="50">" nodes.finish() "<pos:position pos:line="5" pos:column="68"/></literal> <operator pos:line="5" pos:column="69">&lt;&lt;<pos:position pos:line="5" pos:column="77"/></operator> <call><name><name pos:line="5" pos:column="72">nodes<pos:position pos:line="5" pos:column="77"/></name><operator pos:line="5" pos:column="77">.<pos:position pos:line="5" pos:column="78"/></operator><name pos:line="5" pos:column="78">finish<pos:position pos:line="5" pos:column="84"/></name></name><argument_list pos:line="5" pos:column="84">()<pos:position pos:line="5" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="88"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

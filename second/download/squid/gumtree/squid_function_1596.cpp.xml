<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1596.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">pid_t<pos:position pos:line="1" pos:column="6"/></name></type>
<name pos:line="2" pos:column="1">readPidFile<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">void<pos:position pos:line="2" pos:column="17"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="18"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">FILE<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">pid_fp<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><name pos:line="4" pos:column="20">NULL<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">f<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name><name pos:line="5" pos:column="21">Config<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">.<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">pidFilename<pos:position pos:line="5" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">chroot_f<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">pid_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">pid<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><operator pos:line="7" pos:column="17">-<pos:position pos:line="7" pos:column="18"/></operator><literal type="number" pos:line="7" pos:column="18">1<pos:position pos:line="7" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">f<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">==<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name> <operator pos:line="10" pos:column="19">||<pos:position pos:line="10" pos:column="21"/></operator> <operator pos:line="10" pos:column="22">!<pos:position pos:line="10" pos:column="23"/></operator><call><name pos:line="10" pos:column="23">strcmp<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name><name pos:line="10" pos:column="30">Config<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">.<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">pidFilename<pos:position pos:line="10" pos:column="48"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="50">"none"<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="58"/></condition><then pos:line="10" pos:column="58"> <block pos:line="10" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">fprintf<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">stderr<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">APP_SHORTNAME<pos:position pos:line="11" pos:column="38"/></name> <literal type="string" pos:line="11" pos:column="39">": ERROR: No pid file name defined\n"<pos:position pos:line="11" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">exit<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><literal type="number" pos:line="12" pos:column="14">1<pos:position pos:line="12" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">Config<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">.<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="16">chroot_dir<pos:position pos:line="15" pos:column="26"/></name></name> <operator pos:line="15" pos:column="27">&amp;&amp;<pos:position pos:line="15" pos:column="37"/></operator> <call><name pos:line="15" pos:column="30">geteuid<pos:position pos:line="15" pos:column="37"/></name><argument_list pos:line="15" pos:column="37">()<pos:position pos:line="15" pos:column="39"/></argument_list></call> <operator pos:line="15" pos:column="40">==<pos:position pos:line="15" pos:column="42"/></operator> <literal type="number" pos:line="15" pos:column="43">0<pos:position pos:line="15" pos:column="44"/></literal></expr>)<pos:position pos:line="15" pos:column="45"/></condition><then pos:line="15" pos:column="45"> <block pos:line="15" pos:column="46">{
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">int<pos:position pos:line="16" pos:column="12"/></name></type> <name pos:line="16" pos:column="13">len<pos:position pos:line="16" pos:column="16"/></name> <init pos:line="16" pos:column="17">= <expr><call><name pos:line="16" pos:column="19">strlen<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name><name pos:line="16" pos:column="26">Config<pos:position pos:line="16" pos:column="32"/></name><operator pos:line="16" pos:column="32">.<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="33">chroot_dir<pos:position pos:line="16" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call> <operator pos:line="16" pos:column="45">+<pos:position pos:line="16" pos:column="46"/></operator> <literal type="number" pos:line="16" pos:column="47">1<pos:position pos:line="16" pos:column="48"/></literal> <operator pos:line="16" pos:column="49">+<pos:position pos:line="16" pos:column="50"/></operator> <call><name pos:line="16" pos:column="51">strlen<pos:position pos:line="16" pos:column="57"/></name><argument_list pos:line="16" pos:column="57">(<argument><expr><name pos:line="16" pos:column="58">f<pos:position pos:line="16" pos:column="59"/></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call> <operator pos:line="16" pos:column="61">+<pos:position pos:line="16" pos:column="62"/></operator> <literal type="number" pos:line="16" pos:column="63">1<pos:position pos:line="16" pos:column="64"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="65"/></decl_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">chroot_f<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <operator pos:line="17" pos:column="20">(<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">char<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></operator><operator pos:line="17" pos:column="27">)<pos:position pos:line="17" pos:column="28"/></operator><call><name pos:line="17" pos:column="28">xmalloc<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">(<argument><expr><call><name pos:line="17" pos:column="36">strlen<pos:position pos:line="17" pos:column="42"/></name><argument_list pos:line="17" pos:column="42">(<argument><expr><name><name pos:line="17" pos:column="43">Config<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">.<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="50">chroot_dir<pos:position pos:line="17" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call> <operator pos:line="17" pos:column="62">+<pos:position pos:line="17" pos:column="63"/></operator> <literal type="number" pos:line="17" pos:column="64">1<pos:position pos:line="17" pos:column="65"/></literal> <operator pos:line="17" pos:column="66">+<pos:position pos:line="17" pos:column="67"/></operator> <call><name pos:line="17" pos:column="68">strlen<pos:position pos:line="17" pos:column="74"/></name><argument_list pos:line="17" pos:column="74">(<argument><expr><name pos:line="17" pos:column="75">f<pos:position pos:line="17" pos:column="76"/></name></expr></argument>)<pos:position pos:line="17" pos:column="77"/></argument_list></call> <operator pos:line="17" pos:column="78">+<pos:position pos:line="17" pos:column="79"/></operator> <literal type="number" pos:line="17" pos:column="80">1<pos:position pos:line="17" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="83"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">snprintf<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">chroot_f<pos:position pos:line="18" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="28">len<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="33">"%s/%s"<pos:position pos:line="18" pos:column="40"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="42">Config<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">.<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="49">chroot_dir<pos:position pos:line="18" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="61">f<pos:position pos:line="18" pos:column="62"/></name></expr></argument>)<pos:position pos:line="18" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">f<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <name pos:line="19" pos:column="13">chroot_f<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="22" pos:column="5">pid_fp<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <call><name pos:line="22" pos:column="14">fopen<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><name pos:line="22" pos:column="20">f<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"r"<pos:position pos:line="22" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">pid_fp<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">!=<pos:position pos:line="24" pos:column="18"/></operator> <name pos:line="24" pos:column="19">NULL<pos:position pos:line="24" pos:column="23"/></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24"> <block pos:line="24" pos:column="25">{
        <expr_stmt><expr><name pos:line="25" pos:column="9">pid<pos:position pos:line="25" pos:column="12"/></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <literal type="number" pos:line="25" pos:column="15">0<pos:position pos:line="25" pos:column="16"/></literal></expr>;<pos:position pos:line="25" pos:column="17"/></expr_stmt>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">fscanf<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><name pos:line="27" pos:column="20">pid_fp<pos:position pos:line="27" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="28">"%d"<pos:position pos:line="27" pos:column="32"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="34">&amp;<pos:position pos:line="27" pos:column="39"/></operator><name pos:line="27" pos:column="35">i<pos:position pos:line="27" pos:column="36"/></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call> <operator pos:line="27" pos:column="38">==<pos:position pos:line="27" pos:column="40"/></operator> <literal type="number" pos:line="27" pos:column="41">1<pos:position pos:line="27" pos:column="42"/></literal></expr>)<pos:position pos:line="27" pos:column="43"/></condition><then pos:line="27" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="13">pid<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <operator pos:line="28" pos:column="19">(<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">pid_t<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">)<pos:position pos:line="28" pos:column="26"/></operator> <name pos:line="28" pos:column="27">i<pos:position pos:line="28" pos:column="28"/></name></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="30" pos:column="9">fclose<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><name pos:line="30" pos:column="16">pid_fp<pos:position pos:line="30" pos:column="22"/></name></expr></argument>)<pos:position pos:line="30" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then> <else pos:line="31" pos:column="7">else <block pos:line="31" pos:column="12">{
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><name pos:line="32" pos:column="13">errno<pos:position pos:line="32" pos:column="18"/></name> <operator pos:line="32" pos:column="19">!=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">ENOENT<pos:position pos:line="32" pos:column="28"/></name></expr>)<pos:position pos:line="32" pos:column="29"/></condition><then pos:line="32" pos:column="29"> <block pos:line="32" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">fprintf<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">stderr<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="29">APP_SHORTNAME<pos:position pos:line="33" pos:column="42"/></name> <literal type="string" pos:line="33" pos:column="43">": ERROR: Could not read pid file\n"<pos:position pos:line="33" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">fprintf<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">stderr<pos:position pos:line="34" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="29">"\t%s: %s\n"<pos:position pos:line="34" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="43">f<pos:position pos:line="34" pos:column="44"/></name></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="46">xstrerror<pos:position pos:line="34" pos:column="55"/></name><argument_list pos:line="34" pos:column="55">()<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">exit<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><literal type="number" pos:line="35" pos:column="18">1<pos:position pos:line="35" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">safe_free<pos:position pos:line="39" pos:column="14"/></name><argument_list pos:line="39" pos:column="14">(<argument><expr><name pos:line="39" pos:column="15">chroot_f<pos:position pos:line="39" pos:column="23"/></name></expr></argument>)<pos:position pos:line="39" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
    <return pos:line="40" pos:column="5">return <expr><name pos:line="40" pos:column="12">pid<pos:position pos:line="40" pos:column="15"/></name></expr>;<pos:position pos:line="40" pos:column="16"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

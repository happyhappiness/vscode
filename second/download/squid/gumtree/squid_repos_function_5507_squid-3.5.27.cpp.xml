<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5507_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ftpSendPORT<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name><name pos:line="2" pos:column="13">Ftp<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">Gateway<pos:position pos:line="2" pos:column="25"/></name></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type> <name pos:line="2" pos:column="28">ftpState<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* check the server control channel is still available */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">ftpState<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">||<pos:position pos:line="5" pos:column="21"/></operator> <operator pos:line="5" pos:column="22">!<pos:position pos:line="5" pos:column="23"/></operator><call><name><name pos:line="5" pos:column="23">ftpState<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">haveControlChannel<pos:position pos:line="5" pos:column="51"/></name></name><argument_list pos:line="5" pos:column="51">(<argument><expr><literal type="string" pos:line="5" pos:column="52">"ftpSendPort"<pos:position pos:line="5" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="67"/></condition><then pos:line="5" pos:column="67">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">Config<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">Ftp<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">epsv_all<pos:position pos:line="8" pos:column="28"/></name></name> <operator pos:line="8" pos:column="29">&amp;&amp;<pos:position pos:line="8" pos:column="39"/></operator> <name><name pos:line="8" pos:column="32">ftpState<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">-&gt;<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="42">flags<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">.<pos:position pos:line="8" pos:column="48"/></operator><name pos:line="8" pos:column="48">epsv_all_sent<pos:position pos:line="8" pos:column="61"/></name></name></expr>)<pos:position pos:line="8" pos:column="62"/></condition><then pos:line="8" pos:column="62"> <block pos:line="8" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">9<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="19">DBG_IMPORTANT<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="34">"FTP does not allow PORT method after 'EPSV ALL' has been sent."<pos:position pos:line="9" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="100"/></expr_stmt>
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">9<pos:position pos:line="13" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="15">3<pos:position pos:line="13" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="18">HERE<pos:position pos:line="13" pos:column="22"/></name></expr></argument>)<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">ftpState<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">flags<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">.<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">pasv_supported<pos:position pos:line="14" pos:column="35"/></name></name> <operator pos:line="14" pos:column="36">=<pos:position pos:line="14" pos:column="37"/></operator> <literal type="number" pos:line="14" pos:column="38">0<pos:position pos:line="14" pos:column="39"/></literal></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ftpOpenListenSocket<pos:position pos:line="15" pos:column="24"/></name><argument_list pos:line="15" pos:column="24">(<argument><expr><name pos:line="15" pos:column="25">ftpState<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="35">0<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><call><name><name pos:line="17" pos:column="10">Comm<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">::<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">IsConnOpen<pos:position pos:line="17" pos:column="26"/></name></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name><name pos:line="17" pos:column="27">ftpState<pos:position pos:line="17" pos:column="35"/></name><operator pos:line="17" pos:column="35">-&gt;<pos:position pos:line="17" pos:column="40"/></operator><name pos:line="17" pos:column="37">data<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">.<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="42">listenConn<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54"> <block pos:line="17" pos:column="55">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">( <expr><name><name pos:line="18" pos:column="14">ftpState<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">-&gt;<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="24">data<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">.<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="29">listenConn<pos:position pos:line="18" pos:column="39"/></name></name> <operator pos:line="18" pos:column="40">!=<pos:position pos:line="18" pos:column="42"/></operator> <name pos:line="18" pos:column="43">NULL<pos:position pos:line="18" pos:column="47"/></name> <operator pos:line="18" pos:column="48">&amp;&amp;<pos:position pos:line="18" pos:column="58"/></operator> <operator pos:line="18" pos:column="51">!<pos:position pos:line="18" pos:column="52"/></operator><call><name><name pos:line="18" pos:column="52">ftpState<pos:position pos:line="18" pos:column="60"/></name><operator pos:line="18" pos:column="60">-&gt;<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="62">data<pos:position pos:line="18" pos:column="66"/></name><operator pos:line="18" pos:column="66">.<pos:position pos:line="18" pos:column="67"/></operator><name pos:line="18" pos:column="67">listenConn<pos:position pos:line="18" pos:column="77"/></name><operator pos:line="18" pos:column="77">-&gt;<pos:position pos:line="18" pos:column="82"/></operator><name pos:line="18" pos:column="79">local<pos:position pos:line="18" pos:column="84"/></name><operator pos:line="18" pos:column="84">.<pos:position pos:line="18" pos:column="85"/></operator><name pos:line="18" pos:column="85">isIPv4<pos:position pos:line="18" pos:column="91"/></name></name><argument_list pos:line="18" pos:column="91">()<pos:position pos:line="18" pos:column="93"/></argument_list></call></expr> )<pos:position pos:line="18" pos:column="95"/></condition><then pos:line="18" pos:column="95"> <block pos:line="18" pos:column="96">{
            <comment type="block" pos:line="19" pos:column="13">/* non-IPv4 CANNOT send PORT command.                       */</comment>
            <comment type="block" pos:line="20" pos:column="13">/* we got here by attempting and failing an EPRT            */</comment>
            <comment type="block" pos:line="21" pos:column="13">/* using the same reply code should simulate a PORT failure */</comment>
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">ftpReadPORT<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">ftpState<pos:position pos:line="22" pos:column="33"/></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
            <return pos:line="23" pos:column="13">return;<pos:position pos:line="23" pos:column="20"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="26" pos:column="9">/* XXX Need to set error message */</comment>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">ftpFail<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">ftpState<pos:position pos:line="27" pos:column="25"/></name></expr></argument>)<pos:position pos:line="27" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="27"/></expr_stmt>
        <return pos:line="28" pos:column="9">return;<pos:position pos:line="28" pos:column="16"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="31" pos:column="5">// pull out the internal IP address bytes to send in PORT command...</comment>
    <comment type="line" pos:line="32" pos:column="5">// source them from the listen_conn-&gt;local</comment>

    <decl_stmt><decl><type><name><name pos:line="34" pos:column="5">struct<pos:position pos:line="34" pos:column="11"/></name> <name pos:line="34" pos:column="12">addrinfo<pos:position pos:line="34" pos:column="20"/></name></name> <modifier pos:line="34" pos:column="21">*<pos:position pos:line="34" pos:column="22"/></modifier></type><name pos:line="34" pos:column="22">AI<pos:position pos:line="34" pos:column="24"/></name> <init pos:line="34" pos:column="25">= <expr><name pos:line="34" pos:column="27">NULL<pos:position pos:line="34" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="34" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">ftpState<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">-&gt;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="15">data<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">.<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="20">listenConn<pos:position pos:line="35" pos:column="30"/></name><operator pos:line="35" pos:column="30">-&gt;<pos:position pos:line="35" pos:column="35"/></operator><name pos:line="35" pos:column="32">local<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">.<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">getAddrInfo<pos:position pos:line="35" pos:column="49"/></name></name><argument_list pos:line="35" pos:column="49">(<argument><expr><name pos:line="35" pos:column="50">AI<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="54">AF_INET<pos:position pos:line="35" pos:column="61"/></name></expr></argument>)<pos:position pos:line="35" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="63"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="36" pos:column="5">unsigned<pos:position pos:line="36" pos:column="13"/></name> <name pos:line="36" pos:column="14">char<pos:position pos:line="36" pos:column="18"/></name> <modifier pos:line="36" pos:column="19">*<pos:position pos:line="36" pos:column="20"/></modifier></type><name pos:line="36" pos:column="20">addrptr<pos:position pos:line="36" pos:column="27"/></name> <init pos:line="36" pos:column="28">= <expr><operator pos:line="36" pos:column="30">(<pos:position pos:line="36" pos:column="31"/></operator><name pos:line="36" pos:column="31">unsigned<pos:position pos:line="36" pos:column="39"/></name> <name pos:line="36" pos:column="40">char<pos:position pos:line="36" pos:column="44"/></name> <operator pos:line="36" pos:column="45">*<pos:position pos:line="36" pos:column="46"/></operator><operator pos:line="36" pos:column="46">)<pos:position pos:line="36" pos:column="47"/></operator> <operator pos:line="36" pos:column="48">&amp;<pos:position pos:line="36" pos:column="53"/></operator><operator pos:line="36" pos:column="49">(<pos:position pos:line="36" pos:column="50"/></operator><operator pos:line="36" pos:column="50">(<pos:position pos:line="36" pos:column="51"/></operator>struct <name pos:line="36" pos:column="58">sockaddr_in<pos:position pos:line="36" pos:column="69"/></name><operator pos:line="36" pos:column="69">*<pos:position pos:line="36" pos:column="70"/></operator><operator pos:line="36" pos:column="70">)<pos:position pos:line="36" pos:column="71"/></operator><name><name pos:line="36" pos:column="71">AI<pos:position pos:line="36" pos:column="73"/></name><operator pos:line="36" pos:column="73">-&gt;<pos:position pos:line="36" pos:column="78"/></operator><name pos:line="36" pos:column="75">ai_addr<pos:position pos:line="36" pos:column="82"/></name></name><operator pos:line="36" pos:column="82">)<pos:position pos:line="36" pos:column="83"/></operator><operator pos:line="36" pos:column="83">-&gt;<pos:position pos:line="36" pos:column="88"/></operator><name pos:line="36" pos:column="85">sin_addr<pos:position pos:line="36" pos:column="93"/></name></expr></init></decl>;<pos:position pos:line="36" pos:column="94"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="37" pos:column="5">unsigned<pos:position pos:line="37" pos:column="13"/></name> <name pos:line="37" pos:column="14">char<pos:position pos:line="37" pos:column="18"/></name> <modifier pos:line="37" pos:column="19">*<pos:position pos:line="37" pos:column="20"/></modifier></type><name pos:line="37" pos:column="20">portptr<pos:position pos:line="37" pos:column="27"/></name> <init pos:line="37" pos:column="28">= <expr><operator pos:line="37" pos:column="30">(<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="31">unsigned<pos:position pos:line="37" pos:column="39"/></name> <name pos:line="37" pos:column="40">char<pos:position pos:line="37" pos:column="44"/></name> <operator pos:line="37" pos:column="45">*<pos:position pos:line="37" pos:column="46"/></operator><operator pos:line="37" pos:column="46">)<pos:position pos:line="37" pos:column="47"/></operator> <operator pos:line="37" pos:column="48">&amp;<pos:position pos:line="37" pos:column="53"/></operator><operator pos:line="37" pos:column="49">(<pos:position pos:line="37" pos:column="50"/></operator><operator pos:line="37" pos:column="50">(<pos:position pos:line="37" pos:column="51"/></operator>struct <name pos:line="37" pos:column="58">sockaddr_in<pos:position pos:line="37" pos:column="69"/></name><operator pos:line="37" pos:column="69">*<pos:position pos:line="37" pos:column="70"/></operator><operator pos:line="37" pos:column="70">)<pos:position pos:line="37" pos:column="71"/></operator><name><name pos:line="37" pos:column="71">AI<pos:position pos:line="37" pos:column="73"/></name><operator pos:line="37" pos:column="73">-&gt;<pos:position pos:line="37" pos:column="78"/></operator><name pos:line="37" pos:column="75">ai_addr<pos:position pos:line="37" pos:column="82"/></name></name><operator pos:line="37" pos:column="82">)<pos:position pos:line="37" pos:column="83"/></operator><operator pos:line="37" pos:column="83">-&gt;<pos:position pos:line="37" pos:column="88"/></operator><name pos:line="37" pos:column="85">sin_port<pos:position pos:line="37" pos:column="93"/></name></expr></init></decl>;<pos:position pos:line="37" pos:column="94"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">snprintf<pos:position pos:line="38" pos:column="13"/></name><argument_list pos:line="38" pos:column="13">(<argument><expr><name pos:line="38" pos:column="14">cbuf<pos:position pos:line="38" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="20">CTRL_BUFLEN<pos:position pos:line="38" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="33">"PORT %d,%d,%d,%d,%d,%d\r\n"<pos:position pos:line="38" pos:column="61"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="39" pos:column="14">addrptr<pos:position pos:line="39" pos:column="21"/></name><index pos:line="39" pos:column="21">[<expr><literal type="number" pos:line="39" pos:column="22">0<pos:position pos:line="39" pos:column="23"/></literal></expr>]<pos:position pos:line="39" pos:column="24"/></index></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="26">addrptr<pos:position pos:line="39" pos:column="33"/></name><index pos:line="39" pos:column="33">[<expr><literal type="number" pos:line="39" pos:column="34">1<pos:position pos:line="39" pos:column="35"/></literal></expr>]<pos:position pos:line="39" pos:column="36"/></index></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="38">addrptr<pos:position pos:line="39" pos:column="45"/></name><index pos:line="39" pos:column="45">[<expr><literal type="number" pos:line="39" pos:column="46">2<pos:position pos:line="39" pos:column="47"/></literal></expr>]<pos:position pos:line="39" pos:column="48"/></index></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="50">addrptr<pos:position pos:line="39" pos:column="57"/></name><index pos:line="39" pos:column="57">[<expr><literal type="number" pos:line="39" pos:column="58">3<pos:position pos:line="39" pos:column="59"/></literal></expr>]<pos:position pos:line="39" pos:column="60"/></index></name></expr></argument>,
             <argument><expr><name><name pos:line="40" pos:column="14">portptr<pos:position pos:line="40" pos:column="21"/></name><index pos:line="40" pos:column="21">[<expr><literal type="number" pos:line="40" pos:column="22">0<pos:position pos:line="40" pos:column="23"/></literal></expr>]<pos:position pos:line="40" pos:column="24"/></index></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="26">portptr<pos:position pos:line="40" pos:column="33"/></name><index pos:line="40" pos:column="33">[<expr><literal type="number" pos:line="40" pos:column="34">1<pos:position pos:line="40" pos:column="35"/></literal></expr>]<pos:position pos:line="40" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="41" pos:column="5">ftpState<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">-&gt;<pos:position pos:line="41" pos:column="18"/></operator><name pos:line="41" pos:column="15">writeCommand<pos:position pos:line="41" pos:column="27"/></name></name><argument_list pos:line="41" pos:column="27">(<argument><expr><name pos:line="41" pos:column="28">cbuf<pos:position pos:line="41" pos:column="32"/></name></expr></argument>)<pos:position pos:line="41" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">ftpState<pos:position pos:line="42" pos:column="13"/></name><operator pos:line="42" pos:column="13">-&gt;<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="15">state<pos:position pos:line="42" pos:column="20"/></name></name> <operator pos:line="42" pos:column="21">=<pos:position pos:line="42" pos:column="22"/></operator> <name><name pos:line="42" pos:column="23">Ftp<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">::<pos:position pos:line="42" pos:column="28"/></operator><name pos:line="42" pos:column="28">Client<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">::<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="36">SENT_PORT<pos:position pos:line="42" pos:column="45"/></name></name></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="44" pos:column="5">Ip<pos:position pos:line="44" pos:column="7"/></name><operator pos:line="44" pos:column="7">::<pos:position pos:line="44" pos:column="9"/></operator><name pos:line="44" pos:column="9">Address<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">::<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">FreeAddr<pos:position pos:line="44" pos:column="26"/></name></name><argument_list pos:line="44" pos:column="26">(<argument><expr><name pos:line="44" pos:column="27">AI<pos:position pos:line="44" pos:column="29"/></name></expr></argument>)<pos:position pos:line="44" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="31"/></expr_stmt>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

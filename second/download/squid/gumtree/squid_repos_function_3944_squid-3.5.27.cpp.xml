<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3944_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Adaptation<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">Method<pos:position pos:line="1" pos:column="19"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">ServiceConfig<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">parseMethod<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">(<parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">str<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list> <specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">strncasecmp<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">(<argument><expr><name pos:line="4" pos:column="22">str<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="27">"REQMOD"<pos:position pos:line="4" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="37">6<pos:position pos:line="4" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="40"/></condition><then pos:line="4" pos:column="40">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><name><name pos:line="5" pos:column="16">Adaptation<pos:position pos:line="5" pos:column="26"/></name><operator pos:line="5" pos:column="26">::<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">methodReqmod<pos:position pos:line="5" pos:column="40"/></name></name></expr>;<pos:position pos:line="5" pos:column="41"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name pos:line="7" pos:column="10">strncasecmp<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">str<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="27">"RESPMOD"<pos:position pos:line="7" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="38">7<pos:position pos:line="7" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="41"/></condition><then pos:line="7" pos:column="41">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><name><name pos:line="8" pos:column="16">Adaptation<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">::<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">methodRespmod<pos:position pos:line="8" pos:column="41"/></name></name></expr>;<pos:position pos:line="8" pos:column="42"/></return></block></then></if>

    <return pos:line="10" pos:column="5">return <expr><name><name pos:line="10" pos:column="12">Adaptation<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">::<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">methodNone<pos:position pos:line="10" pos:column="34"/></name></name></expr>;<pos:position pos:line="10" pos:column="35"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

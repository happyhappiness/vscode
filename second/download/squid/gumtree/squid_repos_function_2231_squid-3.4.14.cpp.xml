<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2231_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">connectDone<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name><name pos:line="2" pos:column="29">Comm<pos:position pos:line="2" pos:column="33"/></name><operator pos:line="2" pos:column="33">::<pos:position pos:line="2" pos:column="35"/></operator><name pos:line="2" pos:column="35">ConnectionPointer<pos:position pos:line="2" pos:column="52"/></name></name> <modifier pos:line="2" pos:column="53">&amp;<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="54">conn<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">comm_err_t<pos:position pos:line="2" pos:column="70"/></name></type> <name pos:line="2" pos:column="71">status<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="79">int<pos:position pos:line="2" pos:column="82"/></name></type> <name pos:line="2" pos:column="83">xerrno<pos:position pos:line="2" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="90"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">status<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">!=<pos:position pos:line="4" pos:column="18"/></operator> <name pos:line="4" pos:column="19">COMM_OK<pos:position pos:line="4" pos:column="26"/></name></expr>)<pos:position pos:line="4" pos:column="27"/></condition><then pos:line="4" pos:column="27"> <block pos:line="4" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">ErrorState<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier><specifier pos:line="5" pos:column="21">const<pos:position pos:line="5" pos:column="26"/></specifier></type> <name pos:line="5" pos:column="27">anErr<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><call><name pos:line="5" pos:column="35">makeConnectingError<pos:position pos:line="5" pos:column="54"/></name><argument_list pos:line="5" pos:column="54">(<argument><expr><name pos:line="5" pos:column="55">ERR_CONNECT_FAIL<pos:position pos:line="5" pos:column="71"/></name></expr></argument>)<pos:position pos:line="5" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="73"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">anErr<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">-&gt;<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="16">xerrno<pos:position pos:line="6" pos:column="22"/></name></name> <operator pos:line="6" pos:column="23">=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="25">xerrno<pos:position pos:line="6" pos:column="31"/></name></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">fail<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">anErr<pos:position pos:line="7" pos:column="19"/></name></expr></argument>)<pos:position pos:line="7" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="21"/></expr_stmt>

        <comment type="block" pos:line="9" pos:column="9">/* it might have been a timeout with a partially open link */</comment>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">conn<pos:position pos:line="10" pos:column="17"/></name> <operator pos:line="10" pos:column="18">!=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">NULL<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26"> <block pos:line="10" pos:column="27">{
            <if pos:line="11" pos:column="13">if <condition pos:line="11" pos:column="16">(<expr><call><name><name pos:line="11" pos:column="17">conn<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">getPeer<pos:position pos:line="11" pos:column="30"/></name></name><argument_list pos:line="11" pos:column="30">()<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="17">peerConnectFailed<pos:position pos:line="12" pos:column="34"/></name><argument_list pos:line="12" pos:column="34">(<argument><expr><call><name><name pos:line="12" pos:column="35">conn<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">getPeer<pos:position pos:line="12" pos:column="48"/></name></name><argument_list pos:line="12" pos:column="48">()<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name><name pos:line="14" pos:column="13">conn<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">-&gt;<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="19">close<pos:position pos:line="14" pos:column="24"/></name></name><argument_list pos:line="14" pos:column="24">()<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">retryOrBail<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">()<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
        <return pos:line="17" pos:column="9">return;<pos:position pos:line="17" pos:column="16"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">serverConn<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <name pos:line="20" pos:column="18">conn<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">flags<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">.<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">connected_okay<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <literal type="boolean" pos:line="21" pos:column="28">true<pos:position pos:line="21" pos:column="32"/></literal></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">debugs<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="number" pos:line="23" pos:column="12">17<pos:position pos:line="23" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="16">3<pos:position pos:line="23" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="19">HERE<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">&lt;&lt;<pos:position pos:line="23" pos:column="32"/></operator> <call><name pos:line="23" pos:column="27">serverConnection<pos:position pos:line="23" pos:column="43"/></name><argument_list pos:line="23" pos:column="43">()<pos:position pos:line="23" pos:column="45"/></argument_list></call> <operator pos:line="23" pos:column="46">&lt;&lt;<pos:position pos:line="23" pos:column="54"/></operator> <literal type="string" pos:line="23" pos:column="49">": '"<pos:position pos:line="23" pos:column="54"/></literal> <operator pos:line="23" pos:column="55">&lt;&lt;<pos:position pos:line="23" pos:column="63"/></operator> <call><name><name pos:line="23" pos:column="58">entry<pos:position pos:line="23" pos:column="63"/></name><operator pos:line="23" pos:column="63">-&gt;<pos:position pos:line="23" pos:column="68"/></operator><name pos:line="23" pos:column="65">url<pos:position pos:line="23" pos:column="68"/></name></name><argument_list pos:line="23" pos:column="68">()<pos:position pos:line="23" pos:column="70"/></argument_list></call> <operator pos:line="23" pos:column="71">&lt;&lt;<pos:position pos:line="23" pos:column="79"/></operator> <literal type="string" pos:line="23" pos:column="74">"'"<pos:position pos:line="23" pos:column="77"/></literal></expr></argument> )<pos:position pos:line="23" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="80"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">comm_add_close_handler<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><call><name pos:line="25" pos:column="28">serverConnection<pos:position pos:line="25" pos:column="44"/></name><argument_list pos:line="25" pos:column="44">()<pos:position pos:line="25" pos:column="46"/></argument_list></call><operator pos:line="25" pos:column="46">-&gt;<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="48">fd<pos:position pos:line="25" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">fwdServerClosedWrapper<pos:position pos:line="25" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="76">this<pos:position pos:line="25" pos:column="80"/></name></expr></argument>)<pos:position pos:line="25" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="82"/></expr_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><call><name pos:line="27" pos:column="9">serverConnection<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">()<pos:position pos:line="27" pos:column="27"/></argument_list></call><operator pos:line="27" pos:column="27">-&gt;<pos:position pos:line="27" pos:column="32"/></operator><call><name pos:line="27" pos:column="29">getPeer<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">()<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="39"/></condition><then pos:line="27" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="9">peerConnectSucceded<pos:position pos:line="28" pos:column="28"/></name><argument_list pos:line="28" pos:column="28">(<argument><expr><call><name pos:line="28" pos:column="29">serverConnection<pos:position pos:line="28" pos:column="45"/></name><argument_list pos:line="28" pos:column="45">()<pos:position pos:line="28" pos:column="47"/></argument_list></call><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><call><name pos:line="28" pos:column="49">getPeer<pos:position pos:line="28" pos:column="56"/></name><argument_list pos:line="28" pos:column="56">()<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="60"/></expr_stmt></block></then></if>

<cpp:if pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">if<pos:position pos:line="30" pos:column="4"/></cpp:directive> <expr><name pos:line="30" pos:column="5">USE_SSL<pos:position pos:line="30" pos:column="12"/></name></expr></cpp:if>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><operator pos:line="31" pos:column="9">!<pos:position pos:line="31" pos:column="10"/></operator><name><name pos:line="31" pos:column="10">request<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">flags<pos:position pos:line="31" pos:column="24"/></name><operator pos:line="31" pos:column="24">.<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">pinned<pos:position pos:line="31" pos:column="31"/></name></name></expr>)<pos:position pos:line="31" pos:column="32"/></condition><then pos:line="31" pos:column="32"> <block pos:line="31" pos:column="33">{
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><call><name pos:line="32" pos:column="14">serverConnection<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">()<pos:position pos:line="32" pos:column="32"/></argument_list></call><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><call><name pos:line="32" pos:column="34">getPeer<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">()<pos:position pos:line="32" pos:column="43"/></argument_list></call> <operator pos:line="32" pos:column="44">&amp;&amp;<pos:position pos:line="32" pos:column="54"/></operator> <call><name pos:line="32" pos:column="47">serverConnection<pos:position pos:line="32" pos:column="63"/></name><argument_list pos:line="32" pos:column="63">()<pos:position pos:line="32" pos:column="65"/></argument_list></call><operator pos:line="32" pos:column="65">-&gt;<pos:position pos:line="32" pos:column="70"/></operator><call><name pos:line="32" pos:column="67">getPeer<pos:position pos:line="32" pos:column="74"/></name><argument_list pos:line="32" pos:column="74">()<pos:position pos:line="32" pos:column="76"/></argument_list></call><operator pos:line="32" pos:column="76">-&gt;<pos:position pos:line="32" pos:column="81"/></operator><name pos:line="32" pos:column="78">use_ssl<pos:position pos:line="32" pos:column="85"/></name><operator pos:line="32" pos:column="85">)<pos:position pos:line="32" pos:column="86"/></operator> <operator pos:line="32" pos:column="87">||<pos:position pos:line="32" pos:column="89"/></operator>
                <operator pos:line="33" pos:column="17">(<pos:position pos:line="33" pos:column="18"/></operator><operator pos:line="33" pos:column="18">!<pos:position pos:line="33" pos:column="19"/></operator><call><name pos:line="33" pos:column="19">serverConnection<pos:position pos:line="33" pos:column="35"/></name><argument_list pos:line="33" pos:column="35">()<pos:position pos:line="33" pos:column="37"/></argument_list></call><operator pos:line="33" pos:column="37">-&gt;<pos:position pos:line="33" pos:column="42"/></operator><call><name pos:line="33" pos:column="39">getPeer<pos:position pos:line="33" pos:column="46"/></name><argument_list pos:line="33" pos:column="46">()<pos:position pos:line="33" pos:column="48"/></argument_list></call> <operator pos:line="33" pos:column="49">&amp;&amp;<pos:position pos:line="33" pos:column="59"/></operator> <name><name pos:line="33" pos:column="52">request<pos:position pos:line="33" pos:column="59"/></name><operator pos:line="33" pos:column="59">-&gt;<pos:position pos:line="33" pos:column="64"/></operator><name pos:line="33" pos:column="61">protocol<pos:position pos:line="33" pos:column="69"/></name></name> <operator pos:line="33" pos:column="70">==<pos:position pos:line="33" pos:column="72"/></operator> <name><name pos:line="33" pos:column="73">AnyP<pos:position pos:line="33" pos:column="77"/></name><operator pos:line="33" pos:column="77">::<pos:position pos:line="33" pos:column="79"/></operator><name pos:line="33" pos:column="79">PROTO_HTTPS<pos:position pos:line="33" pos:column="90"/></name></name><operator pos:line="33" pos:column="90">)<pos:position pos:line="33" pos:column="91"/></operator> <operator pos:line="33" pos:column="92">||<pos:position pos:line="33" pos:column="94"/></operator>
                <name><name pos:line="34" pos:column="17">request<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">flags<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">.<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="32">sslPeek<pos:position pos:line="34" pos:column="39"/></name></name></expr>)<pos:position pos:line="34" pos:column="40"/></condition><then pos:line="34" pos:column="40"> <block pos:line="34" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">initiateSSL<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">()<pos:position pos:line="35" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
            <return pos:line="36" pos:column="13">return;<pos:position pos:line="36" pos:column="20"/></return>
        }<pos:position pos:line="37" pos:column="10"/></block></then></if>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">dispatch<pos:position pos:line="41" pos:column="13"/></name><argument_list pos:line="41" pos:column="13">()<pos:position pos:line="41" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="16"/></expr_stmt>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

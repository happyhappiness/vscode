<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6522_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">aio_write<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">(<parameter><decl><type><name><name pos:line="1" pos:column="15">struct<pos:position pos:line="1" pos:column="21"/></name> <name pos:line="1" pos:column="22">aiocb<pos:position pos:line="1" pos:column="27"/></name></name> <modifier pos:line="1" pos:column="28">*<pos:position pos:line="1" pos:column="29"/></modifier></type><name pos:line="1" pos:column="29">aiocbp<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">LPOVERLAPPED<pos:position pos:line="3" pos:column="17"/></name></type> <name pos:line="3" pos:column="18">Overlapped<pos:position pos:line="3" pos:column="28"/></name></decl>;<pos:position pos:line="3" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">BOOL<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">IoOperationStatus<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Allocate an overlapped structure. */</comment>
    <expr_stmt><expr><name pos:line="7" pos:column="5">Overlapped<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <operator pos:line="7" pos:column="18">(<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">LPOVERLAPPED<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">)<pos:position pos:line="7" pos:column="32"/></operator> <call><name pos:line="7" pos:column="33">xcalloc<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">(<argument><expr><literal type="number" pos:line="7" pos:column="41">1<pos:position pos:line="7" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="7" pos:column="44">sizeof<argument_list pos:line="7" pos:column="50">(<argument><expr><name pos:line="7" pos:column="51">OVERLAPPED<pos:position pos:line="7" pos:column="61"/></name></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="7" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="64"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">Overlapped<pos:position pos:line="9" pos:column="20"/></name></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">errno<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">ENOMEM<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><operator pos:line="11" pos:column="16">-<pos:position pos:line="11" pos:column="17"/></operator><literal type="number" pos:line="11" pos:column="17">1<pos:position pos:line="11" pos:column="18"/></literal></expr>;<pos:position pos:line="11" pos:column="19"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">_FILE_OFFSET_BITS<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">==<pos:position pos:line="14" pos:column="24"/></operator><literal type="number" pos:line="14" pos:column="24">64<pos:position pos:line="14" pos:column="26"/></literal></expr></cpp:if>
<cpp:ifdef pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">ifdef<pos:position pos:line="15" pos:column="7"/></cpp:directive> <name pos:line="15" pos:column="8">__GNUC__<pos:position pos:line="15" pos:column="16"/></name></cpp:ifdef>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">Overlapped<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">Offset<pos:position pos:line="16" pos:column="23"/></name></name> <operator pos:line="16" pos:column="24">=<pos:position pos:line="16" pos:column="25"/></operator> <call pos:line="16" pos:column="26">(<name pos:line="16" pos:column="27">DWORD<pos:position pos:line="16" pos:column="32"/></name>) <argument_list pos:line="16" pos:column="34">(<argument><expr><name><name pos:line="16" pos:column="35">aiocbp<pos:position pos:line="16" pos:column="41"/></name><operator pos:line="16" pos:column="41">-&gt;<pos:position pos:line="16" pos:column="46"/></operator><name pos:line="16" pos:column="43">aio_offset<pos:position pos:line="16" pos:column="53"/></name></name> <operator pos:line="16" pos:column="54">%<pos:position pos:line="16" pos:column="55"/></operator> <literal type="number" pos:line="16" pos:column="56">0x100000000LL<pos:position pos:line="16" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="71"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">Overlapped<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">-&gt;<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="17">OffsetHigh<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <call pos:line="18" pos:column="30">(<name pos:line="18" pos:column="31">DWORD<pos:position pos:line="18" pos:column="36"/></name>) <argument_list pos:line="18" pos:column="38">(<argument><expr><name><name pos:line="18" pos:column="39">aiocbp<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">-&gt;<pos:position pos:line="18" pos:column="50"/></operator><name pos:line="18" pos:column="47">aio_offset<pos:position pos:line="18" pos:column="57"/></name></name> <operator pos:line="18" pos:column="58">/<pos:position pos:line="18" pos:column="59"/></operator> <literal type="number" pos:line="18" pos:column="60">0x100000000LL<pos:position pos:line="18" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="75"/></expr_stmt>

<cpp:else pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">else<pos:position pos:line="20" pos:column="6"/></cpp:directive></cpp:else>

    <expr_stmt><expr><name><name pos:line="22" pos:column="5">Overlapped<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">Offset<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <call pos:line="22" pos:column="26">(<name pos:line="22" pos:column="27">DWORD<pos:position pos:line="22" pos:column="32"/></name>) <argument_list pos:line="22" pos:column="34">(<argument><expr><name><name pos:line="22" pos:column="35">aiocbp<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">aio_offset<pos:position pos:line="22" pos:column="53"/></name></name> <operator pos:line="22" pos:column="54">%<pos:position pos:line="22" pos:column="55"/></operator> <literal type="number" pos:line="22" pos:column="56">0x100000000<pos:position pos:line="22" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="24" pos:column="5">Overlapped<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">OffsetHigh<pos:position pos:line="24" pos:column="27"/></name></name> <operator pos:line="24" pos:column="28">=<pos:position pos:line="24" pos:column="29"/></operator> <call pos:line="24" pos:column="30">(<name pos:line="24" pos:column="31">DWORD<pos:position pos:line="24" pos:column="36"/></name>) <argument_list pos:line="24" pos:column="38">(<argument><expr><name><name pos:line="24" pos:column="39">aiocbp<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">aio_offset<pos:position pos:line="24" pos:column="57"/></name></name> <operator pos:line="24" pos:column="58">/<pos:position pos:line="24" pos:column="59"/></operator> <literal type="number" pos:line="24" pos:column="60">0x100000000<pos:position pos:line="24" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>

<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">else<pos:position pos:line="27" pos:column="6"/></cpp:directive></cpp:else>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">Overlapped<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">Offset<pos:position pos:line="29" pos:column="23"/></name></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <name><name pos:line="29" pos:column="26">aiocbp<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">-&gt;<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="34">aio_offset<pos:position pos:line="29" pos:column="44"/></name></name></expr>;<pos:position pos:line="29" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="31" pos:column="5">Overlapped<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">OffsetHigh<pos:position pos:line="31" pos:column="27"/></name></name> <operator pos:line="31" pos:column="28">=<pos:position pos:line="31" pos:column="29"/></operator> <literal type="number" pos:line="31" pos:column="30">0<pos:position pos:line="31" pos:column="31"/></literal></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>

<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="35" pos:column="5">Overlapped<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">hEvent<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">=<pos:position pos:line="35" pos:column="25"/></operator> <name pos:line="35" pos:column="26">aiocbp<pos:position pos:line="35" pos:column="32"/></name></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="37" pos:column="5">aiocbp<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">-&gt;<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="13">aio_sigevent<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">.<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">sigev_notify<pos:position pos:line="37" pos:column="38"/></name></name> <operator pos:line="37" pos:column="39">=<pos:position pos:line="37" pos:column="40"/></operator> <name pos:line="37" pos:column="41">EINPROGRESS<pos:position pos:line="37" pos:column="52"/></name></expr>;<pos:position pos:line="37" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="39" pos:column="5">aiocbp<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">aio_sigevent<pos:position pos:line="39" pos:column="25"/></name><operator pos:line="39" pos:column="25">.<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="26">sigev_signo<pos:position pos:line="39" pos:column="37"/></name></name> <operator pos:line="39" pos:column="38">=<pos:position pos:line="39" pos:column="39"/></operator> <operator pos:line="39" pos:column="40">-<pos:position pos:line="39" pos:column="41"/></operator><literal type="number" pos:line="39" pos:column="41">1<pos:position pos:line="39" pos:column="42"/></literal></expr>;<pos:position pos:line="39" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name pos:line="41" pos:column="5">IoOperationStatus<pos:position pos:line="41" pos:column="22"/></name> <operator pos:line="41" pos:column="23">=<pos:position pos:line="41" pos:column="24"/></operator> <call><name pos:line="41" pos:column="25">WriteFileEx<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><operator pos:line="41" pos:column="37">(<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="38">HANDLE<pos:position pos:line="41" pos:column="44"/></name><operator pos:line="41" pos:column="44">)<pos:position pos:line="41" pos:column="45"/></operator><call><name pos:line="41" pos:column="45">_get_osfhandle<pos:position pos:line="41" pos:column="59"/></name><argument_list pos:line="41" pos:column="59">(<argument><expr><name><name pos:line="41" pos:column="60">aiocbp<pos:position pos:line="41" pos:column="66"/></name><operator pos:line="41" pos:column="66">-&gt;<pos:position pos:line="41" pos:column="71"/></operator><name pos:line="41" pos:column="68">aio_fildes<pos:position pos:line="41" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="79"/></argument_list></call></expr></argument>,
                                    <argument><expr><name><name pos:line="42" pos:column="37">aiocbp<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">-&gt;<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="45">aio_buf<pos:position pos:line="42" pos:column="52"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="43" pos:column="37">aiocbp<pos:position pos:line="43" pos:column="43"/></name><operator pos:line="43" pos:column="43">-&gt;<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="45">aio_nbytes<pos:position pos:line="43" pos:column="55"/></name></name></expr></argument>,
                                    <argument><expr><name pos:line="44" pos:column="37">Overlapped<pos:position pos:line="44" pos:column="47"/></name></expr></argument>,
                                    <argument><expr><name pos:line="45" pos:column="37">IoCompletionRoutine<pos:position pos:line="45" pos:column="56"/></name></expr></argument>)<pos:position pos:line="45" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="58"/></expr_stmt>

    <comment type="block" pos:line="47" pos:column="5">/* Test to see if the I/O was queued successfully. */</comment>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><operator pos:line="48" pos:column="9">!<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">IoOperationStatus<pos:position pos:line="48" pos:column="27"/></name></expr>)<pos:position pos:line="48" pos:column="28"/></condition><then pos:line="48" pos:column="28"> <block pos:line="48" pos:column="29">{
        <expr_stmt><expr><name pos:line="49" pos:column="9">errno<pos:position pos:line="49" pos:column="14"/></name> <operator pos:line="49" pos:column="15">=<pos:position pos:line="49" pos:column="16"/></operator> <call><name pos:line="49" pos:column="17">GetLastError<pos:position pos:line="49" pos:column="29"/></name><argument_list pos:line="49" pos:column="29">()<pos:position pos:line="49" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">debugs<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="number" pos:line="50" pos:column="16">81<pos:position pos:line="50" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="20">DBG_IMPORTANT<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="35">"aio_write: GetLastError="<pos:position pos:line="50" pos:column="61"/></literal> <operator pos:line="50" pos:column="62">&lt;&lt;<pos:position pos:line="50" pos:column="70"/></operator> <name pos:line="50" pos:column="65">errno<pos:position pos:line="50" pos:column="70"/></name></expr></argument>  )<pos:position pos:line="50" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="74"/></expr_stmt>
        <return pos:line="51" pos:column="9">return <expr><operator pos:line="51" pos:column="16">-<pos:position pos:line="51" pos:column="17"/></operator><literal type="number" pos:line="51" pos:column="17">1<pos:position pos:line="51" pos:column="18"/></literal></expr>;<pos:position pos:line="51" pos:column="19"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="54" pos:column="5">/* The I/O queued successfully. Go back into the
       alertable wait for I/O completion or for
       more I/O requests. */</comment>
    <return pos:line="57" pos:column="5">return <expr><literal type="number" pos:line="57" pos:column="12">0<pos:position pos:line="57" pos:column="13"/></literal></expr>;<pos:position pos:line="57" pos:column="14"/></return>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

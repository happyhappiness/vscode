<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4614_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Server<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">acceptDataConnection<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">CommAcceptCbParams<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">&amp;<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="61">params<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">params<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">flag<pos:position pos:line="4" pos:column="20"/></name></name> <operator pos:line="4" pos:column="21">!=<pos:position pos:line="4" pos:column="23"/></operator> <name><name pos:line="4" pos:column="24">Comm<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">::<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="30">OK<pos:position pos:line="4" pos:column="32"/></name></name></expr>)<pos:position pos:line="4" pos:column="33"/></condition><then pos:line="4" pos:column="33"> <block pos:line="4" pos:column="34">{
        <comment type="line" pos:line="5" pos:column="9">// Its possible the call was still queued when the client disconnected</comment>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">33<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">2<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">dataListenConn<pos:position pos:line="6" pos:column="37"/></name> <operator pos:line="6" pos:column="38">&lt;&lt;<pos:position pos:line="6" pos:column="46"/></operator> <literal type="string" pos:line="6" pos:column="41">": accept "<pos:position pos:line="6" pos:column="52"/></literal>
               <literal type="string" pos:line="7" pos:column="16">"failure: "<pos:position pos:line="7" pos:column="27"/></literal> <operator pos:line="7" pos:column="28">&lt;&lt;<pos:position pos:line="7" pos:column="36"/></operator> <call><name pos:line="7" pos:column="31">xstrerr<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name><name pos:line="7" pos:column="39">params<pos:position pos:line="7" pos:column="45"/></name><operator pos:line="7" pos:column="45">.<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="46">xerrno<pos:position pos:line="7" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>
        <return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">33<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">4<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="19">"accepted "<pos:position pos:line="11" pos:column="30"/></literal> <operator pos:line="11" pos:column="31">&lt;&lt;<pos:position pos:line="11" pos:column="39"/></operator> <name><name pos:line="11" pos:column="34">params<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">.<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">conn<pos:position pos:line="11" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">fd_note<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name><name pos:line="12" pos:column="13">params<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">conn<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">-&gt;<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="26">fd<pos:position pos:line="12" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="30">"passive client ftp data"<pos:position pos:line="12" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="13" pos:column="5">++<pos:position pos:line="13" pos:column="7"/></operator><name pos:line="13" pos:column="7">incoming_sockets_accepted<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">clientConnection<pos:position pos:line="15" pos:column="26"/></name></expr>)<pos:position pos:line="15" pos:column="27"/></condition><then pos:line="15" pos:column="27"> <block pos:line="15" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">33<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">5<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="23">"late data connection?"<pos:position pos:line="16" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">closeDataConnection<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">()<pos:position pos:line="17" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt> <comment type="line" pos:line="17" pos:column="32">// in case we are still listening</comment>
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">params<pos:position pos:line="18" pos:column="15"/></name><operator pos:line="18" pos:column="15">.<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">conn<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">close<pos:position pos:line="18" pos:column="27"/></name></name><argument_list pos:line="18" pos:column="27">()<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <elseif pos:line="19" pos:column="7">else <if pos:line="19" pos:column="12">if <condition pos:line="19" pos:column="15">(<expr><name><name pos:line="19" pos:column="16">params<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">conn<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">-&gt;<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="29">remote<pos:position pos:line="19" pos:column="35"/></name></name> <operator pos:line="19" pos:column="36">!=<pos:position pos:line="19" pos:column="38"/></operator> <name><name pos:line="19" pos:column="39">clientConnection<pos:position pos:line="19" pos:column="55"/></name><operator pos:line="19" pos:column="55">-&gt;<pos:position pos:line="19" pos:column="60"/></operator><name pos:line="19" pos:column="57">remote<pos:position pos:line="19" pos:column="63"/></name></name></expr>)<pos:position pos:line="19" pos:column="64"/></condition><then pos:line="19" pos:column="64"> <block pos:line="19" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">33<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="20">2<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="23">"rogue data conn? ctrl: "<pos:position pos:line="20" pos:column="48"/></literal> <operator pos:line="20" pos:column="49">&lt;&lt;<pos:position pos:line="20" pos:column="57"/></operator> <name><name pos:line="20" pos:column="52">clientConnection<pos:position pos:line="20" pos:column="68"/></name><operator pos:line="20" pos:column="68">-&gt;<pos:position pos:line="20" pos:column="73"/></operator><name pos:line="20" pos:column="70">remote<pos:position pos:line="20" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="21" pos:column="9">params<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">.<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">conn<pos:position pos:line="21" pos:column="20"/></name><operator pos:line="21" pos:column="20">-&gt;<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="22">close<pos:position pos:line="21" pos:column="27"/></name></name><argument_list pos:line="21" pos:column="27">()<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
        <comment type="line" pos:line="22" pos:column="9">// Some FTP servers close control connection here, but it may make</comment>
        <comment type="line" pos:line="23" pos:column="9">// things worse from DoS p.o.v. and no better from data stealing p.o.v.</comment>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif> <else pos:line="24" pos:column="7">else <block pos:line="24" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">closeDataConnection<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">()<pos:position pos:line="25" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">dataConn<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name><name pos:line="26" pos:column="20">params<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">.<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">conn<pos:position pos:line="26" pos:column="31"/></name></name></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">uploadAvailSize<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <literal type="number" pos:line="27" pos:column="27">0<pos:position pos:line="27" pos:column="28"/></literal></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">33<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="20">7<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"ready for data"<pos:position pos:line="28" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">onDataAcceptCall<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">!=<pos:position pos:line="29" pos:column="32"/></operator> <name pos:line="29" pos:column="33">NULL<pos:position pos:line="29" pos:column="37"/></name></expr>)<pos:position pos:line="29" pos:column="38"/></condition><then pos:line="29" pos:column="38"> <block pos:line="29" pos:column="39">{
            <decl_stmt><decl><type><name><name pos:line="30" pos:column="13">AsyncCall<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">::<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="24">Pointer<pos:position pos:line="30" pos:column="31"/></name></name></type> <name pos:line="30" pos:column="32">call<pos:position pos:line="30" pos:column="36"/></name> <init pos:line="30" pos:column="37">= <expr><name pos:line="30" pos:column="39">onDataAcceptCall<pos:position pos:line="30" pos:column="55"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="56"/></decl_stmt>
            <expr_stmt><expr><name pos:line="31" pos:column="13">onDataAcceptCall<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">=<pos:position pos:line="31" pos:column="31"/></operator> <name pos:line="31" pos:column="32">NULL<pos:position pos:line="31" pos:column="36"/></name></expr>;<pos:position pos:line="31" pos:column="37"/></expr_stmt>
            <comment type="line" pos:line="32" pos:column="13">// If we got an upload request, start reading data from the client.</comment>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><name><name pos:line="33" pos:column="17">master<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">-&gt;<pos:position pos:line="33" pos:column="28"/></operator><name pos:line="33" pos:column="25">serverState<pos:position pos:line="33" pos:column="36"/></name></name> <operator pos:line="33" pos:column="37">==<pos:position pos:line="33" pos:column="39"/></operator> <name pos:line="33" pos:column="40">fssHandleUploadRequest<pos:position pos:line="33" pos:column="62"/></name></expr>)<pos:position pos:line="33" pos:column="63"/></condition><then pos:line="33" pos:column="63">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="17">maybeReadUploadData<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">()<pos:position pos:line="34" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="39"/></expr_stmt></block></then>
            <else pos:line="35" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="17">Must<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name><name pos:line="36" pos:column="22">master<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">-&gt;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="30">serverState<pos:position pos:line="36" pos:column="41"/></name></name> <operator pos:line="36" pos:column="42">==<pos:position pos:line="36" pos:column="44"/></operator> <name pos:line="36" pos:column="45">fssHandleDataRequest<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt></block></else></if>
            <decl_stmt><decl><type><name pos:line="37" pos:column="13">MemBuf<pos:position pos:line="37" pos:column="19"/></name></type> <name pos:line="37" pos:column="20">mb<pos:position pos:line="37" pos:column="22"/></name></decl>;<pos:position pos:line="37" pos:column="23"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">mb<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">.<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">init<pos:position pos:line="38" pos:column="20"/></name></name><argument_list pos:line="38" pos:column="20">()<pos:position pos:line="38" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="39" pos:column="13">mb<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">.<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="16">appendf<pos:position pos:line="39" pos:column="23"/></name></name><argument_list pos:line="39" pos:column="23">(<argument><expr><literal type="string" pos:line="39" pos:column="24">"150 Data connection opened.\r\n"<pos:position pos:line="39" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="40" pos:column="13">Comm<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">::<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">Write<pos:position pos:line="40" pos:column="24"/></name></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name pos:line="40" pos:column="25">clientConnection<pos:position pos:line="40" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="40" pos:column="43">&amp;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="44">mb<pos:position pos:line="40" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="48">call<pos:position pos:line="40" pos:column="52"/></name></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></else></if>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_774_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientHttpRequest<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">doCallouts<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">calloutContext<pos:position pos:line="4" pos:column="26"/></name></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>

    <comment type="block" pos:line="6" pos:column="5">/*Save the original request for logging purposes*/</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">calloutContext<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">http<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">al<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">request<pos:position pos:line="7" pos:column="43"/></name></name></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44"> <block pos:line="7" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">calloutContext<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">-&gt;<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="25">http<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">al<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">request<pos:position pos:line="8" pos:column="42"/></name></name> <operator pos:line="8" pos:column="43">=<pos:position pos:line="8" pos:column="44"/></operator> <name pos:line="8" pos:column="45">request<pos:position pos:line="8" pos:column="52"/></name></expr>;<pos:position pos:line="8" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">HTTPMSGLOCK<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name><name pos:line="9" pos:column="21">calloutContext<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">http<pos:position pos:line="9" pos:column="41"/></name><operator pos:line="9" pos:column="41">-&gt;<pos:position pos:line="9" pos:column="46"/></operator><name pos:line="9" pos:column="43">al<pos:position pos:line="9" pos:column="45"/></name><operator pos:line="9" pos:column="45">-&gt;<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="47">request<pos:position pos:line="9" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="11" pos:column="9">NotePairs<pos:position pos:line="11" pos:column="18"/></name> <modifier pos:line="11" pos:column="19">&amp;<pos:position pos:line="11" pos:column="24"/></modifier></type><name pos:line="11" pos:column="20">notes<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><call><name pos:line="11" pos:column="28">SyncNotes<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><operator pos:line="11" pos:column="38">*<pos:position pos:line="11" pos:column="39"/></operator><name><name pos:line="11" pos:column="39">calloutContext<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">-&gt;<pos:position pos:line="11" pos:column="58"/></operator><name pos:line="11" pos:column="55">http<pos:position pos:line="11" pos:column="59"/></name><operator pos:line="11" pos:column="59">-&gt;<pos:position pos:line="11" pos:column="64"/></operator><name pos:line="11" pos:column="61">al<pos:position pos:line="11" pos:column="63"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="65">*<pos:position pos:line="11" pos:column="66"/></operator><name><name pos:line="11" pos:column="66">calloutContext<pos:position pos:line="11" pos:column="80"/></name><operator pos:line="11" pos:column="80">-&gt;<pos:position pos:line="11" pos:column="85"/></operator><name pos:line="11" pos:column="82">http<pos:position pos:line="11" pos:column="86"/></name><operator pos:line="11" pos:column="86">-&gt;<pos:position pos:line="11" pos:column="91"/></operator><name pos:line="11" pos:column="88">request<pos:position pos:line="11" pos:column="95"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="96"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="97"/></decl_stmt>
        <comment type="line" pos:line="12" pos:column="9">// Make the previously set client connection ID available as annotation.</comment>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<decl><type><name pos:line="13" pos:column="13">ConnStateData<pos:position pos:line="13" pos:column="26"/></name> <modifier pos:line="13" pos:column="27">*<pos:position pos:line="13" pos:column="28"/></modifier></type><name pos:line="13" pos:column="28">csd<pos:position pos:line="13" pos:column="31"/></name> <init pos:line="13" pos:column="32">= <expr><call><name><name pos:line="13" pos:column="34">calloutContext<pos:position pos:line="13" pos:column="48"/></name><operator pos:line="13" pos:column="48">-&gt;<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="50">http<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">-&gt;<pos:position pos:line="13" pos:column="59"/></operator><name pos:line="13" pos:column="56">getConn<pos:position pos:line="13" pos:column="63"/></name></name><argument_list pos:line="13" pos:column="63">()<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr></init></decl>)<pos:position pos:line="13" pos:column="66"/></condition><then pos:line="13" pos:column="66"> <block pos:line="13" pos:column="67">{
            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><operator pos:line="14" pos:column="17">!<pos:position pos:line="14" pos:column="18"/></operator><call><name><name pos:line="14" pos:column="18">csd<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">connectionTag<pos:position pos:line="14" pos:column="36"/></name></name><argument_list pos:line="14" pos:column="36">()<pos:position pos:line="14" pos:column="38"/></argument_list></call><operator pos:line="14" pos:column="38">.<pos:position pos:line="14" pos:column="39"/></operator><call><name pos:line="14" pos:column="39">isEmpty<pos:position pos:line="14" pos:column="46"/></name><argument_list pos:line="14" pos:column="46">()<pos:position pos:line="14" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="49"/></condition><then pos:line="14" pos:column="49">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="15" pos:column="17">notes<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">.<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">add<pos:position pos:line="15" pos:column="26"/></name></name><argument_list pos:line="15" pos:column="26">(<argument><expr><literal type="string" pos:line="15" pos:column="27">"clt_conn_tag"<pos:position pos:line="15" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="15" pos:column="43">SBuf<pos:position pos:line="15" pos:column="47"/></name><argument_list pos:line="15" pos:column="47">(<argument><expr><call><name><name pos:line="15" pos:column="48">csd<pos:position pos:line="15" pos:column="51"/></name><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">connectionTag<pos:position pos:line="15" pos:column="66"/></name></name><argument_list pos:line="15" pos:column="66">()<pos:position pos:line="15" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call><operator pos:line="15" pos:column="69">.<pos:position pos:line="15" pos:column="70"/></operator><call><name pos:line="15" pos:column="70">c_str<pos:position pos:line="15" pos:column="75"/></name><argument_list pos:line="15" pos:column="75">()<pos:position pos:line="15" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="79"/></expr_stmt></block></then></if>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><name><name pos:line="19" pos:column="10">calloutContext<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">error<pos:position pos:line="19" pos:column="31"/></name></name></expr>)<pos:position pos:line="19" pos:column="32"/></condition><then pos:line="19" pos:column="32"> <block pos:line="19" pos:column="33">{
        <comment type="line" pos:line="20" pos:column="9">// CVE-2009-0801: verify the Host: header is consistent with other known details.</comment>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name><name pos:line="21" pos:column="14">calloutContext<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">host_header_verify_done<pos:position pos:line="21" pos:column="53"/></name></name></expr>)<pos:position pos:line="21" pos:column="54"/></condition><then pos:line="21" pos:column="54"> <block pos:line="21" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">83<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="24">3<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="27">HERE<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">&lt;&lt;<pos:position pos:line="22" pos:column="40"/></operator> <literal type="string" pos:line="22" pos:column="35">"Doing calloutContext-&gt;hostHeaderVerify()"<pos:position pos:line="22" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">calloutContext<pos:position pos:line="23" pos:column="27"/></name><operator pos:line="23" pos:column="27">-&gt;<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="29">host_header_verify_done<pos:position pos:line="23" pos:column="52"/></name></name> <operator pos:line="23" pos:column="53">=<pos:position pos:line="23" pos:column="54"/></operator> <literal type="boolean" pos:line="23" pos:column="55">true<pos:position pos:line="23" pos:column="59"/></literal></expr>;<pos:position pos:line="23" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">calloutContext<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">-&gt;<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="29">hostHeaderVerify<pos:position pos:line="24" pos:column="45"/></name></name><argument_list pos:line="24" pos:column="45">()<pos:position pos:line="24" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="48"/></expr_stmt>
            <return pos:line="25" pos:column="13">return;<pos:position pos:line="25" pos:column="20"/></return>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><operator pos:line="28" pos:column="13">!<pos:position pos:line="28" pos:column="14"/></operator><name><name pos:line="28" pos:column="14">calloutContext<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">http_access_done<pos:position pos:line="28" pos:column="46"/></name></name></expr>)<pos:position pos:line="28" pos:column="47"/></condition><then pos:line="28" pos:column="47"> <block pos:line="28" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">debugs<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><literal type="number" pos:line="29" pos:column="20">83<pos:position pos:line="29" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="24">3<pos:position pos:line="29" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="27">HERE<pos:position pos:line="29" pos:column="31"/></name> <operator pos:line="29" pos:column="32">&lt;&lt;<pos:position pos:line="29" pos:column="40"/></operator> <literal type="string" pos:line="29" pos:column="35">"Doing calloutContext-&gt;clientAccessCheck()"<pos:position pos:line="29" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">calloutContext<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">-&gt;<pos:position pos:line="30" pos:column="32"/></operator><name pos:line="30" pos:column="29">http_access_done<pos:position pos:line="30" pos:column="45"/></name></name> <operator pos:line="30" pos:column="46">=<pos:position pos:line="30" pos:column="47"/></operator> <literal type="boolean" pos:line="30" pos:column="48">true<pos:position pos:line="30" pos:column="52"/></literal></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="31" pos:column="13">calloutContext<pos:position pos:line="31" pos:column="27"/></name><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">clientAccessCheck<pos:position pos:line="31" pos:column="46"/></name></name><argument_list pos:line="31" pos:column="46">()<pos:position pos:line="31" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
            <return pos:line="32" pos:column="13">return;<pos:position pos:line="32" pos:column="20"/></return>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>

<cpp:if pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">if<pos:position pos:line="35" pos:column="4"/></cpp:directive> <expr><name pos:line="35" pos:column="5">USE_ADAPTATION<pos:position pos:line="35" pos:column="19"/></name></expr></cpp:if>
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name><name pos:line="36" pos:column="14">calloutContext<pos:position pos:line="36" pos:column="28"/></name><operator pos:line="36" pos:column="28">-&gt;<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="30">adaptation_acl_check_done<pos:position pos:line="36" pos:column="55"/></name></name></expr>)<pos:position pos:line="36" pos:column="56"/></condition><then pos:line="36" pos:column="56"> <block pos:line="36" pos:column="57">{
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">calloutContext<pos:position pos:line="37" pos:column="27"/></name><operator pos:line="37" pos:column="27">-&gt;<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="29">adaptation_acl_check_done<pos:position pos:line="37" pos:column="54"/></name></name> <operator pos:line="37" pos:column="55">=<pos:position pos:line="37" pos:column="56"/></operator> <literal type="boolean" pos:line="37" pos:column="57">true<pos:position pos:line="37" pos:column="61"/></literal></expr>;<pos:position pos:line="37" pos:column="62"/></expr_stmt>
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><call><name><name pos:line="38" pos:column="17">Adaptation<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">::<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="29">AccessCheck<pos:position pos:line="38" pos:column="40"/></name><operator pos:line="38" pos:column="40">::<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="42">Start<pos:position pos:line="38" pos:column="47"/></name></name><argument_list pos:line="38" pos:column="47">(
                        <argument><expr><name><name pos:line="39" pos:column="25">Adaptation<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">::<pos:position pos:line="39" pos:column="37"/></operator><name pos:line="39" pos:column="37">methodReqmod<pos:position pos:line="39" pos:column="49"/></name></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="51">Adaptation<pos:position pos:line="39" pos:column="61"/></name><operator pos:line="39" pos:column="61">::<pos:position pos:line="39" pos:column="63"/></operator><name pos:line="39" pos:column="63">pointPreCache<pos:position pos:line="39" pos:column="76"/></name></name></expr></argument>,
                        <argument><expr><name pos:line="40" pos:column="25">request<pos:position pos:line="40" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="34">NULL<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="40" pos:column="40">calloutContext<pos:position pos:line="40" pos:column="54"/></name><operator pos:line="40" pos:column="54">-&gt;<pos:position pos:line="40" pos:column="59"/></operator><name pos:line="40" pos:column="56">http<pos:position pos:line="40" pos:column="60"/></name><operator pos:line="40" pos:column="60">-&gt;<pos:position pos:line="40" pos:column="65"/></operator><name pos:line="40" pos:column="62">al<pos:position pos:line="40" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="66">this<pos:position pos:line="40" pos:column="70"/></name></expr></argument>)<pos:position pos:line="40" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="72"/></condition><then pos:line="40" pos:column="72">
                <block type="pseudo"><return pos:line="41" pos:column="17">return;<pos:position pos:line="41" pos:column="24"/></return></block></then></if> <comment type="line" pos:line="41" pos:column="25">// will call callback</comment>
        }<pos:position pos:line="42" pos:column="10"/></block></then></if>
<cpp:endif pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">endif<pos:position pos:line="43" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><name><name pos:line="45" pos:column="14">calloutContext<pos:position pos:line="45" pos:column="28"/></name><operator pos:line="45" pos:column="28">-&gt;<pos:position pos:line="45" pos:column="33"/></operator><name pos:line="45" pos:column="30">redirect_done<pos:position pos:line="45" pos:column="43"/></name></name></expr>)<pos:position pos:line="45" pos:column="44"/></condition><then pos:line="45" pos:column="44"> <block pos:line="45" pos:column="45">{
            <expr_stmt><expr><name><name pos:line="46" pos:column="13">calloutContext<pos:position pos:line="46" pos:column="27"/></name><operator pos:line="46" pos:column="27">-&gt;<pos:position pos:line="46" pos:column="32"/></operator><name pos:line="46" pos:column="29">redirect_done<pos:position pos:line="46" pos:column="42"/></name></name> <operator pos:line="46" pos:column="43">=<pos:position pos:line="46" pos:column="44"/></operator> <literal type="boolean" pos:line="46" pos:column="45">true<pos:position pos:line="46" pos:column="49"/></literal></expr>;<pos:position pos:line="46" pos:column="50"/></expr_stmt>

            <if pos:line="48" pos:column="13">if <condition pos:line="48" pos:column="16">(<expr><name><name pos:line="48" pos:column="17">Config<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">.<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">Program<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">.<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="32">redirect<pos:position pos:line="48" pos:column="40"/></name></name></expr>)<pos:position pos:line="48" pos:column="41"/></condition><then pos:line="48" pos:column="41"> <block pos:line="48" pos:column="42">{
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">debugs<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><literal type="number" pos:line="49" pos:column="24">83<pos:position pos:line="49" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="28">3<pos:position pos:line="49" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="31">HERE<pos:position pos:line="49" pos:column="35"/></name> <operator pos:line="49" pos:column="36">&lt;&lt;<pos:position pos:line="49" pos:column="44"/></operator> <literal type="string" pos:line="49" pos:column="39">"Doing calloutContext-&gt;clientRedirectStart()"<pos:position pos:line="49" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="86"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="50" pos:column="17">calloutContext<pos:position pos:line="50" pos:column="31"/></name><operator pos:line="50" pos:column="31">-&gt;<pos:position pos:line="50" pos:column="36"/></operator><name pos:line="50" pos:column="33">redirect_state<pos:position pos:line="50" pos:column="47"/></name></name> <operator pos:line="50" pos:column="48">=<pos:position pos:line="50" pos:column="49"/></operator> <name pos:line="50" pos:column="50">REDIRECT_PENDING<pos:position pos:line="50" pos:column="66"/></name></expr>;<pos:position pos:line="50" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="51" pos:column="17">calloutContext<pos:position pos:line="51" pos:column="31"/></name><operator pos:line="51" pos:column="31">-&gt;<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="33">clientRedirectStart<pos:position pos:line="51" pos:column="52"/></name></name><argument_list pos:line="51" pos:column="52">()<pos:position pos:line="51" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="55"/></expr_stmt>
                <return pos:line="52" pos:column="17">return;<pos:position pos:line="52" pos:column="24"/></return>
            }<pos:position pos:line="53" pos:column="14"/></block></then></if>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">!<pos:position pos:line="56" pos:column="14"/></operator><name><name pos:line="56" pos:column="14">calloutContext<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">-&gt;<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="30">adapted_http_access_done<pos:position pos:line="56" pos:column="54"/></name></name></expr>)<pos:position pos:line="56" pos:column="55"/></condition><then pos:line="56" pos:column="55"> <block pos:line="56" pos:column="56">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">debugs<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><literal type="number" pos:line="57" pos:column="20">83<pos:position pos:line="57" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="24">3<pos:position pos:line="57" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="27">HERE<pos:position pos:line="57" pos:column="31"/></name> <operator pos:line="57" pos:column="32">&lt;&lt;<pos:position pos:line="57" pos:column="40"/></operator> <literal type="string" pos:line="57" pos:column="35">"Doing calloutContext-&gt;clientAccessCheck2()"<pos:position pos:line="57" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">calloutContext<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">-&gt;<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="29">adapted_http_access_done<pos:position pos:line="58" pos:column="53"/></name></name> <operator pos:line="58" pos:column="54">=<pos:position pos:line="58" pos:column="55"/></operator> <literal type="boolean" pos:line="58" pos:column="56">true<pos:position pos:line="58" pos:column="60"/></literal></expr>;<pos:position pos:line="58" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">calloutContext<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">-&gt;<pos:position pos:line="59" pos:column="32"/></operator><name pos:line="59" pos:column="29">clientAccessCheck2<pos:position pos:line="59" pos:column="47"/></name></name><argument_list pos:line="59" pos:column="47">()<pos:position pos:line="59" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="50"/></expr_stmt>
            <return pos:line="60" pos:column="13">return;<pos:position pos:line="60" pos:column="20"/></return>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>

        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><operator pos:line="63" pos:column="13">!<pos:position pos:line="63" pos:column="14"/></operator><name><name pos:line="63" pos:column="14">calloutContext<pos:position pos:line="63" pos:column="28"/></name><operator pos:line="63" pos:column="28">-&gt;<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="30">store_id_done<pos:position pos:line="63" pos:column="43"/></name></name></expr>)<pos:position pos:line="63" pos:column="44"/></condition><then pos:line="63" pos:column="44"> <block pos:line="63" pos:column="45">{
            <expr_stmt><expr><name><name pos:line="64" pos:column="13">calloutContext<pos:position pos:line="64" pos:column="27"/></name><operator pos:line="64" pos:column="27">-&gt;<pos:position pos:line="64" pos:column="32"/></operator><name pos:line="64" pos:column="29">store_id_done<pos:position pos:line="64" pos:column="42"/></name></name> <operator pos:line="64" pos:column="43">=<pos:position pos:line="64" pos:column="44"/></operator> <literal type="boolean" pos:line="64" pos:column="45">true<pos:position pos:line="64" pos:column="49"/></literal></expr>;<pos:position pos:line="64" pos:column="50"/></expr_stmt>

            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><name><name pos:line="66" pos:column="17">Config<pos:position pos:line="66" pos:column="23"/></name><operator pos:line="66" pos:column="23">.<pos:position pos:line="66" pos:column="24"/></operator><name pos:line="66" pos:column="24">Program<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">.<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="32">store_id<pos:position pos:line="66" pos:column="40"/></name></name></expr>)<pos:position pos:line="66" pos:column="41"/></condition><then pos:line="66" pos:column="41"> <block pos:line="66" pos:column="42">{
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">debugs<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><literal type="number" pos:line="67" pos:column="24">83<pos:position pos:line="67" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="28">3<pos:position pos:line="67" pos:column="29"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="67" pos:column="30">"Doing calloutContext-&gt;clientStoreIdStart()"<pos:position pos:line="67" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="76"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="68" pos:column="17">calloutContext<pos:position pos:line="68" pos:column="31"/></name><operator pos:line="68" pos:column="31">-&gt;<pos:position pos:line="68" pos:column="36"/></operator><name pos:line="68" pos:column="33">store_id_state<pos:position pos:line="68" pos:column="47"/></name></name> <operator pos:line="68" pos:column="48">=<pos:position pos:line="68" pos:column="49"/></operator> <name pos:line="68" pos:column="50">REDIRECT_PENDING<pos:position pos:line="68" pos:column="66"/></name></expr>;<pos:position pos:line="68" pos:column="67"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="69" pos:column="17">calloutContext<pos:position pos:line="69" pos:column="31"/></name><operator pos:line="69" pos:column="31">-&gt;<pos:position pos:line="69" pos:column="36"/></operator><name pos:line="69" pos:column="33">clientStoreIdStart<pos:position pos:line="69" pos:column="51"/></name></name><argument_list pos:line="69" pos:column="51">()<pos:position pos:line="69" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="54"/></expr_stmt>
                <return pos:line="70" pos:column="17">return;<pos:position pos:line="70" pos:column="24"/></return>
            }<pos:position pos:line="71" pos:column="14"/></block></then></if>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if>

        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><operator pos:line="74" pos:column="13">!<pos:position pos:line="74" pos:column="14"/></operator><name><name pos:line="74" pos:column="14">calloutContext<pos:position pos:line="74" pos:column="28"/></name><operator pos:line="74" pos:column="28">-&gt;<pos:position pos:line="74" pos:column="33"/></operator><name pos:line="74" pos:column="30">interpreted_req_hdrs<pos:position pos:line="74" pos:column="50"/></name></name></expr>)<pos:position pos:line="74" pos:column="51"/></condition><then pos:line="74" pos:column="51"> <block pos:line="74" pos:column="52">{
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">debugs<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><literal type="number" pos:line="75" pos:column="20">83<pos:position pos:line="75" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="24">3<pos:position pos:line="75" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="27">HERE<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">&lt;&lt;<pos:position pos:line="75" pos:column="40"/></operator> <literal type="string" pos:line="75" pos:column="35">"Doing clientInterpretRequestHeaders()"<pos:position pos:line="75" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="76" pos:column="13">calloutContext<pos:position pos:line="76" pos:column="27"/></name><operator pos:line="76" pos:column="27">-&gt;<pos:position pos:line="76" pos:column="32"/></operator><name pos:line="76" pos:column="29">interpreted_req_hdrs<pos:position pos:line="76" pos:column="49"/></name></name> <operator pos:line="76" pos:column="50">=<pos:position pos:line="76" pos:column="51"/></operator> <literal type="number" pos:line="76" pos:column="52">1<pos:position pos:line="76" pos:column="53"/></literal></expr>;<pos:position pos:line="76" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">clientInterpretRequestHeaders<pos:position pos:line="77" pos:column="42"/></name><argument_list pos:line="77" pos:column="42">(<argument><expr><name pos:line="77" pos:column="43">this<pos:position pos:line="77" pos:column="47"/></name></expr></argument>)<pos:position pos:line="77" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if>

        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><operator pos:line="80" pos:column="13">!<pos:position pos:line="80" pos:column="14"/></operator><name><name pos:line="80" pos:column="14">calloutContext<pos:position pos:line="80" pos:column="28"/></name><operator pos:line="80" pos:column="28">-&gt;<pos:position pos:line="80" pos:column="33"/></operator><name pos:line="80" pos:column="30">no_cache_done<pos:position pos:line="80" pos:column="43"/></name></name></expr>)<pos:position pos:line="80" pos:column="44"/></condition><then pos:line="80" pos:column="44"> <block pos:line="80" pos:column="45">{
            <expr_stmt><expr><name><name pos:line="81" pos:column="13">calloutContext<pos:position pos:line="81" pos:column="27"/></name><operator pos:line="81" pos:column="27">-&gt;<pos:position pos:line="81" pos:column="32"/></operator><name pos:line="81" pos:column="29">no_cache_done<pos:position pos:line="81" pos:column="42"/></name></name> <operator pos:line="81" pos:column="43">=<pos:position pos:line="81" pos:column="44"/></operator> <literal type="boolean" pos:line="81" pos:column="45">true<pos:position pos:line="81" pos:column="49"/></literal></expr>;<pos:position pos:line="81" pos:column="50"/></expr_stmt>

            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><name><name pos:line="83" pos:column="17">Config<pos:position pos:line="83" pos:column="23"/></name><operator pos:line="83" pos:column="23">.<pos:position pos:line="83" pos:column="24"/></operator><name pos:line="83" pos:column="24">accessList<pos:position pos:line="83" pos:column="34"/></name><operator pos:line="83" pos:column="34">.<pos:position pos:line="83" pos:column="35"/></operator><name pos:line="83" pos:column="35">noCache<pos:position pos:line="83" pos:column="42"/></name></name> <operator pos:line="83" pos:column="43">&amp;&amp;<pos:position pos:line="83" pos:column="53"/></operator> <name><name pos:line="83" pos:column="46">request<pos:position pos:line="83" pos:column="53"/></name><operator pos:line="83" pos:column="53">-&gt;<pos:position pos:line="83" pos:column="58"/></operator><name pos:line="83" pos:column="55">flags<pos:position pos:line="83" pos:column="60"/></name><operator pos:line="83" pos:column="60">.<pos:position pos:line="83" pos:column="61"/></operator><name pos:line="83" pos:column="61">cachable<pos:position pos:line="83" pos:column="69"/></name></name></expr>)<pos:position pos:line="83" pos:column="70"/></condition><then pos:line="83" pos:column="70"> <block pos:line="83" pos:column="71">{
                <expr_stmt><expr><call><name pos:line="84" pos:column="17">debugs<pos:position pos:line="84" pos:column="23"/></name><argument_list pos:line="84" pos:column="23">(<argument><expr><literal type="number" pos:line="84" pos:column="24">83<pos:position pos:line="84" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="28">3<pos:position pos:line="84" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="31">HERE<pos:position pos:line="84" pos:column="35"/></name> <operator pos:line="84" pos:column="36">&lt;&lt;<pos:position pos:line="84" pos:column="44"/></operator> <literal type="string" pos:line="84" pos:column="39">"Doing calloutContext-&gt;checkNoCache()"<pos:position pos:line="84" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="79"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="85" pos:column="17">calloutContext<pos:position pos:line="85" pos:column="31"/></name><operator pos:line="85" pos:column="31">-&gt;<pos:position pos:line="85" pos:column="36"/></operator><name pos:line="85" pos:column="33">checkNoCache<pos:position pos:line="85" pos:column="45"/></name></name><argument_list pos:line="85" pos:column="45">()<pos:position pos:line="85" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="48"/></expr_stmt>
                <return pos:line="86" pos:column="17">return;<pos:position pos:line="86" pos:column="24"/></return>
            }<pos:position pos:line="87" pos:column="14"/></block></then></if>
        }<pos:position pos:line="88" pos:column="10"/></block></then></if>
    }<pos:position pos:line="89" pos:column="6"/></block></then></if> <comment type="line" pos:line="89" pos:column="7">//  if !calloutContext-&gt;error</comment>

    <if pos:line="91" pos:column="5">if <condition pos:line="91" pos:column="8">(<expr><operator pos:line="91" pos:column="9">!<pos:position pos:line="91" pos:column="10"/></operator><name><name pos:line="91" pos:column="10">calloutContext<pos:position pos:line="91" pos:column="24"/></name><operator pos:line="91" pos:column="24">-&gt;<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="26">tosToClientDone<pos:position pos:line="91" pos:column="41"/></name></name></expr>)<pos:position pos:line="91" pos:column="42"/></condition><then pos:line="91" pos:column="42"> <block pos:line="91" pos:column="43">{
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">calloutContext<pos:position pos:line="92" pos:column="23"/></name><operator pos:line="92" pos:column="23">-&gt;<pos:position pos:line="92" pos:column="28"/></operator><name pos:line="92" pos:column="25">tosToClientDone<pos:position pos:line="92" pos:column="40"/></name></name> <operator pos:line="92" pos:column="41">=<pos:position pos:line="92" pos:column="42"/></operator> <literal type="boolean" pos:line="92" pos:column="43">true<pos:position pos:line="92" pos:column="47"/></literal></expr>;<pos:position pos:line="92" pos:column="48"/></expr_stmt>
        <if pos:line="93" pos:column="9">if <condition pos:line="93" pos:column="12">(<expr><call><name pos:line="93" pos:column="13">getConn<pos:position pos:line="93" pos:column="20"/></name><argument_list pos:line="93" pos:column="20">()<pos:position pos:line="93" pos:column="22"/></argument_list></call> <operator pos:line="93" pos:column="23">!=<pos:position pos:line="93" pos:column="25"/></operator> <name pos:line="93" pos:column="26">NULL<pos:position pos:line="93" pos:column="30"/></name> <operator pos:line="93" pos:column="31">&amp;&amp;<pos:position pos:line="93" pos:column="41"/></operator> <call><name><name pos:line="93" pos:column="34">Comm<pos:position pos:line="93" pos:column="38"/></name><operator pos:line="93" pos:column="38">::<pos:position pos:line="93" pos:column="40"/></operator><name pos:line="93" pos:column="40">IsConnOpen<pos:position pos:line="93" pos:column="50"/></name></name><argument_list pos:line="93" pos:column="50">(<argument><expr><call><name pos:line="93" pos:column="51">getConn<pos:position pos:line="93" pos:column="58"/></name><argument_list pos:line="93" pos:column="58">()<pos:position pos:line="93" pos:column="60"/></argument_list></call><operator pos:line="93" pos:column="60">-&gt;<pos:position pos:line="93" pos:column="65"/></operator><name pos:line="93" pos:column="62">clientConnection<pos:position pos:line="93" pos:column="78"/></name></expr></argument>)<pos:position pos:line="93" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="80"/></condition><then pos:line="93" pos:column="80"> <block pos:line="93" pos:column="81">{
            <decl_stmt><decl><type><name pos:line="94" pos:column="13">ACLFilledChecklist<pos:position pos:line="94" pos:column="31"/></name></type> <name pos:line="94" pos:column="32">ch<pos:position pos:line="94" pos:column="34"/></name><argument_list pos:line="94" pos:column="34">(<argument><expr><name pos:line="94" pos:column="35">NULL<pos:position pos:line="94" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="41">request<pos:position pos:line="94" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="50">NULL<pos:position pos:line="94" pos:column="54"/></name></expr></argument>)<pos:position pos:line="94" pos:column="55"/></argument_list></decl>;<pos:position pos:line="94" pos:column="56"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="95" pos:column="13">ch<pos:position pos:line="95" pos:column="15"/></name><operator pos:line="95" pos:column="15">.<pos:position pos:line="95" pos:column="16"/></operator><name pos:line="95" pos:column="16">src_addr<pos:position pos:line="95" pos:column="24"/></name></name> <operator pos:line="95" pos:column="25">=<pos:position pos:line="95" pos:column="26"/></operator> <name><name pos:line="95" pos:column="27">request<pos:position pos:line="95" pos:column="34"/></name><operator pos:line="95" pos:column="34">-&gt;<pos:position pos:line="95" pos:column="39"/></operator><name pos:line="95" pos:column="36">client_addr<pos:position pos:line="95" pos:column="47"/></name></name></expr>;<pos:position pos:line="95" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="96" pos:column="13">ch<pos:position pos:line="96" pos:column="15"/></name><operator pos:line="96" pos:column="15">.<pos:position pos:line="96" pos:column="16"/></operator><name pos:line="96" pos:column="16">my_addr<pos:position pos:line="96" pos:column="23"/></name></name> <operator pos:line="96" pos:column="24">=<pos:position pos:line="96" pos:column="25"/></operator> <name><name pos:line="96" pos:column="26">request<pos:position pos:line="96" pos:column="33"/></name><operator pos:line="96" pos:column="33">-&gt;<pos:position pos:line="96" pos:column="38"/></operator><name pos:line="96" pos:column="35">my_addr<pos:position pos:line="96" pos:column="42"/></name></name></expr>;<pos:position pos:line="96" pos:column="43"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="97" pos:column="13">tos_t<pos:position pos:line="97" pos:column="18"/></name></type> <name pos:line="97" pos:column="19">tos<pos:position pos:line="97" pos:column="22"/></name> <init pos:line="97" pos:column="23">= <expr><call><name pos:line="97" pos:column="25">aclMapTOS<pos:position pos:line="97" pos:column="34"/></name><argument_list pos:line="97" pos:column="34">(<argument><expr><name><name pos:line="97" pos:column="35">Ip<pos:position pos:line="97" pos:column="37"/></name><operator pos:line="97" pos:column="37">::<pos:position pos:line="97" pos:column="39"/></operator><name pos:line="97" pos:column="39">Qos<pos:position pos:line="97" pos:column="42"/></name><operator pos:line="97" pos:column="42">::<pos:position pos:line="97" pos:column="44"/></operator><name pos:line="97" pos:column="44">TheConfig<pos:position pos:line="97" pos:column="53"/></name><operator pos:line="97" pos:column="53">.<pos:position pos:line="97" pos:column="54"/></operator><name pos:line="97" pos:column="54">tosToClient<pos:position pos:line="97" pos:column="65"/></name></name></expr></argument>, <argument><expr><operator pos:line="97" pos:column="67">&amp;<pos:position pos:line="97" pos:column="72"/></operator><name pos:line="97" pos:column="68">ch<pos:position pos:line="97" pos:column="70"/></name></expr></argument>)<pos:position pos:line="97" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="97" pos:column="72"/></decl_stmt>
            <if pos:line="98" pos:column="13">if <condition pos:line="98" pos:column="16">(<expr><name pos:line="98" pos:column="17">tos<pos:position pos:line="98" pos:column="20"/></name></expr>)<pos:position pos:line="98" pos:column="21"/></condition><then pos:line="98" pos:column="21">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="99" pos:column="17">Ip<pos:position pos:line="99" pos:column="19"/></name><operator pos:line="99" pos:column="19">::<pos:position pos:line="99" pos:column="21"/></operator><name pos:line="99" pos:column="21">Qos<pos:position pos:line="99" pos:column="24"/></name><operator pos:line="99" pos:column="24">::<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="26">setSockTos<pos:position pos:line="99" pos:column="36"/></name></name><argument_list pos:line="99" pos:column="36">(<argument><expr><call><name pos:line="99" pos:column="37">getConn<pos:position pos:line="99" pos:column="44"/></name><argument_list pos:line="99" pos:column="44">()<pos:position pos:line="99" pos:column="46"/></argument_list></call><operator pos:line="99" pos:column="46">-&gt;<pos:position pos:line="99" pos:column="51"/></operator><name pos:line="99" pos:column="48">clientConnection<pos:position pos:line="99" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="66">tos<pos:position pos:line="99" pos:column="69"/></name></expr></argument>)<pos:position pos:line="99" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="71"/></expr_stmt></block></then></if>
        }<pos:position pos:line="100" pos:column="10"/></block></then></if>
    }<pos:position pos:line="101" pos:column="6"/></block></then></if>

    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><operator pos:line="103" pos:column="9">!<pos:position pos:line="103" pos:column="10"/></operator><name><name pos:line="103" pos:column="10">calloutContext<pos:position pos:line="103" pos:column="24"/></name><operator pos:line="103" pos:column="24">-&gt;<pos:position pos:line="103" pos:column="29"/></operator><name pos:line="103" pos:column="26">nfmarkToClientDone<pos:position pos:line="103" pos:column="44"/></name></name></expr>)<pos:position pos:line="103" pos:column="45"/></condition><then pos:line="103" pos:column="45"> <block pos:line="103" pos:column="46">{
        <expr_stmt><expr><name><name pos:line="104" pos:column="9">calloutContext<pos:position pos:line="104" pos:column="23"/></name><operator pos:line="104" pos:column="23">-&gt;<pos:position pos:line="104" pos:column="28"/></operator><name pos:line="104" pos:column="25">nfmarkToClientDone<pos:position pos:line="104" pos:column="43"/></name></name> <operator pos:line="104" pos:column="44">=<pos:position pos:line="104" pos:column="45"/></operator> <literal type="boolean" pos:line="104" pos:column="46">true<pos:position pos:line="104" pos:column="50"/></literal></expr>;<pos:position pos:line="104" pos:column="51"/></expr_stmt>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><call><name pos:line="105" pos:column="13">getConn<pos:position pos:line="105" pos:column="20"/></name><argument_list pos:line="105" pos:column="20">()<pos:position pos:line="105" pos:column="22"/></argument_list></call> <operator pos:line="105" pos:column="23">!=<pos:position pos:line="105" pos:column="25"/></operator> <name pos:line="105" pos:column="26">NULL<pos:position pos:line="105" pos:column="30"/></name> <operator pos:line="105" pos:column="31">&amp;&amp;<pos:position pos:line="105" pos:column="41"/></operator> <call><name><name pos:line="105" pos:column="34">Comm<pos:position pos:line="105" pos:column="38"/></name><operator pos:line="105" pos:column="38">::<pos:position pos:line="105" pos:column="40"/></operator><name pos:line="105" pos:column="40">IsConnOpen<pos:position pos:line="105" pos:column="50"/></name></name><argument_list pos:line="105" pos:column="50">(<argument><expr><call><name pos:line="105" pos:column="51">getConn<pos:position pos:line="105" pos:column="58"/></name><argument_list pos:line="105" pos:column="58">()<pos:position pos:line="105" pos:column="60"/></argument_list></call><operator pos:line="105" pos:column="60">-&gt;<pos:position pos:line="105" pos:column="65"/></operator><name pos:line="105" pos:column="62">clientConnection<pos:position pos:line="105" pos:column="78"/></name></expr></argument>)<pos:position pos:line="105" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="80"/></condition><then pos:line="105" pos:column="80"> <block pos:line="105" pos:column="81">{
            <decl_stmt><decl><type><name pos:line="106" pos:column="13">ACLFilledChecklist<pos:position pos:line="106" pos:column="31"/></name></type> <name pos:line="106" pos:column="32">ch<pos:position pos:line="106" pos:column="34"/></name><argument_list pos:line="106" pos:column="34">(<argument><expr><name pos:line="106" pos:column="35">NULL<pos:position pos:line="106" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="41">request<pos:position pos:line="106" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="50">NULL<pos:position pos:line="106" pos:column="54"/></name></expr></argument>)<pos:position pos:line="106" pos:column="55"/></argument_list></decl>;<pos:position pos:line="106" pos:column="56"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="107" pos:column="13">ch<pos:position pos:line="107" pos:column="15"/></name><operator pos:line="107" pos:column="15">.<pos:position pos:line="107" pos:column="16"/></operator><name pos:line="107" pos:column="16">src_addr<pos:position pos:line="107" pos:column="24"/></name></name> <operator pos:line="107" pos:column="25">=<pos:position pos:line="107" pos:column="26"/></operator> <name><name pos:line="107" pos:column="27">request<pos:position pos:line="107" pos:column="34"/></name><operator pos:line="107" pos:column="34">-&gt;<pos:position pos:line="107" pos:column="39"/></operator><name pos:line="107" pos:column="36">client_addr<pos:position pos:line="107" pos:column="47"/></name></name></expr>;<pos:position pos:line="107" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="108" pos:column="13">ch<pos:position pos:line="108" pos:column="15"/></name><operator pos:line="108" pos:column="15">.<pos:position pos:line="108" pos:column="16"/></operator><name pos:line="108" pos:column="16">my_addr<pos:position pos:line="108" pos:column="23"/></name></name> <operator pos:line="108" pos:column="24">=<pos:position pos:line="108" pos:column="25"/></operator> <name><name pos:line="108" pos:column="26">request<pos:position pos:line="108" pos:column="33"/></name><operator pos:line="108" pos:column="33">-&gt;<pos:position pos:line="108" pos:column="38"/></operator><name pos:line="108" pos:column="35">my_addr<pos:position pos:line="108" pos:column="42"/></name></name></expr>;<pos:position pos:line="108" pos:column="43"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="109" pos:column="13">nfmark_t<pos:position pos:line="109" pos:column="21"/></name></type> <name pos:line="109" pos:column="22">mark<pos:position pos:line="109" pos:column="26"/></name> <init pos:line="109" pos:column="27">= <expr><call><name pos:line="109" pos:column="29">aclMapNfmark<pos:position pos:line="109" pos:column="41"/></name><argument_list pos:line="109" pos:column="41">(<argument><expr><name><name pos:line="109" pos:column="42">Ip<pos:position pos:line="109" pos:column="44"/></name><operator pos:line="109" pos:column="44">::<pos:position pos:line="109" pos:column="46"/></operator><name pos:line="109" pos:column="46">Qos<pos:position pos:line="109" pos:column="49"/></name><operator pos:line="109" pos:column="49">::<pos:position pos:line="109" pos:column="51"/></operator><name pos:line="109" pos:column="51">TheConfig<pos:position pos:line="109" pos:column="60"/></name><operator pos:line="109" pos:column="60">.<pos:position pos:line="109" pos:column="61"/></operator><name pos:line="109" pos:column="61">nfmarkToClient<pos:position pos:line="109" pos:column="75"/></name></name></expr></argument>, <argument><expr><operator pos:line="109" pos:column="77">&amp;<pos:position pos:line="109" pos:column="82"/></operator><name pos:line="109" pos:column="78">ch<pos:position pos:line="109" pos:column="80"/></name></expr></argument>)<pos:position pos:line="109" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="109" pos:column="82"/></decl_stmt>
            <if pos:line="110" pos:column="13">if <condition pos:line="110" pos:column="16">(<expr><name pos:line="110" pos:column="17">mark<pos:position pos:line="110" pos:column="21"/></name></expr>)<pos:position pos:line="110" pos:column="22"/></condition><then pos:line="110" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="111" pos:column="17">Ip<pos:position pos:line="111" pos:column="19"/></name><operator pos:line="111" pos:column="19">::<pos:position pos:line="111" pos:column="21"/></operator><name pos:line="111" pos:column="21">Qos<pos:position pos:line="111" pos:column="24"/></name><operator pos:line="111" pos:column="24">::<pos:position pos:line="111" pos:column="26"/></operator><name pos:line="111" pos:column="26">setSockNfmark<pos:position pos:line="111" pos:column="39"/></name></name><argument_list pos:line="111" pos:column="39">(<argument><expr><call><name pos:line="111" pos:column="40">getConn<pos:position pos:line="111" pos:column="47"/></name><argument_list pos:line="111" pos:column="47">()<pos:position pos:line="111" pos:column="49"/></argument_list></call><operator pos:line="111" pos:column="49">-&gt;<pos:position pos:line="111" pos:column="54"/></operator><name pos:line="111" pos:column="51">clientConnection<pos:position pos:line="111" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="69">mark<pos:position pos:line="111" pos:column="73"/></name></expr></argument>)<pos:position pos:line="111" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="75"/></expr_stmt></block></then></if>
        }<pos:position pos:line="112" pos:column="10"/></block></then></if>
    }<pos:position pos:line="113" pos:column="6"/></block></then></if>

<cpp:if pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">if<pos:position pos:line="115" pos:column="4"/></cpp:directive> <expr><name pos:line="115" pos:column="5">USE_OPENSSL<pos:position pos:line="115" pos:column="16"/></name></expr></cpp:if>
    <comment type="line" pos:line="116" pos:column="5">// Even with calloutContext-&gt;error, we call sslBumpAccessCheck() to decide</comment>
    <comment type="line" pos:line="117" pos:column="5">// whether SslBump applies to this transaction. If it applies, we will</comment>
    <comment type="line" pos:line="118" pos:column="5">// attempt to bump the client to serve the error.</comment>
    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><operator pos:line="119" pos:column="9">!<pos:position pos:line="119" pos:column="10"/></operator><name><name pos:line="119" pos:column="10">calloutContext<pos:position pos:line="119" pos:column="24"/></name><operator pos:line="119" pos:column="24">-&gt;<pos:position pos:line="119" pos:column="29"/></operator><name pos:line="119" pos:column="26">sslBumpCheckDone<pos:position pos:line="119" pos:column="42"/></name></name></expr>)<pos:position pos:line="119" pos:column="43"/></condition><then pos:line="119" pos:column="43"> <block pos:line="119" pos:column="44">{
        <expr_stmt><expr><name><name pos:line="120" pos:column="9">calloutContext<pos:position pos:line="120" pos:column="23"/></name><operator pos:line="120" pos:column="23">-&gt;<pos:position pos:line="120" pos:column="28"/></operator><name pos:line="120" pos:column="25">sslBumpCheckDone<pos:position pos:line="120" pos:column="41"/></name></name> <operator pos:line="120" pos:column="42">=<pos:position pos:line="120" pos:column="43"/></operator> <literal type="boolean" pos:line="120" pos:column="44">true<pos:position pos:line="120" pos:column="48"/></literal></expr>;<pos:position pos:line="120" pos:column="49"/></expr_stmt>
        <if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><call><name><name pos:line="121" pos:column="13">calloutContext<pos:position pos:line="121" pos:column="27"/></name><operator pos:line="121" pos:column="27">-&gt;<pos:position pos:line="121" pos:column="32"/></operator><name pos:line="121" pos:column="29">sslBumpAccessCheck<pos:position pos:line="121" pos:column="47"/></name></name><argument_list pos:line="121" pos:column="47">()<pos:position pos:line="121" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="121" pos:column="50"/></condition><then pos:line="121" pos:column="50">
            <block type="pseudo"><return pos:line="122" pos:column="13">return;<pos:position pos:line="122" pos:column="20"/></return></block></then></if>
        <comment type="block" pos:line="123" pos:column="9">/* else no ssl bump required*/</comment>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if>
<cpp:endif pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">endif<pos:position pos:line="125" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="127" pos:column="5">if <condition pos:line="127" pos:column="8">(<expr><name><name pos:line="127" pos:column="9">calloutContext<pos:position pos:line="127" pos:column="23"/></name><operator pos:line="127" pos:column="23">-&gt;<pos:position pos:line="127" pos:column="28"/></operator><name pos:line="127" pos:column="25">error<pos:position pos:line="127" pos:column="30"/></name></name></expr>)<pos:position pos:line="127" pos:column="31"/></condition><then pos:line="127" pos:column="31"> <block pos:line="127" pos:column="32">{
        <decl_stmt><decl><type><specifier pos:line="128" pos:column="9">const<pos:position pos:line="128" pos:column="14"/></specifier> <name pos:line="128" pos:column="15">char<pos:position pos:line="128" pos:column="19"/></name> <modifier pos:line="128" pos:column="20">*<pos:position pos:line="128" pos:column="21"/></modifier></type><name pos:line="128" pos:column="21">storeUri<pos:position pos:line="128" pos:column="29"/></name> <init pos:line="128" pos:column="30">= <expr><call><name><name pos:line="128" pos:column="32">request<pos:position pos:line="128" pos:column="39"/></name><operator pos:line="128" pos:column="39">-&gt;<pos:position pos:line="128" pos:column="44"/></operator><name pos:line="128" pos:column="41">storeId<pos:position pos:line="128" pos:column="48"/></name></name><argument_list pos:line="128" pos:column="48">()<pos:position pos:line="128" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="128" pos:column="51"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="129" pos:column="9">StoreEntry<pos:position pos:line="129" pos:column="19"/></name> <modifier pos:line="129" pos:column="20">*<pos:position pos:line="129" pos:column="21"/></modifier></type><name pos:line="129" pos:column="21">e<pos:position pos:line="129" pos:column="22"/></name><init pos:line="129" pos:column="22">= <expr><call><name pos:line="129" pos:column="24">storeCreateEntry<pos:position pos:line="129" pos:column="40"/></name><argument_list pos:line="129" pos:column="40">(<argument><expr><name pos:line="129" pos:column="41">storeUri<pos:position pos:line="129" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="51">storeUri<pos:position pos:line="129" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="61">request<pos:position pos:line="129" pos:column="68"/></name><operator pos:line="129" pos:column="68">-&gt;<pos:position pos:line="129" pos:column="73"/></operator><name pos:line="129" pos:column="70">flags<pos:position pos:line="129" pos:column="75"/></name></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="77">request<pos:position pos:line="129" pos:column="84"/></name><operator pos:line="129" pos:column="84">-&gt;<pos:position pos:line="129" pos:column="89"/></operator><name pos:line="129" pos:column="86">method<pos:position pos:line="129" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="93"/></argument_list></call></expr></init></decl>;<pos:position pos:line="129" pos:column="94"/></decl_stmt>
<cpp:if pos:line="130" pos:column="1">#<cpp:directive pos:line="130" pos:column="2">if<pos:position pos:line="130" pos:column="4"/></cpp:directive> <expr><name pos:line="130" pos:column="5">USE_OPENSSL<pos:position pos:line="130" pos:column="16"/></name></expr></cpp:if>
        <if pos:line="131" pos:column="9">if <condition pos:line="131" pos:column="12">(<expr><call><name pos:line="131" pos:column="13">sslBumpNeeded<pos:position pos:line="131" pos:column="26"/></name><argument_list pos:line="131" pos:column="26">()<pos:position pos:line="131" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="131" pos:column="29"/></condition><then pos:line="131" pos:column="29"> <block pos:line="131" pos:column="30">{
            <comment type="line" pos:line="132" pos:column="13">// We have to serve an error, so bump the client first.</comment>
            <expr_stmt><expr><call><name pos:line="133" pos:column="13">sslBumpNeed<pos:position pos:line="133" pos:column="24"/></name><argument_list pos:line="133" pos:column="24">(<argument><expr><name><name pos:line="133" pos:column="25">Ssl<pos:position pos:line="133" pos:column="28"/></name><operator pos:line="133" pos:column="28">::<pos:position pos:line="133" pos:column="30"/></operator><name pos:line="133" pos:column="30">bumpClientFirst<pos:position pos:line="133" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="47"/></expr_stmt>
            <comment type="line" pos:line="134" pos:column="13">// set final error but delay sending until we bump</comment>
            <decl_stmt><decl><type><name><name pos:line="135" pos:column="13">Ssl<pos:position pos:line="135" pos:column="16"/></name><operator pos:line="135" pos:column="16">::<pos:position pos:line="135" pos:column="18"/></operator><name pos:line="135" pos:column="18">ServerBump<pos:position pos:line="135" pos:column="28"/></name></name> <modifier pos:line="135" pos:column="29">*<pos:position pos:line="135" pos:column="30"/></modifier></type><name pos:line="135" pos:column="30">srvBump<pos:position pos:line="135" pos:column="37"/></name> <init pos:line="135" pos:column="38">= <expr><operator pos:line="135" pos:column="40">new<pos:position pos:line="135" pos:column="43"/></operator> <call><name><name pos:line="135" pos:column="44">Ssl<pos:position pos:line="135" pos:column="47"/></name><operator pos:line="135" pos:column="47">::<pos:position pos:line="135" pos:column="49"/></operator><name pos:line="135" pos:column="49">ServerBump<pos:position pos:line="135" pos:column="59"/></name></name><argument_list pos:line="135" pos:column="59">(<argument><expr><name pos:line="135" pos:column="60">request<pos:position pos:line="135" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="69">e<pos:position pos:line="135" pos:column="70"/></name></expr></argument>)<pos:position pos:line="135" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="135" pos:column="72"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="136" pos:column="13">errorAppendEntry<pos:position pos:line="136" pos:column="29"/></name><argument_list pos:line="136" pos:column="29">(<argument><expr><name pos:line="136" pos:column="30">e<pos:position pos:line="136" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="136" pos:column="33">calloutContext<pos:position pos:line="136" pos:column="47"/></name><operator pos:line="136" pos:column="47">-&gt;<pos:position pos:line="136" pos:column="52"/></operator><name pos:line="136" pos:column="49">error<pos:position pos:line="136" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="137" pos:column="13">calloutContext<pos:position pos:line="137" pos:column="27"/></name><operator pos:line="137" pos:column="27">-&gt;<pos:position pos:line="137" pos:column="32"/></operator><name pos:line="137" pos:column="29">error<pos:position pos:line="137" pos:column="34"/></name></name> <operator pos:line="137" pos:column="35">=<pos:position pos:line="137" pos:column="36"/></operator> <name pos:line="137" pos:column="37">NULL<pos:position pos:line="137" pos:column="41"/></name></expr>;<pos:position pos:line="137" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="138" pos:column="13">getConn<pos:position pos:line="138" pos:column="20"/></name><argument_list pos:line="138" pos:column="20">()<pos:position pos:line="138" pos:column="22"/></argument_list></call><operator pos:line="138" pos:column="22">-&gt;<pos:position pos:line="138" pos:column="27"/></operator><call><name pos:line="138" pos:column="24">setServerBump<pos:position pos:line="138" pos:column="37"/></name><argument_list pos:line="138" pos:column="37">(<argument><expr><name pos:line="138" pos:column="38">srvBump<pos:position pos:line="138" pos:column="45"/></name></expr></argument>)<pos:position pos:line="138" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="139" pos:column="13">e<pos:position pos:line="139" pos:column="14"/></name><operator pos:line="139" pos:column="14">-&gt;<pos:position pos:line="139" pos:column="19"/></operator><name pos:line="139" pos:column="16">unlock<pos:position pos:line="139" pos:column="22"/></name></name><argument_list pos:line="139" pos:column="22">(<argument><expr><literal type="string" pos:line="139" pos:column="23">"ClientHttpRequest::doCallouts+sslBumpNeeded"<pos:position pos:line="139" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="70"/></expr_stmt>
        }<pos:position pos:line="140" pos:column="10"/></block></then> <else pos:line="140" pos:column="11">else
<cpp:endif pos:line="141" pos:column="1">#<cpp:directive pos:line="141" pos:column="2">endif<pos:position pos:line="141" pos:column="7"/></cpp:directive></cpp:endif>
        <block pos:line="142" pos:column="9">{
            <comment type="line" pos:line="143" pos:column="13">// send the error to the client now</comment>
            <decl_stmt><decl><type><name pos:line="144" pos:column="13">clientStreamNode<pos:position pos:line="144" pos:column="29"/></name> <modifier pos:line="144" pos:column="30">*<pos:position pos:line="144" pos:column="31"/></modifier></type><name pos:line="144" pos:column="31">node<pos:position pos:line="144" pos:column="35"/></name> <init pos:line="144" pos:column="36">= <expr><operator pos:line="144" pos:column="38">(<pos:position pos:line="144" pos:column="39"/></operator><name pos:line="144" pos:column="39">clientStreamNode<pos:position pos:line="144" pos:column="55"/></name> <operator pos:line="144" pos:column="56">*<pos:position pos:line="144" pos:column="57"/></operator><operator pos:line="144" pos:column="57">)<pos:position pos:line="144" pos:column="58"/></operator><name><name pos:line="144" pos:column="58">client_stream<pos:position pos:line="144" pos:column="71"/></name><operator pos:line="144" pos:column="71">.<pos:position pos:line="144" pos:column="72"/></operator><name pos:line="144" pos:column="72">tail<pos:position pos:line="144" pos:column="76"/></name><operator pos:line="144" pos:column="76">-&gt;<pos:position pos:line="144" pos:column="81"/></operator><name pos:line="144" pos:column="78">prev<pos:position pos:line="144" pos:column="82"/></name><operator pos:line="144" pos:column="82">-&gt;<pos:position pos:line="144" pos:column="87"/></operator><name pos:line="144" pos:column="84">data<pos:position pos:line="144" pos:column="88"/></name></name></expr></init></decl>;<pos:position pos:line="144" pos:column="89"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="145" pos:column="13">clientReplyContext<pos:position pos:line="145" pos:column="31"/></name> <modifier pos:line="145" pos:column="32">*<pos:position pos:line="145" pos:column="33"/></modifier></type><name pos:line="145" pos:column="33">repContext<pos:position pos:line="145" pos:column="43"/></name> <init pos:line="145" pos:column="44">= <expr><cast type="dynamic" pos:line="145" pos:column="46">dynamic_cast<argument_list type="generic" pos:line="145" pos:column="58">&lt;<argument><expr><name pos:line="145" pos:column="59">clientReplyContext<pos:position pos:line="145" pos:column="77"/></name> <operator pos:line="145" pos:column="78">*<pos:position pos:line="145" pos:column="79"/></operator></expr></argument>&gt;<pos:position pos:line="145" pos:column="83"/></argument_list><argument_list pos:line="145" pos:column="80">(<argument><expr><call><name><name pos:line="145" pos:column="81">node<pos:position pos:line="145" pos:column="85"/></name><operator pos:line="145" pos:column="85">-&gt;<pos:position pos:line="145" pos:column="90"/></operator><name pos:line="145" pos:column="87">data<pos:position pos:line="145" pos:column="91"/></name><operator pos:line="145" pos:column="91">.<pos:position pos:line="145" pos:column="92"/></operator><name pos:line="145" pos:column="92">getRaw<pos:position pos:line="145" pos:column="98"/></name></name><argument_list pos:line="145" pos:column="98">()<pos:position pos:line="145" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="145" pos:column="101"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="145" pos:column="102"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="146" pos:column="13">assert<pos:position pos:line="146" pos:column="19"/></name> <argument_list pos:line="146" pos:column="20">(<argument><expr><name pos:line="146" pos:column="21">repContext<pos:position pos:line="146" pos:column="31"/></name></expr></argument>)<pos:position pos:line="146" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="147" pos:column="13">repContext<pos:position pos:line="147" pos:column="23"/></name><operator pos:line="147" pos:column="23">-&gt;<pos:position pos:line="147" pos:column="28"/></operator><name pos:line="147" pos:column="25">setReplyToStoreEntry<pos:position pos:line="147" pos:column="45"/></name></name><argument_list pos:line="147" pos:column="45">(<argument><expr><name pos:line="147" pos:column="46">e<pos:position pos:line="147" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="147" pos:column="49">"immediate SslBump error"<pos:position pos:line="147" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="76"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="148" pos:column="13">errorAppendEntry<pos:position pos:line="148" pos:column="29"/></name><argument_list pos:line="148" pos:column="29">(<argument><expr><name pos:line="148" pos:column="30">e<pos:position pos:line="148" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="148" pos:column="33">calloutContext<pos:position pos:line="148" pos:column="47"/></name><operator pos:line="148" pos:column="47">-&gt;<pos:position pos:line="148" pos:column="52"/></operator><name pos:line="148" pos:column="49">error<pos:position pos:line="148" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="149" pos:column="13">calloutContext<pos:position pos:line="149" pos:column="27"/></name><operator pos:line="149" pos:column="27">-&gt;<pos:position pos:line="149" pos:column="32"/></operator><name pos:line="149" pos:column="29">error<pos:position pos:line="149" pos:column="34"/></name></name> <operator pos:line="149" pos:column="35">=<pos:position pos:line="149" pos:column="36"/></operator> <name pos:line="149" pos:column="37">NULL<pos:position pos:line="149" pos:column="41"/></name></expr>;<pos:position pos:line="149" pos:column="42"/></expr_stmt>
            <if pos:line="150" pos:column="13">if <condition pos:line="150" pos:column="16">(<expr><name><name pos:line="150" pos:column="17">calloutContext<pos:position pos:line="150" pos:column="31"/></name><operator pos:line="150" pos:column="31">-&gt;<pos:position pos:line="150" pos:column="36"/></operator><name pos:line="150" pos:column="33">readNextRequest<pos:position pos:line="150" pos:column="48"/></name></name> <operator pos:line="150" pos:column="49">&amp;&amp;<pos:position pos:line="150" pos:column="59"/></operator> <call><name pos:line="150" pos:column="52">getConn<pos:position pos:line="150" pos:column="59"/></name><argument_list pos:line="150" pos:column="59">()<pos:position pos:line="150" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="150" pos:column="62"/></condition><then pos:line="150" pos:column="62">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="151" pos:column="17">getConn<pos:position pos:line="151" pos:column="24"/></name><argument_list pos:line="151" pos:column="24">()<pos:position pos:line="151" pos:column="26"/></argument_list></call><operator pos:line="151" pos:column="26">-&gt;<pos:position pos:line="151" pos:column="31"/></operator><name><name pos:line="151" pos:column="28">flags<pos:position pos:line="151" pos:column="33"/></name><operator pos:line="151" pos:column="33">.<pos:position pos:line="151" pos:column="34"/></operator><name pos:line="151" pos:column="34">readMore<pos:position pos:line="151" pos:column="42"/></name></name> <operator pos:line="151" pos:column="43">=<pos:position pos:line="151" pos:column="44"/></operator> <literal type="boolean" pos:line="151" pos:column="45">true<pos:position pos:line="151" pos:column="49"/></literal></expr>;<pos:position pos:line="151" pos:column="50"/></expr_stmt></block></then></if> <comment type="line" pos:line="151" pos:column="51">// resume any pipeline reads.</comment>
            <expr_stmt><expr><name pos:line="152" pos:column="13">node<pos:position pos:line="152" pos:column="17"/></name> <operator pos:line="152" pos:column="18">=<pos:position pos:line="152" pos:column="19"/></operator> <operator pos:line="152" pos:column="20">(<pos:position pos:line="152" pos:column="21"/></operator><name pos:line="152" pos:column="21">clientStreamNode<pos:position pos:line="152" pos:column="37"/></name> <operator pos:line="152" pos:column="38">*<pos:position pos:line="152" pos:column="39"/></operator><operator pos:line="152" pos:column="39">)<pos:position pos:line="152" pos:column="40"/></operator><name><name pos:line="152" pos:column="40">client_stream<pos:position pos:line="152" pos:column="53"/></name><operator pos:line="152" pos:column="53">.<pos:position pos:line="152" pos:column="54"/></operator><name pos:line="152" pos:column="54">tail<pos:position pos:line="152" pos:column="58"/></name><operator pos:line="152" pos:column="58">-&gt;<pos:position pos:line="152" pos:column="63"/></operator><name pos:line="152" pos:column="60">data<pos:position pos:line="152" pos:column="64"/></name></name></expr>;<pos:position pos:line="152" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="153" pos:column="13">clientStreamRead<pos:position pos:line="153" pos:column="29"/></name><argument_list pos:line="153" pos:column="29">(<argument><expr><name pos:line="153" pos:column="30">node<pos:position pos:line="153" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="153" pos:column="36">this<pos:position pos:line="153" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="153" pos:column="42">node<pos:position pos:line="153" pos:column="46"/></name><operator pos:line="153" pos:column="46">-&gt;<pos:position pos:line="153" pos:column="51"/></operator><name pos:line="153" pos:column="48">readBuffer<pos:position pos:line="153" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="153" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="154" pos:column="13">e<pos:position pos:line="154" pos:column="14"/></name><operator pos:line="154" pos:column="14">-&gt;<pos:position pos:line="154" pos:column="19"/></operator><name pos:line="154" pos:column="16">unlock<pos:position pos:line="154" pos:column="22"/></name></name><argument_list pos:line="154" pos:column="22">(<argument><expr><literal type="string" pos:line="154" pos:column="23">"ClientHttpRequest::doCallouts-sslBumpNeeded"<pos:position pos:line="154" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="70"/></expr_stmt>
            <return pos:line="155" pos:column="13">return;<pos:position pos:line="155" pos:column="20"/></return>
        }<pos:position pos:line="156" pos:column="10"/></block></else></if>
    }<pos:position pos:line="157" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="159" pos:column="5">cbdataReferenceDone<pos:position pos:line="159" pos:column="24"/></name><argument_list pos:line="159" pos:column="24">(<argument><expr><name><name pos:line="159" pos:column="25">calloutContext<pos:position pos:line="159" pos:column="39"/></name><operator pos:line="159" pos:column="39">-&gt;<pos:position pos:line="159" pos:column="44"/></operator><name pos:line="159" pos:column="41">http<pos:position pos:line="159" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="160" pos:column="5">delete<pos:position pos:line="160" pos:column="11"/></operator> <name pos:line="160" pos:column="12">calloutContext<pos:position pos:line="160" pos:column="26"/></name></expr>;<pos:position pos:line="160" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="161" pos:column="5">calloutContext<pos:position pos:line="161" pos:column="19"/></name> <operator pos:line="161" pos:column="20">=<pos:position pos:line="161" pos:column="21"/></operator> <name pos:line="161" pos:column="22">NULL<pos:position pos:line="161" pos:column="26"/></name></expr>;<pos:position pos:line="161" pos:column="27"/></expr_stmt>
<cpp:if pos:line="162" pos:column="1">#<cpp:directive pos:line="162" pos:column="2">if<pos:position pos:line="162" pos:column="4"/></cpp:directive> <expr><name pos:line="162" pos:column="5">HEADERS_LOG<pos:position pos:line="162" pos:column="16"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="164" pos:column="5">headersLog<pos:position pos:line="164" pos:column="15"/></name><argument_list pos:line="164" pos:column="15">(<argument><expr><literal type="number" pos:line="164" pos:column="16">0<pos:position pos:line="164" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="164" pos:column="19">1<pos:position pos:line="164" pos:column="20"/></literal></expr></argument>, <argument><expr><name><name pos:line="164" pos:column="22">request<pos:position pos:line="164" pos:column="29"/></name><operator pos:line="164" pos:column="29">-&gt;<pos:position pos:line="164" pos:column="34"/></operator><name pos:line="164" pos:column="31">method<pos:position pos:line="164" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="164" pos:column="39">request<pos:position pos:line="164" pos:column="46"/></name></expr></argument>)<pos:position pos:line="164" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="48"/></expr_stmt>
<cpp:endif pos:line="165" pos:column="1">#<cpp:directive pos:line="165" pos:column="2">endif<pos:position pos:line="165" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="167" pos:column="5">debugs<pos:position pos:line="167" pos:column="11"/></name><argument_list pos:line="167" pos:column="11">(<argument><expr><literal type="number" pos:line="167" pos:column="12">83<pos:position pos:line="167" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="167" pos:column="16">3<pos:position pos:line="167" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="167" pos:column="19">HERE<pos:position pos:line="167" pos:column="23"/></name> <operator pos:line="167" pos:column="24">&lt;&lt;<pos:position pos:line="167" pos:column="32"/></operator> <literal type="string" pos:line="167" pos:column="27">"calling processRequest()"<pos:position pos:line="167" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="55"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="168" pos:column="5">processRequest<pos:position pos:line="168" pos:column="19"/></name><argument_list pos:line="168" pos:column="19">()<pos:position pos:line="168" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="22"/></expr_stmt>

<cpp:if pos:line="170" pos:column="1">#<cpp:directive pos:line="170" pos:column="2">if<pos:position pos:line="170" pos:column="4"/></cpp:directive> <expr><name pos:line="170" pos:column="5">ICAP_CLIENT<pos:position pos:line="170" pos:column="16"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name><name pos:line="171" pos:column="5">Adaptation<pos:position pos:line="171" pos:column="15"/></name><operator pos:line="171" pos:column="15">::<pos:position pos:line="171" pos:column="17"/></operator><name pos:line="171" pos:column="17">Icap<pos:position pos:line="171" pos:column="21"/></name><operator pos:line="171" pos:column="21">::<pos:position pos:line="171" pos:column="23"/></operator><name pos:line="171" pos:column="23">History<pos:position pos:line="171" pos:column="30"/></name><operator pos:line="171" pos:column="30">::<pos:position pos:line="171" pos:column="32"/></operator><name pos:line="171" pos:column="32">Pointer<pos:position pos:line="171" pos:column="39"/></name></name></type> <name pos:line="171" pos:column="40">ih<pos:position pos:line="171" pos:column="42"/></name> <init pos:line="171" pos:column="43">= <expr><call><name><name pos:line="171" pos:column="45">request<pos:position pos:line="171" pos:column="52"/></name><operator pos:line="171" pos:column="52">-&gt;<pos:position pos:line="171" pos:column="57"/></operator><name pos:line="171" pos:column="54">icapHistory<pos:position pos:line="171" pos:column="65"/></name></name><argument_list pos:line="171" pos:column="65">()<pos:position pos:line="171" pos:column="67"/></argument_list></call></expr></init></decl>;<pos:position pos:line="171" pos:column="68"/></decl_stmt>
    <if pos:line="172" pos:column="5">if <condition pos:line="172" pos:column="8">(<expr><name pos:line="172" pos:column="9">ih<pos:position pos:line="172" pos:column="11"/></name> <operator pos:line="172" pos:column="12">!=<pos:position pos:line="172" pos:column="14"/></operator> <name pos:line="172" pos:column="15">NULL<pos:position pos:line="172" pos:column="19"/></name></expr>)<pos:position pos:line="172" pos:column="20"/></condition><then pos:line="172" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="173" pos:column="9">ih<pos:position pos:line="173" pos:column="11"/></name><operator pos:line="173" pos:column="11">-&gt;<pos:position pos:line="173" pos:column="16"/></operator><name pos:line="173" pos:column="13">logType<pos:position pos:line="173" pos:column="20"/></name></name> <operator pos:line="173" pos:column="21">=<pos:position pos:line="173" pos:column="22"/></operator> <name pos:line="173" pos:column="23">logType<pos:position pos:line="173" pos:column="30"/></name></expr>;<pos:position pos:line="173" pos:column="31"/></expr_stmt></block></then></if>
<cpp:endif pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">endif<pos:position pos:line="174" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="175" pos:column="2"/></block></function></unit>

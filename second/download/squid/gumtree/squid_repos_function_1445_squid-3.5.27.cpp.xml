<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1445_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">memcasecmp<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">char<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">b1<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">b2<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="44">SBuf<pos:position pos:line="2" pos:column="48"/></name><operator pos:line="2" pos:column="48">::<pos:position pos:line="2" pos:column="50"/></operator><name pos:line="2" pos:column="50">size_type<pos:position pos:line="2" pos:column="59"/></name></name></type> <name pos:line="2" pos:column="60">len<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rv<pos:position pos:line="4" pos:column="11"/></name><init pos:line="4" pos:column="11">=<expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><name pos:line="5" pos:column="12">len<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">&gt;<pos:position pos:line="5" pos:column="20"/></operator> <literal type="number" pos:line="5" pos:column="18">0<pos:position pos:line="5" pos:column="19"/></literal></expr>)<pos:position pos:line="5" pos:column="20"/></condition> <block pos:line="5" pos:column="21">{
        <expr_stmt><expr><name pos:line="6" pos:column="9">rv<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">tolower<pos:position pos:line="6" pos:column="21"/></name><argument_list pos:line="6" pos:column="21">(<argument><expr><operator pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">b1<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call><operator pos:line="6" pos:column="26">-<pos:position pos:line="6" pos:column="27"/></operator><call><name pos:line="6" pos:column="27">tolower<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><operator pos:line="6" pos:column="35">*<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="36">b2<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">rv<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">!=<pos:position pos:line="7" pos:column="18"/></operator> <literal type="number" pos:line="7" pos:column="19">0<pos:position pos:line="7" pos:column="20"/></literal></expr>)<pos:position pos:line="7" pos:column="21"/></condition><then pos:line="7" pos:column="21">
            <block type="pseudo"><return pos:line="8" pos:column="13">return <expr><name pos:line="8" pos:column="20">rv<pos:position pos:line="8" pos:column="22"/></name></expr>;<pos:position pos:line="8" pos:column="23"/></return></block></then></if>
        <expr_stmt><expr><operator pos:line="9" pos:column="9">++<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">b1<pos:position pos:line="9" pos:column="13"/></name></expr>;<pos:position pos:line="9" pos:column="14"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="10" pos:column="9">++<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">b2<pos:position pos:line="10" pos:column="13"/></name></expr>;<pos:position pos:line="10" pos:column="14"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="11" pos:column="9">--<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">len<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></while>
    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">rv<pos:position pos:line="13" pos:column="14"/></name></expr>;<pos:position pos:line="13" pos:column="15"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

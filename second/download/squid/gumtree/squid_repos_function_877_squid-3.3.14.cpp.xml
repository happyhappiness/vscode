<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_877_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">comm_apply_flags<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">int<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">new_socket<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>,
                 <parameter><decl><type><name><name pos:line="3" pos:column="18">Ip<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">::<pos:position pos:line="3" pos:column="22"/></operator><name pos:line="3" pos:column="22">Address<pos:position pos:line="3" pos:column="29"/></name></name> <modifier pos:line="3" pos:column="30">&amp;<pos:position pos:line="3" pos:column="35"/></modifier></type><name pos:line="3" pos:column="31">addr<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>,
                 <parameter><decl><type><name pos:line="4" pos:column="18">int<pos:position pos:line="4" pos:column="21"/></name></type> <name pos:line="4" pos:column="22">flags<pos:position pos:line="4" pos:column="27"/></name></decl></parameter>,
                 <parameter><decl><type><name><name pos:line="5" pos:column="18">struct<pos:position pos:line="5" pos:column="24"/></name> <name pos:line="5" pos:column="25">addrinfo<pos:position pos:line="5" pos:column="33"/></name></name> <modifier pos:line="5" pos:column="34">*<pos:position pos:line="5" pos:column="35"/></modifier></type><name pos:line="5" pos:column="35">AI<pos:position pos:line="5" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="38"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">new_socket<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">&gt;=<pos:position pos:line="7" pos:column="28"/></operator> <literal type="number" pos:line="7" pos:column="26">0<pos:position pos:line="7" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">AI<pos:position pos:line="8" pos:column="14"/></name></expr></argument>)<pos:position pos:line="8" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="16"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">int<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">sock_type<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><name><name pos:line="9" pos:column="27">AI<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">ai_socktype<pos:position pos:line="9" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><operator pos:line="11" pos:column="10">(<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">flags<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">&amp;<pos:position pos:line="11" pos:column="22"/></operator> <name pos:line="11" pos:column="19">COMM_NOCLOEXEC<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">)<pos:position pos:line="11" pos:column="34"/></operator></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">commSetCloseOnExec<pos:position pos:line="12" pos:column="27"/></name><argument_list pos:line="12" pos:column="27">(<argument><expr><name pos:line="12" pos:column="28">new_socket<pos:position pos:line="12" pos:column="38"/></name></expr></argument>)<pos:position pos:line="12" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="40"/></expr_stmt></block></then></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">(<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">flags<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">&amp;<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="18">COMM_REUSEADDR<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">)<pos:position pos:line="14" pos:column="33"/></operator></expr>)<pos:position pos:line="14" pos:column="34"/></condition><then pos:line="14" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="9">commSetReuseAddr<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">new_socket<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name><name pos:line="17" pos:column="9">addr<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">.<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">GetPort<pos:position pos:line="17" pos:column="21"/></name></name><argument_list pos:line="17" pos:column="21">()<pos:position pos:line="17" pos:column="23"/></argument_list></call> <operator pos:line="17" pos:column="24">&gt;<pos:position pos:line="17" pos:column="28"/></operator> <operator pos:line="17" pos:column="26">(<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">unsigned<pos:position pos:line="17" pos:column="35"/></name> <name pos:line="17" pos:column="36">short<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">)<pos:position pos:line="17" pos:column="42"/></operator> <literal type="number" pos:line="17" pos:column="43">0<pos:position pos:line="17" pos:column="44"/></literal></expr>)<pos:position pos:line="17" pos:column="45"/></condition><then pos:line="17" pos:column="45"> <block pos:line="17" pos:column="46">{
<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><name pos:line="18" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="18" pos:column="20"/></name></expr></cpp:if>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">sock_type<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">!=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">SOCK_DGRAM<pos:position pos:line="19" pos:column="36"/></name></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37">
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="13">commSetNoLinger<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name pos:line="21" pos:column="29">new_socket<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt></block></then></if>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">opt_reuseaddr<pos:position pos:line="23" pos:column="26"/></name></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="24" pos:column="13">commSetReuseAddr<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">new_socket<pos:position pos:line="24" pos:column="40"/></name></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="27" pos:column="5">/* MUST be done before binding or face OS Error: "(99) Cannot assign requested address"... */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">flags<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">&amp;<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="18">COMM_TRANSPARENT<pos:position pos:line="28" pos:column="34"/></name><operator pos:line="28" pos:column="34">)<pos:position pos:line="28" pos:column="35"/></operator></expr>)<pos:position pos:line="28" pos:column="36"/></condition><then pos:line="28" pos:column="36"> <block pos:line="28" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">comm_set_transparent<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">(<argument><expr><name pos:line="29" pos:column="30">new_socket<pos:position pos:line="29" pos:column="40"/></name></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">( <expr><operator pos:line="32" pos:column="10">(<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">flags<pos:position pos:line="32" pos:column="16"/></name> <operator pos:line="32" pos:column="17">&amp;<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="19">COMM_DOBIND<pos:position pos:line="32" pos:column="30"/></name><operator pos:line="32" pos:column="30">)<pos:position pos:line="32" pos:column="31"/></operator> <operator pos:line="32" pos:column="32">||<pos:position pos:line="32" pos:column="34"/></operator> <call><name><name pos:line="32" pos:column="35">addr<pos:position pos:line="32" pos:column="39"/></name><operator pos:line="32" pos:column="39">.<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="40">GetPort<pos:position pos:line="32" pos:column="47"/></name></name><argument_list pos:line="32" pos:column="47">()<pos:position pos:line="32" pos:column="49"/></argument_list></call> <operator pos:line="32" pos:column="50">&gt;<pos:position pos:line="32" pos:column="54"/></operator> <literal type="number" pos:line="32" pos:column="52">0<pos:position pos:line="32" pos:column="53"/></literal> <operator pos:line="32" pos:column="54">||<pos:position pos:line="32" pos:column="56"/></operator> <operator pos:line="32" pos:column="57">!<pos:position pos:line="32" pos:column="58"/></operator><call><name><name pos:line="32" pos:column="58">addr<pos:position pos:line="32" pos:column="62"/></name><operator pos:line="32" pos:column="62">.<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="63">IsAnyAddr<pos:position pos:line="32" pos:column="72"/></name></name><argument_list pos:line="32" pos:column="72">()<pos:position pos:line="32" pos:column="74"/></argument_list></call></expr> )<pos:position pos:line="32" pos:column="76"/></condition><then pos:line="32" pos:column="76"> <block pos:line="32" pos:column="77">{
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">( <expr><operator pos:line="33" pos:column="14">!<pos:position pos:line="33" pos:column="15"/></operator><operator pos:line="33" pos:column="15">(<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">flags<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">&amp;<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="24">COMM_DOBIND<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">)<pos:position pos:line="33" pos:column="36"/></operator> <operator pos:line="33" pos:column="37">&amp;&amp;<pos:position pos:line="33" pos:column="47"/></operator> <call><name><name pos:line="33" pos:column="40">addr<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">.<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="45">IsAnyAddr<pos:position pos:line="33" pos:column="54"/></name></name><argument_list pos:line="33" pos:column="54">()<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr> )<pos:position pos:line="33" pos:column="58"/></condition><then pos:line="33" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="34" pos:column="13">debugs<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><literal type="number" pos:line="34" pos:column="20">5<pos:position pos:line="34" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="23">DBG_IMPORTANT<pos:position pos:line="34" pos:column="36"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="34" pos:column="37">"WARNING: Squid is attempting to bind() port "<pos:position pos:line="34" pos:column="83"/></literal> <operator pos:line="34" pos:column="84">&lt;&lt;<pos:position pos:line="34" pos:column="92"/></operator> <name pos:line="34" pos:column="87">addr<pos:position pos:line="34" pos:column="91"/></name> <operator pos:line="34" pos:column="92">&lt;&lt;<pos:position pos:line="34" pos:column="100"/></operator> <literal type="string" pos:line="34" pos:column="95">" without being a listener."<pos:position pos:line="34" pos:column="123"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="125"/></expr_stmt></block></then></if>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">( <expr><call><name><name pos:line="35" pos:column="14">addr<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">.<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="19">IsNoAddr<pos:position pos:line="35" pos:column="27"/></name></name><argument_list pos:line="35" pos:column="27">()<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr> )<pos:position pos:line="35" pos:column="31"/></condition><then pos:line="35" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="13">debugs<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><literal type="number" pos:line="36" pos:column="20">5<pos:position pos:line="36" pos:column="21"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="36" pos:column="22">0<pos:position pos:line="36" pos:column="23"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="36" pos:column="24">"CRITICAL: Squid is attempting to bind() port "<pos:position pos:line="36" pos:column="71"/></literal> <operator pos:line="36" pos:column="72">&lt;&lt;<pos:position pos:line="36" pos:column="80"/></operator> <name pos:line="36" pos:column="75">addr<pos:position pos:line="36" pos:column="79"/></name> <operator pos:line="36" pos:column="80">&lt;&lt;<pos:position pos:line="36" pos:column="88"/></operator> <literal type="string" pos:line="36" pos:column="83">"!!"<pos:position pos:line="36" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="89"/></expr_stmt></block></then></if>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">commBind<pos:position pos:line="38" pos:column="21"/></name><argument_list pos:line="38" pos:column="21">(<argument><expr><name pos:line="38" pos:column="22">new_socket<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="34">*<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="35">AI<pos:position pos:line="38" pos:column="37"/></name></expr></argument>)<pos:position pos:line="38" pos:column="38"/></argument_list></call> <operator pos:line="38" pos:column="39">!=<pos:position pos:line="38" pos:column="41"/></operator> <name pos:line="38" pos:column="42">COMM_OK<pos:position pos:line="38" pos:column="49"/></name></expr>)<pos:position pos:line="38" pos:column="50"/></condition><then pos:line="38" pos:column="50"> <block pos:line="38" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">comm_close<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">new_socket<pos:position pos:line="39" pos:column="34"/></name></expr></argument>)<pos:position pos:line="39" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt>
            <return pos:line="40" pos:column="13">return <expr><operator pos:line="40" pos:column="20">-<pos:position pos:line="40" pos:column="21"/></operator><literal type="number" pos:line="40" pos:column="21">1<pos:position pos:line="40" pos:column="22"/></literal></expr>;<pos:position pos:line="40" pos:column="23"/></return>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></then></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><name pos:line="44" pos:column="9">flags<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">&amp;<pos:position pos:line="44" pos:column="20"/></operator> <name pos:line="44" pos:column="17">COMM_NONBLOCKING<pos:position pos:line="44" pos:column="33"/></name></expr>)<pos:position pos:line="44" pos:column="34"/></condition><then pos:line="44" pos:column="34">
        <block type="pseudo"><if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><call><name pos:line="45" pos:column="13">commSetNonBlocking<pos:position pos:line="45" pos:column="31"/></name><argument_list pos:line="45" pos:column="31">(<argument><expr><name pos:line="45" pos:column="32">new_socket<pos:position pos:line="45" pos:column="42"/></name></expr></argument>)<pos:position pos:line="45" pos:column="43"/></argument_list></call> <operator pos:line="45" pos:column="44">==<pos:position pos:line="45" pos:column="46"/></operator> <name pos:line="45" pos:column="47">COMM_ERROR<pos:position pos:line="45" pos:column="57"/></name></expr>)<pos:position pos:line="45" pos:column="58"/></condition><then pos:line="45" pos:column="58"> <block pos:line="45" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="46" pos:column="13">comm_close<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><name pos:line="46" pos:column="24">new_socket<pos:position pos:line="46" pos:column="34"/></name></expr></argument>)<pos:position pos:line="46" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
            <return pos:line="47" pos:column="13">return <expr><operator pos:line="47" pos:column="20">-<pos:position pos:line="47" pos:column="21"/></operator><literal type="number" pos:line="47" pos:column="21">1<pos:position pos:line="47" pos:column="22"/></literal></expr>;<pos:position pos:line="47" pos:column="23"/></return>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if></block></then></if>

<cpp:ifdef pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">ifdef<pos:position pos:line="50" pos:column="7"/></cpp:directive> <name pos:line="50" pos:column="8">TCP_NODELAY<pos:position pos:line="50" pos:column="19"/></name></cpp:ifdef>
    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">sock_type<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">==<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">SOCK_STREAM<pos:position pos:line="51" pos:column="33"/></name></expr>)<pos:position pos:line="51" pos:column="34"/></condition><then pos:line="51" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="9">commSetTcpNoDelay<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">new_socket<pos:position pos:line="52" pos:column="37"/></name></expr></argument>)<pos:position pos:line="52" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="39"/></expr_stmt></block></then></if>

<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name><name pos:line="56" pos:column="9">Config<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">.<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="16">tcpRcvBufsz<pos:position pos:line="56" pos:column="27"/></name></name> <operator pos:line="56" pos:column="28">&gt;<pos:position pos:line="56" pos:column="32"/></operator> <literal type="number" pos:line="56" pos:column="30">0<pos:position pos:line="56" pos:column="31"/></literal> <operator pos:line="56" pos:column="32">&amp;&amp;<pos:position pos:line="56" pos:column="42"/></operator> <name pos:line="56" pos:column="35">sock_type<pos:position pos:line="56" pos:column="44"/></name> <operator pos:line="56" pos:column="45">==<pos:position pos:line="56" pos:column="47"/></operator> <name pos:line="56" pos:column="48">SOCK_STREAM<pos:position pos:line="56" pos:column="59"/></name></expr>)<pos:position pos:line="56" pos:column="60"/></condition><then pos:line="56" pos:column="60">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="9">commSetTcpRcvbuf<pos:position pos:line="57" pos:column="25"/></name><argument_list pos:line="57" pos:column="25">(<argument><expr><name pos:line="57" pos:column="26">new_socket<pos:position pos:line="57" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="38">Config<pos:position pos:line="57" pos:column="44"/></name><operator pos:line="57" pos:column="44">.<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="45">tcpRcvBufsz<pos:position pos:line="57" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="58"/></expr_stmt></block></then></if>

    <return pos:line="59" pos:column="5">return <expr><name pos:line="59" pos:column="12">new_socket<pos:position pos:line="59" pos:column="22"/></name></expr>;<pos:position pos:line="59" pos:column="23"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

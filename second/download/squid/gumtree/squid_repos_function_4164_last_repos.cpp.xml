<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4164_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">aclMatchHTTPStatus<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">Splay<pos:position pos:line="2" pos:column="25"/></name><argument_list type="generic" pos:line="2" pos:column="25">&lt;<argument><expr><name pos:line="2" pos:column="26">acl_httpstatus_data<pos:position pos:line="2" pos:column="45"/></name><modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></expr></argument>&gt;<pos:position pos:line="2" pos:column="50"/></argument_list></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier><modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">dataptr<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="59">const<pos:position pos:line="2" pos:column="64"/></specifier> <name><name pos:line="2" pos:column="65">Http<pos:position pos:line="2" pos:column="69"/></name><operator pos:line="2" pos:column="69">::<pos:position pos:line="2" pos:column="71"/></operator><name pos:line="2" pos:column="71">StatusCode<pos:position pos:line="2" pos:column="81"/></name></name></type> <name pos:line="2" pos:column="82">status<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="89"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">acl_httpstatus_data<pos:position pos:line="4" pos:column="24"/></name></type> <name pos:line="4" pos:column="25">X<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">(<argument><expr><name pos:line="4" pos:column="27">status<pos:position pos:line="4" pos:column="33"/></name></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">acl_httpstatus_data<pos:position pos:line="5" pos:column="30"/></name> <modifier pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></modifier> <specifier pos:line="5" pos:column="33">const<pos:position pos:line="5" pos:column="38"/></specifier> <modifier pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></modifier></type> <name pos:line="5" pos:column="41">result<pos:position pos:line="5" pos:column="47"/></name> <init pos:line="5" pos:column="48">= <expr><call><name><operator pos:line="5" pos:column="50">(<pos:position pos:line="5" pos:column="51"/></operator><operator pos:line="5" pos:column="51">*<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="52">dataptr<pos:position pos:line="5" pos:column="59"/></name><operator pos:line="5" pos:column="59">)<pos:position pos:line="5" pos:column="60"/></operator><operator pos:line="5" pos:column="60">-&gt;<pos:position pos:line="5" pos:column="65"/></operator><name pos:line="5" pos:column="62">find<pos:position pos:line="5" pos:column="66"/></name></name><argument_list pos:line="5" pos:column="66">(<argument><expr><operator pos:line="5" pos:column="67">&amp;<pos:position pos:line="5" pos:column="72"/></operator><name pos:line="5" pos:column="68">X<pos:position pos:line="5" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="71">aclHTTPStatusCompare<pos:position pos:line="5" pos:column="91"/></name></expr></argument>)<pos:position pos:line="5" pos:column="92"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="93"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">28<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">3<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"aclMatchHTTPStatus: '"<pos:position pos:line="7" pos:column="42"/></literal> <operator pos:line="7" pos:column="43">&lt;&lt;<pos:position pos:line="7" pos:column="51"/></operator> <name pos:line="7" pos:column="46">status<pos:position pos:line="7" pos:column="52"/></name> <operator pos:line="7" pos:column="53">&lt;&lt;<pos:position pos:line="7" pos:column="61"/></operator> <literal type="string" pos:line="7" pos:column="56">"' "<pos:position pos:line="7" pos:column="60"/></literal> <operator pos:line="7" pos:column="61">&lt;&lt;<pos:position pos:line="7" pos:column="69"/></operator> <operator pos:line="7" pos:column="64">(<pos:position pos:line="7" pos:column="65"/></operator><ternary><condition><expr><name pos:line="7" pos:column="65">result<pos:position pos:line="7" pos:column="71"/></name></expr> ?<pos:position pos:line="7" pos:column="73"/></condition><then pos:line="7" pos:column="73"> <expr><literal type="string" pos:line="7" pos:column="74">"found"<pos:position pos:line="7" pos:column="81"/></literal></expr> <pos:position pos:line="7" pos:column="82"/></then><else pos:line="7" pos:column="82">: <expr><literal type="string" pos:line="7" pos:column="84">"NOT found"<pos:position pos:line="7" pos:column="95"/></literal></expr></else></ternary><operator pos:line="7" pos:column="95">)<pos:position pos:line="7" pos:column="96"/></operator></expr></argument>)<pos:position pos:line="7" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="98"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">result<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">!=<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="23">NULL<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">)<pos:position pos:line="8" pos:column="28"/></operator></expr>;<pos:position pos:line="8" pos:column="29"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

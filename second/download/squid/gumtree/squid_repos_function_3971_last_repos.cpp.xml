<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3971_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">Acl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">TransactionInitiator<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">match<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><name pos:line="2" pos:column="34">ACLChecklist<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">checklist<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ACLFilledChecklist<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">filled<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><call><name pos:line="4" pos:column="34">Filled<pos:position pos:line="4" pos:column="40"/></name><argument_list pos:line="4" pos:column="40">(<argument><expr><operator pos:line="4" pos:column="41">(<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">ACLChecklist<pos:position pos:line="4" pos:column="54"/></name><operator pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></operator><operator pos:line="4" pos:column="55">)<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="56">checklist<pos:position pos:line="4" pos:column="65"/></name></expr></argument>)<pos:position pos:line="4" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="67"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name><name pos:line="5" pos:column="12">filled<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">request<pos:position pos:line="5" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name><name pos:line="6" pos:column="12">filled<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">request<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">-&gt;<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="29">masterXaction<pos:position pos:line="6" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="44"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">XactionInitiator<pos:position pos:line="7" pos:column="27"/></name></type> <name pos:line="7" pos:column="28">requestInitiator<pos:position pos:line="7" pos:column="44"/></name> <init pos:line="7" pos:column="45">= <expr><name><name pos:line="7" pos:column="47">filled<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">-&gt;<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="55">request<pos:position pos:line="7" pos:column="62"/></name><operator pos:line="7" pos:column="62">-&gt;<pos:position pos:line="7" pos:column="67"/></operator><name pos:line="7" pos:column="64">masterXaction<pos:position pos:line="7" pos:column="77"/></name><operator pos:line="7" pos:column="77">-&gt;<pos:position pos:line="7" pos:column="82"/></operator><name pos:line="7" pos:column="79">initiator<pos:position pos:line="7" pos:column="88"/></name></name></expr></init></decl>;<pos:position pos:line="7" pos:column="89"/></decl_stmt>
    <return pos:line="8" pos:column="5">return <expr><ternary><condition><expr><call><name><name pos:line="8" pos:column="12">requestInitiator<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">.<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">in<pos:position pos:line="8" pos:column="31"/></name></name><argument_list pos:line="8" pos:column="31">(<argument><expr><name pos:line="8" pos:column="32">initiators_<pos:position pos:line="8" pos:column="43"/></name></expr></argument>)<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr> ?<pos:position pos:line="8" pos:column="46"/></condition><then pos:line="8" pos:column="46"> <expr><literal type="number" pos:line="8" pos:column="47">1<pos:position pos:line="8" pos:column="48"/></literal></expr> <pos:position pos:line="8" pos:column="49"/></then><else pos:line="8" pos:column="49">: <expr><literal type="number" pos:line="8" pos:column="51">0<pos:position pos:line="8" pos:column="52"/></literal></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="53"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

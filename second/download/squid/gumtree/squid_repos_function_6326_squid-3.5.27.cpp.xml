<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6326_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">BlockingFile<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">writeDone<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">rvfd<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">int<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">errflag<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">size_t<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">len<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">rvfd<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">==<pos:position pos:line="4" pos:column="20"/></operator> <name pos:line="4" pos:column="21">fd<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">79<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="19">HERE<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&lt;&lt;<pos:position pos:line="5" pos:column="32"/></operator> <literal type="string" pos:line="5" pos:column="27">"FD "<pos:position pos:line="5" pos:column="32"/></literal> <operator pos:line="5" pos:column="33">&lt;&lt;<pos:position pos:line="5" pos:column="41"/></operator> <name pos:line="5" pos:column="36">fd<pos:position pos:line="5" pos:column="38"/></name> <operator pos:line="5" pos:column="39">&lt;&lt;<pos:position pos:line="5" pos:column="47"/></operator> <literal type="string" pos:line="5" pos:column="42">", len "<pos:position pos:line="5" pos:column="50"/></literal> <operator pos:line="5" pos:column="51">&lt;&lt;<pos:position pos:line="5" pos:column="59"/></operator> <name pos:line="5" pos:column="54">len<pos:position pos:line="5" pos:column="57"/></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="59"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">WriteRequest<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">::<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">Pointer<pos:position pos:line="7" pos:column="26"/></name></name></type> <name pos:line="7" pos:column="27">result<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><name pos:line="7" pos:column="36">writeRequest<pos:position pos:line="7" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="49"/></decl_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">writeRequest<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="20">NULL<pos:position pos:line="8" pos:column="24"/></name></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">errflag<pos:position pos:line="10" pos:column="16"/></name></expr>)<pos:position pos:line="10" pos:column="17"/></condition><then pos:line="10" pos:column="17"> <block pos:line="10" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">79<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">DBG_CRITICAL<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">"storeUfsWriteDone: got failure ("<pos:position pos:line="11" pos:column="68"/></literal> <operator pos:line="11" pos:column="69">&lt;&lt;<pos:position pos:line="11" pos:column="77"/></operator> <name pos:line="11" pos:column="72">errflag<pos:position pos:line="11" pos:column="79"/></name> <operator pos:line="11" pos:column="80">&lt;&lt;<pos:position pos:line="11" pos:column="88"/></operator> <literal type="string" pos:line="11" pos:column="83">")"<pos:position pos:line="11" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="88"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">doClose<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">()<pos:position pos:line="12" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">ioRequestor<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">writeCompleted<pos:position pos:line="13" pos:column="36"/></name></name> <argument_list pos:line="13" pos:column="37">(<argument><expr><name pos:line="13" pos:column="38">DISK_ERROR<pos:position pos:line="13" pos:column="48"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="13" pos:column="49">0<pos:position pos:line="13" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="52">result<pos:position pos:line="13" pos:column="58"/></name></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="60"/></expr_stmt>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">ioRequestor<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">writeCompleted<pos:position pos:line="17" pos:column="32"/></name></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">DISK_OK<pos:position pos:line="17" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="42">len<pos:position pos:line="17" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">result<pos:position pos:line="17" pos:column="53"/></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

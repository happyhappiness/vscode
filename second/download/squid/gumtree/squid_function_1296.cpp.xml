<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1296.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">clientPackRangeHdr<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">HttpReply<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type> <name pos:line="2" pos:column="38">rep<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">HttpHdrRangeSpec<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></modifier></type> <name pos:line="2" pos:column="68">spec<pos:position pos:line="2" pos:column="72"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="74">String<pos:position pos:line="2" pos:column="80"/></name></type> <name pos:line="2" pos:column="81">boundary<pos:position pos:line="2" pos:column="89"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="91">MemBuf<pos:position pos:line="2" pos:column="97"/></name> <modifier pos:line="2" pos:column="98">*<pos:position pos:line="2" pos:column="99"/></modifier></type> <name pos:line="2" pos:column="100">mb<pos:position pos:line="2" pos:column="102"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="103"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpHeader<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">hdr<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><name pos:line="4" pos:column="20">hoReply<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">Packer<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">p<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">rep<pos:position pos:line="6" pos:column="15"/></name></expr></argument>)<pos:position pos:line="6" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">spec<pos:position pos:line="7" pos:column="16"/></name></expr></argument>)<pos:position pos:line="7" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* put boundary */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">33<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">5<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"clientPackRangeHdr: appending boundary: "<pos:position pos:line="10" pos:column="61"/></literal> <operator pos:line="10" pos:column="62">&lt;&lt;<pos:position pos:line="10" pos:column="70"/></operator> <name pos:line="10" pos:column="65">boundary<pos:position pos:line="10" pos:column="73"/></name></expr></argument>)<pos:position pos:line="10" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="75"/></expr_stmt>
    <comment type="block" pos:line="11" pos:column="5">/* rfc2046 requires to _prepend_ boundary with &lt;crlf&gt;! */</comment>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">mb<pos:position pos:line="12" pos:column="7"/></name><operator pos:line="12" pos:column="7">-&gt;<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="9">Printf<pos:position pos:line="12" pos:column="15"/></name></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="string" pos:line="12" pos:column="16">"\r\n--"<pos:position pos:line="12" pos:column="24"/></literal> <name pos:line="12" pos:column="25">SQUIDSTRINGPH<pos:position pos:line="12" pos:column="38"/></name> <literal type="string" pos:line="12" pos:column="39">"\r\n"<pos:position pos:line="12" pos:column="45"/></literal></expr></argument>, <argument><expr><call><name pos:line="12" pos:column="47">SQUIDSTRINGPRINT<pos:position pos:line="12" pos:column="63"/></name><argument_list pos:line="12" pos:column="63">(<argument><expr><name pos:line="12" pos:column="64">boundary<pos:position pos:line="12" pos:column="72"/></name></expr></argument>)<pos:position pos:line="12" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="75"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* stuff the header with required entries and pack it */</comment>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name><name pos:line="16" pos:column="9">rep<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">header<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">has<pos:position pos:line="16" pos:column="24"/></name></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">HDR_CONTENT_TYPE<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="17" pos:column="9">hdr<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">.<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">putStr<pos:position pos:line="17" pos:column="19"/></name></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">HDR_CONTENT_TYPE<pos:position pos:line="17" pos:column="36"/></name></expr></argument>, <argument><expr><call><name><name pos:line="17" pos:column="38">rep<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">-&gt;<pos:position pos:line="17" pos:column="46"/></operator><name pos:line="17" pos:column="43">header<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">.<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="50">getStr<pos:position pos:line="17" pos:column="56"/></name></name><argument_list pos:line="17" pos:column="56">(<argument><expr><name pos:line="17" pos:column="57">HDR_CONTENT_TYPE<pos:position pos:line="17" pos:column="73"/></name></expr></argument>)<pos:position pos:line="17" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="76"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">httpHeaderAddContRange<pos:position pos:line="19" pos:column="27"/></name><argument_list pos:line="19" pos:column="27">(<argument><expr><operator pos:line="19" pos:column="28">&amp;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="29">hdr<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="34">*<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">spec<pos:position pos:line="19" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="41">rep<pos:position pos:line="19" pos:column="44"/></name><operator pos:line="19" pos:column="44">-&gt;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="46">content_length<pos:position pos:line="19" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">packerToMemInit<pos:position pos:line="21" pos:column="20"/></name><argument_list pos:line="21" pos:column="20">(<argument><expr><operator pos:line="21" pos:column="21">&amp;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="22">p<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="25">mb<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="23" pos:column="5">hdr<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">.<pos:position pos:line="23" pos:column="9"/></operator><name pos:line="23" pos:column="9">packInto<pos:position pos:line="23" pos:column="17"/></name></name><argument_list pos:line="23" pos:column="17">(<argument><expr><operator pos:line="23" pos:column="18">&amp;<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="19">p<pos:position pos:line="23" pos:column="20"/></name></expr></argument>)<pos:position pos:line="23" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">packerClean<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><operator pos:line="25" pos:column="17">&amp;<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="18">p<pos:position pos:line="25" pos:column="19"/></name></expr></argument>)<pos:position pos:line="25" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="27" pos:column="5">hdr<pos:position pos:line="27" pos:column="8"/></name><operator pos:line="27" pos:column="8">.<pos:position pos:line="27" pos:column="9"/></operator><name pos:line="27" pos:column="9">clean<pos:position pos:line="27" pos:column="14"/></name></name><argument_list pos:line="27" pos:column="14">()<pos:position pos:line="27" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* append &lt;crlf&gt; (we packed a header, not a reply) */</comment>
    <expr_stmt><expr><call><name><name pos:line="30" pos:column="5">mb<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">Printf<pos:position pos:line="30" pos:column="15"/></name></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="string" pos:line="30" pos:column="16">"\r\n"<pos:position pos:line="30" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

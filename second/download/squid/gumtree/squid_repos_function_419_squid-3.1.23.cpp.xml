<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_419_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name><name pos:line="2" pos:column="22">argv<pos:position pos:line="2" pos:column="26"/></name><index pos:line="2" pos:column="26">[]<pos:position pos:line="2" pos:column="28"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">line<pos:position pos:line="4" pos:column="14"/></name><index pos:line="4" pos:column="14">[<expr><literal type="number" pos:line="4" pos:column="15">8192<pos:position pos:line="4" pos:column="19"/></literal></expr>]<pos:position pos:line="4" pos:column="20"/></index></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">username<pos:position pos:line="5" pos:column="19"/></name></decl>, <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="22">password<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">SASL_VERSION_MAJOR<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">&lt;<pos:position pos:line="6" pos:column="28"/></operator> <literal type="number" pos:line="6" pos:column="26">2<pos:position pos:line="6" pos:column="27"/></literal></expr></cpp:if>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">errstr<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">rc<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">sasl_conn_t<pos:position pos:line="11" pos:column="16"/></name> <modifier pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></modifier></type><name pos:line="11" pos:column="18">conn<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><name pos:line="11" pos:column="25">NULL<pos:position pos:line="11" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* make standard output line buffered */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">setvbuf<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">stdout<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="21">NULL<pos:position pos:line="14" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="27">_IOLBF<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="35">0<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name pos:line="16" pos:column="5">rc<pos:position pos:line="16" pos:column="7"/></name> <operator pos:line="16" pos:column="8">=<pos:position pos:line="16" pos:column="9"/></operator> <call><name pos:line="16" pos:column="10">sasl_server_init<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">( <argument><expr><name pos:line="16" pos:column="28">NULL<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">APP_NAME_SASL<pos:position pos:line="16" pos:column="47"/></name></expr></argument> )<pos:position pos:line="16" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="50"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">( <expr><name pos:line="18" pos:column="10">rc<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">!=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">SASL_OK<pos:position pos:line="18" pos:column="23"/></name></expr> )<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <block pos:line="18" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">fprintf<pos:position pos:line="19" pos:column="16"/></name><argument_list pos:line="19" pos:column="16">( <argument><expr><name pos:line="19" pos:column="18">stderr<pos:position pos:line="19" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="26">"error %d %s\n"<pos:position pos:line="19" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">rc<pos:position pos:line="19" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="47">sasl_errstring<pos:position pos:line="19" pos:column="61"/></name><argument_list pos:line="19" pos:column="61">(<argument><expr><name pos:line="19" pos:column="62">rc<pos:position pos:line="19" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="66">NULL<pos:position pos:line="19" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="72">NULL<pos:position pos:line="19" pos:column="76"/></name></expr></argument> )<pos:position pos:line="19" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">fprintf<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">( <argument><expr><name pos:line="20" pos:column="18">stdout<pos:position pos:line="20" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="26">"ERR\n"<pos:position pos:line="20" pos:column="33"/></literal></expr></argument> )<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">1<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><name pos:line="24" pos:column="5">SASL_VERSION_MAJOR<pos:position pos:line="24" pos:column="23"/></name> <operator pos:line="24" pos:column="24">&lt;<pos:position pos:line="24" pos:column="28"/></operator> <literal type="number" pos:line="24" pos:column="26">2<pos:position pos:line="24" pos:column="27"/></literal></expr></cpp:if>
    <expr_stmt><expr><name pos:line="25" pos:column="5">rc<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <call><name pos:line="25" pos:column="10">sasl_server_new<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">( <argument><expr><name pos:line="25" pos:column="27">APP_NAME_SASL<pos:position pos:line="25" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="42">NULL<pos:position pos:line="25" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="48">NULL<pos:position pos:line="25" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="54">NULL<pos:position pos:line="25" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="60">0<pos:position pos:line="25" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="63">&amp;<pos:position pos:line="25" pos:column="68"/></operator><name pos:line="25" pos:column="64">conn<pos:position pos:line="25" pos:column="68"/></name></expr></argument> )<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>
<cpp:else pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">else<pos:position pos:line="26" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name pos:line="27" pos:column="5">rc<pos:position pos:line="27" pos:column="7"/></name> <operator pos:line="27" pos:column="8">=<pos:position pos:line="27" pos:column="9"/></operator> <call><name pos:line="27" pos:column="10">sasl_server_new<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">( <argument><expr><name pos:line="27" pos:column="27">APP_NAME_SASL<pos:position pos:line="27" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="42">NULL<pos:position pos:line="27" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="48">NULL<pos:position pos:line="27" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="54">NULL<pos:position pos:line="27" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="60">NULL<pos:position pos:line="27" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="66">NULL<pos:position pos:line="27" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="72">0<pos:position pos:line="27" pos:column="73"/></literal></expr></argument>, <argument><expr><operator pos:line="27" pos:column="75">&amp;<pos:position pos:line="27" pos:column="80"/></operator><name pos:line="27" pos:column="76">conn<pos:position pos:line="27" pos:column="80"/></name></expr></argument> )<pos:position pos:line="27" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="83"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">( <expr><name pos:line="30" pos:column="10">rc<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">!=<pos:position pos:line="30" pos:column="15"/></operator> <name pos:line="30" pos:column="16">SASL_OK<pos:position pos:line="30" pos:column="23"/></name></expr> )<pos:position pos:line="30" pos:column="25"/></condition><then pos:line="30" pos:column="25"> <block pos:line="30" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">fprintf<pos:position pos:line="31" pos:column="16"/></name><argument_list pos:line="31" pos:column="16">( <argument><expr><name pos:line="31" pos:column="18">stderr<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="26">"error %d %s\n"<pos:position pos:line="31" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="43">rc<pos:position pos:line="31" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="31" pos:column="47">sasl_errstring<pos:position pos:line="31" pos:column="61"/></name><argument_list pos:line="31" pos:column="61">(<argument><expr><name pos:line="31" pos:column="62">rc<pos:position pos:line="31" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="66">NULL<pos:position pos:line="31" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="72">NULL<pos:position pos:line="31" pos:column="76"/></name></expr></argument> )<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">fprintf<pos:position pos:line="32" pos:column="16"/></name><argument_list pos:line="32" pos:column="16">( <argument><expr><name pos:line="32" pos:column="18">stdout<pos:position pos:line="32" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="26">"ERR\n"<pos:position pos:line="32" pos:column="33"/></literal></expr></argument> )<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
        <return pos:line="33" pos:column="9">return <expr><literal type="number" pos:line="33" pos:column="16">1<pos:position pos:line="33" pos:column="17"/></literal></expr>;<pos:position pos:line="33" pos:column="18"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <while pos:line="36" pos:column="5">while <condition pos:line="36" pos:column="11">( <expr><call><name pos:line="36" pos:column="13">fgets<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">( <argument><expr><name pos:line="36" pos:column="20">line<pos:position pos:line="36" pos:column="24"/></name></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="26">sizeof<argument_list pos:line="36" pos:column="32">( <argument><expr><name pos:line="36" pos:column="34">line<pos:position pos:line="36" pos:column="38"/></name></expr></argument> )<pos:position pos:line="36" pos:column="40"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="36" pos:column="42">stdin<pos:position pos:line="36" pos:column="47"/></name></expr></argument> )<pos:position pos:line="36" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="50"/></condition> <block pos:line="36" pos:column="51">{
        <expr_stmt><expr><name pos:line="37" pos:column="9">username<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">=<pos:position pos:line="37" pos:column="19"/></operator> <operator pos:line="37" pos:column="20">&amp;<pos:position pos:line="37" pos:column="25"/></operator><name><name pos:line="37" pos:column="21">line<pos:position pos:line="37" pos:column="25"/></name><index pos:line="37" pos:column="25">[<expr><literal type="number" pos:line="37" pos:column="26">0<pos:position pos:line="37" pos:column="27"/></literal></expr>]<pos:position pos:line="37" pos:column="28"/></index></name></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="38" pos:column="9">password<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <call><name pos:line="38" pos:column="20">strchr<pos:position pos:line="38" pos:column="26"/></name><argument_list pos:line="38" pos:column="26">( <argument><expr><name pos:line="38" pos:column="28">line<pos:position pos:line="38" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="34">'\n'<pos:position pos:line="38" pos:column="38"/></literal></expr></argument> )<pos:position pos:line="38" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">( <expr><operator pos:line="39" pos:column="14">!<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="15">password<pos:position pos:line="39" pos:column="23"/></name></expr>)<pos:position pos:line="39" pos:column="24"/></condition><then pos:line="39" pos:column="24"> <block pos:line="39" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">fprintf<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">( <argument><expr><name pos:line="40" pos:column="22">stderr<pos:position pos:line="40" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="30">"authenticator: Unexpected input '%s'\n"<pos:position pos:line="40" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="72">line<pos:position pos:line="40" pos:column="76"/></name></expr></argument> )<pos:position pos:line="40" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">fprintf<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">( <argument><expr><name pos:line="41" pos:column="22">stdout<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="30">"ERR\n"<pos:position pos:line="41" pos:column="37"/></literal></expr></argument> )<pos:position pos:line="41" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="40"/></expr_stmt>
            <continue pos:line="42" pos:column="13">continue;<pos:position pos:line="42" pos:column="22"/></continue>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="44" pos:column="9">*<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">password<pos:position pos:line="44" pos:column="18"/></name> <operator pos:line="44" pos:column="19">=<pos:position pos:line="44" pos:column="20"/></operator> <literal type="char" pos:line="44" pos:column="21">'\0'<pos:position pos:line="44" pos:column="25"/></literal></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="45" pos:column="9">password<pos:position pos:line="45" pos:column="17"/></name> <operator pos:line="45" pos:column="18">=<pos:position pos:line="45" pos:column="19"/></operator> <call><name pos:line="45" pos:column="20">strchr<pos:position pos:line="45" pos:column="26"/></name> <argument_list pos:line="45" pos:column="27">( <argument><expr><name pos:line="45" pos:column="29">line<pos:position pos:line="45" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="45" pos:column="35">' '<pos:position pos:line="45" pos:column="38"/></literal></expr></argument> )<pos:position pos:line="45" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">( <expr><operator pos:line="46" pos:column="14">!<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">password<pos:position pos:line="46" pos:column="23"/></name></expr>)<pos:position pos:line="46" pos:column="24"/></condition><then pos:line="46" pos:column="24"> <block pos:line="46" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">fprintf<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">( <argument><expr><name pos:line="47" pos:column="22">stderr<pos:position pos:line="47" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="30">"authenticator: Unexpected input '%s'\n"<pos:position pos:line="47" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="72">line<pos:position pos:line="47" pos:column="76"/></name></expr></argument> )<pos:position pos:line="47" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">fprintf<pos:position pos:line="48" pos:column="20"/></name><argument_list pos:line="48" pos:column="20">( <argument><expr><name pos:line="48" pos:column="22">stdout<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="30">"ERR\n"<pos:position pos:line="48" pos:column="37"/></literal></expr></argument> )<pos:position pos:line="48" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
            <continue pos:line="49" pos:column="13">continue;<pos:position pos:line="49" pos:column="22"/></continue>
        }<pos:position pos:line="50" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="51" pos:column="9">*<pos:position pos:line="51" pos:column="10"/></operator><name pos:line="51" pos:column="10">password<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">++<pos:position pos:line="51" pos:column="20"/></operator> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <literal type="char" pos:line="51" pos:column="23">'\0'<pos:position pos:line="51" pos:column="27"/></literal></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="53" pos:column="9">rfc1738_unescape<pos:position pos:line="53" pos:column="25"/></name><argument_list pos:line="53" pos:column="25">(<argument><expr><name pos:line="53" pos:column="26">username<pos:position pos:line="53" pos:column="34"/></name></expr></argument>)<pos:position pos:line="53" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">rfc1738_unescape<pos:position pos:line="54" pos:column="25"/></name><argument_list pos:line="54" pos:column="25">(<argument><expr><name pos:line="54" pos:column="26">password<pos:position pos:line="54" pos:column="34"/></name></expr></argument>)<pos:position pos:line="54" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="36"/></expr_stmt>

<cpp:if pos:line="56" pos:column="1">#<cpp:directive pos:line="56" pos:column="2">if<pos:position pos:line="56" pos:column="4"/></cpp:directive> <expr><name pos:line="56" pos:column="5">SASL_VERSION_MAJOR<pos:position pos:line="56" pos:column="23"/></name> <operator pos:line="56" pos:column="24">&lt;<pos:position pos:line="56" pos:column="28"/></operator> <literal type="number" pos:line="56" pos:column="26">2<pos:position pos:line="56" pos:column="27"/></literal></expr></cpp:if>
        <expr_stmt><expr><name pos:line="57" pos:column="9">rc<pos:position pos:line="57" pos:column="11"/></name> <operator pos:line="57" pos:column="12">=<pos:position pos:line="57" pos:column="13"/></operator> <call><name pos:line="57" pos:column="14">sasl_checkpass<pos:position pos:line="57" pos:column="28"/></name><argument_list pos:line="57" pos:column="28">(<argument><expr><name pos:line="57" pos:column="29">conn<pos:position pos:line="57" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="35">username<pos:position pos:line="57" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="45">strlen<pos:position pos:line="57" pos:column="51"/></name><argument_list pos:line="57" pos:column="51">(<argument><expr><name pos:line="57" pos:column="52">username<pos:position pos:line="57" pos:column="60"/></name></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="57" pos:column="63">password<pos:position pos:line="57" pos:column="71"/></name></expr></argument>, <argument><expr><call><name pos:line="57" pos:column="73">strlen<pos:position pos:line="57" pos:column="79"/></name><argument_list pos:line="57" pos:column="79">(<argument><expr><name pos:line="57" pos:column="80">password<pos:position pos:line="57" pos:column="88"/></name></expr></argument>)<pos:position pos:line="57" pos:column="89"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="57" pos:column="91">&amp;<pos:position pos:line="57" pos:column="96"/></operator><name pos:line="57" pos:column="92">errstr<pos:position pos:line="57" pos:column="98"/></name></expr></argument>)<pos:position pos:line="57" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="100"/></expr_stmt>
<cpp:else pos:line="58" pos:column="1">#<cpp:directive pos:line="58" pos:column="2">else<pos:position pos:line="58" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="59" pos:column="9">rc<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <call><name pos:line="59" pos:column="14">sasl_checkpass<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">conn<pos:position pos:line="59" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="35">username<pos:position pos:line="59" pos:column="43"/></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="45">strlen<pos:position pos:line="59" pos:column="51"/></name><argument_list pos:line="59" pos:column="51">(<argument><expr><name pos:line="59" pos:column="52">username<pos:position pos:line="59" pos:column="60"/></name></expr></argument>)<pos:position pos:line="59" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="59" pos:column="63">password<pos:position pos:line="59" pos:column="71"/></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="73">strlen<pos:position pos:line="59" pos:column="79"/></name><argument_list pos:line="59" pos:column="79">(<argument><expr><name pos:line="59" pos:column="80">password<pos:position pos:line="59" pos:column="88"/></name></expr></argument>)<pos:position pos:line="59" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="91"/></expr_stmt>
<cpp:endif pos:line="60" pos:column="1">#<cpp:directive pos:line="60" pos:column="2">endif<pos:position pos:line="60" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">( <expr><name pos:line="62" pos:column="14">rc<pos:position pos:line="62" pos:column="16"/></name> <operator pos:line="62" pos:column="17">!=<pos:position pos:line="62" pos:column="19"/></operator> <name pos:line="62" pos:column="20">SASL_OK<pos:position pos:line="62" pos:column="27"/></name></expr> )<pos:position pos:line="62" pos:column="29"/></condition><then pos:line="62" pos:column="29"> <block pos:line="62" pos:column="30">{
<cpp:if pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">if<pos:position pos:line="63" pos:column="4"/></cpp:directive> <expr><name pos:line="63" pos:column="5">SASL_VERSION_MAJOR<pos:position pos:line="63" pos:column="23"/></name> <operator pos:line="63" pos:column="24">&lt;<pos:position pos:line="63" pos:column="28"/></operator> <literal type="number" pos:line="63" pos:column="26">2<pos:position pos:line="63" pos:column="27"/></literal></expr></cpp:if>
            <if pos:line="64" pos:column="13">if <condition pos:line="64" pos:column="16">( <expr><name pos:line="64" pos:column="18">errstr<pos:position pos:line="64" pos:column="24"/></name></expr> )<pos:position pos:line="64" pos:column="26"/></condition><then pos:line="64" pos:column="26"> <block pos:line="64" pos:column="27">{
                <expr_stmt><expr><call><name pos:line="65" pos:column="17">fprintf<pos:position pos:line="65" pos:column="24"/></name><argument_list pos:line="65" pos:column="24">( <argument><expr><name pos:line="65" pos:column="26">stderr<pos:position pos:line="65" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="34">"errstr %s\n"<pos:position pos:line="65" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="49">errstr<pos:position pos:line="65" pos:column="55"/></name></expr></argument> )<pos:position pos:line="65" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="66" pos:column="14"/></block></then></if>
            <if pos:line="67" pos:column="13">if <condition pos:line="67" pos:column="16">( <expr><name pos:line="67" pos:column="18">rc<pos:position pos:line="67" pos:column="20"/></name> <operator pos:line="67" pos:column="21">!=<pos:position pos:line="67" pos:column="23"/></operator> <name pos:line="67" pos:column="24">SASL_BADAUTH<pos:position pos:line="67" pos:column="36"/></name></expr> )<pos:position pos:line="67" pos:column="38"/></condition><then pos:line="67" pos:column="38"> <block pos:line="67" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="68" pos:column="17">fprintf<pos:position pos:line="68" pos:column="24"/></name><argument_list pos:line="68" pos:column="24">( <argument><expr><name pos:line="68" pos:column="26">stderr<pos:position pos:line="68" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="34">"error %d %s\n"<pos:position pos:line="68" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="68" pos:column="51">rc<pos:position pos:line="68" pos:column="53"/></name></expr></argument>, <argument><expr><call><name pos:line="68" pos:column="55">sasl_errstring<pos:position pos:line="68" pos:column="69"/></name><argument_list pos:line="68" pos:column="69">(<argument><expr><name pos:line="68" pos:column="70">rc<pos:position pos:line="68" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="74">NULL<pos:position pos:line="68" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="80">NULL<pos:position pos:line="68" pos:column="84"/></name></expr></argument> )<pos:position pos:line="68" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="88"/></expr_stmt>
            }<pos:position pos:line="69" pos:column="14"/></block></then></if>
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">fprintf<pos:position pos:line="71" pos:column="20"/></name><argument_list pos:line="71" pos:column="20">( <argument><expr><name pos:line="71" pos:column="22">stdout<pos:position pos:line="71" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="30">"ERR\n"<pos:position pos:line="71" pos:column="37"/></literal></expr></argument> )<pos:position pos:line="71" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></then> <else pos:line="72" pos:column="11">else <block pos:line="72" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">fprintf<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">( <argument><expr><name pos:line="73" pos:column="22">stdout<pos:position pos:line="73" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="30">"OK\n"<pos:position pos:line="73" pos:column="36"/></literal></expr></argument> )<pos:position pos:line="73" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></else></if>

    }<pos:position pos:line="76" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="78" pos:column="5">sasl_dispose<pos:position pos:line="78" pos:column="17"/></name><argument_list pos:line="78" pos:column="17">( <argument><expr><operator pos:line="78" pos:column="19">&amp;<pos:position pos:line="78" pos:column="24"/></operator><name pos:line="78" pos:column="20">conn<pos:position pos:line="78" pos:column="24"/></name></expr></argument> )<pos:position pos:line="78" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="79" pos:column="5">sasl_done<pos:position pos:line="79" pos:column="14"/></name><argument_list pos:line="79" pos:column="14">()<pos:position pos:line="79" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="17"/></expr_stmt>

    <return pos:line="81" pos:column="5">return <expr><literal type="number" pos:line="81" pos:column="12">0<pos:position pos:line="81" pos:column="13"/></literal></expr>;<pos:position pos:line="81" pos:column="14"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

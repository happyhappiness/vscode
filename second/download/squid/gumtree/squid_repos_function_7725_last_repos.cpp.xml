<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7725_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">print_error<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><specifier pos:line="2" pos:column="13">const<pos:position pos:line="2" pos:column="18"/></specifier> <name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">string<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">token<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">int<pos:position pos:line="2" pos:column="55"/></name></type> <name pos:line="2" pos:column="56">type<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">string<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">!=<pos:position pos:line="4" pos:column="21"/></operator> <name pos:line="4" pos:column="22">NULL<pos:position pos:line="4" pos:column="26"/></name></expr></argument>)<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">type<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">==<pos:position pos:line="5" pos:column="16"/></operator> <name pos:line="5" pos:column="17">ENDOFFILE<pos:position pos:line="5" pos:column="26"/></name></expr>)<pos:position pos:line="5" pos:column="27"/></condition><then pos:line="5" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">snmplib_debug<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="26">"%s(EOF): On or around line %d\n"<pos:position pos:line="6" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="61">string<pos:position pos:line="6" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="69">Line<pos:position pos:line="6" pos:column="73"/></name></expr></argument>)<pos:position pos:line="6" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="75"/></expr_stmt></block></then>
    <elseif pos:line="7" pos:column="5">else <if pos:line="7" pos:column="10">if <condition pos:line="7" pos:column="13">(<expr><name pos:line="7" pos:column="14">token<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">snmplib_debug<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><literal type="number" pos:line="8" pos:column="23">0<pos:position pos:line="8" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="26">"%s(%s): On or around line %d\n"<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="60">string<pos:position pos:line="8" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="68">token<pos:position pos:line="8" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="75">Line<pos:position pos:line="8" pos:column="79"/></name></expr></argument>)<pos:position pos:line="8" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="81"/></expr_stmt></block></then></if></elseif>
    <else pos:line="9" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">snmplib_debug<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><literal type="number" pos:line="10" pos:column="23">0<pos:position pos:line="10" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="26">"%s: On or around line %d\n"<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="56">string<pos:position pos:line="10" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="64">Line<pos:position pos:line="10" pos:column="68"/></name></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="70"/></expr_stmt></block></else></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_180_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">SearchFilterLDAP<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">edui_ldap_t<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">l<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">group<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">i<pos:position pos:line="4" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="15">j<pos:position pos:line="4" pos:column="16"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="18">s<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">swi<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">bufa<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><name pos:line="6" pos:column="15">EDUI_MAXLEN<pos:position pos:line="6" pos:column="26"/></name></expr>]<pos:position pos:line="6" pos:column="27"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="29">bufb<pos:position pos:line="6" pos:column="33"/></name><index pos:line="6" pos:column="33">[<expr><name pos:line="6" pos:column="34">EDUI_MAXLEN<pos:position pos:line="6" pos:column="45"/></name></expr>]<pos:position pos:line="6" pos:column="46"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="48">bufc<pos:position pos:line="6" pos:column="52"/></name><index pos:line="6" pos:column="52">[<expr><name pos:line="6" pos:column="53">EDUI_MAXLEN<pos:position pos:line="6" pos:column="64"/></name></expr>]<pos:position pos:line="6" pos:column="65"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="67">bufd<pos:position pos:line="6" pos:column="71"/></name><index pos:line="6" pos:column="71">[<expr><name pos:line="6" pos:column="72">EDUI_MAXLEN<pos:position pos:line="6" pos:column="83"/></name></expr>]<pos:position pos:line="6" pos:column="84"/></index></name></decl>, <decl><type ref="prev"/><name><name pos:line="6" pos:column="86">bufg<pos:position pos:line="6" pos:column="90"/></name><index pos:line="6" pos:column="90">[<expr><name pos:line="6" pos:column="91">EDUI_MAXLEN<pos:position pos:line="6" pos:column="102"/></name></expr>]<pos:position pos:line="6" pos:column="103"/></index></name></decl>;<pos:position pos:line="6" pos:column="104"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">l<pos:position pos:line="7" pos:column="10"/></name> <operator pos:line="7" pos:column="11">==<pos:position pos:line="7" pos:column="13"/></operator> <name pos:line="7" pos:column="14">NULL<pos:position pos:line="7" pos:column="18"/></name></expr>)<pos:position pos:line="7" pos:column="19"/></condition><then pos:line="7" pos:column="19"> <block type="pseudo"><return pos:line="7" pos:column="20">return <expr><name pos:line="7" pos:column="27">LDAP_ERR_NULL<pos:position pos:line="7" pos:column="40"/></name></expr>;<pos:position pos:line="7" pos:column="41"/></return></block></then></if>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><operator pos:line="8" pos:column="10">(<pos:position pos:line="8" pos:column="11"/></operator><name><name pos:line="8" pos:column="11">l<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">-&gt;<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="14">status<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">&amp;<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="23">LDAP_INIT_S<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">)<pos:position pos:line="8" pos:column="35"/></operator></expr>)<pos:position pos:line="8" pos:column="36"/></condition><then pos:line="8" pos:column="36"> <block type="pseudo"><return pos:line="8" pos:column="37">return <expr><name pos:line="8" pos:column="44">LDAP_ERR_INIT<pos:position pos:line="8" pos:column="57"/></name></expr>;<pos:position pos:line="8" pos:column="58"/></return></block></then></if>			<comment type="block" pos:line="8" pos:column="81">/* Not initalized */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><operator pos:line="9" pos:column="10">(<pos:position pos:line="9" pos:column="11"/></operator><name><name pos:line="9" pos:column="11">l<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">status<pos:position pos:line="9" pos:column="20"/></name></name> <operator pos:line="9" pos:column="21">&amp;<pos:position pos:line="9" pos:column="26"/></operator> <name pos:line="9" pos:column="23">LDAP_OPEN_S<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">)<pos:position pos:line="9" pos:column="35"/></operator></expr>)<pos:position pos:line="9" pos:column="36"/></condition><then pos:line="9" pos:column="36"> <block type="pseudo"><return pos:line="9" pos:column="37">return <expr><name pos:line="9" pos:column="44">LDAP_ERR_OPEN<pos:position pos:line="9" pos:column="57"/></name></expr>;<pos:position pos:line="9" pos:column="58"/></return></block></then></if>			<comment type="block" pos:line="9" pos:column="81">/* Not open */</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><name><name pos:line="10" pos:column="11">l<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">status<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">&amp;<pos:position pos:line="10" pos:column="26"/></operator> <name pos:line="10" pos:column="23">LDAP_BIND_S<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">)<pos:position pos:line="10" pos:column="35"/></operator></expr>)<pos:position pos:line="10" pos:column="36"/></condition><then pos:line="10" pos:column="36"> <block type="pseudo"><return pos:line="10" pos:column="37">return <expr><name pos:line="10" pos:column="44">LDAP_ERR_BIND<pos:position pos:line="10" pos:column="57"/></name></expr>;<pos:position pos:line="10" pos:column="58"/></return></block></then></if>			<comment type="block" pos:line="10" pos:column="81">/* Not Bound */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">l<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">search_ip<pos:position pos:line="11" pos:column="21"/></name><index pos:line="11" pos:column="21">[<expr><literal type="number" pos:line="11" pos:column="22">0<pos:position pos:line="11" pos:column="23"/></literal></expr>]<pos:position pos:line="11" pos:column="24"/></index></name> <operator pos:line="11" pos:column="25">==<pos:position pos:line="11" pos:column="27"/></operator> <literal type="char" pos:line="11" pos:column="28">'\0'<pos:position pos:line="11" pos:column="32"/></literal></expr>)<pos:position pos:line="11" pos:column="33"/></condition><then pos:line="11" pos:column="33"> <block type="pseudo"><return pos:line="11" pos:column="34">return <expr><name pos:line="11" pos:column="41">LDAP_ERR_DATA<pos:position pos:line="11" pos:column="54"/></name></expr>;<pos:position pos:line="11" pos:column="55"/></return></block></then></if>				<comment type="block" pos:line="11" pos:column="81">/* Search IP is required */</comment>

    <comment type="block" pos:line="13" pos:column="5">/* Zero out if not already */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">memset<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">bufa<pos:position pos:line="14" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="18">'\0'<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="24">sizeof<argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">bufa<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
    <comment type="line" pos:line="15" pos:column="5">// using memset() for 'bufa' fixes the 64-bit issue</comment>
    <expr_stmt><expr><operator pos:line="16" pos:column="5">*<pos:position pos:line="16" pos:column="6"/></operator><operator pos:line="16" pos:column="6">(<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">bufb<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">)<pos:position pos:line="16" pos:column="12"/></operator> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <literal type="char" pos:line="16" pos:column="15">'\0'<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="17" pos:column="5">*<pos:position pos:line="17" pos:column="6"/></operator><operator pos:line="17" pos:column="6">(<pos:position pos:line="17" pos:column="7"/></operator><name pos:line="17" pos:column="7">bufc<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">)<pos:position pos:line="17" pos:column="12"/></operator> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <literal type="char" pos:line="17" pos:column="15">'\0'<pos:position pos:line="17" pos:column="19"/></literal></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="18" pos:column="5">*<pos:position pos:line="18" pos:column="6"/></operator><operator pos:line="18" pos:column="6">(<pos:position pos:line="18" pos:column="7"/></operator><name pos:line="18" pos:column="7">bufd<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">)<pos:position pos:line="18" pos:column="12"/></operator> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="char" pos:line="18" pos:column="15">'\0'<pos:position pos:line="18" pos:column="19"/></literal></expr>;<pos:position pos:line="18" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><operator pos:line="19" pos:column="6">(<pos:position pos:line="19" pos:column="7"/></operator><name pos:line="19" pos:column="7">bufg<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">)<pos:position pos:line="19" pos:column="12"/></operator> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <literal type="char" pos:line="19" pos:column="15">'\0'<pos:position pos:line="19" pos:column="19"/></literal></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">s<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <call><name pos:line="21" pos:column="9">strlen<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name><name pos:line="21" pos:column="16">l<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">search_ip<pos:position pos:line="21" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">bufc<pos:position pos:line="22" pos:column="9"/></name><index pos:line="22" pos:column="9">[<expr><literal type="number" pos:line="22" pos:column="10">0<pos:position pos:line="22" pos:column="11"/></literal></expr>]<pos:position pos:line="22" pos:column="12"/></index></name> <operator pos:line="22" pos:column="13">=<pos:position pos:line="22" pos:column="14"/></operator> <literal type="char" pos:line="22" pos:column="15">'\134'<pos:position pos:line="22" pos:column="21"/></literal></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">swi<pos:position pos:line="23" pos:column="8"/></name> <operator pos:line="23" pos:column="9">=<pos:position pos:line="23" pos:column="10"/></operator> <literal type="number" pos:line="23" pos:column="11">0<pos:position pos:line="23" pos:column="12"/></literal></expr>;<pos:position pos:line="23" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">j<pos:position pos:line="24" pos:column="6"/></name> <operator pos:line="24" pos:column="7">=<pos:position pos:line="24" pos:column="8"/></operator> <literal type="number" pos:line="24" pos:column="9">1<pos:position pos:line="24" pos:column="10"/></literal></expr>;<pos:position pos:line="24" pos:column="11"/></expr_stmt>
    <for pos:line="25" pos:column="5">for <control pos:line="25" pos:column="9">(<init><expr><name pos:line="25" pos:column="10">i<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">=<pos:position pos:line="25" pos:column="13"/></operator> <literal type="number" pos:line="25" pos:column="14">0<pos:position pos:line="25" pos:column="15"/></literal></expr>;<pos:position pos:line="25" pos:column="16"/></init> <condition><expr><name pos:line="25" pos:column="17">i<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">&lt;<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="21">s<pos:position pos:line="25" pos:column="22"/></name></expr>;<pos:position pos:line="25" pos:column="23"/></condition> <incr><expr><operator pos:line="25" pos:column="24">++<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">i<pos:position pos:line="25" pos:column="27"/></name></expr></incr>)<pos:position pos:line="25" pos:column="28"/></control> <block pos:line="25" pos:column="29">{
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">swi<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">==<pos:position pos:line="26" pos:column="19"/></operator> <literal type="number" pos:line="26" pos:column="20">2<pos:position pos:line="26" pos:column="21"/></literal></expr>)<pos:position pos:line="26" pos:column="22"/></condition><then pos:line="26" pos:column="22"> <block pos:line="26" pos:column="23">{
            <expr_stmt><expr><name><name pos:line="27" pos:column="13">bufc<pos:position pos:line="27" pos:column="17"/></name><index pos:line="27" pos:column="17">[<expr><name pos:line="27" pos:column="18">j<pos:position pos:line="27" pos:column="19"/></name></expr>]<pos:position pos:line="27" pos:column="20"/></index></name> <operator pos:line="27" pos:column="21">=<pos:position pos:line="27" pos:column="22"/></operator> <literal type="char" pos:line="27" pos:column="23">'\134'<pos:position pos:line="27" pos:column="29"/></literal></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="28" pos:column="13">++<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">j<pos:position pos:line="28" pos:column="16"/></name></expr>;<pos:position pos:line="28" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="29" pos:column="13">bufc<pos:position pos:line="29" pos:column="17"/></name><index pos:line="29" pos:column="17">[<expr><name pos:line="29" pos:column="18">j<pos:position pos:line="29" pos:column="19"/></name></expr>]<pos:position pos:line="29" pos:column="20"/></index></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <name><name pos:line="29" pos:column="23">l<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">-&gt;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="26">search_ip<pos:position pos:line="29" pos:column="35"/></name><index pos:line="29" pos:column="35">[<expr><name pos:line="29" pos:column="36">i<pos:position pos:line="29" pos:column="37"/></name></expr>]<pos:position pos:line="29" pos:column="38"/></index></name></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="30" pos:column="13">++<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">j<pos:position pos:line="30" pos:column="16"/></name></expr>;<pos:position pos:line="30" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><name pos:line="31" pos:column="13">swi<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <literal type="number" pos:line="31" pos:column="19">1<pos:position pos:line="31" pos:column="20"/></literal></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then> <else pos:line="32" pos:column="11">else <block pos:line="32" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">bufc<pos:position pos:line="33" pos:column="17"/></name><index pos:line="33" pos:column="17">[<expr><name pos:line="33" pos:column="18">j<pos:position pos:line="33" pos:column="19"/></name></expr>]<pos:position pos:line="33" pos:column="20"/></index></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name><name pos:line="33" pos:column="23">l<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">search_ip<pos:position pos:line="33" pos:column="35"/></name><index pos:line="33" pos:column="35">[<expr><name pos:line="33" pos:column="36">i<pos:position pos:line="33" pos:column="37"/></name></expr>]<pos:position pos:line="33" pos:column="38"/></index></name></expr>;<pos:position pos:line="33" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="34" pos:column="13">++<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">j<pos:position pos:line="34" pos:column="16"/></name></expr>;<pos:position pos:line="34" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="35" pos:column="13">++<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="15">swi<pos:position pos:line="35" pos:column="18"/></name></expr>;<pos:position pos:line="35" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></else></if>
    }<pos:position pos:line="37" pos:column="6"/></block></for>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">group<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">==<pos:position pos:line="38" pos:column="17"/></operator> <name pos:line="38" pos:column="18">NULL<pos:position pos:line="38" pos:column="22"/></name></expr>)<pos:position pos:line="38" pos:column="23"/></condition><then pos:line="38" pos:column="23"> <block pos:line="38" pos:column="24">{
        <comment type="block" pos:line="39" pos:column="9">/* No groupMembership= to add, yay! */</comment>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">xstrncpy<pos:position pos:line="40" pos:column="17"/></name><argument_list pos:line="40" pos:column="17">(<argument><expr><name pos:line="40" pos:column="18">bufa<pos:position pos:line="40" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="24">"(&amp;"<pos:position pos:line="40" pos:column="32"/></literal></expr></argument>, <argument><expr><sizeof pos:line="40" pos:column="30">sizeof<argument_list pos:line="40" pos:column="36">(<argument><expr><name pos:line="40" pos:column="37">bufa<pos:position pos:line="40" pos:column="41"/></name></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">strncat<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><name pos:line="41" pos:column="17">bufa<pos:position pos:line="41" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="23">edui_conf<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">.<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="33">search_filter<pos:position pos:line="41" pos:column="46"/></name></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="48">strlen<pos:position pos:line="41" pos:column="54"/></name><argument_list pos:line="41" pos:column="54">(<argument><expr><name><name pos:line="41" pos:column="55">edui_conf<pos:position pos:line="41" pos:column="64"/></name><operator pos:line="41" pos:column="64">.<pos:position pos:line="41" pos:column="65"/></operator><name pos:line="41" pos:column="65">search_filter<pos:position pos:line="41" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="81"/></expr_stmt>
        <comment type="block" pos:line="42" pos:column="9">/* networkAddress */</comment>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">snprintf<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><name pos:line="43" pos:column="18">bufb<pos:position pos:line="43" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="24">sizeof<argument_list pos:line="43" pos:column="30">(<argument><expr><name pos:line="43" pos:column="31">bufb<pos:position pos:line="43" pos:column="35"/></name></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="38">"(|(networkAddress=1\\23%s)"<pos:position pos:line="43" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="68">bufc<pos:position pos:line="43" pos:column="72"/></name></expr></argument>)<pos:position pos:line="43" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="74"/></expr_stmt>
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">l<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">status<pos:position pos:line="44" pos:column="22"/></name></name> <operator pos:line="44" pos:column="23">&amp;<pos:position pos:line="44" pos:column="28"/></operator> <name pos:line="44" pos:column="25">LDAP_IPV4_S<pos:position pos:line="44" pos:column="36"/></name></expr>)<pos:position pos:line="44" pos:column="37"/></condition><then pos:line="44" pos:column="37"> <block pos:line="44" pos:column="38">{
            <decl_stmt><decl><type><name pos:line="45" pos:column="13">int<pos:position pos:line="45" pos:column="16"/></name></type> <name pos:line="45" pos:column="17">ln<pos:position pos:line="45" pos:column="19"/></name> <init pos:line="45" pos:column="20">= <expr><call><name pos:line="45" pos:column="22">snprintf<pos:position pos:line="45" pos:column="30"/></name><argument_list pos:line="45" pos:column="30">(<argument><expr><name pos:line="45" pos:column="31">bufd<pos:position pos:line="45" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="45" pos:column="37">sizeof<argument_list pos:line="45" pos:column="43">(<argument><expr><name pos:line="45" pos:column="44">bufd<pos:position pos:line="45" pos:column="48"/></name></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="51">"(networkAddress=8\\23\\00\\00%s)(networkAddress=9\\23\\00\\00%s))"<pos:position pos:line="45" pos:column="118"/></literal></expr></argument>, \
                              <argument><expr><name pos:line="46" pos:column="31">bufc<pos:position pos:line="46" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="37">bufc<pos:position pos:line="46" pos:column="41"/></name></expr></argument>)<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="46" pos:column="43"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">strncat<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">bufb<pos:position pos:line="47" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="27">bufd<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="33">ln<pos:position pos:line="47" pos:column="35"/></name></expr></argument>)<pos:position pos:line="47" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then> <elseif pos:line="48" pos:column="11">else <if pos:line="48" pos:column="16">if <condition pos:line="48" pos:column="19">(<expr><name><name pos:line="48" pos:column="20">l<pos:position pos:line="48" pos:column="21"/></name><operator pos:line="48" pos:column="21">-&gt;<pos:position pos:line="48" pos:column="26"/></operator><name pos:line="48" pos:column="23">status<pos:position pos:line="48" pos:column="29"/></name></name> <operator pos:line="48" pos:column="30">&amp;<pos:position pos:line="48" pos:column="35"/></operator> <name pos:line="48" pos:column="32">LDAP_IPV6_S<pos:position pos:line="48" pos:column="43"/></name></expr>)<pos:position pos:line="48" pos:column="44"/></condition><then pos:line="48" pos:column="44"> <block pos:line="48" pos:column="45">{
            <decl_stmt><decl><type><name pos:line="49" pos:column="13">int<pos:position pos:line="49" pos:column="16"/></name></type> <name pos:line="49" pos:column="17">ln<pos:position pos:line="49" pos:column="19"/></name> <init pos:line="49" pos:column="20">= <expr><call><name pos:line="49" pos:column="22">snprintf<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><name pos:line="49" pos:column="31">bufd<pos:position pos:line="49" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="37">sizeof<argument_list pos:line="49" pos:column="43">(<argument><expr><name pos:line="49" pos:column="44">bufd<pos:position pos:line="49" pos:column="48"/></name></expr></argument>)<pos:position pos:line="49" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="51">"(networkAddress=10\\23\\00\\00%s)(networkAddress=11\\23\\00\\00%s))"<pos:position pos:line="49" pos:column="120"/></literal></expr></argument>, \
                              <argument><expr><name pos:line="50" pos:column="31">bufc<pos:position pos:line="50" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="37">bufc<pos:position pos:line="50" pos:column="41"/></name></expr></argument>)<pos:position pos:line="50" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="50" pos:column="43"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">strncat<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><name pos:line="51" pos:column="21">bufb<pos:position pos:line="51" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="27">bufd<pos:position pos:line="51" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="33">ln<pos:position pos:line="51" pos:column="35"/></name></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if></elseif> <else pos:line="52" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="53" pos:column="13">strncat<pos:position pos:line="53" pos:column="20"/></name><argument_list pos:line="53" pos:column="20">(<argument><expr><name pos:line="53" pos:column="21">bufb<pos:position pos:line="53" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="27">")"<pos:position pos:line="53" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="32">1<pos:position pos:line="53" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="35"/></expr_stmt></block></else></if>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">strncat<pos:position pos:line="54" pos:column="16"/></name><argument_list pos:line="54" pos:column="16">(<argument><expr><name pos:line="54" pos:column="17">bufa<pos:position pos:line="54" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="23">bufb<pos:position pos:line="54" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="29">strlen<pos:position pos:line="54" pos:column="35"/></name><argument_list pos:line="54" pos:column="35">(<argument><expr><name pos:line="54" pos:column="36">bufb<pos:position pos:line="54" pos:column="40"/></name></expr></argument>)<pos:position pos:line="54" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">strncat<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name pos:line="55" pos:column="17">bufa<pos:position pos:line="55" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="23">")"<pos:position pos:line="55" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="55" pos:column="28">1<pos:position pos:line="55" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then> <else pos:line="56" pos:column="7">else <block pos:line="56" pos:column="12">{
        <comment type="block" pos:line="57" pos:column="9">/* Needs groupMembership= to add... */</comment>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">xstrncpy<pos:position pos:line="58" pos:column="17"/></name><argument_list pos:line="58" pos:column="17">(<argument><expr><name pos:line="58" pos:column="18">bufa<pos:position pos:line="58" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="24">"(&amp;(&amp;"<pos:position pos:line="58" pos:column="38"/></literal></expr></argument>, <argument><expr><sizeof pos:line="58" pos:column="32">sizeof<argument_list pos:line="58" pos:column="38">(<argument><expr><name pos:line="58" pos:column="39">bufa<pos:position pos:line="58" pos:column="43"/></name></expr></argument>)<pos:position pos:line="58" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="58" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">strncat<pos:position pos:line="59" pos:column="16"/></name><argument_list pos:line="59" pos:column="16">(<argument><expr><name pos:line="59" pos:column="17">bufa<pos:position pos:line="59" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="23">edui_conf<pos:position pos:line="59" pos:column="32"/></name><operator pos:line="59" pos:column="32">.<pos:position pos:line="59" pos:column="33"/></operator><name pos:line="59" pos:column="33">search_filter<pos:position pos:line="59" pos:column="46"/></name></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="48">strlen<pos:position pos:line="59" pos:column="54"/></name><argument_list pos:line="59" pos:column="54">(<argument><expr><name><name pos:line="59" pos:column="55">edui_conf<pos:position pos:line="59" pos:column="64"/></name><operator pos:line="59" pos:column="64">.<pos:position pos:line="59" pos:column="65"/></operator><name pos:line="59" pos:column="65">search_filter<pos:position pos:line="59" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="81"/></expr_stmt>
        <comment type="block" pos:line="60" pos:column="9">/* groupMembership -- NOTE: Squid *MUST* provide "cn=" from squid.conf */</comment>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">snprintf<pos:position pos:line="61" pos:column="17"/></name><argument_list pos:line="61" pos:column="17">(<argument><expr><name pos:line="61" pos:column="18">bufg<pos:position pos:line="61" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="24">sizeof<argument_list pos:line="61" pos:column="30">(<argument><expr><name pos:line="61" pos:column="31">bufg<pos:position pos:line="61" pos:column="35"/></name></expr></argument>)<pos:position pos:line="61" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="38">"(groupMembership=%s"<pos:position pos:line="61" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="61">group<pos:position pos:line="61" pos:column="66"/></name></expr></argument>)<pos:position pos:line="61" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="68"/></expr_stmt>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">(<pos:position pos:line="62" pos:column="14"/></operator><name><name pos:line="62" pos:column="14">l<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">-&gt;<pos:position pos:line="62" pos:column="20"/></operator><name pos:line="62" pos:column="17">basedn<pos:position pos:line="62" pos:column="23"/></name><index pos:line="62" pos:column="23">[<expr><literal type="number" pos:line="62" pos:column="24">0<pos:position pos:line="62" pos:column="25"/></literal></expr>]<pos:position pos:line="62" pos:column="26"/></index></name> <operator pos:line="62" pos:column="27">!=<pos:position pos:line="62" pos:column="29"/></operator> <literal type="char" pos:line="62" pos:column="30">'\0'<pos:position pos:line="62" pos:column="34"/></literal><operator pos:line="62" pos:column="34">)<pos:position pos:line="62" pos:column="35"/></operator> <operator pos:line="62" pos:column="36">&amp;&amp;<pos:position pos:line="62" pos:column="46"/></operator> <operator pos:line="62" pos:column="39">(<pos:position pos:line="62" pos:column="40"/></operator><call><name pos:line="62" pos:column="40">strstr<pos:position pos:line="62" pos:column="46"/></name><argument_list pos:line="62" pos:column="46">(<argument><expr><name pos:line="62" pos:column="47">group<pos:position pos:line="62" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="54">l<pos:position pos:line="62" pos:column="55"/></name><operator pos:line="62" pos:column="55">-&gt;<pos:position pos:line="62" pos:column="60"/></operator><name pos:line="62" pos:column="57">basedn<pos:position pos:line="62" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="64"/></argument_list></call> <operator pos:line="62" pos:column="65">==<pos:position pos:line="62" pos:column="67"/></operator> <name pos:line="62" pos:column="68">NULL<pos:position pos:line="62" pos:column="72"/></name><operator pos:line="62" pos:column="72">)<pos:position pos:line="62" pos:column="73"/></operator></expr>)<pos:position pos:line="62" pos:column="74"/></condition><then pos:line="62" pos:column="74"> <block pos:line="62" pos:column="75">{
            <expr_stmt><expr><call><name pos:line="63" pos:column="13">strncat<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">bufg<pos:position pos:line="63" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="27">","<pos:position pos:line="63" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="32">1<pos:position pos:line="63" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">strncat<pos:position pos:line="64" pos:column="20"/></name><argument_list pos:line="64" pos:column="20">(<argument><expr><name pos:line="64" pos:column="21">bufg<pos:position pos:line="64" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="27">l<pos:position pos:line="64" pos:column="28"/></name><operator pos:line="64" pos:column="28">-&gt;<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="30">basedn<pos:position pos:line="64" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="64" pos:column="38">strlen<pos:position pos:line="64" pos:column="44"/></name><argument_list pos:line="64" pos:column="44">(<argument><expr><name><name pos:line="64" pos:column="45">l<pos:position pos:line="64" pos:column="46"/></name><operator pos:line="64" pos:column="46">-&gt;<pos:position pos:line="64" pos:column="51"/></operator><name pos:line="64" pos:column="48">basedn<pos:position pos:line="64" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="64" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">strncat<pos:position pos:line="66" pos:column="16"/></name><argument_list pos:line="66" pos:column="16">(<argument><expr><name pos:line="66" pos:column="17">bufg<pos:position pos:line="66" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="23">")"<pos:position pos:line="66" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="28">1<pos:position pos:line="66" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="67" pos:column="9">strncat<pos:position pos:line="67" pos:column="16"/></name><argument_list pos:line="67" pos:column="16">(<argument><expr><name pos:line="67" pos:column="17">bufa<pos:position pos:line="67" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="23">bufg<pos:position pos:line="67" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="29">strlen<pos:position pos:line="67" pos:column="35"/></name><argument_list pos:line="67" pos:column="35">(<argument><expr><name pos:line="67" pos:column="36">bufg<pos:position pos:line="67" pos:column="40"/></name></expr></argument>)<pos:position pos:line="67" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="43"/></expr_stmt>
        <comment type="block" pos:line="68" pos:column="9">/* networkAddress */</comment>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">snprintf<pos:position pos:line="69" pos:column="17"/></name><argument_list pos:line="69" pos:column="17">(<argument><expr><name pos:line="69" pos:column="18">bufb<pos:position pos:line="69" pos:column="22"/></name></expr></argument>, <argument><expr><sizeof pos:line="69" pos:column="24">sizeof<argument_list pos:line="69" pos:column="30">(<argument><expr><name pos:line="69" pos:column="31">bufb<pos:position pos:line="69" pos:column="35"/></name></expr></argument>)<pos:position pos:line="69" pos:column="36"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="38">"(|(networkAddress=1\\23%s)"<pos:position pos:line="69" pos:column="66"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="68">bufc<pos:position pos:line="69" pos:column="72"/></name></expr></argument>)<pos:position pos:line="69" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="74"/></expr_stmt>
        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name><name pos:line="70" pos:column="13">l<pos:position pos:line="70" pos:column="14"/></name><operator pos:line="70" pos:column="14">-&gt;<pos:position pos:line="70" pos:column="19"/></operator><name pos:line="70" pos:column="16">status<pos:position pos:line="70" pos:column="22"/></name></name> <operator pos:line="70" pos:column="23">&amp;<pos:position pos:line="70" pos:column="28"/></operator> <name pos:line="70" pos:column="25">LDAP_IPV4_S<pos:position pos:line="70" pos:column="36"/></name></expr>)<pos:position pos:line="70" pos:column="37"/></condition><then pos:line="70" pos:column="37"> <block pos:line="70" pos:column="38">{
            <decl_stmt><decl><type><name pos:line="71" pos:column="13">int<pos:position pos:line="71" pos:column="16"/></name></type> <name pos:line="71" pos:column="17">ln<pos:position pos:line="71" pos:column="19"/></name> <init pos:line="71" pos:column="20">= <expr><call><name pos:line="71" pos:column="22">snprintf<pos:position pos:line="71" pos:column="30"/></name><argument_list pos:line="71" pos:column="30">(<argument><expr><name pos:line="71" pos:column="31">bufd<pos:position pos:line="71" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="71" pos:column="37">sizeof<argument_list pos:line="71" pos:column="43">(<argument><expr><name pos:line="71" pos:column="44">bufd<pos:position pos:line="71" pos:column="48"/></name></expr></argument>)<pos:position pos:line="71" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="51">"(networkAddress=8\\23\\00\\00%s)(networkAddress=9\\23\\00\\00%s))"<pos:position pos:line="71" pos:column="118"/></literal></expr></argument>, \
                              <argument><expr><name pos:line="72" pos:column="31">bufc<pos:position pos:line="72" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="37">bufc<pos:position pos:line="72" pos:column="41"/></name></expr></argument>)<pos:position pos:line="72" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="72" pos:column="43"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">strncat<pos:position pos:line="73" pos:column="20"/></name><argument_list pos:line="73" pos:column="20">(<argument><expr><name pos:line="73" pos:column="21">bufb<pos:position pos:line="73" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="27">bufd<pos:position pos:line="73" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="33">ln<pos:position pos:line="73" pos:column="35"/></name></expr></argument>)<pos:position pos:line="73" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then> <elseif pos:line="74" pos:column="11">else <if pos:line="74" pos:column="16">if <condition pos:line="74" pos:column="19">(<expr><name><name pos:line="74" pos:column="20">l<pos:position pos:line="74" pos:column="21"/></name><operator pos:line="74" pos:column="21">-&gt;<pos:position pos:line="74" pos:column="26"/></operator><name pos:line="74" pos:column="23">status<pos:position pos:line="74" pos:column="29"/></name></name> <operator pos:line="74" pos:column="30">&amp;<pos:position pos:line="74" pos:column="35"/></operator> <name pos:line="74" pos:column="32">LDAP_IPV6_S<pos:position pos:line="74" pos:column="43"/></name></expr>)<pos:position pos:line="74" pos:column="44"/></condition><then pos:line="74" pos:column="44"> <block pos:line="74" pos:column="45">{
            <decl_stmt><decl><type><name pos:line="75" pos:column="13">int<pos:position pos:line="75" pos:column="16"/></name></type> <name pos:line="75" pos:column="17">ln<pos:position pos:line="75" pos:column="19"/></name> <init pos:line="75" pos:column="20">= <expr><call><name pos:line="75" pos:column="22">snprintf<pos:position pos:line="75" pos:column="30"/></name><argument_list pos:line="75" pos:column="30">(<argument><expr><name pos:line="75" pos:column="31">bufd<pos:position pos:line="75" pos:column="35"/></name></expr></argument>, <argument><expr><sizeof pos:line="75" pos:column="37">sizeof<argument_list pos:line="75" pos:column="43">(<argument><expr><name pos:line="75" pos:column="44">bufd<pos:position pos:line="75" pos:column="48"/></name></expr></argument>)<pos:position pos:line="75" pos:column="49"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="51">"(networkAddress=10\\23\\00\\00%s)(networkAddress=11\\23\\00\\00%s))"<pos:position pos:line="75" pos:column="120"/></literal></expr></argument>, \
                              <argument><expr><name pos:line="76" pos:column="31">bufc<pos:position pos:line="76" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="37">bufc<pos:position pos:line="76" pos:column="41"/></name></expr></argument>)<pos:position pos:line="76" pos:column="42"/></argument_list></call></expr></init></decl>;<pos:position pos:line="76" pos:column="43"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="77" pos:column="13">strncat<pos:position pos:line="77" pos:column="20"/></name><argument_list pos:line="77" pos:column="20">(<argument><expr><name pos:line="77" pos:column="21">bufb<pos:position pos:line="77" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="27">bufd<pos:position pos:line="77" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="77" pos:column="33">ln<pos:position pos:line="77" pos:column="35"/></name></expr></argument>)<pos:position pos:line="77" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if></elseif> <else pos:line="78" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="13">strncat<pos:position pos:line="79" pos:column="20"/></name><argument_list pos:line="79" pos:column="20">(<argument><expr><name pos:line="79" pos:column="21">bufb<pos:position pos:line="79" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="27">")"<pos:position pos:line="79" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="32">1<pos:position pos:line="79" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="35"/></expr_stmt></block></else></if>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">strncat<pos:position pos:line="80" pos:column="16"/></name><argument_list pos:line="80" pos:column="16">(<argument><expr><name pos:line="80" pos:column="17">bufa<pos:position pos:line="80" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="23">bufb<pos:position pos:line="80" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="80" pos:column="29">strlen<pos:position pos:line="80" pos:column="35"/></name><argument_list pos:line="80" pos:column="35">(<argument><expr><name pos:line="80" pos:column="36">bufb<pos:position pos:line="80" pos:column="40"/></name></expr></argument>)<pos:position pos:line="80" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="80" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">strncat<pos:position pos:line="81" pos:column="16"/></name><argument_list pos:line="81" pos:column="16">(<argument><expr><name pos:line="81" pos:column="17">bufa<pos:position pos:line="81" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="23">"))"<pos:position pos:line="81" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="29">2<pos:position pos:line="81" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></else></if>
    <expr_stmt><expr><name pos:line="83" pos:column="5">s<pos:position pos:line="83" pos:column="6"/></name> <operator pos:line="83" pos:column="7">=<pos:position pos:line="83" pos:column="8"/></operator> <call><name pos:line="83" pos:column="9">strlen<pos:position pos:line="83" pos:column="15"/></name><argument_list pos:line="83" pos:column="15">(<argument><expr><name pos:line="83" pos:column="16">bufa<pos:position pos:line="83" pos:column="20"/></name></expr></argument>)<pos:position pos:line="83" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="84" pos:column="5">xstrncpy<pos:position pos:line="84" pos:column="13"/></name><argument_list pos:line="84" pos:column="13">(<argument><expr><name><name pos:line="84" pos:column="14">l<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">-&gt;<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="17">search_filter<pos:position pos:line="84" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="32">bufa<pos:position pos:line="84" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="84" pos:column="38">sizeof<argument_list pos:line="84" pos:column="44">(<argument><expr><name><name pos:line="84" pos:column="45">l<pos:position pos:line="84" pos:column="46"/></name><operator pos:line="84" pos:column="46">-&gt;<pos:position pos:line="84" pos:column="51"/></operator><name pos:line="84" pos:column="48">search_filter<pos:position pos:line="84" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="84" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="84" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="64"/></expr_stmt>
    <return pos:line="85" pos:column="5">return <expr><name pos:line="85" pos:column="12">s<pos:position pos:line="85" pos:column="13"/></name></expr>;<pos:position pos:line="85" pos:column="14"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

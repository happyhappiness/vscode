<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3962_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Config<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">removeService<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">(<parameter><decl><type><specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <name pos:line="2" pos:column="41">String<pos:position pos:line="2" pos:column="47"/></name><modifier pos:line="2" pos:column="47">&amp;<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="49">service<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">removeRule<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">service<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">Groups<pos:position pos:line="5" pos:column="17"/></name><modifier pos:line="5" pos:column="17">&amp;<pos:position pos:line="5" pos:column="22"/></modifier></type> <name pos:line="5" pos:column="19">groups<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><call><name pos:line="5" pos:column="28">AllGroups<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">()<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="40"/></decl_stmt>
    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><decl><type><name pos:line="6" pos:column="10">unsigned<pos:position pos:line="6" pos:column="18"/></name> <name pos:line="6" pos:column="19">int<pos:position pos:line="6" pos:column="22"/></name></type> <name pos:line="6" pos:column="23">i<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><literal type="number" pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></init> <condition><expr><name pos:line="6" pos:column="30">i<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">&lt;<pos:position pos:line="6" pos:column="36"/></operator> <call><name><name pos:line="6" pos:column="34">groups<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">.<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">size<pos:position pos:line="6" pos:column="45"/></name></name><argument_list pos:line="6" pos:column="45">()<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></condition> <incr/>)<pos:position pos:line="6" pos:column="50"/></control> <block pos:line="6" pos:column="51">{
        <decl_stmt><decl><type><specifier pos:line="7" pos:column="9">const<pos:position pos:line="7" pos:column="14"/></specifier> <name pos:line="7" pos:column="15">ServiceGroupPointer<pos:position pos:line="7" pos:column="34"/></name></type> <name pos:line="7" pos:column="35">group<pos:position pos:line="7" pos:column="40"/></name> <init pos:line="7" pos:column="41">= <expr><name><name pos:line="7" pos:column="43">groups<pos:position pos:line="7" pos:column="49"/></name><index pos:line="7" pos:column="49">[<expr><name pos:line="7" pos:column="50">i<pos:position pos:line="7" pos:column="51"/></name></expr>]<pos:position pos:line="7" pos:column="52"/></index></name></expr></init></decl>;<pos:position pos:line="7" pos:column="53"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name><name pos:line="8" pos:column="15">ServiceGroup<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">::<pos:position pos:line="8" pos:column="29"/></operator><name pos:line="8" pos:column="29">Store<pos:position pos:line="8" pos:column="34"/></name></name><modifier pos:line="8" pos:column="34">&amp;<pos:position pos:line="8" pos:column="39"/></modifier></type> <name pos:line="8" pos:column="36">services<pos:position pos:line="8" pos:column="44"/></name> <init pos:line="8" pos:column="45">= <expr><name><name pos:line="8" pos:column="47">group<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">-&gt;<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="54">services<pos:position pos:line="8" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="63"/></decl_stmt>
        <typedef pos:line="9" pos:column="9">typedef <type><name><name pos:line="9" pos:column="17">ServiceGroup<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">::<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="31">Store<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">::<pos:position pos:line="9" pos:column="38"/></operator><name pos:line="9" pos:column="38">const_iterator<pos:position pos:line="9" pos:column="52"/></name></name></type> <name pos:line="9" pos:column="53">SGSI<pos:position pos:line="9" pos:column="57"/></name>;<pos:position pos:line="9" pos:column="58"/></typedef>
        <for pos:line="10" pos:column="9">for <control pos:line="10" pos:column="13">(<init><decl><type><name pos:line="10" pos:column="14">SGSI<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">it<pos:position pos:line="10" pos:column="21"/></name> <init pos:line="10" pos:column="22">= <expr><call><name><name pos:line="10" pos:column="24">services<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">.<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">begin<pos:position pos:line="10" pos:column="38"/></name></name><argument_list pos:line="10" pos:column="38">()<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="41"/></init> <condition><expr><name pos:line="10" pos:column="42">it<pos:position pos:line="10" pos:column="44"/></name> <operator pos:line="10" pos:column="45">!=<pos:position pos:line="10" pos:column="47"/></operator> <call><name><name pos:line="10" pos:column="48">services<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">.<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="57">end<pos:position pos:line="10" pos:column="60"/></name></name><argument_list pos:line="10" pos:column="60">()<pos:position pos:line="10" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="63"/></condition> <incr><expr><operator pos:line="10" pos:column="64">++<pos:position pos:line="10" pos:column="66"/></operator><name pos:line="10" pos:column="66">it<pos:position pos:line="10" pos:column="68"/></name></expr></incr>)<pos:position pos:line="10" pos:column="69"/></control> <block pos:line="10" pos:column="70">{
            <if pos:line="11" pos:column="13">if <condition pos:line="11" pos:column="16">(<expr><operator pos:line="11" pos:column="17">*<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">it<pos:position pos:line="11" pos:column="20"/></name> <operator pos:line="11" pos:column="21">==<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">service<pos:position pos:line="11" pos:column="31"/></name></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32"> <block pos:line="11" pos:column="33">{
                <expr_stmt><expr><call><name><name pos:line="12" pos:column="17">group<pos:position pos:line="12" pos:column="22"/></name><operator pos:line="12" pos:column="22">-&gt;<pos:position pos:line="12" pos:column="27"/></operator><name pos:line="12" pos:column="24">removedServices<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">.<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="40">push_back<pos:position pos:line="12" pos:column="49"/></name></name><argument_list pos:line="12" pos:column="49">(<argument><expr><name pos:line="12" pos:column="50">service<pos:position pos:line="12" pos:column="57"/></name></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
                <decl_stmt><decl><type><name><name pos:line="13" pos:column="17">ServiceGroup<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">::<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">Store<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">::<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="38">iterator<pos:position pos:line="13" pos:column="46"/></name></name></type> <name pos:line="13" pos:column="47">newend<pos:position pos:line="13" pos:column="53"/></name></decl>;<pos:position pos:line="13" pos:column="54"/></decl_stmt>
                <expr_stmt><expr><name pos:line="14" pos:column="17">newend<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <call><name><name pos:line="14" pos:column="26">std<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">::<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">remove<pos:position pos:line="14" pos:column="37"/></name></name><argument_list pos:line="14" pos:column="37">(<argument><expr><call><name><name pos:line="14" pos:column="38">group<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">services<pos:position pos:line="14" pos:column="53"/></name><operator pos:line="14" pos:column="53">.<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="54">begin<pos:position pos:line="14" pos:column="59"/></name></name><argument_list pos:line="14" pos:column="59">()<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="14" pos:column="63">group<pos:position pos:line="14" pos:column="68"/></name><operator pos:line="14" pos:column="68">-&gt;<pos:position pos:line="14" pos:column="73"/></operator><name pos:line="14" pos:column="70">services<pos:position pos:line="14" pos:column="78"/></name><operator pos:line="14" pos:column="78">.<pos:position pos:line="14" pos:column="79"/></operator><name pos:line="14" pos:column="79">end<pos:position pos:line="14" pos:column="82"/></name></name><argument_list pos:line="14" pos:column="82">()<pos:position pos:line="14" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="86">service<pos:position pos:line="14" pos:column="93"/></name></expr></argument>)<pos:position pos:line="14" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="95"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="15" pos:column="17">group<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">services<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">.<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">resize<pos:position pos:line="15" pos:column="39"/></name></name><argument_list pos:line="15" pos:column="39">(<argument><expr><name pos:line="15" pos:column="40">newend<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">-<pos:position pos:line="15" pos:column="47"/></operator><call><name><name pos:line="15" pos:column="47">group<pos:position pos:line="15" pos:column="52"/></name><operator pos:line="15" pos:column="52">-&gt;<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="54">services<pos:position pos:line="15" pos:column="62"/></name><operator pos:line="15" pos:column="62">.<pos:position pos:line="15" pos:column="63"/></operator><name pos:line="15" pos:column="63">begin<pos:position pos:line="15" pos:column="68"/></name></name><argument_list pos:line="15" pos:column="68">()<pos:position pos:line="15" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="16" pos:column="17">debugs<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="number" pos:line="16" pos:column="24">93<pos:position pos:line="16" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="28">5<pos:position pos:line="16" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="31">"adaptation service "<pos:position pos:line="16" pos:column="52"/></literal> <operator pos:line="16" pos:column="53">&lt;&lt;<pos:position pos:line="16" pos:column="61"/></operator> <name pos:line="16" pos:column="56">service<pos:position pos:line="16" pos:column="63"/></name> <operator pos:line="16" pos:column="64">&lt;&lt;<pos:position pos:line="16" pos:column="72"/></operator>
                       <literal type="string" pos:line="17" pos:column="24">" removed from group "<pos:position pos:line="17" pos:column="46"/></literal> <operator pos:line="17" pos:column="47">&lt;&lt;<pos:position pos:line="17" pos:column="55"/></operator> <name><name pos:line="17" pos:column="50">group<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">-&gt;<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="57">id<pos:position pos:line="17" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="61"/></expr_stmt>
                <break pos:line="18" pos:column="17">break;<pos:position pos:line="18" pos:column="23"/></break>
            }<pos:position pos:line="19" pos:column="14"/></block></then></if>
        }<pos:position pos:line="20" pos:column="10"/></block></for>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name><name pos:line="21" pos:column="13">services<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">.<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">empty<pos:position pos:line="21" pos:column="27"/></name></name><argument_list pos:line="21" pos:column="27">()<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30"> <block pos:line="21" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">removeRule<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name><name pos:line="22" pos:column="24">group<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">-&gt;<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="31">id<pos:position pos:line="22" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
            <decl_stmt><decl><type><name><name pos:line="23" pos:column="13">Groups<pos:position pos:line="23" pos:column="19"/></name><operator pos:line="23" pos:column="19">::<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="21">iterator<pos:position pos:line="23" pos:column="29"/></name></name></type> <name pos:line="23" pos:column="30">newend<pos:position pos:line="23" pos:column="36"/></name></decl>;<pos:position pos:line="23" pos:column="37"/></decl_stmt>
            <expr_stmt><expr><name pos:line="24" pos:column="13">newend<pos:position pos:line="24" pos:column="19"/></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <call><name><name pos:line="24" pos:column="22">std<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">::<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">remove<pos:position pos:line="24" pos:column="33"/></name></name><argument_list pos:line="24" pos:column="33">(<argument><expr><call><name pos:line="24" pos:column="34">AllGroups<pos:position pos:line="24" pos:column="43"/></name><argument_list pos:line="24" pos:column="43">()<pos:position pos:line="24" pos:column="45"/></argument_list></call><operator pos:line="24" pos:column="45">.<pos:position pos:line="24" pos:column="46"/></operator><call><name pos:line="24" pos:column="46">begin<pos:position pos:line="24" pos:column="51"/></name><argument_list pos:line="24" pos:column="51">()<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="55">AllGroups<pos:position pos:line="24" pos:column="64"/></name><argument_list pos:line="24" pos:column="64">()<pos:position pos:line="24" pos:column="66"/></argument_list></call><operator pos:line="24" pos:column="66">.<pos:position pos:line="24" pos:column="67"/></operator><call><name pos:line="24" pos:column="67">end<pos:position pos:line="24" pos:column="70"/></name><argument_list pos:line="24" pos:column="70">()<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="74">group<pos:position pos:line="24" pos:column="79"/></name></expr></argument>)<pos:position pos:line="24" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">AllGroups<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">()<pos:position pos:line="25" pos:column="24"/></argument_list></call><operator pos:line="25" pos:column="24">.<pos:position pos:line="25" pos:column="25"/></operator><call><name pos:line="25" pos:column="25">resize<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">newend<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-<pos:position pos:line="25" pos:column="39"/></operator><call><name pos:line="25" pos:column="39">AllGroups<pos:position pos:line="25" pos:column="48"/></name><argument_list pos:line="25" pos:column="48">()<pos:position pos:line="25" pos:column="50"/></argument_list></call><operator pos:line="25" pos:column="50">.<pos:position pos:line="25" pos:column="51"/></operator><call><name pos:line="25" pos:column="51">begin<pos:position pos:line="25" pos:column="56"/></name><argument_list pos:line="25" pos:column="56">()<pos:position pos:line="25" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then> <else pos:line="26" pos:column="11">else <block pos:line="26" pos:column="16">{
            <expr_stmt><expr><operator pos:line="27" pos:column="13">++<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">i<pos:position pos:line="27" pos:column="16"/></name></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></else></if>
    }<pos:position pos:line="29" pos:column="6"/></block></for>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

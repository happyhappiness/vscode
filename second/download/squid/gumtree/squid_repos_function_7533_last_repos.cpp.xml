<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7533_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">CertificateDb<pos:position pos:line="1" pos:column="24"/></name><operator pos:line="1" pos:column="24">::<pos:position pos:line="1" pos:column="26"/></operator><name pos:line="1" pos:column="26">deleteByHostname<pos:position pos:line="1" pos:column="42"/></name></name><parameter_list pos:line="1" pos:column="42">(<parameter><decl><type><name><name pos:line="1" pos:column="43">std<pos:position pos:line="1" pos:column="46"/></name><operator pos:line="1" pos:column="46">::<pos:position pos:line="1" pos:column="48"/></operator><name pos:line="1" pos:column="48">string<pos:position pos:line="1" pos:column="54"/></name></name> <specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <modifier pos:line="1" pos:column="61">&amp;<pos:position pos:line="1" pos:column="66"/></modifier></type> <name pos:line="1" pos:column="63">host<pos:position pos:line="1" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="68"/></parameter_list> <block pos:line="1" pos:column="69">{
    <if pos:line="2" pos:column="5">if <condition pos:line="2" pos:column="8">(<expr><operator pos:line="2" pos:column="9">!<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">db<pos:position pos:line="2" pos:column="12"/></name></expr>)<pos:position pos:line="2" pos:column="13"/></condition><then pos:line="2" pos:column="13">
        <block type="pseudo"><return pos:line="3" pos:column="9">return <expr><literal type="boolean" pos:line="3" pos:column="16">false<pos:position pos:line="3" pos:column="21"/></literal></expr>;<pos:position pos:line="3" pos:column="22"/></return></block></then></if>

<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="5" pos:column="31"/></name></expr></cpp:if>
    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><decl><type><name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <call><name pos:line="6" pos:column="25">sk_OPENSSL_PSTRING_num<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">(<argument><expr><call><name><name pos:line="6" pos:column="48">db<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">.<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="51">get<pos:position pos:line="6" pos:column="54"/></name></name><argument_list pos:line="6" pos:column="54">()<pos:position pos:line="6" pos:column="56"/></argument_list></call><operator pos:line="6" pos:column="56">-&gt;<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="58">data<pos:position pos:line="6" pos:column="62"/></name></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="64"/></condition> <incr><expr><operator pos:line="6" pos:column="65">++<pos:position pos:line="6" pos:column="67"/></operator><name pos:line="6" pos:column="67">i<pos:position pos:line="6" pos:column="68"/></name></expr></incr>)<pos:position pos:line="6" pos:column="69"/></control> <block pos:line="6" pos:column="70">{
<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">SQUID_STACKOF_PSTRINGDATA_HACK<pos:position pos:line="7" pos:column="35"/></name></expr></cpp:if>
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier><modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type> <name pos:line="8" pos:column="23">current_row<pos:position pos:line="8" pos:column="34"/></name> <init pos:line="8" pos:column="35">= <expr><operator pos:line="8" pos:column="37">(<pos:position pos:line="8" pos:column="38"/></operator><operator pos:line="8" pos:column="38">(<pos:position pos:line="8" pos:column="39"/></operator><specifier pos:line="8" pos:column="39">const<pos:position pos:line="8" pos:column="44"/></specifier> <name pos:line="8" pos:column="45">char<pos:position pos:line="8" pos:column="49"/></name> <operator pos:line="8" pos:column="50">*<pos:position pos:line="8" pos:column="51"/></operator><operator pos:line="8" pos:column="51">*<pos:position pos:line="8" pos:column="52"/></operator><operator pos:line="8" pos:column="52">)<pos:position pos:line="8" pos:column="53"/></operator><call><name pos:line="8" pos:column="53">sk_value<pos:position pos:line="8" pos:column="61"/></name><argument_list pos:line="8" pos:column="61">(<argument><expr><call><name pos:line="8" pos:column="62">CHECKED_STACK_OF<pos:position pos:line="8" pos:column="78"/></name><argument_list pos:line="8" pos:column="78">(<argument><expr><name pos:line="8" pos:column="79">OPENSSL_PSTRING<pos:position pos:line="8" pos:column="94"/></name></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="96">db<pos:position pos:line="8" pos:column="98"/></name><operator pos:line="8" pos:column="98">.<pos:position pos:line="8" pos:column="99"/></operator><name pos:line="8" pos:column="99">get<pos:position pos:line="8" pos:column="102"/></name></name><argument_list pos:line="8" pos:column="102">()<pos:position pos:line="8" pos:column="104"/></argument_list></call><operator pos:line="8" pos:column="104">-&gt;<pos:position pos:line="8" pos:column="109"/></operator><name pos:line="8" pos:column="106">data<pos:position pos:line="8" pos:column="110"/></name></expr></argument>)<pos:position pos:line="8" pos:column="111"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="113">i<pos:position pos:line="8" pos:column="114"/></name></expr></argument>)<pos:position pos:line="8" pos:column="115"/></argument_list></call><operator pos:line="8" pos:column="115">)<pos:position pos:line="8" pos:column="116"/></operator></expr></init></decl>;<pos:position pos:line="8" pos:column="117"/></decl_stmt>
<cpp:else pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">else<pos:position pos:line="9" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">char<pos:position pos:line="10" pos:column="19"/></name> <modifier pos:line="10" pos:column="20">*<pos:position pos:line="10" pos:column="21"/></modifier><modifier pos:line="10" pos:column="21">*<pos:position pos:line="10" pos:column="22"/></modifier></type> <name pos:line="10" pos:column="23">current_row<pos:position pos:line="10" pos:column="34"/></name> <init pos:line="10" pos:column="35">= <expr><operator pos:line="10" pos:column="37">(<pos:position pos:line="10" pos:column="38"/></operator><operator pos:line="10" pos:column="38">(<pos:position pos:line="10" pos:column="39"/></operator><specifier pos:line="10" pos:column="39">const<pos:position pos:line="10" pos:column="44"/></specifier> <name pos:line="10" pos:column="45">char<pos:position pos:line="10" pos:column="49"/></name> <operator pos:line="10" pos:column="50">*<pos:position pos:line="10" pos:column="51"/></operator><operator pos:line="10" pos:column="51">*<pos:position pos:line="10" pos:column="52"/></operator><operator pos:line="10" pos:column="52">)<pos:position pos:line="10" pos:column="53"/></operator><call><name pos:line="10" pos:column="53">sk_OPENSSL_PSTRING_value<pos:position pos:line="10" pos:column="77"/></name><argument_list pos:line="10" pos:column="77">(<argument><expr><call><name><name pos:line="10" pos:column="78">db<pos:position pos:line="10" pos:column="80"/></name><operator pos:line="10" pos:column="80">.<pos:position pos:line="10" pos:column="81"/></operator><name pos:line="10" pos:column="81">get<pos:position pos:line="10" pos:column="84"/></name></name><argument_list pos:line="10" pos:column="84">()<pos:position pos:line="10" pos:column="86"/></argument_list></call><operator pos:line="10" pos:column="86">-&gt;<pos:position pos:line="10" pos:column="91"/></operator><name pos:line="10" pos:column="88">data<pos:position pos:line="10" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="94">i<pos:position pos:line="10" pos:column="95"/></name></expr></argument>)<pos:position pos:line="10" pos:column="96"/></argument_list></call><operator pos:line="10" pos:column="96">)<pos:position pos:line="10" pos:column="97"/></operator></expr></init></decl>;<pos:position pos:line="10" pos:column="98"/></decl_stmt>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:else pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">else<pos:position pos:line="12" pos:column="6"/></cpp:directive></cpp:else>
    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><decl><type><name pos:line="13" pos:column="10">int<pos:position pos:line="13" pos:column="13"/></name></type> <name pos:line="13" pos:column="14">i<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><literal type="number" pos:line="13" pos:column="18">0<pos:position pos:line="13" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="20"/></init> <condition><expr><name pos:line="13" pos:column="21">i<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;<pos:position pos:line="13" pos:column="27"/></operator> <call><name pos:line="13" pos:column="25">sk_num<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><call><name><name pos:line="13" pos:column="32">db<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">.<pos:position pos:line="13" pos:column="35"/></operator><name pos:line="13" pos:column="35">get<pos:position pos:line="13" pos:column="38"/></name></name><argument_list pos:line="13" pos:column="38">()<pos:position pos:line="13" pos:column="40"/></argument_list></call><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">data<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></condition> <incr><expr><operator pos:line="13" pos:column="49">++<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="51">i<pos:position pos:line="13" pos:column="52"/></name></expr></incr>)<pos:position pos:line="13" pos:column="53"/></control> <block pos:line="13" pos:column="54">{
        <decl_stmt><decl><type><specifier pos:line="14" pos:column="9">const<pos:position pos:line="14" pos:column="14"/></specifier> <name pos:line="14" pos:column="15">char<pos:position pos:line="14" pos:column="19"/></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier><modifier pos:line="14" pos:column="21">*<pos:position pos:line="14" pos:column="22"/></modifier></type> <name pos:line="14" pos:column="23">current_row<pos:position pos:line="14" pos:column="34"/></name> <init pos:line="14" pos:column="35">= <expr><operator pos:line="14" pos:column="37">(<pos:position pos:line="14" pos:column="38"/></operator><operator pos:line="14" pos:column="38">(<pos:position pos:line="14" pos:column="39"/></operator><specifier pos:line="14" pos:column="39">const<pos:position pos:line="14" pos:column="44"/></specifier> <name pos:line="14" pos:column="45">char<pos:position pos:line="14" pos:column="49"/></name> <operator pos:line="14" pos:column="50">*<pos:position pos:line="14" pos:column="51"/></operator><operator pos:line="14" pos:column="51">*<pos:position pos:line="14" pos:column="52"/></operator><operator pos:line="14" pos:column="52">)<pos:position pos:line="14" pos:column="53"/></operator><call><name pos:line="14" pos:column="53">sk_value<pos:position pos:line="14" pos:column="61"/></name><argument_list pos:line="14" pos:column="61">(<argument><expr><call><name><name pos:line="14" pos:column="62">db<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">.<pos:position pos:line="14" pos:column="65"/></operator><name pos:line="14" pos:column="65">get<pos:position pos:line="14" pos:column="68"/></name></name><argument_list pos:line="14" pos:column="68">()<pos:position pos:line="14" pos:column="70"/></argument_list></call><operator pos:line="14" pos:column="70">-&gt;<pos:position pos:line="14" pos:column="75"/></operator><name pos:line="14" pos:column="72">data<pos:position pos:line="14" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="78">i<pos:position pos:line="14" pos:column="79"/></name></expr></argument>)<pos:position pos:line="14" pos:column="80"/></argument_list></call><operator pos:line="14" pos:column="80">)<pos:position pos:line="14" pos:column="81"/></operator></expr></init></decl>;<pos:position pos:line="14" pos:column="82"/></decl_stmt>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">host<pos:position pos:line="16" pos:column="17"/></name> <operator pos:line="16" pos:column="18">==<pos:position pos:line="16" pos:column="20"/></operator> <name><name pos:line="16" pos:column="21">current_row<pos:position pos:line="16" pos:column="32"/></name><index pos:line="16" pos:column="32">[<expr><name pos:line="16" pos:column="33">cnlName<pos:position pos:line="16" pos:column="40"/></name></expr>]<pos:position pos:line="16" pos:column="41"/></index></name></expr>)<pos:position pos:line="16" pos:column="42"/></condition><then pos:line="16" pos:column="42"> <block pos:line="16" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">deleteRow<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">current_row<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">i<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
            <return pos:line="18" pos:column="13">return <expr><literal type="boolean" pos:line="18" pos:column="20">true<pos:position pos:line="18" pos:column="24"/></literal></expr>;<pos:position pos:line="18" pos:column="25"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></for>
    <return pos:line="21" pos:column="5">return <expr><literal type="boolean" pos:line="21" pos:column="12">false<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></for>

<function><type><name pos:line="24" pos:column="1">bool<pos:position pos:line="24" pos:column="5"/></name></type> <name><name pos:line="24" pos:column="6">Ssl<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">::<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">CertificateDb<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">::<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">hasRows<pos:position pos:line="24" pos:column="33"/></name></name><parameter_list pos:line="24" pos:column="33">()<pos:position pos:line="24" pos:column="35"/></parameter_list> <specifier pos:line="24" pos:column="36">const<pos:position pos:line="24" pos:column="41"/></specifier>
<block pos:line="25" pos:column="1">{
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">db<pos:position pos:line="26" pos:column="12"/></name></expr>)<pos:position pos:line="26" pos:column="13"/></condition><then pos:line="26" pos:column="13">
        <block type="pseudo"><return pos:line="27" pos:column="9">return <expr><literal type="boolean" pos:line="27" pos:column="16">false<pos:position pos:line="27" pos:column="21"/></literal></expr>;<pos:position pos:line="27" pos:column="22"/></return></block></then></if>

<cpp:if pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">if<pos:position pos:line="29" pos:column="4"/></cpp:directive> <expr><name pos:line="29" pos:column="5">SQUID_SSLTXTDB_PSTRINGDATA<pos:position pos:line="29" pos:column="31"/></name></expr></cpp:if>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">sk_OPENSSL_PSTRING_num<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><call><name><name pos:line="30" pos:column="32">db<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">.<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">get<pos:position pos:line="30" pos:column="38"/></name></name><argument_list pos:line="30" pos:column="38">()<pos:position pos:line="30" pos:column="40"/></argument_list></call><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">data<pos:position pos:line="30" pos:column="46"/></name></expr></argument>)<pos:position pos:line="30" pos:column="47"/></argument_list></call> <operator pos:line="30" pos:column="48">==<pos:position pos:line="30" pos:column="50"/></operator> <literal type="number" pos:line="30" pos:column="51">0<pos:position pos:line="30" pos:column="52"/></literal></expr>)<pos:position pos:line="30" pos:column="53"/></condition><then pos:line="30" pos:column="53">
<cpp:else pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">else<pos:position pos:line="31" pos:column="6"/></cpp:directive></cpp:else>
    <block type="pseudo"><if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">sk_num<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><call><name><name pos:line="32" pos:column="16">db<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">.<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="19">get<pos:position pos:line="32" pos:column="22"/></name></name><argument_list pos:line="32" pos:column="22">()<pos:position pos:line="32" pos:column="24"/></argument_list></call><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">data<pos:position pos:line="32" pos:column="30"/></name></expr></argument>)<pos:position pos:line="32" pos:column="31"/></argument_list></call> <operator pos:line="32" pos:column="32">==<pos:position pos:line="32" pos:column="34"/></operator> <literal type="number" pos:line="32" pos:column="35">0<pos:position pos:line="32" pos:column="36"/></literal></expr>)<pos:position pos:line="32" pos:column="37"/></condition><then pos:line="32" pos:column="37">
<cpp:endif pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">endif<pos:position pos:line="33" pos:column="7"/></cpp:directive></cpp:endif>
        <block type="pseudo"><return pos:line="34" pos:column="9">return <expr><literal type="boolean" pos:line="34" pos:column="16">false<pos:position pos:line="34" pos:column="21"/></literal></expr>;<pos:position pos:line="34" pos:column="22"/></return></block></then></if></block></then></if>
    <return pos:line="35" pos:column="5">return <expr><literal type="boolean" pos:line="35" pos:column="12">true<pos:position pos:line="35" pos:column="16"/></literal></expr>;<pos:position pos:line="35" pos:column="17"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function>

<function><type><name pos:line="38" pos:column="1">bool<pos:position pos:line="38" pos:column="5"/></name></type> <name><name pos:line="38" pos:column="6">Ssl<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">::<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="11">CertificateDb<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">::<pos:position pos:line="38" pos:column="26"/></operator><name pos:line="38" pos:column="26">IsEnabledDiskStore<pos:position pos:line="38" pos:column="44"/></name></name><parameter_list pos:line="38" pos:column="44">()<pos:position pos:line="38" pos:column="46"/></parameter_list> <specifier pos:line="38" pos:column="47">const<pos:position pos:line="38" pos:column="52"/></specifier> <block pos:line="38" pos:column="53">{
    <return pos:line="39" pos:column="5">return <expr><name pos:line="39" pos:column="12">enabled_disk_store<pos:position pos:line="39" pos:column="30"/></name></expr>;<pos:position pos:line="39" pos:column="31"/></return>
}<pos:position pos:line="40" pos:column="2"/></block></function></block></function></unit>

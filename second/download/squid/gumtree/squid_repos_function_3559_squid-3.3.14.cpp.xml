<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3559_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">noteBodyConsumerAborted<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">(<parameter><decl><type><name><name pos:line="2" pos:column="40">BodyPipe<pos:position pos:line="2" pos:column="48"/></name><operator pos:line="2" pos:column="48">::<pos:position pos:line="2" pos:column="50"/></operator><name pos:line="2" pos:column="50">Pointer<pos:position pos:line="2" pos:column="57"/></name></name></type></decl></parameter> )<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// request reader may get stuck waiting for space if nobody consumes body</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">bodyPipe<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">!=<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="6" pos:column="9">bodyPipe<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">enableAutoConsumption<pos:position pos:line="6" pos:column="40"/></name></name><argument_list pos:line="6" pos:column="40">()<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">stopReceiving<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><literal type="string" pos:line="8" pos:column="19">"virgin request body consumer aborted"<pos:position pos:line="8" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt> <comment type="line" pos:line="8" pos:column="60">// closes ASAP</comment>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2706_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ShmWriter<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">copyToShmSlice<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name><name pos:line="2" pos:column="27">Ipc<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">StoreMap<pos:position pos:line="2" pos:column="40"/></name><operator pos:line="2" pos:column="40">::<pos:position pos:line="2" pos:column="42"/></operator><name pos:line="2" pos:column="42">Slice<pos:position pos:line="2" pos:column="47"/></name></name> <modifier pos:line="2" pos:column="48">&amp;<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="49">slice<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ipc<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">Mem<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">PageId<pos:position pos:line="4" pos:column="21"/></name></name></type> <name pos:line="4" pos:column="22">page<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><call><name><name pos:line="4" pos:column="29">store<pos:position pos:line="4" pos:column="34"/></name><operator pos:line="4" pos:column="34">.<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">pageForSlice<pos:position pos:line="4" pos:column="47"/></name></name><argument_list pos:line="4" pos:column="47">(<argument><expr><name pos:line="4" pos:column="48">lastSlice<pos:position pos:line="4" pos:column="57"/></name></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">20<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">7<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"entry "<pos:position pos:line="5" pos:column="27"/></literal> <operator pos:line="5" pos:column="28">&lt;&lt;<pos:position pos:line="5" pos:column="36"/></operator> <operator pos:line="5" pos:column="31">*<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">entry<pos:position pos:line="5" pos:column="37"/></name> <operator pos:line="5" pos:column="38">&lt;&lt;<pos:position pos:line="5" pos:column="46"/></operator> <literal type="string" pos:line="5" pos:column="41">" slice "<pos:position pos:line="5" pos:column="50"/></literal> <operator pos:line="5" pos:column="51">&lt;&lt;<pos:position pos:line="5" pos:column="59"/></operator> <name pos:line="5" pos:column="54">lastSlice<pos:position pos:line="5" pos:column="63"/></name> <operator pos:line="5" pos:column="64">&lt;&lt;<pos:position pos:line="5" pos:column="72"/></operator> <literal type="string" pos:line="5" pos:column="67">" has "<pos:position pos:line="5" pos:column="74"/></literal> <operator pos:line="5" pos:column="75">&lt;&lt;<pos:position pos:line="5" pos:column="83"/></operator>
           <name pos:line="6" pos:column="12">page<pos:position pos:line="6" pos:column="16"/></name></expr></argument>)<pos:position pos:line="6" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">Must<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">bufWritten<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">&lt;=<pos:position pos:line="8" pos:column="26"/></operator> <name pos:line="8" pos:column="24">bufSize<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">int64_t<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">writingDebt<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><name pos:line="9" pos:column="33">bufSize<pos:position pos:line="9" pos:column="40"/></name> <operator pos:line="9" pos:column="41">-<pos:position pos:line="9" pos:column="42"/></operator> <name pos:line="9" pos:column="43">bufWritten<pos:position pos:line="9" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">int64_t<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">pageSize<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><call><name><name pos:line="10" pos:column="30">Ipc<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">::<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">Mem<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">::<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">PageSize<pos:position pos:line="10" pos:column="48"/></name></name><argument_list pos:line="10" pos:column="48">()<pos:position pos:line="10" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">int64_t<pos:position pos:line="11" pos:column="18"/></name></type> <name pos:line="11" pos:column="19">sliceOffset<pos:position pos:line="11" pos:column="30"/></name> <init pos:line="11" pos:column="31">= <expr><name pos:line="11" pos:column="33">totalWritten<pos:position pos:line="11" pos:column="45"/></name> <operator pos:line="11" pos:column="46">%<pos:position pos:line="11" pos:column="47"/></operator> <name pos:line="11" pos:column="48">pageSize<pos:position pos:line="11" pos:column="56"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">int64_t<pos:position pos:line="12" pos:column="18"/></name></type> <name pos:line="12" pos:column="19">copySize<pos:position pos:line="12" pos:column="27"/></name> <init pos:line="12" pos:column="28">= <expr><call><name><name pos:line="12" pos:column="30">std<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">::<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">min<pos:position pos:line="12" pos:column="38"/></name></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">writingDebt<pos:position pos:line="12" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="52">pageSize<pos:position pos:line="12" pos:column="60"/></name> <operator pos:line="12" pos:column="61">-<pos:position pos:line="12" pos:column="62"/></operator> <name pos:line="12" pos:column="63">sliceOffset<pos:position pos:line="12" pos:column="74"/></name></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="76"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">memcpy<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><cast type="static" pos:line="13" pos:column="12">static_cast<argument_list type="generic" pos:line="13" pos:column="23">&lt;<argument><expr><name pos:line="13" pos:column="24">char<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">*<pos:position pos:line="13" pos:column="29"/></operator></expr></argument>&gt;<pos:position pos:line="13" pos:column="33"/></argument_list><argument_list pos:line="13" pos:column="30">(<argument><expr><call><name pos:line="13" pos:column="31">PagePointer<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">(<argument><expr><name pos:line="13" pos:column="43">page<pos:position pos:line="13" pos:column="47"/></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></cast> <operator pos:line="13" pos:column="50">+<pos:position pos:line="13" pos:column="51"/></operator> <name pos:line="13" pos:column="52">sliceOffset<pos:position pos:line="13" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="65">buf<pos:position pos:line="13" pos:column="68"/></name> <operator pos:line="13" pos:column="69">+<pos:position pos:line="13" pos:column="70"/></operator> <name pos:line="13" pos:column="71">bufWritten<pos:position pos:line="13" pos:column="81"/></name></expr></argument>,
           <argument><expr><name pos:line="14" pos:column="12">copySize<pos:position pos:line="14" pos:column="20"/></name></expr></argument>)<pos:position pos:line="14" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">20<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">7<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"copied "<pos:position pos:line="16" pos:column="28"/></literal> <operator pos:line="16" pos:column="29">&lt;&lt;<pos:position pos:line="16" pos:column="37"/></operator> <name><name pos:line="16" pos:column="32">slice<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">.<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">size<pos:position pos:line="16" pos:column="42"/></name></name> <operator pos:line="16" pos:column="43">&lt;&lt;<pos:position pos:line="16" pos:column="51"/></operator> <literal type="char" pos:line="16" pos:column="46">'+'<pos:position pos:line="16" pos:column="49"/></literal> <operator pos:line="16" pos:column="50">&lt;&lt;<pos:position pos:line="16" pos:column="58"/></operator> <name pos:line="16" pos:column="53">copySize<pos:position pos:line="16" pos:column="61"/></name> <operator pos:line="16" pos:column="62">&lt;&lt;<pos:position pos:line="16" pos:column="70"/></operator> <literal type="string" pos:line="16" pos:column="65">" bytes of "<pos:position pos:line="16" pos:column="77"/></literal> <operator pos:line="16" pos:column="78">&lt;&lt;<pos:position pos:line="16" pos:column="86"/></operator>
           <name pos:line="17" pos:column="12">entry<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">&lt;&lt;<pos:position pos:line="17" pos:column="26"/></operator> <literal type="string" pos:line="17" pos:column="21">" from "<pos:position pos:line="17" pos:column="29"/></literal> <operator pos:line="17" pos:column="30">&lt;&lt;<pos:position pos:line="17" pos:column="38"/></operator> <name pos:line="17" pos:column="33">sliceOffset<pos:position pos:line="17" pos:column="44"/></name> <operator pos:line="17" pos:column="45">&lt;&lt;<pos:position pos:line="17" pos:column="53"/></operator> <literal type="string" pos:line="17" pos:column="48">" in "<pos:position pos:line="17" pos:column="54"/></literal> <operator pos:line="17" pos:column="55">&lt;&lt;<pos:position pos:line="17" pos:column="63"/></operator> <name pos:line="17" pos:column="58">page<pos:position pos:line="17" pos:column="62"/></name></expr></argument>)<pos:position pos:line="17" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="64"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">slice<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">.<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">size<pos:position pos:line="19" pos:column="15"/></name></name> <operator pos:line="19" pos:column="16">+=<pos:position pos:line="19" pos:column="18"/></operator> <name pos:line="19" pos:column="19">copySize<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">bufWritten<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">+=<pos:position pos:line="20" pos:column="18"/></operator> <name pos:line="20" pos:column="19">copySize<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">totalWritten<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">+=<pos:position pos:line="21" pos:column="20"/></operator> <name pos:line="21" pos:column="21">copySize<pos:position pos:line="21" pos:column="29"/></name></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
    <comment type="line" pos:line="22" pos:column="5">// fresh anchor.basics.swap_file_sz is already set [to the stale value]</comment>

    <comment type="line" pos:line="24" pos:column="5">// either we wrote everything or we filled the entire slice</comment>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">Must<pos:position pos:line="25" pos:column="9"/></name><argument_list pos:line="25" pos:column="9">(<argument><expr><name pos:line="25" pos:column="10">bufWritten<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">==<pos:position pos:line="25" pos:column="23"/></operator> <name pos:line="25" pos:column="24">bufSize<pos:position pos:line="25" pos:column="31"/></name> <operator pos:line="25" pos:column="32">||<pos:position pos:line="25" pos:column="34"/></operator> <name pos:line="25" pos:column="35">sliceOffset<pos:position pos:line="25" pos:column="46"/></name> <operator pos:line="25" pos:column="47">+<pos:position pos:line="25" pos:column="48"/></operator> <name pos:line="25" pos:column="49">copySize<pos:position pos:line="25" pos:column="57"/></name> <operator pos:line="25" pos:column="58">==<pos:position pos:line="25" pos:column="60"/></operator> <name pos:line="25" pos:column="61">pageSize<pos:position pos:line="25" pos:column="69"/></name></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="71"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4615_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLHierCodeData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">parse<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">()<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">t<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">t<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <call><name pos:line="6" pos:column="17">strtokFile<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">()<pos:position pos:line="6" pos:column="29"/></argument_list></call><operator pos:line="6" pos:column="29">)<pos:position pos:line="6" pos:column="30"/></operator></expr>)<pos:position pos:line="6" pos:column="31"/></condition> <block pos:line="6" pos:column="32">{
        <for pos:line="7" pos:column="9">for <control pos:line="7" pos:column="13">(<init><decl><type><name pos:line="7" pos:column="14">hier_code<pos:position pos:line="7" pos:column="23"/></name></type> <name pos:line="7" pos:column="24">iter<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name pos:line="7" pos:column="31">HIER_NONE<pos:position pos:line="7" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="41"/></init> <condition><expr><name pos:line="7" pos:column="42">iter<pos:position pos:line="7" pos:column="46"/></name> <operator pos:line="7" pos:column="47">&lt;=<pos:position pos:line="7" pos:column="52"/></operator> <name pos:line="7" pos:column="50">HIER_MAX<pos:position pos:line="7" pos:column="58"/></name></expr>;<pos:position pos:line="7" pos:column="59"/></condition> <incr><expr><operator pos:line="7" pos:column="60">++<pos:position pos:line="7" pos:column="62"/></operator><name pos:line="7" pos:column="62">iter<pos:position pos:line="7" pos:column="66"/></name></expr></incr>)<pos:position pos:line="7" pos:column="67"/></control> <block pos:line="7" pos:column="68">{
            <if pos:line="8" pos:column="13">if <condition pos:line="8" pos:column="16">(<expr><name pos:line="8" pos:column="17">iter<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">==<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">HIER_MAX<pos:position pos:line="8" pos:column="33"/></name></expr>)<pos:position pos:line="8" pos:column="34"/></condition><then pos:line="8" pos:column="34"> <block pos:line="8" pos:column="35">{
                <expr_stmt><expr><call><name pos:line="9" pos:column="17">fatalf<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">(<argument><expr><literal type="string" pos:line="9" pos:column="24">"ERROR: No such hier_code '%s'"<pos:position pos:line="9" pos:column="55"/></literal></expr></argument>,<argument><expr><name pos:line="9" pos:column="56">t<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="59"/></expr_stmt>
                <return pos:line="10" pos:column="17">return;<pos:position pos:line="10" pos:column="24"/></return>
            }<pos:position pos:line="11" pos:column="14"/></block></then></if>
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><call><name pos:line="12" pos:column="17">strcmp<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name><name pos:line="12" pos:column="24">hier_code_str<pos:position pos:line="12" pos:column="37"/></name><index pos:line="12" pos:column="37">[<expr><name pos:line="12" pos:column="38">iter<pos:position pos:line="12" pos:column="42"/></name></expr>]<pos:position pos:line="12" pos:column="43"/></index></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="44">t<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call> <operator pos:line="12" pos:column="47">==<pos:position pos:line="12" pos:column="49"/></operator> <literal type="number" pos:line="12" pos:column="50">0<pos:position pos:line="12" pos:column="51"/></literal></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52"> <block pos:line="12" pos:column="53">{
                <expr_stmt><expr><name><name pos:line="13" pos:column="17">values<pos:position pos:line="13" pos:column="23"/></name><index pos:line="13" pos:column="23">[<expr><name pos:line="13" pos:column="24">iter<pos:position pos:line="13" pos:column="28"/></name></expr>]<pos:position pos:line="13" pos:column="29"/></index></name> <operator pos:line="13" pos:column="30">=<pos:position pos:line="13" pos:column="31"/></operator> <literal type="boolean" pos:line="13" pos:column="32">true<pos:position pos:line="13" pos:column="36"/></literal></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
                <break pos:line="14" pos:column="17">break;<pos:position pos:line="14" pos:column="23"/></break> <comment type="line" pos:line="14" pos:column="24">// back to while-loop</comment>
            }<pos:position pos:line="15" pos:column="14"/></block></then></if>
        }<pos:position pos:line="16" pos:column="10"/></block></for>
    }<pos:position pos:line="17" pos:column="6"/></block></while>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3390_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">purgeRequest<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">88<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"Config2.onoff.enable_purge = "<pos:position pos:line="4" pos:column="50"/></literal> <operator pos:line="4" pos:column="51">&lt;&lt;<pos:position pos:line="4" pos:column="59"/></operator>
           <name><name pos:line="5" pos:column="12">Config2<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">onoff<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">.<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">enable_purge<pos:position pos:line="5" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="40"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">Config2<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">.<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="18">onoff<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">.<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">enable_purge<pos:position pos:line="7" pos:column="36"/></name></name></expr>)<pos:position pos:line="7" pos:column="37"/></condition><then pos:line="7" pos:column="37"> <block pos:line="7" pos:column="38">{
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">http<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">logType<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">=<pos:position pos:line="8" pos:column="24"/></operator> <name pos:line="8" pos:column="25">LOG_TCP_DENIED<pos:position pos:line="8" pos:column="39"/></name></expr>;<pos:position pos:line="8" pos:column="40"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">ErrorState<pos:position pos:line="9" pos:column="19"/></name> <modifier pos:line="9" pos:column="20">*<pos:position pos:line="9" pos:column="21"/></modifier></type><name pos:line="9" pos:column="21">err<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><call><name pos:line="9" pos:column="27">clientBuildError<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">ERR_ACCESS_DENIED<pos:position pos:line="9" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="63">HTTP_FORBIDDEN<pos:position pos:line="9" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="79">NULL<pos:position pos:line="9" pos:column="83"/></name></expr></argument>, <argument><expr><call><name><name pos:line="9" pos:column="85">http<pos:position pos:line="9" pos:column="89"/></name><operator pos:line="9" pos:column="89">-&gt;<pos:position pos:line="9" pos:column="94"/></operator><name pos:line="9" pos:column="91">getConn<pos:position pos:line="9" pos:column="98"/></name></name><argument_list pos:line="9" pos:column="98">()<pos:position pos:line="9" pos:column="100"/></argument_list></call><operator pos:line="9" pos:column="100">-&gt;<pos:position pos:line="9" pos:column="105"/></operator><name><name pos:line="9" pos:column="102">clientConnection<pos:position pos:line="9" pos:column="118"/></name><operator pos:line="9" pos:column="118">-&gt;<pos:position pos:line="9" pos:column="123"/></operator><name pos:line="9" pos:column="120">remote<pos:position pos:line="9" pos:column="126"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="128">http<pos:position pos:line="9" pos:column="132"/></name><operator pos:line="9" pos:column="132">-&gt;<pos:position pos:line="9" pos:column="137"/></operator><name pos:line="9" pos:column="134">request<pos:position pos:line="9" pos:column="141"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="142"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="143"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">startError<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">err<pos:position pos:line="10" pos:column="23"/></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="14" pos:column="5">/* Release both IP cache */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">ipcacheInvalidate<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><call><name><name pos:line="15" pos:column="23">http<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">-&gt;<pos:position pos:line="15" pos:column="32"/></operator><name pos:line="15" pos:column="29">request<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">GetHost<pos:position pos:line="15" pos:column="45"/></name></name><argument_list pos:line="15" pos:column="45">()<pos:position pos:line="15" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="49"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name><name pos:line="17" pos:column="10">http<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">flags<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">.<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">purging<pos:position pos:line="17" pos:column="29"/></name></name></expr>)<pos:position pos:line="17" pos:column="30"/></condition><then pos:line="17" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">purgeRequestFindObjectToPurge<pos:position pos:line="18" pos:column="38"/></name><argument_list pos:line="18" pos:column="38">()<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt></block></then>
    <else pos:line="19" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="9">purgeDoMissPurge<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">()<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt></block></else></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2069_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreController<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">handleIdleEntry<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><name pos:line="2" pos:column="34">StoreEntry<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">&amp;<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="46">e<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">bool<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">keepInLocalMemory<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><literal type="boolean" pos:line="4" pos:column="30">false<pos:position pos:line="4" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">EBIT_TEST<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><name><name pos:line="6" pos:column="19">e<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">.<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">flags<pos:position pos:line="6" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="28">ENTRY_SPECIAL<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="43"/></condition><then pos:line="6" pos:column="43"> <block pos:line="6" pos:column="44">{
        <comment type="line" pos:line="7" pos:column="9">// Icons (and cache digests?) should stay in store_table until we</comment>
        <comment type="line" pos:line="8" pos:column="9">// have a dedicated storage for them (that would not purge them).</comment>
        <comment type="line" pos:line="9" pos:column="9">// They are not managed [well] by any specific Store handled below.</comment>
        <expr_stmt><expr><name pos:line="10" pos:column="9">keepInLocalMemory<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">=<pos:position pos:line="10" pos:column="28"/></operator> <literal type="boolean" pos:line="10" pos:column="29">true<pos:position pos:line="10" pos:column="33"/></literal></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then> <elseif pos:line="11" pos:column="7">else <if pos:line="11" pos:column="12">if <condition pos:line="11" pos:column="15">(<expr><name pos:line="11" pos:column="16">memStore<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{
        <comment type="line" pos:line="12" pos:column="9">// leave keepInLocalMemory false; memStore maintains its own cache</comment>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if></elseif> <else pos:line="13" pos:column="7">else <block pos:line="13" pos:column="12">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">keepInLocalMemory<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <call><name pos:line="14" pos:column="29">keepForLocalMemoryCache<pos:position pos:line="14" pos:column="52"/></name><argument_list pos:line="14" pos:column="52">(<argument><expr><name pos:line="14" pos:column="53">e<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call> <operator pos:line="14" pos:column="56">&amp;&amp;<pos:position pos:line="14" pos:column="66"/></operator> <comment type="line" pos:line="14" pos:column="59">// in good shape and</comment>
                            <comment type="line" pos:line="15" pos:column="29">// the local memory cache is not overflowing</comment>
                            <operator pos:line="16" pos:column="29">(<pos:position pos:line="16" pos:column="30"/></operator><call><name><name pos:line="16" pos:column="30">mem_node<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">::<pos:position pos:line="16" pos:column="40"/></operator><name pos:line="16" pos:column="40">InUseCount<pos:position pos:line="16" pos:column="50"/></name></name><argument_list pos:line="16" pos:column="50">()<pos:position pos:line="16" pos:column="52"/></argument_list></call> <operator pos:line="16" pos:column="53">&lt;=<pos:position pos:line="16" pos:column="58"/></operator> <name pos:line="16" pos:column="56">store_pages_max<pos:position pos:line="16" pos:column="71"/></name><operator pos:line="16" pos:column="71">)<pos:position pos:line="16" pos:column="72"/></operator></expr>;<pos:position pos:line="16" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></else></if>

    <comment type="line" pos:line="19" pos:column="5">// An idle, unlocked entry that only belongs to a SwapDir which controls</comment>
    <comment type="line" pos:line="20" pos:column="5">// its own index, should not stay in the global store_table.</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><call><name pos:line="21" pos:column="10">dereference<pos:position pos:line="21" pos:column="21"/></name><argument_list pos:line="21" pos:column="21">(<argument><expr><name pos:line="21" pos:column="22">e<pos:position pos:line="21" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="25">keepInLocalMemory<pos:position pos:line="21" pos:column="42"/></name></expr></argument>)<pos:position pos:line="21" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="44"/></condition><then pos:line="21" pos:column="44"> <block pos:line="21" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">20<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="20">5<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="23">HERE<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">&lt;&lt;<pos:position pos:line="22" pos:column="36"/></operator> <literal type="string" pos:line="22" pos:column="31">"destroying unlocked entry: "<pos:position pos:line="22" pos:column="60"/></literal> <operator pos:line="22" pos:column="61">&lt;&lt;<pos:position pos:line="22" pos:column="69"/></operator> <operator pos:line="22" pos:column="64">&amp;<pos:position pos:line="22" pos:column="69"/></operator><name pos:line="22" pos:column="65">e<pos:position pos:line="22" pos:column="66"/></name> <operator pos:line="22" pos:column="67">&lt;&lt;<pos:position pos:line="22" pos:column="75"/></operator> <literal type="char" pos:line="22" pos:column="70">' '<pos:position pos:line="22" pos:column="73"/></literal> <operator pos:line="22" pos:column="74">&lt;&lt;<pos:position pos:line="22" pos:column="82"/></operator> <name pos:line="22" pos:column="77">e<pos:position pos:line="22" pos:column="78"/></name></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">destroyStoreEntry<pos:position pos:line="23" pos:column="26"/></name><argument_list pos:line="23" pos:column="26">(<argument><expr><cast type="static" pos:line="23" pos:column="27">static_cast<argument_list type="generic" pos:line="23" pos:column="38">&lt;<argument><expr><name pos:line="23" pos:column="39">hash_link<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">*<pos:position pos:line="23" pos:column="49"/></operator></expr></argument>&gt;<pos:position pos:line="23" pos:column="53"/></argument_list><argument_list pos:line="23" pos:column="50">(<argument><expr><operator pos:line="23" pos:column="51">&amp;<pos:position pos:line="23" pos:column="56"/></operator><name pos:line="23" pos:column="52">e<pos:position pos:line="23" pos:column="53"/></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></cast></expr></argument>)<pos:position pos:line="23" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="56"/></expr_stmt>
        <return pos:line="24" pos:column="9">return;<pos:position pos:line="24" pos:column="16"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">debugs<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="number" pos:line="27" pos:column="12">20<pos:position pos:line="27" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="16">5<pos:position pos:line="27" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="19">HERE<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">&lt;&lt;<pos:position pos:line="27" pos:column="32"/></operator> <literal type="string" pos:line="27" pos:column="27">"keepInLocalMemory: "<pos:position pos:line="27" pos:column="48"/></literal> <operator pos:line="27" pos:column="49">&lt;&lt;<pos:position pos:line="27" pos:column="57"/></operator> <name pos:line="27" pos:column="52">keepInLocalMemory<pos:position pos:line="27" pos:column="69"/></name></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt>

    <comment type="line" pos:line="29" pos:column="5">// TODO: move this into [non-shared] memory cache class when we have one</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">keepInLocalMemory<pos:position pos:line="30" pos:column="26"/></name></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27"> <block pos:line="30" pos:column="28">{
        <expr_stmt><expr><call><name><name pos:line="31" pos:column="9">e<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">.<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">setMemStatus<pos:position pos:line="31" pos:column="23"/></name></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name pos:line="31" pos:column="24">IN_MEMORY<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="32" pos:column="9">e<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">.<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">mem_obj<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">unlinkRequest<pos:position pos:line="32" pos:column="33"/></name></name><argument_list pos:line="32" pos:column="33">()<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then> <else pos:line="33" pos:column="7">else <block pos:line="33" pos:column="12">{
        <expr_stmt><expr><call><name><name pos:line="34" pos:column="9">e<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">.<pos:position pos:line="34" pos:column="11"/></operator><name pos:line="34" pos:column="11">purgeMem<pos:position pos:line="34" pos:column="19"/></name></name><argument_list pos:line="34" pos:column="19">()<pos:position pos:line="34" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt> <comment type="line" pos:line="34" pos:column="23">// may free e</comment>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

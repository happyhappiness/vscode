<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_925_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">commSetTcpRcvbuf<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">int<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">fd<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">size<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">setsockopt<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><name pos:line="4" pos:column="20">fd<pos:position pos:line="4" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="24">SOL_SOCKET<pos:position pos:line="4" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="36">SO_RCVBUF<pos:position pos:line="4" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="4" pos:column="47">(<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="48">char<pos:position pos:line="4" pos:column="52"/></name> <operator pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></operator><operator pos:line="4" pos:column="54">)<pos:position pos:line="4" pos:column="55"/></operator> <operator pos:line="4" pos:column="56">&amp;<pos:position pos:line="4" pos:column="61"/></operator><name pos:line="4" pos:column="57">size<pos:position pos:line="4" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="63">sizeof<argument_list pos:line="4" pos:column="69">(<argument><expr><name pos:line="4" pos:column="70">size<pos:position pos:line="4" pos:column="74"/></name></expr></argument>)<pos:position pos:line="4" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="76"/></argument_list></call> <operator pos:line="4" pos:column="77">&lt;<pos:position pos:line="4" pos:column="81"/></operator> <literal type="number" pos:line="4" pos:column="79">0<pos:position pos:line="4" pos:column="80"/></literal></expr>)<pos:position pos:line="4" pos:column="81"/></condition><then pos:line="4" pos:column="81">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">50<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="20">DBG_IMPORTANT<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="35">"commSetTcpRcvbuf: FD "<pos:position pos:line="5" pos:column="58"/></literal> <operator pos:line="5" pos:column="59">&lt;&lt;<pos:position pos:line="5" pos:column="67"/></operator> <name pos:line="5" pos:column="62">fd<pos:position pos:line="5" pos:column="64"/></name> <operator pos:line="5" pos:column="65">&lt;&lt;<pos:position pos:line="5" pos:column="73"/></operator> <literal type="string" pos:line="5" pos:column="68">", SIZE "<pos:position pos:line="5" pos:column="77"/></literal> <operator pos:line="5" pos:column="78">&lt;&lt;<pos:position pos:line="5" pos:column="86"/></operator> <name pos:line="5" pos:column="81">size<pos:position pos:line="5" pos:column="85"/></name> <operator pos:line="5" pos:column="86">&lt;&lt;<pos:position pos:line="5" pos:column="94"/></operator> <literal type="string" pos:line="5" pos:column="89">": "<pos:position pos:line="5" pos:column="93"/></literal> <operator pos:line="5" pos:column="94">&lt;&lt;<pos:position pos:line="5" pos:column="102"/></operator> <call><name pos:line="5" pos:column="97">xstrerror<pos:position pos:line="5" pos:column="106"/></name><argument_list pos:line="5" pos:column="106">()<pos:position pos:line="5" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="110"/></expr_stmt></block></then></if>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">setsockopt<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">fd<pos:position pos:line="6" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="24">SOL_SOCKET<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">SO_SNDBUF<pos:position pos:line="6" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="47">(<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="48">char<pos:position pos:line="6" pos:column="52"/></name> <operator pos:line="6" pos:column="53">*<pos:position pos:line="6" pos:column="54"/></operator><operator pos:line="6" pos:column="54">)<pos:position pos:line="6" pos:column="55"/></operator> <operator pos:line="6" pos:column="56">&amp;<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="57">size<pos:position pos:line="6" pos:column="61"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="63">sizeof<argument_list pos:line="6" pos:column="69">(<argument><expr><name pos:line="6" pos:column="70">size<pos:position pos:line="6" pos:column="74"/></name></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="76"/></argument_list></call> <operator pos:line="6" pos:column="77">&lt;<pos:position pos:line="6" pos:column="81"/></operator> <literal type="number" pos:line="6" pos:column="79">0<pos:position pos:line="6" pos:column="80"/></literal></expr>)<pos:position pos:line="6" pos:column="81"/></condition><then pos:line="6" pos:column="81">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">50<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="20">DBG_IMPORTANT<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="35">"commSetTcpRcvbuf: FD "<pos:position pos:line="7" pos:column="58"/></literal> <operator pos:line="7" pos:column="59">&lt;&lt;<pos:position pos:line="7" pos:column="67"/></operator> <name pos:line="7" pos:column="62">fd<pos:position pos:line="7" pos:column="64"/></name> <operator pos:line="7" pos:column="65">&lt;&lt;<pos:position pos:line="7" pos:column="73"/></operator> <literal type="string" pos:line="7" pos:column="68">", SIZE "<pos:position pos:line="7" pos:column="77"/></literal> <operator pos:line="7" pos:column="78">&lt;&lt;<pos:position pos:line="7" pos:column="86"/></operator> <name pos:line="7" pos:column="81">size<pos:position pos:line="7" pos:column="85"/></name> <operator pos:line="7" pos:column="86">&lt;&lt;<pos:position pos:line="7" pos:column="94"/></operator> <literal type="string" pos:line="7" pos:column="89">": "<pos:position pos:line="7" pos:column="93"/></literal> <operator pos:line="7" pos:column="94">&lt;&lt;<pos:position pos:line="7" pos:column="102"/></operator> <call><name pos:line="7" pos:column="97">xstrerror<pos:position pos:line="7" pos:column="106"/></name><argument_list pos:line="7" pos:column="106">()<pos:position pos:line="7" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="110"/></expr_stmt></block></then></if>
<cpp:ifdef pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">ifdef<pos:position pos:line="8" pos:column="7"/></cpp:directive> <name pos:line="8" pos:column="8">TCP_WINDOW_CLAMP<pos:position pos:line="8" pos:column="24"/></name></cpp:ifdef>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">setsockopt<pos:position pos:line="9" pos:column="19"/></name><argument_list pos:line="9" pos:column="19">(<argument><expr><name pos:line="9" pos:column="20">fd<pos:position pos:line="9" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="24">SOL_TCP<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="33">TCP_WINDOW_CLAMP<pos:position pos:line="9" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="51">(<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="52">char<pos:position pos:line="9" pos:column="56"/></name> <operator pos:line="9" pos:column="57">*<pos:position pos:line="9" pos:column="58"/></operator><operator pos:line="9" pos:column="58">)<pos:position pos:line="9" pos:column="59"/></operator> <operator pos:line="9" pos:column="60">&amp;<pos:position pos:line="9" pos:column="65"/></operator><name pos:line="9" pos:column="61">size<pos:position pos:line="9" pos:column="65"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="67">sizeof<argument_list pos:line="9" pos:column="73">(<argument><expr><name pos:line="9" pos:column="74">size<pos:position pos:line="9" pos:column="78"/></name></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="80"/></argument_list></call> <operator pos:line="9" pos:column="81">&lt;<pos:position pos:line="9" pos:column="85"/></operator> <literal type="number" pos:line="9" pos:column="83">0<pos:position pos:line="9" pos:column="84"/></literal></expr>)<pos:position pos:line="9" pos:column="85"/></condition><then pos:line="9" pos:column="85">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">50<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="20">DBG_IMPORTANT<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="35">"commSetTcpRcvbuf: FD "<pos:position pos:line="10" pos:column="58"/></literal> <operator pos:line="10" pos:column="59">&lt;&lt;<pos:position pos:line="10" pos:column="67"/></operator> <name pos:line="10" pos:column="62">fd<pos:position pos:line="10" pos:column="64"/></name> <operator pos:line="10" pos:column="65">&lt;&lt;<pos:position pos:line="10" pos:column="73"/></operator> <literal type="string" pos:line="10" pos:column="68">", SIZE "<pos:position pos:line="10" pos:column="77"/></literal> <operator pos:line="10" pos:column="78">&lt;&lt;<pos:position pos:line="10" pos:column="86"/></operator> <name pos:line="10" pos:column="81">size<pos:position pos:line="10" pos:column="85"/></name> <operator pos:line="10" pos:column="86">&lt;&lt;<pos:position pos:line="10" pos:column="94"/></operator> <literal type="string" pos:line="10" pos:column="89">": "<pos:position pos:line="10" pos:column="93"/></literal> <operator pos:line="10" pos:column="94">&lt;&lt;<pos:position pos:line="10" pos:column="102"/></operator> <call><name pos:line="10" pos:column="97">xstrerror<pos:position pos:line="10" pos:column="106"/></name><argument_list pos:line="10" pos:column="106">()<pos:position pos:line="10" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="110"/></expr_stmt></block></then></if>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

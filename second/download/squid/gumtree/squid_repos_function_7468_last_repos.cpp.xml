<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7468_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">long<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerOptions<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">parseFlags<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name><name pos:line="4" pos:column="9">sslFlags<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">.<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">isEmpty<pos:position pos:line="4" pos:column="25"/></name></name><argument_list pos:line="4" pos:column="25">()<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="28"/></condition><then pos:line="4" pos:column="28">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="number" pos:line="5" pos:column="16">0<pos:position pos:line="5" pos:column="17"/></literal></expr>;<pos:position pos:line="5" pos:column="18"/></return></block></then></if>

    <struct><specifier pos:line="7" pos:column="5">static<pos:position pos:line="7" pos:column="11"/></specifier> struct <block pos:line="7" pos:column="19">{<public type="default" pos:line="7" pos:column="20">
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">SBuf<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">label<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">long<pos:position pos:line="9" pos:column="13"/></name></type> <name pos:line="9" pos:column="14">mask<pos:position pos:line="9" pos:column="18"/></name></decl>;<pos:position pos:line="9" pos:column="19"/></decl_stmt>
    <pos:position pos:line="10" pos:column="5"/></public>}<pos:position pos:line="10" pos:column="6"/></block> <decl><name><name pos:line="10" pos:column="7">flagTokens<pos:position pos:line="10" pos:column="17"/></name><index pos:line="10" pos:column="17">[]<pos:position pos:line="10" pos:column="19"/></index></name> <init pos:line="10" pos:column="20">= <expr><block pos:line="10" pos:column="22">{
        <expr><block pos:line="11" pos:column="9">{ <expr><call><name pos:line="11" pos:column="11">SBuf<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="string" pos:line="11" pos:column="16">"NO_DEFAULT_CA"<pos:position pos:line="11" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="32"/></argument_list></call></expr>, <expr><name pos:line="11" pos:column="34">SSL_FLAG_NO_DEFAULT_CA<pos:position pos:line="11" pos:column="56"/></name></expr> }<pos:position pos:line="11" pos:column="58"/></block></expr>,
        <expr><block pos:line="12" pos:column="9">{ <expr><call><name pos:line="12" pos:column="11">SBuf<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="string" pos:line="12" pos:column="16">"DELAYED_AUTH"<pos:position pos:line="12" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>, <expr><name pos:line="12" pos:column="33">SSL_FLAG_DELAYED_AUTH<pos:position pos:line="12" pos:column="54"/></name></expr> }<pos:position pos:line="12" pos:column="56"/></block></expr>,
        <expr><block pos:line="13" pos:column="9">{ <expr><call><name pos:line="13" pos:column="11">SBuf<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="string" pos:line="13" pos:column="16">"DONT_VERIFY_PEER"<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>, <expr><name pos:line="13" pos:column="37">SSL_FLAG_DONT_VERIFY_PEER<pos:position pos:line="13" pos:column="62"/></name></expr> }<pos:position pos:line="13" pos:column="64"/></block></expr>,
        <expr><block pos:line="14" pos:column="9">{ <expr><call><name pos:line="14" pos:column="11">SBuf<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="string" pos:line="14" pos:column="16">"DONT_VERIFY_DOMAIN"<pos:position pos:line="14" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>, <expr><name pos:line="14" pos:column="39">SSL_FLAG_DONT_VERIFY_DOMAIN<pos:position pos:line="14" pos:column="66"/></name></expr> }<pos:position pos:line="14" pos:column="68"/></block></expr>,
        <expr><block pos:line="15" pos:column="9">{ <expr><call><name pos:line="15" pos:column="11">SBuf<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="string" pos:line="15" pos:column="16">"NO_SESSION_REUSE"<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>, <expr><name pos:line="15" pos:column="37">SSL_FLAG_NO_SESSION_REUSE<pos:position pos:line="15" pos:column="62"/></name></expr> }<pos:position pos:line="15" pos:column="64"/></block></expr>,
<cpp:if pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">if<pos:position pos:line="16" pos:column="4"/></cpp:directive> <expr><name pos:line="16" pos:column="5">X509_V_FLAG_CRL_CHECK<pos:position pos:line="16" pos:column="26"/></name></expr></cpp:if>
        <expr><block pos:line="17" pos:column="9">{ <expr><call><name pos:line="17" pos:column="11">SBuf<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="string" pos:line="17" pos:column="16">"VERIFY_CRL"<pos:position pos:line="17" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="29"/></argument_list></call></expr>, <expr><name pos:line="17" pos:column="31">SSL_FLAG_VERIFY_CRL<pos:position pos:line="17" pos:column="50"/></name></expr> }<pos:position pos:line="17" pos:column="52"/></block></expr>,
        <expr><block pos:line="18" pos:column="9">{ <expr><call><name pos:line="18" pos:column="11">SBuf<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="string" pos:line="18" pos:column="16">"VERIFY_CRL_ALL"<pos:position pos:line="18" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>, <expr><name pos:line="18" pos:column="35">SSL_FLAG_VERIFY_CRL_ALL<pos:position pos:line="18" pos:column="58"/></name></expr> }<pos:position pos:line="18" pos:column="60"/></block></expr>,
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
        <expr><block pos:line="20" pos:column="9">{ <expr><call><name pos:line="20" pos:column="11">SBuf<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">()<pos:position pos:line="20" pos:column="17"/></argument_list></call></expr>, <expr><literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr> }<pos:position pos:line="20" pos:column="22"/></block></expr>
    }<pos:position pos:line="21" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="21" pos:column="7"/></struct>

    <decl_stmt><decl><type><name><operator pos:line="23" pos:column="5">::<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">Parser<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">::<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">Tokenizer<pos:position pos:line="23" pos:column="24"/></name></name></type> <name pos:line="23" pos:column="25">tok<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">sslFlags<pos:position pos:line="23" pos:column="37"/></name></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></decl>;<pos:position pos:line="23" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="24" pos:column="5">static<pos:position pos:line="24" pos:column="11"/></specifier> <type><specifier pos:line="24" pos:column="12">const<pos:position pos:line="24" pos:column="17"/></specifier> <name pos:line="24" pos:column="18">CharacterSet<pos:position pos:line="24" pos:column="30"/></name></type> <name pos:line="24" pos:column="31">delims<pos:position pos:line="24" pos:column="37"/></name><argument_list pos:line="24" pos:column="37">(<argument><expr><literal type="string" pos:line="24" pos:column="38">"Flag-delimiter"<pos:position pos:line="24" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="56">":,"<pos:position pos:line="24" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></decl>;<pos:position pos:line="24" pos:column="62"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="26" pos:column="5">long<pos:position pos:line="26" pos:column="9"/></name></type> <name pos:line="26" pos:column="10">fl<pos:position pos:line="26" pos:column="12"/></name> <init pos:line="26" pos:column="13">= <expr><literal type="number" pos:line="26" pos:column="15">0<pos:position pos:line="26" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="17"/></decl_stmt>
    <do pos:line="27" pos:column="5">do <block pos:line="27" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">long<pos:position pos:line="28" pos:column="13"/></name></type> <name pos:line="28" pos:column="14">found<pos:position pos:line="28" pos:column="19"/></name> <init pos:line="28" pos:column="20">= <expr><literal type="number" pos:line="28" pos:column="22">0<pos:position pos:line="28" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="24"/></decl_stmt>
        <for pos:line="29" pos:column="9">for <control pos:line="29" pos:column="13">(<init><decl><type><name pos:line="29" pos:column="14">size_t<pos:position pos:line="29" pos:column="20"/></name></type> <name pos:line="29" pos:column="21">i<pos:position pos:line="29" pos:column="22"/></name> <init pos:line="29" pos:column="23">= <expr><literal type="number" pos:line="29" pos:column="25">0<pos:position pos:line="29" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="27"/></init> <condition><expr><name><name pos:line="29" pos:column="28">flagTokens<pos:position pos:line="29" pos:column="38"/></name><index pos:line="29" pos:column="38">[<expr><name pos:line="29" pos:column="39">i<pos:position pos:line="29" pos:column="40"/></name></expr>]<pos:position pos:line="29" pos:column="41"/></index></name><operator pos:line="29" pos:column="41">.<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">mask<pos:position pos:line="29" pos:column="46"/></name></expr>;<pos:position pos:line="29" pos:column="47"/></condition> <incr><expr><operator pos:line="29" pos:column="48">++<pos:position pos:line="29" pos:column="50"/></operator><name pos:line="29" pos:column="50">i<pos:position pos:line="29" pos:column="51"/></name></expr></incr>)<pos:position pos:line="29" pos:column="52"/></control> <block pos:line="29" pos:column="53">{
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><call><name><name pos:line="30" pos:column="17">tok<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">.<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">skip<pos:position pos:line="30" pos:column="25"/></name></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name><name pos:line="30" pos:column="26">flagTokens<pos:position pos:line="30" pos:column="36"/></name><index pos:line="30" pos:column="36">[<expr><name pos:line="30" pos:column="37">i<pos:position pos:line="30" pos:column="38"/></name></expr>]<pos:position pos:line="30" pos:column="39"/></index></name><operator pos:line="30" pos:column="39">.<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="40">label<pos:position pos:line="30" pos:column="45"/></name></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="47"/></condition><then pos:line="30" pos:column="47"> <block pos:line="30" pos:column="48">{
                <expr_stmt><expr><name pos:line="31" pos:column="17">found<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <name><name pos:line="31" pos:column="25">flagTokens<pos:position pos:line="31" pos:column="35"/></name><index pos:line="31" pos:column="35">[<expr><name pos:line="31" pos:column="36">i<pos:position pos:line="31" pos:column="37"/></name></expr>]<pos:position pos:line="31" pos:column="38"/></index></name><operator pos:line="31" pos:column="38">.<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="39">mask<pos:position pos:line="31" pos:column="43"/></name></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt>
                <break pos:line="32" pos:column="17">break;<pos:position pos:line="32" pos:column="23"/></break>
            }<pos:position pos:line="33" pos:column="14"/></block></then></if>
        }<pos:position pos:line="34" pos:column="10"/></block></for>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><operator pos:line="35" pos:column="13">!<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">found<pos:position pos:line="35" pos:column="19"/></name></expr>)<pos:position pos:line="35" pos:column="20"/></condition><then pos:line="35" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="36" pos:column="13">fatalf<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><literal type="string" pos:line="36" pos:column="20">"Unknown TLS flag '"<pos:position pos:line="36" pos:column="40"/></literal> <name pos:line="36" pos:column="41">SQUIDSBUFPH<pos:position pos:line="36" pos:column="52"/></name> <literal type="string" pos:line="36" pos:column="53">"'"<pos:position pos:line="36" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="36" pos:column="58">SQUIDSBUFPRINT<pos:position pos:line="36" pos:column="72"/></name><argument_list pos:line="36" pos:column="72">(<argument><expr><call><name><name pos:line="36" pos:column="73">tok<pos:position pos:line="36" pos:column="76"/></name><operator pos:line="36" pos:column="76">.<pos:position pos:line="36" pos:column="77"/></operator><name pos:line="36" pos:column="77">remaining<pos:position pos:line="36" pos:column="86"/></name></name><argument_list pos:line="36" pos:column="86">()<pos:position pos:line="36" pos:column="88"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="89"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="91"/></expr_stmt></block></then></if>
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">found<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">==<pos:position pos:line="37" pos:column="21"/></operator> <name pos:line="37" pos:column="22">SSL_FLAG_NO_DEFAULT_CA<pos:position pos:line="37" pos:column="44"/></name></expr>)<pos:position pos:line="37" pos:column="45"/></condition><then pos:line="37" pos:column="45"> <block pos:line="37" pos:column="46">{
            <if pos:line="38" pos:column="13">if <condition pos:line="38" pos:column="16">(<expr><call><name><name pos:line="38" pos:column="17">flags<pos:position pos:line="38" pos:column="22"/></name><operator pos:line="38" pos:column="22">.<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="23">tlsDefaultCa<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">.<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="36">configured<pos:position pos:line="38" pos:column="46"/></name></name><argument_list pos:line="38" pos:column="46">()<pos:position pos:line="38" pos:column="48"/></argument_list></call> <operator pos:line="38" pos:column="49">&amp;&amp;<pos:position pos:line="38" pos:column="59"/></operator> <name><name pos:line="38" pos:column="52">flags<pos:position pos:line="38" pos:column="57"/></name><operator pos:line="38" pos:column="57">.<pos:position pos:line="38" pos:column="58"/></operator><name pos:line="38" pos:column="58">tlsDefaultCa<pos:position pos:line="38" pos:column="70"/></name></name></expr>)<pos:position pos:line="38" pos:column="71"/></condition><then pos:line="38" pos:column="71">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="39" pos:column="17">fatal<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><literal type="string" pos:line="39" pos:column="23">"ERROR: previous default-ca settings conflict with sslflags=NO_DEFAULT_CA"<pos:position pos:line="39" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="99"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">debugs<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><literal type="number" pos:line="40" pos:column="20">83<pos:position pos:line="40" pos:column="22"/></literal></expr></argument>, <argument><expr><call><name pos:line="40" pos:column="24">DBG_PARSE_NOTE<pos:position pos:line="40" pos:column="38"/></name><argument_list pos:line="40" pos:column="38">(<argument><expr><literal type="number" pos:line="40" pos:column="39">2<pos:position pos:line="40" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="43">"WARNING: flags=NO_DEFAULT_CA is deprecated. Use tls-default-ca=off instead."<pos:position pos:line="40" pos:column="120"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="122"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">flags<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">.<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">tlsDefaultCa<pos:position pos:line="41" pos:column="31"/></name><operator pos:line="41" pos:column="31">.<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="32">configure<pos:position pos:line="41" pos:column="41"/></name></name><argument_list pos:line="41" pos:column="41">(<argument><expr><literal type="boolean" pos:line="41" pos:column="42">false<pos:position pos:line="41" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then> <else pos:line="42" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="13">fl<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">|=<pos:position pos:line="43" pos:column="18"/></operator> <name pos:line="43" pos:column="19">found<pos:position pos:line="43" pos:column="24"/></name></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt></block></else></if>
    }<pos:position pos:line="44" pos:column="6"/></block> while <condition pos:line="44" pos:column="13">(<expr><call><name><name pos:line="44" pos:column="14">tok<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">.<pos:position pos:line="44" pos:column="18"/></operator><name pos:line="44" pos:column="18">skipOne<pos:position pos:line="44" pos:column="25"/></name></name><argument_list pos:line="44" pos:column="25">(<argument><expr><name pos:line="44" pos:column="26">delims<pos:position pos:line="44" pos:column="32"/></name></expr></argument>)<pos:position pos:line="44" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="34"/></condition>;<pos:position pos:line="44" pos:column="35"/></do>

    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">fl<pos:position pos:line="46" pos:column="14"/></name></expr>;<pos:position pos:line="46" pos:column="15"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

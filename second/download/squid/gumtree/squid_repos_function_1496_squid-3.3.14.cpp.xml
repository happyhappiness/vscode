<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1496_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SwapDir<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">stat<pos:position pos:line="2" pos:column="14"/></name></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">StoreEntry<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">&amp;<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="27">output<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list> <specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">doReportStat<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">()<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="25"/></condition><then pos:line="4" pos:column="25">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">storeAppendPrintf<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><operator pos:line="7" pos:column="23">&amp;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="24">output<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="32">"Store Directory #%d (%s): %s\n"<pos:position pos:line="7" pos:column="64"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="66">index<pos:position pos:line="7" pos:column="71"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="73">type<pos:position pos:line="7" pos:column="77"/></name><argument_list pos:line="7" pos:column="77">()<pos:position pos:line="7" pos:column="79"/></argument_list></call></expr></argument>,
                      <argument><expr><name pos:line="8" pos:column="23">path<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">storeAppendPrintf<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><operator pos:line="9" pos:column="23">&amp;<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="24">output<pos:position pos:line="9" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="32">"FS Block Size %d Bytes\n"<pos:position pos:line="9" pos:column="58"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="10" pos:column="23">fs<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">.<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">blksize<pos:position pos:line="10" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">statfs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">output<pos:position pos:line="11" pos:column="18"/></name></expr></argument>)<pos:position pos:line="11" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="20"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">repl<pos:position pos:line="13" pos:column="13"/></name></expr>)<pos:position pos:line="13" pos:column="14"/></condition><then pos:line="13" pos:column="14"> <block pos:line="13" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">storeAppendPrintf<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">&amp;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="28">output<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="36">"Removal policy: %s\n"<pos:position pos:line="14" pos:column="58"/></literal></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="60">repl<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">-&gt;<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="66">_type<pos:position pos:line="14" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="73"/></expr_stmt>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">repl<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">Stats<pos:position pos:line="16" pos:column="24"/></name></name></expr>)<pos:position pos:line="16" pos:column="25"/></condition><then pos:line="16" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="17" pos:column="13">repl<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">Stats<pos:position pos:line="17" pos:column="24"/></name></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">repl<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="31">&amp;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="32">output<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

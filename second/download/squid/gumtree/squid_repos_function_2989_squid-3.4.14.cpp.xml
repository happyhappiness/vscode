<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2989_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">variable_list<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type>
<name pos:line="2" pos:column="1">snmp_meshCtblFn<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">variable_list<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">Var<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">snint<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type> <name pos:line="2" pos:column="46">ErrP<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">key<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name pos:line="4" pos:column="14">MAX_IPSTRLEN<pos:position pos:line="4" pos:column="26"/></name></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ClientInfo<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">c<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">Ip<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">::<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">Address<pos:position pos:line="6" pos:column="16"/></name></name></type> <name pos:line="6" pos:column="17">keyIp<pos:position pos:line="6" pos:column="22"/></name></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="8" pos:column="5">*<pos:position pos:line="8" pos:column="6"/></operator><name pos:line="8" pos:column="6">ErrP<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <name pos:line="8" pos:column="13">SNMP_ERR_NOERROR<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">MemBuf<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">tmp<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">49<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">6<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="19">HERE<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">&lt;&lt;<pos:position pos:line="10" pos:column="32"/></operator> <literal type="string" pos:line="10" pos:column="27">"Current : length="<pos:position pos:line="10" pos:column="46"/></literal> <operator pos:line="10" pos:column="47">&lt;&lt;<pos:position pos:line="10" pos:column="55"/></operator> <name><name pos:line="10" pos:column="50">Var<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">name_length<pos:position pos:line="10" pos:column="66"/></name></name> <operator pos:line="10" pos:column="67">&lt;&lt;<pos:position pos:line="10" pos:column="75"/></operator> <literal type="string" pos:line="10" pos:column="70">": "<pos:position pos:line="10" pos:column="74"/></literal> <operator pos:line="10" pos:column="75">&lt;&lt;<pos:position pos:line="10" pos:column="83"/></operator> <call><name pos:line="10" pos:column="78">snmpDebugOid<pos:position pos:line="10" pos:column="90"/></name><argument_list pos:line="10" pos:column="90">(<argument><expr><name><name pos:line="10" pos:column="91">Var<pos:position pos:line="10" pos:column="94"/></name><operator pos:line="10" pos:column="94">-&gt;<pos:position pos:line="10" pos:column="99"/></operator><name pos:line="10" pos:column="96">name<pos:position pos:line="10" pos:column="100"/></name></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="102">Var<pos:position pos:line="10" pos:column="105"/></name><operator pos:line="10" pos:column="105">-&gt;<pos:position pos:line="10" pos:column="110"/></operator><name pos:line="10" pos:column="107">name_length<pos:position pos:line="10" pos:column="118"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="120">tmp<pos:position pos:line="10" pos:column="123"/></name></expr></argument>)<pos:position pos:line="10" pos:column="124"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="126"/></expr_stmt>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">Var<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">-&gt;<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="14">name_length<pos:position pos:line="11" pos:column="25"/></name></name> <operator pos:line="11" pos:column="26">==<pos:position pos:line="11" pos:column="28"/></operator> <literal type="number" pos:line="11" pos:column="29">16<pos:position pos:line="11" pos:column="31"/></literal></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32"> <block pos:line="11" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">oid2addr<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><operator pos:line="12" pos:column="18">&amp;<pos:position pos:line="12" pos:column="23"/></operator><operator pos:line="12" pos:column="19">(<pos:position pos:line="12" pos:column="20"/></operator><name><name pos:line="12" pos:column="20">Var<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">name<pos:position pos:line="12" pos:column="29"/></name><index pos:line="12" pos:column="29">[<expr><literal type="number" pos:line="12" pos:column="30">12<pos:position pos:line="12" pos:column="32"/></literal></expr>]<pos:position pos:line="12" pos:column="33"/></index></name><operator pos:line="12" pos:column="33">)<pos:position pos:line="12" pos:column="34"/></operator></expr></argument>, <argument><expr><name pos:line="12" pos:column="36">keyIp<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="43">4<pos:position pos:line="12" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then> <elseif pos:line="13" pos:column="7">else <if pos:line="13" pos:column="12">if <condition pos:line="13" pos:column="15">(<expr><name><name pos:line="13" pos:column="16">Var<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">name_length<pos:position pos:line="13" pos:column="32"/></name></name> <operator pos:line="13" pos:column="33">==<pos:position pos:line="13" pos:column="35"/></operator> <literal type="number" pos:line="13" pos:column="36">28<pos:position pos:line="13" pos:column="38"/></literal></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39"> <block pos:line="13" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">oid2addr<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><operator pos:line="14" pos:column="18">&amp;<pos:position pos:line="14" pos:column="23"/></operator><operator pos:line="14" pos:column="19">(<pos:position pos:line="14" pos:column="20"/></operator><name><name pos:line="14" pos:column="20">Var<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">name<pos:position pos:line="14" pos:column="29"/></name><index pos:line="14" pos:column="29">[<expr><literal type="number" pos:line="14" pos:column="30">12<pos:position pos:line="14" pos:column="32"/></literal></expr>]<pos:position pos:line="14" pos:column="33"/></index></name><operator pos:line="14" pos:column="33">)<pos:position pos:line="14" pos:column="34"/></operator></expr></argument>, <argument><expr><name pos:line="14" pos:column="36">keyIp<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="43">16<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if></elseif> <else pos:line="15" pos:column="7">else <block pos:line="15" pos:column="12">{
        <expr_stmt><expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">ErrP<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">SNMP_ERR_NOSUCHNAME<pos:position pos:line="16" pos:column="36"/></name></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">NULL<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="20" pos:column="5">keyIp<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">.<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">toStr<pos:position pos:line="20" pos:column="16"/></name></name><argument_list pos:line="20" pos:column="16">(<argument><expr><name pos:line="20" pos:column="17">key<pos:position pos:line="20" pos:column="20"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="22">sizeof<argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">key<pos:position pos:line="20" pos:column="32"/></name></expr></argument>)<pos:position pos:line="20" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">debugs<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="number" pos:line="21" pos:column="12">49<pos:position pos:line="21" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="16">5<pos:position pos:line="21" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="19">HERE<pos:position pos:line="21" pos:column="23"/></name> <operator pos:line="21" pos:column="24">&lt;&lt;<pos:position pos:line="21" pos:column="32"/></operator> <literal type="string" pos:line="21" pos:column="27">"["<pos:position pos:line="21" pos:column="30"/></literal> <operator pos:line="21" pos:column="31">&lt;&lt;<pos:position pos:line="21" pos:column="39"/></operator> <name pos:line="21" pos:column="34">key<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">&lt;&lt;<pos:position pos:line="21" pos:column="46"/></operator> <literal type="string" pos:line="21" pos:column="41">"] requested!"<pos:position pos:line="21" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">c<pos:position pos:line="22" pos:column="6"/></name> <operator pos:line="22" pos:column="7">=<pos:position pos:line="22" pos:column="8"/></operator> <operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">ClientInfo<pos:position pos:line="22" pos:column="20"/></name> <operator pos:line="22" pos:column="21">*<pos:position pos:line="22" pos:column="22"/></operator><operator pos:line="22" pos:column="22">)<pos:position pos:line="22" pos:column="23"/></operator> <call><name pos:line="22" pos:column="24">hash_lookup<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><name pos:line="22" pos:column="36">client_table<pos:position pos:line="22" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="50">key<pos:position pos:line="22" pos:column="53"/></name></expr></argument>)<pos:position pos:line="22" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="55"/></expr_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">c<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">==<pos:position pos:line="24" pos:column="13"/></operator> <name pos:line="24" pos:column="14">NULL<pos:position pos:line="24" pos:column="18"/></name></expr>)<pos:position pos:line="24" pos:column="19"/></condition><then pos:line="24" pos:column="19"> <block pos:line="24" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">debugs<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="number" pos:line="25" pos:column="16">49<pos:position pos:line="25" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="20">5<pos:position pos:line="25" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="23">HERE<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">&lt;&lt;<pos:position pos:line="25" pos:column="36"/></operator> <literal type="string" pos:line="25" pos:column="31">"not found."<pos:position pos:line="25" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">ErrP<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name pos:line="26" pos:column="17">SNMP_ERR_NOSUCHNAME<pos:position pos:line="26" pos:column="36"/></name></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="30" pos:column="5">variable_list<pos:position pos:line="30" pos:column="18"/></name> <modifier pos:line="30" pos:column="19">*<pos:position pos:line="30" pos:column="20"/></modifier></type><name pos:line="30" pos:column="20">Answer<pos:position pos:line="30" pos:column="26"/></name> <init pos:line="30" pos:column="27">= <expr><name pos:line="30" pos:column="29">NULL<pos:position pos:line="30" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="31" pos:column="5">int<pos:position pos:line="31" pos:column="8"/></name></type> <name pos:line="31" pos:column="9">aggr<pos:position pos:line="31" pos:column="13"/></name> <init pos:line="31" pos:column="14">= <expr><literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="31" pos:column="18"/></decl_stmt>

    <switch pos:line="33" pos:column="5">switch <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">Var<pos:position pos:line="33" pos:column="16"/></name><operator pos:line="33" pos:column="16">-&gt;<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="18">name<pos:position pos:line="33" pos:column="22"/></name><index pos:line="33" pos:column="22">[<expr><name pos:line="33" pos:column="23">LEN_SQ_NET<pos:position pos:line="33" pos:column="33"/></name> <operator pos:line="33" pos:column="34">+<pos:position pos:line="33" pos:column="35"/></operator> <literal type="number" pos:line="33" pos:column="36">2<pos:position pos:line="33" pos:column="37"/></literal></expr>]<pos:position pos:line="33" pos:column="38"/></index></name></expr>)<pos:position pos:line="33" pos:column="39"/></condition> <block pos:line="33" pos:column="40">{

    <case pos:line="35" pos:column="5">case <expr><name pos:line="35" pos:column="10">MESH_CTBL_ADDR_TYPE<pos:position pos:line="35" pos:column="29"/></name></expr>:<pos:position pos:line="35" pos:column="30"/></case> <block pos:line="35" pos:column="31">{
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">int<pos:position pos:line="36" pos:column="12"/></name></type> <name pos:line="36" pos:column="13">ival<pos:position pos:line="36" pos:column="17"/></name></decl>;<pos:position pos:line="36" pos:column="18"/></decl_stmt>
        <expr_stmt><expr><name pos:line="37" pos:column="9">ival<pos:position pos:line="37" pos:column="13"/></name> <operator pos:line="37" pos:column="14">=<pos:position pos:line="37" pos:column="15"/></operator> <ternary><condition><expr><call><name><name pos:line="37" pos:column="16">c<pos:position pos:line="37" pos:column="17"/></name><operator pos:line="37" pos:column="17">-&gt;<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="19">addr<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">.<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">isIPv4<pos:position pos:line="37" pos:column="30"/></name></name><argument_list pos:line="37" pos:column="30">()<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr> ?<pos:position pos:line="37" pos:column="34"/></condition><then pos:line="37" pos:column="34"> <expr><name pos:line="37" pos:column="35">INETADDRESSTYPE_IPV4<pos:position pos:line="37" pos:column="55"/></name></expr> <pos:position pos:line="37" pos:column="56"/></then><else pos:line="37" pos:column="56">: <expr><name pos:line="37" pos:column="58">INETADDRESSTYPE_IPV6<pos:position pos:line="37" pos:column="78"/></name></expr></else></ternary></expr> ;<pos:position pos:line="37" pos:column="80"/></expr_stmt>
        <expr_stmt><expr><name pos:line="38" pos:column="9">Answer<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">=<pos:position pos:line="38" pos:column="17"/></operator> <call><name pos:line="38" pos:column="18">snmp_var_new_integer<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name><name pos:line="38" pos:column="39">Var<pos:position pos:line="38" pos:column="42"/></name><operator pos:line="38" pos:column="42">-&gt;<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="44">name<pos:position pos:line="38" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="50">Var<pos:position pos:line="38" pos:column="53"/></name><operator pos:line="38" pos:column="53">-&gt;<pos:position pos:line="38" pos:column="58"/></operator><name pos:line="38" pos:column="55">name_length<pos:position pos:line="38" pos:column="66"/></name></name></expr></argument>,
                                      <argument><expr><name pos:line="39" pos:column="39">ival<pos:position pos:line="39" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="45">SMI_INTEGER<pos:position pos:line="39" pos:column="56"/></name></expr></argument>)<pos:position pos:line="39" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block>
    <break pos:line="41" pos:column="5">break;<pos:position pos:line="41" pos:column="11"/></break>

    <case pos:line="43" pos:column="5">case <expr><name pos:line="43" pos:column="10">MESH_CTBL_ADDR<pos:position pos:line="43" pos:column="24"/></name></expr>:<pos:position pos:line="43" pos:column="25"/></case> <block pos:line="43" pos:column="26">{
        <expr_stmt><expr><name pos:line="44" pos:column="9">Answer<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">snmp_var_new<pos:position pos:line="44" pos:column="30"/></name><argument_list pos:line="44" pos:column="30">(<argument><expr><name><name pos:line="44" pos:column="31">Var<pos:position pos:line="44" pos:column="34"/></name><operator pos:line="44" pos:column="34">-&gt;<pos:position pos:line="44" pos:column="39"/></operator><name pos:line="44" pos:column="36">name<pos:position pos:line="44" pos:column="40"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="42">Var<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">-&gt;<pos:position pos:line="44" pos:column="50"/></operator><name pos:line="44" pos:column="47">name_length<pos:position pos:line="44" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="60"/></expr_stmt>
        <comment type="line" pos:line="45" pos:column="9">// InetAddress doesn't have its own ASN.1 type,</comment>
        <comment type="line" pos:line="46" pos:column="9">// like IpAddr does (SMI_IPADDRESS)</comment>
        <comment type="line" pos:line="47" pos:column="9">// See: rfc4001.txt</comment>
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">Answer<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">-&gt;<pos:position pos:line="48" pos:column="20"/></operator><name pos:line="48" pos:column="17">type<pos:position pos:line="48" pos:column="21"/></name></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <name pos:line="48" pos:column="24">ASN_OCTET_STR<pos:position pos:line="48" pos:column="37"/></name></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">char<pos:position pos:line="49" pos:column="13"/></name></type> <name><name pos:line="49" pos:column="14">client<pos:position pos:line="49" pos:column="20"/></name><index pos:line="49" pos:column="20">[<expr><name pos:line="49" pos:column="21">MAX_IPSTRLEN<pos:position pos:line="49" pos:column="33"/></name></expr>]<pos:position pos:line="49" pos:column="34"/></index></name></decl>;<pos:position pos:line="49" pos:column="35"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="50" pos:column="9">c<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">addr<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">.<pos:position pos:line="50" pos:column="17"/></operator><name pos:line="50" pos:column="17">toStr<pos:position pos:line="50" pos:column="22"/></name></name><argument_list pos:line="50" pos:column="22">(<argument><expr><name pos:line="50" pos:column="23">client<pos:position pos:line="50" pos:column="29"/></name></expr></argument>,<argument><expr><name pos:line="50" pos:column="30">MAX_IPSTRLEN<pos:position pos:line="50" pos:column="42"/></name></expr></argument>)<pos:position pos:line="50" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="51" pos:column="9">Answer<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">-&gt;<pos:position pos:line="51" pos:column="20"/></operator><name pos:line="51" pos:column="17">val_len<pos:position pos:line="51" pos:column="24"/></name></name> <operator pos:line="51" pos:column="25">=<pos:position pos:line="51" pos:column="26"/></operator> <call><name pos:line="51" pos:column="27">strlen<pos:position pos:line="51" pos:column="33"/></name><argument_list pos:line="51" pos:column="33">(<argument><expr><name pos:line="51" pos:column="34">client<pos:position pos:line="51" pos:column="40"/></name></expr></argument>)<pos:position pos:line="51" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">Answer<pos:position pos:line="52" pos:column="15"/></name><operator pos:line="52" pos:column="15">-&gt;<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="17">val<pos:position pos:line="52" pos:column="20"/></name><operator pos:line="52" pos:column="20">.<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="21">string<pos:position pos:line="52" pos:column="27"/></name></name> <operator pos:line="52" pos:column="28">=<pos:position pos:line="52" pos:column="29"/></operator>  <operator pos:line="52" pos:column="31">(<pos:position pos:line="52" pos:column="32"/></operator><name pos:line="52" pos:column="32">u_char<pos:position pos:line="52" pos:column="38"/></name> <operator pos:line="52" pos:column="39">*<pos:position pos:line="52" pos:column="40"/></operator><operator pos:line="52" pos:column="40">)<pos:position pos:line="52" pos:column="41"/></operator> <call><name pos:line="52" pos:column="42">xstrdup<pos:position pos:line="52" pos:column="49"/></name><argument_list pos:line="52" pos:column="49">(<argument><expr><name pos:line="52" pos:column="50">client<pos:position pos:line="52" pos:column="56"/></name></expr></argument>)<pos:position pos:line="52" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block>
    <break pos:line="54" pos:column="5">break;<pos:position pos:line="54" pos:column="11"/></break>
    <case pos:line="55" pos:column="5">case <expr><name pos:line="55" pos:column="10">MESH_CTBL_HTBYTES<pos:position pos:line="55" pos:column="27"/></name></expr>:<pos:position pos:line="55" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="56" pos:column="9">Answer<pos:position pos:line="56" pos:column="15"/></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <call><name pos:line="56" pos:column="18">snmp_var_new_integer<pos:position pos:line="56" pos:column="38"/></name><argument_list pos:line="56" pos:column="38">(<argument><expr><name><name pos:line="56" pos:column="39">Var<pos:position pos:line="56" pos:column="42"/></name><operator pos:line="56" pos:column="42">-&gt;<pos:position pos:line="56" pos:column="47"/></operator><name pos:line="56" pos:column="44">name<pos:position pos:line="56" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="50">Var<pos:position pos:line="56" pos:column="53"/></name><operator pos:line="56" pos:column="53">-&gt;<pos:position pos:line="56" pos:column="58"/></operator><name pos:line="56" pos:column="55">name_length<pos:position pos:line="56" pos:column="66"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="57" pos:column="39">(<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="40">snint<pos:position pos:line="57" pos:column="45"/></name><operator pos:line="57" pos:column="45">)<pos:position pos:line="57" pos:column="46"/></operator> <name><name pos:line="57" pos:column="47">c<pos:position pos:line="57" pos:column="48"/></name><operator pos:line="57" pos:column="48">-&gt;<pos:position pos:line="57" pos:column="53"/></operator><name pos:line="57" pos:column="50">Http<pos:position pos:line="57" pos:column="54"/></name><operator pos:line="57" pos:column="54">.<pos:position pos:line="57" pos:column="55"/></operator><name pos:line="57" pos:column="55">kbytes_out<pos:position pos:line="57" pos:column="65"/></name><operator pos:line="57" pos:column="65">.<pos:position pos:line="57" pos:column="66"/></operator><name pos:line="57" pos:column="66">kb<pos:position pos:line="57" pos:column="68"/></name></name></expr></argument>,
                                      <argument><expr><name pos:line="58" pos:column="39">SMI_COUNTER32<pos:position pos:line="58" pos:column="52"/></name></expr></argument>)<pos:position pos:line="58" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="54"/></expr_stmt>
        <break pos:line="59" pos:column="9">break;<pos:position pos:line="59" pos:column="15"/></break>

    <case pos:line="61" pos:column="5">case <expr><name pos:line="61" pos:column="10">MESH_CTBL_HTREQ<pos:position pos:line="61" pos:column="25"/></name></expr>:<pos:position pos:line="61" pos:column="26"/></case>
        <expr_stmt><expr><name pos:line="62" pos:column="9">Answer<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <call><name pos:line="62" pos:column="18">snmp_var_new_integer<pos:position pos:line="62" pos:column="38"/></name><argument_list pos:line="62" pos:column="38">(<argument><expr><name><name pos:line="62" pos:column="39">Var<pos:position pos:line="62" pos:column="42"/></name><operator pos:line="62" pos:column="42">-&gt;<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="44">name<pos:position pos:line="62" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="50">Var<pos:position pos:line="62" pos:column="53"/></name><operator pos:line="62" pos:column="53">-&gt;<pos:position pos:line="62" pos:column="58"/></operator><name pos:line="62" pos:column="55">name_length<pos:position pos:line="62" pos:column="66"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="63" pos:column="39">(<pos:position pos:line="63" pos:column="40"/></operator><name pos:line="63" pos:column="40">snint<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">)<pos:position pos:line="63" pos:column="46"/></operator> <name><name pos:line="63" pos:column="47">c<pos:position pos:line="63" pos:column="48"/></name><operator pos:line="63" pos:column="48">-&gt;<pos:position pos:line="63" pos:column="53"/></operator><name pos:line="63" pos:column="50">Http<pos:position pos:line="63" pos:column="54"/></name><operator pos:line="63" pos:column="54">.<pos:position pos:line="63" pos:column="55"/></operator><name pos:line="63" pos:column="55">n_requests<pos:position pos:line="63" pos:column="65"/></name></name></expr></argument>,
                                      <argument><expr><name pos:line="64" pos:column="39">SMI_COUNTER32<pos:position pos:line="64" pos:column="52"/></name></expr></argument>)<pos:position pos:line="64" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="54"/></expr_stmt>
        <break pos:line="65" pos:column="9">break;<pos:position pos:line="65" pos:column="15"/></break>

    <case pos:line="67" pos:column="5">case <expr><name pos:line="67" pos:column="10">MESH_CTBL_HTHITS<pos:position pos:line="67" pos:column="26"/></name></expr>:<pos:position pos:line="67" pos:column="27"/></case>
        <expr_stmt><expr><name pos:line="68" pos:column="9">aggr<pos:position pos:line="68" pos:column="13"/></name> <operator pos:line="68" pos:column="14">=<pos:position pos:line="68" pos:column="15"/></operator> <literal type="number" pos:line="68" pos:column="16">0<pos:position pos:line="68" pos:column="17"/></literal></expr>;<pos:position pos:line="68" pos:column="18"/></expr_stmt>

        <for pos:line="70" pos:column="9">for <control pos:line="70" pos:column="13">(<init><decl><type><name pos:line="70" pos:column="14">LogTags<pos:position pos:line="70" pos:column="21"/></name></type> <name pos:line="70" pos:column="22">l<pos:position pos:line="70" pos:column="23"/></name> <init pos:line="70" pos:column="24">= <expr><name pos:line="70" pos:column="26">LOG_TAG_NONE<pos:position pos:line="70" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="70" pos:column="39"/></init> <condition><expr><name pos:line="70" pos:column="40">l<pos:position pos:line="70" pos:column="41"/></name> <operator pos:line="70" pos:column="42">&lt;<pos:position pos:line="70" pos:column="46"/></operator> <name pos:line="70" pos:column="44">LOG_TYPE_MAX<pos:position pos:line="70" pos:column="56"/></name></expr>;<pos:position pos:line="70" pos:column="57"/></condition> <incr><expr><operator pos:line="70" pos:column="58">++<pos:position pos:line="70" pos:column="60"/></operator><name pos:line="70" pos:column="60">l<pos:position pos:line="70" pos:column="61"/></name></expr></incr>)<pos:position pos:line="70" pos:column="62"/></control> <block pos:line="70" pos:column="63">{
            <if pos:line="71" pos:column="13">if <condition pos:line="71" pos:column="16">(<expr><call><name pos:line="71" pos:column="17">logTypeIsATcpHit<pos:position pos:line="71" pos:column="33"/></name><argument_list pos:line="71" pos:column="33">(<argument><expr><name pos:line="71" pos:column="34">l<pos:position pos:line="71" pos:column="35"/></name></expr></argument>)<pos:position pos:line="71" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="37"/></condition><then pos:line="71" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><name pos:line="72" pos:column="17">aggr<pos:position pos:line="72" pos:column="21"/></name> <operator pos:line="72" pos:column="22">+=<pos:position pos:line="72" pos:column="24"/></operator> <name><name pos:line="72" pos:column="25">c<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">Http<pos:position pos:line="72" pos:column="32"/></name><operator pos:line="72" pos:column="32">.<pos:position pos:line="72" pos:column="33"/></operator><name pos:line="72" pos:column="33">result_hist<pos:position pos:line="72" pos:column="44"/></name><index pos:line="72" pos:column="44">[<expr><name pos:line="72" pos:column="45">l<pos:position pos:line="72" pos:column="46"/></name></expr>]<pos:position pos:line="72" pos:column="47"/></index></name></expr>;<pos:position pos:line="72" pos:column="48"/></expr_stmt></block></then></if>
        }<pos:position pos:line="73" pos:column="10"/></block></for>

        <expr_stmt><expr><name pos:line="75" pos:column="9">Answer<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">=<pos:position pos:line="75" pos:column="17"/></operator> <call><name pos:line="75" pos:column="18">snmp_var_new_integer<pos:position pos:line="75" pos:column="38"/></name><argument_list pos:line="75" pos:column="38">(<argument><expr><name><name pos:line="75" pos:column="39">Var<pos:position pos:line="75" pos:column="42"/></name><operator pos:line="75" pos:column="42">-&gt;<pos:position pos:line="75" pos:column="47"/></operator><name pos:line="75" pos:column="44">name<pos:position pos:line="75" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="75" pos:column="50">Var<pos:position pos:line="75" pos:column="53"/></name><operator pos:line="75" pos:column="53">-&gt;<pos:position pos:line="75" pos:column="58"/></operator><name pos:line="75" pos:column="55">name_length<pos:position pos:line="75" pos:column="66"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="76" pos:column="39">(<pos:position pos:line="76" pos:column="40"/></operator><name pos:line="76" pos:column="40">snint<pos:position pos:line="76" pos:column="45"/></name><operator pos:line="76" pos:column="45">)<pos:position pos:line="76" pos:column="46"/></operator> <name pos:line="76" pos:column="47">aggr<pos:position pos:line="76" pos:column="51"/></name></expr></argument>,
                                      <argument><expr><name pos:line="77" pos:column="39">SMI_COUNTER32<pos:position pos:line="77" pos:column="52"/></name></expr></argument>)<pos:position pos:line="77" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="54"/></expr_stmt>
        <break pos:line="78" pos:column="9">break;<pos:position pos:line="78" pos:column="15"/></break>

    <case pos:line="80" pos:column="5">case <expr><name pos:line="80" pos:column="10">MESH_CTBL_HTHITBYTES<pos:position pos:line="80" pos:column="30"/></name></expr>:<pos:position pos:line="80" pos:column="31"/></case>
        <expr_stmt><expr><name pos:line="81" pos:column="9">Answer<pos:position pos:line="81" pos:column="15"/></name> <operator pos:line="81" pos:column="16">=<pos:position pos:line="81" pos:column="17"/></operator> <call><name pos:line="81" pos:column="18">snmp_var_new_integer<pos:position pos:line="81" pos:column="38"/></name><argument_list pos:line="81" pos:column="38">(<argument><expr><name><name pos:line="81" pos:column="39">Var<pos:position pos:line="81" pos:column="42"/></name><operator pos:line="81" pos:column="42">-&gt;<pos:position pos:line="81" pos:column="47"/></operator><name pos:line="81" pos:column="44">name<pos:position pos:line="81" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="81" pos:column="50">Var<pos:position pos:line="81" pos:column="53"/></name><operator pos:line="81" pos:column="53">-&gt;<pos:position pos:line="81" pos:column="58"/></operator><name pos:line="81" pos:column="55">name_length<pos:position pos:line="81" pos:column="66"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="82" pos:column="39">(<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="40">snint<pos:position pos:line="82" pos:column="45"/></name><operator pos:line="82" pos:column="45">)<pos:position pos:line="82" pos:column="46"/></operator> <name><name pos:line="82" pos:column="47">c<pos:position pos:line="82" pos:column="48"/></name><operator pos:line="82" pos:column="48">-&gt;<pos:position pos:line="82" pos:column="53"/></operator><name pos:line="82" pos:column="50">Http<pos:position pos:line="82" pos:column="54"/></name><operator pos:line="82" pos:column="54">.<pos:position pos:line="82" pos:column="55"/></operator><name pos:line="82" pos:column="55">hit_kbytes_out<pos:position pos:line="82" pos:column="69"/></name><operator pos:line="82" pos:column="69">.<pos:position pos:line="82" pos:column="70"/></operator><name pos:line="82" pos:column="70">kb<pos:position pos:line="82" pos:column="72"/></name></name></expr></argument>,
                                      <argument><expr><name pos:line="83" pos:column="39">SMI_COUNTER32<pos:position pos:line="83" pos:column="52"/></name></expr></argument>)<pos:position pos:line="83" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="54"/></expr_stmt>
        <break pos:line="84" pos:column="9">break;<pos:position pos:line="84" pos:column="15"/></break>

    <case pos:line="86" pos:column="5">case <expr><name pos:line="86" pos:column="10">MESH_CTBL_ICPBYTES<pos:position pos:line="86" pos:column="28"/></name></expr>:<pos:position pos:line="86" pos:column="29"/></case>
        <expr_stmt><expr><name pos:line="87" pos:column="9">Answer<pos:position pos:line="87" pos:column="15"/></name> <operator pos:line="87" pos:column="16">=<pos:position pos:line="87" pos:column="17"/></operator> <call><name pos:line="87" pos:column="18">snmp_var_new_integer<pos:position pos:line="87" pos:column="38"/></name><argument_list pos:line="87" pos:column="38">(<argument><expr><name><name pos:line="87" pos:column="39">Var<pos:position pos:line="87" pos:column="42"/></name><operator pos:line="87" pos:column="42">-&gt;<pos:position pos:line="87" pos:column="47"/></operator><name pos:line="87" pos:column="44">name<pos:position pos:line="87" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="87" pos:column="50">Var<pos:position pos:line="87" pos:column="53"/></name><operator pos:line="87" pos:column="53">-&gt;<pos:position pos:line="87" pos:column="58"/></operator><name pos:line="87" pos:column="55">name_length<pos:position pos:line="87" pos:column="66"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="88" pos:column="39">(<pos:position pos:line="88" pos:column="40"/></operator><name pos:line="88" pos:column="40">snint<pos:position pos:line="88" pos:column="45"/></name><operator pos:line="88" pos:column="45">)<pos:position pos:line="88" pos:column="46"/></operator> <name><name pos:line="88" pos:column="47">c<pos:position pos:line="88" pos:column="48"/></name><operator pos:line="88" pos:column="48">-&gt;<pos:position pos:line="88" pos:column="53"/></operator><name pos:line="88" pos:column="50">Icp<pos:position pos:line="88" pos:column="53"/></name><operator pos:line="88" pos:column="53">.<pos:position pos:line="88" pos:column="54"/></operator><name pos:line="88" pos:column="54">kbytes_out<pos:position pos:line="88" pos:column="64"/></name><operator pos:line="88" pos:column="64">.<pos:position pos:line="88" pos:column="65"/></operator><name pos:line="88" pos:column="65">kb<pos:position pos:line="88" pos:column="67"/></name></name></expr></argument>,
                                      <argument><expr><name pos:line="89" pos:column="39">SMI_COUNTER32<pos:position pos:line="89" pos:column="52"/></name></expr></argument>)<pos:position pos:line="89" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="54"/></expr_stmt>
        <break pos:line="90" pos:column="9">break;<pos:position pos:line="90" pos:column="15"/></break>

    <case pos:line="92" pos:column="5">case <expr><name pos:line="92" pos:column="10">MESH_CTBL_ICPREQ<pos:position pos:line="92" pos:column="26"/></name></expr>:<pos:position pos:line="92" pos:column="27"/></case>
        <expr_stmt><expr><name pos:line="93" pos:column="9">Answer<pos:position pos:line="93" pos:column="15"/></name> <operator pos:line="93" pos:column="16">=<pos:position pos:line="93" pos:column="17"/></operator> <call><name pos:line="93" pos:column="18">snmp_var_new_integer<pos:position pos:line="93" pos:column="38"/></name><argument_list pos:line="93" pos:column="38">(<argument><expr><name><name pos:line="93" pos:column="39">Var<pos:position pos:line="93" pos:column="42"/></name><operator pos:line="93" pos:column="42">-&gt;<pos:position pos:line="93" pos:column="47"/></operator><name pos:line="93" pos:column="44">name<pos:position pos:line="93" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="50">Var<pos:position pos:line="93" pos:column="53"/></name><operator pos:line="93" pos:column="53">-&gt;<pos:position pos:line="93" pos:column="58"/></operator><name pos:line="93" pos:column="55">name_length<pos:position pos:line="93" pos:column="66"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="94" pos:column="39">(<pos:position pos:line="94" pos:column="40"/></operator><name pos:line="94" pos:column="40">snint<pos:position pos:line="94" pos:column="45"/></name><operator pos:line="94" pos:column="45">)<pos:position pos:line="94" pos:column="46"/></operator> <name><name pos:line="94" pos:column="47">c<pos:position pos:line="94" pos:column="48"/></name><operator pos:line="94" pos:column="48">-&gt;<pos:position pos:line="94" pos:column="53"/></operator><name pos:line="94" pos:column="50">Icp<pos:position pos:line="94" pos:column="53"/></name><operator pos:line="94" pos:column="53">.<pos:position pos:line="94" pos:column="54"/></operator><name pos:line="94" pos:column="54">n_requests<pos:position pos:line="94" pos:column="64"/></name></name></expr></argument>,
                                      <argument><expr><name pos:line="95" pos:column="39">SMI_COUNTER32<pos:position pos:line="95" pos:column="52"/></name></expr></argument>)<pos:position pos:line="95" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="54"/></expr_stmt>
        <break pos:line="96" pos:column="9">break;<pos:position pos:line="96" pos:column="15"/></break>

    <case pos:line="98" pos:column="5">case <expr><name pos:line="98" pos:column="10">MESH_CTBL_ICPHITS<pos:position pos:line="98" pos:column="27"/></name></expr>:<pos:position pos:line="98" pos:column="28"/></case>
        <expr_stmt><expr><name pos:line="99" pos:column="9">aggr<pos:position pos:line="99" pos:column="13"/></name> <operator pos:line="99" pos:column="14">=<pos:position pos:line="99" pos:column="15"/></operator> <name><name pos:line="99" pos:column="16">c<pos:position pos:line="99" pos:column="17"/></name><operator pos:line="99" pos:column="17">-&gt;<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="19">Icp<pos:position pos:line="99" pos:column="22"/></name><operator pos:line="99" pos:column="22">.<pos:position pos:line="99" pos:column="23"/></operator><name pos:line="99" pos:column="23">result_hist<pos:position pos:line="99" pos:column="34"/></name><index pos:line="99" pos:column="34">[<expr><name pos:line="99" pos:column="35">LOG_UDP_HIT<pos:position pos:line="99" pos:column="46"/></name></expr>]<pos:position pos:line="99" pos:column="47"/></index></name></expr>;<pos:position pos:line="99" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name pos:line="100" pos:column="9">Answer<pos:position pos:line="100" pos:column="15"/></name> <operator pos:line="100" pos:column="16">=<pos:position pos:line="100" pos:column="17"/></operator> <call><name pos:line="100" pos:column="18">snmp_var_new_integer<pos:position pos:line="100" pos:column="38"/></name><argument_list pos:line="100" pos:column="38">(<argument><expr><name><name pos:line="100" pos:column="39">Var<pos:position pos:line="100" pos:column="42"/></name><operator pos:line="100" pos:column="42">-&gt;<pos:position pos:line="100" pos:column="47"/></operator><name pos:line="100" pos:column="44">name<pos:position pos:line="100" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="50">Var<pos:position pos:line="100" pos:column="53"/></name><operator pos:line="100" pos:column="53">-&gt;<pos:position pos:line="100" pos:column="58"/></operator><name pos:line="100" pos:column="55">name_length<pos:position pos:line="100" pos:column="66"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="101" pos:column="39">(<pos:position pos:line="101" pos:column="40"/></operator><name pos:line="101" pos:column="40">snint<pos:position pos:line="101" pos:column="45"/></name><operator pos:line="101" pos:column="45">)<pos:position pos:line="101" pos:column="46"/></operator> <name pos:line="101" pos:column="47">aggr<pos:position pos:line="101" pos:column="51"/></name></expr></argument>,
                                      <argument><expr><name pos:line="102" pos:column="39">SMI_COUNTER32<pos:position pos:line="102" pos:column="52"/></name></expr></argument>)<pos:position pos:line="102" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="54"/></expr_stmt>
        <break pos:line="103" pos:column="9">break;<pos:position pos:line="103" pos:column="15"/></break>

    <case pos:line="105" pos:column="5">case <expr><name pos:line="105" pos:column="10">MESH_CTBL_ICPHITBYTES<pos:position pos:line="105" pos:column="31"/></name></expr>:<pos:position pos:line="105" pos:column="32"/></case>
        <expr_stmt><expr><name pos:line="106" pos:column="9">Answer<pos:position pos:line="106" pos:column="15"/></name> <operator pos:line="106" pos:column="16">=<pos:position pos:line="106" pos:column="17"/></operator> <call><name pos:line="106" pos:column="18">snmp_var_new_integer<pos:position pos:line="106" pos:column="38"/></name><argument_list pos:line="106" pos:column="38">(<argument><expr><name><name pos:line="106" pos:column="39">Var<pos:position pos:line="106" pos:column="42"/></name><operator pos:line="106" pos:column="42">-&gt;<pos:position pos:line="106" pos:column="47"/></operator><name pos:line="106" pos:column="44">name<pos:position pos:line="106" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="50">Var<pos:position pos:line="106" pos:column="53"/></name><operator pos:line="106" pos:column="53">-&gt;<pos:position pos:line="106" pos:column="58"/></operator><name pos:line="106" pos:column="55">name_length<pos:position pos:line="106" pos:column="66"/></name></name></expr></argument>,
                                      <argument><expr><operator pos:line="107" pos:column="39">(<pos:position pos:line="107" pos:column="40"/></operator><name pos:line="107" pos:column="40">snint<pos:position pos:line="107" pos:column="45"/></name><operator pos:line="107" pos:column="45">)<pos:position pos:line="107" pos:column="46"/></operator> <name><name pos:line="107" pos:column="47">c<pos:position pos:line="107" pos:column="48"/></name><operator pos:line="107" pos:column="48">-&gt;<pos:position pos:line="107" pos:column="53"/></operator><name pos:line="107" pos:column="50">Icp<pos:position pos:line="107" pos:column="53"/></name><operator pos:line="107" pos:column="53">.<pos:position pos:line="107" pos:column="54"/></operator><name pos:line="107" pos:column="54">hit_kbytes_out<pos:position pos:line="107" pos:column="68"/></name><operator pos:line="107" pos:column="68">.<pos:position pos:line="107" pos:column="69"/></operator><name pos:line="107" pos:column="69">kb<pos:position pos:line="107" pos:column="71"/></name></name></expr></argument>,
                                      <argument><expr><name pos:line="108" pos:column="39">SMI_COUNTER32<pos:position pos:line="108" pos:column="52"/></name></expr></argument>)<pos:position pos:line="108" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="54"/></expr_stmt>
        <break pos:line="109" pos:column="9">break;<pos:position pos:line="109" pos:column="15"/></break>

    <default pos:line="111" pos:column="5">default:<pos:position pos:line="111" pos:column="13"/></default>
        <expr_stmt><expr><operator pos:line="112" pos:column="9">*<pos:position pos:line="112" pos:column="10"/></operator><name pos:line="112" pos:column="10">ErrP<pos:position pos:line="112" pos:column="14"/></name> <operator pos:line="112" pos:column="15">=<pos:position pos:line="112" pos:column="16"/></operator> <name pos:line="112" pos:column="17">SNMP_ERR_NOSUCHNAME<pos:position pos:line="112" pos:column="36"/></name></expr>;<pos:position pos:line="112" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="113" pos:column="9">debugs<pos:position pos:line="113" pos:column="15"/></name><argument_list pos:line="113" pos:column="15">(<argument><expr><literal type="number" pos:line="113" pos:column="16">49<pos:position pos:line="113" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="113" pos:column="20">5<pos:position pos:line="113" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="113" pos:column="23">"snmp_meshCtblFn: illegal column."<pos:position pos:line="113" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="59"/></expr_stmt>
        <break pos:line="114" pos:column="9">break;<pos:position pos:line="114" pos:column="15"/></break>
    }<pos:position pos:line="115" pos:column="6"/></block></switch>

    <return pos:line="117" pos:column="5">return <expr><name pos:line="117" pos:column="12">Answer<pos:position pos:line="117" pos:column="18"/></name></expr>;<pos:position pos:line="117" pos:column="19"/></return>
}<pos:position pos:line="118" pos:column="2"/></block></function></unit>

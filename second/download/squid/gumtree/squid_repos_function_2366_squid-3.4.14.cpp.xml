<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2366_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsSentQueryVC<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><specifier pos:line="2" pos:column="17">const<pos:position pos:line="2" pos:column="22"/></specifier> <name><name pos:line="2" pos:column="23">Comm<pos:position pos:line="2" pos:column="27"/></name><operator pos:line="2" pos:column="27">::<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="29">ConnectionPointer<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">&amp;<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="48">conn<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">buf<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">size_t<pos:position pos:line="2" pos:column="71"/></name></type> <name pos:line="2" pos:column="72">size<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="78">comm_err_t<pos:position pos:line="2" pos:column="88"/></name></type> <name pos:line="2" pos:column="89">flag<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="95">int<pos:position pos:line="2" pos:column="98"/></name></type> <name pos:line="2" pos:column="99">xerrno<pos:position pos:line="2" pos:column="105"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="107">void<pos:position pos:line="2" pos:column="111"/></name> <modifier pos:line="2" pos:column="112">*<pos:position pos:line="2" pos:column="113"/></modifier></type><name pos:line="2" pos:column="113">data<pos:position pos:line="2" pos:column="117"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="118"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">nsvc<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type> <name pos:line="4" pos:column="12">vc<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">nsvc<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></operator><operator pos:line="4" pos:column="24">)<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">flag<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">COMM_ERR_CLOSING<pos:position pos:line="6" pos:column="33"/></name></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <comment type="line" pos:line="9" pos:column="5">// XXX: irrelevant now that we have conn pointer?</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name><name pos:line="10" pos:column="10">Comm<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">::<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">IsConnOpen<pos:position pos:line="10" pos:column="26"/></name></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">conn<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call> <operator pos:line="10" pos:column="33">||<pos:position pos:line="10" pos:column="35"/></operator> <name><name pos:line="10" pos:column="36">fd_table<pos:position pos:line="10" pos:column="44"/></name><index pos:line="10" pos:column="44">[<expr><name><name pos:line="10" pos:column="45">conn<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">-&gt;<pos:position pos:line="10" pos:column="54"/></operator><name pos:line="10" pos:column="51">fd<pos:position pos:line="10" pos:column="53"/></name></name></expr>]<pos:position pos:line="10" pos:column="54"/></index></name><operator pos:line="10" pos:column="54">.<pos:position pos:line="10" pos:column="55"/></operator><call><name pos:line="10" pos:column="55">closing<pos:position pos:line="10" pos:column="62"/></name><argument_list pos:line="10" pos:column="62">()<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="65"/></condition><then pos:line="10" pos:column="65">
        <block type="pseudo"><return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">flag<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">!=<pos:position pos:line="13" pos:column="16"/></operator> <name pos:line="13" pos:column="17">COMM_OK<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">||<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">size<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">&lt;=<pos:position pos:line="13" pos:column="38"/></operator> <literal type="number" pos:line="13" pos:column="36">0<pos:position pos:line="13" pos:column="37"/></literal></expr>)<pos:position pos:line="13" pos:column="38"/></condition><then pos:line="13" pos:column="38"> <block pos:line="13" pos:column="39">{
        <expr_stmt><expr><call><name><name pos:line="14" pos:column="9">conn<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">close<pos:position pos:line="14" pos:column="20"/></name></name><argument_list pos:line="14" pos:column="20">()<pos:position pos:line="14" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
        <return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">vc<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">-&gt;<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="9">busy<pos:position pos:line="18" pos:column="13"/></name></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">idnsDoSendQueryVC<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">vc<pos:position pos:line="19" pos:column="25"/></name></expr></argument>)<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3025_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">clientTunnelOnError<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">ConnStateData<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">conn<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="42">Http<pos:position pos:line="2" pos:column="46"/></name><operator pos:line="2" pos:column="46">::<pos:position pos:line="2" pos:column="48"/></operator><name pos:line="2" pos:column="48">StreamPointer<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">&amp;<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="63">context<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="72">HttpRequest<pos:position pos:line="2" pos:column="83"/></name><operator pos:line="2" pos:column="83">::<pos:position pos:line="2" pos:column="85"/></operator><name pos:line="2" pos:column="85">Pointer<pos:position pos:line="2" pos:column="92"/></name></name> <modifier pos:line="2" pos:column="93">&amp;<pos:position pos:line="2" pos:column="98"/></modifier></type><name pos:line="2" pos:column="94">request<pos:position pos:line="2" pos:column="101"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="103">const<pos:position pos:line="2" pos:column="108"/></specifier> <name pos:line="2" pos:column="109">HttpRequestMethod<pos:position pos:line="2" pos:column="126"/></name><modifier pos:line="2" pos:column="126">&amp;<pos:position pos:line="2" pos:column="131"/></modifier></type> <name pos:line="2" pos:column="128">method<pos:position pos:line="2" pos:column="134"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="136">err_type<pos:position pos:line="2" pos:column="144"/></name></type> <name pos:line="2" pos:column="145">requestError<pos:position pos:line="2" pos:column="157"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="158"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name><name pos:line="4" pos:column="9">conn<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">-&gt;<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="15">mayTunnelUnsupportedProto<pos:position pos:line="4" pos:column="40"/></name></name><argument_list pos:line="4" pos:column="40">()<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="43"/></condition><then pos:line="4" pos:column="43"> <block pos:line="4" pos:column="44">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">ACLFilledChecklist<pos:position pos:line="5" pos:column="27"/></name></type> <name pos:line="5" pos:column="28">checklist<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">(<argument><expr><name><name pos:line="5" pos:column="38">Config<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">.<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="45">accessList<pos:position pos:line="5" pos:column="55"/></name><operator pos:line="5" pos:column="55">.<pos:position pos:line="5" pos:column="56"/></operator><name pos:line="5" pos:column="56">on_unsupported_protocol<pos:position pos:line="5" pos:column="79"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="81">request<pos:position pos:line="5" pos:column="88"/></name><operator pos:line="5" pos:column="88">.<pos:position pos:line="5" pos:column="89"/></operator><name pos:line="5" pos:column="89">getRaw<pos:position pos:line="5" pos:column="95"/></name></name><argument_list pos:line="5" pos:column="95">()<pos:position pos:line="5" pos:column="97"/></argument_list></call></expr></argument>, <argument><expr><literal type="null" pos:line="5" pos:column="99">nullptr<pos:position pos:line="5" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="107"/></argument_list></decl>;<pos:position pos:line="5" pos:column="108"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">checklist<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">.<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">requestErrorType<pos:position pos:line="6" pos:column="35"/></name></name> <operator pos:line="6" pos:column="36">=<pos:position pos:line="6" pos:column="37"/></operator> <name pos:line="6" pos:column="38">requestError<pos:position pos:line="6" pos:column="50"/></name></expr>;<pos:position pos:line="6" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">checklist<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">.<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">src_addr<pos:position pos:line="7" pos:column="27"/></name></name> <operator pos:line="7" pos:column="28">=<pos:position pos:line="7" pos:column="29"/></operator> <name><name pos:line="7" pos:column="30">conn<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">clientConnection<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">-&gt;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="54">remote<pos:position pos:line="7" pos:column="60"/></name></name></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">checklist<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">my_addr<pos:position pos:line="8" pos:column="26"/></name></name> <operator pos:line="8" pos:column="27">=<pos:position pos:line="8" pos:column="28"/></operator> <name><name pos:line="8" pos:column="29">conn<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">-&gt;<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="35">clientConnection<pos:position pos:line="8" pos:column="51"/></name><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">local<pos:position pos:line="8" pos:column="58"/></name></name></expr>;<pos:position pos:line="8" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">checklist<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">.<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">conn<pos:position pos:line="9" pos:column="23"/></name></name><argument_list pos:line="9" pos:column="23">(<argument><expr><name pos:line="9" pos:column="24">conn<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">allow_t<pos:position pos:line="10" pos:column="16"/></name></type> <name pos:line="10" pos:column="17">answer<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><call><name><name pos:line="10" pos:column="26">checklist<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">.<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">fastCheck<pos:position pos:line="10" pos:column="45"/></name></name><argument_list pos:line="10" pos:column="45">()<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="48"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name><name pos:line="11" pos:column="13">answer<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">.<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">allowed<pos:position pos:line="11" pos:column="27"/></name></name><argument_list pos:line="11" pos:column="27">()<pos:position pos:line="11" pos:column="29"/></argument_list></call> <operator pos:line="11" pos:column="30">&amp;&amp;<pos:position pos:line="11" pos:column="40"/></operator> <name><name pos:line="11" pos:column="33">answer<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">.<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="40">kind<pos:position pos:line="11" pos:column="44"/></name></name> <operator pos:line="11" pos:column="45">==<pos:position pos:line="11" pos:column="47"/></operator> <literal type="number" pos:line="11" pos:column="48">1<pos:position pos:line="11" pos:column="49"/></literal></expr>)<pos:position pos:line="11" pos:column="50"/></condition><then pos:line="11" pos:column="50"> <block pos:line="11" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">debugs<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="number" pos:line="12" pos:column="20">33<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="24">3<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="27">"Request will be tunneled to server"<pos:position pos:line="12" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="65"/></expr_stmt>
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><name pos:line="13" pos:column="17">context<pos:position pos:line="13" pos:column="24"/></name></expr>)<pos:position pos:line="13" pos:column="25"/></condition><then pos:line="13" pos:column="25"> <block pos:line="13" pos:column="26">{
                <expr_stmt><expr><call><name pos:line="14" pos:column="17">assert<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><call><name><name pos:line="14" pos:column="24">conn<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">pipeline<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">.<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">front<pos:position pos:line="14" pos:column="44"/></name></name><argument_list pos:line="14" pos:column="44">()<pos:position pos:line="14" pos:column="46"/></argument_list></call> <operator pos:line="14" pos:column="47">==<pos:position pos:line="14" pos:column="49"/></operator> <name pos:line="14" pos:column="50">context<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="59"/></expr_stmt> <comment type="line" pos:line="14" pos:column="60">// XXX: still assumes HTTP/1 semantics</comment>
                <expr_stmt><expr><call><name><name pos:line="15" pos:column="17">context<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">finished<pos:position pos:line="15" pos:column="34"/></name></name><argument_list pos:line="15" pos:column="34">()<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt> <comment type="line" pos:line="15" pos:column="38">// Will remove from conn-&gt;pipeline queue</comment>
            }<pos:position pos:line="16" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name><name pos:line="17" pos:column="13">Comm<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">::<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">SetSelect<pos:position pos:line="17" pos:column="28"/></name></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name><name pos:line="17" pos:column="29">conn<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">clientConnection<pos:position pos:line="17" pos:column="51"/></name><operator pos:line="17" pos:column="51">-&gt;<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="53">fd<pos:position pos:line="17" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="57">COMM_SELECT_READ<pos:position pos:line="17" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="75">NULL<pos:position pos:line="17" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="81">NULL<pos:position pos:line="17" pos:column="85"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="87">0<pos:position pos:line="17" pos:column="88"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="90"/></expr_stmt>
            <return pos:line="18" pos:column="13">return <expr><call><name><name pos:line="18" pos:column="20">conn<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">initiateTunneledRequest<pos:position pos:line="18" pos:column="49"/></name></name><argument_list pos:line="18" pos:column="49">(<argument><expr><name pos:line="18" pos:column="50">request<pos:position pos:line="18" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="59">Http<pos:position pos:line="18" pos:column="63"/></name><operator pos:line="18" pos:column="63">::<pos:position pos:line="18" pos:column="65"/></operator><name pos:line="18" pos:column="65">METHOD_NONE<pos:position pos:line="18" pos:column="76"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="78">"unknown-protocol"<pos:position pos:line="18" pos:column="96"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="98">conn<pos:position pos:line="18" pos:column="102"/></name><operator pos:line="18" pos:column="102">-&gt;<pos:position pos:line="18" pos:column="107"/></operator><name pos:line="18" pos:column="104">preservedClientData<pos:position pos:line="18" pos:column="123"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="125"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then> <else pos:line="19" pos:column="11">else <block pos:line="19" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">debugs<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="number" pos:line="20" pos:column="20">33<pos:position pos:line="20" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="24">3<pos:position pos:line="20" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="27">"Continue with returning the error: "<pos:position pos:line="20" pos:column="64"/></literal> <operator pos:line="20" pos:column="65">&lt;&lt;<pos:position pos:line="20" pos:column="73"/></operator> <name pos:line="20" pos:column="68">requestError<pos:position pos:line="20" pos:column="80"/></name></expr></argument>)<pos:position pos:line="20" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="82"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></else></if>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <return pos:line="24" pos:column="5">return <expr><literal type="boolean" pos:line="24" pos:column="12">false<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

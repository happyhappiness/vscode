<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4892_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">BasicUser<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">decodeCleartext<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">sent_auth<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* username and password */</comment>
    <expr_stmt><expr><name pos:line="7" pos:column="5">sent_auth<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <call><name pos:line="7" pos:column="17">xstrdup<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><name pos:line="7" pos:column="25">httpAuthHeader<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* Trim trailing \n before decoding */</comment>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">strtok<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">sent_auth<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"\n"<pos:position pos:line="10" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">cleartext<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <call><name pos:line="12" pos:column="17">uudecode<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name pos:line="12" pos:column="26">sent_auth<pos:position pos:line="12" pos:column="35"/></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">safe_free<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><name pos:line="14" pos:column="15">sent_auth<pos:position pos:line="14" pos:column="24"/></name></expr></argument>)<pos:position pos:line="14" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">cleartext<pos:position pos:line="16" pos:column="19"/></name></expr>)<pos:position pos:line="16" pos:column="20"/></condition><then pos:line="16" pos:column="20">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><literal type="boolean" pos:line="17" pos:column="16">false<pos:position pos:line="17" pos:column="21"/></literal></expr>;<pos:position pos:line="17" pos:column="22"/></return></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/*
     * Don't allow NL or CR in the credentials.
     * Oezguer Kesim &lt;oec@codeblau.de&gt;
     */</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">debugs<pos:position pos:line="23" pos:column="11"/></name><argument_list pos:line="23" pos:column="11">(<argument><expr><literal type="number" pos:line="23" pos:column="12">29<pos:position pos:line="23" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="16">9<pos:position pos:line="23" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="19">HERE<pos:position pos:line="23" pos:column="23"/></name> <operator pos:line="23" pos:column="24">&lt;&lt;<pos:position pos:line="23" pos:column="32"/></operator> <literal type="string" pos:line="23" pos:column="27">"'"<pos:position pos:line="23" pos:column="30"/></literal> <operator pos:line="23" pos:column="31">&lt;&lt;<pos:position pos:line="23" pos:column="39"/></operator> <name pos:line="23" pos:column="34">cleartext<pos:position pos:line="23" pos:column="43"/></name> <operator pos:line="23" pos:column="44">&lt;&lt;<pos:position pos:line="23" pos:column="52"/></operator> <literal type="string" pos:line="23" pos:column="47">"'"<pos:position pos:line="23" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">strcspn<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">cleartext<pos:position pos:line="25" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="28">"\r\n"<pos:position pos:line="25" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call> <operator pos:line="25" pos:column="36">!=<pos:position pos:line="25" pos:column="38"/></operator> <call><name pos:line="25" pos:column="39">strlen<pos:position pos:line="25" pos:column="45"/></name><argument_list pos:line="25" pos:column="45">(<argument><expr><name pos:line="25" pos:column="46">cleartext<pos:position pos:line="25" pos:column="55"/></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="57"/></condition><then pos:line="25" pos:column="57"> <block pos:line="25" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">debugs<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><literal type="number" pos:line="26" pos:column="16">29<pos:position pos:line="26" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="20">1<pos:position pos:line="26" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="23">HERE<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">&lt;&lt;<pos:position pos:line="26" pos:column="36"/></operator> <literal type="string" pos:line="26" pos:column="31">"bad characters in authorization header '"<pos:position pos:line="26" pos:column="73"/></literal> <operator pos:line="26" pos:column="74">&lt;&lt;<pos:position pos:line="26" pos:column="82"/></operator> <name pos:line="26" pos:column="77">httpAuthHeader<pos:position pos:line="26" pos:column="91"/></name> <operator pos:line="26" pos:column="92">&lt;&lt;<pos:position pos:line="26" pos:column="100"/></operator> <literal type="string" pos:line="26" pos:column="95">"'"<pos:position pos:line="26" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="100"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">safe_free<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name pos:line="27" pos:column="19">cleartext<pos:position pos:line="27" pos:column="28"/></name></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><literal type="boolean" pos:line="28" pos:column="16">false<pos:position pos:line="28" pos:column="21"/></literal></expr>;<pos:position pos:line="28" pos:column="22"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
    <return pos:line="30" pos:column="5">return <expr><literal type="boolean" pos:line="30" pos:column="12">true<pos:position pos:line="30" pos:column="16"/></literal></expr>;<pos:position pos:line="30" pos:column="17"/></return>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3020_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">connFinishedWithConn<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">size<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">size<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">==<pos:position pos:line="4" pos:column="16"/></operator> <literal type="number" pos:line="4" pos:column="17">0<pos:position pos:line="4" pos:column="18"/></literal></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19"> <block pos:line="4" pos:column="20">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name><name pos:line="5" pos:column="13">pipeline<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">.<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">empty<pos:position pos:line="5" pos:column="27"/></name></name><argument_list pos:line="5" pos:column="27">()<pos:position pos:line="5" pos:column="29"/></argument_list></call> <operator pos:line="5" pos:column="30">&amp;&amp;<pos:position pos:line="5" pos:column="40"/></operator> <call><name><name pos:line="5" pos:column="33">inBuf<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">.<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="39">isEmpty<pos:position pos:line="5" pos:column="46"/></name></name><argument_list pos:line="5" pos:column="46">()<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="49"/></condition><then pos:line="5" pos:column="49"> <block pos:line="5" pos:column="50">{
            <comment type="block" pos:line="6" pos:column="13">/* no current or pending requests */</comment>
            <expr_stmt><expr><call><name pos:line="7" pos:column="13">debugs<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><literal type="number" pos:line="7" pos:column="20">33<pos:position pos:line="7" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="24">4<pos:position pos:line="7" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="27">HERE<pos:position pos:line="7" pos:column="31"/></name> <operator pos:line="7" pos:column="32">&lt;&lt;<pos:position pos:line="7" pos:column="40"/></operator> <name pos:line="7" pos:column="35">clientConnection<pos:position pos:line="7" pos:column="51"/></name> <operator pos:line="7" pos:column="52">&lt;&lt;<pos:position pos:line="7" pos:column="60"/></operator> <literal type="string" pos:line="7" pos:column="55">" closed"<pos:position pos:line="7" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="66"/></expr_stmt>
            <return pos:line="8" pos:column="13">return <expr><literal type="boolean" pos:line="8" pos:column="20">true<pos:position pos:line="8" pos:column="24"/></literal></expr>;<pos:position pos:line="8" pos:column="25"/></return>
        }<pos:position pos:line="9" pos:column="10"/></block></then> <elseif pos:line="9" pos:column="11">else <if pos:line="9" pos:column="16">if <condition pos:line="9" pos:column="19">(<expr><operator pos:line="9" pos:column="20">!<pos:position pos:line="9" pos:column="21"/></operator><name><name pos:line="9" pos:column="21">Config<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">.<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">onoff<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">.<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="34">half_closed_clients<pos:position pos:line="9" pos:column="53"/></name></name></expr>)<pos:position pos:line="9" pos:column="54"/></condition><then pos:line="9" pos:column="54"> <block pos:line="9" pos:column="55">{
            <comment type="block" pos:line="10" pos:column="13">/* admin doesn't want to support half-closed client sockets */</comment>
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">debugs<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><literal type="number" pos:line="11" pos:column="20">33<pos:position pos:line="11" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="24">3<pos:position pos:line="11" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">HERE<pos:position pos:line="11" pos:column="31"/></name> <operator pos:line="11" pos:column="32">&lt;&lt;<pos:position pos:line="11" pos:column="40"/></operator> <name pos:line="11" pos:column="35">clientConnection<pos:position pos:line="11" pos:column="51"/></name> <operator pos:line="11" pos:column="52">&lt;&lt;<pos:position pos:line="11" pos:column="60"/></operator> <literal type="string" pos:line="11" pos:column="55">" aborted (half_closed_clients disabled)"<pos:position pos:line="11" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="98"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="12" pos:column="13">pipeline<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">.<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">terminateAll<pos:position pos:line="12" pos:column="34"/></name></name><argument_list pos:line="12" pos:column="34">(<argument><expr><literal type="number" pos:line="12" pos:column="35">0<pos:position pos:line="12" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt>
            <return pos:line="13" pos:column="13">return <expr><literal type="boolean" pos:line="13" pos:column="20">true<pos:position pos:line="13" pos:column="24"/></literal></expr>;<pos:position pos:line="13" pos:column="25"/></return>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <return pos:line="17" pos:column="5">return <expr><literal type="boolean" pos:line="17" pos:column="12">false<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

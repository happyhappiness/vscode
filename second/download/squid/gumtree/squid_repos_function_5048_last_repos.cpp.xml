<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5048_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">HeaderUpdater<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">swanSong<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">update<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">stale<pos:position pos:line="4" pos:column="21"/></name></name> <operator pos:line="4" pos:column="22">||<pos:position pos:line="4" pos:column="24"/></operator> <name><name pos:line="4" pos:column="25">update<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">.<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">fresh<pos:position pos:line="4" pos:column="37"/></name></name></expr>)<pos:position pos:line="4" pos:column="38"/></condition><then pos:line="4" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="5" pos:column="9">store<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">map<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">-&gt;<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="21">abortUpdating<pos:position pos:line="5" pos:column="34"/></name></name><argument_list pos:line="5" pos:column="34">(<argument><expr><name pos:line="5" pos:column="35">update<pos:position pos:line="5" pos:column="41"/></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="43"/></expr_stmt></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">reader<pos:position pos:line="7" pos:column="15"/></name></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16"> <block pos:line="7" pos:column="17">{
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">reader<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">-&gt;<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="17">close<pos:position pos:line="8" pos:column="22"/></name></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name><name pos:line="8" pos:column="23">StoreIOState<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">::<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">readerDone<pos:position pos:line="8" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">reader<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="null" pos:line="9" pos:column="18">nullptr<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">writer<pos:position pos:line="12" pos:column="15"/></name></expr>)<pos:position pos:line="12" pos:column="16"/></condition><then pos:line="12" pos:column="16"> <block pos:line="12" pos:column="17">{
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">writer<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">close<pos:position pos:line="13" pos:column="22"/></name></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name><name pos:line="13" pos:column="23">StoreIOState<pos:position pos:line="13" pos:column="35"/></name><operator pos:line="13" pos:column="35">::<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="37">writerGone<pos:position pos:line="13" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="49"/></expr_stmt>
        <comment type="line" pos:line="14" pos:column="9">// Emulate SwapDir::disconnect() that writeCompleted(err) hopes for.</comment>
        <comment type="line" pos:line="15" pos:column="9">// Also required to avoid IoState destructor assertions.</comment>
        <comment type="line" pos:line="16" pos:column="9">// We can do this because we closed update earlier or aborted it above.</comment>
        <expr_stmt><expr><cast type="dynamic" pos:line="17" pos:column="9">dynamic_cast<argument_list type="generic" pos:line="17" pos:column="21">&lt;<argument><expr><name pos:line="17" pos:column="22">IoState<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">&amp;<pos:position pos:line="17" pos:column="34"/></operator></expr></argument>&gt;<pos:position pos:line="17" pos:column="34"/></argument_list><argument_list pos:line="17" pos:column="31">(<argument><expr><operator pos:line="17" pos:column="32">*<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="33">writer<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></cast><operator pos:line="17" pos:column="40">.<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">writeableAnchor_<pos:position pos:line="17" pos:column="57"/></name> <operator pos:line="17" pos:column="58">=<pos:position pos:line="17" pos:column="59"/></operator> <literal type="null" pos:line="17" pos:column="60">nullptr<pos:position pos:line="17" pos:column="67"/></literal></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">writer<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <literal type="null" pos:line="18" pos:column="18">nullptr<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">AsyncJob<pos:position pos:line="21" pos:column="13"/></name><operator pos:line="21" pos:column="13">::<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">swanSong<pos:position pos:line="21" pos:column="23"/></name></name><argument_list pos:line="21" pos:column="23">()<pos:position pos:line="21" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

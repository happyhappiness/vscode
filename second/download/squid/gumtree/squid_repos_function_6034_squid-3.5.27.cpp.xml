<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6034_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Log<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">TcpLogger<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">doneAll<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">()<pos:position pos:line="2" pos:column="26"/></parameter_list> <specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">MY_DEBUG_SECTION<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="30">5<pos:position pos:line="4" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="33">"quitOnEmpty: "<pos:position pos:line="4" pos:column="48"/></literal> <operator pos:line="4" pos:column="49">&lt;&lt;<pos:position pos:line="4" pos:column="57"/></operator> <name pos:line="4" pos:column="52">quitOnEmpty<pos:position pos:line="4" pos:column="63"/></name> <operator pos:line="4" pos:column="64">&lt;&lt;<pos:position pos:line="4" pos:column="72"/></operator>
           <literal type="string" pos:line="5" pos:column="12">" buffered: "<pos:position pos:line="5" pos:column="25"/></literal> <operator pos:line="5" pos:column="26">&lt;&lt;<pos:position pos:line="5" pos:column="34"/></operator> <name pos:line="5" pos:column="29">bufferedSize<pos:position pos:line="5" pos:column="41"/></name> <operator pos:line="5" pos:column="42">&lt;&lt;<pos:position pos:line="5" pos:column="50"/></operator>
           <literal type="string" pos:line="6" pos:column="12">" conn: "<pos:position pos:line="6" pos:column="21"/></literal> <operator pos:line="6" pos:column="22">&lt;&lt;<pos:position pos:line="6" pos:column="30"/></operator> <name pos:line="6" pos:column="25">conn<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">&lt;&lt;<pos:position pos:line="6" pos:column="38"/></operator> <literal type="char" pos:line="6" pos:column="33">' '<pos:position pos:line="6" pos:column="36"/></literal> <operator pos:line="6" pos:column="37">&lt;&lt;<pos:position pos:line="6" pos:column="45"/></operator> <name pos:line="6" pos:column="40">connectFailures<pos:position pos:line="6" pos:column="55"/></name></expr></argument>)<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="57"/></expr_stmt>

    <comment type="line" pos:line="8" pos:column="5">// we do not quit unless we are told that we may</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">quitOnEmpty<pos:position pos:line="9" pos:column="21"/></name></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><literal type="boolean" pos:line="10" pos:column="16">false<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></return></block></then></if>

    <comment type="block" pos:line="12" pos:column="5">/* We were asked to quit after we are done writing buffers. Are we done? */</comment>

    <comment type="line" pos:line="14" pos:column="5">// If we have records but are failing to connect, quit. Otherwise, we may</comment>
    <comment type="line" pos:line="15" pos:column="5">// be trying to connect forever due to a [since fixed] misconfiguration!</comment>
    <decl_stmt><decl><type><specifier pos:line="16" pos:column="5">const<pos:position pos:line="16" pos:column="10"/></specifier> <name pos:line="16" pos:column="11">bool<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">failingToConnect<pos:position pos:line="16" pos:column="32"/></name> <init pos:line="16" pos:column="33">= <expr><operator pos:line="16" pos:column="35">!<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="36">conn<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">&amp;&amp;<pos:position pos:line="16" pos:column="51"/></operator> <name pos:line="16" pos:column="44">connectFailures<pos:position pos:line="16" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="60"/></decl_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">bufferedSize<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">&amp;&amp;<pos:position pos:line="17" pos:column="32"/></operator> <operator pos:line="17" pos:column="25">!<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">failingToConnect<pos:position pos:line="17" pos:column="42"/></name></expr>)<pos:position pos:line="17" pos:column="43"/></condition><then pos:line="17" pos:column="43">
        <block type="pseudo"><return pos:line="18" pos:column="9">return <expr><literal type="boolean" pos:line="18" pos:column="16">false<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></return></block></then></if>

    <return pos:line="20" pos:column="5">return <expr><call><name><name pos:line="20" pos:column="12">AsyncJob<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">::<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">doneAll<pos:position pos:line="20" pos:column="29"/></name></name><argument_list pos:line="20" pos:column="29">()<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

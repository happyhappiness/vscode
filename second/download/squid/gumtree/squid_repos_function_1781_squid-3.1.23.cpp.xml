<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1781_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">neighbors_init<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">void<pos:position pos:line="2" pos:column="20"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">IpAddress<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">nul<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">addrinfo<pos:position pos:line="5" pos:column="20"/></name></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">AI<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name pos:line="5" pos:column="27">NULL<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">servent<pos:position pos:line="6" pos:column="19"/></name></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">sep<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">me<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><call><name pos:line="7" pos:column="22">getMyHostname<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">()<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">peer<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">thisPeer<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name pos:line="8" pos:column="22">NULL<pos:position pos:line="8" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">peer<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">next<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">fd<pos:position pos:line="10" pos:column="11"/></name> <init pos:line="10" pos:column="12">= <expr><name pos:line="10" pos:column="14">theInIcpConnection<pos:position pos:line="10" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="33"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">neighborsRegisterWithCacheManager<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">()<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* setup addrinfo for use */</comment>
    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">nul<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">.<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">InitAddrInfo<pos:position pos:line="15" pos:column="21"/></name></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">AI<pos:position pos:line="15" pos:column="24"/></name></expr></argument>)<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="26"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">fd<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">&gt;=<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="15">0<pos:position pos:line="17" pos:column="16"/></literal></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17"> <block pos:line="17" pos:column="18">{

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">getsockname<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">fd<pos:position pos:line="19" pos:column="27"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="29">AI<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">ai_addr<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="42">&amp;<pos:position pos:line="19" pos:column="47"/></operator><name><name pos:line="19" pos:column="43">AI<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">-&gt;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="47">ai_addrlen<pos:position pos:line="19" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="58"/></argument_list></call> <operator pos:line="19" pos:column="59">&lt;<pos:position pos:line="19" pos:column="63"/></operator> <literal type="number" pos:line="19" pos:column="61">0<pos:position pos:line="19" pos:column="62"/></literal></expr>)<pos:position pos:line="19" pos:column="63"/></condition><then pos:line="19" pos:column="63">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="13">debugs<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="number" pos:line="20" pos:column="20">15<pos:position pos:line="20" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="24">1<pos:position pos:line="20" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="27">"getsockname("<pos:position pos:line="20" pos:column="41"/></literal> <operator pos:line="20" pos:column="42">&lt;&lt;<pos:position pos:line="20" pos:column="50"/></operator> <name pos:line="20" pos:column="45">fd<pos:position pos:line="20" pos:column="47"/></name> <operator pos:line="20" pos:column="48">&lt;&lt;<pos:position pos:line="20" pos:column="56"/></operator> <literal type="string" pos:line="20" pos:column="51">","<pos:position pos:line="20" pos:column="54"/></literal> <operator pos:line="20" pos:column="55">&lt;&lt;<pos:position pos:line="20" pos:column="63"/></operator> <name><name pos:line="20" pos:column="58">AI<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">-&gt;<pos:position pos:line="20" pos:column="65"/></operator><name pos:line="20" pos:column="62">ai_addr<pos:position pos:line="20" pos:column="69"/></name></name> <operator pos:line="20" pos:column="70">&lt;&lt;<pos:position pos:line="20" pos:column="78"/></operator> <literal type="string" pos:line="20" pos:column="73">","<pos:position pos:line="20" pos:column="76"/></literal> <operator pos:line="20" pos:column="77">&lt;&lt;<pos:position pos:line="20" pos:column="85"/></operator> <operator pos:line="20" pos:column="80">&amp;<pos:position pos:line="20" pos:column="85"/></operator><name><name pos:line="20" pos:column="81">AI<pos:position pos:line="20" pos:column="83"/></name><operator pos:line="20" pos:column="83">-&gt;<pos:position pos:line="20" pos:column="88"/></operator><name pos:line="20" pos:column="85">ai_addrlen<pos:position pos:line="20" pos:column="95"/></name></name> <operator pos:line="20" pos:column="96">&lt;&lt;<pos:position pos:line="20" pos:column="104"/></operator> <literal type="string" pos:line="20" pos:column="99">") failed."<pos:position pos:line="20" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="112"/></expr_stmt></block></then></if>

        <for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">thisPeer<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name><name pos:line="22" pos:column="25">Config<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">.<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="32">peers<pos:position pos:line="22" pos:column="37"/></name></name></expr>;<pos:position pos:line="22" pos:column="38"/></init> <condition><expr><name pos:line="22" pos:column="39">thisPeer<pos:position pos:line="22" pos:column="47"/></name></expr>;<pos:position pos:line="22" pos:column="48"/></condition> <incr><expr><name pos:line="22" pos:column="49">thisPeer<pos:position pos:line="22" pos:column="57"/></name> <operator pos:line="22" pos:column="58">=<pos:position pos:line="22" pos:column="59"/></operator> <name pos:line="22" pos:column="60">next<pos:position pos:line="22" pos:column="64"/></name></expr></incr>)<pos:position pos:line="22" pos:column="65"/></control> <block pos:line="22" pos:column="66">{
            <decl_stmt><decl><type><name pos:line="23" pos:column="13">http_port_list<pos:position pos:line="23" pos:column="27"/></name> <modifier pos:line="23" pos:column="28">*<pos:position pos:line="23" pos:column="29"/></modifier></type><name pos:line="23" pos:column="29">s<pos:position pos:line="23" pos:column="30"/></name> <init pos:line="23" pos:column="31">= <expr><name pos:line="23" pos:column="33">NULL<pos:position pos:line="23" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="38"/></decl_stmt>
            <expr_stmt><expr><name pos:line="24" pos:column="13">next<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name><name pos:line="24" pos:column="20">thisPeer<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-&gt;<pos:position pos:line="24" pos:column="33"/></operator><name pos:line="24" pos:column="30">next<pos:position pos:line="24" pos:column="34"/></name></name></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>

            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><literal type="number" pos:line="26" pos:column="17">0<pos:position pos:line="26" pos:column="18"/></literal> <operator pos:line="26" pos:column="19">!=<pos:position pos:line="26" pos:column="21"/></operator> <call><name pos:line="26" pos:column="22">strcmp<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><name><name pos:line="26" pos:column="29">thisPeer<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">-&gt;<pos:position pos:line="26" pos:column="42"/></operator><name pos:line="26" pos:column="39">host<pos:position pos:line="26" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="45">me<pos:position pos:line="26" pos:column="47"/></name></expr></argument>)<pos:position pos:line="26" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="49"/></condition><then pos:line="26" pos:column="49">
                <block type="pseudo"><continue pos:line="27" pos:column="17">continue;<pos:position pos:line="27" pos:column="26"/></continue></block></then></if>

            <for pos:line="29" pos:column="13">for <control pos:line="29" pos:column="17">(<init><expr><name pos:line="29" pos:column="18">s<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">=<pos:position pos:line="29" pos:column="21"/></operator> <name><name pos:line="29" pos:column="22">Config<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">.<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="29">Sockaddr<pos:position pos:line="29" pos:column="37"/></name><operator pos:line="29" pos:column="37">.<pos:position pos:line="29" pos:column="38"/></operator><name pos:line="29" pos:column="38">http<pos:position pos:line="29" pos:column="42"/></name></name></expr>;<pos:position pos:line="29" pos:column="43"/></init> <condition><expr><name pos:line="29" pos:column="44">s<pos:position pos:line="29" pos:column="45"/></name></expr>;<pos:position pos:line="29" pos:column="46"/></condition> <incr><expr><name pos:line="29" pos:column="47">s<pos:position pos:line="29" pos:column="48"/></name> <operator pos:line="29" pos:column="49">=<pos:position pos:line="29" pos:column="50"/></operator> <name><name pos:line="29" pos:column="51">s<pos:position pos:line="29" pos:column="52"/></name><operator pos:line="29" pos:column="52">-&gt;<pos:position pos:line="29" pos:column="57"/></operator><name pos:line="29" pos:column="54">next<pos:position pos:line="29" pos:column="58"/></name></name></expr></incr>)<pos:position pos:line="29" pos:column="59"/></control> <block pos:line="29" pos:column="60">{
                <if pos:line="30" pos:column="17">if <condition pos:line="30" pos:column="20">(<expr><name><name pos:line="30" pos:column="21">thisPeer<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">http_port<pos:position pos:line="30" pos:column="40"/></name></name> <operator pos:line="30" pos:column="41">!=<pos:position pos:line="30" pos:column="43"/></operator> <call><name><name pos:line="30" pos:column="44">s<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">-&gt;<pos:position pos:line="30" pos:column="50"/></operator><name pos:line="30" pos:column="47">s<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">.<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">GetPort<pos:position pos:line="30" pos:column="56"/></name></name><argument_list pos:line="30" pos:column="56">()<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="59"/></condition><then pos:line="30" pos:column="59">
                    <block type="pseudo"><continue pos:line="31" pos:column="21">continue;<pos:position pos:line="31" pos:column="30"/></continue></block></then></if>

                <expr_stmt><expr><call><name pos:line="33" pos:column="17">debugs<pos:position pos:line="33" pos:column="23"/></name><argument_list pos:line="33" pos:column="23">(<argument><expr><literal type="number" pos:line="33" pos:column="24">15<pos:position pos:line="33" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="28">1<pos:position pos:line="33" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="31">"WARNING: Peer looks like this host"<pos:position pos:line="33" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="69"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="35" pos:column="17">debugs<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><literal type="number" pos:line="35" pos:column="24">15<pos:position pos:line="35" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="28">1<pos:position pos:line="35" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="31">"         Ignoring "<pos:position pos:line="35" pos:column="51"/></literal> <operator pos:line="35" pos:column="52">&lt;&lt;<pos:position pos:line="35" pos:column="60"/></operator>
                       <call><name pos:line="36" pos:column="24">neighborTypeStr<pos:position pos:line="36" pos:column="39"/></name><argument_list pos:line="36" pos:column="39">(<argument><expr><name pos:line="36" pos:column="40">thisPeer<pos:position pos:line="36" pos:column="48"/></name></expr></argument>)<pos:position pos:line="36" pos:column="49"/></argument_list></call> <operator pos:line="36" pos:column="50">&lt;&lt;<pos:position pos:line="36" pos:column="58"/></operator> <literal type="string" pos:line="36" pos:column="53">" "<pos:position pos:line="36" pos:column="56"/></literal> <operator pos:line="36" pos:column="57">&lt;&lt;<pos:position pos:line="36" pos:column="65"/></operator> <name><name pos:line="36" pos:column="60">thisPeer<pos:position pos:line="36" pos:column="68"/></name><operator pos:line="36" pos:column="68">-&gt;<pos:position pos:line="36" pos:column="73"/></operator><name pos:line="36" pos:column="70">host<pos:position pos:line="36" pos:column="74"/></name></name> <operator pos:line="36" pos:column="75">&lt;&lt;<pos:position pos:line="36" pos:column="83"/></operator>
                       <literal type="string" pos:line="37" pos:column="24">"/"<pos:position pos:line="37" pos:column="27"/></literal> <operator pos:line="37" pos:column="28">&lt;&lt;<pos:position pos:line="37" pos:column="36"/></operator> <name><name pos:line="37" pos:column="31">thisPeer<pos:position pos:line="37" pos:column="39"/></name><operator pos:line="37" pos:column="39">-&gt;<pos:position pos:line="37" pos:column="44"/></operator><name pos:line="37" pos:column="41">http_port<pos:position pos:line="37" pos:column="50"/></name></name> <operator pos:line="37" pos:column="51">&lt;&lt;<pos:position pos:line="37" pos:column="59"/></operator> <literal type="string" pos:line="37" pos:column="54">"/"<pos:position pos:line="37" pos:column="57"/></literal> <operator pos:line="37" pos:column="58">&lt;&lt;<pos:position pos:line="37" pos:column="66"/></operator>
                       <name><name pos:line="38" pos:column="24">thisPeer<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">-&gt;<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="34">icp<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">.<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="38">port<pos:position pos:line="38" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="44"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="40" pos:column="17">neighborRemove<pos:position pos:line="40" pos:column="31"/></name><argument_list pos:line="40" pos:column="31">(<argument><expr><name pos:line="40" pos:column="32">thisPeer<pos:position pos:line="40" pos:column="40"/></name></expr></argument>)<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="41" pos:column="14"/></block></for>
        }<pos:position pos:line="42" pos:column="10"/></block></for>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">peerRefreshDNS<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><operator pos:line="45" pos:column="20">(<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">void<pos:position pos:line="45" pos:column="25"/></name> <operator pos:line="45" pos:column="26">*<pos:position pos:line="45" pos:column="27"/></operator><operator pos:line="45" pos:column="27">)<pos:position pos:line="45" pos:column="28"/></operator> <literal type="number" pos:line="45" pos:column="29">1<pos:position pos:line="45" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">ICP_INVALID<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">==<pos:position pos:line="47" pos:column="23"/></operator> <name><name pos:line="47" pos:column="24">echo_hdr<pos:position pos:line="47" pos:column="32"/></name><operator pos:line="47" pos:column="32">.<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="33">opcode<pos:position pos:line="47" pos:column="39"/></name></name></expr>)<pos:position pos:line="47" pos:column="40"/></condition><then pos:line="47" pos:column="40"> <block pos:line="47" pos:column="41">{
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">echo_hdr<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">.<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">opcode<pos:position pos:line="48" pos:column="24"/></name></name> <operator pos:line="48" pos:column="25">=<pos:position pos:line="48" pos:column="26"/></operator> <name pos:line="48" pos:column="27">ICP_SECHO<pos:position pos:line="48" pos:column="36"/></name></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="49" pos:column="9">echo_hdr<pos:position pos:line="49" pos:column="17"/></name><operator pos:line="49" pos:column="17">.<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="18">version<pos:position pos:line="49" pos:column="25"/></name></name> <operator pos:line="49" pos:column="26">=<pos:position pos:line="49" pos:column="27"/></operator> <name pos:line="49" pos:column="28">ICP_VERSION_CURRENT<pos:position pos:line="49" pos:column="47"/></name></expr>;<pos:position pos:line="49" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="50" pos:column="9">echo_hdr<pos:position pos:line="50" pos:column="17"/></name><operator pos:line="50" pos:column="17">.<pos:position pos:line="50" pos:column="18"/></operator><name pos:line="50" pos:column="18">length<pos:position pos:line="50" pos:column="24"/></name></name> <operator pos:line="50" pos:column="25">=<pos:position pos:line="50" pos:column="26"/></operator> <literal type="number" pos:line="50" pos:column="27">0<pos:position pos:line="50" pos:column="28"/></literal></expr>;<pos:position pos:line="50" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="51" pos:column="9">echo_hdr<pos:position pos:line="51" pos:column="17"/></name><operator pos:line="51" pos:column="17">.<pos:position pos:line="51" pos:column="18"/></operator><name pos:line="51" pos:column="18">reqnum<pos:position pos:line="51" pos:column="24"/></name></name> <operator pos:line="51" pos:column="25">=<pos:position pos:line="51" pos:column="26"/></operator> <literal type="number" pos:line="51" pos:column="27">0<pos:position pos:line="51" pos:column="28"/></literal></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">echo_hdr<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">.<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="18">flags<pos:position pos:line="52" pos:column="23"/></name></name> <operator pos:line="52" pos:column="24">=<pos:position pos:line="52" pos:column="25"/></operator> <literal type="number" pos:line="52" pos:column="26">0<pos:position pos:line="52" pos:column="27"/></literal></expr>;<pos:position pos:line="52" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">echo_hdr<pos:position pos:line="53" pos:column="17"/></name><operator pos:line="53" pos:column="17">.<pos:position pos:line="53" pos:column="18"/></operator><name pos:line="53" pos:column="18">pad<pos:position pos:line="53" pos:column="21"/></name></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <literal type="number" pos:line="53" pos:column="24">0<pos:position pos:line="53" pos:column="25"/></literal></expr>;<pos:position pos:line="53" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">nul<pos:position pos:line="54" pos:column="12"/></name> <operator pos:line="54" pos:column="13">=<pos:position pos:line="54" pos:column="14"/></operator> <operator pos:line="54" pos:column="15">*<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="16">AI<pos:position pos:line="54" pos:column="18"/></name></expr>;<pos:position pos:line="54" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="55" pos:column="9">nul<pos:position pos:line="55" pos:column="12"/></name><operator pos:line="55" pos:column="12">.<pos:position pos:line="55" pos:column="13"/></operator><name pos:line="55" pos:column="13">GetInAddr<pos:position pos:line="55" pos:column="22"/></name></name><argument_list pos:line="55" pos:column="22">( <argument><expr><operator pos:line="55" pos:column="24">*<pos:position pos:line="55" pos:column="25"/></operator><operator pos:line="55" pos:column="25">(<pos:position pos:line="55" pos:column="26"/></operator><operator pos:line="55" pos:column="26">(<pos:position pos:line="55" pos:column="27"/></operator>struct <name pos:line="55" pos:column="34">in_addr<pos:position pos:line="55" pos:column="41"/></name><operator pos:line="55" pos:column="41">*<pos:position pos:line="55" pos:column="42"/></operator><operator pos:line="55" pos:column="42">)<pos:position pos:line="55" pos:column="43"/></operator><operator pos:line="55" pos:column="43">&amp;<pos:position pos:line="55" pos:column="48"/></operator><name><name pos:line="55" pos:column="44">echo_hdr<pos:position pos:line="55" pos:column="52"/></name><operator pos:line="55" pos:column="52">.<pos:position pos:line="55" pos:column="53"/></operator><name pos:line="55" pos:column="53">shostid<pos:position pos:line="55" pos:column="60"/></name></name><operator pos:line="55" pos:column="60">)<pos:position pos:line="55" pos:column="61"/></operator></expr></argument> )<pos:position pos:line="55" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name pos:line="56" pos:column="9">sep<pos:position pos:line="56" pos:column="12"/></name> <operator pos:line="56" pos:column="13">=<pos:position pos:line="56" pos:column="14"/></operator> <call><name pos:line="56" pos:column="15">getservbyname<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><literal type="string" pos:line="56" pos:column="29">"echo"<pos:position pos:line="56" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="37">"udp"<pos:position pos:line="56" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="57" pos:column="9">echo_port<pos:position pos:line="57" pos:column="18"/></name> <operator pos:line="57" pos:column="19">=<pos:position pos:line="57" pos:column="20"/></operator> <ternary><condition><expr><name pos:line="57" pos:column="21">sep<pos:position pos:line="57" pos:column="24"/></name></expr> ?<pos:position pos:line="57" pos:column="26"/></condition><then pos:line="57" pos:column="26"> <expr><call><name pos:line="57" pos:column="27">ntohs<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><operator pos:line="57" pos:column="33">(<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="34">unsigned<pos:position pos:line="57" pos:column="42"/></name> <name pos:line="57" pos:column="43">short<pos:position pos:line="57" pos:column="48"/></name><operator pos:line="57" pos:column="48">)<pos:position pos:line="57" pos:column="49"/></operator> <name><name pos:line="57" pos:column="50">sep<pos:position pos:line="57" pos:column="53"/></name><operator pos:line="57" pos:column="53">-&gt;<pos:position pos:line="57" pos:column="58"/></operator><name pos:line="57" pos:column="55">s_port<pos:position pos:line="57" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="62"/></argument_list></call></expr> <pos:position pos:line="57" pos:column="63"/></then><else pos:line="57" pos:column="63">: <expr><literal type="number" pos:line="57" pos:column="65">7<pos:position pos:line="57" pos:column="66"/></literal></expr></else></ternary></expr>;<pos:position pos:line="57" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="60" pos:column="5">first_ping<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <name><name pos:line="60" pos:column="18">Config<pos:position pos:line="60" pos:column="24"/></name><operator pos:line="60" pos:column="24">.<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="25">peers<pos:position pos:line="60" pos:column="30"/></name></name></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="61" pos:column="5">nul<pos:position pos:line="61" pos:column="8"/></name><operator pos:line="61" pos:column="8">.<pos:position pos:line="61" pos:column="9"/></operator><name pos:line="61" pos:column="9">FreeAddrInfo<pos:position pos:line="61" pos:column="21"/></name></name><argument_list pos:line="61" pos:column="21">(<argument><expr><name pos:line="61" pos:column="22">AI<pos:position pos:line="61" pos:column="24"/></name></expr></argument>)<pos:position pos:line="61" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="26"/></expr_stmt>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

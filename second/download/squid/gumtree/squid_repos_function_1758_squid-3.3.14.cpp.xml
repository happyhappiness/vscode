<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1758_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">peerDigestStatsReport<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">PeerDigest<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type> <name pos:line="2" pos:column="42">pd<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">StoreEntry<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type> <name pos:line="2" pos:column="59">e<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:define pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">define<pos:position pos:line="4" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="4" pos:column="9">f2s<pos:position pos:line="4" pos:column="12"/></name><parameter_list pos:line="4" pos:column="12">(<parameter><type><name pos:line="4" pos:column="13">flag<pos:position pos:line="4" pos:column="17"/></name></type></parameter>)<pos:position pos:line="4" pos:column="18"/></parameter_list></cpp:macro> <cpp:value pos:line="4" pos:column="19">(pd-&gt;flags.flag ? "yes" : "no")<pos:position pos:line="4" pos:column="50"/></cpp:value></cpp:define>
<cpp:define pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">define<pos:position pos:line="5" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="5" pos:column="9">appendTime<pos:position pos:line="5" pos:column="19"/></name><parameter_list pos:line="5" pos:column="19">(<parameter><type><name pos:line="5" pos:column="20">tm<pos:position pos:line="5" pos:column="22"/></name></type></parameter>)<pos:position pos:line="5" pos:column="23"/></parameter_list></cpp:macro> <cpp:value pos:line="5" pos:column="24">storeAppendPrintf(e, "%s\t %10ld\t %+d\t %+d\n", \
    ""#tm, (long int)pd-&gt;times.tm, \
    saneDiff(pd-&gt;times.tm - squid_curtime), \
    saneDiff(pd-&gt;times.tm - pd-&gt;times.initialized))<pos:position pos:line="8" pos:column="52"/></cpp:value></cpp:define>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">pd<pos:position pos:line="10" pos:column="14"/></name></expr></argument>)<pos:position pos:line="10" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="16"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">char<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">host<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><call><name><name pos:line="12" pos:column="24">pd<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">host<pos:position pos:line="12" pos:column="32"/></name><operator pos:line="12" pos:column="32">.<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">termedBuf<pos:position pos:line="12" pos:column="42"/></name></name><argument_list pos:line="12" pos:column="42">()<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="45"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">storeAppendPrintf<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">e<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="26">"\npeer digest from %s\n"<pos:position pos:line="13" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="53">host<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">cacheDigestGuessStatsReport<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><operator pos:line="15" pos:column="33">&amp;<pos:position pos:line="15" pos:column="38"/></operator><name><name pos:line="15" pos:column="34">pd<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">-&gt;<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="38">stats<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">.<pos:position pos:line="15" pos:column="44"/></operator><name pos:line="15" pos:column="44">guess<pos:position pos:line="15" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="51">e<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">host<pos:position pos:line="15" pos:column="58"/></name></expr></argument>)<pos:position pos:line="15" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="60"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">storeAppendPrintf<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">e<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="26">"\nevent\t timestamp\t secs from now\t secs from init\n"<pos:position pos:line="17" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="84"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">appendTime<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">initialized<pos:position pos:line="18" pos:column="27"/></name></expr></argument>)<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">appendTime<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">needed<pos:position pos:line="19" pos:column="22"/></name></expr></argument>)<pos:position pos:line="19" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">appendTime<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">requested<pos:position pos:line="20" pos:column="25"/></name></expr></argument>)<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">appendTime<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><name pos:line="21" pos:column="16">received<pos:position pos:line="21" pos:column="24"/></name></expr></argument>)<pos:position pos:line="21" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">appendTime<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><name pos:line="22" pos:column="16">next_check<pos:position pos:line="22" pos:column="26"/></name></expr></argument>)<pos:position pos:line="22" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">storeAppendPrintf<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">e<pos:position pos:line="24" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="26">"peer digest state:\n"<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">storeAppendPrintf<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">e<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="26">"\tneeded: %3s, usable: %3s, requested: %3s\n"<pos:position pos:line="25" pos:column="72"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="26" pos:column="23">f2s<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">needed<pos:position pos:line="26" pos:column="33"/></name></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="36">f2s<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><name pos:line="26" pos:column="40">usable<pos:position pos:line="26" pos:column="46"/></name></expr></argument>)<pos:position pos:line="26" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="49">f2s<pos:position pos:line="26" pos:column="52"/></name><argument_list pos:line="26" pos:column="52">(<argument><expr><name pos:line="26" pos:column="53">requested<pos:position pos:line="26" pos:column="62"/></name></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">storeAppendPrintf<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">e<pos:position pos:line="27" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="26">"\n\tlast retry delay: %d secs\n"<pos:position pos:line="27" pos:column="59"/></literal></expr></argument>,
                      <argument><expr><operator pos:line="28" pos:column="23">(<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">int<pos:position pos:line="28" pos:column="27"/></name><operator pos:line="28" pos:column="27">)<pos:position pos:line="28" pos:column="28"/></operator> <name><name pos:line="28" pos:column="29">pd<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">times<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">.<pos:position pos:line="28" pos:column="39"/></operator><name pos:line="28" pos:column="39">retry_delay<pos:position pos:line="28" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">storeAppendPrintf<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">e<pos:position pos:line="29" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="26">"\tlast request response time: %d secs\n"<pos:position pos:line="29" pos:column="67"/></literal></expr></argument>,
                      <argument><expr><operator pos:line="30" pos:column="23">(<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="24">int<pos:position pos:line="30" pos:column="27"/></name><operator pos:line="30" pos:column="27">)<pos:position pos:line="30" pos:column="28"/></operator> <name><name pos:line="30" pos:column="29">pd<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">-&gt;<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="33">times<pos:position pos:line="30" pos:column="38"/></name><operator pos:line="30" pos:column="38">.<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="39">req_delay<pos:position pos:line="30" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">storeAppendPrintf<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">e<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="26">"\tlast request result: %s\n"<pos:position pos:line="31" pos:column="55"/></literal></expr></argument>,
                      <argument><expr><ternary><condition><expr><name><name pos:line="32" pos:column="23">pd<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">-&gt;<pos:position pos:line="32" pos:column="30"/></operator><name pos:line="32" pos:column="27">req_result<pos:position pos:line="32" pos:column="37"/></name></name></expr> ?<pos:position pos:line="32" pos:column="39"/></condition><then pos:line="32" pos:column="39"> <expr><name><name pos:line="32" pos:column="40">pd<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">-&gt;<pos:position pos:line="32" pos:column="47"/></operator><name pos:line="32" pos:column="44">req_result<pos:position pos:line="32" pos:column="54"/></name></name></expr> <pos:position pos:line="32" pos:column="55"/></then><else pos:line="32" pos:column="55">: <expr><literal type="string" pos:line="32" pos:column="57">"(none)"<pos:position pos:line="32" pos:column="65"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="32" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">storeAppendPrintf<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">e<pos:position pos:line="34" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="26">"\npeer digest traffic:\n"<pos:position pos:line="34" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">storeAppendPrintf<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">e<pos:position pos:line="35" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="26">"\trequests sent: %d, volume: %d KB\n"<pos:position pos:line="35" pos:column="64"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="36" pos:column="23">pd<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">-&gt;<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="27">stats<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">.<pos:position pos:line="36" pos:column="33"/></operator><name pos:line="36" pos:column="33">sent<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">.<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="38">msgs<pos:position pos:line="36" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="44">(<pos:position pos:line="36" pos:column="45"/></operator><name pos:line="36" pos:column="45">int<pos:position pos:line="36" pos:column="48"/></name><operator pos:line="36" pos:column="48">)<pos:position pos:line="36" pos:column="49"/></operator> <name><name pos:line="36" pos:column="50">pd<pos:position pos:line="36" pos:column="52"/></name><operator pos:line="36" pos:column="52">-&gt;<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="54">stats<pos:position pos:line="36" pos:column="59"/></name><operator pos:line="36" pos:column="59">.<pos:position pos:line="36" pos:column="60"/></operator><name pos:line="36" pos:column="60">sent<pos:position pos:line="36" pos:column="64"/></name><operator pos:line="36" pos:column="64">.<pos:position pos:line="36" pos:column="65"/></operator><name pos:line="36" pos:column="65">kbytes<pos:position pos:line="36" pos:column="71"/></name><operator pos:line="36" pos:column="71">.<pos:position pos:line="36" pos:column="72"/></operator><name pos:line="36" pos:column="72">kb<pos:position pos:line="36" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">storeAppendPrintf<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">e<pos:position pos:line="37" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="26">"\treplies recv:  %d, volume: %d KB\n"<pos:position pos:line="37" pos:column="64"/></literal></expr></argument>,
                      <argument><expr><name><name pos:line="38" pos:column="23">pd<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">stats<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">.<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="33">recv<pos:position pos:line="38" pos:column="37"/></name><operator pos:line="38" pos:column="37">.<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="38">msgs<pos:position pos:line="38" pos:column="42"/></name></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="44">(<pos:position pos:line="38" pos:column="45"/></operator><name pos:line="38" pos:column="45">int<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">)<pos:position pos:line="38" pos:column="49"/></operator> <name><name pos:line="38" pos:column="50">pd<pos:position pos:line="38" pos:column="52"/></name><operator pos:line="38" pos:column="52">-&gt;<pos:position pos:line="38" pos:column="57"/></operator><name pos:line="38" pos:column="54">stats<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">.<pos:position pos:line="38" pos:column="60"/></operator><name pos:line="38" pos:column="60">recv<pos:position pos:line="38" pos:column="64"/></name><operator pos:line="38" pos:column="64">.<pos:position pos:line="38" pos:column="65"/></operator><name pos:line="38" pos:column="65">kbytes<pos:position pos:line="38" pos:column="71"/></name><operator pos:line="38" pos:column="71">.<pos:position pos:line="38" pos:column="72"/></operator><name pos:line="38" pos:column="72">kb<pos:position pos:line="38" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="76"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">storeAppendPrintf<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">e<pos:position pos:line="40" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="26">"\npeer digest structure:\n"<pos:position pos:line="40" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="56"/></expr_stmt>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">pd<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">-&gt;<pos:position pos:line="42" pos:column="16"/></operator><name pos:line="42" pos:column="13">cd<pos:position pos:line="42" pos:column="15"/></name></name></expr>)<pos:position pos:line="42" pos:column="16"/></condition><then pos:line="42" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="43" pos:column="9">cacheDigestReport<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name><name pos:line="43" pos:column="27">pd<pos:position pos:line="43" pos:column="29"/></name><operator pos:line="43" pos:column="29">-&gt;<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="31">cd<pos:position pos:line="43" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="35">host<pos:position pos:line="43" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="41">e<pos:position pos:line="43" pos:column="42"/></name></expr></argument>)<pos:position pos:line="43" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="44"/></expr_stmt></block></then>
    <else pos:line="44" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="9">storeAppendPrintf<pos:position pos:line="45" pos:column="26"/></name><argument_list pos:line="45" pos:column="26">(<argument><expr><name pos:line="45" pos:column="27">e<pos:position pos:line="45" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="30">"\tno in-memory copy\n"<pos:position pos:line="45" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="55"/></expr_stmt></block></else></if>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

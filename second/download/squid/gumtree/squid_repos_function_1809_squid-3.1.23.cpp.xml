<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1809_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerCountMcastPeersDone<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">void<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">data<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ps_state<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">psstate<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">ps_state<pos:position pos:line="4" pos:column="34"/></name> <operator pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></operator><operator pos:line="4" pos:column="36">)<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">data<pos:position pos:line="4" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StoreEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">fake<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name><name pos:line="5" pos:column="24">psstate<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">entry<pos:position pos:line="5" pos:column="38"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">cbdataReferenceValid<pos:position pos:line="7" pos:column="29"/></name><argument_list pos:line="7" pos:column="29">(<argument><expr><name><name pos:line="7" pos:column="30">psstate<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">callback_data<pos:position pos:line="7" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="54"/></condition><then pos:line="7" pos:column="54"> <block pos:line="7" pos:column="55">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">peer<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">p<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><operator pos:line="8" pos:column="19">(<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">peer<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><operator pos:line="8" pos:column="26">)<pos:position pos:line="8" pos:column="27"/></operator><name><name pos:line="8" pos:column="27">psstate<pos:position pos:line="8" pos:column="34"/></name><operator pos:line="8" pos:column="34">-&gt;<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="36">callback_data<pos:position pos:line="8" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="50"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">p<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">mcast<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">flags<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">.<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">counting<pos:position pos:line="9" pos:column="32"/></name></name> <operator pos:line="9" pos:column="33">=<pos:position pos:line="9" pos:column="34"/></operator> <literal type="number" pos:line="9" pos:column="35">0<pos:position pos:line="9" pos:column="36"/></literal></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">p<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">mcast<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">.<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">avg_n_members<pos:position pos:line="10" pos:column="31"/></name></name> <operator pos:line="10" pos:column="32">=<pos:position pos:line="10" pos:column="33"/></operator> <call><name><name pos:line="10" pos:column="34">Math<pos:position pos:line="10" pos:column="38"/></name><operator pos:line="10" pos:column="38">::<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="40">doubleAverage<pos:position pos:line="10" pos:column="53"/></name></name><argument_list pos:line="10" pos:column="53">(<argument><expr><name><name pos:line="10" pos:column="54">p<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">-&gt;<pos:position pos:line="10" pos:column="60"/></operator><name pos:line="10" pos:column="57">mcast<pos:position pos:line="10" pos:column="62"/></name><operator pos:line="10" pos:column="62">.<pos:position pos:line="10" pos:column="63"/></operator><name pos:line="10" pos:column="63">avg_n_members<pos:position pos:line="10" pos:column="76"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="78">(<pos:position pos:line="10" pos:column="79"/></operator><name pos:line="10" pos:column="79">double<pos:position pos:line="10" pos:column="85"/></name><operator pos:line="10" pos:column="85">)<pos:position pos:line="10" pos:column="86"/></operator> <name><name pos:line="10" pos:column="87">psstate<pos:position pos:line="10" pos:column="94"/></name><operator pos:line="10" pos:column="94">-&gt;<pos:position pos:line="10" pos:column="99"/></operator><name pos:line="10" pos:column="96">ping<pos:position pos:line="10" pos:column="100"/></name><operator pos:line="10" pos:column="100">.<pos:position pos:line="10" pos:column="101"/></operator><name pos:line="10" pos:column="101">n_recv<pos:position pos:line="10" pos:column="107"/></name></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="109">++<pos:position pos:line="10" pos:column="111"/></operator><name><name pos:line="10" pos:column="111">p<pos:position pos:line="10" pos:column="112"/></name><operator pos:line="10" pos:column="112">-&gt;<pos:position pos:line="10" pos:column="117"/></operator><name pos:line="10" pos:column="114">mcast<pos:position pos:line="10" pos:column="119"/></name><operator pos:line="10" pos:column="119">.<pos:position pos:line="10" pos:column="120"/></operator><name pos:line="10" pos:column="120">n_times_counted<pos:position pos:line="10" pos:column="135"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="137">10<pos:position pos:line="10" pos:column="139"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="140"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="141"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">15<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">1<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"Group "<pos:position pos:line="11" pos:column="31"/></literal> <operator pos:line="11" pos:column="32">&lt;&lt;<pos:position pos:line="11" pos:column="40"/></operator> <name><name pos:line="11" pos:column="35">p<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">-&gt;<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="38">host<pos:position pos:line="11" pos:column="42"/></name></name>  <operator pos:line="11" pos:column="44">&lt;&lt;<pos:position pos:line="11" pos:column="52"/></operator> <literal type="string" pos:line="11" pos:column="47">": "<pos:position pos:line="11" pos:column="51"/></literal> <operator pos:line="11" pos:column="52">&lt;&lt;<pos:position pos:line="11" pos:column="60"/></operator> <name><name pos:line="11" pos:column="55">psstate<pos:position pos:line="11" pos:column="62"/></name><operator pos:line="11" pos:column="62">-&gt;<pos:position pos:line="11" pos:column="67"/></operator><name pos:line="11" pos:column="64">ping<pos:position pos:line="11" pos:column="68"/></name><operator pos:line="11" pos:column="68">.<pos:position pos:line="11" pos:column="69"/></operator><name pos:line="11" pos:column="69">n_recv<pos:position pos:line="11" pos:column="75"/></name></name>  <operator pos:line="11" pos:column="77">&lt;&lt;<pos:position pos:line="11" pos:column="85"/></operator>
               <literal type="string" pos:line="12" pos:column="16">" replies, "<pos:position pos:line="12" pos:column="28"/></literal><operator pos:line="12" pos:column="28">&lt;&lt;<pos:position pos:line="12" pos:column="36"/></operator> <call><name><name pos:line="12" pos:column="31">std<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">::<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">setw<pos:position pos:line="12" pos:column="40"/></name></name><argument_list pos:line="12" pos:column="40">(<argument><expr><literal type="number" pos:line="12" pos:column="41">4<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call><operator pos:line="12" pos:column="43">&lt;&lt;<pos:position pos:line="12" pos:column="51"/></operator> <call><name><name pos:line="12" pos:column="46">std<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">::<pos:position pos:line="12" pos:column="51"/></operator><name pos:line="12" pos:column="51">setprecision<pos:position pos:line="12" pos:column="63"/></name></name><argument_list pos:line="12" pos:column="63">(<argument><expr><literal type="number" pos:line="12" pos:column="64">2<pos:position pos:line="12" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call> <operator pos:line="12" pos:column="67">&lt;&lt;<pos:position pos:line="12" pos:column="75"/></operator>
               <name><name pos:line="13" pos:column="16">p<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">-&gt;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="19">mcast<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">.<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">avg_n_members<pos:position pos:line="13" pos:column="38"/></name></name> <operator pos:line="13" pos:column="39">&lt;&lt;<pos:position pos:line="13" pos:column="47"/></operator><literal type="string" pos:line="13" pos:column="41">" average, RTT "<pos:position pos:line="13" pos:column="57"/></literal> <operator pos:line="13" pos:column="58">&lt;&lt;<pos:position pos:line="13" pos:column="66"/></operator> <name><name pos:line="13" pos:column="61">p<pos:position pos:line="13" pos:column="62"/></name><operator pos:line="13" pos:column="62">-&gt;<pos:position pos:line="13" pos:column="67"/></operator><name pos:line="13" pos:column="64">stats<pos:position pos:line="13" pos:column="69"/></name><operator pos:line="13" pos:column="69">.<pos:position pos:line="13" pos:column="70"/></operator><name pos:line="13" pos:column="70">rtt<pos:position pos:line="13" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">p<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">mcast<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">n_replies_expected<pos:position pos:line="14" pos:column="36"/></name></name> <operator pos:line="14" pos:column="37">=<pos:position pos:line="14" pos:column="38"/></operator> <operator pos:line="14" pos:column="39">(<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">int<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">)<pos:position pos:line="14" pos:column="44"/></operator> <name><name pos:line="14" pos:column="45">p<pos:position pos:line="14" pos:column="46"/></name><operator pos:line="14" pos:column="46">-&gt;<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="48">mcast<pos:position pos:line="14" pos:column="53"/></name><operator pos:line="14" pos:column="53">.<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="54">avg_n_members<pos:position pos:line="14" pos:column="67"/></name></name></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">cbdataReferenceDone<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name><name pos:line="17" pos:column="25">psstate<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">callback_data<pos:position pos:line="17" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="49"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">EBIT_SET<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><name><name pos:line="19" pos:column="14">fake<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">-&gt;<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="20">flags<pos:position pos:line="19" pos:column="25"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="27">ENTRY_ABORTED<pos:position pos:line="19" pos:column="40"/></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">HTTPMSGUNLOCK<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name><name pos:line="20" pos:column="19">fake<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">-&gt;<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="25">mem_obj<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">request<pos:position pos:line="20" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">fake<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">-&gt;<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="11">releaseRequest<pos:position pos:line="21" pos:column="25"/></name></name><argument_list pos:line="21" pos:column="25">()<pos:position pos:line="21" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">fake<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">-&gt;<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="11">unlock<pos:position pos:line="22" pos:column="17"/></name></name><argument_list pos:line="22" pos:column="17">()<pos:position pos:line="22" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">HTTPMSGUNLOCK<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><name><name pos:line="23" pos:column="19">psstate<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">-&gt;<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="28">request<pos:position pos:line="23" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">cbdataFree<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><name pos:line="24" pos:column="16">psstate<pos:position pos:line="24" pos:column="23"/></name></expr></argument>)<pos:position pos:line="24" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

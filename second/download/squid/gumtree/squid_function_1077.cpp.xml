<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1077.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemStore<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">stat<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">StoreEntry<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">&amp;<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="28">e<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list> <specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">storeAppendPrintf<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><operator pos:line="4" pos:column="23">&amp;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="24">e<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="27">"\n\nShared Memory Cache\n"<pos:position pos:line="4" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">storeAppendPrintf<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><operator pos:line="6" pos:column="23">&amp;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="24">e<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="27">"Maximum Size: %.0f KB\n"<pos:position pos:line="6" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="54">maxSize<pos:position pos:line="6" pos:column="61"/></name><argument_list pos:line="6" pos:column="61">()<pos:position pos:line="6" pos:column="63"/></argument_list></call><operator pos:line="6" pos:column="63">/<pos:position pos:line="6" pos:column="64"/></operator><literal type="number" pos:line="6" pos:column="64">1024.0<pos:position pos:line="6" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="72"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">storeAppendPrintf<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">(<argument><expr><operator pos:line="7" pos:column="23">&amp;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="24">e<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="27">"Current Size: %.2f KB %.2f%%\n"<pos:position pos:line="7" pos:column="59"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="8" pos:column="23">currentSize<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">()<pos:position pos:line="8" pos:column="36"/></argument_list></call> <operator pos:line="8" pos:column="37">/<pos:position pos:line="8" pos:column="38"/></operator> <literal type="number" pos:line="8" pos:column="39">1024.0<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>,
                      <argument><expr><call><name><name pos:line="9" pos:column="23">Math<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">::<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">doublePercent<pos:position pos:line="9" pos:column="42"/></name></name><argument_list pos:line="9" pos:column="42">(<argument><expr><call><name pos:line="9" pos:column="43">currentSize<pos:position pos:line="9" pos:column="54"/></name><argument_list pos:line="9" pos:column="54">()<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="58">maxSize<pos:position pos:line="9" pos:column="65"/></name><argument_list pos:line="9" pos:column="65">()<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="70"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">map<pos:position pos:line="11" pos:column="12"/></name></expr>)<pos:position pos:line="11" pos:column="13"/></condition><then pos:line="11" pos:column="13"> <block pos:line="11" pos:column="14">{
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">int<pos:position pos:line="12" pos:column="18"/></name></type> <name pos:line="12" pos:column="19">entryLimit<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><call><name><name pos:line="12" pos:column="32">map<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">entryLimit<pos:position pos:line="12" pos:column="47"/></name></name><argument_list pos:line="12" pos:column="47">()<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="50"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name pos:line="13" pos:column="15">int<pos:position pos:line="13" pos:column="18"/></name></type> <name pos:line="13" pos:column="19">slotLimit<pos:position pos:line="13" pos:column="28"/></name> <init pos:line="13" pos:column="29">= <expr><call><name><name pos:line="13" pos:column="31">map<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">-&gt;<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="36">sliceLimit<pos:position pos:line="13" pos:column="46"/></name></name><argument_list pos:line="13" pos:column="46">()<pos:position pos:line="13" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="49"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">storeAppendPrintf<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><operator pos:line="14" pos:column="27">&amp;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="28">e<pos:position pos:line="14" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="31">"Maximum entries: %9d\n"<pos:position pos:line="14" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="57">entryLimit<pos:position pos:line="14" pos:column="67"/></name></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="69"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name pos:line="15" pos:column="13">entryLimit<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&gt;<pos:position pos:line="15" pos:column="28"/></operator> <literal type="number" pos:line="15" pos:column="26">0<pos:position pos:line="15" pos:column="27"/></literal></expr>)<pos:position pos:line="15" pos:column="28"/></condition><then pos:line="15" pos:column="28"> <block pos:line="15" pos:column="29">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">storeAppendPrintf<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><operator pos:line="16" pos:column="31">&amp;<pos:position pos:line="16" pos:column="36"/></operator><name pos:line="16" pos:column="32">e<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="35">"Current entries: %"<pos:position pos:line="16" pos:column="55"/></literal> <name pos:line="16" pos:column="56">PRId64<pos:position pos:line="16" pos:column="62"/></name> <literal type="string" pos:line="16" pos:column="63">" %.2f%%\n"<pos:position pos:line="16" pos:column="74"/></literal></expr></argument>,
                              <argument><expr><call><name pos:line="17" pos:column="31">currentCount<pos:position pos:line="17" pos:column="43"/></name><argument_list pos:line="17" pos:column="43">()<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="17" pos:column="47">(<pos:position pos:line="17" pos:column="48"/></operator><literal type="number" pos:line="17" pos:column="48">100.0<pos:position pos:line="17" pos:column="53"/></literal> <operator pos:line="17" pos:column="54">*<pos:position pos:line="17" pos:column="55"/></operator> <call><name pos:line="17" pos:column="56">currentCount<pos:position pos:line="17" pos:column="68"/></name><argument_list pos:line="17" pos:column="68">()<pos:position pos:line="17" pos:column="70"/></argument_list></call> <operator pos:line="17" pos:column="71">/<pos:position pos:line="17" pos:column="72"/></operator> <name pos:line="17" pos:column="73">entryLimit<pos:position pos:line="17" pos:column="83"/></name><operator pos:line="17" pos:column="83">)<pos:position pos:line="17" pos:column="84"/></operator></expr></argument>)<pos:position pos:line="17" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="86"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="20" pos:column="9">storeAppendPrintf<pos:position pos:line="20" pos:column="26"/></name><argument_list pos:line="20" pos:column="26">(<argument><expr><operator pos:line="20" pos:column="27">&amp;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="28">e<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="31">"Maximum slots:   %9d\n"<pos:position pos:line="20" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="57">slotLimit<pos:position pos:line="20" pos:column="66"/></name></expr></argument>)<pos:position pos:line="20" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="68"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">slotLimit<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">&gt;<pos:position pos:line="21" pos:column="27"/></operator> <literal type="number" pos:line="21" pos:column="25">0<pos:position pos:line="21" pos:column="26"/></literal></expr>)<pos:position pos:line="21" pos:column="27"/></condition><then pos:line="21" pos:column="27"> <block pos:line="21" pos:column="28">{
            <decl_stmt><decl><type><specifier pos:line="22" pos:column="13">const<pos:position pos:line="22" pos:column="18"/></specifier> <name pos:line="22" pos:column="19">unsigned<pos:position pos:line="22" pos:column="27"/></name> <name pos:line="22" pos:column="28">int<pos:position pos:line="22" pos:column="31"/></name></type> <name pos:line="22" pos:column="32">slotsFree<pos:position pos:line="22" pos:column="41"/></name> <init pos:line="22" pos:column="42">=
                <expr><call><name><name pos:line="23" pos:column="17">Ipc<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">::<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">Mem<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">::<pos:position pos:line="23" pos:column="27"/></operator><name pos:line="23" pos:column="27">PagesAvailable<pos:position pos:line="23" pos:column="41"/></name></name><argument_list pos:line="23" pos:column="41">(<argument><expr><name><name pos:line="23" pos:column="42">Ipc<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">::<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="47">Mem<pos:position pos:line="23" pos:column="50"/></name><operator pos:line="23" pos:column="50">::<pos:position pos:line="23" pos:column="52"/></operator><name pos:line="23" pos:column="52">PageId<pos:position pos:line="23" pos:column="58"/></name><operator pos:line="23" pos:column="58">::<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="60">cachePage<pos:position pos:line="23" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="71"/></decl_stmt>
            <if pos:line="24" pos:column="13">if <condition pos:line="24" pos:column="16">(<expr><name pos:line="24" pos:column="17">slotsFree<pos:position pos:line="24" pos:column="26"/></name> <operator pos:line="24" pos:column="27">&lt;=<pos:position pos:line="24" pos:column="32"/></operator> <cast type="static" pos:line="24" pos:column="30">static_cast<argument_list type="generic" pos:line="24" pos:column="41">&lt;<argument><expr><specifier pos:line="24" pos:column="42">const<pos:position pos:line="24" pos:column="47"/></specifier> <name pos:line="24" pos:column="48">unsigned<pos:position pos:line="24" pos:column="56"/></name> <name pos:line="24" pos:column="57">int<pos:position pos:line="24" pos:column="60"/></name></expr></argument>&gt;<pos:position pos:line="24" pos:column="64"/></argument_list><argument_list pos:line="24" pos:column="61">(<argument><expr><name pos:line="24" pos:column="62">slotLimit<pos:position pos:line="24" pos:column="71"/></name></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></cast></expr>)<pos:position pos:line="24" pos:column="73"/></condition><then pos:line="24" pos:column="73"> <block pos:line="24" pos:column="74">{
                <decl_stmt><decl><type><specifier pos:line="25" pos:column="17">const<pos:position pos:line="25" pos:column="22"/></specifier> <name pos:line="25" pos:column="23">int<pos:position pos:line="25" pos:column="26"/></name></type> <name pos:line="25" pos:column="27">usedSlots<pos:position pos:line="25" pos:column="36"/></name> <init pos:line="25" pos:column="37">= <expr><name pos:line="25" pos:column="39">slotLimit<pos:position pos:line="25" pos:column="48"/></name> <operator pos:line="25" pos:column="49">-<pos:position pos:line="25" pos:column="50"/></operator> <cast type="static" pos:line="25" pos:column="51">static_cast<argument_list type="generic" pos:line="25" pos:column="62">&lt;<argument><expr><specifier pos:line="25" pos:column="63">const<pos:position pos:line="25" pos:column="68"/></specifier> <name pos:line="25" pos:column="69">int<pos:position pos:line="25" pos:column="72"/></name></expr></argument>&gt;<pos:position pos:line="25" pos:column="76"/></argument_list><argument_list pos:line="25" pos:column="73">(<argument><expr><name pos:line="25" pos:column="74">slotsFree<pos:position pos:line="25" pos:column="83"/></name></expr></argument>)<pos:position pos:line="25" pos:column="84"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="25" pos:column="85"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="26" pos:column="17">storeAppendPrintf<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><operator pos:line="26" pos:column="35">&amp;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="36">e<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="39">"Used slots:      %9d %.2f%%\n"<pos:position pos:line="26" pos:column="70"/></literal></expr></argument>,
                                  <argument><expr><name pos:line="27" pos:column="35">usedSlots<pos:position pos:line="27" pos:column="44"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="46">(<pos:position pos:line="27" pos:column="47"/></operator><literal type="number" pos:line="27" pos:column="47">100.0<pos:position pos:line="27" pos:column="52"/></literal> <operator pos:line="27" pos:column="53">*<pos:position pos:line="27" pos:column="54"/></operator> <name pos:line="27" pos:column="55">usedSlots<pos:position pos:line="27" pos:column="64"/></name> <operator pos:line="27" pos:column="65">/<pos:position pos:line="27" pos:column="66"/></operator> <name pos:line="27" pos:column="67">slotLimit<pos:position pos:line="27" pos:column="76"/></name><operator pos:line="27" pos:column="76">)<pos:position pos:line="27" pos:column="77"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="79"/></expr_stmt>
            }<pos:position pos:line="28" pos:column="14"/></block></then></if>

            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><name pos:line="30" pos:column="17">slotLimit<pos:position pos:line="30" pos:column="26"/></name> <operator pos:line="30" pos:column="27">&lt;<pos:position pos:line="30" pos:column="31"/></operator> <literal type="number" pos:line="30" pos:column="29">100<pos:position pos:line="30" pos:column="32"/></literal></expr>)<pos:position pos:line="30" pos:column="33"/></condition><then pos:line="30" pos:column="33"> <block pos:line="30" pos:column="34">{ <comment type="line" pos:line="30" pos:column="36">// XXX: otherwise too expensive to count</comment>
                <decl_stmt><decl><type><name><name pos:line="31" pos:column="17">Ipc<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">::<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">ReadWriteLockStats<pos:position pos:line="31" pos:column="40"/></name></name></type> <name pos:line="31" pos:column="41">stats<pos:position pos:line="31" pos:column="46"/></name></decl>;<pos:position pos:line="31" pos:column="47"/></decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="32" pos:column="17">map<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">updateStats<pos:position pos:line="32" pos:column="33"/></name></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name pos:line="32" pos:column="34">stats<pos:position pos:line="32" pos:column="39"/></name></expr></argument>)<pos:position pos:line="32" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="33" pos:column="17">stats<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">.<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">dump<pos:position pos:line="33" pos:column="27"/></name></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name pos:line="33" pos:column="28">e<pos:position pos:line="33" pos:column="29"/></name></expr></argument>)<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

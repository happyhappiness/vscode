<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1141.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_wccp2_service_ports<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">options<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">int<pos:position pos:line="2" pos:column="45"/></name></type> <name><name pos:line="2" pos:column="46">portlist<pos:position pos:line="2" pos:column="54"/></name><index pos:line="2" pos:column="54">[]<pos:position pos:line="2" pos:column="56"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">options<pos:position pos:line="4" pos:column="17"/></name></expr>)<pos:position pos:line="4" pos:column="18"/></condition><then pos:line="4" pos:column="18"> <block pos:line="4" pos:column="19">{
        <return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return>
    }<pos:position pos:line="6" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name> <init pos:line="8" pos:column="11">= <expr><literal type="number" pos:line="8" pos:column="13">0<pos:position pos:line="8" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">tmp<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><name pos:line="9" pos:column="17">options<pos:position pos:line="9" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="10" pos:column="5">static<pos:position pos:line="10" pos:column="11"/></specifier> <type><name pos:line="10" pos:column="12">char<pos:position pos:line="10" pos:column="16"/></name></type> <name><name pos:line="10" pos:column="17">copy<pos:position pos:line="10" pos:column="21"/></name><index pos:line="10" pos:column="21">[<expr><literal type="number" pos:line="10" pos:column="22">10<pos:position pos:line="10" pos:column="24"/></literal></expr>]<pos:position pos:line="10" pos:column="25"/></index></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>

    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<decl><type><name pos:line="12" pos:column="12">size_t<pos:position pos:line="12" pos:column="18"/></name></type> <name pos:line="12" pos:column="19">len<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><call><name pos:line="12" pos:column="25">strcspn<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">tmp<pos:position pos:line="12" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="38">","<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr></init></decl>)<pos:position pos:line="12" pos:column="43"/></condition> <block pos:line="12" pos:column="44">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">i<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">&gt;=<pos:position pos:line="13" pos:column="20"/></operator> <name pos:line="13" pos:column="18">WCCP2_NUMPORTS<pos:position pos:line="13" pos:column="32"/></name></expr>)<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33"> <block pos:line="13" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">fatalf<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><literal type="string" pos:line="14" pos:column="20">"parse_wccp2_service_ports: too many ports (maximum: 8) in list '%s'\n"<pos:position pos:line="14" pos:column="91"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="93">options<pos:position pos:line="14" pos:column="100"/></name></expr></argument>)<pos:position pos:line="14" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="102"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name pos:line="16" pos:column="13">len<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">&gt;<pos:position pos:line="16" pos:column="21"/></operator> <literal type="number" pos:line="16" pos:column="19">6<pos:position pos:line="16" pos:column="20"/></literal></expr>)<pos:position pos:line="16" pos:column="21"/></condition><then pos:line="16" pos:column="21"> <block pos:line="16" pos:column="22">{ <comment type="line" pos:line="16" pos:column="24">// 6 because "65535,"</comment>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">fatalf<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><literal type="string" pos:line="17" pos:column="20">"parse_wccp2_service_ports: port value '%s' isn't valid (1..65535)\n"<pos:position pos:line="17" pos:column="89"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="91">tmp<pos:position pos:line="17" pos:column="94"/></name></expr></argument>)<pos:position pos:line="17" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="96"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="20" pos:column="9">memcpy<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">copy<pos:position pos:line="20" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="22">tmp<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="27">len<pos:position pos:line="20" pos:column="30"/></name></expr></argument>)<pos:position pos:line="20" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">copy<pos:position pos:line="21" pos:column="13"/></name><index pos:line="21" pos:column="13">[<expr><name pos:line="21" pos:column="14">len<pos:position pos:line="21" pos:column="17"/></name></expr>]<pos:position pos:line="21" pos:column="18"/></index></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <literal type="char" pos:line="21" pos:column="21">'\0'<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">int<pos:position pos:line="22" pos:column="12"/></name></type> <name pos:line="22" pos:column="13">p<pos:position pos:line="22" pos:column="14"/></name> <init pos:line="22" pos:column="15">= <expr><call><name pos:line="22" pos:column="17">xatoi<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">copy<pos:position pos:line="22" pos:column="27"/></name></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="29"/></decl_stmt>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">p<pos:position pos:line="24" pos:column="14"/></name> <argument_list type="generic" pos:line="24" pos:column="15">&lt; <argument><expr><literal type="number" pos:line="24" pos:column="17">1<pos:position pos:line="24" pos:column="18"/></literal> <operator pos:line="24" pos:column="19">||<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">p<pos:position pos:line="24" pos:column="23"/></name></expr></argument> &gt;<pos:position pos:line="24" pos:column="28"/></argument_list></name> <literal type="number" pos:line="24" pos:column="26">65535<pos:position pos:line="24" pos:column="31"/></literal></expr>)<pos:position pos:line="24" pos:column="32"/></condition><then pos:line="24" pos:column="32"> <block pos:line="24" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">fatalf<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="string" pos:line="25" pos:column="20">"parse_wccp2_service_ports: port value '%s' isn't valid (1..65535)\n"<pos:position pos:line="25" pos:column="89"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="91">tmp<pos:position pos:line="25" pos:column="94"/></name></expr></argument>)<pos:position pos:line="25" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="96"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="28" pos:column="9">portlist<pos:position pos:line="28" pos:column="17"/></name><index pos:line="28" pos:column="17">[<expr><name pos:line="28" pos:column="18">i<pos:position pos:line="28" pos:column="19"/></name></expr>]<pos:position pos:line="28" pos:column="20"/></index></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">p<pos:position pos:line="28" pos:column="24"/></name></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="29" pos:column="9">++<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">i<pos:position pos:line="29" pos:column="12"/></name></expr>;<pos:position pos:line="29" pos:column="13"/></expr_stmt>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">tmp<pos:position pos:line="30" pos:column="16"/></name><index pos:line="30" pos:column="16">[<expr><name pos:line="30" pos:column="17">len<pos:position pos:line="30" pos:column="20"/></name></expr>]<pos:position pos:line="30" pos:column="21"/></index></name> <operator pos:line="30" pos:column="22">==<pos:position pos:line="30" pos:column="24"/></operator> <literal type="char" pos:line="30" pos:column="25">'\0'<pos:position pos:line="30" pos:column="29"/></literal></expr>)<pos:position pos:line="30" pos:column="30"/></condition><then pos:line="30" pos:column="30">
            <block type="pseudo"><return pos:line="31" pos:column="13">return;<pos:position pos:line="31" pos:column="20"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="32" pos:column="9">tmp<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">+=<pos:position pos:line="32" pos:column="15"/></operator> <name pos:line="32" pos:column="16">len<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">+<pos:position pos:line="32" pos:column="20"/></operator><literal type="number" pos:line="32" pos:column="20">1<pos:position pos:line="32" pos:column="21"/></literal></expr>;<pos:position pos:line="32" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></while>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3988_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Xaction<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">handleCommTimedout<pos:position pos:line="1" pos:column="51"/></name></name><parameter_list pos:line="1" pos:column="51">()<pos:position pos:line="1" pos:column="53"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">93<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="16">2<pos:position pos:line="3" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="19">HERE<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">&lt;&lt;<pos:position pos:line="3" pos:column="32"/></operator> <name pos:line="3" pos:column="27">typeName<pos:position pos:line="3" pos:column="35"/></name> <operator pos:line="3" pos:column="36">&lt;&lt;<pos:position pos:line="3" pos:column="44"/></operator> <literal type="string" pos:line="3" pos:column="39">" failed: timeout with "<pos:position pos:line="3" pos:column="63"/></literal> <operator pos:line="3" pos:column="64">&lt;&lt;<pos:position pos:line="3" pos:column="72"/></operator>
           <call><name><name pos:line="4" pos:column="12">theService<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">cfg<pos:position pos:line="4" pos:column="27"/></name></name><argument_list pos:line="4" pos:column="27">()<pos:position pos:line="4" pos:column="29"/></argument_list></call><operator pos:line="4" pos:column="29">.<pos:position pos:line="4" pos:column="30"/></operator><call><name pos:line="4" pos:column="30">methodStr<pos:position pos:line="4" pos:column="39"/></name><argument_list pos:line="4" pos:column="39">()<pos:position pos:line="4" pos:column="41"/></argument_list></call> <operator pos:line="4" pos:column="42">&lt;&lt;<pos:position pos:line="4" pos:column="50"/></operator> <literal type="string" pos:line="4" pos:column="45">" "<pos:position pos:line="4" pos:column="48"/></literal> <operator pos:line="4" pos:column="49">&lt;&lt;<pos:position pos:line="4" pos:column="57"/></operator>
           <call><name><name pos:line="5" pos:column="12">theService<pos:position pos:line="5" pos:column="22"/></name><operator pos:line="5" pos:column="22">-&gt;<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="24">cfg<pos:position pos:line="5" pos:column="27"/></name></name><argument_list pos:line="5" pos:column="27">()<pos:position pos:line="5" pos:column="29"/></argument_list></call><operator pos:line="5" pos:column="29">.<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">uri<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">&lt;&lt;<pos:position pos:line="5" pos:column="42"/></operator> <call><name pos:line="5" pos:column="37">status<pos:position pos:line="5" pos:column="43"/></name><argument_list pos:line="5" pos:column="43">()<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">reuseConnection<pos:position pos:line="6" pos:column="20"/></name> <operator pos:line="6" pos:column="21">=<pos:position pos:line="6" pos:column="22"/></operator> <literal type="boolean" pos:line="6" pos:column="23">false<pos:position pos:line="6" pos:column="28"/></literal></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">bool<pos:position pos:line="8" pos:column="15"/></name></type> <name pos:line="8" pos:column="16">whileConnecting<pos:position pos:line="8" pos:column="31"/></name> <init pos:line="8" pos:column="32">= <expr><name pos:line="8" pos:column="34">connector<pos:position pos:line="8" pos:column="43"/></name> <operator pos:line="8" pos:column="44">!=<pos:position pos:line="8" pos:column="46"/></operator> <name pos:line="8" pos:column="47">NULL<pos:position pos:line="8" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="52"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">closeConnection<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">()<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt> <comment type="line" pos:line="9" pos:column="24">// so that late Comm callbacks do not disturb bypass</comment>
    <throw pos:line="10" pos:column="5">throw <expr><call><name pos:line="10" pos:column="11">TexcHere<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><ternary><condition><expr><name pos:line="10" pos:column="20">whileConnecting<pos:position pos:line="10" pos:column="35"/></name></expr> ?<pos:position pos:line="10" pos:column="37"/></condition><then pos:line="10" pos:column="37">
                   <expr><literal type="string" pos:line="11" pos:column="20">"timed out while connecting to the ICAP service"<pos:position pos:line="11" pos:column="68"/></literal></expr> <pos:position pos:line="11" pos:column="69"/></then><else pos:line="11" pos:column="69">:
                   <expr><literal type="string" pos:line="12" pos:column="20">"timed out while talking to the ICAP service"<pos:position pos:line="12" pos:column="65"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="67"/></throw>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2454_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">connectStart<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">()<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><call><name><name pos:line="4" pos:column="12">serverDestinations<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">.<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">size<pos:position pos:line="4" pos:column="35"/></name></name><argument_list pos:line="4" pos:column="35">()<pos:position pos:line="4" pos:column="37"/></argument_list></call> <operator pos:line="4" pos:column="38">&gt;<pos:position pos:line="4" pos:column="42"/></operator> <literal type="number" pos:line="4" pos:column="40">0<pos:position pos:line="4" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">17<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">3<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"fwdConnectStart: "<pos:position pos:line="6" pos:column="38"/></literal> <operator pos:line="6" pos:column="39">&lt;&lt;<pos:position pos:line="6" pos:column="47"/></operator> <call><name><name pos:line="6" pos:column="42">entry<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">-&gt;<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="49">url<pos:position pos:line="6" pos:column="52"/></name></name><argument_list pos:line="6" pos:column="52">()<pos:position pos:line="6" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="56"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name><name pos:line="8" pos:column="10">request<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">-&gt;<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="19">hier<pos:position pos:line="8" pos:column="23"/></name><operator pos:line="8" pos:column="23">.<pos:position pos:line="8" pos:column="24"/></operator><name pos:line="8" pos:column="24">first_conn_start<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">.<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">tv_sec<pos:position pos:line="8" pos:column="47"/></name></name></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48"> <comment type="line" pos:line="8" pos:column="49">// first attempt</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="9">request<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">hier<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">.<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">first_conn_start<pos:position pos:line="9" pos:column="39"/></name></name> <operator pos:line="9" pos:column="40">=<pos:position pos:line="9" pos:column="41"/></operator> <name pos:line="9" pos:column="42">current_time<pos:position pos:line="9" pos:column="54"/></name></expr>;<pos:position pos:line="9" pos:column="55"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="11" pos:column="5">/* connection timeout */</comment>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">ctimeout<pos:position pos:line="12" pos:column="17"/></name></decl>;<pos:position pos:line="12" pos:column="18"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">serverDestinations<pos:position pos:line="13" pos:column="27"/></name><index pos:line="13" pos:column="27">[<expr><literal type="number" pos:line="13" pos:column="28">0<pos:position pos:line="13" pos:column="29"/></literal></expr>]<pos:position pos:line="13" pos:column="30"/></index></name><operator pos:line="13" pos:column="30">-&gt;<pos:position pos:line="13" pos:column="35"/></operator><call><name pos:line="13" pos:column="32">getPeer<pos:position pos:line="13" pos:column="39"/></name><argument_list pos:line="13" pos:column="39">()<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="42"/></condition><then pos:line="13" pos:column="42"> <block pos:line="13" pos:column="43">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">ctimeout<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <ternary><condition><expr><name><name pos:line="14" pos:column="20">serverDestinations<pos:position pos:line="14" pos:column="38"/></name><index pos:line="14" pos:column="38">[<expr><literal type="number" pos:line="14" pos:column="39">0<pos:position pos:line="14" pos:column="40"/></literal></expr>]<pos:position pos:line="14" pos:column="41"/></index></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><call><name pos:line="14" pos:column="43">getPeer<pos:position pos:line="14" pos:column="50"/></name><argument_list pos:line="14" pos:column="50">()<pos:position pos:line="14" pos:column="52"/></argument_list></call><operator pos:line="14" pos:column="52">-&gt;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="54">connect_timeout<pos:position pos:line="14" pos:column="69"/></name> <operator pos:line="14" pos:column="70">&gt;<pos:position pos:line="14" pos:column="74"/></operator> <literal type="number" pos:line="14" pos:column="72">0<pos:position pos:line="14" pos:column="73"/></literal></expr> ?<pos:position pos:line="14" pos:column="75"/></condition><then pos:line="14" pos:column="75">
                   <expr><name><name pos:line="15" pos:column="20">serverDestinations<pos:position pos:line="15" pos:column="38"/></name><index pos:line="15" pos:column="38">[<expr><literal type="number" pos:line="15" pos:column="39">0<pos:position pos:line="15" pos:column="40"/></literal></expr>]<pos:position pos:line="15" pos:column="41"/></index></name><operator pos:line="15" pos:column="41">-&gt;<pos:position pos:line="15" pos:column="46"/></operator><call><name pos:line="15" pos:column="43">getPeer<pos:position pos:line="15" pos:column="50"/></name><argument_list pos:line="15" pos:column="50">()<pos:position pos:line="15" pos:column="52"/></argument_list></call><operator pos:line="15" pos:column="52">-&gt;<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="54">connect_timeout<pos:position pos:line="15" pos:column="69"/></name></expr> <pos:position pos:line="15" pos:column="70"/></then><else pos:line="15" pos:column="70">: <expr><name><name pos:line="15" pos:column="72">Config<pos:position pos:line="15" pos:column="78"/></name><operator pos:line="15" pos:column="78">.<pos:position pos:line="15" pos:column="79"/></operator><name pos:line="15" pos:column="79">Timeout<pos:position pos:line="15" pos:column="86"/></name><operator pos:line="15" pos:column="86">.<pos:position pos:line="15" pos:column="87"/></operator><name pos:line="15" pos:column="87">peer_connect<pos:position pos:line="15" pos:column="99"/></name></name></expr></else></ternary></expr>;<pos:position pos:line="15" pos:column="100"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then> <else pos:line="16" pos:column="7">else <block pos:line="16" pos:column="12">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">ctimeout<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name><name pos:line="17" pos:column="20">Config<pos:position pos:line="17" pos:column="26"/></name><operator pos:line="17" pos:column="26">.<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">Timeout<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">.<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="35">connect<pos:position pos:line="17" pos:column="42"/></name></name></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="20" pos:column="5">/* calculate total forwarding timeout ??? */</comment>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">int<pos:position pos:line="21" pos:column="8"/></name></type> <name pos:line="21" pos:column="9">ftimeout<pos:position pos:line="21" pos:column="17"/></name> <init pos:line="21" pos:column="18">= <expr><name><name pos:line="21" pos:column="20">Config<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">.<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">Timeout<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">.<pos:position pos:line="21" pos:column="35"/></operator><name pos:line="21" pos:column="35">forward<pos:position pos:line="21" pos:column="42"/></name></name> <operator pos:line="21" pos:column="43">-<pos:position pos:line="21" pos:column="44"/></operator> <operator pos:line="21" pos:column="45">(<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="46">squid_curtime<pos:position pos:line="21" pos:column="59"/></name> <operator pos:line="21" pos:column="60">-<pos:position pos:line="21" pos:column="61"/></operator> <name pos:line="21" pos:column="62">start_t<pos:position pos:line="21" pos:column="69"/></name><operator pos:line="21" pos:column="69">)<pos:position pos:line="21" pos:column="70"/></operator></expr></init></decl>;<pos:position pos:line="21" pos:column="71"/></decl_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">ftimeout<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">&lt;<pos:position pos:line="22" pos:column="22"/></operator> <literal type="number" pos:line="22" pos:column="20">0<pos:position pos:line="22" pos:column="21"/></literal></expr>)<pos:position pos:line="22" pos:column="22"/></condition><then pos:line="22" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="9">ftimeout<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">=<pos:position pos:line="23" pos:column="19"/></operator> <literal type="number" pos:line="23" pos:column="20">5<pos:position pos:line="23" pos:column="21"/></literal></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">ftimeout<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">&lt;<pos:position pos:line="25" pos:column="22"/></operator> <name pos:line="25" pos:column="20">ctimeout<pos:position pos:line="25" pos:column="28"/></name></expr>)<pos:position pos:line="25" pos:column="29"/></condition><then pos:line="25" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><name pos:line="26" pos:column="9">ctimeout<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name pos:line="26" pos:column="20">ftimeout<pos:position pos:line="26" pos:column="28"/></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name><name pos:line="28" pos:column="9">serverDestinations<pos:position pos:line="28" pos:column="27"/></name><index pos:line="28" pos:column="27">[<expr><literal type="number" pos:line="28" pos:column="28">0<pos:position pos:line="28" pos:column="29"/></literal></expr>]<pos:position pos:line="28" pos:column="30"/></index></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><call><name pos:line="28" pos:column="32">getPeer<pos:position pos:line="28" pos:column="39"/></name><argument_list pos:line="28" pos:column="39">()<pos:position pos:line="28" pos:column="41"/></argument_list></call> <operator pos:line="28" pos:column="42">&amp;&amp;<pos:position pos:line="28" pos:column="52"/></operator> <name><name pos:line="28" pos:column="45">request<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">-&gt;<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="54">flags<pos:position pos:line="28" pos:column="59"/></name><operator pos:line="28" pos:column="59">.<pos:position pos:line="28" pos:column="60"/></operator><name pos:line="28" pos:column="60">sslBumped<pos:position pos:line="28" pos:column="69"/></name></name></expr>)<pos:position pos:line="28" pos:column="70"/></condition><then pos:line="28" pos:column="70"> <block pos:line="28" pos:column="71">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">debugs<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="number" pos:line="29" pos:column="16">50<pos:position pos:line="29" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="20">4<pos:position pos:line="29" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="23">"fwdConnectStart: Ssl bumped connections through parrent proxy are not allowed"<pos:position pos:line="29" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="104"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">ErrorState<pos:position pos:line="30" pos:column="19"/></name> <modifier pos:line="30" pos:column="20">*<pos:position pos:line="30" pos:column="21"/></modifier></type><name pos:line="30" pos:column="21">anErr<pos:position pos:line="30" pos:column="26"/></name> <init pos:line="30" pos:column="27">= <expr><operator pos:line="30" pos:column="29">new<pos:position pos:line="30" pos:column="32"/></operator> <call><name pos:line="30" pos:column="33">ErrorState<pos:position pos:line="30" pos:column="43"/></name><argument_list pos:line="30" pos:column="43">(<argument><expr><name pos:line="30" pos:column="44">ERR_CANNOT_FORWARD<pos:position pos:line="30" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="64">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="30" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="90">request<pos:position pos:line="30" pos:column="97"/></name></expr></argument>)<pos:position pos:line="30" pos:column="98"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="99"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">fail<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">anErr<pos:position pos:line="31" pos:column="19"/></name></expr></argument>)<pos:position pos:line="31" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="32" pos:column="9">self<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <name pos:line="32" pos:column="16">NULL<pos:position pos:line="32" pos:column="20"/></name></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt> <comment type="line" pos:line="32" pos:column="22">// refcounted</comment>
        <return pos:line="33" pos:column="9">return;<pos:position pos:line="33" pos:column="16"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="36" pos:column="5">request<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">flags<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">.<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">pinned<pos:position pos:line="36" pos:column="26"/></name></name> <operator pos:line="36" pos:column="27">=<pos:position pos:line="36" pos:column="28"/></operator> <literal type="number" pos:line="36" pos:column="29">0<pos:position pos:line="36" pos:column="30"/></literal></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt> <comment type="line" pos:line="36" pos:column="32">// XXX: what if the ConnStateData set this to flag existing credentials?</comment>
    <comment type="line" pos:line="37" pos:column="5">// XXX: answer: the peer selection *should* catch it and give us only the pinned peer. so we reverse the =0 step below.</comment>
    <comment type="line" pos:line="38" pos:column="5">// XXX: also, logs will now lie if pinning is broken and leads to an error message.</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">serverDestinations<pos:position pos:line="39" pos:column="27"/></name><index pos:line="39" pos:column="27">[<expr><literal type="number" pos:line="39" pos:column="28">0<pos:position pos:line="39" pos:column="29"/></literal></expr>]<pos:position pos:line="39" pos:column="30"/></index></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">peerType<pos:position pos:line="39" pos:column="40"/></name> <operator pos:line="39" pos:column="41">==<pos:position pos:line="39" pos:column="43"/></operator> <name pos:line="39" pos:column="44">PINNED<pos:position pos:line="39" pos:column="50"/></name></expr>)<pos:position pos:line="39" pos:column="51"/></condition><then pos:line="39" pos:column="51"> <block pos:line="39" pos:column="52">{
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">ConnStateData<pos:position pos:line="40" pos:column="22"/></name> <modifier pos:line="40" pos:column="23">*<pos:position pos:line="40" pos:column="24"/></modifier></type><name pos:line="40" pos:column="24">pinned_connection<pos:position pos:line="40" pos:column="41"/></name> <init pos:line="40" pos:column="42">= <expr><call><name><name pos:line="40" pos:column="44">request<pos:position pos:line="40" pos:column="51"/></name><operator pos:line="40" pos:column="51">-&gt;<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="53">pinnedConnection<pos:position pos:line="40" pos:column="69"/></name></name><argument_list pos:line="40" pos:column="69">()<pos:position pos:line="40" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="72"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">debugs<pos:position pos:line="41" pos:column="15"/></name><argument_list pos:line="41" pos:column="15">(<argument><expr><literal type="number" pos:line="41" pos:column="16">17<pos:position pos:line="41" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="41" pos:column="19">7<pos:position pos:line="41" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="22">"pinned peer connection: "<pos:position pos:line="41" pos:column="48"/></literal> <operator pos:line="41" pos:column="49">&lt;&lt;<pos:position pos:line="41" pos:column="57"/></operator> <name pos:line="41" pos:column="52">pinned_connection<pos:position pos:line="41" pos:column="69"/></name></expr></argument>)<pos:position pos:line="41" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="71"/></expr_stmt>
        <comment type="line" pos:line="42" pos:column="9">// pinned_connection may become nil after a pconn race</comment>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">pinned_connection<pos:position pos:line="43" pos:column="30"/></name></expr>)<pos:position pos:line="43" pos:column="31"/></condition><then pos:line="43" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="13">serverConn<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <call><name><name pos:line="44" pos:column="26">pinned_connection<pos:position pos:line="44" pos:column="43"/></name><operator pos:line="44" pos:column="43">-&gt;<pos:position pos:line="44" pos:column="48"/></operator><name pos:line="44" pos:column="45">validatePinnedConnection<pos:position pos:line="44" pos:column="69"/></name></name><argument_list pos:line="44" pos:column="69">(<argument><expr><name pos:line="44" pos:column="70">request<pos:position pos:line="44" pos:column="77"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="79">serverDestinations<pos:position pos:line="44" pos:column="97"/></name><index pos:line="44" pos:column="97">[<expr><literal type="number" pos:line="44" pos:column="98">0<pos:position pos:line="44" pos:column="99"/></literal></expr>]<pos:position pos:line="44" pos:column="100"/></index></name><operator pos:line="44" pos:column="100">-&gt;<pos:position pos:line="44" pos:column="105"/></operator><call><name pos:line="44" pos:column="102">getPeer<pos:position pos:line="44" pos:column="109"/></name><argument_list pos:line="44" pos:column="109">()<pos:position pos:line="44" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="113"/></expr_stmt></block></then>
        <else pos:line="45" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="46" pos:column="13">serverConn<pos:position pos:line="46" pos:column="23"/></name> <operator pos:line="46" pos:column="24">=<pos:position pos:line="46" pos:column="25"/></operator> <name pos:line="46" pos:column="26">NULL<pos:position pos:line="46" pos:column="30"/></name></expr>;<pos:position pos:line="46" pos:column="31"/></expr_stmt></block></else></if>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name><name pos:line="47" pos:column="13">Comm<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">::<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">IsConnOpen<pos:position pos:line="47" pos:column="29"/></name></name><argument_list pos:line="47" pos:column="29">(<argument><expr><name pos:line="47" pos:column="30">serverConn<pos:position pos:line="47" pos:column="40"/></name></expr></argument>)<pos:position pos:line="47" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="42"/></condition><then pos:line="47" pos:column="42"> <block pos:line="47" pos:column="43">{
            <expr_stmt><expr><call><name><name pos:line="48" pos:column="13">pinned_connection<pos:position pos:line="48" pos:column="30"/></name><operator pos:line="48" pos:column="30">-&gt;<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="32">stopPinnedConnectionMonitoring<pos:position pos:line="48" pos:column="62"/></name></name><argument_list pos:line="48" pos:column="62">()<pos:position pos:line="48" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="49" pos:column="13">flags<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">.<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="19">connected_okay<pos:position pos:line="49" pos:column="33"/></name></name> <operator pos:line="49" pos:column="34">=<pos:position pos:line="49" pos:column="35"/></operator> <literal type="boolean" pos:line="49" pos:column="36">true<pos:position pos:line="49" pos:column="40"/></literal></expr>;<pos:position pos:line="49" pos:column="41"/></expr_stmt>
<cpp:if pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">if<pos:position pos:line="50" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="50" pos:column="5">0<pos:position pos:line="50" pos:column="6"/></literal></expr></cpp:if>
            if (!serverConn-&gt;getPeer())
                serverConn-&gt;peerType = HIER_DIRECT;
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>
            <expr_stmt><expr><operator pos:line="54" pos:column="13">++<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="15">n_tries<pos:position pos:line="54" pos:column="22"/></name></expr>;<pos:position pos:line="54" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="55" pos:column="13">request<pos:position pos:line="55" pos:column="20"/></name><operator pos:line="55" pos:column="20">-&gt;<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="22">flags<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">.<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="28">pinned<pos:position pos:line="55" pos:column="34"/></name></name> <operator pos:line="55" pos:column="35">=<pos:position pos:line="55" pos:column="36"/></operator> <literal type="number" pos:line="55" pos:column="37">1<pos:position pos:line="55" pos:column="38"/></literal></expr>;<pos:position pos:line="55" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="56" pos:column="13">request<pos:position pos:line="56" pos:column="20"/></name><operator pos:line="56" pos:column="20">-&gt;<pos:position pos:line="56" pos:column="25"/></operator><name pos:line="56" pos:column="22">hier<pos:position pos:line="56" pos:column="26"/></name><operator pos:line="56" pos:column="26">.<pos:position pos:line="56" pos:column="27"/></operator><name pos:line="56" pos:column="27">note<pos:position pos:line="56" pos:column="31"/></name></name><argument_list pos:line="56" pos:column="31">(<argument><expr><name pos:line="56" pos:column="32">serverConn<pos:position pos:line="56" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="56" pos:column="44">pinned_connection<pos:position pos:line="56" pos:column="61"/></name><operator pos:line="56" pos:column="61">-&gt;<pos:position pos:line="56" pos:column="66"/></operator><name pos:line="56" pos:column="63">pinning<pos:position pos:line="56" pos:column="70"/></name><operator pos:line="56" pos:column="70">.<pos:position pos:line="56" pos:column="71"/></operator><name pos:line="56" pos:column="71">host<pos:position pos:line="56" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="56" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="77"/></expr_stmt>
            <if pos:line="57" pos:column="13">if <condition pos:line="57" pos:column="16">(<expr><call><name><name pos:line="57" pos:column="17">pinned_connection<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">-&gt;<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="36">pinnedAuth<pos:position pos:line="57" pos:column="46"/></name></name><argument_list pos:line="57" pos:column="46">()<pos:position pos:line="57" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="57" pos:column="49"/></condition><then pos:line="57" pos:column="49">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="58" pos:column="17">request<pos:position pos:line="58" pos:column="24"/></name><operator pos:line="58" pos:column="24">-&gt;<pos:position pos:line="58" pos:column="29"/></operator><name pos:line="58" pos:column="26">flags<pos:position pos:line="58" pos:column="31"/></name><operator pos:line="58" pos:column="31">.<pos:position pos:line="58" pos:column="32"/></operator><name pos:line="58" pos:column="32">auth<pos:position pos:line="58" pos:column="36"/></name></name> <operator pos:line="58" pos:column="37">=<pos:position pos:line="58" pos:column="38"/></operator> <literal type="number" pos:line="58" pos:column="39">1<pos:position pos:line="58" pos:column="40"/></literal></expr>;<pos:position pos:line="58" pos:column="41"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="59" pos:column="13">comm_add_close_handler<pos:position pos:line="59" pos:column="35"/></name><argument_list pos:line="59" pos:column="35">(<argument><expr><name><name pos:line="59" pos:column="36">serverConn<pos:position pos:line="59" pos:column="46"/></name><operator pos:line="59" pos:column="46">-&gt;<pos:position pos:line="59" pos:column="51"/></operator><name pos:line="59" pos:column="48">fd<pos:position pos:line="59" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="52">fwdServerClosedWrapper<pos:position pos:line="59" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="76">this<pos:position pos:line="59" pos:column="80"/></name></expr></argument>)<pos:position pos:line="59" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="82"/></expr_stmt>
            <comment type="line" pos:line="60" pos:column="13">// the server may close the pinned connection before this request</comment>
            <expr_stmt><expr><name pos:line="61" pos:column="13">pconnRace<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">=<pos:position pos:line="61" pos:column="24"/></operator> <name pos:line="61" pos:column="25">racePossible<pos:position pos:line="61" pos:column="37"/></name></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">dispatch<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">()<pos:position pos:line="62" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="24"/></expr_stmt>
            <return pos:line="63" pos:column="13">return;<pos:position pos:line="63" pos:column="20"/></return>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>
        <comment type="line" pos:line="65" pos:column="9">// Pinned connection failure.</comment>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">debugs<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><literal type="number" pos:line="66" pos:column="16">17<pos:position pos:line="66" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="66" pos:column="19">2<pos:position pos:line="66" pos:column="20"/></literal></expr></argument>,<argument><expr><name pos:line="66" pos:column="21">HERE<pos:position pos:line="66" pos:column="25"/></name> <operator pos:line="66" pos:column="26">&lt;&lt;<pos:position pos:line="66" pos:column="34"/></operator> <literal type="string" pos:line="66" pos:column="29">"Pinned connection failed: "<pos:position pos:line="66" pos:column="57"/></literal> <operator pos:line="66" pos:column="58">&lt;&lt;<pos:position pos:line="66" pos:column="66"/></operator> <name pos:line="66" pos:column="61">pinned_connection<pos:position pos:line="66" pos:column="78"/></name></expr></argument>)<pos:position pos:line="66" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="80"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="67" pos:column="9">ErrorState<pos:position pos:line="67" pos:column="19"/></name> <modifier pos:line="67" pos:column="20">*<pos:position pos:line="67" pos:column="21"/></modifier></type><name pos:line="67" pos:column="21">anErr<pos:position pos:line="67" pos:column="26"/></name> <init pos:line="67" pos:column="27">= <expr><operator pos:line="67" pos:column="29">new<pos:position pos:line="67" pos:column="32"/></operator> <call><name pos:line="67" pos:column="33">ErrorState<pos:position pos:line="67" pos:column="43"/></name><argument_list pos:line="67" pos:column="43">(<argument><expr><name pos:line="67" pos:column="44">ERR_ZERO_SIZE_OBJECT<pos:position pos:line="67" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="66">HTTP_SERVICE_UNAVAILABLE<pos:position pos:line="67" pos:column="90"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="92">request<pos:position pos:line="67" pos:column="99"/></name></expr></argument>)<pos:position pos:line="67" pos:column="100"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="101"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">fail<pos:position pos:line="68" pos:column="13"/></name><argument_list pos:line="68" pos:column="13">(<argument><expr><name pos:line="68" pos:column="14">anErr<pos:position pos:line="68" pos:column="19"/></name></expr></argument>)<pos:position pos:line="68" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="69" pos:column="9">self<pos:position pos:line="69" pos:column="13"/></name> <operator pos:line="69" pos:column="14">=<pos:position pos:line="69" pos:column="15"/></operator> <name pos:line="69" pos:column="16">NULL<pos:position pos:line="69" pos:column="20"/></name></expr>;<pos:position pos:line="69" pos:column="21"/></expr_stmt> <comment type="line" pos:line="69" pos:column="22">// refcounted</comment>
        <return pos:line="70" pos:column="9">return;<pos:position pos:line="70" pos:column="16"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="73" pos:column="5">// Use pconn to avoid opening a new connection.</comment>
    <decl_stmt><decl><type><specifier pos:line="74" pos:column="5">const<pos:position pos:line="74" pos:column="10"/></specifier> <name pos:line="74" pos:column="11">char<pos:position pos:line="74" pos:column="15"/></name> <modifier pos:line="74" pos:column="16">*<pos:position pos:line="74" pos:column="17"/></modifier></type><name pos:line="74" pos:column="17">host<pos:position pos:line="74" pos:column="21"/></name> <init pos:line="74" pos:column="22">= <expr><name pos:line="74" pos:column="24">NULL<pos:position pos:line="74" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="74" pos:column="29"/></decl_stmt>
    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><operator pos:line="75" pos:column="9">!<pos:position pos:line="75" pos:column="10"/></operator><name><name pos:line="75" pos:column="10">serverDestinations<pos:position pos:line="75" pos:column="28"/></name><index pos:line="75" pos:column="28">[<expr><literal type="number" pos:line="75" pos:column="29">0<pos:position pos:line="75" pos:column="30"/></literal></expr>]<pos:position pos:line="75" pos:column="31"/></index></name><operator pos:line="75" pos:column="31">-&gt;<pos:position pos:line="75" pos:column="36"/></operator><call><name pos:line="75" pos:column="33">getPeer<pos:position pos:line="75" pos:column="40"/></name><argument_list pos:line="75" pos:column="40">()<pos:position pos:line="75" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="75" pos:column="43"/></condition><then pos:line="75" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><name pos:line="76" pos:column="9">host<pos:position pos:line="76" pos:column="13"/></name> <operator pos:line="76" pos:column="14">=<pos:position pos:line="76" pos:column="15"/></operator> <call><name><name pos:line="76" pos:column="16">request<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">-&gt;<pos:position pos:line="76" pos:column="28"/></operator><name pos:line="76" pos:column="25">GetHost<pos:position pos:line="76" pos:column="32"/></name></name><argument_list pos:line="76" pos:column="32">()<pos:position pos:line="76" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="35"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="78" pos:column="5">Comm<pos:position pos:line="78" pos:column="9"/></name><operator pos:line="78" pos:column="9">::<pos:position pos:line="78" pos:column="11"/></operator><name pos:line="78" pos:column="11">ConnectionPointer<pos:position pos:line="78" pos:column="28"/></name></name></type> <name pos:line="78" pos:column="29">temp<pos:position pos:line="78" pos:column="33"/></name></decl>;<pos:position pos:line="78" pos:column="34"/></decl_stmt>
    <comment type="line" pos:line="79" pos:column="5">// Avoid pconns after races so that the same client does not suffer twice.</comment>
    <comment type="line" pos:line="80" pos:column="5">// This does not increase the total number of connections because we just</comment>
    <comment type="line" pos:line="81" pos:column="5">// closed the connection that failed the race. And re-pinning assumes this.</comment>
    <if pos:line="82" pos:column="5">if <condition pos:line="82" pos:column="8">(<expr><name pos:line="82" pos:column="9">pconnRace<pos:position pos:line="82" pos:column="18"/></name> <operator pos:line="82" pos:column="19">!=<pos:position pos:line="82" pos:column="21"/></operator> <name pos:line="82" pos:column="22">raceHappened<pos:position pos:line="82" pos:column="34"/></name></expr>)<pos:position pos:line="82" pos:column="35"/></condition><then pos:line="82" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><name pos:line="83" pos:column="9">temp<pos:position pos:line="83" pos:column="13"/></name> <operator pos:line="83" pos:column="14">=<pos:position pos:line="83" pos:column="15"/></operator> <call><name><name pos:line="83" pos:column="16">fwdPconnPool<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">-&gt;<pos:position pos:line="83" pos:column="33"/></operator><name pos:line="83" pos:column="30">pop<pos:position pos:line="83" pos:column="33"/></name></name><argument_list pos:line="83" pos:column="33">(<argument><expr><name><name pos:line="83" pos:column="34">serverDestinations<pos:position pos:line="83" pos:column="52"/></name><index pos:line="83" pos:column="52">[<expr><literal type="number" pos:line="83" pos:column="53">0<pos:position pos:line="83" pos:column="54"/></literal></expr>]<pos:position pos:line="83" pos:column="55"/></index></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="57">host<pos:position pos:line="83" pos:column="61"/></name></expr></argument>, <argument><expr><call><name pos:line="83" pos:column="63">checkRetriable<pos:position pos:line="83" pos:column="77"/></name><argument_list pos:line="83" pos:column="77">()<pos:position pos:line="83" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="83" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="81"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="85" pos:column="5">const<pos:position pos:line="85" pos:column="10"/></specifier> <name pos:line="85" pos:column="11">bool<pos:position pos:line="85" pos:column="15"/></name></type> <name pos:line="85" pos:column="16">openedPconn<pos:position pos:line="85" pos:column="27"/></name> <init pos:line="85" pos:column="28">= <expr><call><name><name pos:line="85" pos:column="30">Comm<pos:position pos:line="85" pos:column="34"/></name><operator pos:line="85" pos:column="34">::<pos:position pos:line="85" pos:column="36"/></operator><name pos:line="85" pos:column="36">IsConnOpen<pos:position pos:line="85" pos:column="46"/></name></name><argument_list pos:line="85" pos:column="46">(<argument><expr><name pos:line="85" pos:column="47">temp<pos:position pos:line="85" pos:column="51"/></name></expr></argument>)<pos:position pos:line="85" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="85" pos:column="53"/></decl_stmt>
    <expr_stmt><expr><name pos:line="86" pos:column="5">pconnRace<pos:position pos:line="86" pos:column="14"/></name> <operator pos:line="86" pos:column="15">=<pos:position pos:line="86" pos:column="16"/></operator> <ternary><condition><expr><name pos:line="86" pos:column="17">openedPconn<pos:position pos:line="86" pos:column="28"/></name></expr> ?<pos:position pos:line="86" pos:column="30"/></condition><then pos:line="86" pos:column="30"> <expr><name pos:line="86" pos:column="31">racePossible<pos:position pos:line="86" pos:column="43"/></name></expr> <pos:position pos:line="86" pos:column="44"/></then><else pos:line="86" pos:column="44">: <expr><name pos:line="86" pos:column="46">raceImpossible<pos:position pos:line="86" pos:column="60"/></name></expr></else></ternary></expr>;<pos:position pos:line="86" pos:column="61"/></expr_stmt>

    <comment type="line" pos:line="88" pos:column="5">// if we found an open persistent connection to use. use it.</comment>
    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><name pos:line="89" pos:column="9">openedPconn<pos:position pos:line="89" pos:column="20"/></name></expr>)<pos:position pos:line="89" pos:column="21"/></condition><then pos:line="89" pos:column="21"> <block pos:line="89" pos:column="22">{
        <expr_stmt><expr><name pos:line="90" pos:column="9">serverConn<pos:position pos:line="90" pos:column="19"/></name> <operator pos:line="90" pos:column="20">=<pos:position pos:line="90" pos:column="21"/></operator> <name pos:line="90" pos:column="22">temp<pos:position pos:line="90" pos:column="26"/></name></expr>;<pos:position pos:line="90" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="91" pos:column="9">flags<pos:position pos:line="91" pos:column="14"/></name><operator pos:line="91" pos:column="14">.<pos:position pos:line="91" pos:column="15"/></operator><name pos:line="91" pos:column="15">connected_okay<pos:position pos:line="91" pos:column="29"/></name></name> <operator pos:line="91" pos:column="30">=<pos:position pos:line="91" pos:column="31"/></operator> <literal type="boolean" pos:line="91" pos:column="32">true<pos:position pos:line="91" pos:column="36"/></literal></expr>;<pos:position pos:line="91" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="92" pos:column="9">debugs<pos:position pos:line="92" pos:column="15"/></name><argument_list pos:line="92" pos:column="15">(<argument><expr><literal type="number" pos:line="92" pos:column="16">17<pos:position pos:line="92" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="92" pos:column="20">3<pos:position pos:line="92" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="92" pos:column="23">HERE<pos:position pos:line="92" pos:column="27"/></name> <operator pos:line="92" pos:column="28">&lt;&lt;<pos:position pos:line="92" pos:column="36"/></operator> <literal type="string" pos:line="92" pos:column="31">"reusing pconn "<pos:position pos:line="92" pos:column="47"/></literal> <operator pos:line="92" pos:column="48">&lt;&lt;<pos:position pos:line="92" pos:column="56"/></operator> <call><name pos:line="92" pos:column="51">serverConnection<pos:position pos:line="92" pos:column="67"/></name><argument_list pos:line="92" pos:column="67">()<pos:position pos:line="92" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="92" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="93" pos:column="9">++<pos:position pos:line="93" pos:column="11"/></operator><name pos:line="93" pos:column="11">n_tries<pos:position pos:line="93" pos:column="18"/></name></expr>;<pos:position pos:line="93" pos:column="19"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="95" pos:column="9">comm_add_close_handler<pos:position pos:line="95" pos:column="31"/></name><argument_list pos:line="95" pos:column="31">(<argument><expr><call><name pos:line="95" pos:column="32">serverConnection<pos:position pos:line="95" pos:column="48"/></name><argument_list pos:line="95" pos:column="48">()<pos:position pos:line="95" pos:column="50"/></argument_list></call><operator pos:line="95" pos:column="50">-&gt;<pos:position pos:line="95" pos:column="55"/></operator><name pos:line="95" pos:column="52">fd<pos:position pos:line="95" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="56">fwdServerClosedWrapper<pos:position pos:line="95" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="80">this<pos:position pos:line="95" pos:column="84"/></name></expr></argument>)<pos:position pos:line="95" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="86"/></expr_stmt>

        <comment type="block" pos:line="97" pos:column="9">/* Update server side TOS and Netfilter mark on the connection. */</comment>
        <if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><call><name><name pos:line="98" pos:column="13">Ip<pos:position pos:line="98" pos:column="15"/></name><operator pos:line="98" pos:column="15">::<pos:position pos:line="98" pos:column="17"/></operator><name pos:line="98" pos:column="17">Qos<pos:position pos:line="98" pos:column="20"/></name><operator pos:line="98" pos:column="20">::<pos:position pos:line="98" pos:column="22"/></operator><name pos:line="98" pos:column="22">TheConfig<pos:position pos:line="98" pos:column="31"/></name><operator pos:line="98" pos:column="31">.<pos:position pos:line="98" pos:column="32"/></operator><name pos:line="98" pos:column="32">isAclTosActive<pos:position pos:line="98" pos:column="46"/></name></name><argument_list pos:line="98" pos:column="46">()<pos:position pos:line="98" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="98" pos:column="49"/></condition><then pos:line="98" pos:column="49"> <block pos:line="98" pos:column="50">{
            <expr_stmt><expr><name><name pos:line="99" pos:column="13">temp<pos:position pos:line="99" pos:column="17"/></name><operator pos:line="99" pos:column="17">-&gt;<pos:position pos:line="99" pos:column="22"/></operator><name pos:line="99" pos:column="19">tos<pos:position pos:line="99" pos:column="22"/></name></name> <operator pos:line="99" pos:column="23">=<pos:position pos:line="99" pos:column="24"/></operator> <call><name pos:line="99" pos:column="25">GetTosToServer<pos:position pos:line="99" pos:column="39"/></name><argument_list pos:line="99" pos:column="39">(<argument><expr><name pos:line="99" pos:column="40">request<pos:position pos:line="99" pos:column="47"/></name></expr></argument>)<pos:position pos:line="99" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="100" pos:column="13">Ip<pos:position pos:line="100" pos:column="15"/></name><operator pos:line="100" pos:column="15">::<pos:position pos:line="100" pos:column="17"/></operator><name pos:line="100" pos:column="17">Qos<pos:position pos:line="100" pos:column="20"/></name><operator pos:line="100" pos:column="20">::<pos:position pos:line="100" pos:column="22"/></operator><name pos:line="100" pos:column="22">setSockTos<pos:position pos:line="100" pos:column="32"/></name></name><argument_list pos:line="100" pos:column="32">(<argument><expr><name pos:line="100" pos:column="33">temp<pos:position pos:line="100" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="100" pos:column="39">temp<pos:position pos:line="100" pos:column="43"/></name><operator pos:line="100" pos:column="43">-&gt;<pos:position pos:line="100" pos:column="48"/></operator><name pos:line="100" pos:column="45">tos<pos:position pos:line="100" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="101" pos:column="10"/></block></then></if>
<cpp:if pos:line="102" pos:column="1">#<cpp:directive pos:line="102" pos:column="2">if<pos:position pos:line="102" pos:column="4"/></cpp:directive> <expr><name pos:line="102" pos:column="5">SO_MARK<pos:position pos:line="102" pos:column="12"/></name></expr></cpp:if>
        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><call><name><name pos:line="103" pos:column="13">Ip<pos:position pos:line="103" pos:column="15"/></name><operator pos:line="103" pos:column="15">::<pos:position pos:line="103" pos:column="17"/></operator><name pos:line="103" pos:column="17">Qos<pos:position pos:line="103" pos:column="20"/></name><operator pos:line="103" pos:column="20">::<pos:position pos:line="103" pos:column="22"/></operator><name pos:line="103" pos:column="22">TheConfig<pos:position pos:line="103" pos:column="31"/></name><operator pos:line="103" pos:column="31">.<pos:position pos:line="103" pos:column="32"/></operator><name pos:line="103" pos:column="32">isAclNfmarkActive<pos:position pos:line="103" pos:column="49"/></name></name><argument_list pos:line="103" pos:column="49">()<pos:position pos:line="103" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="52"/></condition><then pos:line="103" pos:column="52"> <block pos:line="103" pos:column="53">{
            <expr_stmt><expr><name><name pos:line="104" pos:column="13">temp<pos:position pos:line="104" pos:column="17"/></name><operator pos:line="104" pos:column="17">-&gt;<pos:position pos:line="104" pos:column="22"/></operator><name pos:line="104" pos:column="19">nfmark<pos:position pos:line="104" pos:column="25"/></name></name> <operator pos:line="104" pos:column="26">=<pos:position pos:line="104" pos:column="27"/></operator> <call><name pos:line="104" pos:column="28">GetNfmarkToServer<pos:position pos:line="104" pos:column="45"/></name><argument_list pos:line="104" pos:column="45">(<argument><expr><name pos:line="104" pos:column="46">request<pos:position pos:line="104" pos:column="53"/></name></expr></argument>)<pos:position pos:line="104" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="105" pos:column="13">Ip<pos:position pos:line="105" pos:column="15"/></name><operator pos:line="105" pos:column="15">::<pos:position pos:line="105" pos:column="17"/></operator><name pos:line="105" pos:column="17">Qos<pos:position pos:line="105" pos:column="20"/></name><operator pos:line="105" pos:column="20">::<pos:position pos:line="105" pos:column="22"/></operator><name pos:line="105" pos:column="22">setSockNfmark<pos:position pos:line="105" pos:column="35"/></name></name><argument_list pos:line="105" pos:column="35">(<argument><expr><name pos:line="105" pos:column="36">temp<pos:position pos:line="105" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="42">temp<pos:position pos:line="105" pos:column="46"/></name><operator pos:line="105" pos:column="46">-&gt;<pos:position pos:line="105" pos:column="51"/></operator><name pos:line="105" pos:column="48">nfmark<pos:position pos:line="105" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="106" pos:column="10"/></block></then></if>
<cpp:endif pos:line="107" pos:column="1">#<cpp:directive pos:line="107" pos:column="2">endif<pos:position pos:line="107" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><call><name pos:line="109" pos:column="9">dispatch<pos:position pos:line="109" pos:column="17"/></name><argument_list pos:line="109" pos:column="17">()<pos:position pos:line="109" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="20"/></expr_stmt>
        <return pos:line="110" pos:column="9">return;<pos:position pos:line="110" pos:column="16"/></return>
    }<pos:position pos:line="111" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="113" pos:column="5">// We will try to open a new connection, possibly to the same destination.</comment>
    <comment type="line" pos:line="114" pos:column="5">// We reset serverDestinations[0] in case we are using it again because</comment>
    <comment type="line" pos:line="115" pos:column="5">// ConnOpener modifies its destination argument.</comment>
    <expr_stmt><expr><name><name pos:line="116" pos:column="5">serverDestinations<pos:position pos:line="116" pos:column="23"/></name><index pos:line="116" pos:column="23">[<expr><literal type="number" pos:line="116" pos:column="24">0<pos:position pos:line="116" pos:column="25"/></literal></expr>]<pos:position pos:line="116" pos:column="26"/></index></name><operator pos:line="116" pos:column="26">-&gt;<pos:position pos:line="116" pos:column="31"/></operator><call><name><name pos:line="116" pos:column="28">local<pos:position pos:line="116" pos:column="33"/></name><operator pos:line="116" pos:column="33">.<pos:position pos:line="116" pos:column="34"/></operator><name pos:line="116" pos:column="34">SetPort<pos:position pos:line="116" pos:column="41"/></name></name><argument_list pos:line="116" pos:column="41">(<argument><expr><literal type="number" pos:line="116" pos:column="42">0<pos:position pos:line="116" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="117" pos:column="5">serverConn<pos:position pos:line="117" pos:column="15"/></name> <operator pos:line="117" pos:column="16">=<pos:position pos:line="117" pos:column="17"/></operator> <name pos:line="117" pos:column="18">NULL<pos:position pos:line="117" pos:column="22"/></name></expr>;<pos:position pos:line="117" pos:column="23"/></expr_stmt>

<cpp:if pos:line="119" pos:column="1">#<cpp:directive pos:line="119" pos:column="2">if<pos:position pos:line="119" pos:column="4"/></cpp:directive> <expr><name pos:line="119" pos:column="5">URL_CHECKSUM_DEBUG<pos:position pos:line="119" pos:column="23"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name><name pos:line="120" pos:column="5">entry<pos:position pos:line="120" pos:column="10"/></name><operator pos:line="120" pos:column="10">-&gt;<pos:position pos:line="120" pos:column="15"/></operator><name pos:line="120" pos:column="12">mem_obj<pos:position pos:line="120" pos:column="19"/></name><operator pos:line="120" pos:column="19">-&gt;<pos:position pos:line="120" pos:column="24"/></operator><name pos:line="120" pos:column="21">checkUrlChecksum<pos:position pos:line="120" pos:column="37"/></name></name><argument_list pos:line="120" pos:column="37">()<pos:position pos:line="120" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="121" pos:column="1">#<cpp:directive pos:line="121" pos:column="2">endif<pos:position pos:line="121" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="123" pos:column="5">/* Get the server side TOS and Netfilter mark to be set on the connection. */</comment>
    <if pos:line="124" pos:column="5">if <condition pos:line="124" pos:column="8">(<expr><call><name><name pos:line="124" pos:column="9">Ip<pos:position pos:line="124" pos:column="11"/></name><operator pos:line="124" pos:column="11">::<pos:position pos:line="124" pos:column="13"/></operator><name pos:line="124" pos:column="13">Qos<pos:position pos:line="124" pos:column="16"/></name><operator pos:line="124" pos:column="16">::<pos:position pos:line="124" pos:column="18"/></operator><name pos:line="124" pos:column="18">TheConfig<pos:position pos:line="124" pos:column="27"/></name><operator pos:line="124" pos:column="27">.<pos:position pos:line="124" pos:column="28"/></operator><name pos:line="124" pos:column="28">isAclTosActive<pos:position pos:line="124" pos:column="42"/></name></name><argument_list pos:line="124" pos:column="42">()<pos:position pos:line="124" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="124" pos:column="45"/></condition><then pos:line="124" pos:column="45"> <block pos:line="124" pos:column="46">{
        <expr_stmt><expr><name><name pos:line="125" pos:column="9">serverDestinations<pos:position pos:line="125" pos:column="27"/></name><index pos:line="125" pos:column="27">[<expr><literal type="number" pos:line="125" pos:column="28">0<pos:position pos:line="125" pos:column="29"/></literal></expr>]<pos:position pos:line="125" pos:column="30"/></index></name><operator pos:line="125" pos:column="30">-&gt;<pos:position pos:line="125" pos:column="35"/></operator><name pos:line="125" pos:column="32">tos<pos:position pos:line="125" pos:column="35"/></name> <operator pos:line="125" pos:column="36">=<pos:position pos:line="125" pos:column="37"/></operator> <call><name pos:line="125" pos:column="38">GetTosToServer<pos:position pos:line="125" pos:column="52"/></name><argument_list pos:line="125" pos:column="52">(<argument><expr><name pos:line="125" pos:column="53">request<pos:position pos:line="125" pos:column="60"/></name></expr></argument>)<pos:position pos:line="125" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="62"/></expr_stmt>
    }<pos:position pos:line="126" pos:column="6"/></block></then></if>
<cpp:if pos:line="127" pos:column="1">#<cpp:directive pos:line="127" pos:column="2">if<pos:position pos:line="127" pos:column="4"/></cpp:directive> <expr><name pos:line="127" pos:column="5">SO_MARK<pos:position pos:line="127" pos:column="12"/></name> <operator pos:line="127" pos:column="13">&amp;&amp;<pos:position pos:line="127" pos:column="23"/></operator> <name pos:line="127" pos:column="16">USE_LIBCAP<pos:position pos:line="127" pos:column="26"/></name></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="128" pos:column="5">serverDestinations<pos:position pos:line="128" pos:column="23"/></name><index pos:line="128" pos:column="23">[<expr><literal type="number" pos:line="128" pos:column="24">0<pos:position pos:line="128" pos:column="25"/></literal></expr>]<pos:position pos:line="128" pos:column="26"/></index></name><operator pos:line="128" pos:column="26">-&gt;<pos:position pos:line="128" pos:column="31"/></operator><name pos:line="128" pos:column="28">nfmark<pos:position pos:line="128" pos:column="34"/></name> <operator pos:line="128" pos:column="35">=<pos:position pos:line="128" pos:column="36"/></operator> <call><name pos:line="128" pos:column="37">GetNfmarkToServer<pos:position pos:line="128" pos:column="54"/></name><argument_list pos:line="128" pos:column="54">(<argument><expr><name pos:line="128" pos:column="55">request<pos:position pos:line="128" pos:column="62"/></name></expr></argument>)<pos:position pos:line="128" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="64"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="129" pos:column="5">debugs<pos:position pos:line="129" pos:column="11"/></name><argument_list pos:line="129" pos:column="11">(<argument><expr><literal type="number" pos:line="129" pos:column="12">17<pos:position pos:line="129" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="16">3<pos:position pos:line="129" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="19">"fwdConnectStart: got outgoing addr "<pos:position pos:line="129" pos:column="56"/></literal> <operator pos:line="129" pos:column="57">&lt;&lt;<pos:position pos:line="129" pos:column="65"/></operator> <name><name pos:line="129" pos:column="60">serverDestinations<pos:position pos:line="129" pos:column="78"/></name><index pos:line="129" pos:column="78">[<expr><literal type="number" pos:line="129" pos:column="79">0<pos:position pos:line="129" pos:column="80"/></literal></expr>]<pos:position pos:line="129" pos:column="81"/></index></name><operator pos:line="129" pos:column="81">-&gt;<pos:position pos:line="129" pos:column="86"/></operator><name pos:line="129" pos:column="83">local<pos:position pos:line="129" pos:column="88"/></name> <operator pos:line="129" pos:column="89">&lt;&lt;<pos:position pos:line="129" pos:column="97"/></operator> <literal type="string" pos:line="129" pos:column="92">", tos "<pos:position pos:line="129" pos:column="100"/></literal> <operator pos:line="129" pos:column="101">&lt;&lt;<pos:position pos:line="129" pos:column="109"/></operator> <call><name pos:line="129" pos:column="104">int<pos:position pos:line="129" pos:column="107"/></name><argument_list pos:line="129" pos:column="107">(<argument><expr><name><name pos:line="129" pos:column="108">serverDestinations<pos:position pos:line="129" pos:column="126"/></name><index pos:line="129" pos:column="126">[<expr><literal type="number" pos:line="129" pos:column="127">0<pos:position pos:line="129" pos:column="128"/></literal></expr>]<pos:position pos:line="129" pos:column="129"/></index></name><operator pos:line="129" pos:column="129">-&gt;<pos:position pos:line="129" pos:column="134"/></operator><name pos:line="129" pos:column="131">tos<pos:position pos:line="129" pos:column="134"/></name></expr></argument>)<pos:position pos:line="129" pos:column="135"/></argument_list></call>
           <operator pos:line="130" pos:column="12">&lt;&lt;<pos:position pos:line="130" pos:column="20"/></operator> <literal type="string" pos:line="130" pos:column="15">", netfilter mark "<pos:position pos:line="130" pos:column="34"/></literal> <operator pos:line="130" pos:column="35">&lt;&lt;<pos:position pos:line="130" pos:column="43"/></operator> <name><name pos:line="130" pos:column="38">serverDestinations<pos:position pos:line="130" pos:column="56"/></name><index pos:line="130" pos:column="56">[<expr><literal type="number" pos:line="130" pos:column="57">0<pos:position pos:line="130" pos:column="58"/></literal></expr>]<pos:position pos:line="130" pos:column="59"/></index></name><operator pos:line="130" pos:column="59">-&gt;<pos:position pos:line="130" pos:column="64"/></operator><name pos:line="130" pos:column="61">nfmark<pos:position pos:line="130" pos:column="67"/></name></expr></argument>)<pos:position pos:line="130" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="69"/></expr_stmt>
<cpp:else pos:line="131" pos:column="1">#<cpp:directive pos:line="131" pos:column="2">else<pos:position pos:line="131" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name><name pos:line="132" pos:column="5">serverDestinations<pos:position pos:line="132" pos:column="23"/></name><index pos:line="132" pos:column="23">[<expr><literal type="number" pos:line="132" pos:column="24">0<pos:position pos:line="132" pos:column="25"/></literal></expr>]<pos:position pos:line="132" pos:column="26"/></index></name><operator pos:line="132" pos:column="26">-&gt;<pos:position pos:line="132" pos:column="31"/></operator><name pos:line="132" pos:column="28">nfmark<pos:position pos:line="132" pos:column="34"/></name> <operator pos:line="132" pos:column="35">=<pos:position pos:line="132" pos:column="36"/></operator> <literal type="number" pos:line="132" pos:column="37">0<pos:position pos:line="132" pos:column="38"/></literal></expr>;<pos:position pos:line="132" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="133" pos:column="5">debugs<pos:position pos:line="133" pos:column="11"/></name><argument_list pos:line="133" pos:column="11">(<argument><expr><literal type="number" pos:line="133" pos:column="12">17<pos:position pos:line="133" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="133" pos:column="16">3<pos:position pos:line="133" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="133" pos:column="19">"fwdConnectStart: got outgoing addr "<pos:position pos:line="133" pos:column="56"/></literal> <operator pos:line="133" pos:column="57">&lt;&lt;<pos:position pos:line="133" pos:column="65"/></operator> <name><name pos:line="133" pos:column="60">serverDestinations<pos:position pos:line="133" pos:column="78"/></name><index pos:line="133" pos:column="78">[<expr><literal type="number" pos:line="133" pos:column="79">0<pos:position pos:line="133" pos:column="80"/></literal></expr>]<pos:position pos:line="133" pos:column="81"/></index></name><operator pos:line="133" pos:column="81">-&gt;<pos:position pos:line="133" pos:column="86"/></operator><name pos:line="133" pos:column="83">local<pos:position pos:line="133" pos:column="88"/></name> <operator pos:line="133" pos:column="89">&lt;&lt;<pos:position pos:line="133" pos:column="97"/></operator> <literal type="string" pos:line="133" pos:column="92">", tos "<pos:position pos:line="133" pos:column="100"/></literal> <operator pos:line="133" pos:column="101">&lt;&lt;<pos:position pos:line="133" pos:column="109"/></operator> <call><name pos:line="133" pos:column="104">int<pos:position pos:line="133" pos:column="107"/></name><argument_list pos:line="133" pos:column="107">(<argument><expr><name><name pos:line="133" pos:column="108">serverDestinations<pos:position pos:line="133" pos:column="126"/></name><index pos:line="133" pos:column="126">[<expr><literal type="number" pos:line="133" pos:column="127">0<pos:position pos:line="133" pos:column="128"/></literal></expr>]<pos:position pos:line="133" pos:column="129"/></index></name><operator pos:line="133" pos:column="129">-&gt;<pos:position pos:line="133" pos:column="134"/></operator><name pos:line="133" pos:column="131">tos<pos:position pos:line="133" pos:column="134"/></name></expr></argument>)<pos:position pos:line="133" pos:column="135"/></argument_list></call></expr></argument>)<pos:position pos:line="133" pos:column="136"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="137"/></expr_stmt>
<cpp:endif pos:line="134" pos:column="1">#<cpp:directive pos:line="134" pos:column="2">endif<pos:position pos:line="134" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="136" pos:column="5">calls<pos:position pos:line="136" pos:column="10"/></name><operator pos:line="136" pos:column="10">.<pos:position pos:line="136" pos:column="11"/></operator><name pos:line="136" pos:column="11">connector<pos:position pos:line="136" pos:column="20"/></name></name> <operator pos:line="136" pos:column="21">=<pos:position pos:line="136" pos:column="22"/></operator> <call><name pos:line="136" pos:column="23">commCbCall<pos:position pos:line="136" pos:column="33"/></name><argument_list pos:line="136" pos:column="33">(<argument><expr><literal type="number" pos:line="136" pos:column="34">17<pos:position pos:line="136" pos:column="36"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="136" pos:column="37">3<pos:position pos:line="136" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="40">"fwdConnectDoneWrapper"<pos:position pos:line="136" pos:column="63"/></literal></expr></argument>, <argument><expr><call><name pos:line="136" pos:column="65">CommConnectCbPtrFun<pos:position pos:line="136" pos:column="84"/></name><argument_list pos:line="136" pos:column="84">(<argument><expr><name pos:line="136" pos:column="85">fwdConnectDoneWrapper<pos:position pos:line="136" pos:column="106"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="108">this<pos:position pos:line="136" pos:column="112"/></name></expr></argument>)<pos:position pos:line="136" pos:column="113"/></argument_list></call></expr></argument>)<pos:position pos:line="136" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="115"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="137" pos:column="5">Comm<pos:position pos:line="137" pos:column="9"/></name><operator pos:line="137" pos:column="9">::<pos:position pos:line="137" pos:column="11"/></operator><name pos:line="137" pos:column="11">ConnOpener<pos:position pos:line="137" pos:column="21"/></name></name> <modifier pos:line="137" pos:column="22">*<pos:position pos:line="137" pos:column="23"/></modifier></type><name pos:line="137" pos:column="23">cs<pos:position pos:line="137" pos:column="25"/></name> <init pos:line="137" pos:column="26">= <expr><operator pos:line="137" pos:column="28">new<pos:position pos:line="137" pos:column="31"/></operator> <call><name><name pos:line="137" pos:column="32">Comm<pos:position pos:line="137" pos:column="36"/></name><operator pos:line="137" pos:column="36">::<pos:position pos:line="137" pos:column="38"/></operator><name pos:line="137" pos:column="38">ConnOpener<pos:position pos:line="137" pos:column="48"/></name></name><argument_list pos:line="137" pos:column="48">(<argument><expr><name><name pos:line="137" pos:column="49">serverDestinations<pos:position pos:line="137" pos:column="67"/></name><index pos:line="137" pos:column="67">[<expr><literal type="number" pos:line="137" pos:column="68">0<pos:position pos:line="137" pos:column="69"/></literal></expr>]<pos:position pos:line="137" pos:column="70"/></index></name></expr></argument>, <argument><expr><name><name pos:line="137" pos:column="72">calls<pos:position pos:line="137" pos:column="77"/></name><operator pos:line="137" pos:column="77">.<pos:position pos:line="137" pos:column="78"/></operator><name pos:line="137" pos:column="78">connector<pos:position pos:line="137" pos:column="87"/></name></name></expr></argument>, <argument><expr><name pos:line="137" pos:column="89">ctimeout<pos:position pos:line="137" pos:column="97"/></name></expr></argument>)<pos:position pos:line="137" pos:column="98"/></argument_list></call></expr></init></decl>;<pos:position pos:line="137" pos:column="99"/></decl_stmt>
    <if pos:line="138" pos:column="5">if <condition pos:line="138" pos:column="8">(<expr><name pos:line="138" pos:column="9">host<pos:position pos:line="138" pos:column="13"/></name></expr>)<pos:position pos:line="138" pos:column="14"/></condition><then pos:line="138" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="139" pos:column="9">cs<pos:position pos:line="139" pos:column="11"/></name><operator pos:line="139" pos:column="11">-&gt;<pos:position pos:line="139" pos:column="16"/></operator><name pos:line="139" pos:column="13">setHost<pos:position pos:line="139" pos:column="20"/></name></name><argument_list pos:line="139" pos:column="20">(<argument><expr><name pos:line="139" pos:column="21">host<pos:position pos:line="139" pos:column="25"/></name></expr></argument>)<pos:position pos:line="139" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="27"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="140" pos:column="5">AsyncJob<pos:position pos:line="140" pos:column="13"/></name><operator pos:line="140" pos:column="13">::<pos:position pos:line="140" pos:column="15"/></operator><name pos:line="140" pos:column="15">Start<pos:position pos:line="140" pos:column="20"/></name></name><argument_list pos:line="140" pos:column="20">(<argument><expr><name pos:line="140" pos:column="21">cs<pos:position pos:line="140" pos:column="23"/></name></expr></argument>)<pos:position pos:line="140" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="25"/></expr_stmt>
}<pos:position pos:line="141" pos:column="2"/></block></function></unit>

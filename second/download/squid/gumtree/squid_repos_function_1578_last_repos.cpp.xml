<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1578_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">gen_default_if_none<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">EntryList<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">&amp;<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="38">head<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="44">std<pos:position pos:line="2" pos:column="47"/></name><operator pos:line="2" pos:column="47">::<pos:position pos:line="2" pos:column="49"/></operator><name pos:line="2" pos:column="49">ostream<pos:position pos:line="2" pos:column="56"/></name></name> <modifier pos:line="2" pos:column="57">&amp;<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="58">fout<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">fout<pos:position pos:line="4" pos:column="9"/></name> <operator pos:line="4" pos:column="10">&lt;&lt;<pos:position pos:line="4" pos:column="18"/></operator> <literal type="string" pos:line="4" pos:column="13">"static void"<pos:position pos:line="4" pos:column="26"/></literal> <operator pos:line="4" pos:column="27">&lt;&lt;<pos:position pos:line="4" pos:column="35"/></operator> <name><name pos:line="4" pos:column="30">std<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">::<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">endl<pos:position pos:line="4" pos:column="39"/></name></name> <operator pos:line="4" pos:column="40">&lt;&lt;<pos:position pos:line="4" pos:column="48"/></operator>
         <literal type="string" pos:line="5" pos:column="10">"defaults_if_none(void)"<pos:position pos:line="5" pos:column="34"/></literal> <operator pos:line="5" pos:column="35">&lt;&lt;<pos:position pos:line="5" pos:column="43"/></operator> <name><name pos:line="5" pos:column="38">std<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">::<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">endl<pos:position pos:line="5" pos:column="47"/></name></name> <operator pos:line="5" pos:column="48">&lt;&lt;<pos:position pos:line="5" pos:column="56"/></operator>
         <literal type="string" pos:line="6" pos:column="10">"{"<pos:position pos:line="6" pos:column="13"/></literal> <operator pos:line="6" pos:column="14">&lt;&lt;<pos:position pos:line="6" pos:column="22"/></operator> <name><name pos:line="6" pos:column="17">std<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">::<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">endl<pos:position pos:line="6" pos:column="26"/></name></name> <operator pos:line="6" pos:column="27">&lt;&lt;<pos:position pos:line="6" pos:column="35"/></operator>
         <literal type="string" pos:line="7" pos:column="10">"    cfg_filename = \"Default Configuration (if absent)\";"<pos:position pos:line="7" pos:column="69"/></literal> <operator pos:line="7" pos:column="70">&lt;&lt;<pos:position pos:line="7" pos:column="78"/></operator> <name><name pos:line="7" pos:column="73">std<pos:position pos:line="7" pos:column="76"/></name><operator pos:line="7" pos:column="76">::<pos:position pos:line="7" pos:column="78"/></operator><name pos:line="7" pos:column="78">endl<pos:position pos:line="7" pos:column="82"/></name></name> <operator pos:line="7" pos:column="83">&lt;&lt;<pos:position pos:line="7" pos:column="91"/></operator>
         <literal type="string" pos:line="8" pos:column="10">"    config_lineno = 0;"<pos:position pos:line="8" pos:column="34"/></literal> <operator pos:line="8" pos:column="35">&lt;&lt;<pos:position pos:line="8" pos:column="43"/></operator> <name><name pos:line="8" pos:column="38">std<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">::<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="43">endl<pos:position pos:line="8" pos:column="47"/></name></name></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>

    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><decl><type><name><name pos:line="10" pos:column="10">EntryList<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">::<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">const_iterator<pos:position pos:line="10" pos:column="35"/></name></name></type> <name pos:line="10" pos:column="36">entry<pos:position pos:line="10" pos:column="41"/></name> <init pos:line="10" pos:column="42">= <expr><call><name><name pos:line="10" pos:column="44">head<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">.<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="49">begin<pos:position pos:line="10" pos:column="54"/></name></name><argument_list pos:line="10" pos:column="54">()<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="57"/></init> <condition><expr><name pos:line="10" pos:column="58">entry<pos:position pos:line="10" pos:column="63"/></name> <operator pos:line="10" pos:column="64">!=<pos:position pos:line="10" pos:column="66"/></operator> <call><name><name pos:line="10" pos:column="67">head<pos:position pos:line="10" pos:column="71"/></name><operator pos:line="10" pos:column="71">.<pos:position pos:line="10" pos:column="72"/></operator><name pos:line="10" pos:column="72">end<pos:position pos:line="10" pos:column="75"/></name></name><argument_list pos:line="10" pos:column="75">()<pos:position pos:line="10" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="78"/></condition> <incr><expr><operator pos:line="10" pos:column="79">++<pos:position pos:line="10" pos:column="81"/></operator><name pos:line="10" pos:column="81">entry<pos:position pos:line="10" pos:column="86"/></name></expr></incr>)<pos:position pos:line="10" pos:column="87"/></control> <block pos:line="10" pos:column="88">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">assert<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><call><name><name pos:line="11" pos:column="16">entry<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">name<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">.<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">size<pos:position pos:line="11" pos:column="32"/></name></name><argument_list pos:line="11" pos:column="32">()<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">!<pos:position pos:line="13" pos:column="14"/></operator><call><name><name pos:line="13" pos:column="14">entry<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">loc<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">.<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">size<pos:position pos:line="13" pos:column="29"/></name></name><argument_list pos:line="13" pos:column="29">()<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="32"/></condition><then pos:line="13" pos:column="32">
            <block type="pseudo"><continue pos:line="14" pos:column="13">continue;<pos:position pos:line="14" pos:column="22"/></continue></block></then></if>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name><name pos:line="16" pos:column="13">entry<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">defaults<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">.<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="29">if_none<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">.<pos:position pos:line="16" pos:column="37"/></operator><name pos:line="16" pos:column="37">empty<pos:position pos:line="16" pos:column="42"/></name></name><argument_list pos:line="16" pos:column="42">()<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45">
            <block type="pseudo"><continue pos:line="17" pos:column="13">continue;<pos:position pos:line="17" pos:column="22"/></continue></block></then></if>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name><name pos:line="19" pos:column="14">entry<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">defaults<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">.<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">preset<pos:position pos:line="19" pos:column="36"/></name><operator pos:line="19" pos:column="36">.<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">empty<pos:position pos:line="19" pos:column="42"/></name></name><argument_list pos:line="19" pos:column="42">()<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45"> <block pos:line="19" pos:column="46">{
            <expr_stmt><expr><name><name pos:line="20" pos:column="13">std<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">::<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">cerr<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">&lt;&lt;<pos:position pos:line="20" pos:column="31"/></operator> <literal type="string" pos:line="20" pos:column="26">"ERROR: "<pos:position pos:line="20" pos:column="35"/></literal> <operator pos:line="20" pos:column="36">&lt;&lt;<pos:position pos:line="20" pos:column="44"/></operator> <name><name pos:line="20" pos:column="39">entry<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">-&gt;<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="46">name<pos:position pos:line="20" pos:column="50"/></name></name> <operator pos:line="20" pos:column="51">&lt;&lt;<pos:position pos:line="20" pos:column="59"/></operator> <literal type="string" pos:line="20" pos:column="54">" has preset defaults. DEFAULT_IF_NONE cannot be true."<pos:position pos:line="20" pos:column="109"/></literal> <operator pos:line="20" pos:column="110">&lt;&lt;<pos:position pos:line="20" pos:column="118"/></operator> <name><name pos:line="20" pos:column="113">std<pos:position pos:line="20" pos:column="116"/></name><operator pos:line="20" pos:column="116">::<pos:position pos:line="20" pos:column="118"/></operator><name pos:line="20" pos:column="118">endl<pos:position pos:line="20" pos:column="122"/></name></name></expr>;<pos:position pos:line="20" pos:column="123"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">exit<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><literal type="number" pos:line="21" pos:column="18">1<pos:position pos:line="21" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name><name pos:line="24" pos:column="13">entry<pos:position pos:line="24" pos:column="18"/></name><operator pos:line="24" pos:column="18">-&gt;<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="20">ifdef<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">.<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">size<pos:position pos:line="24" pos:column="30"/></name></name><argument_list pos:line="24" pos:column="30">()<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="33"/></condition><then pos:line="24" pos:column="33">
            <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="13">fout<pos:position pos:line="25" pos:column="17"/></name> <operator pos:line="25" pos:column="18">&lt;&lt;<pos:position pos:line="25" pos:column="26"/></operator> <literal type="string" pos:line="25" pos:column="21">"#if "<pos:position pos:line="25" pos:column="27"/></literal> <operator pos:line="25" pos:column="28">&lt;&lt;<pos:position pos:line="25" pos:column="36"/></operator> <name><name pos:line="25" pos:column="31">entry<pos:position pos:line="25" pos:column="36"/></name><operator pos:line="25" pos:column="36">-&gt;<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="38">ifdef<pos:position pos:line="25" pos:column="43"/></name></name> <operator pos:line="25" pos:column="44">&lt;&lt;<pos:position pos:line="25" pos:column="52"/></operator> <name><name pos:line="25" pos:column="47">std<pos:position pos:line="25" pos:column="50"/></name><operator pos:line="25" pos:column="50">::<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="52">endl<pos:position pos:line="25" pos:column="56"/></name></name></expr>;<pos:position pos:line="25" pos:column="57"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="27" pos:column="9">fout<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">&lt;&lt;<pos:position pos:line="27" pos:column="22"/></operator> <literal type="string" pos:line="27" pos:column="17">"    if (check_null_"<pos:position pos:line="27" pos:column="38"/></literal> <operator pos:line="27" pos:column="39">&lt;&lt;<pos:position pos:line="27" pos:column="47"/></operator> <name><name pos:line="27" pos:column="42">entry<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">type<pos:position pos:line="27" pos:column="53"/></name></name> <operator pos:line="27" pos:column="54">&lt;&lt;<pos:position pos:line="27" pos:column="62"/></operator> <literal type="string" pos:line="27" pos:column="57">"("<pos:position pos:line="27" pos:column="60"/></literal> <operator pos:line="27" pos:column="61">&lt;&lt;<pos:position pos:line="27" pos:column="69"/></operator> <name><name pos:line="27" pos:column="64">entry<pos:position pos:line="27" pos:column="69"/></name><operator pos:line="27" pos:column="69">-&gt;<pos:position pos:line="27" pos:column="74"/></operator><name pos:line="27" pos:column="71">loc<pos:position pos:line="27" pos:column="74"/></name></name> <operator pos:line="27" pos:column="75">&lt;&lt;<pos:position pos:line="27" pos:column="83"/></operator> <literal type="string" pos:line="27" pos:column="78">")) {"<pos:position pos:line="27" pos:column="84"/></literal> <operator pos:line="27" pos:column="85">&lt;&lt;<pos:position pos:line="27" pos:column="93"/></operator> <name><name pos:line="27" pos:column="88">std<pos:position pos:line="27" pos:column="91"/></name><operator pos:line="27" pos:column="91">::<pos:position pos:line="27" pos:column="93"/></operator><name pos:line="27" pos:column="93">endl<pos:position pos:line="27" pos:column="97"/></name></name></expr>;<pos:position pos:line="27" pos:column="98"/></expr_stmt>
        <for pos:line="28" pos:column="9">for <control pos:line="28" pos:column="13">(<init><decl><type><name><name pos:line="28" pos:column="14">LineList<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">::<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">const_iterator<pos:position pos:line="28" pos:column="38"/></name></name></type> <name pos:line="28" pos:column="39">l<pos:position pos:line="28" pos:column="40"/></name> <init pos:line="28" pos:column="41">= <expr><call><name><name pos:line="28" pos:column="43">entry<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">defaults<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">.<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="59">if_none<pos:position pos:line="28" pos:column="66"/></name><operator pos:line="28" pos:column="66">.<pos:position pos:line="28" pos:column="67"/></operator><name pos:line="28" pos:column="67">begin<pos:position pos:line="28" pos:column="72"/></name></name><argument_list pos:line="28" pos:column="72">()<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="75"/></init> <condition><expr><name pos:line="28" pos:column="76">l<pos:position pos:line="28" pos:column="77"/></name> <operator pos:line="28" pos:column="78">!=<pos:position pos:line="28" pos:column="80"/></operator> <call><name><name pos:line="28" pos:column="81">entry<pos:position pos:line="28" pos:column="86"/></name><operator pos:line="28" pos:column="86">-&gt;<pos:position pos:line="28" pos:column="91"/></operator><name pos:line="28" pos:column="88">defaults<pos:position pos:line="28" pos:column="96"/></name><operator pos:line="28" pos:column="96">.<pos:position pos:line="28" pos:column="97"/></operator><name pos:line="28" pos:column="97">if_none<pos:position pos:line="28" pos:column="104"/></name><operator pos:line="28" pos:column="104">.<pos:position pos:line="28" pos:column="105"/></operator><name pos:line="28" pos:column="105">end<pos:position pos:line="28" pos:column="108"/></name></name><argument_list pos:line="28" pos:column="108">()<pos:position pos:line="28" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="111"/></condition> <incr><expr><operator pos:line="28" pos:column="112">++<pos:position pos:line="28" pos:column="114"/></operator><name pos:line="28" pos:column="114">l<pos:position pos:line="28" pos:column="115"/></name></expr></incr>)<pos:position pos:line="28" pos:column="116"/></control>
            <block type="pseudo"><expr_stmt><expr><name pos:line="29" pos:column="13">fout<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">&lt;&lt;<pos:position pos:line="29" pos:column="26"/></operator> <literal type="string" pos:line="29" pos:column="21">"        default_line(\""<pos:position pos:line="29" pos:column="46"/></literal> <operator pos:line="29" pos:column="47">&lt;&lt;<pos:position pos:line="29" pos:column="55"/></operator> <name><name pos:line="29" pos:column="50">entry<pos:position pos:line="29" pos:column="55"/></name><operator pos:line="29" pos:column="55">-&gt;<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="57">name<pos:position pos:line="29" pos:column="61"/></name></name> <operator pos:line="29" pos:column="62">&lt;&lt;<pos:position pos:line="29" pos:column="70"/></operator> <literal type="string" pos:line="29" pos:column="65">" "<pos:position pos:line="29" pos:column="68"/></literal> <operator pos:line="29" pos:column="69">&lt;&lt;<pos:position pos:line="29" pos:column="77"/></operator> <call><name pos:line="29" pos:column="72">gen_quote_escape<pos:position pos:line="29" pos:column="88"/></name><argument_list pos:line="29" pos:column="88">(<argument><expr><operator pos:line="29" pos:column="89">*<pos:position pos:line="29" pos:column="90"/></operator><name pos:line="29" pos:column="90">l<pos:position pos:line="29" pos:column="91"/></name></expr></argument>)<pos:position pos:line="29" pos:column="92"/></argument_list></call> <operator pos:line="29" pos:column="93">&lt;&lt;<pos:position pos:line="29" pos:column="101"/></operator><literal type="string" pos:line="29" pos:column="95">"\");"<pos:position pos:line="29" pos:column="101"/></literal> <operator pos:line="29" pos:column="102">&lt;&lt;<pos:position pos:line="29" pos:column="110"/></operator> <name><name pos:line="29" pos:column="105">std<pos:position pos:line="29" pos:column="108"/></name><operator pos:line="29" pos:column="108">::<pos:position pos:line="29" pos:column="110"/></operator><name pos:line="29" pos:column="110">endl<pos:position pos:line="29" pos:column="114"/></name></name></expr>;<pos:position pos:line="29" pos:column="115"/></expr_stmt></block></for>
        <expr_stmt><expr><name pos:line="30" pos:column="9">fout<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">&lt;&lt;<pos:position pos:line="30" pos:column="22"/></operator> <literal type="string" pos:line="30" pos:column="17">"    }"<pos:position pos:line="30" pos:column="24"/></literal> <operator pos:line="30" pos:column="25">&lt;&lt;<pos:position pos:line="30" pos:column="33"/></operator> <name><name pos:line="30" pos:column="28">std<pos:position pos:line="30" pos:column="31"/></name><operator pos:line="30" pos:column="31">::<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">endl<pos:position pos:line="30" pos:column="37"/></name></name></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name><name pos:line="32" pos:column="13">entry<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">-&gt;<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="20">ifdef<pos:position pos:line="32" pos:column="25"/></name><operator pos:line="32" pos:column="25">.<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="26">size<pos:position pos:line="32" pos:column="30"/></name></name><argument_list pos:line="32" pos:column="30">()<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="33"/></condition><then pos:line="32" pos:column="33">
            <block type="pseudo"><expr_stmt><expr><name pos:line="33" pos:column="13">fout<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">&lt;&lt;<pos:position pos:line="33" pos:column="26"/></operator> <literal type="string" pos:line="33" pos:column="21">"#endif"<pos:position pos:line="33" pos:column="29"/></literal> <operator pos:line="33" pos:column="30">&lt;&lt;<pos:position pos:line="33" pos:column="38"/></operator> <name><name pos:line="33" pos:column="33">std<pos:position pos:line="33" pos:column="36"/></name><operator pos:line="33" pos:column="36">::<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="38">endl<pos:position pos:line="33" pos:column="42"/></name></name></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt></block></then></if>
    }<pos:position pos:line="34" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="36" pos:column="5">fout<pos:position pos:line="36" pos:column="9"/></name> <operator pos:line="36" pos:column="10">&lt;&lt;<pos:position pos:line="36" pos:column="18"/></operator> <literal type="string" pos:line="36" pos:column="13">"    cfg_filename = NULL;"<pos:position pos:line="36" pos:column="39"/></literal> <operator pos:line="36" pos:column="40">&lt;&lt;<pos:position pos:line="36" pos:column="48"/></operator> <name><name pos:line="36" pos:column="43">std<pos:position pos:line="36" pos:column="46"/></name><operator pos:line="36" pos:column="46">::<pos:position pos:line="36" pos:column="48"/></operator><name pos:line="36" pos:column="48">endl<pos:position pos:line="36" pos:column="52"/></name></name> <operator pos:line="36" pos:column="53">&lt;&lt;<pos:position pos:line="36" pos:column="61"/></operator>
         <literal type="string" pos:line="37" pos:column="10">"}"<pos:position pos:line="37" pos:column="13"/></literal> <operator pos:line="37" pos:column="14">&lt;&lt;<pos:position pos:line="37" pos:column="22"/></operator> <name><name pos:line="37" pos:column="17">std<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">::<pos:position pos:line="37" pos:column="22"/></operator><name pos:line="37" pos:column="22">endl<pos:position pos:line="37" pos:column="26"/></name></name> <operator pos:line="37" pos:column="27">&lt;&lt;<pos:position pos:line="37" pos:column="35"/></operator> <name><name pos:line="37" pos:column="30">std<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">::<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="35">endl<pos:position pos:line="37" pos:column="39"/></name></name></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

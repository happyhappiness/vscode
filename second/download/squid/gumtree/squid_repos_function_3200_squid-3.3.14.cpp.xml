<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3200_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">StoreEntry<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">MemStore<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">get<pos:position pos:line="2" pos:column="14"/></name></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">cache_key<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">key<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">map<pos:position pos:line="4" pos:column="13"/></name></expr>)<pos:position pos:line="4" pos:column="14"/></condition><then pos:line="4" pos:column="14">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr>;<pos:position pos:line="5" pos:column="21"/></return></block></then></if>

    <comment type="line" pos:line="7" pos:column="5">// XXX: replace sfileno with a bigger word (sfileno is only for cache_dirs)</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">sfileno<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">index<pos:position pos:line="8" pos:column="18"/></name></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name><name pos:line="9" pos:column="11">Ipc<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">::<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">StoreMapSlot<pos:position pos:line="9" pos:column="28"/></name></name> <modifier pos:line="9" pos:column="29">*<pos:position pos:line="9" pos:column="30"/></modifier><specifier pos:line="9" pos:column="30">const<pos:position pos:line="9" pos:column="35"/></specifier></type> <name pos:line="9" pos:column="36">slot<pos:position pos:line="9" pos:column="40"/></name> <init pos:line="9" pos:column="41">= <expr><call><name><name pos:line="9" pos:column="43">map<pos:position pos:line="9" pos:column="46"/></name><operator pos:line="9" pos:column="46">-&gt;<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="48">openForReading<pos:position pos:line="9" pos:column="62"/></name></name><argument_list pos:line="9" pos:column="62">(<argument><expr><name pos:line="9" pos:column="63">key<pos:position pos:line="9" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="68">index<pos:position pos:line="9" pos:column="73"/></name></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="75"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">slot<pos:position pos:line="10" pos:column="14"/></name></expr>)<pos:position pos:line="10" pos:column="15"/></condition><then pos:line="10" pos:column="15">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name><name pos:line="13" pos:column="11">Ipc<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">::<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">StoreMapSlot<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">::<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">Basics<pos:position pos:line="13" pos:column="36"/></name></name> <modifier pos:line="13" pos:column="37">&amp;<pos:position pos:line="13" pos:column="42"/></modifier></type><name pos:line="13" pos:column="38">basics<pos:position pos:line="13" pos:column="44"/></name> <init pos:line="13" pos:column="45">= <expr><name><name pos:line="13" pos:column="47">slot<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">-&gt;<pos:position pos:line="13" pos:column="56"/></operator><name pos:line="13" pos:column="53">basics<pos:position pos:line="13" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name><name pos:line="14" pos:column="11">MemStoreMap<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">::<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">Extras<pos:position pos:line="14" pos:column="30"/></name></name> <modifier pos:line="14" pos:column="31">&amp;<pos:position pos:line="14" pos:column="36"/></modifier></type><name pos:line="14" pos:column="32">extras<pos:position pos:line="14" pos:column="38"/></name> <init pos:line="14" pos:column="39">= <expr><call><name><name pos:line="14" pos:column="41">map<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">-&gt;<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="46">extras<pos:position pos:line="14" pos:column="52"/></name></name><argument_list pos:line="14" pos:column="52">(<argument><expr><name pos:line="14" pos:column="53">index<pos:position pos:line="14" pos:column="58"/></name></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="60"/></decl_stmt>

    <comment type="line" pos:line="16" pos:column="5">// create a brand new store entry and initialize it with stored info</comment>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">StoreEntry<pos:position pos:line="17" pos:column="15"/></name> <modifier pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></modifier></type><name pos:line="17" pos:column="17">e<pos:position pos:line="17" pos:column="18"/></name> <init pos:line="17" pos:column="19">= <expr><operator pos:line="17" pos:column="21">new<pos:position pos:line="17" pos:column="24"/></operator> <call><name pos:line="17" pos:column="25">StoreEntry<pos:position pos:line="17" pos:column="35"/></name><argument_list pos:line="17" pos:column="35">()<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="38"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">e<pos:position pos:line="18" pos:column="6"/></name><operator pos:line="18" pos:column="6">-&gt;<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="8">lock_count<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <literal type="number" pos:line="18" pos:column="21">0<pos:position pos:line="18" pos:column="22"/></literal></expr>;<pos:position pos:line="18" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="20" pos:column="5">e<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">-&gt;<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="8">swap_file_sz<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name><name pos:line="20" pos:column="23">basics<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">.<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">swap_file_sz<pos:position pos:line="20" pos:column="42"/></name></name></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">e<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">-&gt;<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="8">lastref<pos:position pos:line="21" pos:column="15"/></name></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name><name pos:line="21" pos:column="18">basics<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">.<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">lastref<pos:position pos:line="21" pos:column="32"/></name></name></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">e<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">timestamp<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name><name pos:line="22" pos:column="20">basics<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">.<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">timestamp<pos:position pos:line="22" pos:column="36"/></name></name></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">e<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">expires<pos:position pos:line="23" pos:column="15"/></name></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name><name pos:line="23" pos:column="18">basics<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">.<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="25">expires<pos:position pos:line="23" pos:column="32"/></name></name></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">e<pos:position pos:line="24" pos:column="6"/></name><operator pos:line="24" pos:column="6">-&gt;<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="8">lastmod<pos:position pos:line="24" pos:column="15"/></name></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name><name pos:line="24" pos:column="18">basics<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">.<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">lastmod<pos:position pos:line="24" pos:column="32"/></name></name></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">e<pos:position pos:line="25" pos:column="6"/></name><operator pos:line="25" pos:column="6">-&gt;<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="8">refcount<pos:position pos:line="25" pos:column="16"/></name></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <name><name pos:line="25" pos:column="19">basics<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">.<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">refcount<pos:position pos:line="25" pos:column="34"/></name></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">e<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">-&gt;<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="8">flags<pos:position pos:line="26" pos:column="13"/></name></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <name><name pos:line="26" pos:column="16">basics<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">.<pos:position pos:line="26" pos:column="23"/></operator><name pos:line="26" pos:column="23">flags<pos:position pos:line="26" pos:column="28"/></name></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">e<pos:position pos:line="28" pos:column="6"/></name><operator pos:line="28" pos:column="6">-&gt;<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="8">store_status<pos:position pos:line="28" pos:column="20"/></name></name> <operator pos:line="28" pos:column="21">=<pos:position pos:line="28" pos:column="22"/></operator> <name pos:line="28" pos:column="23">STORE_OK<pos:position pos:line="28" pos:column="31"/></name></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">e<pos:position pos:line="29" pos:column="6"/></name><operator pos:line="29" pos:column="6">-&gt;<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="8">mem_status<pos:position pos:line="29" pos:column="18"/></name></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">IN_MEMORY<pos:position pos:line="29" pos:column="30"/></name></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt> <comment type="line" pos:line="29" pos:column="32">// setMemStatus(IN_MEMORY) requires mem_obj</comment>
    <comment type="line" pos:line="30" pos:column="5">//e-&gt;swap_status = set in StoreEntry constructor to SWAPOUT_NONE;</comment>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">e<pos:position pos:line="31" pos:column="6"/></name><operator pos:line="31" pos:column="6">-&gt;<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="8">ping_status<pos:position pos:line="31" pos:column="19"/></name></name> <operator pos:line="31" pos:column="20">=<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">PING_NONE<pos:position pos:line="31" pos:column="31"/></name></expr>;<pos:position pos:line="31" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">EBIT_SET<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><name><name pos:line="33" pos:column="14">e<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">flags<pos:position pos:line="33" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="24">ENTRY_CACHABLE<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">EBIT_CLR<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><name><name pos:line="34" pos:column="14">e<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">-&gt;<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="17">flags<pos:position pos:line="34" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="24">RELEASE_REQUEST<pos:position pos:line="34" pos:column="39"/></name></expr></argument>)<pos:position pos:line="34" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">EBIT_CLR<pos:position pos:line="35" pos:column="13"/></name><argument_list pos:line="35" pos:column="13">(<argument><expr><name><name pos:line="35" pos:column="14">e<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">-&gt;<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="17">flags<pos:position pos:line="35" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="24">KEY_PRIVATE<pos:position pos:line="35" pos:column="35"/></name></expr></argument>)<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">EBIT_SET<pos:position pos:line="36" pos:column="13"/></name><argument_list pos:line="36" pos:column="13">(<argument><expr><name><name pos:line="36" pos:column="14">e<pos:position pos:line="36" pos:column="15"/></name><operator pos:line="36" pos:column="15">-&gt;<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="17">flags<pos:position pos:line="36" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="24">ENTRY_VALIDATED<pos:position pos:line="36" pos:column="39"/></name></expr></argument>)<pos:position pos:line="36" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="41"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="38" pos:column="5">const<pos:position pos:line="38" pos:column="10"/></specifier> <name pos:line="38" pos:column="11">bool<pos:position pos:line="38" pos:column="15"/></name></type> <name pos:line="38" pos:column="16">copied<pos:position pos:line="38" pos:column="22"/></name> <init pos:line="38" pos:column="23">= <expr><call><name pos:line="38" pos:column="25">copyFromShm<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><operator pos:line="38" pos:column="37">*<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="38">e<pos:position pos:line="38" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="41">extras<pos:position pos:line="38" pos:column="47"/></name></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="38" pos:column="49"/></decl_stmt>

    <comment type="line" pos:line="40" pos:column="5">// we copied everything we could to local memory; no more need to lock</comment>
    <expr_stmt><expr><call><name><name pos:line="41" pos:column="5">map<pos:position pos:line="41" pos:column="8"/></name><operator pos:line="41" pos:column="8">-&gt;<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="10">closeForReading<pos:position pos:line="41" pos:column="25"/></name></name><argument_list pos:line="41" pos:column="25">(<argument><expr><name pos:line="41" pos:column="26">index<pos:position pos:line="41" pos:column="31"/></name></expr></argument>)<pos:position pos:line="41" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">copied<pos:position pos:line="43" pos:column="15"/></name></expr>)<pos:position pos:line="43" pos:column="16"/></condition><then pos:line="43" pos:column="16"> <block pos:line="43" pos:column="17">{
        <expr_stmt><expr><call><name><name pos:line="44" pos:column="9">e<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">hashInsert<pos:position pos:line="44" pos:column="22"/></name></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">key<pos:position pos:line="44" pos:column="26"/></name></expr></argument>)<pos:position pos:line="44" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="28"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">e<pos:position pos:line="45" pos:column="17"/></name></expr>;<pos:position pos:line="45" pos:column="18"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">debugs<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><literal type="number" pos:line="48" pos:column="12">20<pos:position pos:line="48" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="16">3<pos:position pos:line="48" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="19">HERE<pos:position pos:line="48" pos:column="23"/></name> <operator pos:line="48" pos:column="24">&lt;&lt;<pos:position pos:line="48" pos:column="32"/></operator> <literal type="string" pos:line="48" pos:column="27">"mem-loading failed; freeing "<pos:position pos:line="48" pos:column="57"/></literal> <operator pos:line="48" pos:column="58">&lt;&lt;<pos:position pos:line="48" pos:column="66"/></operator> <name pos:line="48" pos:column="61">index<pos:position pos:line="48" pos:column="66"/></name></expr></argument>)<pos:position pos:line="48" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="49" pos:column="5">map<pos:position pos:line="49" pos:column="8"/></name><operator pos:line="49" pos:column="8">-&gt;<pos:position pos:line="49" pos:column="13"/></operator><name pos:line="49" pos:column="10">free<pos:position pos:line="49" pos:column="14"/></name></name><argument_list pos:line="49" pos:column="14">(<argument><expr><name pos:line="49" pos:column="15">index<pos:position pos:line="49" pos:column="20"/></name></expr></argument>)<pos:position pos:line="49" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt> <comment type="line" pos:line="49" pos:column="23">// do not let others into the same trap</comment>
    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">NULL<pos:position pos:line="50" pos:column="16"/></name></expr>;<pos:position pos:line="50" pos:column="17"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2306_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">accessLogGetNewLogFormatToken<pos:position pos:line="2" pos:column="30"/></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">logformat_token<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="49">lt<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">def<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="64">enum<pos:position pos:line="2" pos:column="68"/></name> <name pos:line="2" pos:column="69">log_quote<pos:position pos:line="2" pos:column="78"/></name></name> <modifier pos:line="2" pos:column="79">*<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="80">quote<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="86"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">cur<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><name pos:line="4" pos:column="17">def<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">logformat_token_table_entry<pos:position pos:line="6" pos:column="39"/></name></name> <modifier pos:line="6" pos:column="40">*<pos:position pos:line="6" pos:column="41"/></modifier></type><name pos:line="6" pos:column="41">lte<pos:position pos:line="6" pos:column="44"/></name></decl>;<pos:position pos:line="6" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">l<pos:position pos:line="7" pos:column="10"/></name></decl>;<pos:position pos:line="7" pos:column="11"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">memset<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">lt<pos:position pos:line="9" pos:column="14"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="19">sizeof<argument_list pos:line="9" pos:column="25">(<argument><expr><operator pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">lt<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">l<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">strcspn<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">cur<pos:position pos:line="10" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="22">"%"<pos:position pos:line="10" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">l<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">&gt;<pos:position pos:line="12" pos:column="15"/></operator> <literal type="number" pos:line="12" pos:column="13">0<pos:position pos:line="12" pos:column="14"/></literal></expr>)<pos:position pos:line="12" pos:column="15"/></condition><then pos:line="12" pos:column="15"> <block pos:line="12" pos:column="16">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">char<pos:position pos:line="13" pos:column="13"/></name> <modifier pos:line="13" pos:column="14">*<pos:position pos:line="13" pos:column="15"/></modifier></type><name pos:line="13" pos:column="15">cp<pos:position pos:line="13" pos:column="17"/></name></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>
        <comment type="block" pos:line="14" pos:column="9">/* it's a string for sure, until \0 or the next % */</comment>
        <expr_stmt><expr><name pos:line="15" pos:column="9">cp<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <operator pos:line="15" pos:column="14">(<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">char<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></operator><operator pos:line="15" pos:column="21">)<pos:position pos:line="15" pos:column="22"/></operator><call><name pos:line="15" pos:column="22">xmalloc<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">l<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">+<pos:position pos:line="15" pos:column="33"/></operator> <literal type="number" pos:line="15" pos:column="34">1<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">xstrncpy<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">cp<pos:position pos:line="16" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="22">cur<pos:position pos:line="16" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="27">l<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">+<pos:position pos:line="16" pos:column="30"/></operator> <literal type="number" pos:line="16" pos:column="31">1<pos:position pos:line="16" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">lt<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">-&gt;<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="13">type<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">LFT_STRING<pos:position pos:line="17" pos:column="30"/></name></expr>;<pos:position pos:line="17" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">lt<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">data<pos:position pos:line="18" pos:column="17"/></name><operator pos:line="18" pos:column="17">.<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">string<pos:position pos:line="18" pos:column="24"/></name></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="27">cp<pos:position pos:line="18" pos:column="29"/></name></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>

        <while pos:line="20" pos:column="9">while <condition pos:line="20" pos:column="15">(<expr><name pos:line="20" pos:column="16">l<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">&gt;<pos:position pos:line="20" pos:column="22"/></operator> <literal type="number" pos:line="20" pos:column="20">0<pos:position pos:line="20" pos:column="21"/></literal></expr>)<pos:position pos:line="20" pos:column="22"/></condition> <block pos:line="20" pos:column="23">{
            <switch pos:line="21" pos:column="13">switch <condition pos:line="21" pos:column="20">(<expr><operator pos:line="21" pos:column="21">*<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">cur<pos:position pos:line="21" pos:column="25"/></name></expr>)<pos:position pos:line="21" pos:column="26"/></condition> <block pos:line="21" pos:column="27">{

            <case pos:line="23" pos:column="13">case <expr><literal type="char" pos:line="23" pos:column="18">'"'<pos:position pos:line="23" pos:column="21"/></literal></expr>:<pos:position pos:line="23" pos:column="22"/></case>

                <if pos:line="25" pos:column="17">if <condition pos:line="25" pos:column="20">(<expr><operator pos:line="25" pos:column="21">*<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">quote<pos:position pos:line="25" pos:column="27"/></name> <operator pos:line="25" pos:column="28">==<pos:position pos:line="25" pos:column="30"/></operator> <name pos:line="25" pos:column="31">LOG_QUOTE_NONE<pos:position pos:line="25" pos:column="45"/></name></expr>)<pos:position pos:line="25" pos:column="46"/></condition><then pos:line="25" pos:column="46">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="26" pos:column="21">*<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">quote<pos:position pos:line="26" pos:column="27"/></name> <operator pos:line="26" pos:column="28">=<pos:position pos:line="26" pos:column="29"/></operator> <name pos:line="26" pos:column="30">LOG_QUOTE_QUOTES<pos:position pos:line="26" pos:column="46"/></name></expr>;<pos:position pos:line="26" pos:column="47"/></expr_stmt></block></then>
                <elseif pos:line="27" pos:column="17">else <if pos:line="27" pos:column="22">if <condition pos:line="27" pos:column="25">(<expr><operator pos:line="27" pos:column="26">*<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">quote<pos:position pos:line="27" pos:column="32"/></name> <operator pos:line="27" pos:column="33">==<pos:position pos:line="27" pos:column="35"/></operator> <name pos:line="27" pos:column="36">LOG_QUOTE_QUOTES<pos:position pos:line="27" pos:column="52"/></name></expr>)<pos:position pos:line="27" pos:column="53"/></condition><then pos:line="27" pos:column="53">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="28" pos:column="21">*<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">quote<pos:position pos:line="28" pos:column="27"/></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">LOG_QUOTE_NONE<pos:position pos:line="28" pos:column="44"/></name></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt></block></then></if></elseif></if>

                <break pos:line="30" pos:column="17">break;<pos:position pos:line="30" pos:column="23"/></break>

            <case pos:line="32" pos:column="13">case <expr><literal type="char" pos:line="32" pos:column="18">'['<pos:position pos:line="32" pos:column="21"/></literal></expr>:<pos:position pos:line="32" pos:column="22"/></case>
                <if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">*<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">quote<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">==<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="31">LOG_QUOTE_NONE<pos:position pos:line="33" pos:column="45"/></name></expr>)<pos:position pos:line="33" pos:column="46"/></condition><then pos:line="33" pos:column="46">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="34" pos:column="21">*<pos:position pos:line="34" pos:column="22"/></operator><name pos:line="34" pos:column="22">quote<pos:position pos:line="34" pos:column="27"/></name> <operator pos:line="34" pos:column="28">=<pos:position pos:line="34" pos:column="29"/></operator> <name pos:line="34" pos:column="30">LOG_QUOTE_BRAKETS<pos:position pos:line="34" pos:column="47"/></name></expr>;<pos:position pos:line="34" pos:column="48"/></expr_stmt></block></then></if>

                <break pos:line="36" pos:column="17">break;<pos:position pos:line="36" pos:column="23"/></break>

            <case pos:line="38" pos:column="13">case <expr><literal type="char" pos:line="38" pos:column="18">']'<pos:position pos:line="38" pos:column="21"/></literal></expr>:<pos:position pos:line="38" pos:column="22"/></case>
                <if pos:line="39" pos:column="17">if <condition pos:line="39" pos:column="20">(<expr><operator pos:line="39" pos:column="21">*<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="22">quote<pos:position pos:line="39" pos:column="27"/></name> <operator pos:line="39" pos:column="28">==<pos:position pos:line="39" pos:column="30"/></operator> <name pos:line="39" pos:column="31">LOG_QUOTE_BRAKETS<pos:position pos:line="39" pos:column="48"/></name></expr>)<pos:position pos:line="39" pos:column="49"/></condition><then pos:line="39" pos:column="49">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="40" pos:column="21">*<pos:position pos:line="40" pos:column="22"/></operator><name pos:line="40" pos:column="22">quote<pos:position pos:line="40" pos:column="27"/></name> <operator pos:line="40" pos:column="28">=<pos:position pos:line="40" pos:column="29"/></operator> <name pos:line="40" pos:column="30">LOG_QUOTE_NONE<pos:position pos:line="40" pos:column="44"/></name></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt></block></then></if>

                <break pos:line="42" pos:column="17">break;<pos:position pos:line="42" pos:column="23"/></break>
            }<pos:position pos:line="43" pos:column="14"/></block></switch>

            <expr_stmt><expr><name pos:line="45" pos:column="13">cur<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">++<pos:position pos:line="45" pos:column="18"/></operator></expr>;<pos:position pos:line="45" pos:column="19"/></expr_stmt>
            <expr_stmt><expr><name pos:line="46" pos:column="13">l<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">--<pos:position pos:line="46" pos:column="16"/></operator></expr>;<pos:position pos:line="46" pos:column="17"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></while>

        <goto pos:line="49" pos:column="9">goto <name pos:line="49" pos:column="14">done<pos:position pos:line="49" pos:column="18"/></name>;<pos:position pos:line="49" pos:column="19"/></goto>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><operator pos:line="52" pos:column="9">!<pos:position pos:line="52" pos:column="10"/></operator><operator pos:line="52" pos:column="10">*<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="11">cur<pos:position pos:line="52" pos:column="14"/></name></expr>)<pos:position pos:line="52" pos:column="15"/></condition><then pos:line="52" pos:column="15">
        <block type="pseudo"><goto pos:line="53" pos:column="9">goto <name pos:line="53" pos:column="14">done<pos:position pos:line="53" pos:column="18"/></name>;<pos:position pos:line="53" pos:column="19"/></goto></block></then></if>

    <expr_stmt><expr><name pos:line="55" pos:column="5">cur<pos:position pos:line="55" pos:column="8"/></name><operator pos:line="55" pos:column="8">++<pos:position pos:line="55" pos:column="10"/></operator></expr>;<pos:position pos:line="55" pos:column="11"/></expr_stmt>

    <switch pos:line="57" pos:column="5">switch <condition pos:line="57" pos:column="12">(<expr><operator pos:line="57" pos:column="13">*<pos:position pos:line="57" pos:column="14"/></operator><name pos:line="57" pos:column="14">cur<pos:position pos:line="57" pos:column="17"/></name></expr>)<pos:position pos:line="57" pos:column="18"/></condition> <block pos:line="57" pos:column="19">{

    <case pos:line="59" pos:column="5">case <expr><literal type="char" pos:line="59" pos:column="10">'"'<pos:position pos:line="59" pos:column="13"/></literal></expr>:<pos:position pos:line="59" pos:column="14"/></case>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">lt<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">-&gt;<pos:position pos:line="60" pos:column="16"/></operator><name pos:line="60" pos:column="13">quote<pos:position pos:line="60" pos:column="18"/></name></name> <operator pos:line="60" pos:column="19">=<pos:position pos:line="60" pos:column="20"/></operator> <name pos:line="60" pos:column="21">LOG_QUOTE_QUOTES<pos:position pos:line="60" pos:column="37"/></name></expr>;<pos:position pos:line="60" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="61" pos:column="9">cur<pos:position pos:line="61" pos:column="12"/></name><operator pos:line="61" pos:column="12">++<pos:position pos:line="61" pos:column="14"/></operator></expr>;<pos:position pos:line="61" pos:column="15"/></expr_stmt>
        <break pos:line="62" pos:column="9">break;<pos:position pos:line="62" pos:column="15"/></break>

    <case pos:line="64" pos:column="5">case <expr><literal type="char" pos:line="64" pos:column="10">'\''<pos:position pos:line="64" pos:column="14"/></literal></expr>:<pos:position pos:line="64" pos:column="15"/></case>
        <expr_stmt><expr><name><name pos:line="65" pos:column="9">lt<pos:position pos:line="65" pos:column="11"/></name><operator pos:line="65" pos:column="11">-&gt;<pos:position pos:line="65" pos:column="16"/></operator><name pos:line="65" pos:column="13">quote<pos:position pos:line="65" pos:column="18"/></name></name> <operator pos:line="65" pos:column="19">=<pos:position pos:line="65" pos:column="20"/></operator> <name pos:line="65" pos:column="21">LOG_QUOTE_RAW<pos:position pos:line="65" pos:column="34"/></name></expr>;<pos:position pos:line="65" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="66" pos:column="9">cur<pos:position pos:line="66" pos:column="12"/></name><operator pos:line="66" pos:column="12">++<pos:position pos:line="66" pos:column="14"/></operator></expr>;<pos:position pos:line="66" pos:column="15"/></expr_stmt>
        <break pos:line="67" pos:column="9">break;<pos:position pos:line="67" pos:column="15"/></break>

    <case pos:line="69" pos:column="5">case <expr><literal type="char" pos:line="69" pos:column="10">'['<pos:position pos:line="69" pos:column="13"/></literal></expr>:<pos:position pos:line="69" pos:column="14"/></case>
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">lt<pos:position pos:line="70" pos:column="11"/></name><operator pos:line="70" pos:column="11">-&gt;<pos:position pos:line="70" pos:column="16"/></operator><name pos:line="70" pos:column="13">quote<pos:position pos:line="70" pos:column="18"/></name></name> <operator pos:line="70" pos:column="19">=<pos:position pos:line="70" pos:column="20"/></operator> <name pos:line="70" pos:column="21">LOG_QUOTE_BRAKETS<pos:position pos:line="70" pos:column="38"/></name></expr>;<pos:position pos:line="70" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="71" pos:column="9">cur<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">++<pos:position pos:line="71" pos:column="14"/></operator></expr>;<pos:position pos:line="71" pos:column="15"/></expr_stmt>
        <break pos:line="72" pos:column="9">break;<pos:position pos:line="72" pos:column="15"/></break>

    <case pos:line="74" pos:column="5">case <expr><literal type="char" pos:line="74" pos:column="10">'#'<pos:position pos:line="74" pos:column="13"/></literal></expr>:<pos:position pos:line="74" pos:column="14"/></case>
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">lt<pos:position pos:line="75" pos:column="11"/></name><operator pos:line="75" pos:column="11">-&gt;<pos:position pos:line="75" pos:column="16"/></operator><name pos:line="75" pos:column="13">quote<pos:position pos:line="75" pos:column="18"/></name></name> <operator pos:line="75" pos:column="19">=<pos:position pos:line="75" pos:column="20"/></operator> <name pos:line="75" pos:column="21">LOG_QUOTE_URL<pos:position pos:line="75" pos:column="34"/></name></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="76" pos:column="9">cur<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">++<pos:position pos:line="76" pos:column="14"/></operator></expr>;<pos:position pos:line="76" pos:column="15"/></expr_stmt>
        <break pos:line="77" pos:column="9">break;<pos:position pos:line="77" pos:column="15"/></break>

    <default pos:line="79" pos:column="5">default:<pos:position pos:line="79" pos:column="13"/></default>
        <expr_stmt><expr><name><name pos:line="80" pos:column="9">lt<pos:position pos:line="80" pos:column="11"/></name><operator pos:line="80" pos:column="11">-&gt;<pos:position pos:line="80" pos:column="16"/></operator><name pos:line="80" pos:column="13">quote<pos:position pos:line="80" pos:column="18"/></name></name> <operator pos:line="80" pos:column="19">=<pos:position pos:line="80" pos:column="20"/></operator> <operator pos:line="80" pos:column="21">*<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="22">quote<pos:position pos:line="80" pos:column="27"/></name></expr>;<pos:position pos:line="80" pos:column="28"/></expr_stmt>
        <break pos:line="81" pos:column="9">break;<pos:position pos:line="81" pos:column="15"/></break>
    }<pos:position pos:line="82" pos:column="6"/></block></switch>

    <if pos:line="84" pos:column="5">if <condition pos:line="84" pos:column="8">(<expr><operator pos:line="84" pos:column="9">*<pos:position pos:line="84" pos:column="10"/></operator><name pos:line="84" pos:column="10">cur<pos:position pos:line="84" pos:column="13"/></name> <operator pos:line="84" pos:column="14">==<pos:position pos:line="84" pos:column="16"/></operator> <literal type="char" pos:line="84" pos:column="17">'-'<pos:position pos:line="84" pos:column="20"/></literal></expr>)<pos:position pos:line="84" pos:column="21"/></condition><then pos:line="84" pos:column="21"> <block pos:line="84" pos:column="22">{
        <expr_stmt><expr><name><name pos:line="85" pos:column="9">lt<pos:position pos:line="85" pos:column="11"/></name><operator pos:line="85" pos:column="11">-&gt;<pos:position pos:line="85" pos:column="16"/></operator><name pos:line="85" pos:column="13">left<pos:position pos:line="85" pos:column="17"/></name></name> <operator pos:line="85" pos:column="18">=<pos:position pos:line="85" pos:column="19"/></operator> <literal type="number" pos:line="85" pos:column="20">1<pos:position pos:line="85" pos:column="21"/></literal></expr>;<pos:position pos:line="85" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="86" pos:column="9">cur<pos:position pos:line="86" pos:column="12"/></name><operator pos:line="86" pos:column="12">++<pos:position pos:line="86" pos:column="14"/></operator></expr>;<pos:position pos:line="86" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="87" pos:column="6"/></block></then></if>

    <if pos:line="89" pos:column="5">if <condition pos:line="89" pos:column="8">(<expr><operator pos:line="89" pos:column="9">*<pos:position pos:line="89" pos:column="10"/></operator><name pos:line="89" pos:column="10">cur<pos:position pos:line="89" pos:column="13"/></name> <operator pos:line="89" pos:column="14">==<pos:position pos:line="89" pos:column="16"/></operator> <literal type="char" pos:line="89" pos:column="17">'0'<pos:position pos:line="89" pos:column="20"/></literal></expr>)<pos:position pos:line="89" pos:column="21"/></condition><then pos:line="89" pos:column="21"> <block pos:line="89" pos:column="22">{
        <expr_stmt><expr><name><name pos:line="90" pos:column="9">lt<pos:position pos:line="90" pos:column="11"/></name><operator pos:line="90" pos:column="11">-&gt;<pos:position pos:line="90" pos:column="16"/></operator><name pos:line="90" pos:column="13">zero<pos:position pos:line="90" pos:column="17"/></name></name> <operator pos:line="90" pos:column="18">=<pos:position pos:line="90" pos:column="19"/></operator> <literal type="number" pos:line="90" pos:column="20">1<pos:position pos:line="90" pos:column="21"/></literal></expr>;<pos:position pos:line="90" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="91" pos:column="9">cur<pos:position pos:line="91" pos:column="12"/></name><operator pos:line="91" pos:column="12">++<pos:position pos:line="91" pos:column="14"/></operator></expr>;<pos:position pos:line="91" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="92" pos:column="6"/></block></then></if>

    <if pos:line="94" pos:column="5">if <condition pos:line="94" pos:column="8">(<expr><call><name pos:line="94" pos:column="9">xisdigit<pos:position pos:line="94" pos:column="17"/></name><argument_list pos:line="94" pos:column="17">(<argument><expr><operator pos:line="94" pos:column="18">*<pos:position pos:line="94" pos:column="19"/></operator><name pos:line="94" pos:column="19">cur<pos:position pos:line="94" pos:column="22"/></name></expr></argument>)<pos:position pos:line="94" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="94" pos:column="24"/></condition><then pos:line="94" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="95" pos:column="9">lt<pos:position pos:line="95" pos:column="11"/></name><operator pos:line="95" pos:column="11">-&gt;<pos:position pos:line="95" pos:column="16"/></operator><name pos:line="95" pos:column="13">width<pos:position pos:line="95" pos:column="18"/></name></name> <operator pos:line="95" pos:column="19">=<pos:position pos:line="95" pos:column="20"/></operator> <call><name pos:line="95" pos:column="21">strtol<pos:position pos:line="95" pos:column="27"/></name><argument_list pos:line="95" pos:column="27">(<argument><expr><name pos:line="95" pos:column="28">cur<pos:position pos:line="95" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="33">&amp;<pos:position pos:line="95" pos:column="38"/></operator><name pos:line="95" pos:column="34">cur<pos:position pos:line="95" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="95" pos:column="39">10<pos:position pos:line="95" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="43"/></expr_stmt></block></then></if>

    <if pos:line="97" pos:column="5">if <condition pos:line="97" pos:column="8">(<expr><operator pos:line="97" pos:column="9">*<pos:position pos:line="97" pos:column="10"/></operator><name pos:line="97" pos:column="10">cur<pos:position pos:line="97" pos:column="13"/></name> <operator pos:line="97" pos:column="14">==<pos:position pos:line="97" pos:column="16"/></operator> <literal type="char" pos:line="97" pos:column="17">'.'<pos:position pos:line="97" pos:column="20"/></literal></expr>)<pos:position pos:line="97" pos:column="21"/></condition><then pos:line="97" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="98" pos:column="9">lt<pos:position pos:line="98" pos:column="11"/></name><operator pos:line="98" pos:column="11">-&gt;<pos:position pos:line="98" pos:column="16"/></operator><name pos:line="98" pos:column="13">precision<pos:position pos:line="98" pos:column="22"/></name></name> <operator pos:line="98" pos:column="23">=<pos:position pos:line="98" pos:column="24"/></operator> <call><name pos:line="98" pos:column="25">strtol<pos:position pos:line="98" pos:column="31"/></name><argument_list pos:line="98" pos:column="31">(<argument><expr><name pos:line="98" pos:column="32">cur<pos:position pos:line="98" pos:column="35"/></name> <operator pos:line="98" pos:column="36">+<pos:position pos:line="98" pos:column="37"/></operator> <literal type="number" pos:line="98" pos:column="38">1<pos:position pos:line="98" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="98" pos:column="41">&amp;<pos:position pos:line="98" pos:column="46"/></operator><name pos:line="98" pos:column="42">cur<pos:position pos:line="98" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="98" pos:column="47">10<pos:position pos:line="98" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="51"/></expr_stmt></block></then></if>

    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><operator pos:line="100" pos:column="9">*<pos:position pos:line="100" pos:column="10"/></operator><name pos:line="100" pos:column="10">cur<pos:position pos:line="100" pos:column="13"/></name> <operator pos:line="100" pos:column="14">==<pos:position pos:line="100" pos:column="16"/></operator> <literal type="char" pos:line="100" pos:column="17">'{'<pos:position pos:line="100" pos:column="20"/></literal></expr>)<pos:position pos:line="100" pos:column="21"/></condition><then pos:line="100" pos:column="21"> <block pos:line="100" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="101" pos:column="9">char<pos:position pos:line="101" pos:column="13"/></name> <modifier pos:line="101" pos:column="14">*<pos:position pos:line="101" pos:column="15"/></modifier></type><name pos:line="101" pos:column="15">cp<pos:position pos:line="101" pos:column="17"/></name></decl>;<pos:position pos:line="101" pos:column="18"/></decl_stmt>
        <expr_stmt><expr><name pos:line="102" pos:column="9">cur<pos:position pos:line="102" pos:column="12"/></name><operator pos:line="102" pos:column="12">++<pos:position pos:line="102" pos:column="14"/></operator></expr>;<pos:position pos:line="102" pos:column="15"/></expr_stmt>
        <expr_stmt><expr><name pos:line="103" pos:column="9">l<pos:position pos:line="103" pos:column="10"/></name> <operator pos:line="103" pos:column="11">=<pos:position pos:line="103" pos:column="12"/></operator> <call><name pos:line="103" pos:column="13">strcspn<pos:position pos:line="103" pos:column="20"/></name><argument_list pos:line="103" pos:column="20">(<argument><expr><name pos:line="103" pos:column="21">cur<pos:position pos:line="103" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="26">"}"<pos:position pos:line="103" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="104" pos:column="9">cp<pos:position pos:line="104" pos:column="11"/></name> <operator pos:line="104" pos:column="12">=<pos:position pos:line="104" pos:column="13"/></operator> <operator pos:line="104" pos:column="14">(<pos:position pos:line="104" pos:column="15"/></operator><name pos:line="104" pos:column="15">char<pos:position pos:line="104" pos:column="19"/></name> <operator pos:line="104" pos:column="20">*<pos:position pos:line="104" pos:column="21"/></operator><operator pos:line="104" pos:column="21">)<pos:position pos:line="104" pos:column="22"/></operator><call><name pos:line="104" pos:column="22">xmalloc<pos:position pos:line="104" pos:column="29"/></name><argument_list pos:line="104" pos:column="29">(<argument><expr><name pos:line="104" pos:column="30">l<pos:position pos:line="104" pos:column="31"/></name> <operator pos:line="104" pos:column="32">+<pos:position pos:line="104" pos:column="33"/></operator> <literal type="number" pos:line="104" pos:column="34">1<pos:position pos:line="104" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="105" pos:column="9">xstrncpy<pos:position pos:line="105" pos:column="17"/></name><argument_list pos:line="105" pos:column="17">(<argument><expr><name pos:line="105" pos:column="18">cp<pos:position pos:line="105" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="22">cur<pos:position pos:line="105" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="27">l<pos:position pos:line="105" pos:column="28"/></name> <operator pos:line="105" pos:column="29">+<pos:position pos:line="105" pos:column="30"/></operator> <literal type="number" pos:line="105" pos:column="31">1<pos:position pos:line="105" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="106" pos:column="9">lt<pos:position pos:line="106" pos:column="11"/></name><operator pos:line="106" pos:column="11">-&gt;<pos:position pos:line="106" pos:column="16"/></operator><name pos:line="106" pos:column="13">data<pos:position pos:line="106" pos:column="17"/></name><operator pos:line="106" pos:column="17">.<pos:position pos:line="106" pos:column="18"/></operator><name pos:line="106" pos:column="18">string<pos:position pos:line="106" pos:column="24"/></name></name> <operator pos:line="106" pos:column="25">=<pos:position pos:line="106" pos:column="26"/></operator> <name pos:line="106" pos:column="27">cp<pos:position pos:line="106" pos:column="29"/></name></expr>;<pos:position pos:line="106" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="107" pos:column="9">cur<pos:position pos:line="107" pos:column="12"/></name> <operator pos:line="107" pos:column="13">+=<pos:position pos:line="107" pos:column="15"/></operator> <name pos:line="107" pos:column="16">l<pos:position pos:line="107" pos:column="17"/></name></expr>;<pos:position pos:line="107" pos:column="18"/></expr_stmt>

        <if pos:line="109" pos:column="9">if <condition pos:line="109" pos:column="12">(<expr><operator pos:line="109" pos:column="13">*<pos:position pos:line="109" pos:column="14"/></operator><name pos:line="109" pos:column="14">cur<pos:position pos:line="109" pos:column="17"/></name> <operator pos:line="109" pos:column="18">==<pos:position pos:line="109" pos:column="20"/></operator> <literal type="char" pos:line="109" pos:column="21">'}'<pos:position pos:line="109" pos:column="24"/></literal></expr>)<pos:position pos:line="109" pos:column="25"/></condition><then pos:line="109" pos:column="25">
            <block type="pseudo"><expr_stmt><expr><name pos:line="110" pos:column="13">cur<pos:position pos:line="110" pos:column="16"/></name><operator pos:line="110" pos:column="16">++<pos:position pos:line="110" pos:column="18"/></operator></expr>;<pos:position pos:line="110" pos:column="19"/></expr_stmt></block></then></if>
    }<pos:position pos:line="111" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="113" pos:column="5">// For upward compatibility, assume "http::" prefix as default prefix</comment>
    <comment type="line" pos:line="114" pos:column="5">// for all log access formating codes, except those starting</comment>
    <comment type="line" pos:line="115" pos:column="5">// from "icap::", "adapt::" and "%"</comment>
    <if pos:line="116" pos:column="5">if <condition pos:line="116" pos:column="8">(<expr><call><name pos:line="116" pos:column="9">strncmp<pos:position pos:line="116" pos:column="16"/></name><argument_list pos:line="116" pos:column="16">(<argument><expr><name pos:line="116" pos:column="17">cur<pos:position pos:line="116" pos:column="20"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="116" pos:column="21">"http::"<pos:position pos:line="116" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="31">6<pos:position pos:line="116" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="33"/></argument_list></call> <operator pos:line="116" pos:column="34">==<pos:position pos:line="116" pos:column="36"/></operator> <literal type="number" pos:line="116" pos:column="37">0<pos:position pos:line="116" pos:column="38"/></literal> <operator pos:line="116" pos:column="39">&amp;&amp;<pos:position pos:line="116" pos:column="49"/></operator>
            <call><name pos:line="117" pos:column="13">strncmp<pos:position pos:line="117" pos:column="20"/></name><argument_list pos:line="117" pos:column="20">(<argument><expr><name pos:line="117" pos:column="21">cur<pos:position pos:line="117" pos:column="24"/></name><operator pos:line="117" pos:column="24">+<pos:position pos:line="117" pos:column="25"/></operator><literal type="number" pos:line="117" pos:column="25">6<pos:position pos:line="117" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="28">"icap::"<pos:position pos:line="117" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="38">6<pos:position pos:line="117" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="40"/></argument_list></call> <operator pos:line="117" pos:column="41">!=<pos:position pos:line="117" pos:column="43"/></operator> <literal type="number" pos:line="117" pos:column="44">0<pos:position pos:line="117" pos:column="45"/></literal>  <operator pos:line="117" pos:column="47">&amp;&amp;<pos:position pos:line="117" pos:column="57"/></operator>
            <call><name pos:line="118" pos:column="13">strncmp<pos:position pos:line="118" pos:column="20"/></name><argument_list pos:line="118" pos:column="20">(<argument><expr><name pos:line="118" pos:column="21">cur<pos:position pos:line="118" pos:column="24"/></name><operator pos:line="118" pos:column="24">+<pos:position pos:line="118" pos:column="25"/></operator><literal type="number" pos:line="118" pos:column="25">6<pos:position pos:line="118" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="28">"adapt::"<pos:position pos:line="118" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="39">12<pos:position pos:line="118" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="118" pos:column="42"/></argument_list></call> <operator pos:line="118" pos:column="43">!=<pos:position pos:line="118" pos:column="45"/></operator> <literal type="number" pos:line="118" pos:column="46">0<pos:position pos:line="118" pos:column="47"/></literal> <operator pos:line="118" pos:column="48">&amp;&amp;<pos:position pos:line="118" pos:column="58"/></operator> <operator pos:line="118" pos:column="51">*<pos:position pos:line="118" pos:column="52"/></operator><operator pos:line="118" pos:column="52">(<pos:position pos:line="118" pos:column="53"/></operator><name pos:line="118" pos:column="53">cur<pos:position pos:line="118" pos:column="56"/></name><operator pos:line="118" pos:column="56">+<pos:position pos:line="118" pos:column="57"/></operator><literal type="number" pos:line="118" pos:column="57">6<pos:position pos:line="118" pos:column="58"/></literal><operator pos:line="118" pos:column="58">)<pos:position pos:line="118" pos:column="59"/></operator> <operator pos:line="118" pos:column="60">!=<pos:position pos:line="118" pos:column="62"/></operator> <literal type="char" pos:line="118" pos:column="63">'%'<pos:position pos:line="118" pos:column="66"/></literal></expr> )<pos:position pos:line="118" pos:column="68"/></condition><then pos:line="118" pos:column="68"> <block pos:line="118" pos:column="69">{
        <expr_stmt><expr><name pos:line="119" pos:column="9">cur<pos:position pos:line="119" pos:column="12"/></name> <operator pos:line="119" pos:column="13">+=<pos:position pos:line="119" pos:column="15"/></operator> <literal type="number" pos:line="119" pos:column="16">6<pos:position pos:line="119" pos:column="17"/></literal></expr>;<pos:position pos:line="119" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="120" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="122" pos:column="5">lt<pos:position pos:line="122" pos:column="7"/></name><operator pos:line="122" pos:column="7">-&gt;<pos:position pos:line="122" pos:column="12"/></operator><name pos:line="122" pos:column="9">type<pos:position pos:line="122" pos:column="13"/></name></name> <operator pos:line="122" pos:column="14">=<pos:position pos:line="122" pos:column="15"/></operator> <name pos:line="122" pos:column="16">LFT_NONE<pos:position pos:line="122" pos:column="24"/></name></expr>;<pos:position pos:line="122" pos:column="25"/></expr_stmt>

    <for pos:line="124" pos:column="5">for <control pos:line="124" pos:column="9">(<init><expr><name pos:line="124" pos:column="10">lte<pos:position pos:line="124" pos:column="13"/></name> <operator pos:line="124" pos:column="14">=<pos:position pos:line="124" pos:column="15"/></operator> <name pos:line="124" pos:column="16">logformat_token_table<pos:position pos:line="124" pos:column="37"/></name></expr>;<pos:position pos:line="124" pos:column="38"/></init> <condition><expr><name><name pos:line="124" pos:column="39">lte<pos:position pos:line="124" pos:column="42"/></name><operator pos:line="124" pos:column="42">-&gt;<pos:position pos:line="124" pos:column="47"/></operator><name pos:line="124" pos:column="44">config<pos:position pos:line="124" pos:column="50"/></name></name> <operator pos:line="124" pos:column="51">!=<pos:position pos:line="124" pos:column="53"/></operator> <name pos:line="124" pos:column="54">NULL<pos:position pos:line="124" pos:column="58"/></name></expr>;<pos:position pos:line="124" pos:column="59"/></condition> <incr><expr><name pos:line="124" pos:column="60">lte<pos:position pos:line="124" pos:column="63"/></name><operator pos:line="124" pos:column="63">++<pos:position pos:line="124" pos:column="65"/></operator></expr></incr>)<pos:position pos:line="124" pos:column="66"/></control> <block pos:line="124" pos:column="67">{
        <if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><call><name pos:line="125" pos:column="13">strncmp<pos:position pos:line="125" pos:column="20"/></name><argument_list pos:line="125" pos:column="20">(<argument><expr><name><name pos:line="125" pos:column="21">lte<pos:position pos:line="125" pos:column="24"/></name><operator pos:line="125" pos:column="24">-&gt;<pos:position pos:line="125" pos:column="29"/></operator><name pos:line="125" pos:column="26">config<pos:position pos:line="125" pos:column="32"/></name></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="34">cur<pos:position pos:line="125" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="125" pos:column="39">strlen<pos:position pos:line="125" pos:column="45"/></name><argument_list pos:line="125" pos:column="45">(<argument><expr><name><name pos:line="125" pos:column="46">lte<pos:position pos:line="125" pos:column="49"/></name><operator pos:line="125" pos:column="49">-&gt;<pos:position pos:line="125" pos:column="54"/></operator><name pos:line="125" pos:column="51">config<pos:position pos:line="125" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="125" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="125" pos:column="59"/></argument_list></call> <operator pos:line="125" pos:column="60">==<pos:position pos:line="125" pos:column="62"/></operator> <literal type="number" pos:line="125" pos:column="63">0<pos:position pos:line="125" pos:column="64"/></literal></expr>)<pos:position pos:line="125" pos:column="65"/></condition><then pos:line="125" pos:column="65"> <block pos:line="125" pos:column="66">{
            <expr_stmt><expr><name><name pos:line="126" pos:column="13">lt<pos:position pos:line="126" pos:column="15"/></name><operator pos:line="126" pos:column="15">-&gt;<pos:position pos:line="126" pos:column="20"/></operator><name pos:line="126" pos:column="17">type<pos:position pos:line="126" pos:column="21"/></name></name> <operator pos:line="126" pos:column="22">=<pos:position pos:line="126" pos:column="23"/></operator> <name><name pos:line="126" pos:column="24">lte<pos:position pos:line="126" pos:column="27"/></name><operator pos:line="126" pos:column="27">-&gt;<pos:position pos:line="126" pos:column="32"/></operator><name pos:line="126" pos:column="29">token_type<pos:position pos:line="126" pos:column="39"/></name></name></expr>;<pos:position pos:line="126" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><name pos:line="127" pos:column="13">cur<pos:position pos:line="127" pos:column="16"/></name> <operator pos:line="127" pos:column="17">+=<pos:position pos:line="127" pos:column="19"/></operator> <call><name pos:line="127" pos:column="20">strlen<pos:position pos:line="127" pos:column="26"/></name><argument_list pos:line="127" pos:column="26">(<argument><expr><name><name pos:line="127" pos:column="27">lte<pos:position pos:line="127" pos:column="30"/></name><operator pos:line="127" pos:column="30">-&gt;<pos:position pos:line="127" pos:column="35"/></operator><name pos:line="127" pos:column="32">config<pos:position pos:line="127" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="40"/></expr_stmt>
            <break pos:line="128" pos:column="13">break;<pos:position pos:line="128" pos:column="19"/></break>
        }<pos:position pos:line="129" pos:column="10"/></block></then></if>
    }<pos:position pos:line="130" pos:column="6"/></block></for>

    <if pos:line="132" pos:column="5">if <condition pos:line="132" pos:column="8">(<expr><name><name pos:line="132" pos:column="9">lt<pos:position pos:line="132" pos:column="11"/></name><operator pos:line="132" pos:column="11">-&gt;<pos:position pos:line="132" pos:column="16"/></operator><name pos:line="132" pos:column="13">type<pos:position pos:line="132" pos:column="17"/></name></name> <operator pos:line="132" pos:column="18">==<pos:position pos:line="132" pos:column="20"/></operator> <name pos:line="132" pos:column="21">LFT_NONE<pos:position pos:line="132" pos:column="29"/></name></expr>)<pos:position pos:line="132" pos:column="30"/></condition><then pos:line="132" pos:column="30"> <block pos:line="132" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="133" pos:column="9">fatalf<pos:position pos:line="133" pos:column="15"/></name><argument_list pos:line="133" pos:column="15">(<argument><expr><literal type="string" pos:line="133" pos:column="16">"Can't parse configuration token: '%s'\n"<pos:position pos:line="133" pos:column="57"/></literal></expr></argument>,
               <argument><expr><name pos:line="134" pos:column="16">def<pos:position pos:line="134" pos:column="19"/></name></expr></argument>)<pos:position pos:line="134" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="135" pos:column="6"/></block></then></if>

    <if pos:line="137" pos:column="5">if <condition pos:line="137" pos:column="8">(<expr><operator pos:line="137" pos:column="9">*<pos:position pos:line="137" pos:column="10"/></operator><name pos:line="137" pos:column="10">cur<pos:position pos:line="137" pos:column="13"/></name> <operator pos:line="137" pos:column="14">==<pos:position pos:line="137" pos:column="16"/></operator> <literal type="char" pos:line="137" pos:column="17">' '<pos:position pos:line="137" pos:column="20"/></literal></expr>)<pos:position pos:line="137" pos:column="21"/></condition><then pos:line="137" pos:column="21"> <block pos:line="137" pos:column="22">{
        <expr_stmt><expr><name><name pos:line="138" pos:column="9">lt<pos:position pos:line="138" pos:column="11"/></name><operator pos:line="138" pos:column="11">-&gt;<pos:position pos:line="138" pos:column="16"/></operator><name pos:line="138" pos:column="13">space<pos:position pos:line="138" pos:column="18"/></name></name> <operator pos:line="138" pos:column="19">=<pos:position pos:line="138" pos:column="20"/></operator> <literal type="number" pos:line="138" pos:column="21">1<pos:position pos:line="138" pos:column="22"/></literal></expr>;<pos:position pos:line="138" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name pos:line="139" pos:column="9">cur<pos:position pos:line="139" pos:column="12"/></name><operator pos:line="139" pos:column="12">++<pos:position pos:line="139" pos:column="14"/></operator></expr>;<pos:position pos:line="139" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="140" pos:column="6"/></block></then></if>

<label><name pos:line="142" pos:column="1">done<pos:position pos:line="142" pos:column="5"/></name>:<pos:position pos:line="142" pos:column="6"/></label>

    <switch pos:line="144" pos:column="5">switch <condition pos:line="144" pos:column="12">(<expr><name><name pos:line="144" pos:column="13">lt<pos:position pos:line="144" pos:column="15"/></name><operator pos:line="144" pos:column="15">-&gt;<pos:position pos:line="144" pos:column="20"/></operator><name pos:line="144" pos:column="17">type<pos:position pos:line="144" pos:column="21"/></name></name></expr>)<pos:position pos:line="144" pos:column="22"/></condition> <block pos:line="144" pos:column="23">{

<cpp:if pos:line="146" pos:column="1">#<cpp:directive pos:line="146" pos:column="2">if<pos:position pos:line="146" pos:column="4"/></cpp:directive> <expr><name pos:line="146" pos:column="5">ICAP_CLIENT<pos:position pos:line="146" pos:column="16"/></name></expr></cpp:if>
    <case pos:line="147" pos:column="5">case <expr><name pos:line="147" pos:column="10">LFT_ICAP_LAST_MATCHED_HEADER<pos:position pos:line="147" pos:column="38"/></name></expr>:<pos:position pos:line="147" pos:column="39"/></case>

    <case pos:line="149" pos:column="5">case <expr><name pos:line="149" pos:column="10">LFT_ICAP_REQ_HEADER<pos:position pos:line="149" pos:column="29"/></name></expr>:<pos:position pos:line="149" pos:column="30"/></case>

    <case pos:line="151" pos:column="5">case <expr><name pos:line="151" pos:column="10">LFT_ICAP_REP_HEADER<pos:position pos:line="151" pos:column="29"/></name></expr>:<pos:position pos:line="151" pos:column="30"/></case>
<cpp:endif pos:line="152" pos:column="1">#<cpp:directive pos:line="152" pos:column="2">endif<pos:position pos:line="152" pos:column="7"/></cpp:directive></cpp:endif>

    <case pos:line="154" pos:column="5">case <expr><name pos:line="154" pos:column="10">LFT_ADAPTED_REQUEST_HEADER<pos:position pos:line="154" pos:column="36"/></name></expr>:<pos:position pos:line="154" pos:column="37"/></case>

    <case pos:line="156" pos:column="5">case <expr><name pos:line="156" pos:column="10">LFT_REQUEST_HEADER<pos:position pos:line="156" pos:column="28"/></name></expr>:<pos:position pos:line="156" pos:column="29"/></case>

    <case pos:line="158" pos:column="5">case <expr><name pos:line="158" pos:column="10">LFT_REPLY_HEADER<pos:position pos:line="158" pos:column="26"/></name></expr>:<pos:position pos:line="158" pos:column="27"/></case>

        <if pos:line="160" pos:column="9">if <condition pos:line="160" pos:column="12">(<expr><name><name pos:line="160" pos:column="13">lt<pos:position pos:line="160" pos:column="15"/></name><operator pos:line="160" pos:column="15">-&gt;<pos:position pos:line="160" pos:column="20"/></operator><name pos:line="160" pos:column="17">data<pos:position pos:line="160" pos:column="21"/></name><operator pos:line="160" pos:column="21">.<pos:position pos:line="160" pos:column="22"/></operator><name pos:line="160" pos:column="22">string<pos:position pos:line="160" pos:column="28"/></name></name></expr>)<pos:position pos:line="160" pos:column="29"/></condition><then pos:line="160" pos:column="29"> <block pos:line="160" pos:column="30">{
            <decl_stmt><decl><type><name pos:line="161" pos:column="13">char<pos:position pos:line="161" pos:column="17"/></name> <modifier pos:line="161" pos:column="18">*<pos:position pos:line="161" pos:column="19"/></modifier></type><name pos:line="161" pos:column="19">header<pos:position pos:line="161" pos:column="25"/></name> <init pos:line="161" pos:column="26">= <expr><name><name pos:line="161" pos:column="28">lt<pos:position pos:line="161" pos:column="30"/></name><operator pos:line="161" pos:column="30">-&gt;<pos:position pos:line="161" pos:column="35"/></operator><name pos:line="161" pos:column="32">data<pos:position pos:line="161" pos:column="36"/></name><operator pos:line="161" pos:column="36">.<pos:position pos:line="161" pos:column="37"/></operator><name pos:line="161" pos:column="37">string<pos:position pos:line="161" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="161" pos:column="44"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="162" pos:column="13">char<pos:position pos:line="162" pos:column="17"/></name> <modifier pos:line="162" pos:column="18">*<pos:position pos:line="162" pos:column="19"/></modifier></type><name pos:line="162" pos:column="19">cp<pos:position pos:line="162" pos:column="21"/></name> <init pos:line="162" pos:column="22">= <expr><call><name pos:line="162" pos:column="24">strchr<pos:position pos:line="162" pos:column="30"/></name><argument_list pos:line="162" pos:column="30">(<argument><expr><name pos:line="162" pos:column="31">header<pos:position pos:line="162" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="162" pos:column="39">':'<pos:position pos:line="162" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="162" pos:column="44"/></decl_stmt>

            <if pos:line="164" pos:column="13">if <condition pos:line="164" pos:column="16">(<expr><name pos:line="164" pos:column="17">cp<pos:position pos:line="164" pos:column="19"/></name></expr>)<pos:position pos:line="164" pos:column="20"/></condition><then pos:line="164" pos:column="20"> <block pos:line="164" pos:column="21">{
                <expr_stmt><expr><operator pos:line="165" pos:column="17">*<pos:position pos:line="165" pos:column="18"/></operator><name pos:line="165" pos:column="18">cp<pos:position pos:line="165" pos:column="20"/></name><operator pos:line="165" pos:column="20">++<pos:position pos:line="165" pos:column="22"/></operator> <operator pos:line="165" pos:column="23">=<pos:position pos:line="165" pos:column="24"/></operator> <literal type="char" pos:line="165" pos:column="25">'\0'<pos:position pos:line="165" pos:column="29"/></literal></expr>;<pos:position pos:line="165" pos:column="30"/></expr_stmt>

                <if pos:line="167" pos:column="17">if <condition pos:line="167" pos:column="20">(<expr><operator pos:line="167" pos:column="21">*<pos:position pos:line="167" pos:column="22"/></operator><name pos:line="167" pos:column="22">cp<pos:position pos:line="167" pos:column="24"/></name> <operator pos:line="167" pos:column="25">==<pos:position pos:line="167" pos:column="27"/></operator> <literal type="char" pos:line="167" pos:column="28">','<pos:position pos:line="167" pos:column="31"/></literal> <operator pos:line="167" pos:column="32">||<pos:position pos:line="167" pos:column="34"/></operator> <operator pos:line="167" pos:column="35">*<pos:position pos:line="167" pos:column="36"/></operator><name pos:line="167" pos:column="36">cp<pos:position pos:line="167" pos:column="38"/></name> <operator pos:line="167" pos:column="39">==<pos:position pos:line="167" pos:column="41"/></operator> <literal type="char" pos:line="167" pos:column="42">';'<pos:position pos:line="167" pos:column="45"/></literal> <operator pos:line="167" pos:column="46">||<pos:position pos:line="167" pos:column="48"/></operator> <operator pos:line="167" pos:column="49">*<pos:position pos:line="167" pos:column="50"/></operator><name pos:line="167" pos:column="50">cp<pos:position pos:line="167" pos:column="52"/></name> <operator pos:line="167" pos:column="53">==<pos:position pos:line="167" pos:column="55"/></operator> <literal type="char" pos:line="167" pos:column="56">':'<pos:position pos:line="167" pos:column="59"/></literal></expr>)<pos:position pos:line="167" pos:column="60"/></condition><then pos:line="167" pos:column="60">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="168" pos:column="21">lt<pos:position pos:line="168" pos:column="23"/></name><operator pos:line="168" pos:column="23">-&gt;<pos:position pos:line="168" pos:column="28"/></operator><name pos:line="168" pos:column="25">data<pos:position pos:line="168" pos:column="29"/></name><operator pos:line="168" pos:column="29">.<pos:position pos:line="168" pos:column="30"/></operator><name pos:line="168" pos:column="30">header<pos:position pos:line="168" pos:column="36"/></name><operator pos:line="168" pos:column="36">.<pos:position pos:line="168" pos:column="37"/></operator><name pos:line="168" pos:column="37">separator<pos:position pos:line="168" pos:column="46"/></name></name> <operator pos:line="168" pos:column="47">=<pos:position pos:line="168" pos:column="48"/></operator> <operator pos:line="168" pos:column="49">*<pos:position pos:line="168" pos:column="50"/></operator><name pos:line="168" pos:column="50">cp<pos:position pos:line="168" pos:column="52"/></name><operator pos:line="168" pos:column="52">++<pos:position pos:line="168" pos:column="54"/></operator></expr>;<pos:position pos:line="168" pos:column="55"/></expr_stmt></block></then>
                <else pos:line="169" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="170" pos:column="21">lt<pos:position pos:line="170" pos:column="23"/></name><operator pos:line="170" pos:column="23">-&gt;<pos:position pos:line="170" pos:column="28"/></operator><name pos:line="170" pos:column="25">data<pos:position pos:line="170" pos:column="29"/></name><operator pos:line="170" pos:column="29">.<pos:position pos:line="170" pos:column="30"/></operator><name pos:line="170" pos:column="30">header<pos:position pos:line="170" pos:column="36"/></name><operator pos:line="170" pos:column="36">.<pos:position pos:line="170" pos:column="37"/></operator><name pos:line="170" pos:column="37">separator<pos:position pos:line="170" pos:column="46"/></name></name> <operator pos:line="170" pos:column="47">=<pos:position pos:line="170" pos:column="48"/></operator> <literal type="char" pos:line="170" pos:column="49">','<pos:position pos:line="170" pos:column="52"/></literal></expr>;<pos:position pos:line="170" pos:column="53"/></expr_stmt></block></else></if>

                <expr_stmt><expr><name><name pos:line="172" pos:column="17">lt<pos:position pos:line="172" pos:column="19"/></name><operator pos:line="172" pos:column="19">-&gt;<pos:position pos:line="172" pos:column="24"/></operator><name pos:line="172" pos:column="21">data<pos:position pos:line="172" pos:column="25"/></name><operator pos:line="172" pos:column="25">.<pos:position pos:line="172" pos:column="26"/></operator><name pos:line="172" pos:column="26">header<pos:position pos:line="172" pos:column="32"/></name><operator pos:line="172" pos:column="32">.<pos:position pos:line="172" pos:column="33"/></operator><name pos:line="172" pos:column="33">element<pos:position pos:line="172" pos:column="40"/></name></name> <operator pos:line="172" pos:column="41">=<pos:position pos:line="172" pos:column="42"/></operator> <name pos:line="172" pos:column="43">cp<pos:position pos:line="172" pos:column="45"/></name></expr>;<pos:position pos:line="172" pos:column="46"/></expr_stmt>

                <switch pos:line="174" pos:column="17">switch <condition pos:line="174" pos:column="24">(<expr><name><name pos:line="174" pos:column="25">lt<pos:position pos:line="174" pos:column="27"/></name><operator pos:line="174" pos:column="27">-&gt;<pos:position pos:line="174" pos:column="32"/></operator><name pos:line="174" pos:column="29">type<pos:position pos:line="174" pos:column="33"/></name></name></expr>)<pos:position pos:line="174" pos:column="34"/></condition> <block pos:line="174" pos:column="35">{
                <case pos:line="175" pos:column="17">case <expr><name pos:line="175" pos:column="22">LFT_REQUEST_HEADER<pos:position pos:line="175" pos:column="40"/></name></expr>:<pos:position pos:line="175" pos:column="41"/></case>
                    <expr_stmt><expr><name><name pos:line="176" pos:column="21">lt<pos:position pos:line="176" pos:column="23"/></name><operator pos:line="176" pos:column="23">-&gt;<pos:position pos:line="176" pos:column="28"/></operator><name pos:line="176" pos:column="25">type<pos:position pos:line="176" pos:column="29"/></name></name> <operator pos:line="176" pos:column="30">=<pos:position pos:line="176" pos:column="31"/></operator> <name pos:line="176" pos:column="32">LFT_REQUEST_HEADER_ELEM<pos:position pos:line="176" pos:column="55"/></name></expr>;<pos:position pos:line="176" pos:column="56"/></expr_stmt>
                    <break pos:line="177" pos:column="21">break;<pos:position pos:line="177" pos:column="27"/></break>

                <case pos:line="179" pos:column="17">case <expr><name pos:line="179" pos:column="22">LFT_ADAPTED_REQUEST_HEADER<pos:position pos:line="179" pos:column="48"/></name></expr>:<pos:position pos:line="179" pos:column="49"/></case>
                    <expr_stmt><expr><name><name pos:line="180" pos:column="21">lt<pos:position pos:line="180" pos:column="23"/></name><operator pos:line="180" pos:column="23">-&gt;<pos:position pos:line="180" pos:column="28"/></operator><name pos:line="180" pos:column="25">type<pos:position pos:line="180" pos:column="29"/></name></name> <operator pos:line="180" pos:column="30">=<pos:position pos:line="180" pos:column="31"/></operator> <name pos:line="180" pos:column="32">LFT_ADAPTED_REQUEST_HEADER_ELEM<pos:position pos:line="180" pos:column="63"/></name></expr>;<pos:position pos:line="180" pos:column="64"/></expr_stmt>
                    <break pos:line="181" pos:column="21">break;<pos:position pos:line="181" pos:column="27"/></break>

                <case pos:line="183" pos:column="17">case <expr><name pos:line="183" pos:column="22">LFT_REPLY_HEADER<pos:position pos:line="183" pos:column="38"/></name></expr>:<pos:position pos:line="183" pos:column="39"/></case>
                    <expr_stmt><expr><name><name pos:line="184" pos:column="21">lt<pos:position pos:line="184" pos:column="23"/></name><operator pos:line="184" pos:column="23">-&gt;<pos:position pos:line="184" pos:column="28"/></operator><name pos:line="184" pos:column="25">type<pos:position pos:line="184" pos:column="29"/></name></name> <operator pos:line="184" pos:column="30">=<pos:position pos:line="184" pos:column="31"/></operator> <name pos:line="184" pos:column="32">LFT_REPLY_HEADER_ELEM<pos:position pos:line="184" pos:column="53"/></name></expr>;<pos:position pos:line="184" pos:column="54"/></expr_stmt>
                    <break pos:line="185" pos:column="21">break;<pos:position pos:line="185" pos:column="27"/></break>
<cpp:if pos:line="186" pos:column="1">#<cpp:directive pos:line="186" pos:column="2">if<pos:position pos:line="186" pos:column="4"/></cpp:directive> <expr><name pos:line="186" pos:column="5">ICAP_CLIENT<pos:position pos:line="186" pos:column="16"/></name></expr></cpp:if>
                <case pos:line="187" pos:column="17">case <expr><name pos:line="187" pos:column="22">LFT_ICAP_LAST_MATCHED_HEADER<pos:position pos:line="187" pos:column="50"/></name></expr>:<pos:position pos:line="187" pos:column="51"/></case>
                    <expr_stmt><expr><name><name pos:line="188" pos:column="21">lt<pos:position pos:line="188" pos:column="23"/></name><operator pos:line="188" pos:column="23">-&gt;<pos:position pos:line="188" pos:column="28"/></operator><name pos:line="188" pos:column="25">type<pos:position pos:line="188" pos:column="29"/></name></name> <operator pos:line="188" pos:column="30">=<pos:position pos:line="188" pos:column="31"/></operator> <name pos:line="188" pos:column="32">LFT_ICAP_LAST_MATCHED_HEADER_ELEM<pos:position pos:line="188" pos:column="65"/></name></expr>;<pos:position pos:line="188" pos:column="66"/></expr_stmt>
                    <break pos:line="189" pos:column="21">break;<pos:position pos:line="189" pos:column="27"/></break>
                <case pos:line="190" pos:column="17">case <expr><name pos:line="190" pos:column="22">LFT_ICAP_REQ_HEADER<pos:position pos:line="190" pos:column="41"/></name></expr>:<pos:position pos:line="190" pos:column="42"/></case>
                    <expr_stmt><expr><name><name pos:line="191" pos:column="21">lt<pos:position pos:line="191" pos:column="23"/></name><operator pos:line="191" pos:column="23">-&gt;<pos:position pos:line="191" pos:column="28"/></operator><name pos:line="191" pos:column="25">type<pos:position pos:line="191" pos:column="29"/></name></name> <operator pos:line="191" pos:column="30">=<pos:position pos:line="191" pos:column="31"/></operator> <name pos:line="191" pos:column="32">LFT_ICAP_REQ_HEADER_ELEM<pos:position pos:line="191" pos:column="56"/></name></expr>;<pos:position pos:line="191" pos:column="57"/></expr_stmt>
                    <break pos:line="192" pos:column="21">break;<pos:position pos:line="192" pos:column="27"/></break>
                <case pos:line="193" pos:column="17">case <expr><name pos:line="193" pos:column="22">LFT_ICAP_REP_HEADER<pos:position pos:line="193" pos:column="41"/></name></expr>:<pos:position pos:line="193" pos:column="42"/></case>
                    <expr_stmt><expr><name><name pos:line="194" pos:column="21">lt<pos:position pos:line="194" pos:column="23"/></name><operator pos:line="194" pos:column="23">-&gt;<pos:position pos:line="194" pos:column="28"/></operator><name pos:line="194" pos:column="25">type<pos:position pos:line="194" pos:column="29"/></name></name> <operator pos:line="194" pos:column="30">=<pos:position pos:line="194" pos:column="31"/></operator> <name pos:line="194" pos:column="32">LFT_ICAP_REP_HEADER_ELEM<pos:position pos:line="194" pos:column="56"/></name></expr>;<pos:position pos:line="194" pos:column="57"/></expr_stmt>
                    <break pos:line="195" pos:column="21">break;<pos:position pos:line="195" pos:column="27"/></break>
<cpp:endif pos:line="196" pos:column="1">#<cpp:directive pos:line="196" pos:column="2">endif<pos:position pos:line="196" pos:column="7"/></cpp:directive></cpp:endif>
                <default pos:line="197" pos:column="17">default:<pos:position pos:line="197" pos:column="25"/></default>
                    <break pos:line="198" pos:column="21">break;<pos:position pos:line="198" pos:column="27"/></break>
                }<pos:position pos:line="199" pos:column="18"/></block></switch>
            }<pos:position pos:line="200" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="202" pos:column="13">lt<pos:position pos:line="202" pos:column="15"/></name><operator pos:line="202" pos:column="15">-&gt;<pos:position pos:line="202" pos:column="20"/></operator><name pos:line="202" pos:column="17">data<pos:position pos:line="202" pos:column="21"/></name><operator pos:line="202" pos:column="21">.<pos:position pos:line="202" pos:column="22"/></operator><name pos:line="202" pos:column="22">header<pos:position pos:line="202" pos:column="28"/></name><operator pos:line="202" pos:column="28">.<pos:position pos:line="202" pos:column="29"/></operator><name pos:line="202" pos:column="29">header<pos:position pos:line="202" pos:column="35"/></name></name> <operator pos:line="202" pos:column="36">=<pos:position pos:line="202" pos:column="37"/></operator> <name pos:line="202" pos:column="38">header<pos:position pos:line="202" pos:column="44"/></name></expr>;<pos:position pos:line="202" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="203" pos:column="10"/></block></then> <else pos:line="203" pos:column="11">else <block pos:line="203" pos:column="16">{
            <switch pos:line="204" pos:column="13">switch <condition pos:line="204" pos:column="20">(<expr><name><name pos:line="204" pos:column="21">lt<pos:position pos:line="204" pos:column="23"/></name><operator pos:line="204" pos:column="23">-&gt;<pos:position pos:line="204" pos:column="28"/></operator><name pos:line="204" pos:column="25">type<pos:position pos:line="204" pos:column="29"/></name></name></expr>)<pos:position pos:line="204" pos:column="30"/></condition> <block pos:line="204" pos:column="31">{
            <case pos:line="205" pos:column="13">case <expr><name pos:line="205" pos:column="18">LFT_REQUEST_HEADER<pos:position pos:line="205" pos:column="36"/></name></expr>:<pos:position pos:line="205" pos:column="37"/></case>
                <expr_stmt><expr><name><name pos:line="206" pos:column="17">lt<pos:position pos:line="206" pos:column="19"/></name><operator pos:line="206" pos:column="19">-&gt;<pos:position pos:line="206" pos:column="24"/></operator><name pos:line="206" pos:column="21">type<pos:position pos:line="206" pos:column="25"/></name></name> <operator pos:line="206" pos:column="26">=<pos:position pos:line="206" pos:column="27"/></operator> <name pos:line="206" pos:column="28">LFT_REQUEST_ALL_HEADERS<pos:position pos:line="206" pos:column="51"/></name></expr>;<pos:position pos:line="206" pos:column="52"/></expr_stmt>
                <break pos:line="207" pos:column="17">break;<pos:position pos:line="207" pos:column="23"/></break>

            <case pos:line="209" pos:column="13">case <expr><name pos:line="209" pos:column="18">LFT_ADAPTED_REQUEST_HEADER<pos:position pos:line="209" pos:column="44"/></name></expr>:<pos:position pos:line="209" pos:column="45"/></case>
                <expr_stmt><expr><name><name pos:line="210" pos:column="17">lt<pos:position pos:line="210" pos:column="19"/></name><operator pos:line="210" pos:column="19">-&gt;<pos:position pos:line="210" pos:column="24"/></operator><name pos:line="210" pos:column="21">type<pos:position pos:line="210" pos:column="25"/></name></name> <operator pos:line="210" pos:column="26">=<pos:position pos:line="210" pos:column="27"/></operator> <name pos:line="210" pos:column="28">LFT_ADAPTED_REQUEST_ALL_HEADERS<pos:position pos:line="210" pos:column="59"/></name></expr>;<pos:position pos:line="210" pos:column="60"/></expr_stmt>
                <break pos:line="211" pos:column="17">break;<pos:position pos:line="211" pos:column="23"/></break>

            <case pos:line="213" pos:column="13">case <expr><name pos:line="213" pos:column="18">LFT_REPLY_HEADER<pos:position pos:line="213" pos:column="34"/></name></expr>:<pos:position pos:line="213" pos:column="35"/></case>
                <expr_stmt><expr><name><name pos:line="214" pos:column="17">lt<pos:position pos:line="214" pos:column="19"/></name><operator pos:line="214" pos:column="19">-&gt;<pos:position pos:line="214" pos:column="24"/></operator><name pos:line="214" pos:column="21">type<pos:position pos:line="214" pos:column="25"/></name></name> <operator pos:line="214" pos:column="26">=<pos:position pos:line="214" pos:column="27"/></operator> <name pos:line="214" pos:column="28">LFT_REPLY_ALL_HEADERS<pos:position pos:line="214" pos:column="49"/></name></expr>;<pos:position pos:line="214" pos:column="50"/></expr_stmt>
                <break pos:line="215" pos:column="17">break;<pos:position pos:line="215" pos:column="23"/></break>
<cpp:if pos:line="216" pos:column="1">#<cpp:directive pos:line="216" pos:column="2">if<pos:position pos:line="216" pos:column="4"/></cpp:directive> <expr><name pos:line="216" pos:column="5">ICAP_CLIENT<pos:position pos:line="216" pos:column="16"/></name></expr></cpp:if>
            <case pos:line="217" pos:column="13">case <expr><name pos:line="217" pos:column="18">LFT_ICAP_LAST_MATCHED_HEADER<pos:position pos:line="217" pos:column="46"/></name></expr>:<pos:position pos:line="217" pos:column="47"/></case>
                <expr_stmt><expr><name><name pos:line="218" pos:column="17">lt<pos:position pos:line="218" pos:column="19"/></name><operator pos:line="218" pos:column="19">-&gt;<pos:position pos:line="218" pos:column="24"/></operator><name pos:line="218" pos:column="21">type<pos:position pos:line="218" pos:column="25"/></name></name> <operator pos:line="218" pos:column="26">=<pos:position pos:line="218" pos:column="27"/></operator> <name pos:line="218" pos:column="28">LFT_ICAP_LAST_MATCHED_ALL_HEADERS<pos:position pos:line="218" pos:column="61"/></name></expr>;<pos:position pos:line="218" pos:column="62"/></expr_stmt>
                <break pos:line="219" pos:column="17">break;<pos:position pos:line="219" pos:column="23"/></break>
            <case pos:line="220" pos:column="13">case <expr><name pos:line="220" pos:column="18">LFT_ICAP_REQ_HEADER<pos:position pos:line="220" pos:column="37"/></name></expr>:<pos:position pos:line="220" pos:column="38"/></case>
                <expr_stmt><expr><name><name pos:line="221" pos:column="17">lt<pos:position pos:line="221" pos:column="19"/></name><operator pos:line="221" pos:column="19">-&gt;<pos:position pos:line="221" pos:column="24"/></operator><name pos:line="221" pos:column="21">type<pos:position pos:line="221" pos:column="25"/></name></name> <operator pos:line="221" pos:column="26">=<pos:position pos:line="221" pos:column="27"/></operator> <name pos:line="221" pos:column="28">LFT_ICAP_REQ_ALL_HEADERS<pos:position pos:line="221" pos:column="52"/></name></expr>;<pos:position pos:line="221" pos:column="53"/></expr_stmt>
                <break pos:line="222" pos:column="17">break;<pos:position pos:line="222" pos:column="23"/></break>
            <case pos:line="223" pos:column="13">case <expr><name pos:line="223" pos:column="18">LFT_ICAP_REP_HEADER<pos:position pos:line="223" pos:column="37"/></name></expr>:<pos:position pos:line="223" pos:column="38"/></case>
                <expr_stmt><expr><name><name pos:line="224" pos:column="17">lt<pos:position pos:line="224" pos:column="19"/></name><operator pos:line="224" pos:column="19">-&gt;<pos:position pos:line="224" pos:column="24"/></operator><name pos:line="224" pos:column="21">type<pos:position pos:line="224" pos:column="25"/></name></name> <operator pos:line="224" pos:column="26">=<pos:position pos:line="224" pos:column="27"/></operator> <name pos:line="224" pos:column="28">LFT_ICAP_REP_ALL_HEADERS<pos:position pos:line="224" pos:column="52"/></name></expr>;<pos:position pos:line="224" pos:column="53"/></expr_stmt>
                <break pos:line="225" pos:column="17">break;<pos:position pos:line="225" pos:column="23"/></break>
<cpp:endif pos:line="226" pos:column="1">#<cpp:directive pos:line="226" pos:column="2">endif<pos:position pos:line="226" pos:column="7"/></cpp:directive></cpp:endif>
            <default pos:line="227" pos:column="13">default:<pos:position pos:line="227" pos:column="21"/></default>
                <break pos:line="228" pos:column="17">break;<pos:position pos:line="228" pos:column="23"/></break>
            }<pos:position pos:line="229" pos:column="14"/></block></switch>
            <expr_stmt><expr><name><name pos:line="230" pos:column="13">Config<pos:position pos:line="230" pos:column="19"/></name><operator pos:line="230" pos:column="19">.<pos:position pos:line="230" pos:column="20"/></operator><name pos:line="230" pos:column="20">onoff<pos:position pos:line="230" pos:column="25"/></name><operator pos:line="230" pos:column="25">.<pos:position pos:line="230" pos:column="26"/></operator><name pos:line="230" pos:column="26">log_mime_hdrs<pos:position pos:line="230" pos:column="39"/></name></name> <operator pos:line="230" pos:column="40">=<pos:position pos:line="230" pos:column="41"/></operator> <literal type="number" pos:line="230" pos:column="42">1<pos:position pos:line="230" pos:column="43"/></literal></expr>;<pos:position pos:line="230" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="231" pos:column="10"/></block></else></if>

        <break pos:line="233" pos:column="9">break;<pos:position pos:line="233" pos:column="15"/></break>

    <case pos:line="235" pos:column="5">case <expr><name pos:line="235" pos:column="10">LFT_CLIENT_FQDN<pos:position pos:line="235" pos:column="25"/></name></expr>:<pos:position pos:line="235" pos:column="26"/></case>
        <expr_stmt><expr><name><name pos:line="236" pos:column="9">Config<pos:position pos:line="236" pos:column="15"/></name><operator pos:line="236" pos:column="15">.<pos:position pos:line="236" pos:column="16"/></operator><name pos:line="236" pos:column="16">onoff<pos:position pos:line="236" pos:column="21"/></name><operator pos:line="236" pos:column="21">.<pos:position pos:line="236" pos:column="22"/></operator><name pos:line="236" pos:column="22">log_fqdn<pos:position pos:line="236" pos:column="30"/></name></name> <operator pos:line="236" pos:column="31">=<pos:position pos:line="236" pos:column="32"/></operator> <literal type="number" pos:line="236" pos:column="33">1<pos:position pos:line="236" pos:column="34"/></literal></expr>;<pos:position pos:line="236" pos:column="35"/></expr_stmt>
        <break pos:line="237" pos:column="9">break;<pos:position pos:line="237" pos:column="15"/></break>

    <case pos:line="239" pos:column="5">case <expr><name pos:line="239" pos:column="10">LFT_TIME_SUBSECOND<pos:position pos:line="239" pos:column="28"/></name></expr>:<pos:position pos:line="239" pos:column="29"/></case>
        <expr_stmt><expr><name><name pos:line="240" pos:column="9">lt<pos:position pos:line="240" pos:column="11"/></name><operator pos:line="240" pos:column="11">-&gt;<pos:position pos:line="240" pos:column="16"/></operator><name pos:line="240" pos:column="13">divisor<pos:position pos:line="240" pos:column="20"/></name></name> <operator pos:line="240" pos:column="21">=<pos:position pos:line="240" pos:column="22"/></operator> <literal type="number" pos:line="240" pos:column="23">1000<pos:position pos:line="240" pos:column="27"/></literal></expr>;<pos:position pos:line="240" pos:column="28"/></expr_stmt>

        <if pos:line="242" pos:column="9">if <condition pos:line="242" pos:column="12">(<expr><name><name pos:line="242" pos:column="13">lt<pos:position pos:line="242" pos:column="15"/></name><operator pos:line="242" pos:column="15">-&gt;<pos:position pos:line="242" pos:column="20"/></operator><name pos:line="242" pos:column="17">precision<pos:position pos:line="242" pos:column="26"/></name></name></expr>)<pos:position pos:line="242" pos:column="27"/></condition><then pos:line="242" pos:column="27"> <block pos:line="242" pos:column="28">{
            <decl_stmt><decl><type><name pos:line="243" pos:column="13">int<pos:position pos:line="243" pos:column="16"/></name></type> <name pos:line="243" pos:column="17">i<pos:position pos:line="243" pos:column="18"/></name></decl>;<pos:position pos:line="243" pos:column="19"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="244" pos:column="13">lt<pos:position pos:line="244" pos:column="15"/></name><operator pos:line="244" pos:column="15">-&gt;<pos:position pos:line="244" pos:column="20"/></operator><name pos:line="244" pos:column="17">divisor<pos:position pos:line="244" pos:column="24"/></name></name> <operator pos:line="244" pos:column="25">=<pos:position pos:line="244" pos:column="26"/></operator> <literal type="number" pos:line="244" pos:column="27">1000000<pos:position pos:line="244" pos:column="34"/></literal></expr>;<pos:position pos:line="244" pos:column="35"/></expr_stmt>

            <for pos:line="246" pos:column="13">for <control pos:line="246" pos:column="17">(<init><expr><name pos:line="246" pos:column="18">i<pos:position pos:line="246" pos:column="19"/></name> <operator pos:line="246" pos:column="20">=<pos:position pos:line="246" pos:column="21"/></operator> <name><name pos:line="246" pos:column="22">lt<pos:position pos:line="246" pos:column="24"/></name><operator pos:line="246" pos:column="24">-&gt;<pos:position pos:line="246" pos:column="29"/></operator><name pos:line="246" pos:column="26">precision<pos:position pos:line="246" pos:column="35"/></name></name></expr>;<pos:position pos:line="246" pos:column="36"/></init> <condition><expr><name pos:line="246" pos:column="37">i<pos:position pos:line="246" pos:column="38"/></name> <operator pos:line="246" pos:column="39">&gt;<pos:position pos:line="246" pos:column="43"/></operator> <literal type="number" pos:line="246" pos:column="41">1<pos:position pos:line="246" pos:column="42"/></literal></expr>;<pos:position pos:line="246" pos:column="43"/></condition> <incr><expr><name pos:line="246" pos:column="44">i<pos:position pos:line="246" pos:column="45"/></name><operator pos:line="246" pos:column="45">--<pos:position pos:line="246" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="246" pos:column="48"/></control>
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="247" pos:column="17">lt<pos:position pos:line="247" pos:column="19"/></name><operator pos:line="247" pos:column="19">-&gt;<pos:position pos:line="247" pos:column="24"/></operator><name pos:line="247" pos:column="21">divisor<pos:position pos:line="247" pos:column="28"/></name></name> <operator pos:line="247" pos:column="29">/=<pos:position pos:line="247" pos:column="31"/></operator> <literal type="number" pos:line="247" pos:column="32">10<pos:position pos:line="247" pos:column="34"/></literal></expr>;<pos:position pos:line="247" pos:column="35"/></expr_stmt></block></for>

            <if pos:line="249" pos:column="13">if <condition pos:line="249" pos:column="16">(<expr><operator pos:line="249" pos:column="17">!<pos:position pos:line="249" pos:column="18"/></operator><name><name pos:line="249" pos:column="18">lt<pos:position pos:line="249" pos:column="20"/></name><operator pos:line="249" pos:column="20">-&gt;<pos:position pos:line="249" pos:column="25"/></operator><name pos:line="249" pos:column="22">divisor<pos:position pos:line="249" pos:column="29"/></name></name></expr>)<pos:position pos:line="249" pos:column="30"/></condition><then pos:line="249" pos:column="30">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="250" pos:column="17">lt<pos:position pos:line="250" pos:column="19"/></name><operator pos:line="250" pos:column="19">-&gt;<pos:position pos:line="250" pos:column="24"/></operator><name pos:line="250" pos:column="21">divisor<pos:position pos:line="250" pos:column="28"/></name></name> <operator pos:line="250" pos:column="29">=<pos:position pos:line="250" pos:column="30"/></operator> <literal type="number" pos:line="250" pos:column="31">0<pos:position pos:line="250" pos:column="32"/></literal></expr>;<pos:position pos:line="250" pos:column="33"/></expr_stmt></block></then></if>
        }<pos:position pos:line="251" pos:column="10"/></block></then></if>

        <break pos:line="253" pos:column="9">break;<pos:position pos:line="253" pos:column="15"/></break>

    <case pos:line="255" pos:column="5">case <expr><name pos:line="255" pos:column="10">LFT_HTTP_SENT_STATUS_CODE_OLD_30<pos:position pos:line="255" pos:column="42"/></name></expr>:<pos:position pos:line="255" pos:column="43"/></case>
        <expr_stmt><expr><call><name pos:line="256" pos:column="9">debugs<pos:position pos:line="256" pos:column="15"/></name><argument_list pos:line="256" pos:column="15">(<argument><expr><literal type="number" pos:line="256" pos:column="16">46<pos:position pos:line="256" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="256" pos:column="20">0<pos:position pos:line="256" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="256" pos:column="23">"WARNING: the \"Hs\" formating code is deprecated use the \"&gt;Hs\" instead"<pos:position pos:line="256" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="256" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="256" pos:column="99"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="257" pos:column="9">lt<pos:position pos:line="257" pos:column="11"/></name><operator pos:line="257" pos:column="11">-&gt;<pos:position pos:line="257" pos:column="16"/></operator><name pos:line="257" pos:column="13">type<pos:position pos:line="257" pos:column="17"/></name></name> <operator pos:line="257" pos:column="18">=<pos:position pos:line="257" pos:column="19"/></operator> <name pos:line="257" pos:column="20">LFT_HTTP_SENT_STATUS_CODE<pos:position pos:line="257" pos:column="45"/></name></expr>;<pos:position pos:line="257" pos:column="46"/></expr_stmt>
        <break pos:line="258" pos:column="9">break;<pos:position pos:line="258" pos:column="15"/></break>

    <case pos:line="260" pos:column="5">case <expr><name pos:line="260" pos:column="10">LFT_PEER_LOCAL_IP_OLD_27<pos:position pos:line="260" pos:column="34"/></name></expr>:<pos:position pos:line="260" pos:column="35"/></case>
        <expr_stmt><expr><call><name pos:line="261" pos:column="9">debugs<pos:position pos:line="261" pos:column="15"/></name><argument_list pos:line="261" pos:column="15">(<argument><expr><literal type="number" pos:line="261" pos:column="16">46<pos:position pos:line="261" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="261" pos:column="20">0<pos:position pos:line="261" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="261" pos:column="23">"WARNING: The \"oa\" formatting code is deprecated. Use the \"&lt;la\" instead."<pos:position pos:line="261" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="261" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="102"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="262" pos:column="9">lt<pos:position pos:line="262" pos:column="11"/></name><operator pos:line="262" pos:column="11">-&gt;<pos:position pos:line="262" pos:column="16"/></operator><name pos:line="262" pos:column="13">type<pos:position pos:line="262" pos:column="17"/></name></name> <operator pos:line="262" pos:column="18">=<pos:position pos:line="262" pos:column="19"/></operator> <name pos:line="262" pos:column="20">LFT_PEER_LOCAL_IP<pos:position pos:line="262" pos:column="37"/></name></expr>;<pos:position pos:line="262" pos:column="38"/></expr_stmt>
        <break pos:line="263" pos:column="9">break;<pos:position pos:line="263" pos:column="15"/></break>

    <default pos:line="265" pos:column="5">default:<pos:position pos:line="265" pos:column="13"/></default>
        <break pos:line="266" pos:column="9">break;<pos:position pos:line="266" pos:column="15"/></break>
    }<pos:position pos:line="267" pos:column="6"/></block></switch>

    <return pos:line="269" pos:column="5">return <expr><operator pos:line="269" pos:column="12">(<pos:position pos:line="269" pos:column="13"/></operator><name pos:line="269" pos:column="13">cur<pos:position pos:line="269" pos:column="16"/></name> <operator pos:line="269" pos:column="17">-<pos:position pos:line="269" pos:column="18"/></operator> <name pos:line="269" pos:column="19">def<pos:position pos:line="269" pos:column="22"/></name><operator pos:line="269" pos:column="22">)<pos:position pos:line="269" pos:column="23"/></operator></expr>;<pos:position pos:line="269" pos:column="24"/></return>
}<pos:position pos:line="270" pos:column="2"/></block></function></unit>

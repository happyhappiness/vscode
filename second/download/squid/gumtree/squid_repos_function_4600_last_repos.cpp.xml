<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4600_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Server<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">doProcessRequest<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// zero pipelinePrefetchMax() ensures that there is only parsed request</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><call><name><name pos:line="5" pos:column="10">pipeline<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">.<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">count<pos:position pos:line="5" pos:column="24"/></name></name><argument_list pos:line="5" pos:column="24">()<pos:position pos:line="5" pos:column="26"/></argument_list></call> <operator pos:line="5" pos:column="27">==<pos:position pos:line="5" pos:column="29"/></operator> <literal type="number" pos:line="5" pos:column="30">1<pos:position pos:line="5" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">Http<pos:position pos:line="6" pos:column="9"/></name><operator pos:line="6" pos:column="9">::<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">StreamPointer<pos:position pos:line="6" pos:column="24"/></name></name></type> <name pos:line="6" pos:column="25">context<pos:position pos:line="6" pos:column="32"/></name> <init pos:line="6" pos:column="33">= <expr><call><name><name pos:line="6" pos:column="35">pipeline<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">.<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="44">front<pos:position pos:line="6" pos:column="49"/></name></name><argument_list pos:line="6" pos:column="49">()<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="52"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">Must<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">context<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">!=<pos:position pos:line="7" pos:column="20"/></operator> <literal type="null" pos:line="7" pos:column="21">nullptr<pos:position pos:line="7" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">ClientHttpRequest<pos:position pos:line="9" pos:column="22"/></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier><specifier pos:line="9" pos:column="24">const<pos:position pos:line="9" pos:column="29"/></specifier></type> <name pos:line="9" pos:column="30">http<pos:position pos:line="9" pos:column="34"/></name> <init pos:line="9" pos:column="35">= <expr><name><name pos:line="9" pos:column="37">context<pos:position pos:line="9" pos:column="44"/></name><operator pos:line="9" pos:column="44">-&gt;<pos:position pos:line="9" pos:column="49"/></operator><name pos:line="9" pos:column="46">http<pos:position pos:line="9" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="51"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">http<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">!=<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">HttpRequest<pos:position pos:line="12" pos:column="16"/></name> <modifier pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></modifier><specifier pos:line="12" pos:column="18">const<pos:position pos:line="12" pos:column="23"/></specifier></type> <name pos:line="12" pos:column="24">request<pos:position pos:line="12" pos:column="31"/></name> <init pos:line="12" pos:column="32">= <expr><name><name pos:line="12" pos:column="34">http<pos:position pos:line="12" pos:column="38"/></name><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">request<pos:position pos:line="12" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">Must<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><call><name><name pos:line="13" pos:column="10">http<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">storeEntry<pos:position pos:line="13" pos:column="26"/></name></name><argument_list pos:line="13" pos:column="26">()<pos:position pos:line="13" pos:column="28"/></argument_list></call> <operator pos:line="13" pos:column="29">||<pos:position pos:line="13" pos:column="31"/></operator> <name pos:line="13" pos:column="32">request<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">bool<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">mayForward<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><operator pos:line="14" pos:column="29">!<pos:position pos:line="14" pos:column="30"/></operator><call><name><name pos:line="14" pos:column="30">http<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">-&gt;<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="36">storeEntry<pos:position pos:line="14" pos:column="46"/></name></name><argument_list pos:line="14" pos:column="46">()<pos:position pos:line="14" pos:column="48"/></argument_list></call> <operator pos:line="14" pos:column="49">&amp;&amp;<pos:position pos:line="14" pos:column="59"/></operator> <call><name pos:line="14" pos:column="52">handleRequest<pos:position pos:line="14" pos:column="65"/></name><argument_list pos:line="14" pos:column="65">(<argument><expr><name pos:line="14" pos:column="66">request<pos:position pos:line="14" pos:column="73"/></name></expr></argument>)<pos:position pos:line="14" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="75"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name><name pos:line="16" pos:column="9">http<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">storeEntry<pos:position pos:line="16" pos:column="25"/></name></name><argument_list pos:line="16" pos:column="25">()<pos:position pos:line="16" pos:column="27"/></argument_list></call> <operator pos:line="16" pos:column="28">!=<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="31">NULL<pos:position pos:line="16" pos:column="35"/></name></expr>)<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36"> <block pos:line="16" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">33<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">4<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"got an immediate response"<pos:position pos:line="17" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">clientSetKeepaliveFlag<pos:position pos:line="18" pos:column="31"/></name><argument_list pos:line="18" pos:column="31">(<argument><expr><name pos:line="18" pos:column="32">http<pos:position pos:line="18" pos:column="36"/></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">context<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">pullData<pos:position pos:line="19" pos:column="26"/></name></name><argument_list pos:line="19" pos:column="26">()<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <elseif pos:line="20" pos:column="7">else <if pos:line="20" pos:column="12">if <condition pos:line="20" pos:column="15">(<expr><name pos:line="20" pos:column="16">mayForward<pos:position pos:line="20" pos:column="26"/></name></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27"> <block pos:line="20" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">33<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="20">4<pos:position pos:line="21" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="23">"forwarding request to server side"<pos:position pos:line="21" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">assert<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><call><name><name pos:line="22" pos:column="16">http<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">-&gt;<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="22">storeEntry<pos:position pos:line="22" pos:column="32"/></name></name><argument_list pos:line="22" pos:column="32">()<pos:position pos:line="22" pos:column="34"/></argument_list></call> <operator pos:line="22" pos:column="35">==<pos:position pos:line="22" pos:column="37"/></operator> <name pos:line="22" pos:column="38">NULL<pos:position pos:line="22" pos:column="42"/></name></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">clientProcessRequest<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">this<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><call><name><name pos:line="23" pos:column="36">Http1<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">::<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="43">RequestParserPointer<pos:position pos:line="23" pos:column="63"/></name></name><argument_list pos:line="23" pos:column="63">()<pos:position pos:line="23" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="23" pos:column="67">context<pos:position pos:line="23" pos:column="74"/></name><operator pos:line="23" pos:column="74">.<pos:position pos:line="23" pos:column="75"/></operator><name pos:line="23" pos:column="75">getRaw<pos:position pos:line="23" pos:column="81"/></name></name><argument_list pos:line="23" pos:column="81">()<pos:position pos:line="23" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="85"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif> <else pos:line="24" pos:column="7">else <block pos:line="24" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">debugs<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="number" pos:line="25" pos:column="16">33<pos:position pos:line="25" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="20">4<pos:position pos:line="25" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="23">"will resume processing later"<pos:position pos:line="25" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></else></if>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

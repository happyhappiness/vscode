<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3666_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">clientPeekAndSpliceSSL<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">int<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">fd<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">void<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">data<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ConnStateData<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">conn<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><operator pos:line="4" pos:column="27">(<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="28">ConnStateData<pos:position pos:line="4" pos:column="41"/></name> <operator pos:line="4" pos:column="42">*<pos:position pos:line="4" pos:column="43"/></operator><operator pos:line="4" pos:column="43">)<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">data<pos:position pos:line="4" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SSL<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">ssl<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name><name pos:line="5" pos:column="16">fd_table<pos:position pos:line="5" pos:column="24"/></name><index pos:line="5" pos:column="24">[<expr><name pos:line="5" pos:column="25">fd<pos:position pos:line="5" pos:column="27"/></name></expr>]<pos:position pos:line="5" pos:column="28"/></index></name><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">ssl<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">83<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">5<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"Start peek and splice on FD "<pos:position pos:line="7" pos:column="49"/></literal> <operator pos:line="7" pos:column="50">&lt;&lt;<pos:position pos:line="7" pos:column="58"/></operator> <name pos:line="7" pos:column="53">fd<pos:position pos:line="7" pos:column="55"/></name></expr></argument>)<pos:position pos:line="7" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="57"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">Squid_SSL_accept<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">conn<pos:position pos:line="9" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="33">clientPeekAndSpliceSSL<pos:position pos:line="9" pos:column="55"/></name></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="57"/></condition><then pos:line="9" pos:column="57">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">83<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="20">2<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"SSL_accept failed."<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">BIO<pos:position pos:line="12" pos:column="8"/></name> <modifier pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></modifier></type><name pos:line="12" pos:column="10">b<pos:position pos:line="12" pos:column="11"/></name> <init pos:line="12" pos:column="12">= <expr><call><name pos:line="12" pos:column="14">SSL_get_rbio<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><name pos:line="12" pos:column="27">ssl<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">assert<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">b<pos:position pos:line="13" pos:column="13"/></name></expr></argument>)<pos:position pos:line="13" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="15"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">Ssl<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">::<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">ClientBio<pos:position pos:line="14" pos:column="19"/></name></name> <modifier pos:line="14" pos:column="20">*<pos:position pos:line="14" pos:column="21"/></modifier></type><name pos:line="14" pos:column="21">bio<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><cast type="static" pos:line="14" pos:column="27">static_cast<argument_list type="generic" pos:line="14" pos:column="38">&lt;<argument><expr><name><name pos:line="14" pos:column="39">Ssl<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">::<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="44">ClientBio<pos:position pos:line="14" pos:column="53"/></name></name> <operator pos:line="14" pos:column="54">*<pos:position pos:line="14" pos:column="55"/></operator></expr></argument>&gt;<pos:position pos:line="14" pos:column="59"/></argument_list><argument_list pos:line="14" pos:column="56">(<argument><expr><name><name pos:line="14" pos:column="57">b<pos:position pos:line="14" pos:column="58"/></name><operator pos:line="14" pos:column="58">-&gt;<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="60">ptr<pos:position pos:line="14" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="14" pos:column="65"/></decl_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name><name pos:line="15" pos:column="9">bio<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">gotHello<pos:position pos:line="15" pos:column="22"/></name></name><argument_list pos:line="15" pos:column="22">()<pos:position pos:line="15" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25"> <block pos:line="15" pos:column="26">{
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name><name pos:line="16" pos:column="13">conn<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">serverBump<pos:position pos:line="16" pos:column="29"/></name></name><argument_list pos:line="16" pos:column="29">()<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="32"/></condition><then pos:line="16" pos:column="32"> <block pos:line="16" pos:column="33">{
            <decl_stmt><decl><type><name><name pos:line="17" pos:column="13">Ssl<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">::<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">Bio<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">::<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">sslFeatures<pos:position pos:line="17" pos:column="34"/></name></name> <specifier pos:line="17" pos:column="35">const<pos:position pos:line="17" pos:column="40"/></specifier> <modifier pos:line="17" pos:column="41">&amp;<pos:position pos:line="17" pos:column="46"/></modifier></type><name pos:line="17" pos:column="42">features<pos:position pos:line="17" pos:column="50"/></name> <init pos:line="17" pos:column="51">= <expr><call><name><name pos:line="17" pos:column="53">bio<pos:position pos:line="17" pos:column="56"/></name><operator pos:line="17" pos:column="56">-&gt;<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="58">getFeatures<pos:position pos:line="17" pos:column="69"/></name></name><argument_list pos:line="17" pos:column="69">()<pos:position pos:line="17" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="72"/></decl_stmt>
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><operator pos:line="18" pos:column="17">!<pos:position pos:line="18" pos:column="18"/></operator><call><name><name pos:line="18" pos:column="18">features<pos:position pos:line="18" pos:column="26"/></name><operator pos:line="18" pos:column="26">.<pos:position pos:line="18" pos:column="27"/></operator><name pos:line="18" pos:column="27">serverName<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">.<pos:position pos:line="18" pos:column="38"/></operator><name pos:line="18" pos:column="38">isEmpty<pos:position pos:line="18" pos:column="45"/></name></name><argument_list pos:line="18" pos:column="45">()<pos:position pos:line="18" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="48"/></condition><then pos:line="18" pos:column="48"> <block pos:line="18" pos:column="49">{
                <expr_stmt><expr><call><name><name pos:line="19" pos:column="17">conn<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">serverBump<pos:position pos:line="19" pos:column="33"/></name></name><argument_list pos:line="19" pos:column="33">()<pos:position pos:line="19" pos:column="35"/></argument_list></call><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">clientSni<pos:position pos:line="19" pos:column="46"/></name> <operator pos:line="19" pos:column="47">=<pos:position pos:line="19" pos:column="48"/></operator> <name><name pos:line="19" pos:column="49">features<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">.<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="58">serverName<pos:position pos:line="19" pos:column="68"/></name></name></expr>;<pos:position pos:line="19" pos:column="69"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="20" pos:column="17">conn<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">-&gt;<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="23">resetSslCommonName<pos:position pos:line="20" pos:column="41"/></name></name><argument_list pos:line="20" pos:column="41">(<argument><expr><call><name><name pos:line="20" pos:column="42">features<pos:position pos:line="20" pos:column="50"/></name><operator pos:line="20" pos:column="50">.<pos:position pos:line="20" pos:column="51"/></operator><name pos:line="20" pos:column="51">serverName<pos:position pos:line="20" pos:column="61"/></name><operator pos:line="20" pos:column="61">.<pos:position pos:line="20" pos:column="62"/></operator><name pos:line="20" pos:column="62">c_str<pos:position pos:line="20" pos:column="67"/></name></name><argument_list pos:line="20" pos:column="67">()<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="21" pos:column="14"/></block></then></if>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">83<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="20">5<pos:position pos:line="24" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="23">"I got hello. Start forwarding the request!!! "<pos:position pos:line="24" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="25" pos:column="9">Comm<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">::<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">SetSelect<pos:position pos:line="25" pos:column="24"/></name></name><argument_list pos:line="25" pos:column="24">(<argument><expr><name pos:line="25" pos:column="25">fd<pos:position pos:line="25" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="29">COMM_SELECT_READ<pos:position pos:line="25" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="47">NULL<pos:position pos:line="25" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="53">NULL<pos:position pos:line="25" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="59">0<pos:position pos:line="25" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="26" pos:column="9">Comm<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">::<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">SetSelect<pos:position pos:line="26" pos:column="24"/></name></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">fd<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="29">COMM_SELECT_WRITE<pos:position pos:line="26" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="48">NULL<pos:position pos:line="26" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="54">NULL<pos:position pos:line="26" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="60">0<pos:position pos:line="26" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="27" pos:column="9">conn<pos:position pos:line="27" pos:column="13"/></name><operator pos:line="27" pos:column="13">-&gt;<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="15">startPeekAndSpliceDone<pos:position pos:line="27" pos:column="37"/></name></name><argument_list pos:line="27" pos:column="37">()<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>
        <return pos:line="28" pos:column="9">return;<pos:position pos:line="28" pos:column="16"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1601_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClassCHostPool<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">update<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">int<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">incr<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">rate<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">()<pos:position pos:line="4" pos:column="15"/></argument_list></call><operator pos:line="4" pos:column="15">-&gt;<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="17">restore_bps<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">==<pos:position pos:line="4" pos:column="31"/></operator> <operator pos:line="4" pos:column="32">-<pos:position pos:line="4" pos:column="33"/></operator><literal type="number" pos:line="4" pos:column="33">1<pos:position pos:line="4" pos:column="34"/></literal></expr>)<pos:position pos:line="4" pos:column="35"/></condition><then pos:line="4" pos:column="35">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><name pos:line="7" pos:column="10">unsigned<pos:position pos:line="7" pos:column="18"/></name> <name pos:line="7" pos:column="19">int<pos:position pos:line="7" pos:column="22"/></name></type> <name pos:line="7" pos:column="23">i<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><literal type="number" pos:line="7" pos:column="27">0<pos:position pos:line="7" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="29"/></init> <condition><expr><name pos:line="7" pos:column="30">i<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">&lt;<pos:position pos:line="7" pos:column="35"/></operator> <call><name><name pos:line="7" pos:column="33">buckets<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">.<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">size<pos:position pos:line="7" pos:column="45"/></name></name><argument_list pos:line="7" pos:column="45">()<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="48"/></condition> <incr><expr><operator pos:line="7" pos:column="49">++<pos:position pos:line="7" pos:column="51"/></operator><name pos:line="7" pos:column="51">i<pos:position pos:line="7" pos:column="52"/></name></expr></incr>)<pos:position pos:line="7" pos:column="53"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="9">buckets<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">.<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">values<pos:position pos:line="8" pos:column="23"/></name><index pos:line="8" pos:column="23">[<expr><name pos:line="8" pos:column="24">i<pos:position pos:line="8" pos:column="25"/></name></expr>]<pos:position pos:line="8" pos:column="26"/></index></name><operator pos:line="8" pos:column="26">.<pos:position pos:line="8" pos:column="27"/></operator><call><name pos:line="8" pos:column="27">update<pos:position pos:line="8" pos:column="33"/></name> <argument_list pos:line="8" pos:column="34">(<argument><expr><operator pos:line="8" pos:column="35">*<pos:position pos:line="8" pos:column="36"/></operator><call><name pos:line="8" pos:column="36">rate<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">()<pos:position pos:line="8" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="44">incr<pos:position pos:line="8" pos:column="48"/></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt></block></for>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

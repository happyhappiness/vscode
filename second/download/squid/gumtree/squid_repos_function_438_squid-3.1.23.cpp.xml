<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_438_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">read_passwd_file<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">passwordFile<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">int<pos:position pos:line="2" pos:column="47"/></name></type> <name pos:line="2" pos:column="48">isHa1Mode<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">FILE<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">f<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">buf<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><literal type="number" pos:line="5" pos:column="14">8192<pos:position pos:line="5" pos:column="18"/></literal></expr>]<pos:position pos:line="5" pos:column="19"/></index></name></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">user_data<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">u<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">user<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">passwd<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">ha1<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><name pos:line="9" pos:column="17">NULL<pos:position pos:line="9" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">realm<pos:position pos:line="10" pos:column="16"/></name></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">hash<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">!=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">NULL<pos:position pos:line="12" pos:column="21"/></name></expr>)<pos:position pos:line="12" pos:column="22"/></condition><then pos:line="12" pos:column="22"> <block pos:line="12" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">hashFreeItems<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">hash<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">my_free<pos:position pos:line="13" pos:column="36"/></name></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="15" pos:column="5">/* initial setup */</comment>
    <expr_stmt><expr><name pos:line="16" pos:column="5">hash<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">=<pos:position pos:line="16" pos:column="11"/></operator> <call><name pos:line="16" pos:column="12">hash_create<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">HASHCMP<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">*<pos:position pos:line="16" pos:column="34"/></operator><operator pos:line="16" pos:column="34">)<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">strcmp<pos:position pos:line="16" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="44">7921<pos:position pos:line="16" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="50">hash_string<pos:position pos:line="16" pos:column="61"/></name></expr></argument>)<pos:position pos:line="16" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="63"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">NULL<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">hash<pos:position pos:line="17" pos:column="21"/></name></expr>)<pos:position pos:line="17" pos:column="22"/></condition><then pos:line="17" pos:column="22"> <block pos:line="17" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">fprintf<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name pos:line="18" pos:column="17">stderr<pos:position pos:line="18" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="25">"digest_pw_auth: cannot create hash table\n"<pos:position pos:line="18" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">exit<pos:position pos:line="19" pos:column="13"/></name><argument_list pos:line="19" pos:column="13">(<argument><expr><literal type="number" pos:line="19" pos:column="14">1<pos:position pos:line="19" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="21" pos:column="5">f<pos:position pos:line="21" pos:column="6"/></name> <operator pos:line="21" pos:column="7">=<pos:position pos:line="21" pos:column="8"/></operator> <call><name pos:line="21" pos:column="9">fopen<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><name pos:line="21" pos:column="15">passwordFile<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="29">"r"<pos:position pos:line="21" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
    <while pos:line="22" pos:column="5">while <condition pos:line="22" pos:column="11">(<expr><call><name pos:line="22" pos:column="12">fgets<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><name pos:line="22" pos:column="18">buf<pos:position pos:line="22" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="23">8192<pos:position pos:line="22" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="29">f<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call> <operator pos:line="22" pos:column="32">!=<pos:position pos:line="22" pos:column="34"/></operator> <name pos:line="22" pos:column="35">NULL<pos:position pos:line="22" pos:column="39"/></name></expr>)<pos:position pos:line="22" pos:column="40"/></condition> <block pos:line="22" pos:column="41">{
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">(<pos:position pos:line="23" pos:column="14"/></operator><name><name pos:line="23" pos:column="14">buf<pos:position pos:line="23" pos:column="17"/></name><index pos:line="23" pos:column="17">[<expr><literal type="number" pos:line="23" pos:column="18">0<pos:position pos:line="23" pos:column="19"/></literal></expr>]<pos:position pos:line="23" pos:column="20"/></index></name> <operator pos:line="23" pos:column="21">==<pos:position pos:line="23" pos:column="23"/></operator> <literal type="char" pos:line="23" pos:column="24">'#'<pos:position pos:line="23" pos:column="27"/></literal><operator pos:line="23" pos:column="27">)<pos:position pos:line="23" pos:column="28"/></operator> <operator pos:line="23" pos:column="29">||<pos:position pos:line="23" pos:column="31"/></operator> <operator pos:line="23" pos:column="32">(<pos:position pos:line="23" pos:column="33"/></operator><name><name pos:line="23" pos:column="33">buf<pos:position pos:line="23" pos:column="36"/></name><index pos:line="23" pos:column="36">[<expr><literal type="number" pos:line="23" pos:column="37">0<pos:position pos:line="23" pos:column="38"/></literal></expr>]<pos:position pos:line="23" pos:column="39"/></index></name> <operator pos:line="23" pos:column="40">==<pos:position pos:line="23" pos:column="42"/></operator> <literal type="char" pos:line="23" pos:column="43">' '<pos:position pos:line="23" pos:column="46"/></literal><operator pos:line="23" pos:column="46">)<pos:position pos:line="23" pos:column="47"/></operator> <operator pos:line="23" pos:column="48">||<pos:position pos:line="23" pos:column="50"/></operator> <operator pos:line="23" pos:column="51">(<pos:position pos:line="23" pos:column="52"/></operator><name><name pos:line="23" pos:column="52">buf<pos:position pos:line="23" pos:column="55"/></name><index pos:line="23" pos:column="55">[<expr><literal type="number" pos:line="23" pos:column="56">0<pos:position pos:line="23" pos:column="57"/></literal></expr>]<pos:position pos:line="23" pos:column="58"/></index></name> <operator pos:line="23" pos:column="59">==<pos:position pos:line="23" pos:column="61"/></operator> <literal type="char" pos:line="23" pos:column="62">'\t'<pos:position pos:line="23" pos:column="66"/></literal><operator pos:line="23" pos:column="66">)<pos:position pos:line="23" pos:column="67"/></operator> <operator pos:line="23" pos:column="68">||<pos:position pos:line="23" pos:column="70"/></operator>
                <operator pos:line="24" pos:column="17">(<pos:position pos:line="24" pos:column="18"/></operator><name><name pos:line="24" pos:column="18">buf<pos:position pos:line="24" pos:column="21"/></name><index pos:line="24" pos:column="21">[<expr><literal type="number" pos:line="24" pos:column="22">0<pos:position pos:line="24" pos:column="23"/></literal></expr>]<pos:position pos:line="24" pos:column="24"/></index></name> <operator pos:line="24" pos:column="25">==<pos:position pos:line="24" pos:column="27"/></operator> <literal type="char" pos:line="24" pos:column="28">'\n'<pos:position pos:line="24" pos:column="32"/></literal><operator pos:line="24" pos:column="32">)<pos:position pos:line="24" pos:column="33"/></operator></expr>)<pos:position pos:line="24" pos:column="34"/></condition><then pos:line="24" pos:column="34">
            <block type="pseudo"><continue pos:line="25" pos:column="13">continue;<pos:position pos:line="25" pos:column="22"/></continue></block></then></if>
        <expr_stmt><expr><name pos:line="26" pos:column="9">user<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">strtok<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">buf<pos:position pos:line="26" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="28">":\n"<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">realm<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <call><name pos:line="27" pos:column="17">strtok<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">NULL<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="30">":\n"<pos:position pos:line="27" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">passwd<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">strtok<pos:position pos:line="28" pos:column="24"/></name><argument_list pos:line="28" pos:column="24">(<argument><expr><name pos:line="28" pos:column="25">NULL<pos:position pos:line="28" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="31">":\n"<pos:position pos:line="28" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="38"/></expr_stmt>
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><operator pos:line="29" pos:column="13">!<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">passwd<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition><then pos:line="29" pos:column="21"> <block pos:line="29" pos:column="22">{
            <expr_stmt><expr><name pos:line="30" pos:column="13">passwd<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <name pos:line="30" pos:column="22">realm<pos:position pos:line="30" pos:column="27"/></name></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="31" pos:column="13">realm<pos:position pos:line="31" pos:column="18"/></name> <operator pos:line="31" pos:column="19">=<pos:position pos:line="31" pos:column="20"/></operator> <name pos:line="31" pos:column="21">NULL<pos:position pos:line="31" pos:column="25"/></name></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><operator pos:line="33" pos:column="13">(<pos:position pos:line="33" pos:column="14"/></operator><call><name pos:line="33" pos:column="14">strlen<pos:position pos:line="33" pos:column="20"/></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">user<pos:position pos:line="33" pos:column="25"/></name></expr></argument>)<pos:position pos:line="33" pos:column="26"/></argument_list></call> <operator pos:line="33" pos:column="27">&gt;<pos:position pos:line="33" pos:column="31"/></operator> <literal type="number" pos:line="33" pos:column="29">0<pos:position pos:line="33" pos:column="30"/></literal><operator pos:line="33" pos:column="30">)<pos:position pos:line="33" pos:column="31"/></operator> <operator pos:line="33" pos:column="32">&amp;&amp;<pos:position pos:line="33" pos:column="42"/></operator> <name pos:line="33" pos:column="35">passwd<pos:position pos:line="33" pos:column="41"/></name></expr>)<pos:position pos:line="33" pos:column="42"/></condition><then pos:line="33" pos:column="42"> <block pos:line="33" pos:column="43">{
            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><call><name pos:line="34" pos:column="17">strncmp<pos:position pos:line="34" pos:column="24"/></name><argument_list pos:line="34" pos:column="24">(<argument><expr><name pos:line="34" pos:column="25">passwd<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="33">"{HHA1}"<pos:position pos:line="34" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="43">6<pos:position pos:line="34" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call> <operator pos:line="34" pos:column="46">==<pos:position pos:line="34" pos:column="48"/></operator> <literal type="number" pos:line="34" pos:column="49">0<pos:position pos:line="34" pos:column="50"/></literal></expr>)<pos:position pos:line="34" pos:column="51"/></condition><then pos:line="34" pos:column="51"> <block pos:line="34" pos:column="52">{
                <expr_stmt><expr><name pos:line="35" pos:column="17">ha1<pos:position pos:line="35" pos:column="20"/></name> <operator pos:line="35" pos:column="21">=<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">passwd<pos:position pos:line="35" pos:column="29"/></name> <operator pos:line="35" pos:column="30">+<pos:position pos:line="35" pos:column="31"/></operator> <literal type="number" pos:line="35" pos:column="32">6<pos:position pos:line="35" pos:column="33"/></literal></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><name pos:line="36" pos:column="17">passwd<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">NULL<pos:position pos:line="36" pos:column="30"/></name></expr>;<pos:position pos:line="36" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="37" pos:column="14"/></block></then> <elseif pos:line="37" pos:column="15">else <if pos:line="37" pos:column="20">if <condition pos:line="37" pos:column="23">(<expr><name pos:line="37" pos:column="24">isHa1Mode<pos:position pos:line="37" pos:column="33"/></name></expr>)<pos:position pos:line="37" pos:column="34"/></condition><then pos:line="37" pos:column="34"> <block pos:line="37" pos:column="35">{
                <expr_stmt><expr><name pos:line="38" pos:column="17">ha1<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">=<pos:position pos:line="38" pos:column="22"/></operator> <name pos:line="38" pos:column="23">passwd<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt>
                <expr_stmt><expr><name pos:line="39" pos:column="17">passwd<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="26">NULL<pos:position pos:line="39" pos:column="30"/></name></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if></elseif></if>
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><name pos:line="41" pos:column="17">ha1<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">&amp;&amp;<pos:position pos:line="41" pos:column="31"/></operator> <call><name pos:line="41" pos:column="24">strlen<pos:position pos:line="41" pos:column="30"/></name><argument_list pos:line="41" pos:column="30">(<argument><expr><name pos:line="41" pos:column="31">ha1<pos:position pos:line="41" pos:column="34"/></name></expr></argument>)<pos:position pos:line="41" pos:column="35"/></argument_list></call> <operator pos:line="41" pos:column="36">!=<pos:position pos:line="41" pos:column="38"/></operator> <literal type="number" pos:line="41" pos:column="39">32<pos:position pos:line="41" pos:column="41"/></literal></expr>)<pos:position pos:line="41" pos:column="42"/></condition><then pos:line="41" pos:column="42"> <block pos:line="41" pos:column="43">{
                <comment type="block" pos:line="42" pos:column="17">/* We cannot accept plaintext passwords when using HA1 encoding,
                 * as the passwords may be output to cache.log if debugging is on.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="45" pos:column="17">fprintf<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><name pos:line="45" pos:column="25">stderr<pos:position pos:line="45" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="33">"digest_pw_auth: ignoring invalid password for %s\n"<pos:position pos:line="45" pos:column="85"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="87">user<pos:position pos:line="45" pos:column="91"/></name></expr></argument>)<pos:position pos:line="45" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="93"/></expr_stmt>
                <continue pos:line="46" pos:column="17">continue;<pos:position pos:line="46" pos:column="26"/></continue>
            }<pos:position pos:line="47" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="48" pos:column="13">u<pos:position pos:line="48" pos:column="14"/></name> <operator pos:line="48" pos:column="15">=<pos:position pos:line="48" pos:column="16"/></operator> <call><name pos:line="48" pos:column="17">xcalloc<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><literal type="number" pos:line="48" pos:column="25">1<pos:position pos:line="48" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="48" pos:column="28">sizeof<argument_list pos:line="48" pos:column="34">(<argument><expr><operator pos:line="48" pos:column="35">*<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="36">u<pos:position pos:line="48" pos:column="37"/></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="48" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="40"/></expr_stmt>
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><name pos:line="49" pos:column="17">realm<pos:position pos:line="49" pos:column="22"/></name></expr>)<pos:position pos:line="49" pos:column="23"/></condition><then pos:line="49" pos:column="23"> <block pos:line="49" pos:column="24">{
                <decl_stmt><decl><type><name pos:line="50" pos:column="17">int<pos:position pos:line="50" pos:column="20"/></name></type> <name pos:line="50" pos:column="21">len<pos:position pos:line="50" pos:column="24"/></name> <init pos:line="50" pos:column="25">= <expr><call><name pos:line="50" pos:column="27">strlen<pos:position pos:line="50" pos:column="33"/></name><argument_list pos:line="50" pos:column="33">(<argument><expr><name pos:line="50" pos:column="34">user<pos:position pos:line="50" pos:column="38"/></name></expr></argument>)<pos:position pos:line="50" pos:column="39"/></argument_list></call> <operator pos:line="50" pos:column="40">+<pos:position pos:line="50" pos:column="41"/></operator> <call><name pos:line="50" pos:column="42">strlen<pos:position pos:line="50" pos:column="48"/></name><argument_list pos:line="50" pos:column="48">(<argument><expr><name pos:line="50" pos:column="49">realm<pos:position pos:line="50" pos:column="54"/></name></expr></argument>)<pos:position pos:line="50" pos:column="55"/></argument_list></call> <operator pos:line="50" pos:column="56">+<pos:position pos:line="50" pos:column="57"/></operator> <literal type="number" pos:line="50" pos:column="58">2<pos:position pos:line="50" pos:column="59"/></literal></expr></init></decl>;<pos:position pos:line="50" pos:column="60"/></decl_stmt>
                <expr_stmt><expr><name><name pos:line="51" pos:column="17">u<pos:position pos:line="51" pos:column="18"/></name><operator pos:line="51" pos:column="18">-&gt;<pos:position pos:line="51" pos:column="23"/></operator><name pos:line="51" pos:column="20">hash<pos:position pos:line="51" pos:column="24"/></name><operator pos:line="51" pos:column="24">.<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="25">key<pos:position pos:line="51" pos:column="28"/></name></name> <operator pos:line="51" pos:column="29">=<pos:position pos:line="51" pos:column="30"/></operator> <call><name pos:line="51" pos:column="31">malloc<pos:position pos:line="51" pos:column="37"/></name><argument_list pos:line="51" pos:column="37">(<argument><expr><name pos:line="51" pos:column="38">len<pos:position pos:line="51" pos:column="41"/></name></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="52" pos:column="17">snprintf<pos:position pos:line="52" pos:column="25"/></name><argument_list pos:line="52" pos:column="25">(<argument><expr><name><name pos:line="52" pos:column="26">u<pos:position pos:line="52" pos:column="27"/></name><operator pos:line="52" pos:column="27">-&gt;<pos:position pos:line="52" pos:column="32"/></operator><name pos:line="52" pos:column="29">hash<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">.<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="34">key<pos:position pos:line="52" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="39">len<pos:position pos:line="52" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="44">"%s:%s"<pos:position pos:line="52" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="53">user<pos:position pos:line="52" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="59">realm<pos:position pos:line="52" pos:column="64"/></name></expr></argument>)<pos:position pos:line="52" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="66"/></expr_stmt>
            }<pos:position pos:line="53" pos:column="14"/></block></then> <else pos:line="53" pos:column="15">else <block pos:line="53" pos:column="20">{
                <expr_stmt><expr><name><name pos:line="54" pos:column="17">u<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">-&gt;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="20">hash<pos:position pos:line="54" pos:column="24"/></name><operator pos:line="54" pos:column="24">.<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">key<pos:position pos:line="54" pos:column="28"/></name></name> <operator pos:line="54" pos:column="29">=<pos:position pos:line="54" pos:column="30"/></operator> <call><name pos:line="54" pos:column="31">xstrdup<pos:position pos:line="54" pos:column="38"/></name><argument_list pos:line="54" pos:column="38">(<argument><expr><name pos:line="54" pos:column="39">user<pos:position pos:line="54" pos:column="43"/></name></expr></argument>)<pos:position pos:line="54" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="55" pos:column="14"/></block></else></if>
            <if pos:line="56" pos:column="13">if <condition pos:line="56" pos:column="16">(<expr><name pos:line="56" pos:column="17">ha1<pos:position pos:line="56" pos:column="20"/></name></expr>)<pos:position pos:line="56" pos:column="21"/></condition><then pos:line="56" pos:column="21">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="17">u<pos:position pos:line="57" pos:column="18"/></name><operator pos:line="57" pos:column="18">-&gt;<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="20">ha1<pos:position pos:line="57" pos:column="23"/></name></name> <operator pos:line="57" pos:column="24">=<pos:position pos:line="57" pos:column="25"/></operator> <call><name pos:line="57" pos:column="26">xstrdup<pos:position pos:line="57" pos:column="33"/></name><argument_list pos:line="57" pos:column="33">(<argument><expr><name pos:line="57" pos:column="34">ha1<pos:position pos:line="57" pos:column="37"/></name></expr></argument>)<pos:position pos:line="57" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="39"/></expr_stmt></block></then>
            <else pos:line="58" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="59" pos:column="17">u<pos:position pos:line="59" pos:column="18"/></name><operator pos:line="59" pos:column="18">-&gt;<pos:position pos:line="59" pos:column="23"/></operator><name pos:line="59" pos:column="20">passwd<pos:position pos:line="59" pos:column="26"/></name></name> <operator pos:line="59" pos:column="27">=<pos:position pos:line="59" pos:column="28"/></operator> <call><name pos:line="59" pos:column="29">xstrdup<pos:position pos:line="59" pos:column="36"/></name><argument_list pos:line="59" pos:column="36">(<argument><expr><name pos:line="59" pos:column="37">passwd<pos:position pos:line="59" pos:column="43"/></name></expr></argument>)<pos:position pos:line="59" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="45"/></expr_stmt></block></else></if>
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">hash_join<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">hash<pos:position pos:line="60" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="60" pos:column="29">&amp;<pos:position pos:line="60" pos:column="34"/></operator><name><name pos:line="60" pos:column="30">u<pos:position pos:line="60" pos:column="31"/></name><operator pos:line="60" pos:column="31">-&gt;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="33">hash<pos:position pos:line="60" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="60" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="61" pos:column="10"/></block></then></if>
    }<pos:position pos:line="62" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">fclose<pos:position pos:line="63" pos:column="11"/></name><argument_list pos:line="63" pos:column="11">(<argument><expr><name pos:line="63" pos:column="12">f<pos:position pos:line="63" pos:column="13"/></name></expr></argument>)<pos:position pos:line="63" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="15"/></expr_stmt>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

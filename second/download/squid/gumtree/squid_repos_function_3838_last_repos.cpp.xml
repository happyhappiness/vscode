<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3838_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><specifier pos:line="1" pos:column="8">const<pos:position pos:line="1" pos:column="13"/></specifier> <name pos:line="1" pos:column="14">char<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">ssl_get_attribute<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">X509_NAME<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">name<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">attribute_name<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="64"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">buffer<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><literal type="number" pos:line="4" pos:column="24">1024<pos:position pos:line="4" pos:column="28"/></literal></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">buffer<pos:position pos:line="5" pos:column="11"/></name><index pos:line="5" pos:column="11">[<expr><literal type="number" pos:line="5" pos:column="12">0<pos:position pos:line="5" pos:column="13"/></literal></expr>]<pos:position pos:line="5" pos:column="14"/></index></name> <operator pos:line="5" pos:column="15">=<pos:position pos:line="5" pos:column="16"/></operator> <literal type="char" pos:line="5" pos:column="17">'\0'<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">strcmp<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">attribute_name<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="32">"DN"<pos:position pos:line="7" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call> <operator pos:line="7" pos:column="38">==<pos:position pos:line="7" pos:column="40"/></operator> <literal type="number" pos:line="7" pos:column="41">0<pos:position pos:line="7" pos:column="42"/></literal></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43"> <block pos:line="7" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">X509_NAME_oneline<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">name<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">buffer<pos:position pos:line="8" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="41">sizeof<argument_list pos:line="8" pos:column="47">(<argument><expr><name pos:line="8" pos:column="48">buffer<pos:position pos:line="8" pos:column="54"/></name></expr></argument>)<pos:position pos:line="8" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="57"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else <block pos:line="9" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">nid<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><call><name pos:line="10" pos:column="19">OBJ_txt2nid<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><cast type="const" pos:line="10" pos:column="31">const_cast<argument_list type="generic" pos:line="10" pos:column="41">&lt;<argument><expr><name pos:line="10" pos:column="42">char<pos:position pos:line="10" pos:column="46"/></name> <operator pos:line="10" pos:column="47">*<pos:position pos:line="10" pos:column="48"/></operator></expr></argument>&gt;<pos:position pos:line="10" pos:column="52"/></argument_list><argument_list pos:line="10" pos:column="49">(<argument><expr><name pos:line="10" pos:column="50">attribute_name<pos:position pos:line="10" pos:column="64"/></name></expr></argument>)<pos:position pos:line="10" pos:column="65"/></argument_list></cast></expr></argument>)<pos:position pos:line="10" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="67"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">nid<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">==<pos:position pos:line="11" pos:column="19"/></operator> <literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22"> <block pos:line="11" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">debugs<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="number" pos:line="12" pos:column="20">83<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="24">DBG_IMPORTANT<pos:position pos:line="12" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="39">"WARNING: Unknown SSL attribute name '"<pos:position pos:line="12" pos:column="78"/></literal> <operator pos:line="12" pos:column="79">&lt;&lt;<pos:position pos:line="12" pos:column="87"/></operator> <name pos:line="12" pos:column="82">attribute_name<pos:position pos:line="12" pos:column="96"/></name> <operator pos:line="12" pos:column="97">&lt;&lt;<pos:position pos:line="12" pos:column="105"/></operator> <literal type="string" pos:line="12" pos:column="100">"'"<pos:position pos:line="12" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="105"/></expr_stmt>
            <return pos:line="13" pos:column="13">return <expr><literal type="null" pos:line="13" pos:column="20">nullptr<pos:position pos:line="13" pos:column="27"/></literal></expr>;<pos:position pos:line="13" pos:column="28"/></return>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">X509_NAME_get_text_by_NID<pos:position pos:line="15" pos:column="34"/></name><argument_list pos:line="15" pos:column="34">(<argument><expr><name pos:line="15" pos:column="35">name<pos:position pos:line="15" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="41">nid<pos:position pos:line="15" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="46">buffer<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="54">sizeof<argument_list pos:line="15" pos:column="60">(<argument><expr><name pos:line="15" pos:column="61">buffer<pos:position pos:line="15" pos:column="67"/></name></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="70"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></else></if>

    <return pos:line="18" pos:column="5">return <expr><ternary><condition><expr><operator pos:line="18" pos:column="12">*<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">buffer<pos:position pos:line="18" pos:column="19"/></name></expr> ?<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21"> <expr><name pos:line="18" pos:column="22">buffer<pos:position pos:line="18" pos:column="28"/></name></expr> <pos:position pos:line="18" pos:column="29"/></then><else pos:line="18" pos:column="29">: <expr><literal type="null" pos:line="18" pos:column="31">nullptr<pos:position pos:line="18" pos:column="38"/></literal></expr></else></ternary></expr>;<pos:position pos:line="18" pos:column="39"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

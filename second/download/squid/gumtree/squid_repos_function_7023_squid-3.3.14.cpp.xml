<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7023_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">()<pos:position pos:line="2" pos:column="7"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name pos:line="4" pos:column="14">BUFFER_SIZE<pos:position pos:line="4" pos:column="25"/></name></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">s<pos:position pos:line="5" pos:column="12"/></name></decl>, <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier><decl><type ref="prev"/><name pos:line="5" pos:column="15">t<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">tlu<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* make standard output line buffered */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">setvbuf<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">stdout<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="25">NULL<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">_IOLBF<pos:position pos:line="9" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="39">0<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call> <operator pos:line="9" pos:column="42">!=<pos:position pos:line="9" pos:column="44"/></operator> <literal type="number" pos:line="9" pos:column="45">0<pos:position pos:line="9" pos:column="46"/></literal></expr>)<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">1<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="12" pos:column="5">/* speed up the access() calls below */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">chdir<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name pos:line="13" pos:column="15">ACCESS_LOCAL_DIR<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call> <operator pos:line="13" pos:column="33">==<pos:position pos:line="13" pos:column="35"/></operator> <operator pos:line="13" pos:column="36">-<pos:position pos:line="13" pos:column="37"/></operator><literal type="number" pos:line="13" pos:column="37">1<pos:position pos:line="13" pos:column="38"/></literal></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><literal type="number" pos:line="14" pos:column="16">1<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="16" pos:column="5">/* scan standard input */</comment>
    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><call><name pos:line="17" pos:column="12">fgets<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">buf<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">BUFFER_SIZE<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="36">stdin<pos:position pos:line="17" pos:column="41"/></name></expr></argument>)<pos:position pos:line="17" pos:column="42"/></argument_list></call> <operator pos:line="17" pos:column="43">!=<pos:position pos:line="17" pos:column="45"/></operator> <name pos:line="17" pos:column="46">NULL<pos:position pos:line="17" pos:column="50"/></name></expr>)<pos:position pos:line="17" pos:column="51"/></condition> <block pos:line="17" pos:column="52">{
        <comment type="block" pos:line="18" pos:column="9">/* check for too long urls */</comment>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name pos:line="19" pos:column="13">strchr<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><name pos:line="19" pos:column="20">buf<pos:position pos:line="19" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="25">'\n'<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="30"/></argument_list></call> <operator pos:line="19" pos:column="31">==<pos:position pos:line="19" pos:column="33"/></operator> <name pos:line="19" pos:column="34">NULL<pos:position pos:line="19" pos:column="38"/></name></expr>)<pos:position pos:line="19" pos:column="39"/></condition><then pos:line="19" pos:column="39"> <block pos:line="19" pos:column="40">{
            <expr_stmt><expr><name pos:line="20" pos:column="13">tlu<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="number" pos:line="20" pos:column="19">1<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
            <continue pos:line="21" pos:column="13">continue;<pos:position pos:line="21" pos:column="22"/></continue>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">tlu<pos:position pos:line="23" pos:column="16"/></name></expr>)<pos:position pos:line="23" pos:column="17"/></condition><then pos:line="23" pos:column="17">
            <block type="pseudo"><goto pos:line="24" pos:column="13">goto <name pos:line="24" pos:column="18">dont_redirect<pos:position pos:line="24" pos:column="31"/></name>;<pos:position pos:line="24" pos:column="32"/></goto></block></then></if>

        <comment type="block" pos:line="26" pos:column="9">/* determine end of url */</comment>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><operator pos:line="27" pos:column="13">(<pos:position pos:line="27" pos:column="14"/></operator><name pos:line="27" pos:column="14">s<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <call><name pos:line="27" pos:column="18">strchr<pos:position pos:line="27" pos:column="24"/></name><argument_list pos:line="27" pos:column="24">(<argument><expr><name pos:line="27" pos:column="25">buf<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="27" pos:column="30">' '<pos:position pos:line="27" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call><operator pos:line="27" pos:column="34">)<pos:position pos:line="27" pos:column="35"/></operator> <operator pos:line="27" pos:column="36">==<pos:position pos:line="27" pos:column="38"/></operator> <name pos:line="27" pos:column="39">NULL<pos:position pos:line="27" pos:column="43"/></name></expr>)<pos:position pos:line="27" pos:column="44"/></condition><then pos:line="27" pos:column="44">
            <block type="pseudo"><goto pos:line="28" pos:column="13">goto <name pos:line="28" pos:column="18">dont_redirect<pos:position pos:line="28" pos:column="31"/></name>;<pos:position pos:line="28" pos:column="32"/></goto></block></then></if>
        <expr_stmt><expr><operator pos:line="29" pos:column="9">*<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">s<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <literal type="char" pos:line="29" pos:column="14">'\0'<pos:position pos:line="29" pos:column="18"/></literal></expr>;<pos:position pos:line="29" pos:column="19"/></expr_stmt>

        <comment type="block" pos:line="31" pos:column="9">/* determine first character of filename */</comment>
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><operator pos:line="32" pos:column="13">(<pos:position pos:line="32" pos:column="14"/></operator><name pos:line="32" pos:column="14">s<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <call><name pos:line="32" pos:column="18">strrchr<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">buf<pos:position pos:line="32" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="32" pos:column="31">'/'<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call><operator pos:line="32" pos:column="35">)<pos:position pos:line="32" pos:column="36"/></operator> <operator pos:line="32" pos:column="37">==<pos:position pos:line="32" pos:column="39"/></operator> <name pos:line="32" pos:column="40">NULL<pos:position pos:line="32" pos:column="44"/></name></expr>)<pos:position pos:line="32" pos:column="45"/></condition><then pos:line="32" pos:column="45">
            <block type="pseudo"><goto pos:line="33" pos:column="13">goto <name pos:line="33" pos:column="18">dont_redirect<pos:position pos:line="33" pos:column="31"/></name>;<pos:position pos:line="33" pos:column="32"/></goto></block></then></if>
        <expr_stmt><expr><name pos:line="34" pos:column="9">s<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">++<pos:position pos:line="34" pos:column="12"/></operator></expr>;<pos:position pos:line="34" pos:column="13"/></expr_stmt>

        <comment type="block" pos:line="36" pos:column="9">/* security: do not redirect to hidden files, the current
         * directory or the parent directory */</comment>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">s<pos:position pos:line="38" pos:column="15"/></name> <operator pos:line="38" pos:column="16">==<pos:position pos:line="38" pos:column="18"/></operator> <literal type="char" pos:line="38" pos:column="19">'.'<pos:position pos:line="38" pos:column="22"/></literal> <operator pos:line="38" pos:column="23">||<pos:position pos:line="38" pos:column="25"/></operator> <operator pos:line="38" pos:column="26">*<pos:position pos:line="38" pos:column="27"/></operator><name pos:line="38" pos:column="27">s<pos:position pos:line="38" pos:column="28"/></name> <operator pos:line="38" pos:column="29">==<pos:position pos:line="38" pos:column="31"/></operator> <literal type="char" pos:line="38" pos:column="32">'\0'<pos:position pos:line="38" pos:column="36"/></literal></expr>)<pos:position pos:line="38" pos:column="37"/></condition><then pos:line="38" pos:column="37">
            <block type="pseudo"><goto pos:line="39" pos:column="13">goto <name pos:line="39" pos:column="18">dont_redirect<pos:position pos:line="39" pos:column="31"/></name>;<pos:position pos:line="39" pos:column="32"/></goto></block></then></if>

        <comment type="block" pos:line="41" pos:column="9">/* map filename to lower case */</comment>
        <for pos:line="42" pos:column="9">for <control pos:line="42" pos:column="13">(<init><expr><name pos:line="42" pos:column="14">t<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <name pos:line="42" pos:column="18">s<pos:position pos:line="42" pos:column="19"/></name></expr>;<pos:position pos:line="42" pos:column="20"/></init> <condition><expr><operator pos:line="42" pos:column="21">*<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">t<pos:position pos:line="42" pos:column="23"/></name> <operator pos:line="42" pos:column="24">!=<pos:position pos:line="42" pos:column="26"/></operator> <literal type="char" pos:line="42" pos:column="27">'\0'<pos:position pos:line="42" pos:column="31"/></literal></expr>;<pos:position pos:line="42" pos:column="32"/></condition> <incr><expr><name pos:line="42" pos:column="33">t<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">++<pos:position pos:line="42" pos:column="36"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="37"/></control>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="43" pos:column="13">*<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">t<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <operator pos:line="43" pos:column="18">(<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="19">char<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">)<pos:position pos:line="43" pos:column="24"/></operator> <call><name pos:line="43" pos:column="25">tolower<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">(<argument><expr><operator pos:line="43" pos:column="33">(<pos:position pos:line="43" pos:column="34"/></operator><name pos:line="43" pos:column="34">int<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">)<pos:position pos:line="43" pos:column="38"/></operator> <operator pos:line="43" pos:column="39">*<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">t<pos:position pos:line="43" pos:column="41"/></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt></block></for>

        <comment type="block" pos:line="45" pos:column="9">/* check for a local copy of this file */</comment>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">access<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">s<pos:position pos:line="46" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="23">R_OK<pos:position pos:line="46" pos:column="27"/></name></expr></argument>)<pos:position pos:line="46" pos:column="28"/></argument_list></call> <operator pos:line="46" pos:column="29">==<pos:position pos:line="46" pos:column="31"/></operator> <literal type="number" pos:line="46" pos:column="32">0<pos:position pos:line="46" pos:column="33"/></literal></expr>)<pos:position pos:line="46" pos:column="34"/></condition><then pos:line="46" pos:column="34"> <block pos:line="46" pos:column="35">{
            <expr_stmt><expr><operator pos:line="47" pos:column="13">(<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">void<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">)<pos:position pos:line="47" pos:column="19"/></operator> <call><name pos:line="47" pos:column="20">printf<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><literal type="string" pos:line="47" pos:column="27">"%s/%s\n"<pos:position pos:line="47" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="38">REDIRECT_TO_URL<pos:position pos:line="47" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="55">s<pos:position pos:line="47" pos:column="56"/></name></expr></argument>)<pos:position pos:line="47" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="58"/></expr_stmt>
            <continue pos:line="48" pos:column="13">continue;<pos:position pos:line="48" pos:column="22"/></continue>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
<label><name pos:line="50" pos:column="1">dont_redirect<pos:position pos:line="50" pos:column="14"/></name>:<pos:position pos:line="50" pos:column="15"/></label>
        <expr_stmt><expr><name pos:line="51" pos:column="9">tlu<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <literal type="number" pos:line="51" pos:column="15">0<pos:position pos:line="51" pos:column="16"/></literal></expr>;<pos:position pos:line="51" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="52" pos:column="9">(<pos:position pos:line="52" pos:column="10"/></operator><name pos:line="52" pos:column="10">void<pos:position pos:line="52" pos:column="14"/></name><operator pos:line="52" pos:column="14">)<pos:position pos:line="52" pos:column="15"/></operator> <call><name pos:line="52" pos:column="16">printf<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><literal type="string" pos:line="52" pos:column="23">"\n"<pos:position pos:line="52" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></while>

    <return pos:line="55" pos:column="5">return <expr><literal type="number" pos:line="55" pos:column="12">0<pos:position pos:line="55" pos:column="13"/></literal></expr>;<pos:position pos:line="55" pos:column="14"/></return>
}<pos:position pos:line="56" pos:column="2"/></block></function></unit>

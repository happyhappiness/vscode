<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5371_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">authDigestNonceIsValid<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">digest_nonce_h<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type> <name pos:line="2" pos:column="41">nonce<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name></type> <name><name pos:line="2" pos:column="53">nc<pos:position pos:line="2" pos:column="55"/></name><index pos:line="2" pos:column="55">[<expr><literal type="number" pos:line="2" pos:column="56">9<pos:position pos:line="2" pos:column="57"/></literal></expr>]<pos:position pos:line="2" pos:column="58"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="59"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">long<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">intnc<pos:position pos:line="4" pos:column="24"/></name></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* do we have a nonce ? */</comment>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">nonce<pos:position pos:line="7" pos:column="15"/></name></expr>)<pos:position pos:line="7" pos:column="16"/></condition><then pos:line="7" pos:column="16">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="10" pos:column="5">intnc<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <call><name pos:line="10" pos:column="13">strtol<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">nc<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="24">NULL<pos:position pos:line="10" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="30">16<pos:position pos:line="10" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* has it already been invalidated ? */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name><name pos:line="13" pos:column="10">nonce<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">-&gt;<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="17">flags<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">.<pos:position pos:line="13" pos:column="23"/></operator><name pos:line="13" pos:column="23">valid<pos:position pos:line="13" pos:column="28"/></name></name></expr>)<pos:position pos:line="13" pos:column="29"/></condition><then pos:line="13" pos:column="29"> <block pos:line="13" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">29<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">4<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="23">"authDigestNonceIsValid: Nonce already invalidated"<pos:position pos:line="14" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="76"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/* is the nonce-count ok ? */</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><cast type="static" pos:line="19" pos:column="10">static_cast<argument_list type="generic" pos:line="19" pos:column="21">&lt;<argument><expr><name><name pos:line="19" pos:column="22">Auth<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">::<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">Digest<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">::<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">Config<pos:position pos:line="19" pos:column="42"/></name></name><operator pos:line="19" pos:column="42">*<pos:position pos:line="19" pos:column="43"/></operator></expr></argument>&gt;<pos:position pos:line="19" pos:column="47"/></argument_list><argument_list pos:line="19" pos:column="44">(<argument><expr><call><name><name pos:line="19" pos:column="45">Auth<pos:position pos:line="19" pos:column="49"/></name><operator pos:line="19" pos:column="49">::<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">Config<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">::<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="59">Find<pos:position pos:line="19" pos:column="63"/></name></name><argument_list pos:line="19" pos:column="63">(<argument><expr><literal type="string" pos:line="19" pos:column="64">"digest"<pos:position pos:line="19" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="74"/></argument_list></cast><operator pos:line="19" pos:column="74">-&gt;<pos:position pos:line="19" pos:column="79"/></operator><name pos:line="19" pos:column="76">CheckNonceCount<pos:position pos:line="19" pos:column="91"/></name></expr>)<pos:position pos:line="19" pos:column="92"/></condition><then pos:line="19" pos:column="92"> <block pos:line="19" pos:column="93">{
        <comment type="block" pos:line="20" pos:column="9">/* Ignore client supplied NC */</comment>
        <expr_stmt><expr><name pos:line="21" pos:column="9">intnc<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">=<pos:position pos:line="21" pos:column="16"/></operator> <name><name pos:line="21" pos:column="17">nonce<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">nc<pos:position pos:line="21" pos:column="26"/></name></name> <operator pos:line="21" pos:column="27">+<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="29">1<pos:position pos:line="21" pos:column="30"/></literal></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><cast type="static" pos:line="24" pos:column="10">static_cast<argument_list type="generic" pos:line="24" pos:column="21">&lt;<argument><expr><name><name pos:line="24" pos:column="22">Auth<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">::<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="28">Digest<pos:position pos:line="24" pos:column="34"/></name><operator pos:line="24" pos:column="34">::<pos:position pos:line="24" pos:column="36"/></operator><name pos:line="24" pos:column="36">Config<pos:position pos:line="24" pos:column="42"/></name></name><operator pos:line="24" pos:column="42">*<pos:position pos:line="24" pos:column="43"/></operator></expr></argument>&gt;<pos:position pos:line="24" pos:column="47"/></argument_list><argument_list pos:line="24" pos:column="44">(<argument><expr><call><name><name pos:line="24" pos:column="45">Auth<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">::<pos:position pos:line="24" pos:column="51"/></operator><name pos:line="24" pos:column="51">Config<pos:position pos:line="24" pos:column="57"/></name><operator pos:line="24" pos:column="57">::<pos:position pos:line="24" pos:column="59"/></operator><name pos:line="24" pos:column="59">Find<pos:position pos:line="24" pos:column="63"/></name></name><argument_list pos:line="24" pos:column="63">(<argument><expr><literal type="string" pos:line="24" pos:column="64">"digest"<pos:position pos:line="24" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="74"/></argument_list></cast><operator pos:line="24" pos:column="74">-&gt;<pos:position pos:line="24" pos:column="79"/></operator><name pos:line="24" pos:column="76">NonceStrictness<pos:position pos:line="24" pos:column="91"/></name> <operator pos:line="24" pos:column="92">&amp;&amp;<pos:position pos:line="24" pos:column="102"/></operator> <name pos:line="24" pos:column="95">intnc<pos:position pos:line="24" pos:column="100"/></name> <operator pos:line="24" pos:column="101">!=<pos:position pos:line="24" pos:column="103"/></operator> <name><name pos:line="24" pos:column="104">nonce<pos:position pos:line="24" pos:column="109"/></name><operator pos:line="24" pos:column="109">-&gt;<pos:position pos:line="24" pos:column="114"/></operator><name pos:line="24" pos:column="111">nc<pos:position pos:line="24" pos:column="113"/></name></name> <operator pos:line="24" pos:column="114">+<pos:position pos:line="24" pos:column="115"/></operator> <literal type="number" pos:line="24" pos:column="116">1<pos:position pos:line="24" pos:column="117"/></literal><operator pos:line="24" pos:column="117">)<pos:position pos:line="24" pos:column="118"/></operator> <operator pos:line="24" pos:column="119">||<pos:position pos:line="24" pos:column="121"/></operator>
            <name pos:line="25" pos:column="13">intnc<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">&lt;<pos:position pos:line="25" pos:column="23"/></operator> <name><name pos:line="25" pos:column="21">nonce<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">nc<pos:position pos:line="25" pos:column="30"/></name></name> <operator pos:line="25" pos:column="31">+<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="33">1<pos:position pos:line="25" pos:column="34"/></literal></expr>)<pos:position pos:line="25" pos:column="35"/></condition><then pos:line="25" pos:column="35"> <block pos:line="25" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">debugs<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><literal type="number" pos:line="26" pos:column="16">29<pos:position pos:line="26" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="20">4<pos:position pos:line="26" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="23">"authDigestNonceIsValid: Nonce count doesn't match"<pos:position pos:line="26" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">nonce<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">flags<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">valid<pos:position pos:line="27" pos:column="27"/></name></name> <operator pos:line="27" pos:column="28">=<pos:position pos:line="27" pos:column="29"/></operator> <literal type="boolean" pos:line="27" pos:column="30">false<pos:position pos:line="27" pos:column="35"/></literal></expr>;<pos:position pos:line="27" pos:column="36"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="31" pos:column="5">/* increment the nonce count - we've already checked that intnc is a
     *  valid representation for us, so we don't need the test here.
     */</comment>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">nonce<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">nc<pos:position pos:line="34" pos:column="14"/></name></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">intnc<pos:position pos:line="34" pos:column="22"/></name></expr>;<pos:position pos:line="34" pos:column="23"/></expr_stmt>

    <return pos:line="36" pos:column="5">return <expr><operator pos:line="36" pos:column="12">!<pos:position pos:line="36" pos:column="13"/></operator><call><name pos:line="36" pos:column="13">authDigestNonceIsStale<pos:position pos:line="36" pos:column="35"/></name><argument_list pos:line="36" pos:column="35">(<argument><expr><name pos:line="36" pos:column="36">nonce<pos:position pos:line="36" pos:column="41"/></name></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

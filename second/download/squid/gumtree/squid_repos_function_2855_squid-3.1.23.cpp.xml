<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2855_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">ChunkedCodingParser<pos:position pos:line="1" pos:column="25"/></name><operator pos:line="1" pos:column="25">::<pos:position pos:line="1" pos:column="27"/></operator><name pos:line="1" pos:column="27">parseTrailer<pos:position pos:line="1" pos:column="39"/></name></name><parameter_list pos:line="1" pos:column="39">()<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><name pos:line="3" pos:column="10">theChunkSize<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">==<pos:position pos:line="3" pos:column="25"/></operator> <literal type="number" pos:line="3" pos:column="26">0<pos:position pos:line="3" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="29"/></expr_stmt> <comment type="line" pos:line="3" pos:column="30">// Should(), really</comment>

    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><call><name pos:line="5" pos:column="12">mayContinue<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">()<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="26"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">parseTrailerHeader<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">()<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt></block></while>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

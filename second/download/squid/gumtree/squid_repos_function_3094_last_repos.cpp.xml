<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3094_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">handleIdleClientPinnedTlsRead<pos:position pos:line="2" pos:column="45"/></name></name><parameter_list pos:line="2" pos:column="45">()<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// A ready-for-reading connection means that the TLS server either closed</comment>
    <comment type="line" pos:line="5" pos:column="5">// the connection, sent us some unexpected HTTP data, or started TLS</comment>
    <comment type="line" pos:line="6" pos:column="5">// renegotiations. We should close the connection except for the last case.</comment>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">Must<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name><name pos:line="8" pos:column="10">pinning<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">serverConnection<pos:position pos:line="8" pos:column="34"/></name></name> <operator pos:line="8" pos:column="35">!=<pos:position pos:line="8" pos:column="37"/></operator> <literal type="null" pos:line="8" pos:column="38">nullptr<pos:position pos:line="8" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="47"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">auto<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">ssl<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name><name pos:line="9" pos:column="16">fd_table<pos:position pos:line="9" pos:column="24"/></name><index pos:line="9" pos:column="24">[<expr><name><name pos:line="9" pos:column="25">pinning<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">.<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">serverConnection<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">-&gt;<pos:position pos:line="9" pos:column="54"/></operator><name pos:line="9" pos:column="51">fd<pos:position pos:line="9" pos:column="53"/></name></name></expr>]<pos:position pos:line="9" pos:column="54"/></index></name><operator pos:line="9" pos:column="54">.<pos:position pos:line="9" pos:column="55"/></operator><call><name><name pos:line="9" pos:column="55">ssl<pos:position pos:line="9" pos:column="58"/></name><operator pos:line="9" pos:column="58">.<pos:position pos:line="9" pos:column="59"/></operator><name pos:line="9" pos:column="59">get<pos:position pos:line="9" pos:column="62"/></name></name><argument_list pos:line="9" pos:column="62">()<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="65"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">ssl<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name></type> <name><name pos:line="13" pos:column="10">buf<pos:position pos:line="13" pos:column="13"/></name><index pos:line="13" pos:column="13">[<expr><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal></expr>]<pos:position pos:line="13" pos:column="16"/></index></name></decl>;<pos:position pos:line="13" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">int<pos:position pos:line="14" pos:column="14"/></name></type> <name pos:line="14" pos:column="15">readResult<pos:position pos:line="14" pos:column="25"/></name> <init pos:line="14" pos:column="26">= <expr><call><name pos:line="14" pos:column="28">SSL_read<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">ssl<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">buf<pos:position pos:line="14" pos:column="45"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="47">sizeof<argument_list pos:line="14" pos:column="53">(<argument><expr><name pos:line="14" pos:column="54">buf<pos:position pos:line="14" pos:column="57"/></name></expr></argument>)<pos:position pos:line="14" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="60"/></decl_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">readResult<pos:position pos:line="16" pos:column="19"/></name> <operator pos:line="16" pos:column="20">&gt;<pos:position pos:line="16" pos:column="24"/></operator> <literal type="number" pos:line="16" pos:column="22">0<pos:position pos:line="16" pos:column="23"/></literal> <operator pos:line="16" pos:column="24">||<pos:position pos:line="16" pos:column="26"/></operator> <call><name pos:line="16" pos:column="27">SSL_pending<pos:position pos:line="16" pos:column="38"/></name><argument_list pos:line="16" pos:column="38">(<argument><expr><name pos:line="16" pos:column="39">ssl<pos:position pos:line="16" pos:column="42"/></name></expr></argument>)<pos:position pos:line="16" pos:column="43"/></argument_list></call> <operator pos:line="16" pos:column="44">&gt;<pos:position pos:line="16" pos:column="48"/></operator> <literal type="number" pos:line="16" pos:column="46">0<pos:position pos:line="16" pos:column="47"/></literal></expr>)<pos:position pos:line="16" pos:column="48"/></condition><then pos:line="16" pos:column="48"> <block pos:line="16" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">83<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">2<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="23">pinning<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">.<pos:position pos:line="17" pos:column="31"/></operator><name pos:line="17" pos:column="31">serverConnection<pos:position pos:line="17" pos:column="47"/></name></name> <operator pos:line="17" pos:column="48">&lt;&lt;<pos:position pos:line="17" pos:column="56"/></operator> <literal type="string" pos:line="17" pos:column="51">" TLS application data read"<pos:position pos:line="17" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="81"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><literal type="boolean" pos:line="18" pos:column="16">false<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <switch pos:line="21" pos:column="5">switch<condition pos:line="21" pos:column="11">(<decl><type><specifier pos:line="21" pos:column="12">const<pos:position pos:line="21" pos:column="17"/></specifier> <name pos:line="21" pos:column="18">int<pos:position pos:line="21" pos:column="21"/></name></type> <name pos:line="21" pos:column="22">error<pos:position pos:line="21" pos:column="27"/></name> <init pos:line="21" pos:column="28">= <expr><call><name pos:line="21" pos:column="30">SSL_get_error<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">ssl<pos:position pos:line="21" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="49">readResult<pos:position pos:line="21" pos:column="59"/></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr></init></decl>)<pos:position pos:line="21" pos:column="61"/></condition> <block pos:line="21" pos:column="62">{
    <case pos:line="22" pos:column="5">case <expr><name pos:line="22" pos:column="10">SSL_ERROR_WANT_WRITE<pos:position pos:line="22" pos:column="30"/></name></expr>:<pos:position pos:line="22" pos:column="31"/></case>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">83<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="20">DBG_IMPORTANT<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="35">pinning<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">.<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="43">serverConnection<pos:position pos:line="23" pos:column="59"/></name></name> <operator pos:line="23" pos:column="60">&lt;&lt;<pos:position pos:line="23" pos:column="68"/></operator> <literal type="string" pos:line="23" pos:column="63">" TLS SSL_ERROR_WANT_WRITE request for idle pinned connection"<pos:position pos:line="23" pos:column="125"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="127"/></expr_stmt>
    <comment type="line" pos:line="24" pos:column="5">// fall through to restart monitoring, for now</comment>
    <case pos:line="25" pos:column="5">case <expr><name pos:line="25" pos:column="10">SSL_ERROR_NONE<pos:position pos:line="25" pos:column="24"/></name></expr>:<pos:position pos:line="25" pos:column="25"/></case>
    <case pos:line="26" pos:column="5">case <expr><name pos:line="26" pos:column="10">SSL_ERROR_WANT_READ<pos:position pos:line="26" pos:column="29"/></name></expr>:<pos:position pos:line="26" pos:column="30"/></case>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">startPinnedConnectionMonitoring<pos:position pos:line="27" pos:column="40"/></name><argument_list pos:line="27" pos:column="40">()<pos:position pos:line="27" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="43"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><literal type="boolean" pos:line="28" pos:column="16">true<pos:position pos:line="28" pos:column="20"/></literal></expr>;<pos:position pos:line="28" pos:column="21"/></return>

    <default pos:line="30" pos:column="5">default:<pos:position pos:line="30" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">debugs<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">83<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="20">2<pos:position pos:line="31" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="23">pinning<pos:position pos:line="31" pos:column="30"/></name><operator pos:line="31" pos:column="30">.<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="31">serverConnection<pos:position pos:line="31" pos:column="47"/></name></name> <operator pos:line="31" pos:column="48">&lt;&lt;<pos:position pos:line="31" pos:column="56"/></operator> <literal type="string" pos:line="31" pos:column="51">" TLS error: "<pos:position pos:line="31" pos:column="65"/></literal> <operator pos:line="31" pos:column="66">&lt;&lt;<pos:position pos:line="31" pos:column="74"/></operator> <name pos:line="31" pos:column="69">error<pos:position pos:line="31" pos:column="74"/></name></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="76"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><literal type="boolean" pos:line="32" pos:column="16">false<pos:position pos:line="32" pos:column="21"/></literal></expr>;<pos:position pos:line="32" pos:column="22"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></switch>

    <comment type="line" pos:line="35" pos:column="5">// not reached</comment>
    <return pos:line="36" pos:column="5">return <expr><literal type="boolean" pos:line="36" pos:column="12">true<pos:position pos:line="36" pos:column="16"/></literal></expr>;<pos:position pos:line="36" pos:column="17"/></return>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

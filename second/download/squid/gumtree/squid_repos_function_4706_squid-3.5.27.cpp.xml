<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4706_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBufList<pos:position pos:line="1" pos:column="9"/></name></type>
<name><name pos:line="2" pos:column="1">ACLUserData<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">dump<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list> <specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SBufList<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">sl<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">flags<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">.<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">required<pos:position pos:line="6" pos:column="23"/></name></name></expr>)<pos:position pos:line="6" pos:column="24"/></condition><then pos:line="6" pos:column="24"> <block pos:line="6" pos:column="25">{
        <expr_stmt><expr><call><name><name pos:line="7" pos:column="9">sl<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">.<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">push_back<pos:position pos:line="7" pos:column="21"/></name></name><argument_list pos:line="7" pos:column="21">(<argument><expr><call><name pos:line="7" pos:column="22">SBuf<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><literal type="string" pos:line="7" pos:column="27">"REQUIRED"<pos:position pos:line="7" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>
        <return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">sl<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">flags<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">case_insensitive<pos:position pos:line="11" pos:column="31"/></name></name></expr>)<pos:position pos:line="11" pos:column="32"/></condition><then pos:line="11" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="12" pos:column="9">sl<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">push_back<pos:position pos:line="12" pos:column="21"/></name></name><argument_list pos:line="12" pos:column="21">(<argument><expr><call><name pos:line="12" pos:column="22">SBuf<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">(<argument><expr><literal type="string" pos:line="12" pos:column="27">"-i"<pos:position pos:line="12" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">sl<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">.<pos:position pos:line="14" pos:column="8"/></operator><name pos:line="14" pos:column="8">insert<pos:position pos:line="14" pos:column="14"/></name></name><argument_list pos:line="14" pos:column="14">(<argument><expr><call><name><name pos:line="14" pos:column="15">sl<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">end<pos:position pos:line="14" pos:column="21"/></name></name><argument_list pos:line="14" pos:column="21">()<pos:position pos:line="14" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="14" pos:column="25">userDataNames<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">.<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">begin<pos:position pos:line="14" pos:column="44"/></name></name><argument_list pos:line="14" pos:column="44">()<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="14" pos:column="48">userDataNames<pos:position pos:line="14" pos:column="61"/></name><operator pos:line="14" pos:column="61">.<pos:position pos:line="14" pos:column="62"/></operator><name pos:line="14" pos:column="62">end<pos:position pos:line="14" pos:column="65"/></name></name><argument_list pos:line="14" pos:column="65">()<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">28<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="16" pos:column="15">5<pos:position pos:line="16" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="18">"ACLUserData dump output: "<pos:position pos:line="16" pos:column="45"/></literal> <operator pos:line="16" pos:column="46">&lt;&lt;<pos:position pos:line="16" pos:column="54"/></operator> <call><name pos:line="16" pos:column="49">SBufContainerJoin<pos:position pos:line="16" pos:column="66"/></name><argument_list pos:line="16" pos:column="66">(<argument><expr><name pos:line="16" pos:column="67">userDataNames<pos:position pos:line="16" pos:column="80"/></name></expr></argument>,<argument><expr><call><name pos:line="16" pos:column="81">SBuf<pos:position pos:line="16" pos:column="85"/></name><argument_list pos:line="16" pos:column="85">(<argument><expr><literal type="string" pos:line="16" pos:column="86">" "<pos:position pos:line="16" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="93"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">sl<pos:position pos:line="17" pos:column="14"/></name></expr>;<pos:position pos:line="17" pos:column="15"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

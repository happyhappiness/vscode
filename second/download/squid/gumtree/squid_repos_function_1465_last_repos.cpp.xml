<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1465_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StatHist<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">init<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">unsigned<pos:position pos:line="2" pos:column="24"/></name> <name pos:line="2" pos:column="25">int<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">newCapacity<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">hbase_f<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type> <name pos:line="2" pos:column="52">val_in_<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">hbase_f<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">*<pos:position pos:line="2" pos:column="70"/></modifier></type> <name pos:line="2" pos:column="71">val_out_<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="81">double<pos:position pos:line="2" pos:column="87"/></name></type> <name pos:line="2" pos:column="88">newMin<pos:position pos:line="2" pos:column="94"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="96">double<pos:position pos:line="2" pos:column="102"/></name></type> <name pos:line="2" pos:column="103">newMax<pos:position pos:line="2" pos:column="109"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="110"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* check before we divide to get scale_ */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><call><name pos:line="5" pos:column="12">val_in_<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><name pos:line="5" pos:column="20">newMax<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">-<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="29">newMin<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call> <operator pos:line="5" pos:column="37">&gt;<pos:position pos:line="5" pos:column="41"/></operator> <literal type="number" pos:line="5" pos:column="39">0<pos:position pos:line="5" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">min_<pos:position pos:line="6" pos:column="9"/></name> <operator pos:line="6" pos:column="10">=<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">newMin<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">max_<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">newMax<pos:position pos:line="7" pos:column="18"/></name></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">capacity_<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">newCapacity<pos:position pos:line="8" pos:column="28"/></name></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="9" pos:column="5">val_in<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <name pos:line="9" pos:column="14">val_in_<pos:position pos:line="9" pos:column="21"/></name></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">val_out<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <name pos:line="10" pos:column="15">val_out_<pos:position pos:line="10" pos:column="23"/></name></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">bins<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <cast type="static" pos:line="11" pos:column="12">static_cast<argument_list type="generic" pos:line="11" pos:column="23">&lt;<argument><expr><name pos:line="11" pos:column="24">bins_type<pos:position pos:line="11" pos:column="33"/></name> <operator pos:line="11" pos:column="34">*<pos:position pos:line="11" pos:column="35"/></operator></expr></argument>&gt;<pos:position pos:line="11" pos:column="39"/></argument_list><argument_list pos:line="11" pos:column="36">(<argument><expr><call><name pos:line="11" pos:column="37">xcalloc<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><name pos:line="11" pos:column="45">capacity_<pos:position pos:line="11" pos:column="54"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="56">sizeof<argument_list pos:line="11" pos:column="62">(<argument><expr><name pos:line="11" pos:column="63">bins_type<pos:position pos:line="11" pos:column="72"/></name></expr></argument>)<pos:position pos:line="11" pos:column="73"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></cast></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">scale_<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <name pos:line="12" pos:column="14">capacity_<pos:position pos:line="12" pos:column="23"/></name> <operator pos:line="12" pos:column="24">/<pos:position pos:line="12" pos:column="25"/></operator> <call><name pos:line="12" pos:column="26">val_in<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">(<argument><expr><name pos:line="12" pos:column="33">max_<pos:position pos:line="12" pos:column="37"/></name> <operator pos:line="12" pos:column="38">-<pos:position pos:line="12" pos:column="39"/></operator> <name pos:line="12" pos:column="40">min_<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="46"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

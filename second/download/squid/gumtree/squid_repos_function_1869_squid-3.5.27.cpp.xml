<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1869_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerDigestFetchSetStats<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">DigestFetchState<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type> <name pos:line="2" pos:column="44">fetch<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">MemObject<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">mem<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name><name pos:line="5" pos:column="12">fetch<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">entry<pos:position pos:line="5" pos:column="24"/></name></name> <operator pos:line="5" pos:column="25">&amp;&amp;<pos:position pos:line="5" pos:column="35"/></operator> <name><name pos:line="5" pos:column="28">fetch<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">-&gt;<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="35">request<pos:position pos:line="5" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="44"/></expr_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">mem<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <name><name pos:line="7" pos:column="11">fetch<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">entry<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">-&gt;<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="25">mem_obj<pos:position pos:line="7" pos:column="32"/></name></name></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">mem<pos:position pos:line="8" pos:column="15"/></name></expr></argument>)<pos:position pos:line="8" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* XXX: outgoing numbers are not precise */</comment>
    <comment type="block" pos:line="11" pos:column="5">/* XXX: we must distinguish between 304 hits and misses here */</comment>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">fetch<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">sent<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">.<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">bytes<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <call><name><name pos:line="12" pos:column="25">fetch<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">-&gt;<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="32">request<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">prefixLen<pos:position pos:line="12" pos:column="50"/></name></name><argument_list pos:line="12" pos:column="50">()<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>
    <comment type="block" pos:line="13" pos:column="5">/* XXX: this is slightly wrong: we don't KNOW that the entire memobject
     * was fetched. We only know how big it is
     */</comment>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">fetch<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">recv<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">.<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="17">bytes<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <call><name><name pos:line="16" pos:column="25">mem<pos:position pos:line="16" pos:column="28"/></name><operator pos:line="16" pos:column="28">-&gt;<pos:position pos:line="16" pos:column="33"/></operator><name pos:line="16" pos:column="30">size<pos:position pos:line="16" pos:column="34"/></name></name><argument_list pos:line="16" pos:column="34">()<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">fetch<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">sent<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">.<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">msg<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">=<pos:position pos:line="17" pos:column="22"/></operator> <name><name pos:line="17" pos:column="23">fetch<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">-&gt;<pos:position pos:line="17" pos:column="33"/></operator><name pos:line="17" pos:column="30">recv<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">.<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="35">msg<pos:position pos:line="17" pos:column="38"/></name></name> <operator pos:line="17" pos:column="39">=<pos:position pos:line="17" pos:column="40"/></operator> <literal type="number" pos:line="17" pos:column="41">1<pos:position pos:line="17" pos:column="42"/></literal></expr>;<pos:position pos:line="17" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">fetch<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">expires<pos:position pos:line="18" pos:column="19"/></name></name> <operator pos:line="18" pos:column="20">=<pos:position pos:line="18" pos:column="21"/></operator> <name><name pos:line="18" pos:column="22">fetch<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">-&gt;<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="29">entry<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">expires<pos:position pos:line="18" pos:column="43"/></name></name></expr>;<pos:position pos:line="18" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">fetch<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">resp_time<pos:position pos:line="19" pos:column="21"/></name></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="24">squid_curtime<pos:position pos:line="19" pos:column="37"/></name> <operator pos:line="19" pos:column="38">-<pos:position pos:line="19" pos:column="39"/></operator> <name><name pos:line="19" pos:column="40">fetch<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">-&gt;<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="47">start_time<pos:position pos:line="19" pos:column="57"/></name></name></expr>;<pos:position pos:line="19" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">debugs<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><literal type="number" pos:line="21" pos:column="12">72<pos:position pos:line="21" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="16">3<pos:position pos:line="21" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="19">"peerDigestFetchFinish: recv "<pos:position pos:line="21" pos:column="49"/></literal> <operator pos:line="21" pos:column="50">&lt;&lt;<pos:position pos:line="21" pos:column="58"/></operator> <name><name pos:line="21" pos:column="53">fetch<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">-&gt;<pos:position pos:line="21" pos:column="63"/></operator><name pos:line="21" pos:column="60">recv<pos:position pos:line="21" pos:column="64"/></name><operator pos:line="21" pos:column="64">.<pos:position pos:line="21" pos:column="65"/></operator><name pos:line="21" pos:column="65">bytes<pos:position pos:line="21" pos:column="70"/></name></name> <operator pos:line="21" pos:column="71">&lt;&lt;<pos:position pos:line="21" pos:column="79"/></operator>
           <literal type="string" pos:line="22" pos:column="12">" bytes in "<pos:position pos:line="22" pos:column="24"/></literal> <operator pos:line="22" pos:column="25">&lt;&lt;<pos:position pos:line="22" pos:column="33"/></operator> <operator pos:line="22" pos:column="28">(<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">int<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">)<pos:position pos:line="22" pos:column="33"/></operator> <name><name pos:line="22" pos:column="34">fetch<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">-&gt;<pos:position pos:line="22" pos:column="44"/></operator><name pos:line="22" pos:column="41">resp_time<pos:position pos:line="22" pos:column="50"/></name></name> <operator pos:line="22" pos:column="51">&lt;&lt;<pos:position pos:line="22" pos:column="59"/></operator> <literal type="string" pos:line="22" pos:column="54">" secs"<pos:position pos:line="22" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">debugs<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">72<pos:position pos:line="24" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="16">3<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"peerDigestFetchFinish: expires: "<pos:position pos:line="24" pos:column="53"/></literal> <operator pos:line="24" pos:column="54">&lt;&lt;<pos:position pos:line="24" pos:column="62"/></operator>
           <operator pos:line="25" pos:column="12">(<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="13">long<pos:position pos:line="25" pos:column="17"/></name> <name pos:line="25" pos:column="18">int<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">)<pos:position pos:line="25" pos:column="22"/></operator> <name><name pos:line="25" pos:column="23">fetch<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">-&gt;<pos:position pos:line="25" pos:column="33"/></operator><name pos:line="25" pos:column="30">expires<pos:position pos:line="25" pos:column="37"/></name></name> <operator pos:line="25" pos:column="38">&lt;&lt;<pos:position pos:line="25" pos:column="46"/></operator> <literal type="string" pos:line="25" pos:column="41">" ("<pos:position pos:line="25" pos:column="45"/></literal> <operator pos:line="25" pos:column="46">&lt;&lt;<pos:position pos:line="25" pos:column="54"/></operator> <name><name pos:line="25" pos:column="49">std<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">::<pos:position pos:line="25" pos:column="54"/></operator><name pos:line="25" pos:column="54">showpos<pos:position pos:line="25" pos:column="61"/></name></name> <operator pos:line="25" pos:column="62">&lt;&lt;<pos:position pos:line="25" pos:column="70"/></operator>
           <call pos:line="26" pos:column="12">(<name pos:line="26" pos:column="13">int<pos:position pos:line="26" pos:column="16"/></name>) <argument_list pos:line="26" pos:column="18">(<argument><expr><name><name pos:line="26" pos:column="19">fetch<pos:position pos:line="26" pos:column="24"/></name><operator pos:line="26" pos:column="24">-&gt;<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="26">expires<pos:position pos:line="26" pos:column="33"/></name></name> <operator pos:line="26" pos:column="34">-<pos:position pos:line="26" pos:column="35"/></operator> <name pos:line="26" pos:column="36">squid_curtime<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call> <operator pos:line="26" pos:column="51">&lt;&lt;<pos:position pos:line="26" pos:column="59"/></operator> <literal type="string" pos:line="26" pos:column="54">"), lmt: "<pos:position pos:line="26" pos:column="64"/></literal> <operator pos:line="26" pos:column="65">&lt;&lt;<pos:position pos:line="26" pos:column="73"/></operator>
           <name><name pos:line="27" pos:column="12">std<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">::<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="17">noshowpos<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">&lt;&lt;<pos:position pos:line="27" pos:column="35"/></operator> <operator pos:line="27" pos:column="30">(<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">long<pos:position pos:line="27" pos:column="35"/></name> <name pos:line="27" pos:column="36">int<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">)<pos:position pos:line="27" pos:column="40"/></operator> <call><name><name pos:line="27" pos:column="41">fetch<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">entry<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">-&gt;<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="55">lastModified<pos:position pos:line="27" pos:column="67"/></name></name><argument_list pos:line="27" pos:column="67">()<pos:position pos:line="27" pos:column="69"/></argument_list></call> <operator pos:line="27" pos:column="70">&lt;&lt;<pos:position pos:line="27" pos:column="78"/></operator> <literal type="string" pos:line="27" pos:column="73">" ("<pos:position pos:line="27" pos:column="77"/></literal> <operator pos:line="27" pos:column="78">&lt;&lt;<pos:position pos:line="27" pos:column="86"/></operator>
           <name><name pos:line="28" pos:column="12">std<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">::<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="17">showpos<pos:position pos:line="28" pos:column="24"/></name></name> <operator pos:line="28" pos:column="25">&lt;&lt;<pos:position pos:line="28" pos:column="33"/></operator> <call pos:line="28" pos:column="28">(<name pos:line="28" pos:column="29">int<pos:position pos:line="28" pos:column="32"/></name>) <argument_list pos:line="28" pos:column="34">(<argument><expr><call><name><name pos:line="28" pos:column="35">fetch<pos:position pos:line="28" pos:column="40"/></name><operator pos:line="28" pos:column="40">-&gt;<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="42">entry<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">-&gt;<pos:position pos:line="28" pos:column="52"/></operator><name pos:line="28" pos:column="49">lastModified<pos:position pos:line="28" pos:column="61"/></name></name><argument_list pos:line="28" pos:column="61">()<pos:position pos:line="28" pos:column="63"/></argument_list></call> <operator pos:line="28" pos:column="64">-<pos:position pos:line="28" pos:column="65"/></operator> <name pos:line="28" pos:column="66">squid_curtime<pos:position pos:line="28" pos:column="79"/></name></expr></argument>)<pos:position pos:line="28" pos:column="80"/></argument_list></call> <operator pos:line="28" pos:column="81">&lt;&lt;<pos:position pos:line="28" pos:column="89"/></operator>
           <literal type="string" pos:line="29" pos:column="12">")"<pos:position pos:line="29" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>

}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

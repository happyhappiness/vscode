<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_141_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">GSSAPI_token<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">server<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">OM_uint32<pos:position pos:line="4" pos:column="14"/></name></type> <name pos:line="4" pos:column="15">major_status<pos:position pos:line="4" pos:column="27"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="29">minor_status<pos:position pos:line="4" pos:column="41"/></name></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">gss_ctx_id_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">gss_context<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">GSS_C_NO_CONTEXT<pos:position pos:line="5" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">gss_name_t<pos:position pos:line="6" pos:column="15"/></name></type> <name pos:line="6" pos:column="16">server_name<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><name pos:line="6" pos:column="30">GSS_C_NO_NAME<pos:position pos:line="6" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">gss_buffer_desc<pos:position pos:line="7" pos:column="20"/></name></type> <name pos:line="7" pos:column="21">service<pos:position pos:line="7" pos:column="28"/></name> <init pos:line="7" pos:column="29">= <expr><name pos:line="7" pos:column="31">GSS_C_EMPTY_BUFFER<pos:position pos:line="7" pos:column="49"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">gss_buffer_desc<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">input_token<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><name pos:line="8" pos:column="35">GSS_C_EMPTY_BUFFER<pos:position pos:line="8" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">gss_buffer_desc<pos:position pos:line="9" pos:column="20"/></name></type> <name pos:line="9" pos:column="21">output_token<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><name pos:line="9" pos:column="36">GSS_C_EMPTY_BUFFER<pos:position pos:line="9" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">token<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><name pos:line="10" pos:column="19">NULL<pos:position pos:line="10" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">setbuf<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">stdout<pos:position pos:line="12" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">setbuf<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">stdin<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="19">NULL<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">server<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17"> <block pos:line="15" pos:column="18">{
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">std<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">::<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">cerr<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">&lt;&lt;<pos:position pos:line="16" pos:column="27"/></operator> <literal type="string" pos:line="16" pos:column="22">"ERROR: GSSAPI: No server name"<pos:position pos:line="16" pos:column="53"/></literal> <operator pos:line="16" pos:column="54">&lt;&lt;<pos:position pos:line="16" pos:column="62"/></operator> <name><name pos:line="16" pos:column="57">std<pos:position pos:line="16" pos:column="60"/></name><operator pos:line="16" pos:column="60">::<pos:position pos:line="16" pos:column="62"/></operator><name pos:line="16" pos:column="62">endl<pos:position pos:line="16" pos:column="66"/></name></name></expr>;<pos:position pos:line="16" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">token<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <operator pos:line="17" pos:column="17">new<pos:position pos:line="17" pos:column="20"/></operator> <name><name pos:line="17" pos:column="21">char<pos:position pos:line="17" pos:column="25"/></name><index pos:line="17" pos:column="25">[<expr><literal type="number" pos:line="17" pos:column="26">6<pos:position pos:line="17" pos:column="27"/></literal></expr>]<pos:position pos:line="17" pos:column="28"/></index></name></expr>;<pos:position pos:line="17" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">memcpy<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">token<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"ERROR"<pos:position pos:line="18" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="32">5<pos:position pos:line="18" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">token<pos:position pos:line="19" pos:column="14"/></name><index pos:line="19" pos:column="14">[<expr><literal type="number" pos:line="19" pos:column="15">5<pos:position pos:line="19" pos:column="16"/></literal></expr>]<pos:position pos:line="19" pos:column="17"/></index></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <literal type="char" pos:line="19" pos:column="20">'\0'<pos:position pos:line="19" pos:column="24"/></literal></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">token<pos:position pos:line="20" pos:column="21"/></name></expr>;<pos:position pos:line="20" pos:column="22"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">service<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">.<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">value<pos:position pos:line="22" pos:column="18"/></name></name> <operator pos:line="22" pos:column="19">=<pos:position pos:line="22" pos:column="20"/></operator> <call><name pos:line="22" pos:column="21">xmalloc<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><call><name pos:line="22" pos:column="29">strlen<pos:position pos:line="22" pos:column="35"/></name><argument_list pos:line="22" pos:column="35">(<argument><expr><literal type="string" pos:line="22" pos:column="36">"HTTP"<pos:position pos:line="22" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="43"/></argument_list></call> <operator pos:line="22" pos:column="44">+<pos:position pos:line="22" pos:column="45"/></operator> <call><name pos:line="22" pos:column="46">strlen<pos:position pos:line="22" pos:column="52"/></name><argument_list pos:line="22" pos:column="52">(<argument><expr><name pos:line="22" pos:column="53">server<pos:position pos:line="22" pos:column="59"/></name></expr></argument>)<pos:position pos:line="22" pos:column="60"/></argument_list></call> <operator pos:line="22" pos:column="61">+<pos:position pos:line="22" pos:column="62"/></operator> <literal type="number" pos:line="22" pos:column="63">2<pos:position pos:line="22" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="66"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">snprintf<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><operator pos:line="23" pos:column="14">(<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">char<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">*<pos:position pos:line="23" pos:column="21"/></operator><operator pos:line="23" pos:column="21">)<pos:position pos:line="23" pos:column="22"/></operator> <name><name pos:line="23" pos:column="23">service<pos:position pos:line="23" pos:column="30"/></name><operator pos:line="23" pos:column="30">.<pos:position pos:line="23" pos:column="31"/></operator><name pos:line="23" pos:column="31">value<pos:position pos:line="23" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="38">strlen<pos:position pos:line="23" pos:column="44"/></name><argument_list pos:line="23" pos:column="44">(<argument><expr><literal type="string" pos:line="23" pos:column="45">"HTTP"<pos:position pos:line="23" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="52"/></argument_list></call> <operator pos:line="23" pos:column="53">+<pos:position pos:line="23" pos:column="54"/></operator> <call><name pos:line="23" pos:column="55">strlen<pos:position pos:line="23" pos:column="61"/></name><argument_list pos:line="23" pos:column="61">(<argument><expr><name pos:line="23" pos:column="62">server<pos:position pos:line="23" pos:column="68"/></name></expr></argument>)<pos:position pos:line="23" pos:column="69"/></argument_list></call> <operator pos:line="23" pos:column="70">+<pos:position pos:line="23" pos:column="71"/></operator> <literal type="number" pos:line="23" pos:column="72">2<pos:position pos:line="23" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="75">"%s@%s"<pos:position pos:line="23" pos:column="82"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="84">"HTTP"<pos:position pos:line="23" pos:column="90"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="92">server<pos:position pos:line="23" pos:column="98"/></name></expr></argument>)<pos:position pos:line="23" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="100"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">service<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">.<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">length<pos:position pos:line="24" pos:column="19"/></name></name> <operator pos:line="24" pos:column="20">=<pos:position pos:line="24" pos:column="21"/></operator> <call><name pos:line="24" pos:column="22">strlen<pos:position pos:line="24" pos:column="28"/></name><argument_list pos:line="24" pos:column="28">(<argument><expr><operator pos:line="24" pos:column="29">(<pos:position pos:line="24" pos:column="30"/></operator><name pos:line="24" pos:column="30">char<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">*<pos:position pos:line="24" pos:column="36"/></operator><operator pos:line="24" pos:column="36">)<pos:position pos:line="24" pos:column="37"/></operator> <name><name pos:line="24" pos:column="38">service<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">.<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="46">value<pos:position pos:line="24" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt>

    <expr_stmt><expr><name pos:line="26" pos:column="5">major_status<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <call><name pos:line="26" pos:column="20">gss_import_name<pos:position pos:line="26" pos:column="35"/></name><argument_list pos:line="26" pos:column="35">(<argument><expr><operator pos:line="26" pos:column="36">&amp;<pos:position pos:line="26" pos:column="41"/></operator><name pos:line="26" pos:column="37">minor_status<pos:position pos:line="26" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="26" pos:column="51">&amp;<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="52">service<pos:position pos:line="26" pos:column="59"/></name></expr></argument>,
                                   <argument><expr><name pos:line="27" pos:column="36">gss_nt_service_name<pos:position pos:line="27" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="57">&amp;<pos:position pos:line="27" pos:column="62"/></operator><name pos:line="27" pos:column="58">server_name<pos:position pos:line="27" pos:column="69"/></name></expr></argument>)<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="71"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">!<pos:position pos:line="29" pos:column="10"/></operator><call><name pos:line="29" pos:column="10">check_gss_err<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">major_status<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="38">minor_status<pos:position pos:line="29" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="52">"gss_import_name()"<pos:position pos:line="29" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="73"/></condition><then pos:line="29" pos:column="73"> <block pos:line="29" pos:column="74">{

        <expr_stmt><expr><name pos:line="31" pos:column="9">major_status<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <call><name pos:line="31" pos:column="24">gss_init_sec_context<pos:position pos:line="31" pos:column="44"/></name><argument_list pos:line="31" pos:column="44">(<argument><expr><operator pos:line="31" pos:column="45">&amp;<pos:position pos:line="31" pos:column="50"/></operator><name pos:line="31" pos:column="46">minor_status<pos:position pos:line="31" pos:column="58"/></name></expr></argument>,
                                            <argument><expr><name pos:line="32" pos:column="45">GSS_C_NO_CREDENTIAL<pos:position pos:line="32" pos:column="64"/></name></expr></argument>,
                                            <argument><expr><operator pos:line="33" pos:column="45">&amp;<pos:position pos:line="33" pos:column="50"/></operator><name pos:line="33" pos:column="46">gss_context<pos:position pos:line="33" pos:column="57"/></name></expr></argument>,
                                            <argument><expr><name pos:line="34" pos:column="45">server_name<pos:position pos:line="34" pos:column="56"/></name></expr></argument>,
                                            <argument><expr><name pos:line="35" pos:column="45">gss_mech_spnego<pos:position pos:line="35" pos:column="60"/></name></expr></argument>,
                                            <argument><expr><literal type="number" pos:line="36" pos:column="45">0<pos:position pos:line="36" pos:column="46"/></literal></expr></argument>,
                                            <argument><expr><literal type="number" pos:line="37" pos:column="45">0<pos:position pos:line="37" pos:column="46"/></literal></expr></argument>,
                                            <argument><expr><name pos:line="38" pos:column="45">GSS_C_NO_CHANNEL_BINDINGS<pos:position pos:line="38" pos:column="70"/></name></expr></argument>,
                                            <argument><expr><operator pos:line="39" pos:column="45">&amp;<pos:position pos:line="39" pos:column="50"/></operator><name pos:line="39" pos:column="46">input_token<pos:position pos:line="39" pos:column="57"/></name></expr></argument>,
                                            <argument><expr><name pos:line="40" pos:column="45">NULL<pos:position pos:line="40" pos:column="49"/></name></expr></argument>,
                                            <argument><expr><operator pos:line="41" pos:column="45">&amp;<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="46">output_token<pos:position pos:line="41" pos:column="58"/></name></expr></argument>,
                                            <argument><expr><name pos:line="42" pos:column="45">NULL<pos:position pos:line="42" pos:column="49"/></name></expr></argument>,
                                            <argument><expr><name pos:line="43" pos:column="45">NULL<pos:position pos:line="43" pos:column="49"/></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>

        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><operator pos:line="45" pos:column="13">!<pos:position pos:line="45" pos:column="14"/></operator><call><name pos:line="45" pos:column="14">check_gss_err<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><name pos:line="45" pos:column="28">major_status<pos:position pos:line="45" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="42">minor_status<pos:position pos:line="45" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="56">"gss_init_sec_context()"<pos:position pos:line="45" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="81"/></argument_list></call> <operator pos:line="45" pos:column="82">&amp;&amp;<pos:position pos:line="45" pos:column="92"/></operator> <name><name pos:line="45" pos:column="85">output_token<pos:position pos:line="45" pos:column="97"/></name><operator pos:line="45" pos:column="97">.<pos:position pos:line="45" pos:column="98"/></operator><name pos:line="45" pos:column="98">length<pos:position pos:line="45" pos:column="104"/></name></name></expr>)<pos:position pos:line="45" pos:column="105"/></condition><then pos:line="45" pos:column="105"> <block pos:line="45" pos:column="106">{
            <decl_stmt><decl><type><name pos:line="46" pos:column="13">uint8_t<pos:position pos:line="46" pos:column="20"/></name> <modifier pos:line="46" pos:column="21">*<pos:position pos:line="46" pos:column="22"/></modifier></type><name pos:line="46" pos:column="22">b64buf<pos:position pos:line="46" pos:column="28"/></name> <init pos:line="46" pos:column="29">= <expr><operator pos:line="46" pos:column="31">new<pos:position pos:line="46" pos:column="34"/></operator> <name><name pos:line="46" pos:column="35">uint8_t<pos:position pos:line="46" pos:column="42"/></name><index pos:line="46" pos:column="42">[<expr><call><name pos:line="46" pos:column="43">base64_encode_len<pos:position pos:line="46" pos:column="60"/></name><argument_list pos:line="46" pos:column="60">(<argument><expr><name><name pos:line="46" pos:column="61">output_token<pos:position pos:line="46" pos:column="73"/></name><operator pos:line="46" pos:column="73">.<pos:position pos:line="46" pos:column="74"/></operator><name pos:line="46" pos:column="74">length<pos:position pos:line="46" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="81"/></argument_list></call></expr>]<pos:position pos:line="46" pos:column="82"/></index></name></expr></init></decl>;<pos:position pos:line="46" pos:column="83"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="47" pos:column="13">struct<pos:position pos:line="47" pos:column="19"/></name> <name pos:line="47" pos:column="20">base64_encode_ctx<pos:position pos:line="47" pos:column="37"/></name></name></type> <name pos:line="47" pos:column="38">ctx<pos:position pos:line="47" pos:column="41"/></name></decl>;<pos:position pos:line="47" pos:column="42"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">base64_encode_init<pos:position pos:line="48" pos:column="31"/></name><argument_list pos:line="48" pos:column="31">(<argument><expr><operator pos:line="48" pos:column="32">&amp;<pos:position pos:line="48" pos:column="37"/></operator><name pos:line="48" pos:column="33">ctx<pos:position pos:line="48" pos:column="36"/></name></expr></argument>)<pos:position pos:line="48" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="38"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="49" pos:column="13">size_t<pos:position pos:line="49" pos:column="19"/></name></type> <name pos:line="49" pos:column="20">blen<pos:position pos:line="49" pos:column="24"/></name> <init pos:line="49" pos:column="25">= <expr><call><name pos:line="49" pos:column="27">base64_encode_update<pos:position pos:line="49" pos:column="47"/></name><argument_list pos:line="49" pos:column="47">(<argument><expr><operator pos:line="49" pos:column="48">&amp;<pos:position pos:line="49" pos:column="53"/></operator><name pos:line="49" pos:column="49">ctx<pos:position pos:line="49" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="54">b64buf<pos:position pos:line="49" pos:column="60"/></name></expr></argument>, <argument><expr><name><name pos:line="49" pos:column="62">output_token<pos:position pos:line="49" pos:column="74"/></name><operator pos:line="49" pos:column="74">.<pos:position pos:line="49" pos:column="75"/></operator><name pos:line="49" pos:column="75">length<pos:position pos:line="49" pos:column="81"/></name></name></expr></argument>, <argument><expr><cast type="reinterpret" pos:line="49" pos:column="83">reinterpret_cast<argument_list type="generic" pos:line="49" pos:column="99">&lt;<argument><expr><specifier pos:line="49" pos:column="100">const<pos:position pos:line="49" pos:column="105"/></specifier> <name pos:line="49" pos:column="106">uint8_t<pos:position pos:line="49" pos:column="113"/></name><operator pos:line="49" pos:column="113">*<pos:position pos:line="49" pos:column="114"/></operator></expr></argument>&gt;<pos:position pos:line="49" pos:column="118"/></argument_list><argument_list pos:line="49" pos:column="115">(<argument><expr><name><name pos:line="49" pos:column="116">output_token<pos:position pos:line="49" pos:column="128"/></name><operator pos:line="49" pos:column="128">.<pos:position pos:line="49" pos:column="129"/></operator><name pos:line="49" pos:column="129">value<pos:position pos:line="49" pos:column="134"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="135"/></argument_list></cast></expr></argument>)<pos:position pos:line="49" pos:column="136"/></argument_list></call></expr></init></decl>;<pos:position pos:line="49" pos:column="137"/></decl_stmt>
            <expr_stmt><expr><name pos:line="50" pos:column="13">blen<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">+=<pos:position pos:line="50" pos:column="20"/></operator> <call><name pos:line="50" pos:column="21">base64_encode_final<pos:position pos:line="50" pos:column="40"/></name><argument_list pos:line="50" pos:column="40">(<argument><expr><operator pos:line="50" pos:column="41">&amp;<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="42">ctx<pos:position pos:line="50" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="47">b64buf<pos:position pos:line="50" pos:column="53"/></name><operator pos:line="50" pos:column="53">+<pos:position pos:line="50" pos:column="54"/></operator><name pos:line="50" pos:column="54">blen<pos:position pos:line="50" pos:column="58"/></name></expr></argument>)<pos:position pos:line="50" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="51" pos:column="13">b64buf<pos:position pos:line="51" pos:column="19"/></name><index pos:line="51" pos:column="19">[<expr><name pos:line="51" pos:column="20">blen<pos:position pos:line="51" pos:column="24"/></name></expr>]<pos:position pos:line="51" pos:column="25"/></index></name> <operator pos:line="51" pos:column="26">=<pos:position pos:line="51" pos:column="27"/></operator> <literal type="char" pos:line="51" pos:column="28">'\0'<pos:position pos:line="51" pos:column="32"/></literal></expr>;<pos:position pos:line="51" pos:column="33"/></expr_stmt>

            <expr_stmt><expr><name pos:line="53" pos:column="13">token<pos:position pos:line="53" pos:column="18"/></name> <operator pos:line="53" pos:column="19">=<pos:position pos:line="53" pos:column="20"/></operator> <cast type="reinterpret" pos:line="53" pos:column="21">reinterpret_cast<argument_list type="generic" pos:line="53" pos:column="37">&lt;<argument><expr><name pos:line="53" pos:column="38">char<pos:position pos:line="53" pos:column="42"/></name><operator pos:line="53" pos:column="42">*<pos:position pos:line="53" pos:column="43"/></operator></expr></argument>&gt;<pos:position pos:line="53" pos:column="47"/></argument_list><argument_list pos:line="53" pos:column="44">(<argument><expr><name pos:line="53" pos:column="45">b64buf<pos:position pos:line="53" pos:column="51"/></name></expr></argument>)<pos:position pos:line="53" pos:column="52"/></argument_list></cast></expr>;<pos:position pos:line="53" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>

    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">!<pos:position pos:line="57" pos:column="10"/></operator><name><name pos:line="57" pos:column="10">output_token<pos:position pos:line="57" pos:column="22"/></name><operator pos:line="57" pos:column="22">.<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="23">length<pos:position pos:line="57" pos:column="29"/></name></name></expr>)<pos:position pos:line="57" pos:column="30"/></condition><then pos:line="57" pos:column="30"> <block pos:line="57" pos:column="31">{
        <expr_stmt><expr><name pos:line="58" pos:column="9">token<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">=<pos:position pos:line="58" pos:column="16"/></operator> <operator pos:line="58" pos:column="17">new<pos:position pos:line="58" pos:column="20"/></operator> <name><name pos:line="58" pos:column="21">char<pos:position pos:line="58" pos:column="25"/></name><index pos:line="58" pos:column="25">[<expr><literal type="number" pos:line="58" pos:column="26">6<pos:position pos:line="58" pos:column="27"/></literal></expr>]<pos:position pos:line="58" pos:column="28"/></index></name></expr>;<pos:position pos:line="58" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">memcpy<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><name pos:line="59" pos:column="16">token<pos:position pos:line="59" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="23">"ERROR"<pos:position pos:line="59" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="32">5<pos:position pos:line="59" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">token<pos:position pos:line="60" pos:column="14"/></name><index pos:line="60" pos:column="14">[<expr><literal type="number" pos:line="60" pos:column="15">5<pos:position pos:line="60" pos:column="16"/></literal></expr>]<pos:position pos:line="60" pos:column="17"/></index></name> <operator pos:line="60" pos:column="18">=<pos:position pos:line="60" pos:column="19"/></operator> <literal type="char" pos:line="60" pos:column="20">'\0'<pos:position pos:line="60" pos:column="24"/></literal></expr>;<pos:position pos:line="60" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="63" pos:column="5">gss_delete_sec_context<pos:position pos:line="63" pos:column="27"/></name><argument_list pos:line="63" pos:column="27">(<argument><expr><operator pos:line="63" pos:column="28">&amp;<pos:position pos:line="63" pos:column="33"/></operator><name pos:line="63" pos:column="29">minor_status<pos:position pos:line="63" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="43">&amp;<pos:position pos:line="63" pos:column="48"/></operator><name pos:line="63" pos:column="44">gss_context<pos:position pos:line="63" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="57">NULL<pos:position pos:line="63" pos:column="61"/></name></expr></argument>)<pos:position pos:line="63" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="64" pos:column="5">gss_release_buffer<pos:position pos:line="64" pos:column="23"/></name><argument_list pos:line="64" pos:column="23">(<argument><expr><operator pos:line="64" pos:column="24">&amp;<pos:position pos:line="64" pos:column="29"/></operator><name pos:line="64" pos:column="25">minor_status<pos:position pos:line="64" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="64" pos:column="39">&amp;<pos:position pos:line="64" pos:column="44"/></operator><name pos:line="64" pos:column="40">service<pos:position pos:line="64" pos:column="47"/></name></expr></argument>)<pos:position pos:line="64" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">gss_release_buffer<pos:position pos:line="65" pos:column="23"/></name><argument_list pos:line="65" pos:column="23">(<argument><expr><operator pos:line="65" pos:column="24">&amp;<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="25">minor_status<pos:position pos:line="65" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="65" pos:column="39">&amp;<pos:position pos:line="65" pos:column="44"/></operator><name pos:line="65" pos:column="40">input_token<pos:position pos:line="65" pos:column="51"/></name></expr></argument>)<pos:position pos:line="65" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="66" pos:column="5">gss_release_buffer<pos:position pos:line="66" pos:column="23"/></name><argument_list pos:line="66" pos:column="23">(<argument><expr><operator pos:line="66" pos:column="24">&amp;<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="25">minor_status<pos:position pos:line="66" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="66" pos:column="39">&amp;<pos:position pos:line="66" pos:column="44"/></operator><name pos:line="66" pos:column="40">output_token<pos:position pos:line="66" pos:column="52"/></name></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="67" pos:column="5">gss_release_name<pos:position pos:line="67" pos:column="21"/></name><argument_list pos:line="67" pos:column="21">(<argument><expr><operator pos:line="67" pos:column="22">&amp;<pos:position pos:line="67" pos:column="27"/></operator><name pos:line="67" pos:column="23">minor_status<pos:position pos:line="67" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="67" pos:column="37">&amp;<pos:position pos:line="67" pos:column="42"/></operator><name pos:line="67" pos:column="38">server_name<pos:position pos:line="67" pos:column="49"/></name></expr></argument>)<pos:position pos:line="67" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="51"/></expr_stmt>

    <return pos:line="69" pos:column="5">return <expr><name pos:line="69" pos:column="12">token<pos:position pos:line="69" pos:column="17"/></name></expr>;<pos:position pos:line="69" pos:column="18"/></return>
}<pos:position pos:line="70" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3186_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">errorAppendEntry<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">StoreEntry<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">entry<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">ErrorState<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type> <name pos:line="2" pos:column="51">err<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name><name pos:line="4" pos:column="12">entry<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">-&gt;<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="19">mem_obj<pos:position pos:line="4" pos:column="26"/></name></name> <operator pos:line="4" pos:column="27">!=<pos:position pos:line="4" pos:column="29"/></operator> <name pos:line="4" pos:column="30">NULL<pos:position pos:line="4" pos:column="34"/></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><call><name><name pos:line="5" pos:column="13">entry<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">isEmpty<pos:position pos:line="5" pos:column="27"/></name></name><argument_list pos:line="5" pos:column="27">()<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">4<pos:position pos:line="6" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="15">4<pos:position pos:line="6" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="18">"Creating an error page for entry "<pos:position pos:line="6" pos:column="53"/></literal> <operator pos:line="6" pos:column="54">&lt;&lt;<pos:position pos:line="6" pos:column="62"/></operator> <name pos:line="6" pos:column="57">entry<pos:position pos:line="6" pos:column="62"/></name> <operator pos:line="6" pos:column="63">&lt;&lt;<pos:position pos:line="6" pos:column="71"/></operator>
           <literal type="string" pos:line="7" pos:column="12">" with errorstate "<pos:position pos:line="7" pos:column="31"/></literal> <operator pos:line="7" pos:column="32">&lt;&lt;<pos:position pos:line="7" pos:column="40"/></operator> <name pos:line="7" pos:column="35">err<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">&lt;&lt;<pos:position pos:line="7" pos:column="47"/></operator>
           <literal type="string" pos:line="8" pos:column="12">" page id "<pos:position pos:line="8" pos:column="23"/></literal> <operator pos:line="8" pos:column="24">&lt;&lt;<pos:position pos:line="8" pos:column="32"/></operator> <name><name pos:line="8" pos:column="27">err<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">-&gt;<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="32">page_id<pos:position pos:line="8" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">entry<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">store_status<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">!=<pos:position pos:line="10" pos:column="31"/></operator> <name pos:line="10" pos:column="32">STORE_PENDING<pos:position pos:line="10" pos:column="45"/></name></expr>)<pos:position pos:line="10" pos:column="46"/></condition><then pos:line="10" pos:column="46"> <block pos:line="10" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">4<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="19">2<pos:position pos:line="11" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="22">"Skipping error page due to store_status: "<pos:position pos:line="11" pos:column="65"/></literal> <operator pos:line="11" pos:column="66">&lt;&lt;<pos:position pos:line="11" pos:column="74"/></operator> <name><name pos:line="11" pos:column="69">entry<pos:position pos:line="11" pos:column="74"/></name><operator pos:line="11" pos:column="74">-&gt;<pos:position pos:line="11" pos:column="79"/></operator><name pos:line="11" pos:column="76">store_status<pos:position pos:line="11" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="90"/></expr_stmt>
        <comment type="block" pos:line="12" pos:column="9">/*
         * If the entry is not STORE_PENDING, then no clients
         * care about it, and we don't need to generate an
         * error message
         */</comment>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">assert<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><call><name pos:line="17" pos:column="16">EBIT_TEST<pos:position pos:line="17" pos:column="25"/></name><argument_list pos:line="17" pos:column="25">(<argument><expr><name><name pos:line="17" pos:column="26">entry<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">flags<pos:position pos:line="17" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">ENTRY_ABORTED<pos:position pos:line="17" pos:column="53"/></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">assert<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name><name pos:line="18" pos:column="16">entry<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">mem_obj<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">-&gt;<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="32">nclients<pos:position pos:line="18" pos:column="40"/></name></name> <operator pos:line="18" pos:column="41">==<pos:position pos:line="18" pos:column="43"/></operator> <literal type="number" pos:line="18" pos:column="44">0<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="19" pos:column="9">delete<pos:position pos:line="19" pos:column="15"/></operator> <name pos:line="19" pos:column="16">err<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
        <return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">err<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">-&gt;<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="14">page_id<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">==<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">TCP_RESET<pos:position pos:line="23" pos:column="34"/></name></expr>)<pos:position pos:line="23" pos:column="35"/></condition><then pos:line="23" pos:column="35"> <block pos:line="23" pos:column="36">{
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">err<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">request<pos:position pos:line="24" pos:column="25"/></name></name></expr>)<pos:position pos:line="24" pos:column="26"/></condition><then pos:line="24" pos:column="26"> <block pos:line="24" pos:column="27">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">debugs<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="number" pos:line="25" pos:column="20">4<pos:position pos:line="25" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="23">2<pos:position pos:line="25" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="26">"RSTing this reply"<pos:position pos:line="25" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="26" pos:column="13">err<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">request<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">flags<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">.<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">resetTcp<pos:position pos:line="26" pos:column="41"/></name></name> <operator pos:line="26" pos:column="42">=<pos:position pos:line="26" pos:column="43"/></operator> <literal type="boolean" pos:line="26" pos:column="44">true<pos:position pos:line="26" pos:column="48"/></literal></expr>;<pos:position pos:line="26" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="30" pos:column="5">entry<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">lock<pos:position pos:line="30" pos:column="16"/></name></name><argument_list pos:line="30" pos:column="16">()<pos:position pos:line="30" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">entry<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">buffer<pos:position pos:line="31" pos:column="18"/></name></name><argument_list pos:line="31" pos:column="18">()<pos:position pos:line="31" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">entry<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">replaceHttpReply<pos:position pos:line="32" pos:column="28"/></name></name><argument_list pos:line="32" pos:column="28">( <argument><expr><call><name><name pos:line="32" pos:column="30">err<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">BuildHttpReply<pos:position pos:line="32" pos:column="49"/></name></name><argument_list pos:line="32" pos:column="49">()<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr></argument> )<pos:position pos:line="32" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">EBIT_CLR<pos:position pos:line="33" pos:column="13"/></name><argument_list pos:line="33" pos:column="13">(<argument><expr><name><name pos:line="33" pos:column="14">entry<pos:position pos:line="33" pos:column="19"/></name><operator pos:line="33" pos:column="19">-&gt;<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="21">flags<pos:position pos:line="33" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="28">ENTRY_FWD_HDR_WAIT<pos:position pos:line="33" pos:column="46"/></name></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="34" pos:column="5">entry<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">flush<pos:position pos:line="34" pos:column="17"/></name></name><argument_list pos:line="34" pos:column="17">()<pos:position pos:line="34" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">entry<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">complete<pos:position pos:line="35" pos:column="20"/></name></name><argument_list pos:line="35" pos:column="20">()<pos:position pos:line="35" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="36" pos:column="5">entry<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">negativeCache<pos:position pos:line="36" pos:column="25"/></name></name><argument_list pos:line="36" pos:column="25">()<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="37" pos:column="5">entry<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">releaseRequest<pos:position pos:line="37" pos:column="26"/></name></name><argument_list pos:line="37" pos:column="26">()<pos:position pos:line="37" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="38" pos:column="5">entry<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">unlock<pos:position pos:line="38" pos:column="18"/></name></name><argument_list pos:line="38" pos:column="18">()<pos:position pos:line="38" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="39" pos:column="5">delete<pos:position pos:line="39" pos:column="11"/></operator> <name pos:line="39" pos:column="12">err<pos:position pos:line="39" pos:column="15"/></name></expr>;<pos:position pos:line="39" pos:column="16"/></expr_stmt>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2853_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">ChunkedCodingParser<pos:position pos:line="1" pos:column="25"/></name><operator pos:line="1" pos:column="25">::<pos:position pos:line="1" pos:column="27"/></operator><name pos:line="1" pos:column="27">parseChunkBody<pos:position pos:line="1" pos:column="41"/></name></name><parameter_list pos:line="1" pos:column="41">()<pos:position pos:line="1" pos:column="43"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><name pos:line="3" pos:column="10">theLeftBodySize<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">&gt;<pos:position pos:line="3" pos:column="30"/></operator> <literal type="number" pos:line="3" pos:column="28">0<pos:position pos:line="3" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="31"/></expr_stmt> <comment type="line" pos:line="3" pos:column="32">// Should, really</comment>

    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">size_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">availSize<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><call><name pos:line="5" pos:column="30">min<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">theLeftBodySize<pos:position pos:line="5" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="51">(<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="52">uint64_t<pos:position pos:line="5" pos:column="60"/></name><operator pos:line="5" pos:column="60">)<pos:position pos:line="5" pos:column="61"/></operator><call><name><name pos:line="5" pos:column="61">theIn<pos:position pos:line="5" pos:column="66"/></name><operator pos:line="5" pos:column="66">-&gt;<pos:position pos:line="5" pos:column="71"/></operator><name pos:line="5" pos:column="68">contentSize<pos:position pos:line="5" pos:column="79"/></name></name><argument_list pos:line="5" pos:column="79">()<pos:position pos:line="5" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="83"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">size_t<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">safeSize<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name pos:line="6" pos:column="29">min<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><name pos:line="6" pos:column="33">availSize<pos:position pos:line="6" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="44">(<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="45">size_t<pos:position pos:line="6" pos:column="51"/></name><operator pos:line="6" pos:column="51">)<pos:position pos:line="6" pos:column="52"/></operator><call><name><name pos:line="6" pos:column="52">theOut<pos:position pos:line="6" pos:column="58"/></name><operator pos:line="6" pos:column="58">-&gt;<pos:position pos:line="6" pos:column="63"/></operator><name pos:line="6" pos:column="60">potentialSpaceSize<pos:position pos:line="6" pos:column="78"/></name></name><argument_list pos:line="6" pos:column="78">()<pos:position pos:line="6" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="82"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">doNeedMoreData<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">=<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">availSize<pos:position pos:line="8" pos:column="31"/></name> <operator pos:line="8" pos:column="32">&lt;<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="34">theLeftBodySize<pos:position pos:line="8" pos:column="49"/></name></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>
    <comment type="line" pos:line="9" pos:column="5">// and we may also need more space</comment>

    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">theOut<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">append<pos:position pos:line="11" pos:column="19"/></name></name><argument_list pos:line="11" pos:column="19">(<argument><expr><call><name><name pos:line="11" pos:column="20">theIn<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">content<pos:position pos:line="11" pos:column="34"/></name></name><argument_list pos:line="11" pos:column="34">()<pos:position pos:line="11" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">safeSize<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">theIn<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">consume<pos:position pos:line="12" pos:column="19"/></name></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">safeSize<pos:position pos:line="12" pos:column="28"/></name></expr></argument>)<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">theLeftBodySize<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">-=<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="24">safeSize<pos:position pos:line="13" pos:column="32"/></name></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">theLeftBodySize<pos:position pos:line="15" pos:column="24"/></name> <operator pos:line="15" pos:column="25">==<pos:position pos:line="15" pos:column="27"/></operator> <literal type="number" pos:line="15" pos:column="28">0<pos:position pos:line="15" pos:column="29"/></literal></expr>)<pos:position pos:line="15" pos:column="30"/></condition><then pos:line="15" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">theStep<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">psChunkEnd<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">Must<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><call><name pos:line="18" pos:column="14">needsMoreData<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">()<pos:position pos:line="18" pos:column="29"/></argument_list></call> <operator pos:line="18" pos:column="30">||<pos:position pos:line="18" pos:column="32"/></operator> <call><name pos:line="18" pos:column="33">needsMoreSpace<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">()<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="51"/></expr_stmt></block></else></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

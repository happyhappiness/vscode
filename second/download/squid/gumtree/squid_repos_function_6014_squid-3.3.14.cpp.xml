<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6014_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ESISegment<pos:position pos:line="1" pos:column="11"/></name> <specifier pos:line="1" pos:column="12">const<pos:position pos:line="1" pos:column="17"/></specifier> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier></type>
<name><name pos:line="2" pos:column="1">ESISegment<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">tail<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">()<pos:position pos:line="2" pos:column="19"/></parameter_list> <specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ESISegment<pos:position pos:line="4" pos:column="15"/></name> <specifier pos:line="4" pos:column="16">const<pos:position pos:line="4" pos:column="21"/></specifier> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">result<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">this<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><call><name><name pos:line="6" pos:column="12">result<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">next<pos:position pos:line="6" pos:column="24"/></name><operator pos:line="6" pos:column="24">.<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">getRaw<pos:position pos:line="6" pos:column="31"/></name></name><argument_list pos:line="6" pos:column="31">()<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="34"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="9">result<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <call><name><name pos:line="7" pos:column="18">result<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">next<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">.<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">getRaw<pos:position pos:line="7" pos:column="37"/></name></name><argument_list pos:line="7" pos:column="37">()<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt></block></while>

    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

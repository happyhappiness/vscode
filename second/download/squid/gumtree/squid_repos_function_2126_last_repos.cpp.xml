<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2126_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConfigOptionVector<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">dump<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">StoreEntry<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">e<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list> <specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name><name pos:line="4" pos:column="10">std<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name><name pos:line="4" pos:column="15">vector<pos:position pos:line="4" pos:column="21"/></name><argument_list type="generic" pos:line="4" pos:column="21">&lt;<argument><expr><name pos:line="4" pos:column="22">ConfigOption<pos:position pos:line="4" pos:column="34"/></name> <operator pos:line="4" pos:column="35">*<pos:position pos:line="4" pos:column="36"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="40"/></argument_list></name><operator pos:line="4" pos:column="37">::<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">const_iterator<pos:position pos:line="4" pos:column="53"/></name></name></type> <name pos:line="4" pos:column="54">i<pos:position pos:line="4" pos:column="55"/></name> <init pos:line="4" pos:column="56">= <expr><call><name><name pos:line="4" pos:column="58">options<pos:position pos:line="4" pos:column="65"/></name><operator pos:line="4" pos:column="65">.<pos:position pos:line="4" pos:column="66"/></operator><name pos:line="4" pos:column="66">begin<pos:position pos:line="4" pos:column="71"/></name></name><argument_list pos:line="4" pos:column="71">()<pos:position pos:line="4" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="74"/></init>
            <condition><expr><name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">!=<pos:position pos:line="5" pos:column="17"/></operator> <call><name><name pos:line="5" pos:column="18">options<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">.<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">end<pos:position pos:line="5" pos:column="29"/></name></name><argument_list pos:line="5" pos:column="29">()<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="32"/></condition> <incr><expr><operator pos:line="5" pos:column="33">++<pos:position pos:line="5" pos:column="35"/></operator><name pos:line="5" pos:column="35">i<pos:position pos:line="5" pos:column="36"/></name></expr></incr>)<pos:position pos:line="5" pos:column="37"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><operator pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">i<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">)<pos:position pos:line="6" pos:column="13"/></operator><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">dump<pos:position pos:line="6" pos:column="19"/></name></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">e<pos:position pos:line="6" pos:column="21"/></name></expr></argument>)<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt></block></for>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

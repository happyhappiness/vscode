<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1368.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ErrorState<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">DenyInfoLocation<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">name<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">HttpRequest<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">aRequest<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="71">MemBuf<pos:position pos:line="2" pos:column="77"/></name> <modifier pos:line="2" pos:column="78">&amp;<pos:position pos:line="2" pos:column="83"/></modifier></type><name pos:line="2" pos:column="79">result<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="86"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <specifier pos:line="4" pos:column="10">const<pos:position pos:line="4" pos:column="15"/></specifier> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">m<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">name<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <specifier pos:line="5" pos:column="10">const<pos:position pos:line="5" pos:column="15"/></specifier> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">p<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">m<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <specifier pos:line="6" pos:column="10">const<pos:position pos:line="6" pos:column="15"/></specifier> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">t<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">m<pos:position pos:line="8" pos:column="10"/></name><index pos:line="8" pos:column="10">[<expr><literal type="number" pos:line="8" pos:column="11">0<pos:position pos:line="8" pos:column="12"/></literal></expr>]<pos:position pos:line="8" pos:column="13"/></index></name> <operator pos:line="8" pos:column="14">==<pos:position pos:line="8" pos:column="16"/></operator> <literal type="char" pos:line="8" pos:column="17">'3'<pos:position pos:line="8" pos:column="20"/></literal></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">m<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">+=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">4<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></expr_stmt></block></then></if> <comment type="line" pos:line="9" pos:column="17">// skip "3xx:"</comment>

    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">p<pos:position pos:line="11" pos:column="14"/></name> <operator pos:line="11" pos:column="15">=<pos:position pos:line="11" pos:column="16"/></operator> <call><name pos:line="11" pos:column="17">strchr<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">m<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="11" pos:column="27">'%'<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call><operator pos:line="11" pos:column="31">)<pos:position pos:line="11" pos:column="32"/></operator></expr>)<pos:position pos:line="11" pos:column="33"/></condition> <block pos:line="11" pos:column="34">{
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">result<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">append<pos:position pos:line="12" pos:column="22"/></name></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">m<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="26">p<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">-<pos:position pos:line="12" pos:column="29"/></operator> <name pos:line="12" pos:column="30">m<pos:position pos:line="12" pos:column="31"/></name></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>       <comment type="block" pos:line="12" pos:column="40">/* copy */</comment>
        <expr_stmt><expr><name pos:line="13" pos:column="9">t<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <call><name pos:line="13" pos:column="13">Convert<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><operator pos:line="13" pos:column="22">++<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">p<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="13" pos:column="27">true<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="13" pos:column="33">true<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>       <comment type="block" pos:line="13" pos:column="46">/* convert */</comment>
        <expr_stmt><expr><call><name><name pos:line="14" pos:column="9">result<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">.<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="16">Printf<pos:position pos:line="14" pos:column="22"/></name></name><argument_list pos:line="14" pos:column="22">(<argument><expr><literal type="string" pos:line="14" pos:column="23">"%s"<pos:position pos:line="14" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="29">t<pos:position pos:line="14" pos:column="30"/></name></expr></argument>)<pos:position pos:line="14" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>        <comment type="block" pos:line="14" pos:column="40">/* copy */</comment>
        <expr_stmt><expr><name pos:line="15" pos:column="9">m<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <name pos:line="15" pos:column="13">p<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">+<pos:position pos:line="15" pos:column="16"/></operator> <literal type="number" pos:line="15" pos:column="17">1<pos:position pos:line="15" pos:column="18"/></literal></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>                     <comment type="block" pos:line="15" pos:column="40">/* advance */</comment>
    }<pos:position pos:line="16" pos:column="6"/></block></while>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">m<pos:position pos:line="18" pos:column="11"/></name></expr>)<pos:position pos:line="18" pos:column="12"/></condition><then pos:line="18" pos:column="12">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="19" pos:column="9">result<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">.<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="16">Printf<pos:position pos:line="19" pos:column="22"/></name></name><argument_list pos:line="19" pos:column="22">(<argument><expr><literal type="string" pos:line="19" pos:column="23">"%s"<pos:position pos:line="19" pos:column="27"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="29">m<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt></block></then></if>        <comment type="block" pos:line="19" pos:column="40">/* copy tail */</comment>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><operator pos:line="21" pos:column="12">(<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="13">size_t<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator><call><name><name pos:line="21" pos:column="20">result<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">.<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">contentSize<pos:position pos:line="21" pos:column="38"/></name></name><argument_list pos:line="21" pos:column="38">()<pos:position pos:line="21" pos:column="40"/></argument_list></call> <operator pos:line="21" pos:column="41">==<pos:position pos:line="21" pos:column="43"/></operator> <call><name pos:line="21" pos:column="44">strlen<pos:position pos:line="21" pos:column="50"/></name><argument_list pos:line="21" pos:column="50">(<argument><expr><call><name><name pos:line="21" pos:column="51">result<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">.<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="58">content<pos:position pos:line="21" pos:column="65"/></name></name><argument_list pos:line="21" pos:column="65">()<pos:position pos:line="21" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5755_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">rfc1035NamePack<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">buf<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">size_t<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">sz<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">name<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">off<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">copy<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><call><name pos:line="5" pos:column="18">xstrdup<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">name<pos:position pos:line="5" pos:column="30"/></name></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">t<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
    <comment type="block" pos:line="7" pos:column="5">/*
     * NOTE: use of strtok here makes names like foo....com valid.
     */</comment>
    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><expr><name pos:line="10" pos:column="10">t<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">strtok<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">copy<pos:position pos:line="10" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="27">"."<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></init> <condition><expr><name pos:line="10" pos:column="33">t<pos:position pos:line="10" pos:column="34"/></name></expr>;<pos:position pos:line="10" pos:column="35"/></condition> <incr><expr><name pos:line="10" pos:column="36">t<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">=<pos:position pos:line="10" pos:column="39"/></operator> <call><name pos:line="10" pos:column="40">strtok<pos:position pos:line="10" pos:column="46"/></name><argument_list pos:line="10" pos:column="46">(<argument><expr><name pos:line="10" pos:column="47">NULL<pos:position pos:line="10" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="53">"."<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="57"/></argument_list></call></expr></incr>)<pos:position pos:line="10" pos:column="58"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="11" pos:column="9">off<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">+=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">rfc1035LabelPack<pos:position pos:line="11" pos:column="32"/></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">buf<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">+<pos:position pos:line="11" pos:column="38"/></operator> <name pos:line="11" pos:column="39">off<pos:position pos:line="11" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="44">sz<pos:position pos:line="11" pos:column="46"/></name> <operator pos:line="11" pos:column="47">-<pos:position pos:line="11" pos:column="48"/></operator> <name pos:line="11" pos:column="49">off<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">t<pos:position pos:line="11" pos:column="55"/></name></expr></argument>)<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="57"/></expr_stmt></block></for>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">xfree<pos:position pos:line="12" pos:column="10"/></name><argument_list pos:line="12" pos:column="10">(<argument><expr><name pos:line="12" pos:column="11">copy<pos:position pos:line="12" pos:column="15"/></name></expr></argument>)<pos:position pos:line="12" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">off<pos:position pos:line="13" pos:column="8"/></name> <operator pos:line="13" pos:column="9">+=<pos:position pos:line="13" pos:column="11"/></operator> <call><name pos:line="13" pos:column="12">rfc1035LabelPack<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><name pos:line="13" pos:column="29">buf<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">+<pos:position pos:line="13" pos:column="34"/></operator> <name pos:line="13" pos:column="35">off<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="40">sz<pos:position pos:line="13" pos:column="42"/></name> <operator pos:line="13" pos:column="43">-<pos:position pos:line="13" pos:column="44"/></operator> <name pos:line="13" pos:column="45">off<pos:position pos:line="13" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="50">NULL<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">off<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">&lt;=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="19">sz<pos:position pos:line="14" pos:column="21"/></name></expr></argument>)<pos:position pos:line="14" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">off<pos:position pos:line="15" pos:column="15"/></name></expr>;<pos:position pos:line="15" pos:column="16"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3432_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Adaptation<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">Ecap<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">ServiceRep<pos:position pos:line="1" pos:column="29"/></name><operator pos:line="1" pos:column="29">::<pos:position pos:line="1" pos:column="31"/></operator><name pos:line="1" pos:column="31">AdapterService<pos:position pos:line="1" pos:column="45"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">FindAdapterService<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">String<pos:position pos:line="2" pos:column="50"/></name><modifier pos:line="2" pos:column="50">&amp;<pos:position pos:line="2" pos:column="55"/></modifier></type> <name pos:line="2" pos:column="52">serviceUri<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">AdapterServices<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">::<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">const_iterator<pos:position pos:line="4" pos:column="36"/></name></name></type> <name pos:line="4" pos:column="37">pos<pos:position pos:line="4" pos:column="40"/></name> <init pos:line="4" pos:column="41">= <expr><call><name><name pos:line="4" pos:column="43">TheServices<pos:position pos:line="4" pos:column="54"/></name><operator pos:line="4" pos:column="54">.<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">find<pos:position pos:line="4" pos:column="59"/></name></name><argument_list pos:line="4" pos:column="59">(<argument><expr><call><name><name pos:line="4" pos:column="60">serviceUri<pos:position pos:line="4" pos:column="70"/></name><operator pos:line="4" pos:column="70">.<pos:position pos:line="4" pos:column="71"/></operator><name pos:line="4" pos:column="71">termedBuf<pos:position pos:line="4" pos:column="80"/></name></name><argument_list pos:line="4" pos:column="80">()<pos:position pos:line="4" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="84"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">pos<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">!=<pos:position pos:line="5" pos:column="15"/></operator> <call><name><name pos:line="5" pos:column="16">TheServices<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">.<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="28">end<pos:position pos:line="5" pos:column="31"/></name></name><argument_list pos:line="5" pos:column="31">()<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="34"/></condition><then pos:line="5" pos:column="34"> <block pos:line="5" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">Must<pos:position pos:line="6" pos:column="13"/></name><argument_list pos:line="6" pos:column="13">(<argument><expr><name><name pos:line="6" pos:column="14">pos<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">second<pos:position pos:line="6" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
        <return pos:line="7" pos:column="9">return <expr><name><name pos:line="7" pos:column="16">pos<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">second<pos:position pos:line="7" pos:column="27"/></name></name></expr>;<pos:position pos:line="7" pos:column="28"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
    <return pos:line="9" pos:column="5">return <expr><call><name><name pos:line="9" pos:column="12">ServiceRep<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">::<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">AdapterService<pos:position pos:line="9" pos:column="38"/></name></name><argument_list pos:line="9" pos:column="38">()<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5303_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Client<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">handlePasvReply<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name><name pos:line="2" pos:column="30">Ip<pos:position pos:line="2" pos:column="32"/></name><operator pos:line="2" pos:column="32">::<pos:position pos:line="2" pos:column="34"/></operator><name pos:line="2" pos:column="34">Address<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">&amp;<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="43">srvAddr<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">code<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name><name pos:line="4" pos:column="16">ctrl<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">.<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">replycode<pos:position pos:line="4" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">buf<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">9<pos:position pos:line="6" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="15">3<pos:position pos:line="6" pos:column="16"/></literal></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="18">status<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">()<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="28"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name><name pos:line="8" pos:column="10">Comm<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">::<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">IsConnOpen<pos:position pos:line="8" pos:column="26"/></name></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name><name pos:line="8" pos:column="27">ctrl<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">.<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="32">conn<pos:position pos:line="8" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38"> <block pos:line="8" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">9<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="19">5<pos:position pos:line="9" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="22">"The control connection to the remote end is closed"<pos:position pos:line="9" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="76"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><literal type="boolean" pos:line="10" pos:column="16">false<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">code<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">!=<pos:position pos:line="13" pos:column="16"/></operator> <literal type="number" pos:line="13" pos:column="17">227<pos:position pos:line="13" pos:column="20"/></literal></expr>)<pos:position pos:line="13" pos:column="21"/></condition><then pos:line="13" pos:column="21"> <block pos:line="13" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">9<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="19">2<pos:position pos:line="14" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="22">"PASV not supported by remote end"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="58"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><literal type="boolean" pos:line="15" pos:column="16">false<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="18" pos:column="5">/*  227 Entering Passive Mode (h1,h2,h3,h4,p1,p2).  */</comment>
    <comment type="block" pos:line="19" pos:column="5">/*  ANSI sez [^0-9] is undefined, it breaks on Watcom cc */</comment>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debugs<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">9<pos:position pos:line="20" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="15">5<pos:position pos:line="20" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="18">"scanning: "<pos:position pos:line="20" pos:column="30"/></literal> <operator pos:line="20" pos:column="31">&lt;&lt;<pos:position pos:line="20" pos:column="39"/></operator> <name><name pos:line="20" pos:column="34">ctrl<pos:position pos:line="20" pos:column="38"/></name><operator pos:line="20" pos:column="38">.<pos:position pos:line="20" pos:column="39"/></operator><name pos:line="20" pos:column="39">last_reply<pos:position pos:line="20" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="51"/></expr_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">buf<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <name><name pos:line="22" pos:column="11">ctrl<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">last_reply<pos:position pos:line="22" pos:column="26"/></name></name> <operator pos:line="22" pos:column="27">+<pos:position pos:line="22" pos:column="28"/></operator> <call><name pos:line="22" pos:column="29">strcspn<pos:position pos:line="22" pos:column="36"/></name><argument_list pos:line="22" pos:column="36">(<argument><expr><name><name pos:line="22" pos:column="37">ctrl<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">.<pos:position pos:line="22" pos:column="42"/></operator><name pos:line="22" pos:column="42">last_reply<pos:position pos:line="22" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="54">"0123456789"<pos:position pos:line="22" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="24" pos:column="5">const<pos:position pos:line="24" pos:column="10"/></specifier> <name pos:line="24" pos:column="11">char<pos:position pos:line="24" pos:column="15"/></name> <modifier pos:line="24" pos:column="16">*<pos:position pos:line="24" pos:column="17"/></modifier></type><name pos:line="24" pos:column="17">forceIp<pos:position pos:line="24" pos:column="24"/></name> <init pos:line="24" pos:column="25">= <expr><ternary><condition><expr><name><name pos:line="24" pos:column="27">Config<pos:position pos:line="24" pos:column="33"/></name><operator pos:line="24" pos:column="33">.<pos:position pos:line="24" pos:column="34"/></operator><name pos:line="24" pos:column="34">Ftp<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">.<pos:position pos:line="24" pos:column="38"/></operator><name pos:line="24" pos:column="38">sanitycheck<pos:position pos:line="24" pos:column="49"/></name></name></expr> ?<pos:position pos:line="24" pos:column="51"/></condition><then pos:line="24" pos:column="51">
                          <expr><name><name pos:line="25" pos:column="27">fd_table<pos:position pos:line="25" pos:column="35"/></name><index pos:line="25" pos:column="35">[<expr><name><name pos:line="25" pos:column="36">ctrl<pos:position pos:line="25" pos:column="40"/></name><operator pos:line="25" pos:column="40">.<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="41">conn<pos:position pos:line="25" pos:column="45"/></name><operator pos:line="25" pos:column="45">-&gt;<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="47">fd<pos:position pos:line="25" pos:column="49"/></name></name></expr>]<pos:position pos:line="25" pos:column="50"/></index></name><operator pos:line="25" pos:column="50">.<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="51">ipaddr<pos:position pos:line="25" pos:column="57"/></name></expr> <pos:position pos:line="25" pos:column="58"/></then><else pos:line="25" pos:column="58">: <expr><name pos:line="25" pos:column="60">NULL<pos:position pos:line="25" pos:column="64"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="25" pos:column="65"/></decl_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><call><name><name pos:line="26" pos:column="10">Ftp<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">::<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">ParseIpPort<pos:position pos:line="26" pos:column="26"/></name></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">buf<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">forceIp<pos:position pos:line="26" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">srvAddr<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="50"/></condition><then pos:line="26" pos:column="50"> <block pos:line="26" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">debugs<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="number" pos:line="27" pos:column="16">9<pos:position pos:line="27" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="19">DBG_IMPORTANT<pos:position pos:line="27" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="34">"Unsafe PASV reply from "<pos:position pos:line="27" pos:column="59"/></literal> <operator pos:line="27" pos:column="60">&lt;&lt;<pos:position pos:line="27" pos:column="68"/></operator>
               <name><name pos:line="28" pos:column="16">ctrl<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">.<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">conn<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">-&gt;<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="27">remote<pos:position pos:line="28" pos:column="33"/></name></name> <operator pos:line="28" pos:column="34">&lt;&lt;<pos:position pos:line="28" pos:column="42"/></operator> <literal type="string" pos:line="28" pos:column="37">": "<pos:position pos:line="28" pos:column="41"/></literal> <operator pos:line="28" pos:column="42">&lt;&lt;<pos:position pos:line="28" pos:column="50"/></operator> <name><name pos:line="28" pos:column="45">ctrl<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">.<pos:position pos:line="28" pos:column="50"/></operator><name pos:line="28" pos:column="50">last_reply<pos:position pos:line="28" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="62"/></expr_stmt>
        <return pos:line="29" pos:column="9">return <expr><literal type="boolean" pos:line="29" pos:column="16">false<pos:position pos:line="29" pos:column="21"/></literal></expr>;<pos:position pos:line="29" pos:column="22"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">data<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">.<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">addr<pos:position pos:line="32" pos:column="14"/></name></name><argument_list pos:line="32" pos:column="14">(<argument><expr><name pos:line="32" pos:column="15">srvAddr<pos:position pos:line="32" pos:column="22"/></name></expr></argument>)<pos:position pos:line="32" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>

    <return pos:line="34" pos:column="5">return <expr><literal type="boolean" pos:line="34" pos:column="12">true<pos:position pos:line="34" pos:column="16"/></literal></expr>;<pos:position pos:line="34" pos:column="17"/></return>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

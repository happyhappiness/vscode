<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1809_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HelperServerBase<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">closePipesSafely<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">id_name<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="4" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">shutdown<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><name><name pos:line="5" pos:column="14">writePipe<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">-&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">fd<pos:position pos:line="5" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="29">SD_BOTH<pos:position pos:line="5" pos:column="36"/></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt>
<cpp:endif pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">endif<pos:position pos:line="6" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="8" pos:column="5">flags<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">.<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">closing<pos:position pos:line="8" pos:column="18"/></name></name> <operator pos:line="8" pos:column="19">=<pos:position pos:line="8" pos:column="20"/></operator> <literal type="boolean" pos:line="8" pos:column="21">true<pos:position pos:line="8" pos:column="25"/></literal></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">readPipe<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">fd<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">==<pos:position pos:line="9" pos:column="24"/></operator> <name><name pos:line="9" pos:column="25">writePipe<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">fd<pos:position pos:line="9" pos:column="38"/></name></name></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="9">readPipe<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">fd<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt></block></then>
    <else pos:line="11" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="12" pos:column="9">readPipe<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">-&gt;<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="19">close<pos:position pos:line="12" pos:column="24"/></name></name><argument_list pos:line="12" pos:column="24">()<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">writePipe<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">close<pos:position pos:line="13" pos:column="21"/></name></name><argument_list pos:line="13" pos:column="21">()<pos:position pos:line="13" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">_SQUID_WINDOWS_<pos:position pos:line="15" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">hIpc<pos:position pos:line="16" pos:column="13"/></name></expr>)<pos:position pos:line="16" pos:column="14"/></condition><then pos:line="16" pos:column="14"> <block pos:line="16" pos:column="15">{
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name pos:line="17" pos:column="13">WaitForSingleObject<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">hIpc<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="39">5000<pos:position pos:line="17" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call> <operator pos:line="17" pos:column="45">!=<pos:position pos:line="17" pos:column="47"/></operator> <name pos:line="17" pos:column="48">WAIT_OBJECT_0<pos:position pos:line="17" pos:column="61"/></name></expr>)<pos:position pos:line="17" pos:column="62"/></condition><then pos:line="17" pos:column="62"> <block pos:line="17" pos:column="63">{
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">getCurrentTime<pos:position pos:line="18" pos:column="27"/></name><argument_list pos:line="18" pos:column="27">()<pos:position pos:line="18" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">debugs<pos:position pos:line="19" pos:column="19"/></name><argument_list pos:line="19" pos:column="19">(<argument><expr><literal type="number" pos:line="19" pos:column="20">84<pos:position pos:line="19" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="24">DBG_IMPORTANT<pos:position pos:line="19" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="39">"WARNING: "<pos:position pos:line="19" pos:column="50"/></literal> <operator pos:line="19" pos:column="51">&lt;&lt;<pos:position pos:line="19" pos:column="59"/></operator> <name pos:line="19" pos:column="54">id_name<pos:position pos:line="19" pos:column="61"/></name> <operator pos:line="19" pos:column="62">&lt;&lt;<pos:position pos:line="19" pos:column="70"/></operator>
                   <literal type="string" pos:line="20" pos:column="20">" #"<pos:position pos:line="20" pos:column="24"/></literal> <operator pos:line="20" pos:column="25">&lt;&lt;<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="28">index<pos:position pos:line="20" pos:column="33"/></name> <operator pos:line="20" pos:column="34">&lt;&lt;<pos:position pos:line="20" pos:column="42"/></operator> <literal type="string" pos:line="20" pos:column="37">" (PID "<pos:position pos:line="20" pos:column="45"/></literal> <operator pos:line="20" pos:column="46">&lt;&lt;<pos:position pos:line="20" pos:column="54"/></operator> <operator pos:line="20" pos:column="49">(<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="50">long<pos:position pos:line="20" pos:column="54"/></name> <name pos:line="20" pos:column="55">int<pos:position pos:line="20" pos:column="58"/></name><operator pos:line="20" pos:column="58">)<pos:position pos:line="20" pos:column="59"/></operator><name pos:line="20" pos:column="59">pid<pos:position pos:line="20" pos:column="62"/></name> <operator pos:line="20" pos:column="63">&lt;&lt;<pos:position pos:line="20" pos:column="71"/></operator> <literal type="string" pos:line="20" pos:column="66">") didn't exit in 5 seconds"<pos:position pos:line="20" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="96"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">CloseHandle<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">hIpc<pos:position pos:line="22" pos:column="25"/></name></expr></argument>)<pos:position pos:line="22" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5151_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Comm<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">ConnOpener<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">retrySleep<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">()<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><operator pos:line="4" pos:column="10">!<pos:position pos:line="4" pos:column="11"/></operator><name><name pos:line="4" pos:column="11">calls_<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">.<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">sleep_<pos:position pos:line="4" pos:column="24"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">closeFd<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">()<pos:position pos:line="5" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">calls_<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">.<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">sleep_<pos:position pos:line="6" pos:column="18"/></name></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <literal type="boolean" pos:line="6" pos:column="21">true<pos:position pos:line="6" pos:column="25"/></literal></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">eventAdd<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><literal type="string" pos:line="7" pos:column="14">"Comm::ConnOpener::DelayedConnectRetry"<pos:position pos:line="7" pos:column="53"/></literal></expr></argument>,
             <argument><expr><name><name pos:line="8" pos:column="14">Comm<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">::<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">ConnOpener<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">::<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="32">DelayedConnectRetry<pos:position pos:line="8" pos:column="51"/></name></name></expr></argument>,
             <argument><expr><operator pos:line="9" pos:column="14">new<pos:position pos:line="9" pos:column="17"/></operator> <call><name pos:line="9" pos:column="18">Pointer<pos:position pos:line="9" pos:column="25"/></name><argument_list pos:line="9" pos:column="25">(<argument><expr><name pos:line="9" pos:column="26">this<pos:position pos:line="9" pos:column="30"/></name></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="33">0.05<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="39">0<pos:position pos:line="9" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="9" pos:column="42">false<pos:position pos:line="9" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="49"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

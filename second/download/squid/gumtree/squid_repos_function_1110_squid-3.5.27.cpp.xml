<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1110_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">dump_peer<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">StoreEntry<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type> <name pos:line="2" pos:column="24">entry<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">name<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">CachePeer<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type> <name pos:line="2" pos:column="61">p<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CachePeerDomainList<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">d<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">NeighborTypeDomainList<pos:position pos:line="5" pos:column="27"/></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">t<pos:position pos:line="5" pos:column="30"/></name></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">LOCAL_ARRAY<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">xname<pos:position pos:line="6" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="30">128<pos:position pos:line="6" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>

    <while pos:line="8" pos:column="5">while <condition pos:line="8" pos:column="11">(<expr><name pos:line="8" pos:column="12">p<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">!=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">NULL<pos:position pos:line="8" pos:column="21"/></name></expr>)<pos:position pos:line="8" pos:column="22"/></condition> <block pos:line="8" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">storeAppendPrintf<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">entry<pos:position pos:line="9" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="34">"%s %s %s %d %d name=%s"<pos:position pos:line="9" pos:column="58"/></literal></expr></argument>,
                          <argument><expr><name pos:line="10" pos:column="27">name<pos:position pos:line="10" pos:column="31"/></name></expr></argument>,
                          <argument><expr><name><name pos:line="11" pos:column="27">p<pos:position pos:line="11" pos:column="28"/></name><operator pos:line="11" pos:column="28">-&gt;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="30">host<pos:position pos:line="11" pos:column="34"/></name></name></expr></argument>,
                          <argument><expr><call><name pos:line="12" pos:column="27">neighborTypeStr<pos:position pos:line="12" pos:column="42"/></name><argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">p<pos:position pos:line="12" pos:column="44"/></name></expr></argument>)<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr></argument>,
                          <argument><expr><name><name pos:line="13" pos:column="27">p<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">http_port<pos:position pos:line="13" pos:column="39"/></name></name></expr></argument>,
                          <argument><expr><name><name pos:line="14" pos:column="27">p<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">icp<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">.<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">port<pos:position pos:line="14" pos:column="38"/></name></name></expr></argument>,
                          <argument><expr><name><name pos:line="15" pos:column="27">p<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">-&gt;<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="30">name<pos:position pos:line="15" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">dump_peer_options<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">entry<pos:position pos:line="16" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="34">p<pos:position pos:line="16" pos:column="35"/></name></expr></argument>)<pos:position pos:line="16" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="37"/></expr_stmt>

        <for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><expr><name pos:line="18" pos:column="14">d<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <name><name pos:line="18" pos:column="18">p<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">-&gt;<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="21">peer_domain<pos:position pos:line="18" pos:column="32"/></name></name></expr>;<pos:position pos:line="18" pos:column="33"/></init> <condition><expr><name pos:line="18" pos:column="34">d<pos:position pos:line="18" pos:column="35"/></name></expr>;<pos:position pos:line="18" pos:column="36"/></condition> <incr><expr><name pos:line="18" pos:column="37">d<pos:position pos:line="18" pos:column="38"/></name> <operator pos:line="18" pos:column="39">=<pos:position pos:line="18" pos:column="40"/></operator> <name><name pos:line="18" pos:column="41">d<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">-&gt;<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="44">next<pos:position pos:line="18" pos:column="48"/></name></name></expr></incr>)<pos:position pos:line="18" pos:column="49"/></control> <block pos:line="18" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">storeAppendPrintf<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><name pos:line="19" pos:column="31">entry<pos:position pos:line="19" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="38">"cache_peer_domain %s %s%s\n"<pos:position pos:line="19" pos:column="67"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="20" pos:column="31">p<pos:position pos:line="20" pos:column="32"/></name><operator pos:line="20" pos:column="32">-&gt;<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="34">host<pos:position pos:line="20" pos:column="38"/></name></name></expr></argument>,
                              <argument><expr><ternary><condition><expr><name><name pos:line="21" pos:column="31">d<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">do_ping<pos:position pos:line="21" pos:column="41"/></name></name></expr> ?<pos:position pos:line="21" pos:column="43"/></condition><then pos:line="21" pos:column="43"> <expr><name pos:line="21" pos:column="44">null_string<pos:position pos:line="21" pos:column="55"/></name></expr> <pos:position pos:line="21" pos:column="56"/></then><else pos:line="21" pos:column="56">: <expr><literal type="string" pos:line="21" pos:column="58">"!"<pos:position pos:line="21" pos:column="61"/></literal></expr></else></ternary></expr></argument>,
                              <argument><expr><name><name pos:line="22" pos:column="31">d<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">domain<pos:position pos:line="22" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></for>

        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">(<expr><name><name pos:line="25" pos:column="13">p<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">access<pos:position pos:line="25" pos:column="22"/></name></name></expr>)<pos:position pos:line="25" pos:column="23"/></condition><then pos:line="25" pos:column="23"> <block pos:line="25" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">snprintf<pos:position pos:line="26" pos:column="21"/></name><argument_list pos:line="26" pos:column="21">(<argument><expr><name pos:line="26" pos:column="22">xname<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="29">128<pos:position pos:line="26" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="34">"cache_peer_access %s"<pos:position pos:line="26" pos:column="56"/></literal></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="58">p<pos:position pos:line="26" pos:column="59"/></name><operator pos:line="26" pos:column="59">-&gt;<pos:position pos:line="26" pos:column="64"/></operator><name pos:line="26" pos:column="61">name<pos:position pos:line="26" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">dump_acl_access<pos:position pos:line="27" pos:column="28"/></name><argument_list pos:line="27" pos:column="28">(<argument><expr><name pos:line="27" pos:column="29">entry<pos:position pos:line="27" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="36">xname<pos:position pos:line="27" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="43">p<pos:position pos:line="27" pos:column="44"/></name><operator pos:line="27" pos:column="44">-&gt;<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="46">access<pos:position pos:line="27" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>

        <for pos:line="30" pos:column="9">for <control pos:line="30" pos:column="13">(<init><expr><name pos:line="30" pos:column="14">t<pos:position pos:line="30" pos:column="15"/></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name><name pos:line="30" pos:column="18">p<pos:position pos:line="30" pos:column="19"/></name><operator pos:line="30" pos:column="19">-&gt;<pos:position pos:line="30" pos:column="24"/></operator><name pos:line="30" pos:column="21">typelist<pos:position pos:line="30" pos:column="29"/></name></name></expr>;<pos:position pos:line="30" pos:column="30"/></init> <condition><expr><name pos:line="30" pos:column="31">t<pos:position pos:line="30" pos:column="32"/></name></expr>;<pos:position pos:line="30" pos:column="33"/></condition> <incr><expr><name pos:line="30" pos:column="34">t<pos:position pos:line="30" pos:column="35"/></name> <operator pos:line="30" pos:column="36">=<pos:position pos:line="30" pos:column="37"/></operator> <name><name pos:line="30" pos:column="38">t<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">-&gt;<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="41">next<pos:position pos:line="30" pos:column="45"/></name></name></expr></incr>)<pos:position pos:line="30" pos:column="46"/></control> <block pos:line="30" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">storeAppendPrintf<pos:position pos:line="31" pos:column="30"/></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">entry<pos:position pos:line="31" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="38">"neighbor_type_domain %s %s %s\n"<pos:position pos:line="31" pos:column="71"/></literal></expr></argument>,
                              <argument><expr><name><name pos:line="32" pos:column="31">p<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">host<pos:position pos:line="32" pos:column="38"/></name></name></expr></argument>,
                              <argument><expr><call><name pos:line="33" pos:column="31">peer_type_str<pos:position pos:line="33" pos:column="44"/></name><argument_list pos:line="33" pos:column="44">(<argument><expr><name><name pos:line="33" pos:column="45">t<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">-&gt;<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="48">type<pos:position pos:line="33" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call></expr></argument>,
                              <argument><expr><name><name pos:line="34" pos:column="31">t<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">-&gt;<pos:position pos:line="34" pos:column="37"/></operator><name pos:line="34" pos:column="34">domain<pos:position pos:line="34" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></for>

        <expr_stmt><expr><name pos:line="37" pos:column="9">p<pos:position pos:line="37" pos:column="10"/></name> <operator pos:line="37" pos:column="11">=<pos:position pos:line="37" pos:column="12"/></operator> <name><name pos:line="37" pos:column="13">p<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">-&gt;<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="16">next<pos:position pos:line="37" pos:column="20"/></name></name></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></while>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

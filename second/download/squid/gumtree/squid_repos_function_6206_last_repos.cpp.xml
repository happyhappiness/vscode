<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6206_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Log<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Format<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">SquidUserAgent<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name><name pos:line="2" pos:column="35">AccessLogEntry<pos:position pos:line="2" pos:column="49"/></name><operator pos:line="2" pos:column="49">::<pos:position pos:line="2" pos:column="51"/></operator><name pos:line="2" pos:column="51">Pointer<pos:position pos:line="2" pos:column="58"/></name></name> <modifier pos:line="2" pos:column="59">&amp;<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="60">al<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">Logfile<pos:position pos:line="2" pos:column="71"/></name> <modifier pos:line="2" pos:column="72">*<pos:position pos:line="2" pos:column="73"/></modifier></type> <name pos:line="2" pos:column="74">logfile<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="82"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">agent<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">NULL<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name><name pos:line="6" pos:column="9">al<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">-&gt;<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="13">request<pos:position pos:line="6" pos:column="20"/></name></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition><then pos:line="6" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="9">agent<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">=<pos:position pos:line="7" pos:column="16"/></operator> <call><name><name pos:line="7" pos:column="17">al<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">request<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">header<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">.<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">getStr<pos:position pos:line="7" pos:column="43"/></name></name><argument_list pos:line="7" pos:column="43">(<argument><expr><name><name pos:line="7" pos:column="44">Http<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">::<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="50">HdrType<pos:position pos:line="7" pos:column="57"/></name><operator pos:line="7" pos:column="57">::<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="59">USER_AGENT<pos:position pos:line="7" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="71"/></expr_stmt></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">agent<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">||<pos:position pos:line="9" pos:column="18"/></operator> <operator pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">agent<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">==<pos:position pos:line="9" pos:column="28"/></operator> <literal type="char" pos:line="9" pos:column="29">'\0'<pos:position pos:line="9" pos:column="33"/></literal></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">agent<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="string" pos:line="10" pos:column="17">"-"<pos:position pos:line="10" pos:column="20"/></literal></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name></type> <name><name pos:line="12" pos:column="10">clientip<pos:position pos:line="12" pos:column="18"/></name><index pos:line="12" pos:column="18">[<expr><name pos:line="12" pos:column="19">MAX_IPSTRLEN<pos:position pos:line="12" pos:column="31"/></name></expr>]<pos:position pos:line="12" pos:column="32"/></index></name></decl>;<pos:position pos:line="12" pos:column="33"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">al<pos:position pos:line="13" pos:column="7"/></name><operator pos:line="13" pos:column="7">-&gt;<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="9">getLogClientIp<pos:position pos:line="13" pos:column="23"/></name></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">clientip<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">MAX_IPSTRLEN<pos:position pos:line="13" pos:column="46"/></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">logfilePrintf<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">logfile<pos:position pos:line="15" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="28">"%s [%s] \"%s\"\n"<pos:position pos:line="15" pos:column="46"/></literal></expr></argument>,
                  <argument><expr><name pos:line="16" pos:column="19">clientip<pos:position pos:line="16" pos:column="27"/></name></expr></argument>,
                  <argument><expr><call><name><name pos:line="17" pos:column="19">Time<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">::<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">FormatHttpd<pos:position pos:line="17" pos:column="36"/></name></name><argument_list pos:line="17" pos:column="36">(<argument><expr><name pos:line="17" pos:column="37">squid_curtime<pos:position pos:line="17" pos:column="50"/></name></expr></argument>)<pos:position pos:line="17" pos:column="51"/></argument_list></call></expr></argument>,
                  <argument><expr><name pos:line="18" pos:column="19">agent<pos:position pos:line="18" pos:column="24"/></name></expr></argument>)<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5990_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int64_t<pos:position pos:line="1" pos:column="8"/></name></type>
<name><name pos:line="2" pos:column="1">HierarchyLogEntry<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">totalResponseTime<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">()<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// This should not really happen, but there may be rare code</comment>
    <comment type="line" pos:line="5" pos:column="5">// paths that lead to FwdState discarded (or transaction logged)</comment>
    <comment type="line" pos:line="6" pos:column="5">// without (or before) a stopPeerClock() call.</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">firstConnStart_<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">tv_sec<pos:position pos:line="7" pos:column="31"/></name></name> <operator pos:line="7" pos:column="32">&amp;&amp;<pos:position pos:line="7" pos:column="42"/></operator> <name pos:line="7" pos:column="35">totalResponseTime_<pos:position pos:line="7" pos:column="53"/></name> <operator pos:line="7" pos:column="54">&lt;<pos:position pos:line="7" pos:column="58"/></operator> <literal type="number" pos:line="7" pos:column="56">0<pos:position pos:line="7" pos:column="57"/></literal></expr>)<pos:position pos:line="7" pos:column="58"/></condition><then pos:line="7" pos:column="58">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">stopPeerClock<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><literal type="boolean" pos:line="8" pos:column="23">false<pos:position pos:line="8" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt></block></then></if>

    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">totalResponseTime_<pos:position pos:line="10" pos:column="30"/></name></expr>;<pos:position pos:line="10" pos:column="31"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

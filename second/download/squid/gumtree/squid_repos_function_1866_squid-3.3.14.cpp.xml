<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1866_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">neighborUp<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">CachePeer<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type> <name pos:line="2" pos:column="30">p<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">p<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">-&gt;<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="13">tcp_up<pos:position pos:line="4" pos:column="19"/></name></name></expr>)<pos:position pos:line="4" pos:column="20"/></condition><then pos:line="4" pos:column="20"> <block pos:line="4" pos:column="21">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><call><name pos:line="5" pos:column="14">peerProbeConnect<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><operator pos:line="5" pos:column="31">(<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">CachePeer<pos:position pos:line="5" pos:column="41"/></name> <operator pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></operator><operator pos:line="5" pos:column="43">)<pos:position pos:line="5" pos:column="44"/></operator> <name pos:line="5" pos:column="45">p<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="48"/></condition><then pos:line="5" pos:column="48"> <block pos:line="5" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="6" pos:column="13">debugs<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><literal type="number" pos:line="6" pos:column="20">15<pos:position pos:line="6" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="24">8<pos:position pos:line="6" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="27">"neighborUp: DOWN (probed): "<pos:position pos:line="6" pos:column="56"/></literal> <operator pos:line="6" pos:column="57">&lt;&lt;<pos:position pos:line="6" pos:column="65"/></operator> <name><name pos:line="6" pos:column="60">p<pos:position pos:line="6" pos:column="61"/></name><operator pos:line="6" pos:column="61">-&gt;<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="63">host<pos:position pos:line="6" pos:column="67"/></name></name> <operator pos:line="6" pos:column="68">&lt;&lt;<pos:position pos:line="6" pos:column="76"/></operator> <literal type="string" pos:line="6" pos:column="71">" ("<pos:position pos:line="6" pos:column="75"/></literal> <operator pos:line="6" pos:column="76">&lt;&lt;<pos:position pos:line="6" pos:column="84"/></operator> <name><name pos:line="6" pos:column="79">p<pos:position pos:line="6" pos:column="80"/></name><operator pos:line="6" pos:column="80">-&gt;<pos:position pos:line="6" pos:column="85"/></operator><name pos:line="6" pos:column="82">in_addr<pos:position pos:line="6" pos:column="89"/></name></name> <operator pos:line="6" pos:column="90">&lt;&lt;<pos:position pos:line="6" pos:column="98"/></operator> <literal type="string" pos:line="6" pos:column="93">")"<pos:position pos:line="6" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="98"/></expr_stmt>
            <return pos:line="7" pos:column="13">return <expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></return>
        }<pos:position pos:line="8" pos:column="10"/></block></then></if>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="11" pos:column="5">/*
     * The CachePeer can not be UP if we don't have any IP addresses
     * for it.
     */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><literal type="number" pos:line="15" pos:column="9">0<pos:position pos:line="15" pos:column="10"/></literal> <operator pos:line="15" pos:column="11">==<pos:position pos:line="15" pos:column="13"/></operator> <name><name pos:line="15" pos:column="14">p<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">n_addresses<pos:position pos:line="15" pos:column="28"/></name></name></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29"> <block pos:line="15" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">15<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">8<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="23">"neighborUp: DOWN (no-ip): "<pos:position pos:line="16" pos:column="51"/></literal> <operator pos:line="16" pos:column="52">&lt;&lt;<pos:position pos:line="16" pos:column="60"/></operator> <name><name pos:line="16" pos:column="55">p<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">-&gt;<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="58">host<pos:position pos:line="16" pos:column="62"/></name></name> <operator pos:line="16" pos:column="63">&lt;&lt;<pos:position pos:line="16" pos:column="71"/></operator> <literal type="string" pos:line="16" pos:column="66">" ("<pos:position pos:line="16" pos:column="70"/></literal> <operator pos:line="16" pos:column="71">&lt;&lt;<pos:position pos:line="16" pos:column="79"/></operator> <name><name pos:line="16" pos:column="74">p<pos:position pos:line="16" pos:column="75"/></name><operator pos:line="16" pos:column="75">-&gt;<pos:position pos:line="16" pos:column="80"/></operator><name pos:line="16" pos:column="77">in_addr<pos:position pos:line="16" pos:column="84"/></name></name> <operator pos:line="16" pos:column="85">&lt;&lt;<pos:position pos:line="16" pos:column="93"/></operator> <literal type="string" pos:line="16" pos:column="88">")"<pos:position pos:line="16" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="93"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">p<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">options<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">no_query<pos:position pos:line="20" pos:column="28"/></name></name></expr>)<pos:position pos:line="20" pos:column="29"/></condition><then pos:line="20" pos:column="29"> <block pos:line="20" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">15<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="20">8<pos:position pos:line="21" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="23">"neighborUp: UP (no-query): "<pos:position pos:line="21" pos:column="52"/></literal> <operator pos:line="21" pos:column="53">&lt;&lt;<pos:position pos:line="21" pos:column="61"/></operator> <name><name pos:line="21" pos:column="56">p<pos:position pos:line="21" pos:column="57"/></name><operator pos:line="21" pos:column="57">-&gt;<pos:position pos:line="21" pos:column="62"/></operator><name pos:line="21" pos:column="59">host<pos:position pos:line="21" pos:column="63"/></name></name> <operator pos:line="21" pos:column="64">&lt;&lt;<pos:position pos:line="21" pos:column="72"/></operator> <literal type="string" pos:line="21" pos:column="67">" ("<pos:position pos:line="21" pos:column="71"/></literal> <operator pos:line="21" pos:column="72">&lt;&lt;<pos:position pos:line="21" pos:column="80"/></operator> <name><name pos:line="21" pos:column="75">p<pos:position pos:line="21" pos:column="76"/></name><operator pos:line="21" pos:column="76">-&gt;<pos:position pos:line="21" pos:column="81"/></operator><name pos:line="21" pos:column="78">in_addr<pos:position pos:line="21" pos:column="85"/></name></name> <operator pos:line="21" pos:column="86">&lt;&lt;<pos:position pos:line="21" pos:column="94"/></operator> <literal type="string" pos:line="21" pos:column="89">")"<pos:position pos:line="21" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="94"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">1<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">p<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">-&gt;<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="12">stats<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">.<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">probe_start<pos:position pos:line="25" pos:column="29"/></name></name> <operator pos:line="25" pos:column="30">!=<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="33">0<pos:position pos:line="25" pos:column="34"/></literal> <operator pos:line="25" pos:column="35">&amp;&amp;<pos:position pos:line="25" pos:column="45"/></operator>
            <name pos:line="26" pos:column="13">squid_curtime<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">-<pos:position pos:line="26" pos:column="28"/></operator> <name><name pos:line="26" pos:column="29">p<pos:position pos:line="26" pos:column="30"/></name><operator pos:line="26" pos:column="30">-&gt;<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="32">stats<pos:position pos:line="26" pos:column="37"/></name><operator pos:line="26" pos:column="37">.<pos:position pos:line="26" pos:column="38"/></operator><name pos:line="26" pos:column="38">probe_start<pos:position pos:line="26" pos:column="49"/></name></name> <operator pos:line="26" pos:column="50">&gt;<pos:position pos:line="26" pos:column="54"/></operator> <name><name pos:line="26" pos:column="52">Config<pos:position pos:line="26" pos:column="58"/></name><operator pos:line="26" pos:column="58">.<pos:position pos:line="26" pos:column="59"/></operator><name pos:line="26" pos:column="59">Timeout<pos:position pos:line="26" pos:column="66"/></name><operator pos:line="26" pos:column="66">.<pos:position pos:line="26" pos:column="67"/></operator><name pos:line="26" pos:column="67">deadPeer<pos:position pos:line="26" pos:column="75"/></name></name></expr>)<pos:position pos:line="26" pos:column="76"/></condition><then pos:line="26" pos:column="76"> <block pos:line="26" pos:column="77">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">debugs<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="number" pos:line="27" pos:column="16">15<pos:position pos:line="27" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="20">8<pos:position pos:line="27" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="23">"neighborUp: DOWN (dead): "<pos:position pos:line="27" pos:column="50"/></literal> <operator pos:line="27" pos:column="51">&lt;&lt;<pos:position pos:line="27" pos:column="59"/></operator> <name><name pos:line="27" pos:column="54">p<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">host<pos:position pos:line="27" pos:column="61"/></name></name> <operator pos:line="27" pos:column="62">&lt;&lt;<pos:position pos:line="27" pos:column="70"/></operator> <literal type="string" pos:line="27" pos:column="65">" ("<pos:position pos:line="27" pos:column="69"/></literal> <operator pos:line="27" pos:column="70">&lt;&lt;<pos:position pos:line="27" pos:column="78"/></operator> <name><name pos:line="27" pos:column="73">p<pos:position pos:line="27" pos:column="74"/></name><operator pos:line="27" pos:column="74">-&gt;<pos:position pos:line="27" pos:column="79"/></operator><name pos:line="27" pos:column="76">in_addr<pos:position pos:line="27" pos:column="83"/></name></name> <operator pos:line="27" pos:column="84">&lt;&lt;<pos:position pos:line="27" pos:column="92"/></operator> <literal type="string" pos:line="27" pos:column="87">")"<pos:position pos:line="27" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="92"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">debugs<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><literal type="number" pos:line="31" pos:column="12">15<pos:position pos:line="31" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="16">8<pos:position pos:line="31" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="19">"neighborUp: UP: "<pos:position pos:line="31" pos:column="37"/></literal> <operator pos:line="31" pos:column="38">&lt;&lt;<pos:position pos:line="31" pos:column="46"/></operator> <name><name pos:line="31" pos:column="41">p<pos:position pos:line="31" pos:column="42"/></name><operator pos:line="31" pos:column="42">-&gt;<pos:position pos:line="31" pos:column="47"/></operator><name pos:line="31" pos:column="44">host<pos:position pos:line="31" pos:column="48"/></name></name> <operator pos:line="31" pos:column="49">&lt;&lt;<pos:position pos:line="31" pos:column="57"/></operator> <literal type="string" pos:line="31" pos:column="52">" ("<pos:position pos:line="31" pos:column="56"/></literal> <operator pos:line="31" pos:column="57">&lt;&lt;<pos:position pos:line="31" pos:column="65"/></operator> <name><name pos:line="31" pos:column="60">p<pos:position pos:line="31" pos:column="61"/></name><operator pos:line="31" pos:column="61">-&gt;<pos:position pos:line="31" pos:column="66"/></operator><name pos:line="31" pos:column="63">in_addr<pos:position pos:line="31" pos:column="70"/></name></name> <operator pos:line="31" pos:column="71">&lt;&lt;<pos:position pos:line="31" pos:column="79"/></operator> <literal type="string" pos:line="31" pos:column="74">")"<pos:position pos:line="31" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="79"/></expr_stmt>
    <return pos:line="32" pos:column="5">return <expr><literal type="number" pos:line="32" pos:column="12">1<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3320_squid-3.4.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Comm<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">ConnectionPointer<pos:position pos:line="1" pos:column="24"/></name></name></type>
<name><name pos:line="2" pos:column="1">IdleConnList<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">pop<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name><init pos:line="4" pos:column="15">=<expr><name pos:line="4" pos:column="16">size_<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">-<pos:position pos:line="4" pos:column="22"/></operator><literal type="number" pos:line="4" pos:column="22">1<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></init> <condition><expr><name pos:line="4" pos:column="25">i<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">&gt;=<pos:position pos:line="4" pos:column="31"/></operator><literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal></expr>;<pos:position pos:line="4" pos:column="30"/></condition> <incr><expr><operator pos:line="4" pos:column="31">--<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">i<pos:position pos:line="4" pos:column="34"/></name></expr></incr>)<pos:position pos:line="4" pos:column="35"/></control> <block pos:line="4" pos:column="36">{

        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><operator pos:line="6" pos:column="13">!<pos:position pos:line="6" pos:column="14"/></operator><call><name pos:line="6" pos:column="14">isAvailable<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">i<pos:position pos:line="6" pos:column="27"/></name></expr></argument>)<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="29"/></condition><then pos:line="6" pos:column="29">
            <block type="pseudo"><continue pos:line="7" pos:column="13">continue;<pos:position pos:line="7" pos:column="22"/></continue></block></then></if>

        <comment type="line" pos:line="9" pos:column="9">// our connection timeout handler is scheduled to run already. unsafe for now.</comment>
        <comment type="line" pos:line="10" pos:column="9">// TODO: cancel the pending timeout callback and allow re-use of the conn.</comment>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">fd_table<pos:position pos:line="11" pos:column="21"/></name><index pos:line="11" pos:column="21">[<expr><name><name pos:line="11" pos:column="22">theList_<pos:position pos:line="11" pos:column="30"/></name><index pos:line="11" pos:column="30">[<expr><name pos:line="11" pos:column="31">i<pos:position pos:line="11" pos:column="32"/></name></expr>]<pos:position pos:line="11" pos:column="33"/></index></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">fd<pos:position pos:line="11" pos:column="37"/></name></expr>]<pos:position pos:line="11" pos:column="38"/></index></name><operator pos:line="11" pos:column="38">.<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">timeoutHandler<pos:position pos:line="11" pos:column="53"/></name> <operator pos:line="11" pos:column="54">==<pos:position pos:line="11" pos:column="56"/></operator> <name pos:line="11" pos:column="57">NULL<pos:position pos:line="11" pos:column="61"/></name></expr>)<pos:position pos:line="11" pos:column="62"/></condition><then pos:line="11" pos:column="62">
            <block type="pseudo"><continue pos:line="12" pos:column="13">continue;<pos:position pos:line="12" pos:column="22"/></continue></block></then></if>

        <comment type="line" pos:line="14" pos:column="9">// finally, a match. pop and return it.</comment>
        <decl_stmt><decl><type><name><name pos:line="15" pos:column="9">Comm<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">::<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">ConnectionPointer<pos:position pos:line="15" pos:column="32"/></name></name></type> <name pos:line="15" pos:column="33">result<pos:position pos:line="15" pos:column="39"/></name> <init pos:line="15" pos:column="40">= <expr><name><name pos:line="15" pos:column="42">theList_<pos:position pos:line="15" pos:column="50"/></name><index pos:line="15" pos:column="50">[<expr><name pos:line="15" pos:column="51">i<pos:position pos:line="15" pos:column="52"/></name></expr>]<pos:position pos:line="15" pos:column="53"/></index></name></expr></init></decl>;<pos:position pos:line="15" pos:column="54"/></decl_stmt>
        <comment type="block" pos:line="16" pos:column="9">/* may delete this */</comment>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">removeAt<pos:position pos:line="17" pos:column="17"/></name><argument_list pos:line="17" pos:column="17">(<argument><expr><name pos:line="17" pos:column="18">i<pos:position pos:line="17" pos:column="19"/></name></expr></argument>)<pos:position pos:line="17" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">clearHandlers<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">result<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">result<pos:position pos:line="19" pos:column="22"/></name></expr>;<pos:position pos:line="19" pos:column="23"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></for>

    <return pos:line="22" pos:column="5">return <expr><call><name><name pos:line="22" pos:column="12">Comm<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">::<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="18">ConnectionPointer<pos:position pos:line="22" pos:column="35"/></name></name><argument_list pos:line="22" pos:column="35">()<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3501_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">startWriting<pos:position pos:line="1" pos:column="45"/></name></name><parameter_list pos:line="1" pos:column="45">()<pos:position pos:line="1" pos:column="47"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="3" pos:column="5">state<pos:position pos:line="3" pos:column="10"/></name><operator pos:line="3" pos:column="10">.<pos:position pos:line="3" pos:column="11"/></operator><name pos:line="3" pos:column="11">writing<pos:position pos:line="3" pos:column="18"/></name></name> <operator pos:line="3" pos:column="19">=<pos:position pos:line="3" pos:column="20"/></operator> <name><name pos:line="3" pos:column="21">State<pos:position pos:line="3" pos:column="26"/></name><operator pos:line="3" pos:column="26">::<pos:position pos:line="3" pos:column="28"/></operator><name pos:line="3" pos:column="28">writingConnect<pos:position pos:line="3" pos:column="42"/></name></name></expr>;<pos:position pos:line="3" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">decideOnPreview<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">()<pos:position pos:line="5" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="23"/></expr_stmt> <comment type="line" pos:line="5" pos:column="24">// must be decided before we decideOnRetries</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">decideOnRetries<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">()<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">openConnection<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">()<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

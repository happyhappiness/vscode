<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3921_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name><name pos:line="1" pos:column="13">Ssl<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">ErrorDetail<pos:position pos:line="1" pos:column="29"/></name><operator pos:line="1" pos:column="29">::<pos:position pos:line="1" pos:column="31"/></operator><name pos:line="1" pos:column="31">cn<pos:position pos:line="1" pos:column="33"/></name></name><parameter_list pos:line="1" pos:column="33">()<pos:position pos:line="1" pos:column="35"/></parameter_list> <specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name><name pos:line="3" pos:column="9">broken_cert<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">.<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="21">get<pos:position pos:line="3" pos:column="24"/></name></name><argument_list pos:line="3" pos:column="24">()<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="27"/></condition><then pos:line="3" pos:column="27"> <block pos:line="3" pos:column="28">{
        <decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">String<pos:position pos:line="4" pos:column="22"/></name></type> <name pos:line="4" pos:column="23">tmpStr<pos:position pos:line="4" pos:column="29"/></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>  <comment type="line" format="doxygen" pos:line="4" pos:column="32">///&lt; A temporary string buffer</comment>
        <expr_stmt><expr><call><name><name pos:line="5" pos:column="9">tmpStr<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">.<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">clean<pos:position pos:line="5" pos:column="21"/></name></name><argument_list pos:line="5" pos:column="21">()<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="6" pos:column="9">Ssl<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">::<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">matchX509CommonNames<pos:position pos:line="6" pos:column="34"/></name></name><argument_list pos:line="6" pos:column="34">(<argument><expr><call><name><name pos:line="6" pos:column="35">broken_cert<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">.<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="47">get<pos:position pos:line="6" pos:column="50"/></name></name><argument_list pos:line="6" pos:column="50">()<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="6" pos:column="54">&amp;<pos:position pos:line="6" pos:column="59"/></operator><name pos:line="6" pos:column="55">tmpStr<pos:position pos:line="6" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="63">copy_cn<pos:position pos:line="6" pos:column="70"/></name></expr></argument>)<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="72"/></expr_stmt>
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name><name pos:line="7" pos:column="13">tmpStr<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">.<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">size<pos:position pos:line="7" pos:column="24"/></name></name><argument_list pos:line="7" pos:column="24">()<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="27"/></condition><then pos:line="7" pos:column="27">
            <block type="pseudo"><return pos:line="8" pos:column="13">return <expr><call><name><name pos:line="8" pos:column="20">tmpStr<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">.<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">termedBuf<pos:position pos:line="8" pos:column="36"/></name></name><argument_list pos:line="8" pos:column="36">()<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></return></block></then></if>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>
    <return pos:line="10" pos:column="5">return <expr><literal type="string" pos:line="10" pos:column="12">"[Not available]"<pos:position pos:line="10" pos:column="29"/></literal></expr>;<pos:position pos:line="10" pos:column="30"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

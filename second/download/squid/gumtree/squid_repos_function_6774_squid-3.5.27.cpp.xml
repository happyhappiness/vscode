<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6774_squid-3.5.27.cpp" pos:tabs="8"><function type="operator"><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">OpenListenerParams<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">operator <name pos:line="2" pos:column="35">&lt;<pos:position pos:line="2" pos:column="39"/></name></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">OpenListenerParams<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">&amp;<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="63">p<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list> <specifier pos:line="2" pos:column="66">const<pos:position pos:line="2" pos:column="71"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">sock_type<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">!=<pos:position pos:line="4" pos:column="21"/></operator> <name><name pos:line="4" pos:column="22">p<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">sock_type<pos:position pos:line="4" pos:column="33"/></name></name></expr>)<pos:position pos:line="4" pos:column="34"/></condition><then pos:line="4" pos:column="34">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">sock_type<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&lt;<pos:position pos:line="5" pos:column="30"/></operator> <name><name pos:line="5" pos:column="28">p<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">.<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">sock_type<pos:position pos:line="5" pos:column="39"/></name></name></expr>;<pos:position pos:line="5" pos:column="40"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">proto<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">!=<pos:position pos:line="7" pos:column="17"/></operator> <name><name pos:line="7" pos:column="18">p<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">.<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">proto<pos:position pos:line="7" pos:column="25"/></name></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><name pos:line="8" pos:column="16">proto<pos:position pos:line="8" pos:column="21"/></name> <operator pos:line="8" pos:column="22">&lt;<pos:position pos:line="8" pos:column="26"/></operator> <name><name pos:line="8" pos:column="24">p<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">proto<pos:position pos:line="8" pos:column="31"/></name></name></expr>;<pos:position pos:line="8" pos:column="32"/></return></block></then></if>

    <comment type="line" pos:line="10" pos:column="5">// ignore flags and fdNote differences because they do not affect binding</comment>

    <return pos:line="12" pos:column="5">return <expr><call><name><name pos:line="12" pos:column="12">addr<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">.<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">compareWhole<pos:position pos:line="12" pos:column="29"/></name></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name><name pos:line="12" pos:column="30">p<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">.<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">addr<pos:position pos:line="12" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="37"/></argument_list></call> <operator pos:line="12" pos:column="38">&lt;<pos:position pos:line="12" pos:column="42"/></operator> <literal type="number" pos:line="12" pos:column="40">0<pos:position pos:line="12" pos:column="41"/></literal></expr>;<pos:position pos:line="12" pos:column="42"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

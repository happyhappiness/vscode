<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5472_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">ftpListParts<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type>
<name pos:line="2" pos:column="1">ftpListParseParts<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">buf<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">Ftp<pos:position pos:line="2" pos:column="46"/></name><operator pos:line="2" pos:column="46">::<pos:position pos:line="2" pos:column="48"/></operator><name pos:line="2" pos:column="48">GatewayFlags<pos:position pos:line="2" pos:column="60"/></name></name></type> <name pos:line="2" pos:column="61">flags<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ftpListParts<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">p<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">t<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">ct<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name><name pos:line="7" pos:column="11">tokens<pos:position pos:line="7" pos:column="17"/></name><index pos:line="7" pos:column="17">[<expr><name pos:line="7" pos:column="18">MAX_TOKENS<pos:position pos:line="7" pos:column="28"/></name></expr>]<pos:position pos:line="7" pos:column="29"/></index></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">i<pos:position pos:line="8" pos:column="10"/></name></decl>;<pos:position pos:line="8" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">n_tokens<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="10" pos:column="5">static<pos:position pos:line="10" pos:column="11"/></specifier> <type><name pos:line="10" pos:column="12">char<pos:position pos:line="10" pos:column="16"/></name></type> <name><name pos:line="10" pos:column="17">tbuf<pos:position pos:line="10" pos:column="21"/></name><index pos:line="10" pos:column="21">[<expr><literal type="number" pos:line="10" pos:column="22">128<pos:position pos:line="10" pos:column="25"/></literal></expr>]<pos:position pos:line="10" pos:column="26"/></index></name></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">xbuf<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><name pos:line="11" pos:column="18">NULL<pos:position pos:line="11" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="12" pos:column="5">static<pos:position pos:line="12" pos:column="11"/></specifier> <type><name pos:line="12" pos:column="12">int<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">scan_ftp_initialized<pos:position pos:line="12" pos:column="36"/></name> <init pos:line="12" pos:column="37">= <expr><literal type="number" pos:line="12" pos:column="39">0<pos:position pos:line="12" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="13" pos:column="5">static<pos:position pos:line="13" pos:column="11"/></specifier> <type><name pos:line="13" pos:column="12">regex_t<pos:position pos:line="13" pos:column="19"/></name></type> <name pos:line="13" pos:column="20">scan_ftp_integer<pos:position pos:line="13" pos:column="36"/></name></decl>;<pos:position pos:line="13" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="14" pos:column="5">static<pos:position pos:line="14" pos:column="11"/></specifier> <type><name pos:line="14" pos:column="12">regex_t<pos:position pos:line="14" pos:column="19"/></name></type> <name pos:line="14" pos:column="20">scan_ftp_time<pos:position pos:line="14" pos:column="33"/></name></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="15" pos:column="5">static<pos:position pos:line="15" pos:column="11"/></specifier> <type><name pos:line="15" pos:column="12">regex_t<pos:position pos:line="15" pos:column="19"/></name></type> <name pos:line="15" pos:column="20">scan_ftp_dostime<pos:position pos:line="15" pos:column="36"/></name></decl>;<pos:position pos:line="15" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="16" pos:column="5">static<pos:position pos:line="16" pos:column="11"/></specifier> <type><name pos:line="16" pos:column="12">regex_t<pos:position pos:line="16" pos:column="19"/></name></type> <name pos:line="16" pos:column="20">scan_ftp_dosdate<pos:position pos:line="16" pos:column="36"/></name></decl>;<pos:position pos:line="16" pos:column="37"/></decl_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">scan_ftp_initialized<pos:position pos:line="18" pos:column="30"/></name></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31"> <block pos:line="18" pos:column="32">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">scan_ftp_initialized<pos:position pos:line="19" pos:column="29"/></name> <operator pos:line="19" pos:column="30">=<pos:position pos:line="19" pos:column="31"/></operator> <literal type="number" pos:line="19" pos:column="32">1<pos:position pos:line="19" pos:column="33"/></literal></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">regcomp<pos:position pos:line="20" pos:column="16"/></name><argument_list pos:line="20" pos:column="16">(<argument><expr><operator pos:line="20" pos:column="17">&amp;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="18">scan_ftp_integer<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="36">"^[0123456789]+$"<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">REG_EXTENDED<pos:position pos:line="20" pos:column="67"/></name> <operator pos:line="20" pos:column="68">|<pos:position pos:line="20" pos:column="69"/></operator> <name pos:line="20" pos:column="70">REG_NOSUB<pos:position pos:line="20" pos:column="79"/></name></expr></argument>)<pos:position pos:line="20" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">regcomp<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">(<argument><expr><operator pos:line="21" pos:column="17">&amp;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="18">scan_ftp_time<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="33">"^[0123456789:]+$"<pos:position pos:line="21" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="53">REG_EXTENDED<pos:position pos:line="21" pos:column="65"/></name> <operator pos:line="21" pos:column="66">|<pos:position pos:line="21" pos:column="67"/></operator> <name pos:line="21" pos:column="68">REG_NOSUB<pos:position pos:line="21" pos:column="77"/></name></expr></argument>)<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">regcomp<pos:position pos:line="22" pos:column="16"/></name><argument_list pos:line="22" pos:column="16">(<argument><expr><operator pos:line="22" pos:column="17">&amp;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="18">scan_ftp_dosdate<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="36">"^[0123456789]+-[0123456789]+-[0123456789]+$"<pos:position pos:line="22" pos:column="81"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="83">REG_EXTENDED<pos:position pos:line="22" pos:column="95"/></name> <operator pos:line="22" pos:column="96">|<pos:position pos:line="22" pos:column="97"/></operator> <name pos:line="22" pos:column="98">REG_NOSUB<pos:position pos:line="22" pos:column="107"/></name></expr></argument>)<pos:position pos:line="22" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="109"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">regcomp<pos:position pos:line="23" pos:column="16"/></name><argument_list pos:line="23" pos:column="16">(<argument><expr><operator pos:line="23" pos:column="17">&amp;<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="18">scan_ftp_dostime<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="36">"^[0123456789]+:[0123456789]+[AP]M$"<pos:position pos:line="23" pos:column="72"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="74">REG_EXTENDED<pos:position pos:line="23" pos:column="86"/></name> <operator pos:line="23" pos:column="87">|<pos:position pos:line="23" pos:column="88"/></operator> <name pos:line="23" pos:column="89">REG_NOSUB<pos:position pos:line="23" pos:column="98"/></name> <operator pos:line="23" pos:column="99">|<pos:position pos:line="23" pos:column="100"/></operator> <name pos:line="23" pos:column="101">REG_ICASE<pos:position pos:line="23" pos:column="110"/></name></expr></argument>)<pos:position pos:line="23" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="112"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">buf<pos:position pos:line="26" pos:column="12"/></name> <operator pos:line="26" pos:column="13">==<pos:position pos:line="26" pos:column="15"/></operator> <name pos:line="26" pos:column="16">NULL<pos:position pos:line="26" pos:column="20"/></name></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21">
        <block type="pseudo"><return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return></block></then></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">*<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">buf<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">==<pos:position pos:line="29" pos:column="16"/></operator> <literal type="char" pos:line="29" pos:column="17">'\0'<pos:position pos:line="29" pos:column="21"/></literal></expr>)<pos:position pos:line="29" pos:column="22"/></condition><then pos:line="29" pos:column="22">
        <block type="pseudo"><return pos:line="30" pos:column="9">return <expr><name pos:line="30" pos:column="16">NULL<pos:position pos:line="30" pos:column="20"/></name></expr>;<pos:position pos:line="30" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="32" pos:column="5">p<pos:position pos:line="32" pos:column="6"/></name> <operator pos:line="32" pos:column="7">=<pos:position pos:line="32" pos:column="8"/></operator> <operator pos:line="32" pos:column="9">(<pos:position pos:line="32" pos:column="10"/></operator><name pos:line="32" pos:column="10">ftpListParts<pos:position pos:line="32" pos:column="22"/></name> <operator pos:line="32" pos:column="23">*<pos:position pos:line="32" pos:column="24"/></operator><operator pos:line="32" pos:column="24">)<pos:position pos:line="32" pos:column="25"/></operator><call><name pos:line="32" pos:column="25">xcalloc<pos:position pos:line="32" pos:column="32"/></name><argument_list pos:line="32" pos:column="32">(<argument><expr><literal type="number" pos:line="32" pos:column="33">1<pos:position pos:line="32" pos:column="34"/></literal></expr></argument>, <argument><expr><sizeof pos:line="32" pos:column="36">sizeof<argument_list pos:line="32" pos:column="42">(<argument><expr><name pos:line="32" pos:column="43">ftpListParts<pos:position pos:line="32" pos:column="55"/></name></expr></argument>)<pos:position pos:line="32" pos:column="56"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>

    <expr_stmt><expr><name pos:line="34" pos:column="5">n_tokens<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <literal type="number" pos:line="34" pos:column="16">0<pos:position pos:line="34" pos:column="17"/></literal></expr>;<pos:position pos:line="34" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">memset<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><name pos:line="36" pos:column="12">tokens<pos:position pos:line="36" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="20">0<pos:position pos:line="36" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="36" pos:column="23">sizeof<argument_list pos:line="36" pos:column="29">(<argument><expr><name pos:line="36" pos:column="30">tokens<pos:position pos:line="36" pos:column="36"/></name></expr></argument>)<pos:position pos:line="36" pos:column="37"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name pos:line="38" pos:column="5">xbuf<pos:position pos:line="38" pos:column="9"/></name> <operator pos:line="38" pos:column="10">=<pos:position pos:line="38" pos:column="11"/></operator> <call><name pos:line="38" pos:column="12">xstrdup<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><name pos:line="38" pos:column="20">buf<pos:position pos:line="38" pos:column="23"/></name></expr></argument>)<pos:position pos:line="38" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name><name pos:line="40" pos:column="9">flags<pos:position pos:line="40" pos:column="14"/></name><operator pos:line="40" pos:column="14">.<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">tried_nlst<pos:position pos:line="40" pos:column="25"/></name></name></expr>)<pos:position pos:line="40" pos:column="26"/></condition><then pos:line="40" pos:column="26"> <block pos:line="40" pos:column="27">{
        <comment type="block" pos:line="41" pos:column="9">/* Machine readable format, one name per line */</comment>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">p<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">-&gt;<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="12">name<pos:position pos:line="42" pos:column="16"/></name></name> <operator pos:line="42" pos:column="17">=<pos:position pos:line="42" pos:column="18"/></operator> <name pos:line="42" pos:column="19">xbuf<pos:position pos:line="42" pos:column="23"/></name></expr>;<pos:position pos:line="42" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">p<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">type<pos:position pos:line="43" pos:column="16"/></name></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <literal type="char" pos:line="43" pos:column="19">'\0'<pos:position pos:line="43" pos:column="23"/></literal></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
        <return pos:line="44" pos:column="9">return <expr><name pos:line="44" pos:column="16">p<pos:position pos:line="44" pos:column="17"/></name></expr>;<pos:position pos:line="44" pos:column="18"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <for pos:line="47" pos:column="5">for <control pos:line="47" pos:column="9">(<init><expr><name pos:line="47" pos:column="10">t<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <call><name pos:line="47" pos:column="14">strtok<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">xbuf<pos:position pos:line="47" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="27">w_space<pos:position pos:line="47" pos:column="34"/></name></expr></argument>)<pos:position pos:line="47" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="36"/></init> <condition><expr><name pos:line="47" pos:column="37">t<pos:position pos:line="47" pos:column="38"/></name> <operator pos:line="47" pos:column="39">&amp;&amp;<pos:position pos:line="47" pos:column="49"/></operator> <name pos:line="47" pos:column="42">n_tokens<pos:position pos:line="47" pos:column="50"/></name> <operator pos:line="47" pos:column="51">&lt;<pos:position pos:line="47" pos:column="55"/></operator> <name pos:line="47" pos:column="53">MAX_TOKENS<pos:position pos:line="47" pos:column="63"/></name></expr>;<pos:position pos:line="47" pos:column="64"/></condition> <incr><expr><name pos:line="47" pos:column="65">t<pos:position pos:line="47" pos:column="66"/></name> <operator pos:line="47" pos:column="67">=<pos:position pos:line="47" pos:column="68"/></operator> <call><name pos:line="47" pos:column="69">strtok<pos:position pos:line="47" pos:column="75"/></name><argument_list pos:line="47" pos:column="75">(<argument><expr><name pos:line="47" pos:column="76">NULL<pos:position pos:line="47" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="82">w_space<pos:position pos:line="47" pos:column="89"/></name></expr></argument>)<pos:position pos:line="47" pos:column="90"/></argument_list></call></expr></incr>)<pos:position pos:line="47" pos:column="91"/></control> <block pos:line="47" pos:column="92">{
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">tokens<pos:position pos:line="48" pos:column="15"/></name><index pos:line="48" pos:column="15">[<expr><name pos:line="48" pos:column="16">n_tokens<pos:position pos:line="48" pos:column="24"/></name></expr>]<pos:position pos:line="48" pos:column="25"/></index></name> <operator pos:line="48" pos:column="26">=<pos:position pos:line="48" pos:column="27"/></operator> <call><name pos:line="48" pos:column="28">xstrdup<pos:position pos:line="48" pos:column="35"/></name><argument_list pos:line="48" pos:column="35">(<argument><expr><name pos:line="48" pos:column="36">t<pos:position pos:line="48" pos:column="37"/></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="49" pos:column="9">++<pos:position pos:line="49" pos:column="11"/></operator><name pos:line="49" pos:column="11">n_tokens<pos:position pos:line="49" pos:column="19"/></name></expr>;<pos:position pos:line="49" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="52" pos:column="5">xfree<pos:position pos:line="52" pos:column="10"/></name><argument_list pos:line="52" pos:column="10">(<argument><expr><name pos:line="52" pos:column="11">xbuf<pos:position pos:line="52" pos:column="15"/></name></expr></argument>)<pos:position pos:line="52" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="17"/></expr_stmt>

    <comment type="block" pos:line="54" pos:column="5">/* locate the Month field */</comment>
    <for pos:line="55" pos:column="5">for <control pos:line="55" pos:column="9">(<init><expr><name pos:line="55" pos:column="10">i<pos:position pos:line="55" pos:column="11"/></name> <operator pos:line="55" pos:column="12">=<pos:position pos:line="55" pos:column="13"/></operator> <literal type="number" pos:line="55" pos:column="14">3<pos:position pos:line="55" pos:column="15"/></literal></expr>;<pos:position pos:line="55" pos:column="16"/></init> <condition><expr><name pos:line="55" pos:column="17">i<pos:position pos:line="55" pos:column="18"/></name> <operator pos:line="55" pos:column="19">&lt;<pos:position pos:line="55" pos:column="23"/></operator> <name pos:line="55" pos:column="21">n_tokens<pos:position pos:line="55" pos:column="29"/></name> <operator pos:line="55" pos:column="30">-<pos:position pos:line="55" pos:column="31"/></operator> <literal type="number" pos:line="55" pos:column="32">2<pos:position pos:line="55" pos:column="33"/></literal></expr>;<pos:position pos:line="55" pos:column="34"/></condition> <incr><expr><operator pos:line="55" pos:column="35">++<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="37">i<pos:position pos:line="55" pos:column="38"/></name></expr></incr>)<pos:position pos:line="55" pos:column="39"/></control> <block pos:line="55" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="56" pos:column="9">char<pos:position pos:line="56" pos:column="13"/></name> <modifier pos:line="56" pos:column="14">*<pos:position pos:line="56" pos:column="15"/></modifier></type><name pos:line="56" pos:column="15">size<pos:position pos:line="56" pos:column="19"/></name> <init pos:line="56" pos:column="20">= <expr><name><name pos:line="56" pos:column="22">tokens<pos:position pos:line="56" pos:column="28"/></name><index pos:line="56" pos:column="28">[<expr><name pos:line="56" pos:column="29">i<pos:position pos:line="56" pos:column="30"/></name> <operator pos:line="56" pos:column="31">-<pos:position pos:line="56" pos:column="32"/></operator> <literal type="number" pos:line="56" pos:column="33">1<pos:position pos:line="56" pos:column="34"/></literal></expr>]<pos:position pos:line="56" pos:column="35"/></index></name></expr></init></decl>;<pos:position pos:line="56" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="57" pos:column="9">char<pos:position pos:line="57" pos:column="13"/></name> <modifier pos:line="57" pos:column="14">*<pos:position pos:line="57" pos:column="15"/></modifier></type><name pos:line="57" pos:column="15">month<pos:position pos:line="57" pos:column="20"/></name> <init pos:line="57" pos:column="21">= <expr><name><name pos:line="57" pos:column="23">tokens<pos:position pos:line="57" pos:column="29"/></name><index pos:line="57" pos:column="29">[<expr><name pos:line="57" pos:column="30">i<pos:position pos:line="57" pos:column="31"/></name></expr>]<pos:position pos:line="57" pos:column="32"/></index></name></expr></init></decl>;<pos:position pos:line="57" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="58" pos:column="9">char<pos:position pos:line="58" pos:column="13"/></name> <modifier pos:line="58" pos:column="14">*<pos:position pos:line="58" pos:column="15"/></modifier></type><name pos:line="58" pos:column="15">day<pos:position pos:line="58" pos:column="18"/></name> <init pos:line="58" pos:column="19">= <expr><name><name pos:line="58" pos:column="21">tokens<pos:position pos:line="58" pos:column="27"/></name><index pos:line="58" pos:column="27">[<expr><name pos:line="58" pos:column="28">i<pos:position pos:line="58" pos:column="29"/></name> <operator pos:line="58" pos:column="30">+<pos:position pos:line="58" pos:column="31"/></operator> <literal type="number" pos:line="58" pos:column="32">1<pos:position pos:line="58" pos:column="33"/></literal></expr>]<pos:position pos:line="58" pos:column="34"/></index></name></expr></init></decl>;<pos:position pos:line="58" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="59" pos:column="9">char<pos:position pos:line="59" pos:column="13"/></name> <modifier pos:line="59" pos:column="14">*<pos:position pos:line="59" pos:column="15"/></modifier></type><name pos:line="59" pos:column="15">year<pos:position pos:line="59" pos:column="19"/></name> <init pos:line="59" pos:column="20">= <expr><name><name pos:line="59" pos:column="22">tokens<pos:position pos:line="59" pos:column="28"/></name><index pos:line="59" pos:column="28">[<expr><name pos:line="59" pos:column="29">i<pos:position pos:line="59" pos:column="30"/></name> <operator pos:line="59" pos:column="31">+<pos:position pos:line="59" pos:column="32"/></operator> <literal type="number" pos:line="59" pos:column="33">2<pos:position pos:line="59" pos:column="34"/></literal></expr>]<pos:position pos:line="59" pos:column="35"/></index></name></expr></init></decl>;<pos:position pos:line="59" pos:column="36"/></decl_stmt>

        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><operator pos:line="61" pos:column="13">!<pos:position pos:line="61" pos:column="14"/></operator><call><name pos:line="61" pos:column="14">is_month<pos:position pos:line="61" pos:column="22"/></name><argument_list pos:line="61" pos:column="22">(<argument><expr><name pos:line="61" pos:column="23">month<pos:position pos:line="61" pos:column="28"/></name></expr></argument>)<pos:position pos:line="61" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="61" pos:column="30"/></condition><then pos:line="61" pos:column="30">
            <block type="pseudo"><continue pos:line="62" pos:column="13">continue;<pos:position pos:line="62" pos:column="22"/></continue></block></then></if>

        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><call><name pos:line="64" pos:column="13">regexec<pos:position pos:line="64" pos:column="20"/></name><argument_list pos:line="64" pos:column="20">(<argument><expr><operator pos:line="64" pos:column="21">&amp;<pos:position pos:line="64" pos:column="26"/></operator><name pos:line="64" pos:column="22">scan_ftp_integer<pos:position pos:line="64" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="40">size<pos:position pos:line="64" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="46">0<pos:position pos:line="64" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="49">NULL<pos:position pos:line="64" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="55">0<pos:position pos:line="64" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="57"/></argument_list></call> <operator pos:line="64" pos:column="58">!=<pos:position pos:line="64" pos:column="60"/></operator> <literal type="number" pos:line="64" pos:column="61">0<pos:position pos:line="64" pos:column="62"/></literal></expr>)<pos:position pos:line="64" pos:column="63"/></condition><then pos:line="64" pos:column="63">
            <block type="pseudo"><continue pos:line="65" pos:column="13">continue;<pos:position pos:line="65" pos:column="22"/></continue></block></then></if>

        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><call><name pos:line="67" pos:column="13">regexec<pos:position pos:line="67" pos:column="20"/></name><argument_list pos:line="67" pos:column="20">(<argument><expr><operator pos:line="67" pos:column="21">&amp;<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="22">scan_ftp_integer<pos:position pos:line="67" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="40">day<pos:position pos:line="67" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="45">0<pos:position pos:line="67" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="67" pos:column="48">NULL<pos:position pos:line="67" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="54">0<pos:position pos:line="67" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="56"/></argument_list></call> <operator pos:line="67" pos:column="57">!=<pos:position pos:line="67" pos:column="59"/></operator> <literal type="number" pos:line="67" pos:column="60">0<pos:position pos:line="67" pos:column="61"/></literal></expr>)<pos:position pos:line="67" pos:column="62"/></condition><then pos:line="67" pos:column="62">
            <block type="pseudo"><continue pos:line="68" pos:column="13">continue;<pos:position pos:line="68" pos:column="22"/></continue></block></then></if>

        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><call><name pos:line="70" pos:column="13">regexec<pos:position pos:line="70" pos:column="20"/></name><argument_list pos:line="70" pos:column="20">(<argument><expr><operator pos:line="70" pos:column="21">&amp;<pos:position pos:line="70" pos:column="26"/></operator><name pos:line="70" pos:column="22">scan_ftp_time<pos:position pos:line="70" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="37">year<pos:position pos:line="70" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="43">0<pos:position pos:line="70" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">NULL<pos:position pos:line="70" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="70" pos:column="52">0<pos:position pos:line="70" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></call> <operator pos:line="70" pos:column="55">!=<pos:position pos:line="70" pos:column="57"/></operator> <literal type="number" pos:line="70" pos:column="58">0<pos:position pos:line="70" pos:column="59"/></literal></expr>)<pos:position pos:line="70" pos:column="60"/></condition><then pos:line="70" pos:column="60"> <comment type="block" pos:line="70" pos:column="61">/* Yr | hh:mm */</comment>
            <block type="pseudo"><continue pos:line="71" pos:column="13">continue;<pos:position pos:line="71" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="73" pos:column="9">snprintf<pos:position pos:line="73" pos:column="17"/></name><argument_list pos:line="73" pos:column="17">(<argument><expr><name pos:line="73" pos:column="18">tbuf<pos:position pos:line="73" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="24">128<pos:position pos:line="73" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="29">"%s %2s %5s"<pos:position pos:line="73" pos:column="41"/></literal></expr></argument>,
                 <argument><expr><name pos:line="74" pos:column="18">month<pos:position pos:line="74" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="25">day<pos:position pos:line="74" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="74" pos:column="30">year<pos:position pos:line="74" pos:column="34"/></name></expr></argument>)<pos:position pos:line="74" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="36"/></expr_stmt>

        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><operator pos:line="76" pos:column="13">!<pos:position pos:line="76" pos:column="14"/></operator><call><name pos:line="76" pos:column="14">strstr<pos:position pos:line="76" pos:column="20"/></name><argument_list pos:line="76" pos:column="20">(<argument><expr><name pos:line="76" pos:column="21">buf<pos:position pos:line="76" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="76" pos:column="26">tbuf<pos:position pos:line="76" pos:column="30"/></name></expr></argument>)<pos:position pos:line="76" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="32"/></condition><then pos:line="76" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="77" pos:column="13">snprintf<pos:position pos:line="77" pos:column="21"/></name><argument_list pos:line="77" pos:column="21">(<argument><expr><name pos:line="77" pos:column="22">tbuf<pos:position pos:line="77" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="77" pos:column="28">128<pos:position pos:line="77" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="33">"%s %2s %-5s"<pos:position pos:line="77" pos:column="46"/></literal></expr></argument>,
                     <argument><expr><name pos:line="78" pos:column="22">month<pos:position pos:line="78" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="29">day<pos:position pos:line="78" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="34">year<pos:position pos:line="78" pos:column="38"/></name></expr></argument>)<pos:position pos:line="78" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="40"/></expr_stmt></block></then></if>

        <decl_stmt><decl><type><name pos:line="80" pos:column="9">char<pos:position pos:line="80" pos:column="13"/></name> <specifier pos:line="80" pos:column="14">const<pos:position pos:line="80" pos:column="19"/></specifier> <modifier pos:line="80" pos:column="20">*<pos:position pos:line="80" pos:column="21"/></modifier></type><name pos:line="80" pos:column="21">copyFrom<pos:position pos:line="80" pos:column="29"/></name> <init pos:line="80" pos:column="30">= <expr><name pos:line="80" pos:column="32">NULL<pos:position pos:line="80" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="80" pos:column="37"/></decl_stmt>

        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><operator pos:line="82" pos:column="13">(<pos:position pos:line="82" pos:column="14"/></operator><name pos:line="82" pos:column="14">copyFrom<pos:position pos:line="82" pos:column="22"/></name> <operator pos:line="82" pos:column="23">=<pos:position pos:line="82" pos:column="24"/></operator> <call><name pos:line="82" pos:column="25">strstr<pos:position pos:line="82" pos:column="31"/></name><argument_list pos:line="82" pos:column="31">(<argument><expr><name pos:line="82" pos:column="32">buf<pos:position pos:line="82" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="37">tbuf<pos:position pos:line="82" pos:column="41"/></name></expr></argument>)<pos:position pos:line="82" pos:column="42"/></argument_list></call><operator pos:line="82" pos:column="42">)<pos:position pos:line="82" pos:column="43"/></operator></expr>)<pos:position pos:line="82" pos:column="44"/></condition><then pos:line="82" pos:column="44"> <block pos:line="82" pos:column="45">{
            <expr_stmt><expr><name><name pos:line="83" pos:column="13">p<pos:position pos:line="83" pos:column="14"/></name><operator pos:line="83" pos:column="14">-&gt;<pos:position pos:line="83" pos:column="19"/></operator><name pos:line="83" pos:column="16">type<pos:position pos:line="83" pos:column="20"/></name></name> <operator pos:line="83" pos:column="21">=<pos:position pos:line="83" pos:column="22"/></operator> <operator pos:line="83" pos:column="23">*<pos:position pos:line="83" pos:column="24"/></operator><name><name pos:line="83" pos:column="24">tokens<pos:position pos:line="83" pos:column="30"/></name><index pos:line="83" pos:column="30">[<expr><literal type="number" pos:line="83" pos:column="31">0<pos:position pos:line="83" pos:column="32"/></literal></expr>]<pos:position pos:line="83" pos:column="33"/></index></name></expr>;<pos:position pos:line="83" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="84" pos:column="13">p<pos:position pos:line="84" pos:column="14"/></name><operator pos:line="84" pos:column="14">-&gt;<pos:position pos:line="84" pos:column="19"/></operator><name pos:line="84" pos:column="16">size<pos:position pos:line="84" pos:column="20"/></name></name> <operator pos:line="84" pos:column="21">=<pos:position pos:line="84" pos:column="22"/></operator> <call><name pos:line="84" pos:column="23">strtoll<pos:position pos:line="84" pos:column="30"/></name><argument_list pos:line="84" pos:column="30">(<argument><expr><name pos:line="84" pos:column="31">size<pos:position pos:line="84" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="37">NULL<pos:position pos:line="84" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="43">10<pos:position pos:line="84" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="84" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="85" pos:column="13">p<pos:position pos:line="85" pos:column="14"/></name><operator pos:line="85" pos:column="14">-&gt;<pos:position pos:line="85" pos:column="19"/></operator><name pos:line="85" pos:column="16">date<pos:position pos:line="85" pos:column="20"/></name></name> <operator pos:line="85" pos:column="21">=<pos:position pos:line="85" pos:column="22"/></operator> <call><name pos:line="85" pos:column="23">xstrdup<pos:position pos:line="85" pos:column="30"/></name><argument_list pos:line="85" pos:column="30">(<argument><expr><name pos:line="85" pos:column="31">tbuf<pos:position pos:line="85" pos:column="35"/></name></expr></argument>)<pos:position pos:line="85" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="37"/></expr_stmt>

            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><name><name pos:line="87" pos:column="17">flags<pos:position pos:line="87" pos:column="22"/></name><operator pos:line="87" pos:column="22">.<pos:position pos:line="87" pos:column="23"/></operator><name pos:line="87" pos:column="23">skip_whitespace<pos:position pos:line="87" pos:column="38"/></name></name></expr>)<pos:position pos:line="87" pos:column="39"/></condition><then pos:line="87" pos:column="39"> <block pos:line="87" pos:column="40">{
                <expr_stmt><expr><name pos:line="88" pos:column="17">copyFrom<pos:position pos:line="88" pos:column="25"/></name> <operator pos:line="88" pos:column="26">+=<pos:position pos:line="88" pos:column="28"/></operator> <call><name pos:line="88" pos:column="29">strlen<pos:position pos:line="88" pos:column="35"/></name><argument_list pos:line="88" pos:column="35">(<argument><expr><name pos:line="88" pos:column="36">tbuf<pos:position pos:line="88" pos:column="40"/></name></expr></argument>)<pos:position pos:line="88" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="42"/></expr_stmt>

                <while pos:line="90" pos:column="17">while <condition pos:line="90" pos:column="23">(<expr><call><name pos:line="90" pos:column="24">strchr<pos:position pos:line="90" pos:column="30"/></name><argument_list pos:line="90" pos:column="30">(<argument><expr><name pos:line="90" pos:column="31">w_space<pos:position pos:line="90" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="90" pos:column="40">*<pos:position pos:line="90" pos:column="41"/></operator><name pos:line="90" pos:column="41">copyFrom<pos:position pos:line="90" pos:column="49"/></name></expr></argument>)<pos:position pos:line="90" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="90" pos:column="51"/></condition>
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="91" pos:column="21">++<pos:position pos:line="91" pos:column="23"/></operator><name pos:line="91" pos:column="23">copyFrom<pos:position pos:line="91" pos:column="31"/></name></expr>;<pos:position pos:line="91" pos:column="32"/></expr_stmt></block></while>
            }<pos:position pos:line="92" pos:column="14"/></block></then> <else pos:line="92" pos:column="15">else <block pos:line="92" pos:column="20">{
                <comment type="block" pos:line="93" pos:column="17">/* Handle the following four formats:
                 * "MMM DD  YYYY Name"
                 * "MMM DD  YYYYName"
                 * "MMM DD YYYY  Name"
                 * "MMM DD YYYY Name"
                 * Assuming a single space between date and filename
                 * suggested by:  Nathan.Bailey@cc.monash.edu.au and
                 * Mike Battersby &lt;mike@starbug.bofh.asn.au&gt; */</comment>
                <expr_stmt><expr><name pos:line="101" pos:column="17">copyFrom<pos:position pos:line="101" pos:column="25"/></name> <operator pos:line="101" pos:column="26">+=<pos:position pos:line="101" pos:column="28"/></operator> <call><name pos:line="101" pos:column="29">strlen<pos:position pos:line="101" pos:column="35"/></name><argument_list pos:line="101" pos:column="35">(<argument><expr><name pos:line="101" pos:column="36">tbuf<pos:position pos:line="101" pos:column="40"/></name></expr></argument>)<pos:position pos:line="101" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="42"/></expr_stmt>
                <if pos:line="102" pos:column="17">if <condition pos:line="102" pos:column="20">(<expr><call><name pos:line="102" pos:column="21">strchr<pos:position pos:line="102" pos:column="27"/></name><argument_list pos:line="102" pos:column="27">(<argument><expr><name pos:line="102" pos:column="28">w_space<pos:position pos:line="102" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="102" pos:column="37">*<pos:position pos:line="102" pos:column="38"/></operator><name pos:line="102" pos:column="38">copyFrom<pos:position pos:line="102" pos:column="46"/></name></expr></argument>)<pos:position pos:line="102" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="102" pos:column="48"/></condition><then pos:line="102" pos:column="48">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="103" pos:column="21">++<pos:position pos:line="103" pos:column="23"/></operator><name pos:line="103" pos:column="23">copyFrom<pos:position pos:line="103" pos:column="31"/></name></expr>;<pos:position pos:line="103" pos:column="32"/></expr_stmt></block></then></if>
            }<pos:position pos:line="104" pos:column="14"/></block></else></if>

            <expr_stmt><expr><name><name pos:line="106" pos:column="13">p<pos:position pos:line="106" pos:column="14"/></name><operator pos:line="106" pos:column="14">-&gt;<pos:position pos:line="106" pos:column="19"/></operator><name pos:line="106" pos:column="16">name<pos:position pos:line="106" pos:column="20"/></name></name> <operator pos:line="106" pos:column="21">=<pos:position pos:line="106" pos:column="22"/></operator> <call><name pos:line="106" pos:column="23">xstrdup<pos:position pos:line="106" pos:column="30"/></name><argument_list pos:line="106" pos:column="30">(<argument><expr><name pos:line="106" pos:column="31">copyFrom<pos:position pos:line="106" pos:column="39"/></name></expr></argument>)<pos:position pos:line="106" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="41"/></expr_stmt>

            <if pos:line="108" pos:column="13">if <condition pos:line="108" pos:column="16">(<expr><name><name pos:line="108" pos:column="17">p<pos:position pos:line="108" pos:column="18"/></name><operator pos:line="108" pos:column="18">-&gt;<pos:position pos:line="108" pos:column="23"/></operator><name pos:line="108" pos:column="20">type<pos:position pos:line="108" pos:column="24"/></name></name> <operator pos:line="108" pos:column="25">==<pos:position pos:line="108" pos:column="27"/></operator> <literal type="char" pos:line="108" pos:column="28">'l'<pos:position pos:line="108" pos:column="31"/></literal> <operator pos:line="108" pos:column="32">&amp;&amp;<pos:position pos:line="108" pos:column="42"/></operator> <operator pos:line="108" pos:column="35">(<pos:position pos:line="108" pos:column="36"/></operator><name pos:line="108" pos:column="36">t<pos:position pos:line="108" pos:column="37"/></name> <operator pos:line="108" pos:column="38">=<pos:position pos:line="108" pos:column="39"/></operator> <call><name pos:line="108" pos:column="40">strstr<pos:position pos:line="108" pos:column="46"/></name><argument_list pos:line="108" pos:column="46">(<argument><expr><name><name pos:line="108" pos:column="47">p<pos:position pos:line="108" pos:column="48"/></name><operator pos:line="108" pos:column="48">-&gt;<pos:position pos:line="108" pos:column="53"/></operator><name pos:line="108" pos:column="50">name<pos:position pos:line="108" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="56">" -&gt; "<pos:position pos:line="108" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="63"/></argument_list></call><operator pos:line="108" pos:column="63">)<pos:position pos:line="108" pos:column="64"/></operator></expr>)<pos:position pos:line="108" pos:column="65"/></condition><then pos:line="108" pos:column="65"> <block pos:line="108" pos:column="66">{
                <expr_stmt><expr><operator pos:line="109" pos:column="17">*<pos:position pos:line="109" pos:column="18"/></operator><name pos:line="109" pos:column="18">t<pos:position pos:line="109" pos:column="19"/></name> <operator pos:line="109" pos:column="20">=<pos:position pos:line="109" pos:column="21"/></operator> <literal type="char" pos:line="109" pos:column="22">'\0'<pos:position pos:line="109" pos:column="26"/></literal></expr>;<pos:position pos:line="109" pos:column="27"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="110" pos:column="17">p<pos:position pos:line="110" pos:column="18"/></name><operator pos:line="110" pos:column="18">-&gt;<pos:position pos:line="110" pos:column="23"/></operator><name pos:line="110" pos:column="20">link<pos:position pos:line="110" pos:column="24"/></name></name> <operator pos:line="110" pos:column="25">=<pos:position pos:line="110" pos:column="26"/></operator> <call><name pos:line="110" pos:column="27">xstrdup<pos:position pos:line="110" pos:column="34"/></name><argument_list pos:line="110" pos:column="34">(<argument><expr><name pos:line="110" pos:column="35">t<pos:position pos:line="110" pos:column="36"/></name> <operator pos:line="110" pos:column="37">+<pos:position pos:line="110" pos:column="38"/></operator> <literal type="number" pos:line="110" pos:column="39">4<pos:position pos:line="110" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="111" pos:column="14"/></block></then></if>

            <goto pos:line="113" pos:column="13">goto <name pos:line="113" pos:column="18">found<pos:position pos:line="113" pos:column="23"/></name>;<pos:position pos:line="113" pos:column="24"/></goto>
        }<pos:position pos:line="114" pos:column="10"/></block></then></if>

        <break pos:line="116" pos:column="9">break;<pos:position pos:line="116" pos:column="15"/></break>
    }<pos:position pos:line="117" pos:column="6"/></block></for>

    <comment type="block" pos:line="119" pos:column="5">/* try it as a DOS listing, 04-05-70 09:33PM ... */</comment>
    <if pos:line="120" pos:column="5">if <condition pos:line="120" pos:column="8">(<expr><name pos:line="120" pos:column="9">n_tokens<pos:position pos:line="120" pos:column="17"/></name> <operator pos:line="120" pos:column="18">&gt;<pos:position pos:line="120" pos:column="22"/></operator> <literal type="number" pos:line="120" pos:column="20">3<pos:position pos:line="120" pos:column="21"/></literal> <operator pos:line="120" pos:column="22">&amp;&amp;<pos:position pos:line="120" pos:column="32"/></operator>
            <call><name pos:line="121" pos:column="13">regexec<pos:position pos:line="121" pos:column="20"/></name><argument_list pos:line="121" pos:column="20">(<argument><expr><operator pos:line="121" pos:column="21">&amp;<pos:position pos:line="121" pos:column="26"/></operator><name pos:line="121" pos:column="22">scan_ftp_dosdate<pos:position pos:line="121" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="121" pos:column="40">tokens<pos:position pos:line="121" pos:column="46"/></name><index pos:line="121" pos:column="46">[<expr><literal type="number" pos:line="121" pos:column="47">0<pos:position pos:line="121" pos:column="48"/></literal></expr>]<pos:position pos:line="121" pos:column="49"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="51">0<pos:position pos:line="121" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="121" pos:column="54">NULL<pos:position pos:line="121" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="60">0<pos:position pos:line="121" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="62"/></argument_list></call> <operator pos:line="121" pos:column="63">==<pos:position pos:line="121" pos:column="65"/></operator> <literal type="number" pos:line="121" pos:column="66">0<pos:position pos:line="121" pos:column="67"/></literal> <operator pos:line="121" pos:column="68">&amp;&amp;<pos:position pos:line="121" pos:column="78"/></operator>
            <call><name pos:line="122" pos:column="13">regexec<pos:position pos:line="122" pos:column="20"/></name><argument_list pos:line="122" pos:column="20">(<argument><expr><operator pos:line="122" pos:column="21">&amp;<pos:position pos:line="122" pos:column="26"/></operator><name pos:line="122" pos:column="22">scan_ftp_dostime<pos:position pos:line="122" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="122" pos:column="40">tokens<pos:position pos:line="122" pos:column="46"/></name><index pos:line="122" pos:column="46">[<expr><literal type="number" pos:line="122" pos:column="47">1<pos:position pos:line="122" pos:column="48"/></literal></expr>]<pos:position pos:line="122" pos:column="49"/></index></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="51">0<pos:position pos:line="122" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="122" pos:column="54">NULL<pos:position pos:line="122" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="60">0<pos:position pos:line="122" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="62"/></argument_list></call> <operator pos:line="122" pos:column="63">==<pos:position pos:line="122" pos:column="65"/></operator> <literal type="number" pos:line="122" pos:column="66">0<pos:position pos:line="122" pos:column="67"/></literal></expr>)<pos:position pos:line="122" pos:column="68"/></condition><then pos:line="122" pos:column="68"> <block pos:line="122" pos:column="69">{
        <if pos:line="123" pos:column="9">if <condition pos:line="123" pos:column="12">(<expr><operator pos:line="123" pos:column="13">!<pos:position pos:line="123" pos:column="14"/></operator><call><name pos:line="123" pos:column="14">strcasecmp<pos:position pos:line="123" pos:column="24"/></name><argument_list pos:line="123" pos:column="24">(<argument><expr><name><name pos:line="123" pos:column="25">tokens<pos:position pos:line="123" pos:column="31"/></name><index pos:line="123" pos:column="31">[<expr><literal type="number" pos:line="123" pos:column="32">2<pos:position pos:line="123" pos:column="33"/></literal></expr>]<pos:position pos:line="123" pos:column="34"/></index></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="36">"&lt;dir&gt;"<pos:position pos:line="123" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="123" pos:column="45"/></condition><then pos:line="123" pos:column="45"> <block pos:line="123" pos:column="46">{
            <expr_stmt><expr><name><name pos:line="124" pos:column="13">p<pos:position pos:line="124" pos:column="14"/></name><operator pos:line="124" pos:column="14">-&gt;<pos:position pos:line="124" pos:column="19"/></operator><name pos:line="124" pos:column="16">type<pos:position pos:line="124" pos:column="20"/></name></name> <operator pos:line="124" pos:column="21">=<pos:position pos:line="124" pos:column="22"/></operator> <literal type="char" pos:line="124" pos:column="23">'d'<pos:position pos:line="124" pos:column="26"/></literal></expr>;<pos:position pos:line="124" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="125" pos:column="10"/></block></then> <else pos:line="125" pos:column="11">else <block pos:line="125" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="126" pos:column="13">p<pos:position pos:line="126" pos:column="14"/></name><operator pos:line="126" pos:column="14">-&gt;<pos:position pos:line="126" pos:column="19"/></operator><name pos:line="126" pos:column="16">type<pos:position pos:line="126" pos:column="20"/></name></name> <operator pos:line="126" pos:column="21">=<pos:position pos:line="126" pos:column="22"/></operator> <literal type="char" pos:line="126" pos:column="23">'-'<pos:position pos:line="126" pos:column="26"/></literal></expr>;<pos:position pos:line="126" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="127" pos:column="13">p<pos:position pos:line="127" pos:column="14"/></name><operator pos:line="127" pos:column="14">-&gt;<pos:position pos:line="127" pos:column="19"/></operator><name pos:line="127" pos:column="16">size<pos:position pos:line="127" pos:column="20"/></name></name> <operator pos:line="127" pos:column="21">=<pos:position pos:line="127" pos:column="22"/></operator> <call><name pos:line="127" pos:column="23">strtoll<pos:position pos:line="127" pos:column="30"/></name><argument_list pos:line="127" pos:column="30">(<argument><expr><name><name pos:line="127" pos:column="31">tokens<pos:position pos:line="127" pos:column="37"/></name><index pos:line="127" pos:column="37">[<expr><literal type="number" pos:line="127" pos:column="38">2<pos:position pos:line="127" pos:column="39"/></literal></expr>]<pos:position pos:line="127" pos:column="40"/></index></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="42">NULL<pos:position pos:line="127" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="48">10<pos:position pos:line="127" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="127" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="128" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="130" pos:column="9">snprintf<pos:position pos:line="130" pos:column="17"/></name><argument_list pos:line="130" pos:column="17">(<argument><expr><name pos:line="130" pos:column="18">tbuf<pos:position pos:line="130" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="130" pos:column="24">128<pos:position pos:line="130" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="130" pos:column="29">"%s %s"<pos:position pos:line="130" pos:column="36"/></literal></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="38">tokens<pos:position pos:line="130" pos:column="44"/></name><index pos:line="130" pos:column="44">[<expr><literal type="number" pos:line="130" pos:column="45">0<pos:position pos:line="130" pos:column="46"/></literal></expr>]<pos:position pos:line="130" pos:column="47"/></index></name></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="49">tokens<pos:position pos:line="130" pos:column="55"/></name><index pos:line="130" pos:column="55">[<expr><literal type="number" pos:line="130" pos:column="56">1<pos:position pos:line="130" pos:column="57"/></literal></expr>]<pos:position pos:line="130" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="130" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="131" pos:column="9">p<pos:position pos:line="131" pos:column="10"/></name><operator pos:line="131" pos:column="10">-&gt;<pos:position pos:line="131" pos:column="15"/></operator><name pos:line="131" pos:column="12">date<pos:position pos:line="131" pos:column="16"/></name></name> <operator pos:line="131" pos:column="17">=<pos:position pos:line="131" pos:column="18"/></operator> <call><name pos:line="131" pos:column="19">xstrdup<pos:position pos:line="131" pos:column="26"/></name><argument_list pos:line="131" pos:column="26">(<argument><expr><name pos:line="131" pos:column="27">tbuf<pos:position pos:line="131" pos:column="31"/></name></expr></argument>)<pos:position pos:line="131" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="33"/></expr_stmt>

        <if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><name><name pos:line="133" pos:column="13">p<pos:position pos:line="133" pos:column="14"/></name><operator pos:line="133" pos:column="14">-&gt;<pos:position pos:line="133" pos:column="19"/></operator><name pos:line="133" pos:column="16">type<pos:position pos:line="133" pos:column="20"/></name></name> <operator pos:line="133" pos:column="21">==<pos:position pos:line="133" pos:column="23"/></operator> <literal type="char" pos:line="133" pos:column="24">'d'<pos:position pos:line="133" pos:column="27"/></literal></expr>)<pos:position pos:line="133" pos:column="28"/></condition><then pos:line="133" pos:column="28"> <block pos:line="133" pos:column="29">{
            <comment type="block" pos:line="134" pos:column="13">/* Directory.. name begins with first printable after &lt;dir&gt; */</comment>
            <expr_stmt><expr><name pos:line="135" pos:column="13">ct<pos:position pos:line="135" pos:column="15"/></name> <operator pos:line="135" pos:column="16">=<pos:position pos:line="135" pos:column="17"/></operator> <call><name pos:line="135" pos:column="18">strstr<pos:position pos:line="135" pos:column="24"/></name><argument_list pos:line="135" pos:column="24">(<argument><expr><name pos:line="135" pos:column="25">buf<pos:position pos:line="135" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="135" pos:column="30">tokens<pos:position pos:line="135" pos:column="36"/></name><index pos:line="135" pos:column="36">[<expr><literal type="number" pos:line="135" pos:column="37">2<pos:position pos:line="135" pos:column="38"/></literal></expr>]<pos:position pos:line="135" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="135" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="136" pos:column="13">ct<pos:position pos:line="136" pos:column="15"/></name> <operator pos:line="136" pos:column="16">+=<pos:position pos:line="136" pos:column="18"/></operator> <call><name pos:line="136" pos:column="19">strlen<pos:position pos:line="136" pos:column="25"/></name><argument_list pos:line="136" pos:column="25">(<argument><expr><name><name pos:line="136" pos:column="26">tokens<pos:position pos:line="136" pos:column="32"/></name><index pos:line="136" pos:column="32">[<expr><literal type="number" pos:line="136" pos:column="33">2<pos:position pos:line="136" pos:column="34"/></literal></expr>]<pos:position pos:line="136" pos:column="35"/></index></name></expr></argument>)<pos:position pos:line="136" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="37"/></expr_stmt>

            <while pos:line="138" pos:column="13">while <condition pos:line="138" pos:column="19">(<expr><call><name pos:line="138" pos:column="20">xisspace<pos:position pos:line="138" pos:column="28"/></name><argument_list pos:line="138" pos:column="28">(<argument><expr><operator pos:line="138" pos:column="29">*<pos:position pos:line="138" pos:column="30"/></operator><name pos:line="138" pos:column="30">ct<pos:position pos:line="138" pos:column="32"/></name></expr></argument>)<pos:position pos:line="138" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="138" pos:column="34"/></condition>
                <block type="pseudo"><expr_stmt><expr><operator pos:line="139" pos:column="17">++<pos:position pos:line="139" pos:column="19"/></operator><name pos:line="139" pos:column="19">ct<pos:position pos:line="139" pos:column="21"/></name></expr>;<pos:position pos:line="139" pos:column="22"/></expr_stmt></block></while>

            <if pos:line="141" pos:column="13">if <condition pos:line="141" pos:column="16">(<expr><operator pos:line="141" pos:column="17">!<pos:position pos:line="141" pos:column="18"/></operator><operator pos:line="141" pos:column="18">*<pos:position pos:line="141" pos:column="19"/></operator><name pos:line="141" pos:column="19">ct<pos:position pos:line="141" pos:column="21"/></name></expr>)<pos:position pos:line="141" pos:column="22"/></condition><then pos:line="141" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><name pos:line="142" pos:column="17">ct<pos:position pos:line="142" pos:column="19"/></name> <operator pos:line="142" pos:column="20">=<pos:position pos:line="142" pos:column="21"/></operator> <name pos:line="142" pos:column="22">NULL<pos:position pos:line="142" pos:column="26"/></name></expr>;<pos:position pos:line="142" pos:column="27"/></expr_stmt></block></then></if>
        }<pos:position pos:line="143" pos:column="10"/></block></then> <else pos:line="143" pos:column="11">else <block pos:line="143" pos:column="16">{
            <comment type="block" pos:line="144" pos:column="13">/* A file. Name begins after size, with a space in between */</comment>
            <expr_stmt><expr><call><name pos:line="145" pos:column="13">snprintf<pos:position pos:line="145" pos:column="21"/></name><argument_list pos:line="145" pos:column="21">(<argument><expr><name pos:line="145" pos:column="22">tbuf<pos:position pos:line="145" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="28">128<pos:position pos:line="145" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="33">" %s %s"<pos:position pos:line="145" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="43">tokens<pos:position pos:line="145" pos:column="49"/></name><index pos:line="145" pos:column="49">[<expr><literal type="number" pos:line="145" pos:column="50">2<pos:position pos:line="145" pos:column="51"/></literal></expr>]<pos:position pos:line="145" pos:column="52"/></index></name></expr></argument>, <argument><expr><name><name pos:line="145" pos:column="54">tokens<pos:position pos:line="145" pos:column="60"/></name><index pos:line="145" pos:column="60">[<expr><literal type="number" pos:line="145" pos:column="61">3<pos:position pos:line="145" pos:column="62"/></literal></expr>]<pos:position pos:line="145" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="145" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><name pos:line="146" pos:column="13">ct<pos:position pos:line="146" pos:column="15"/></name> <operator pos:line="146" pos:column="16">=<pos:position pos:line="146" pos:column="17"/></operator> <call><name pos:line="146" pos:column="18">strstr<pos:position pos:line="146" pos:column="24"/></name><argument_list pos:line="146" pos:column="24">(<argument><expr><name pos:line="146" pos:column="25">buf<pos:position pos:line="146" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="146" pos:column="30">tbuf<pos:position pos:line="146" pos:column="34"/></name></expr></argument>)<pos:position pos:line="146" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="36"/></expr_stmt>

            <if pos:line="148" pos:column="13">if <condition pos:line="148" pos:column="16">(<expr><name pos:line="148" pos:column="17">ct<pos:position pos:line="148" pos:column="19"/></name></expr>)<pos:position pos:line="148" pos:column="20"/></condition><then pos:line="148" pos:column="20"> <block pos:line="148" pos:column="21">{
                <expr_stmt><expr><name pos:line="149" pos:column="17">ct<pos:position pos:line="149" pos:column="19"/></name> <operator pos:line="149" pos:column="20">+=<pos:position pos:line="149" pos:column="22"/></operator> <call><name pos:line="149" pos:column="23">strlen<pos:position pos:line="149" pos:column="29"/></name><argument_list pos:line="149" pos:column="29">(<argument><expr><name><name pos:line="149" pos:column="30">tokens<pos:position pos:line="149" pos:column="36"/></name><index pos:line="149" pos:column="36">[<expr><literal type="number" pos:line="149" pos:column="37">2<pos:position pos:line="149" pos:column="38"/></literal></expr>]<pos:position pos:line="149" pos:column="39"/></index></name></expr></argument>)<pos:position pos:line="149" pos:column="40"/></argument_list></call> <operator pos:line="149" pos:column="41">+<pos:position pos:line="149" pos:column="42"/></operator> <literal type="number" pos:line="149" pos:column="43">2<pos:position pos:line="149" pos:column="44"/></literal></expr>;<pos:position pos:line="149" pos:column="45"/></expr_stmt>
            }<pos:position pos:line="150" pos:column="14"/></block></then></if>
        }<pos:position pos:line="151" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name><name pos:line="153" pos:column="9">p<pos:position pos:line="153" pos:column="10"/></name><operator pos:line="153" pos:column="10">-&gt;<pos:position pos:line="153" pos:column="15"/></operator><name pos:line="153" pos:column="12">name<pos:position pos:line="153" pos:column="16"/></name></name> <operator pos:line="153" pos:column="17">=<pos:position pos:line="153" pos:column="18"/></operator> <call><name pos:line="153" pos:column="19">xstrdup<pos:position pos:line="153" pos:column="26"/></name><argument_list pos:line="153" pos:column="26">(<argument><expr><ternary><condition><expr><name pos:line="153" pos:column="27">ct<pos:position pos:line="153" pos:column="29"/></name></expr> ?<pos:position pos:line="153" pos:column="31"/></condition><then pos:line="153" pos:column="31"> <expr><name pos:line="153" pos:column="32">ct<pos:position pos:line="153" pos:column="34"/></name></expr> <pos:position pos:line="153" pos:column="35"/></then><else pos:line="153" pos:column="35">: <expr><name><name pos:line="153" pos:column="37">tokens<pos:position pos:line="153" pos:column="43"/></name><index pos:line="153" pos:column="43">[<expr><literal type="number" pos:line="153" pos:column="44">3<pos:position pos:line="153" pos:column="45"/></literal></expr>]<pos:position pos:line="153" pos:column="46"/></index></name></expr></else></ternary></expr></argument>)<pos:position pos:line="153" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="48"/></expr_stmt>
        <goto pos:line="154" pos:column="9">goto <name pos:line="154" pos:column="14">found<pos:position pos:line="154" pos:column="19"/></name>;<pos:position pos:line="154" pos:column="20"/></goto>
    }<pos:position pos:line="155" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="157" pos:column="5">/* Try EPLF format; carson@lehman.com */</comment>
    <if pos:line="158" pos:column="5">if <condition pos:line="158" pos:column="8">(<expr><name><name pos:line="158" pos:column="9">buf<pos:position pos:line="158" pos:column="12"/></name><index pos:line="158" pos:column="12">[<expr><literal type="number" pos:line="158" pos:column="13">0<pos:position pos:line="158" pos:column="14"/></literal></expr>]<pos:position pos:line="158" pos:column="15"/></index></name> <operator pos:line="158" pos:column="16">==<pos:position pos:line="158" pos:column="18"/></operator> <literal type="char" pos:line="158" pos:column="19">'+'<pos:position pos:line="158" pos:column="22"/></literal></expr>)<pos:position pos:line="158" pos:column="23"/></condition><then pos:line="158" pos:column="23"> <block pos:line="158" pos:column="24">{
        <expr_stmt><expr><name pos:line="159" pos:column="9">ct<pos:position pos:line="159" pos:column="11"/></name> <operator pos:line="159" pos:column="12">=<pos:position pos:line="159" pos:column="13"/></operator> <name pos:line="159" pos:column="14">buf<pos:position pos:line="159" pos:column="17"/></name> <operator pos:line="159" pos:column="18">+<pos:position pos:line="159" pos:column="19"/></operator> <literal type="number" pos:line="159" pos:column="20">1<pos:position pos:line="159" pos:column="21"/></literal></expr>;<pos:position pos:line="159" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="160" pos:column="9">p<pos:position pos:line="160" pos:column="10"/></name><operator pos:line="160" pos:column="10">-&gt;<pos:position pos:line="160" pos:column="15"/></operator><name pos:line="160" pos:column="12">type<pos:position pos:line="160" pos:column="16"/></name></name> <operator pos:line="160" pos:column="17">=<pos:position pos:line="160" pos:column="18"/></operator> <literal type="number" pos:line="160" pos:column="19">0<pos:position pos:line="160" pos:column="20"/></literal></expr>;<pos:position pos:line="160" pos:column="21"/></expr_stmt>

        <while pos:line="162" pos:column="9">while <condition pos:line="162" pos:column="15">(<expr><name pos:line="162" pos:column="16">ct<pos:position pos:line="162" pos:column="18"/></name> <operator pos:line="162" pos:column="19">&amp;&amp;<pos:position pos:line="162" pos:column="29"/></operator> <operator pos:line="162" pos:column="22">*<pos:position pos:line="162" pos:column="23"/></operator><name pos:line="162" pos:column="23">ct<pos:position pos:line="162" pos:column="25"/></name></expr>)<pos:position pos:line="162" pos:column="26"/></condition> <block pos:line="162" pos:column="27">{
            <decl_stmt><decl><type><name pos:line="163" pos:column="13">time_t<pos:position pos:line="163" pos:column="19"/></name></type> <name pos:line="163" pos:column="20">tm<pos:position pos:line="163" pos:column="22"/></name></decl>;<pos:position pos:line="163" pos:column="23"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="164" pos:column="13">int<pos:position pos:line="164" pos:column="16"/></name></type> <name pos:line="164" pos:column="17">l<pos:position pos:line="164" pos:column="18"/></name> <init pos:line="164" pos:column="19">= <expr><call><name pos:line="164" pos:column="21">strcspn<pos:position pos:line="164" pos:column="28"/></name><argument_list pos:line="164" pos:column="28">(<argument><expr><name pos:line="164" pos:column="29">ct<pos:position pos:line="164" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="164" pos:column="33">","<pos:position pos:line="164" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="164" pos:column="38"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="165" pos:column="13">char<pos:position pos:line="165" pos:column="17"/></name> <modifier pos:line="165" pos:column="18">*<pos:position pos:line="165" pos:column="19"/></modifier></type><name pos:line="165" pos:column="19">tmp<pos:position pos:line="165" pos:column="22"/></name></decl>;<pos:position pos:line="165" pos:column="23"/></decl_stmt>

            <if pos:line="167" pos:column="13">if <condition pos:line="167" pos:column="16">(<expr><name pos:line="167" pos:column="17">l<pos:position pos:line="167" pos:column="18"/></name> <operator pos:line="167" pos:column="19">&lt;<pos:position pos:line="167" pos:column="23"/></operator> <literal type="number" pos:line="167" pos:column="21">1<pos:position pos:line="167" pos:column="22"/></literal></expr>)<pos:position pos:line="167" pos:column="23"/></condition><then pos:line="167" pos:column="23">
                <block type="pseudo"><goto pos:line="168" pos:column="17">goto <name pos:line="168" pos:column="22">blank<pos:position pos:line="168" pos:column="27"/></name>;<pos:position pos:line="168" pos:column="28"/></goto></block></then></if>

            <switch pos:line="170" pos:column="13">switch <condition pos:line="170" pos:column="20">(<expr><operator pos:line="170" pos:column="21">*<pos:position pos:line="170" pos:column="22"/></operator><name pos:line="170" pos:column="22">ct<pos:position pos:line="170" pos:column="24"/></name></expr>)<pos:position pos:line="170" pos:column="25"/></condition> <block pos:line="170" pos:column="26">{

            <case pos:line="172" pos:column="13">case <expr><literal type="char" pos:line="172" pos:column="18">'\t'<pos:position pos:line="172" pos:column="22"/></literal></expr>:<pos:position pos:line="172" pos:column="23"/></case>
                <expr_stmt><expr><name><name pos:line="173" pos:column="17">p<pos:position pos:line="173" pos:column="18"/></name><operator pos:line="173" pos:column="18">-&gt;<pos:position pos:line="173" pos:column="23"/></operator><name pos:line="173" pos:column="20">name<pos:position pos:line="173" pos:column="24"/></name></name> <operator pos:line="173" pos:column="25">=<pos:position pos:line="173" pos:column="26"/></operator> <call><name pos:line="173" pos:column="27">xstrndup<pos:position pos:line="173" pos:column="35"/></name><argument_list pos:line="173" pos:column="35">(<argument><expr><name pos:line="173" pos:column="36">ct<pos:position pos:line="173" pos:column="38"/></name> <operator pos:line="173" pos:column="39">+<pos:position pos:line="173" pos:column="40"/></operator> <literal type="number" pos:line="173" pos:column="41">1<pos:position pos:line="173" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="173" pos:column="44">l<pos:position pos:line="173" pos:column="45"/></name> <operator pos:line="173" pos:column="46">+<pos:position pos:line="173" pos:column="47"/></operator> <literal type="number" pos:line="173" pos:column="48">1<pos:position pos:line="173" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="173" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="173" pos:column="51"/></expr_stmt>
                <break pos:line="174" pos:column="17">break;<pos:position pos:line="174" pos:column="23"/></break>

            <case pos:line="176" pos:column="13">case <expr><literal type="char" pos:line="176" pos:column="18">'s'<pos:position pos:line="176" pos:column="21"/></literal></expr>:<pos:position pos:line="176" pos:column="22"/></case>
                <expr_stmt><expr><name><name pos:line="177" pos:column="17">p<pos:position pos:line="177" pos:column="18"/></name><operator pos:line="177" pos:column="18">-&gt;<pos:position pos:line="177" pos:column="23"/></operator><name pos:line="177" pos:column="20">size<pos:position pos:line="177" pos:column="24"/></name></name> <operator pos:line="177" pos:column="25">=<pos:position pos:line="177" pos:column="26"/></operator> <call><name pos:line="177" pos:column="27">atoi<pos:position pos:line="177" pos:column="31"/></name><argument_list pos:line="177" pos:column="31">(<argument><expr><name pos:line="177" pos:column="32">ct<pos:position pos:line="177" pos:column="34"/></name> <operator pos:line="177" pos:column="35">+<pos:position pos:line="177" pos:column="36"/></operator> <literal type="number" pos:line="177" pos:column="37">1<pos:position pos:line="177" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="177" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="40"/></expr_stmt>
                <break pos:line="178" pos:column="17">break;<pos:position pos:line="178" pos:column="23"/></break>

            <case pos:line="180" pos:column="13">case <expr><literal type="char" pos:line="180" pos:column="18">'m'<pos:position pos:line="180" pos:column="21"/></literal></expr>:<pos:position pos:line="180" pos:column="22"/></case>
                <expr_stmt><expr><name pos:line="181" pos:column="17">tm<pos:position pos:line="181" pos:column="19"/></name> <operator pos:line="181" pos:column="20">=<pos:position pos:line="181" pos:column="21"/></operator> <operator pos:line="181" pos:column="22">(<pos:position pos:line="181" pos:column="23"/></operator><name pos:line="181" pos:column="23">time_t<pos:position pos:line="181" pos:column="29"/></name><operator pos:line="181" pos:column="29">)<pos:position pos:line="181" pos:column="30"/></operator> <call><name pos:line="181" pos:column="31">strtol<pos:position pos:line="181" pos:column="37"/></name><argument_list pos:line="181" pos:column="37">(<argument><expr><name pos:line="181" pos:column="38">ct<pos:position pos:line="181" pos:column="40"/></name> <operator pos:line="181" pos:column="41">+<pos:position pos:line="181" pos:column="42"/></operator> <literal type="number" pos:line="181" pos:column="43">1<pos:position pos:line="181" pos:column="44"/></literal></expr></argument>, <argument><expr><operator pos:line="181" pos:column="46">&amp;<pos:position pos:line="181" pos:column="51"/></operator><name pos:line="181" pos:column="47">tmp<pos:position pos:line="181" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="181" pos:column="52">0<pos:position pos:line="181" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="55"/></expr_stmt>

                <if pos:line="183" pos:column="17">if <condition pos:line="183" pos:column="20">(<expr><name pos:line="183" pos:column="21">tmp<pos:position pos:line="183" pos:column="24"/></name> <operator pos:line="183" pos:column="25">!=<pos:position pos:line="183" pos:column="27"/></operator> <name pos:line="183" pos:column="28">ct<pos:position pos:line="183" pos:column="30"/></name> <operator pos:line="183" pos:column="31">+<pos:position pos:line="183" pos:column="32"/></operator> <literal type="number" pos:line="183" pos:column="33">1<pos:position pos:line="183" pos:column="34"/></literal></expr>)<pos:position pos:line="183" pos:column="35"/></condition><then pos:line="183" pos:column="35">
                    <block type="pseudo"><break pos:line="184" pos:column="21">break;<pos:position pos:line="184" pos:column="27"/></break></block></then></if>  <comment type="block" pos:line="184" pos:column="29">/* not a valid integer */</comment>

                <expr_stmt><expr><name><name pos:line="186" pos:column="17">p<pos:position pos:line="186" pos:column="18"/></name><operator pos:line="186" pos:column="18">-&gt;<pos:position pos:line="186" pos:column="23"/></operator><name pos:line="186" pos:column="20">date<pos:position pos:line="186" pos:column="24"/></name></name> <operator pos:line="186" pos:column="25">=<pos:position pos:line="186" pos:column="26"/></operator> <call><name pos:line="186" pos:column="27">xstrdup<pos:position pos:line="186" pos:column="34"/></name><argument_list pos:line="186" pos:column="34">(<argument><expr><call><name pos:line="186" pos:column="35">ctime<pos:position pos:line="186" pos:column="40"/></name><argument_list pos:line="186" pos:column="40">(<argument><expr><operator pos:line="186" pos:column="41">&amp;<pos:position pos:line="186" pos:column="46"/></operator><name pos:line="186" pos:column="42">tm<pos:position pos:line="186" pos:column="44"/></name></expr></argument>)<pos:position pos:line="186" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="186" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="47"/></expr_stmt>

                <expr_stmt><expr><operator pos:line="188" pos:column="17">*<pos:position pos:line="188" pos:column="18"/></operator><operator pos:line="188" pos:column="18">(<pos:position pos:line="188" pos:column="19"/></operator><call><name pos:line="188" pos:column="19">strstr<pos:position pos:line="188" pos:column="25"/></name><argument_list pos:line="188" pos:column="25">(<argument><expr><name><name pos:line="188" pos:column="26">p<pos:position pos:line="188" pos:column="27"/></name><operator pos:line="188" pos:column="27">-&gt;<pos:position pos:line="188" pos:column="32"/></operator><name pos:line="188" pos:column="29">date<pos:position pos:line="188" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="188" pos:column="35">"\n"<pos:position pos:line="188" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="40"/></argument_list></call><operator pos:line="188" pos:column="40">)<pos:position pos:line="188" pos:column="41"/></operator> <operator pos:line="188" pos:column="42">=<pos:position pos:line="188" pos:column="43"/></operator> <literal type="char" pos:line="188" pos:column="44">'\0'<pos:position pos:line="188" pos:column="48"/></literal></expr>;<pos:position pos:line="188" pos:column="49"/></expr_stmt>

                <break pos:line="190" pos:column="17">break;<pos:position pos:line="190" pos:column="23"/></break>

            <case pos:line="192" pos:column="13">case <expr><literal type="char" pos:line="192" pos:column="18">'/'<pos:position pos:line="192" pos:column="21"/></literal></expr>:<pos:position pos:line="192" pos:column="22"/></case>
                <expr_stmt><expr><name><name pos:line="193" pos:column="17">p<pos:position pos:line="193" pos:column="18"/></name><operator pos:line="193" pos:column="18">-&gt;<pos:position pos:line="193" pos:column="23"/></operator><name pos:line="193" pos:column="20">type<pos:position pos:line="193" pos:column="24"/></name></name> <operator pos:line="193" pos:column="25">=<pos:position pos:line="193" pos:column="26"/></operator> <literal type="char" pos:line="193" pos:column="27">'d'<pos:position pos:line="193" pos:column="30"/></literal></expr>;<pos:position pos:line="193" pos:column="31"/></expr_stmt>

                <break pos:line="195" pos:column="17">break;<pos:position pos:line="195" pos:column="23"/></break>

            <case pos:line="197" pos:column="13">case <expr><literal type="char" pos:line="197" pos:column="18">'r'<pos:position pos:line="197" pos:column="21"/></literal></expr>:<pos:position pos:line="197" pos:column="22"/></case>
                <expr_stmt><expr><name><name pos:line="198" pos:column="17">p<pos:position pos:line="198" pos:column="18"/></name><operator pos:line="198" pos:column="18">-&gt;<pos:position pos:line="198" pos:column="23"/></operator><name pos:line="198" pos:column="20">type<pos:position pos:line="198" pos:column="24"/></name></name> <operator pos:line="198" pos:column="25">=<pos:position pos:line="198" pos:column="26"/></operator> <literal type="char" pos:line="198" pos:column="27">'-'<pos:position pos:line="198" pos:column="30"/></literal></expr>;<pos:position pos:line="198" pos:column="31"/></expr_stmt>

                <break pos:line="200" pos:column="17">break;<pos:position pos:line="200" pos:column="23"/></break>

            <case pos:line="202" pos:column="13">case <expr><literal type="char" pos:line="202" pos:column="18">'i'<pos:position pos:line="202" pos:column="21"/></literal></expr>:<pos:position pos:line="202" pos:column="22"/></case>
                <break pos:line="203" pos:column="17">break;<pos:position pos:line="203" pos:column="23"/></break>

            <default pos:line="205" pos:column="13">default:<pos:position pos:line="205" pos:column="21"/></default>
                <break pos:line="206" pos:column="17">break;<pos:position pos:line="206" pos:column="23"/></break>
            }<pos:position pos:line="207" pos:column="14"/></block></switch>

<label><name pos:line="209" pos:column="1">blank<pos:position pos:line="209" pos:column="6"/></name>:<pos:position pos:line="209" pos:column="7"/></label>
            <expr_stmt><expr><name pos:line="210" pos:column="13">ct<pos:position pos:line="210" pos:column="15"/></name> <operator pos:line="210" pos:column="16">=<pos:position pos:line="210" pos:column="17"/></operator> <call><name pos:line="210" pos:column="18">strstr<pos:position pos:line="210" pos:column="24"/></name><argument_list pos:line="210" pos:column="24">(<argument><expr><name pos:line="210" pos:column="25">ct<pos:position pos:line="210" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="210" pos:column="29">","<pos:position pos:line="210" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="210" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="34"/></expr_stmt>

            <if pos:line="212" pos:column="13">if <condition pos:line="212" pos:column="16">(<expr><name pos:line="212" pos:column="17">ct<pos:position pos:line="212" pos:column="19"/></name></expr>)<pos:position pos:line="212" pos:column="20"/></condition><then pos:line="212" pos:column="20"> <block pos:line="212" pos:column="21">{
                <expr_stmt><expr><operator pos:line="213" pos:column="17">++<pos:position pos:line="213" pos:column="19"/></operator><name pos:line="213" pos:column="19">ct<pos:position pos:line="213" pos:column="21"/></name></expr>;<pos:position pos:line="213" pos:column="22"/></expr_stmt>
            }<pos:position pos:line="214" pos:column="14"/></block></then></if>
        }<pos:position pos:line="215" pos:column="10"/></block></while>

        <if pos:line="217" pos:column="9">if <condition pos:line="217" pos:column="12">(<expr><name><name pos:line="217" pos:column="13">p<pos:position pos:line="217" pos:column="14"/></name><operator pos:line="217" pos:column="14">-&gt;<pos:position pos:line="217" pos:column="19"/></operator><name pos:line="217" pos:column="16">type<pos:position pos:line="217" pos:column="20"/></name></name> <operator pos:line="217" pos:column="21">==<pos:position pos:line="217" pos:column="23"/></operator> <literal type="number" pos:line="217" pos:column="24">0<pos:position pos:line="217" pos:column="25"/></literal></expr>)<pos:position pos:line="217" pos:column="26"/></condition><then pos:line="217" pos:column="26"> <block pos:line="217" pos:column="27">{
            <expr_stmt><expr><name><name pos:line="218" pos:column="13">p<pos:position pos:line="218" pos:column="14"/></name><operator pos:line="218" pos:column="14">-&gt;<pos:position pos:line="218" pos:column="19"/></operator><name pos:line="218" pos:column="16">type<pos:position pos:line="218" pos:column="20"/></name></name> <operator pos:line="218" pos:column="21">=<pos:position pos:line="218" pos:column="22"/></operator> <literal type="char" pos:line="218" pos:column="23">'-'<pos:position pos:line="218" pos:column="26"/></literal></expr>;<pos:position pos:line="218" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="219" pos:column="10"/></block></then></if>

        <if pos:line="221" pos:column="9">if <condition pos:line="221" pos:column="12">(<expr><name><name pos:line="221" pos:column="13">p<pos:position pos:line="221" pos:column="14"/></name><operator pos:line="221" pos:column="14">-&gt;<pos:position pos:line="221" pos:column="19"/></operator><name pos:line="221" pos:column="16">name<pos:position pos:line="221" pos:column="20"/></name></name></expr>)<pos:position pos:line="221" pos:column="21"/></condition><then pos:line="221" pos:column="21">
            <block type="pseudo"><goto pos:line="222" pos:column="13">goto <name pos:line="222" pos:column="18">found<pos:position pos:line="222" pos:column="23"/></name>;<pos:position pos:line="222" pos:column="24"/></goto></block></then>
        <else pos:line="223" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="224" pos:column="13">safe_free<pos:position pos:line="224" pos:column="22"/></name><argument_list pos:line="224" pos:column="22">(<argument><expr><name><name pos:line="224" pos:column="23">p<pos:position pos:line="224" pos:column="24"/></name><operator pos:line="224" pos:column="24">-&gt;<pos:position pos:line="224" pos:column="29"/></operator><name pos:line="224" pos:column="26">date<pos:position pos:line="224" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="224" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="32"/></expr_stmt></block></else></if>
    }<pos:position pos:line="225" pos:column="6"/></block></then></if>

<label><name pos:line="227" pos:column="1">found<pos:position pos:line="227" pos:column="6"/></name>:<pos:position pos:line="227" pos:column="7"/></label>

    <for pos:line="229" pos:column="5">for <control pos:line="229" pos:column="9">(<init><expr><name pos:line="229" pos:column="10">i<pos:position pos:line="229" pos:column="11"/></name> <operator pos:line="229" pos:column="12">=<pos:position pos:line="229" pos:column="13"/></operator> <literal type="number" pos:line="229" pos:column="14">0<pos:position pos:line="229" pos:column="15"/></literal></expr>;<pos:position pos:line="229" pos:column="16"/></init> <condition><expr><name pos:line="229" pos:column="17">i<pos:position pos:line="229" pos:column="18"/></name> <operator pos:line="229" pos:column="19">&lt;<pos:position pos:line="229" pos:column="23"/></operator> <name pos:line="229" pos:column="21">n_tokens<pos:position pos:line="229" pos:column="29"/></name></expr>;<pos:position pos:line="229" pos:column="30"/></condition> <incr><expr><operator pos:line="229" pos:column="31">++<pos:position pos:line="229" pos:column="33"/></operator><name pos:line="229" pos:column="33">i<pos:position pos:line="229" pos:column="34"/></name></expr></incr>)<pos:position pos:line="229" pos:column="35"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="230" pos:column="9">xfree<pos:position pos:line="230" pos:column="14"/></name><argument_list pos:line="230" pos:column="14">(<argument><expr><name><name pos:line="230" pos:column="15">tokens<pos:position pos:line="230" pos:column="21"/></name><index pos:line="230" pos:column="21">[<expr><name pos:line="230" pos:column="22">i<pos:position pos:line="230" pos:column="23"/></name></expr>]<pos:position pos:line="230" pos:column="24"/></index></name></expr></argument>)<pos:position pos:line="230" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="26"/></expr_stmt></block></for>

    <if pos:line="232" pos:column="5">if <condition pos:line="232" pos:column="8">(<expr><operator pos:line="232" pos:column="9">!<pos:position pos:line="232" pos:column="10"/></operator><name><name pos:line="232" pos:column="10">p<pos:position pos:line="232" pos:column="11"/></name><operator pos:line="232" pos:column="11">-&gt;<pos:position pos:line="232" pos:column="16"/></operator><name pos:line="232" pos:column="13">name<pos:position pos:line="232" pos:column="17"/></name></name></expr>)<pos:position pos:line="232" pos:column="18"/></condition><then pos:line="232" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="233" pos:column="9">ftpListPartsFree<pos:position pos:line="233" pos:column="25"/></name><argument_list pos:line="233" pos:column="25">(<argument><expr><operator pos:line="233" pos:column="26">&amp;<pos:position pos:line="233" pos:column="31"/></operator><name pos:line="233" pos:column="27">p<pos:position pos:line="233" pos:column="28"/></name></expr></argument>)<pos:position pos:line="233" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="30"/></expr_stmt></block></then></if>   <comment type="block" pos:line="233" pos:column="33">/* cleanup */</comment>

    <return pos:line="235" pos:column="5">return <expr><name pos:line="235" pos:column="12">p<pos:position pos:line="235" pos:column="13"/></name></expr>;<pos:position pos:line="235" pos:column="14"/></return>
}<pos:position pos:line="236" pos:column="2"/></block></function></unit>

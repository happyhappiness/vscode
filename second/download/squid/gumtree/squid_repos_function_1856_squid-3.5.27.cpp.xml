<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1856_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerDigestCheck<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">void<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">data<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">PeerDigest<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">pd<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><operator pos:line="4" pos:column="22">(<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">PeerDigest<pos:position pos:line="4" pos:column="33"/></name> <operator pos:line="4" pos:column="34">*<pos:position pos:line="4" pos:column="35"/></operator><operator pos:line="4" pos:column="35">)<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="36">data<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">time_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">req_time<pos:position pos:line="5" pos:column="20"/></name></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><operator pos:line="7" pos:column="12">!<pos:position pos:line="7" pos:column="13"/></operator><name><name pos:line="7" pos:column="13">pd<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">-&gt;<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="17">flags<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">.<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">requested<pos:position pos:line="7" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">pd<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">-&gt;<pos:position pos:line="9" pos:column="12"/></operator><name pos:line="9" pos:column="9">times<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">.<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">next_check<pos:position pos:line="9" pos:column="25"/></name></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <literal type="number" pos:line="9" pos:column="28">0<pos:position pos:line="9" pos:column="29"/></literal></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>   <comment type="block" pos:line="9" pos:column="33">/* unknown */</comment>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">cbdataReferenceValid<pos:position pos:line="11" pos:column="30"/></name><argument_list pos:line="11" pos:column="30">(<argument><expr><name><name pos:line="11" pos:column="31">pd<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">-&gt;<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="35">peer<pos:position pos:line="11" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41"> <block pos:line="11" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">peerDigestNotePeerGone<pos:position pos:line="12" pos:column="31"/></name><argument_list pos:line="12" pos:column="31">(<argument><expr><name pos:line="12" pos:column="32">pd<pos:position pos:line="12" pos:column="34"/></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">72<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">3<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"peerDigestCheck: peer "<pos:position pos:line="16" pos:column="43"/></literal> <operator pos:line="16" pos:column="44">&lt;&lt;<pos:position pos:line="16" pos:column="52"/></operator>  <name><name pos:line="16" pos:column="48">pd<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">-&gt;<pos:position pos:line="16" pos:column="55"/></operator><name pos:line="16" pos:column="52">peer<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">-&gt;<pos:position pos:line="16" pos:column="61"/></operator><name pos:line="16" pos:column="58">host<pos:position pos:line="16" pos:column="62"/></name></name> <operator pos:line="16" pos:column="63">&lt;&lt;<pos:position pos:line="16" pos:column="71"/></operator> <literal type="string" pos:line="16" pos:column="66">":"<pos:position pos:line="16" pos:column="69"/></literal> <operator pos:line="16" pos:column="70">&lt;&lt;<pos:position pos:line="16" pos:column="78"/></operator> <name><name pos:line="16" pos:column="73">pd<pos:position pos:line="16" pos:column="75"/></name><operator pos:line="16" pos:column="75">-&gt;<pos:position pos:line="16" pos:column="80"/></operator><name pos:line="16" pos:column="77">peer<pos:position pos:line="16" pos:column="81"/></name><operator pos:line="16" pos:column="81">-&gt;<pos:position pos:line="16" pos:column="86"/></operator><name pos:line="16" pos:column="83">http_port<pos:position pos:line="16" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="94"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">72<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="16">3<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="19">"peerDigestCheck: time: "<pos:position pos:line="17" pos:column="44"/></literal> <operator pos:line="17" pos:column="45">&lt;&lt;<pos:position pos:line="17" pos:column="53"/></operator> <name pos:line="17" pos:column="48">squid_curtime<pos:position pos:line="17" pos:column="61"/></name> <operator pos:line="17" pos:column="62">&lt;&lt;<pos:position pos:line="17" pos:column="70"/></operator>
           <literal type="string" pos:line="18" pos:column="12">", last received: "<pos:position pos:line="18" pos:column="31"/></literal> <operator pos:line="18" pos:column="32">&lt;&lt;<pos:position pos:line="18" pos:column="40"/></operator> <operator pos:line="18" pos:column="35">(<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="36">long<pos:position pos:line="18" pos:column="40"/></name> <name pos:line="18" pos:column="41">int<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">)<pos:position pos:line="18" pos:column="45"/></operator> <name><name pos:line="18" pos:column="46">pd<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">-&gt;<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="50">times<pos:position pos:line="18" pos:column="55"/></name><operator pos:line="18" pos:column="55">.<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="56">received<pos:position pos:line="18" pos:column="64"/></name></name> <operator pos:line="18" pos:column="65">&lt;&lt;<pos:position pos:line="18" pos:column="73"/></operator> <literal type="string" pos:line="18" pos:column="68">"  ("<pos:position pos:line="18" pos:column="73"/></literal> <operator pos:line="18" pos:column="74">&lt;&lt;<pos:position pos:line="18" pos:column="82"/></operator>
           <name><name pos:line="19" pos:column="12">std<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">::<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">showpos<pos:position pos:line="19" pos:column="24"/></name></name> <operator pos:line="19" pos:column="25">&lt;&lt;<pos:position pos:line="19" pos:column="33"/></operator> <call pos:line="19" pos:column="28">(<name pos:line="19" pos:column="29">int<pos:position pos:line="19" pos:column="32"/></name>) <argument_list pos:line="19" pos:column="34">(<argument><expr><name pos:line="19" pos:column="35">squid_curtime<pos:position pos:line="19" pos:column="48"/></name> <operator pos:line="19" pos:column="49">-<pos:position pos:line="19" pos:column="50"/></operator> <name><name pos:line="19" pos:column="51">pd<pos:position pos:line="19" pos:column="53"/></name><operator pos:line="19" pos:column="53">-&gt;<pos:position pos:line="19" pos:column="58"/></operator><name pos:line="19" pos:column="55">times<pos:position pos:line="19" pos:column="60"/></name><operator pos:line="19" pos:column="60">.<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="61">received<pos:position pos:line="19" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="70"/></argument_list></call> <operator pos:line="19" pos:column="71">&lt;&lt;<pos:position pos:line="19" pos:column="79"/></operator> <literal type="string" pos:line="19" pos:column="74">")"<pos:position pos:line="19" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="79"/></expr_stmt>

    <comment type="block" pos:line="21" pos:column="5">/* decide when we should send the request:
     * request now unless too close to other requests */</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">req_time<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">squid_curtime<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>

    <comment type="block" pos:line="25" pos:column="5">/* per-peer limit */</comment>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">req_time<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">-<pos:position pos:line="27" pos:column="19"/></operator> <name><name pos:line="27" pos:column="20">pd<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">-&gt;<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="24">times<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">received<pos:position pos:line="27" pos:column="38"/></name></name> <operator pos:line="27" pos:column="39">&lt;<pos:position pos:line="27" pos:column="43"/></operator> <name pos:line="27" pos:column="41">PeerDigestReqMinGap<pos:position pos:line="27" pos:column="60"/></name></expr>)<pos:position pos:line="27" pos:column="61"/></condition><then pos:line="27" pos:column="61"> <block pos:line="27" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">debugs<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><literal type="number" pos:line="28" pos:column="16">72<pos:position pos:line="28" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="20">2<pos:position pos:line="28" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"peerDigestCheck: "<pos:position pos:line="28" pos:column="42"/></literal> <operator pos:line="28" pos:column="43">&lt;&lt;<pos:position pos:line="28" pos:column="51"/></operator> <name><name pos:line="28" pos:column="46">pd<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">host<pos:position pos:line="28" pos:column="54"/></name></name> <operator pos:line="28" pos:column="55">&lt;&lt;<pos:position pos:line="28" pos:column="63"/></operator>
               <literal type="string" pos:line="29" pos:column="16">", avoiding close peer requests ("<pos:position pos:line="29" pos:column="50"/></literal> <operator pos:line="29" pos:column="51">&lt;&lt;<pos:position pos:line="29" pos:column="59"/></operator>
               <call pos:line="30" pos:column="16">(<name pos:line="30" pos:column="17">int<pos:position pos:line="30" pos:column="20"/></name>) <argument_list pos:line="30" pos:column="22">(<argument><expr><name pos:line="30" pos:column="23">req_time<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">-<pos:position pos:line="30" pos:column="33"/></operator> <name><name pos:line="30" pos:column="34">pd<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">-&gt;<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="38">times<pos:position pos:line="30" pos:column="43"/></name><operator pos:line="30" pos:column="43">.<pos:position pos:line="30" pos:column="44"/></operator><name pos:line="30" pos:column="44">received<pos:position pos:line="30" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="53"/></argument_list></call> <operator pos:line="30" pos:column="54">&lt;&lt;<pos:position pos:line="30" pos:column="62"/></operator> <literal type="string" pos:line="30" pos:column="57">" &lt; "<pos:position pos:line="30" pos:column="65"/></literal> <operator pos:line="30" pos:column="63">&lt;&lt;<pos:position pos:line="30" pos:column="71"/></operator>
               <operator pos:line="31" pos:column="16">(<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="17">int<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">)<pos:position pos:line="31" pos:column="21"/></operator> <name pos:line="31" pos:column="22">PeerDigestReqMinGap<pos:position pos:line="31" pos:column="41"/></name> <operator pos:line="31" pos:column="42">&lt;&lt;<pos:position pos:line="31" pos:column="50"/></operator> <literal type="string" pos:line="31" pos:column="45">" secs)."<pos:position pos:line="31" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="56"/></expr_stmt>

        <expr_stmt><expr><name pos:line="33" pos:column="9">req_time<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">=<pos:position pos:line="33" pos:column="19"/></operator> <name><name pos:line="33" pos:column="20">pd<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">-&gt;<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="24">times<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">.<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">received<pos:position pos:line="33" pos:column="38"/></name></name> <operator pos:line="33" pos:column="39">+<pos:position pos:line="33" pos:column="40"/></operator> <name pos:line="33" pos:column="41">PeerDigestReqMinGap<pos:position pos:line="33" pos:column="60"/></name></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="36" pos:column="5">/* global limit */</comment>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">req_time<pos:position pos:line="37" pos:column="17"/></name> <operator pos:line="37" pos:column="18">-<pos:position pos:line="37" pos:column="19"/></operator> <name pos:line="37" pos:column="20">pd_last_req_time<pos:position pos:line="37" pos:column="36"/></name> <operator pos:line="37" pos:column="37">&lt;<pos:position pos:line="37" pos:column="41"/></operator> <name pos:line="37" pos:column="39">GlobDigestReqMinGap<pos:position pos:line="37" pos:column="58"/></name></expr>)<pos:position pos:line="37" pos:column="59"/></condition><then pos:line="37" pos:column="59"> <block pos:line="37" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">debugs<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><literal type="number" pos:line="38" pos:column="16">72<pos:position pos:line="38" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="20">2<pos:position pos:line="38" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="23">"peerDigestCheck: "<pos:position pos:line="38" pos:column="42"/></literal> <operator pos:line="38" pos:column="43">&lt;&lt;<pos:position pos:line="38" pos:column="51"/></operator> <name><name pos:line="38" pos:column="46">pd<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">-&gt;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="50">host<pos:position pos:line="38" pos:column="54"/></name></name> <operator pos:line="38" pos:column="55">&lt;&lt;<pos:position pos:line="38" pos:column="63"/></operator>
               <literal type="string" pos:line="39" pos:column="16">", avoiding close requests ("<pos:position pos:line="39" pos:column="45"/></literal> <operator pos:line="39" pos:column="46">&lt;&lt;<pos:position pos:line="39" pos:column="54"/></operator>
               <call pos:line="40" pos:column="16">(<name pos:line="40" pos:column="17">int<pos:position pos:line="40" pos:column="20"/></name>) <argument_list pos:line="40" pos:column="22">(<argument><expr><name pos:line="40" pos:column="23">req_time<pos:position pos:line="40" pos:column="31"/></name> <operator pos:line="40" pos:column="32">-<pos:position pos:line="40" pos:column="33"/></operator> <name pos:line="40" pos:column="34">pd_last_req_time<pos:position pos:line="40" pos:column="50"/></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call> <operator pos:line="40" pos:column="52">&lt;&lt;<pos:position pos:line="40" pos:column="60"/></operator> <literal type="string" pos:line="40" pos:column="55">" &lt; "<pos:position pos:line="40" pos:column="63"/></literal> <operator pos:line="40" pos:column="61">&lt;&lt;<pos:position pos:line="40" pos:column="69"/></operator>
               <operator pos:line="41" pos:column="16">(<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">int<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">)<pos:position pos:line="41" pos:column="21"/></operator> <name pos:line="41" pos:column="22">GlobDigestReqMinGap<pos:position pos:line="41" pos:column="41"/></name> <operator pos:line="41" pos:column="42">&lt;&lt;<pos:position pos:line="41" pos:column="50"/></operator> <literal type="string" pos:line="41" pos:column="45">" secs)."<pos:position pos:line="41" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="56"/></expr_stmt>

        <expr_stmt><expr><name pos:line="43" pos:column="9">req_time<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <name pos:line="43" pos:column="20">pd_last_req_time<pos:position pos:line="43" pos:column="36"/></name> <operator pos:line="43" pos:column="37">+<pos:position pos:line="43" pos:column="38"/></operator> <name pos:line="43" pos:column="39">GlobDigestReqMinGap<pos:position pos:line="43" pos:column="58"/></name></expr>;<pos:position pos:line="43" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">req_time<pos:position pos:line="46" pos:column="17"/></name> <operator pos:line="46" pos:column="18">&lt;=<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="21">squid_curtime<pos:position pos:line="46" pos:column="34"/></name></expr>)<pos:position pos:line="46" pos:column="35"/></condition><then pos:line="46" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="47" pos:column="9">peerDigestRequest<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name pos:line="47" pos:column="27">pd<pos:position pos:line="47" pos:column="29"/></name></expr></argument>)<pos:position pos:line="47" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="31"/></expr_stmt></block></then>  <comment type="block" pos:line="47" pos:column="33">/* will set pd-&gt;flags.requested */</comment>
    <else pos:line="48" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="9">peerDigestSetCheck<pos:position pos:line="49" pos:column="27"/></name><argument_list pos:line="49" pos:column="27">(<argument><expr><name pos:line="49" pos:column="28">pd<pos:position pos:line="49" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="32">req_time<pos:position pos:line="49" pos:column="40"/></name> <operator pos:line="49" pos:column="41">-<pos:position pos:line="49" pos:column="42"/></operator> <name pos:line="49" pos:column="43">squid_curtime<pos:position pos:line="49" pos:column="56"/></name></expr></argument>)<pos:position pos:line="49" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="58"/></expr_stmt></block></else></if>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

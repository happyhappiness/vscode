<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6734_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemPools<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">clean<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">time_t<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">maxage<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">flushMeters<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">()<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="19"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">mem_idle_limit<pos:position pos:line="5" pos:column="23"/></name> <operator pos:line="5" pos:column="24">&lt;<pos:position pos:line="5" pos:column="28"/></operator> <literal type="number" pos:line="5" pos:column="26">0<pos:position pos:line="5" pos:column="27"/></literal></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28"> <comment type="line" pos:line="5" pos:column="29">// no limit to enforce</comment>
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">shift<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><literal type="number" pos:line="8" pos:column="17">1<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">TheMeter<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">.<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="18">idle<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">.<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">level<pos:position pos:line="9" pos:column="28"/></name></name> <operator pos:line="9" pos:column="29">&gt;<pos:position pos:line="9" pos:column="33"/></operator> <name pos:line="9" pos:column="31">mem_idle_limit<pos:position pos:line="9" pos:column="45"/></name></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">maxage<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">shift<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <literal type="number" pos:line="10" pos:column="26">0<pos:position pos:line="10" pos:column="27"/></literal></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">MemImplementingAllocator<pos:position pos:line="12" pos:column="29"/></name> <modifier pos:line="12" pos:column="30">*<pos:position pos:line="12" pos:column="31"/></modifier></type><name pos:line="12" pos:column="31">pool<pos:position pos:line="12" pos:column="35"/></name></decl>;<pos:position pos:line="12" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">MemPoolIterator<pos:position pos:line="13" pos:column="20"/></name> <modifier pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></modifier></type><name pos:line="13" pos:column="22">iter<pos:position pos:line="13" pos:column="26"/></name></decl>;<pos:position pos:line="13" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">iter<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">memPoolIterate<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">()<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
    <while pos:line="15" pos:column="5">while <condition pos:line="15" pos:column="11">(<expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">pool<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <call><name pos:line="15" pos:column="20">memPoolIterateNext<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><name pos:line="15" pos:column="39">iter<pos:position pos:line="15" pos:column="43"/></name></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call><operator pos:line="15" pos:column="44">)<pos:position pos:line="15" pos:column="45"/></operator></expr>)<pos:position pos:line="15" pos:column="46"/></condition>
        <block type="pseudo"><if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><call><name><name pos:line="16" pos:column="13">pool<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">idleTrigger<pos:position pos:line="16" pos:column="30"/></name></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">shift<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="38"/></condition><then pos:line="16" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="17" pos:column="13">pool<pos:position pos:line="17" pos:column="17"/></name><operator pos:line="17" pos:column="17">-&gt;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="19">clean<pos:position pos:line="17" pos:column="24"/></name></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">maxage<pos:position pos:line="17" pos:column="31"/></name></expr></argument>)<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt></block></then></if></block></while>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">memPoolIterateDone<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><operator pos:line="18" pos:column="24">&amp;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="25">iter<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

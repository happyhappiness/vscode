<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4465_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">get_memberof<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name><name pos:line="2" pos:column="14">struct<pos:position pos:line="2" pos:column="20"/></name> <name pos:line="2" pos:column="21">main_args<pos:position pos:line="2" pos:column="30"/></name></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">margs<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">user<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">domain<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">char<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">group<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">LDAP<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">ld<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">LDAPMessage<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">res<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><operator pos:line="6" pos:column="5">!<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">HAVE_SUN_LDAP_SDK<pos:position pos:line="6" pos:column="23"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">ldap_debug<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">ldap_creds<pos:position pos:line="9" pos:column="22"/></name></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">lcreds<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><name pos:line="9" pos:column="33">NULL<pos:position pos:line="9" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">bindp<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><name pos:line="10" pos:column="19">NULL<pos:position pos:line="10" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">filter<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><name pos:line="11" pos:column="20">NULL<pos:position pos:line="11" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">search_exp<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">size_t<pos:position pos:line="13" pos:column="11"/></name></type> <name pos:line="13" pos:column="12">se_len<pos:position pos:line="13" pos:column="18"/></name> <init pos:line="13" pos:column="19">= <expr><literal type="number" pos:line="13" pos:column="21">0<pos:position pos:line="13" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">struct<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">timeval<pos:position pos:line="14" pos:column="19"/></name></name></type> <name pos:line="14" pos:column="20">searchtime<pos:position pos:line="14" pos:column="30"/></name></decl>;<pos:position pos:line="14" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">rc<pos:position pos:line="15" pos:column="11"/></name> <init pos:line="15" pos:column="12">= <expr><literal type="number" pos:line="15" pos:column="14">0<pos:position pos:line="15" pos:column="15"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="15" pos:column="17">kc<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><literal type="number" pos:line="15" pos:column="22">1<pos:position pos:line="15" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">retval<pos:position pos:line="16" pos:column="15"/></name></decl>;<pos:position pos:line="16" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier><modifier pos:line="17" pos:column="11">*<pos:position pos:line="17" pos:column="12"/></modifier></type><name pos:line="17" pos:column="12">attr_value<pos:position pos:line="17" pos:column="22"/></name> <init pos:line="17" pos:column="23">= <expr><name pos:line="17" pos:column="25">NULL<pos:position pos:line="17" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">size_t<pos:position pos:line="18" pos:column="11"/></name></type> <name pos:line="18" pos:column="12">max_attr<pos:position pos:line="18" pos:column="20"/></name> <init pos:line="18" pos:column="21">= <expr><literal type="number" pos:line="18" pos:column="23">0<pos:position pos:line="18" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="19" pos:column="5">struct<pos:position pos:line="19" pos:column="11"/></name> <name pos:line="19" pos:column="12">hstruct<pos:position pos:line="19" pos:column="19"/></name></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">hlist<pos:position pos:line="19" pos:column="26"/></name> <init pos:line="19" pos:column="27">= <expr><name pos:line="19" pos:column="29">NULL<pos:position pos:line="19" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">size_t<pos:position pos:line="20" pos:column="11"/></name></type> <name pos:line="20" pos:column="12">nhosts<pos:position pos:line="20" pos:column="18"/></name> <init pos:line="20" pos:column="19">= <expr><literal type="number" pos:line="20" pos:column="21">0<pos:position pos:line="20" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier></type><name pos:line="21" pos:column="11">ldap_filter_esc<pos:position pos:line="21" pos:column="26"/></name> <init pos:line="21" pos:column="27">= <expr><name pos:line="21" pos:column="29">NULL<pos:position pos:line="21" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">searchtime<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">tv_sec<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">SEARCH_TIMEOUT<pos:position pos:line="23" pos:column="39"/></name></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">searchtime<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">.<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">tv_usec<pos:position pos:line="24" pos:column="23"/></name></name> <operator pos:line="24" pos:column="24">=<pos:position pos:line="24" pos:column="25"/></operator> <literal type="number" pos:line="24" pos:column="26">0<pos:position pos:line="24" pos:column="27"/></literal></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
    <comment type="block" pos:line="25" pos:column="5">/*
     * Fill Kerberos memory cache with credential from keytab for SASL/GSSAPI
     */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">domain<pos:position pos:line="28" pos:column="15"/></name></expr>)<pos:position pos:line="28" pos:column="16"/></condition><then pos:line="28" pos:column="16"> <block pos:line="28" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">debug<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><operator pos:line="29" pos:column="15">(<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">char<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">*<pos:position pos:line="29" pos:column="22"/></operator><operator pos:line="29" pos:column="22">)<pos:position pos:line="29" pos:column="23"/></operator> <literal type="string" pos:line="29" pos:column="24">"%s| %s: DEBUG: Setup Kerberos credential cache\n"<pos:position pos:line="29" pos:column="74"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="30" pos:column="15">LogTime<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">()<pos:position pos:line="30" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="30" pos:column="26">PROGRAM<pos:position pos:line="30" pos:column="33"/></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>

<cpp:if pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">if<pos:position pos:line="32" pos:column="4"/></cpp:directive> <expr><name pos:line="32" pos:column="5">HAVE_KRB5<pos:position pos:line="32" pos:column="14"/></name></expr></cpp:if>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">margs<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">-&gt;<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="20">nokerberos<pos:position pos:line="33" pos:column="30"/></name></name></expr>)<pos:position pos:line="33" pos:column="31"/></condition><then pos:line="33" pos:column="31"> <block pos:line="33" pos:column="32">{
            <expr_stmt><expr><name pos:line="34" pos:column="13">kc<pos:position pos:line="34" pos:column="15"/></name> <operator pos:line="34" pos:column="16">=<pos:position pos:line="34" pos:column="17"/></operator> <literal type="number" pos:line="34" pos:column="18">1<pos:position pos:line="34" pos:column="19"/></literal></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">debug<pos:position pos:line="35" pos:column="18"/></name><argument_list pos:line="35" pos:column="18">(<argument><expr><operator pos:line="35" pos:column="19">(<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="20">char<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">*<pos:position pos:line="35" pos:column="26"/></operator><operator pos:line="35" pos:column="26">)<pos:position pos:line="35" pos:column="27"/></operator>
                  <literal type="string" pos:line="36" pos:column="19">"%s| %s: DEBUG: Kerberos is disabled. Use username/password with ldap url instead\n"<pos:position pos:line="36" pos:column="103"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="37" pos:column="19">LogTime<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">()<pos:position pos:line="37" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="37" pos:column="30">PROGRAM<pos:position pos:line="37" pos:column="37"/></name></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then> <else pos:line="38" pos:column="11">else <block pos:line="38" pos:column="16">{
            <expr_stmt><expr><name pos:line="39" pos:column="13">kc<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">krb5_create_cache<pos:position pos:line="39" pos:column="35"/></name><argument_list pos:line="39" pos:column="35">(<argument><expr><name pos:line="39" pos:column="36">domain<pos:position pos:line="39" pos:column="42"/></name></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><name pos:line="40" pos:column="17">kc<pos:position pos:line="40" pos:column="19"/></name></expr>)<pos:position pos:line="40" pos:column="20"/></condition><then pos:line="40" pos:column="20"> <block pos:line="40" pos:column="21">{
                <expr_stmt><expr><call><name pos:line="41" pos:column="17">error<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><operator pos:line="41" pos:column="23">(<pos:position pos:line="41" pos:column="24"/></operator><name pos:line="41" pos:column="24">char<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">*<pos:position pos:line="41" pos:column="30"/></operator><operator pos:line="41" pos:column="30">)<pos:position pos:line="41" pos:column="31"/></operator>
                      <literal type="string" pos:line="42" pos:column="23">"%s| %s: ERROR: Error during setup of Kerberos credential cache\n"<pos:position pos:line="42" pos:column="89"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="43" pos:column="23">LogTime<pos:position pos:line="43" pos:column="30"/></name><argument_list pos:line="43" pos:column="30">()<pos:position pos:line="43" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="43" pos:column="34">PROGRAM<pos:position pos:line="43" pos:column="41"/></name></expr></argument>)<pos:position pos:line="43" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="44" pos:column="14"/></block></then></if>
        }<pos:position pos:line="45" pos:column="10"/></block></else></if>
<cpp:else pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">else<pos:position pos:line="46" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="47" pos:column="9">kc<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">=<pos:position pos:line="47" pos:column="13"/></operator> <literal type="number" pos:line="47" pos:column="14">1<pos:position pos:line="47" pos:column="15"/></literal></expr>;<pos:position pos:line="47" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">debug<pos:position pos:line="48" pos:column="14"/></name><argument_list pos:line="48" pos:column="14">(<argument><expr><operator pos:line="48" pos:column="15">(<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="16">char<pos:position pos:line="48" pos:column="20"/></name> <operator pos:line="48" pos:column="21">*<pos:position pos:line="48" pos:column="22"/></operator><operator pos:line="48" pos:column="22">)<pos:position pos:line="48" pos:column="23"/></operator>
              <literal type="string" pos:line="49" pos:column="15">"%s| %s: DEBUG: Kerberos is not supported. Use username/password with ldap url instead\n"<pos:position pos:line="49" pos:column="104"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="50" pos:column="15">LogTime<pos:position pos:line="50" pos:column="22"/></name><argument_list pos:line="50" pos:column="22">()<pos:position pos:line="50" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="50" pos:column="26">PROGRAM<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
<cpp:endif pos:line="51" pos:column="1">#<cpp:directive pos:line="51" pos:column="2">endif<pos:position pos:line="51" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><name pos:line="54" pos:column="9">kc<pos:position pos:line="54" pos:column="11"/></name> <operator pos:line="54" pos:column="12">&amp;&amp;<pos:position pos:line="54" pos:column="22"/></operator> <operator pos:line="54" pos:column="15">(<pos:position pos:line="54" pos:column="16"/></operator><operator pos:line="54" pos:column="16">!<pos:position pos:line="54" pos:column="17"/></operator><name><name pos:line="54" pos:column="17">margs<pos:position pos:line="54" pos:column="22"/></name><operator pos:line="54" pos:column="22">-&gt;<pos:position pos:line="54" pos:column="27"/></operator><name pos:line="54" pos:column="24">lurl<pos:position pos:line="54" pos:column="28"/></name></name> <operator pos:line="54" pos:column="29">||<pos:position pos:line="54" pos:column="31"/></operator> <operator pos:line="54" pos:column="32">!<pos:position pos:line="54" pos:column="33"/></operator><name><name pos:line="54" pos:column="33">margs<pos:position pos:line="54" pos:column="38"/></name><operator pos:line="54" pos:column="38">-&gt;<pos:position pos:line="54" pos:column="43"/></operator><name pos:line="54" pos:column="40">luser<pos:position pos:line="54" pos:column="45"/></name></name> <operator pos:line="54" pos:column="46">||<pos:position pos:line="54" pos:column="48"/></operator> <operator pos:line="54" pos:column="49">!<pos:position pos:line="54" pos:column="50"/></operator><name><name pos:line="54" pos:column="50">margs<pos:position pos:line="54" pos:column="55"/></name><operator pos:line="54" pos:column="55">-&gt;<pos:position pos:line="54" pos:column="60"/></operator><name pos:line="54" pos:column="57">lpass<pos:position pos:line="54" pos:column="62"/></name></name><operator pos:line="54" pos:column="62">)<pos:position pos:line="54" pos:column="63"/></operator></expr>)<pos:position pos:line="54" pos:column="64"/></condition><then pos:line="54" pos:column="64"> <block pos:line="54" pos:column="65">{
        <comment type="block" pos:line="55" pos:column="9">/*
         * If Kerberos fails and no url given exit here
         */</comment>
        <expr_stmt><expr><name pos:line="58" pos:column="9">retval<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <literal type="number" pos:line="58" pos:column="18">0<pos:position pos:line="58" pos:column="19"/></literal></expr>;<pos:position pos:line="58" pos:column="20"/></expr_stmt>
        <goto pos:line="59" pos:column="9">goto <name pos:line="59" pos:column="14">cleanup<pos:position pos:line="59" pos:column="21"/></name>;<pos:position pos:line="59" pos:column="22"/></goto>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>
<cpp:if pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">if<pos:position pos:line="61" pos:column="4"/></cpp:directive> <expr><operator pos:line="61" pos:column="5">!<pos:position pos:line="61" pos:column="6"/></operator><name pos:line="61" pos:column="6">HAVE_SUN_LDAP_SDK<pos:position pos:line="61" pos:column="23"/></name></expr></cpp:if>
    <comment type="block" pos:line="62" pos:column="5">/*
     * Initialise ldap
     */</comment>
<comment type="line" pos:line="65" pos:column="1">//    ldap_debug = 127 /* LDAP_DEBUG_TRACE */ ;</comment>
<comment type="line" pos:line="66" pos:column="1">//    ldap_debug = -1 /* LDAP_DEBUG_ANY */ ;</comment>
    <expr_stmt><expr><name pos:line="67" pos:column="5">ldap_debug<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <literal type="number" pos:line="67" pos:column="18">0<pos:position pos:line="67" pos:column="19"/></literal></expr>;<pos:position pos:line="67" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="68" pos:column="5">(<pos:position pos:line="68" pos:column="6"/></operator><name pos:line="68" pos:column="6">void<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">)<pos:position pos:line="68" pos:column="11"/></operator> <call><name pos:line="68" pos:column="12">ldap_set_option<pos:position pos:line="68" pos:column="27"/></name><argument_list pos:line="68" pos:column="27">(<argument><expr><name pos:line="68" pos:column="28">NULL<pos:position pos:line="68" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="34">LDAP_OPT_DEBUG_LEVEL<pos:position pos:line="68" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="68" pos:column="56">&amp;<pos:position pos:line="68" pos:column="61"/></operator><name pos:line="68" pos:column="57">ldap_debug<pos:position pos:line="68" pos:column="67"/></name></expr></argument>)<pos:position pos:line="68" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="69"/></expr_stmt>
<cpp:endif pos:line="69" pos:column="1">#<cpp:directive pos:line="69" pos:column="2">endif<pos:position pos:line="69" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="70" pos:column="5">debug<pos:position pos:line="70" pos:column="10"/></name><argument_list pos:line="70" pos:column="10">(<argument><expr><operator pos:line="70" pos:column="11">(<pos:position pos:line="70" pos:column="12"/></operator><name pos:line="70" pos:column="12">char<pos:position pos:line="70" pos:column="16"/></name> <operator pos:line="70" pos:column="17">*<pos:position pos:line="70" pos:column="18"/></operator><operator pos:line="70" pos:column="18">)<pos:position pos:line="70" pos:column="19"/></operator> <literal type="string" pos:line="70" pos:column="20">"%s| %s: DEBUG: Initialise ldap connection\n"<pos:position pos:line="70" pos:column="65"/></literal></expr></argument>, <argument><expr><call><name pos:line="70" pos:column="67">LogTime<pos:position pos:line="70" pos:column="74"/></name><argument_list pos:line="70" pos:column="74">()<pos:position pos:line="70" pos:column="76"/></argument_list></call></expr></argument>,
          <argument><expr><name pos:line="71" pos:column="11">PROGRAM<pos:position pos:line="71" pos:column="18"/></name></expr></argument>)<pos:position pos:line="71" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="20"/></expr_stmt>

    <if pos:line="73" pos:column="5">if <condition pos:line="73" pos:column="8">(<expr><name pos:line="73" pos:column="9">domain<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">&amp;&amp;<pos:position pos:line="73" pos:column="26"/></operator> <operator pos:line="73" pos:column="19">!<pos:position pos:line="73" pos:column="20"/></operator><name pos:line="73" pos:column="20">kc<pos:position pos:line="73" pos:column="22"/></name></expr>)<pos:position pos:line="73" pos:column="23"/></condition><then pos:line="73" pos:column="23"> <block pos:line="73" pos:column="24">{
        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><name><name pos:line="74" pos:column="13">margs<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">-&gt;<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="20">ssl<pos:position pos:line="74" pos:column="23"/></name></name></expr>)<pos:position pos:line="74" pos:column="24"/></condition><then pos:line="74" pos:column="24"> <block pos:line="74" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">debug<pos:position pos:line="75" pos:column="18"/></name><argument_list pos:line="75" pos:column="18">(<argument><expr><operator pos:line="75" pos:column="19">(<pos:position pos:line="75" pos:column="20"/></operator><name pos:line="75" pos:column="20">char<pos:position pos:line="75" pos:column="24"/></name> <operator pos:line="75" pos:column="25">*<pos:position pos:line="75" pos:column="26"/></operator><operator pos:line="75" pos:column="26">)<pos:position pos:line="75" pos:column="27"/></operator> <literal type="string" pos:line="75" pos:column="28">"%s| %s: DEBUG: Enable SSL to ldap servers\n"<pos:position pos:line="75" pos:column="73"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="76" pos:column="19">LogTime<pos:position pos:line="76" pos:column="26"/></name><argument_list pos:line="76" pos:column="26">()<pos:position pos:line="76" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="76" pos:column="30">PROGRAM<pos:position pos:line="76" pos:column="37"/></name></expr></argument>)<pos:position pos:line="76" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">debug<pos:position pos:line="78" pos:column="14"/></name><argument_list pos:line="78" pos:column="14">(<argument><expr><operator pos:line="78" pos:column="15">(<pos:position pos:line="78" pos:column="16"/></operator><name pos:line="78" pos:column="16">char<pos:position pos:line="78" pos:column="20"/></name> <operator pos:line="78" pos:column="21">*<pos:position pos:line="78" pos:column="22"/></operator><operator pos:line="78" pos:column="22">)<pos:position pos:line="78" pos:column="23"/></operator>
              <literal type="string" pos:line="79" pos:column="15">"%s| %s: DEBUG: Canonicalise ldap server name for domain %s\n"<pos:position pos:line="79" pos:column="77"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="80" pos:column="15">LogTime<pos:position pos:line="80" pos:column="22"/></name><argument_list pos:line="80" pos:column="22">()<pos:position pos:line="80" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="80" pos:column="26">PROGRAM<pos:position pos:line="80" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="35">domain<pos:position pos:line="80" pos:column="41"/></name></expr></argument>)<pos:position pos:line="80" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="43"/></expr_stmt>
        <comment type="block" pos:line="81" pos:column="9">/*
         * Loop over list of ldap servers of users domain
         */</comment>
        <expr_stmt><expr><name pos:line="84" pos:column="9">nhosts<pos:position pos:line="84" pos:column="15"/></name> <operator pos:line="84" pos:column="16">=<pos:position pos:line="84" pos:column="17"/></operator> <call><name pos:line="84" pos:column="18">get_ldap_hostname_list<pos:position pos:line="84" pos:column="40"/></name><argument_list pos:line="84" pos:column="40">(<argument><expr><name pos:line="84" pos:column="41">margs<pos:position pos:line="84" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="84" pos:column="48">&amp;<pos:position pos:line="84" pos:column="53"/></operator><name pos:line="84" pos:column="49">hlist<pos:position pos:line="84" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="84" pos:column="56">0<pos:position pos:line="84" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="84" pos:column="59">domain<pos:position pos:line="84" pos:column="65"/></name></expr></argument>)<pos:position pos:line="84" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="67"/></expr_stmt>
        <for pos:line="85" pos:column="9">for <control pos:line="85" pos:column="13">(<init><decl><type><name pos:line="85" pos:column="14">size_t<pos:position pos:line="85" pos:column="20"/></name></type> <name pos:line="85" pos:column="21">i<pos:position pos:line="85" pos:column="22"/></name> <init pos:line="85" pos:column="23">= <expr><literal type="number" pos:line="85" pos:column="25">0<pos:position pos:line="85" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="85" pos:column="27"/></init> <condition><expr><name pos:line="85" pos:column="28">i<pos:position pos:line="85" pos:column="29"/></name> <operator pos:line="85" pos:column="30">&lt;<pos:position pos:line="85" pos:column="34"/></operator> <name pos:line="85" pos:column="32">nhosts<pos:position pos:line="85" pos:column="38"/></name></expr>;<pos:position pos:line="85" pos:column="39"/></condition> <incr><expr><operator pos:line="85" pos:column="40">++<pos:position pos:line="85" pos:column="42"/></operator><name pos:line="85" pos:column="42">i<pos:position pos:line="85" pos:column="43"/></name></expr></incr>)<pos:position pos:line="85" pos:column="44"/></control> <block pos:line="85" pos:column="45">{
            <decl_stmt><decl><type><name pos:line="86" pos:column="13">int<pos:position pos:line="86" pos:column="16"/></name></type> <name pos:line="86" pos:column="17">port<pos:position pos:line="86" pos:column="21"/></name> <init pos:line="86" pos:column="22">= <expr><literal type="number" pos:line="86" pos:column="24">389<pos:position pos:line="86" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="86" pos:column="28"/></decl_stmt>
            <if pos:line="87" pos:column="13">if <condition pos:line="87" pos:column="16">(<expr><name><name pos:line="87" pos:column="17">hlist<pos:position pos:line="87" pos:column="22"/></name><index pos:line="87" pos:column="22">[<expr><name pos:line="87" pos:column="23">i<pos:position pos:line="87" pos:column="24"/></name></expr>]<pos:position pos:line="87" pos:column="25"/></index></name><operator pos:line="87" pos:column="25">.<pos:position pos:line="87" pos:column="26"/></operator><name pos:line="87" pos:column="26">port<pos:position pos:line="87" pos:column="30"/></name> <operator pos:line="87" pos:column="31">!=<pos:position pos:line="87" pos:column="33"/></operator> <operator pos:line="87" pos:column="34">-<pos:position pos:line="87" pos:column="35"/></operator><literal type="number" pos:line="87" pos:column="35">1<pos:position pos:line="87" pos:column="36"/></literal></expr>)<pos:position pos:line="87" pos:column="37"/></condition><then pos:line="87" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="17">port<pos:position pos:line="88" pos:column="21"/></name> <operator pos:line="88" pos:column="22">=<pos:position pos:line="88" pos:column="23"/></operator> <name><name pos:line="88" pos:column="24">hlist<pos:position pos:line="88" pos:column="29"/></name><index pos:line="88" pos:column="29">[<expr><name pos:line="88" pos:column="30">i<pos:position pos:line="88" pos:column="31"/></name></expr>]<pos:position pos:line="88" pos:column="32"/></index></name><operator pos:line="88" pos:column="32">.<pos:position pos:line="88" pos:column="33"/></operator><name pos:line="88" pos:column="33">port<pos:position pos:line="88" pos:column="37"/></name></expr>;<pos:position pos:line="88" pos:column="38"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">debug<pos:position pos:line="89" pos:column="18"/></name><argument_list pos:line="89" pos:column="18">(<argument><expr><operator pos:line="89" pos:column="19">(<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="20">char<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">*<pos:position pos:line="89" pos:column="26"/></operator><operator pos:line="89" pos:column="26">)<pos:position pos:line="89" pos:column="27"/></operator>
                  <literal type="string" pos:line="90" pos:column="19">"%s| %s: DEBUG: Setting up connection to ldap server %s:%d\n"<pos:position pos:line="90" pos:column="80"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="91" pos:column="19">LogTime<pos:position pos:line="91" pos:column="26"/></name><argument_list pos:line="91" pos:column="26">()<pos:position pos:line="91" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="91" pos:column="30">PROGRAM<pos:position pos:line="91" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="39">hlist<pos:position pos:line="91" pos:column="44"/></name><index pos:line="91" pos:column="44">[<expr><name pos:line="91" pos:column="45">i<pos:position pos:line="91" pos:column="46"/></name></expr>]<pos:position pos:line="91" pos:column="47"/></index></name><operator pos:line="91" pos:column="47">.<pos:position pos:line="91" pos:column="48"/></operator><name pos:line="91" pos:column="48">host<pos:position pos:line="91" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="54">port<pos:position pos:line="91" pos:column="58"/></name></expr></argument>)<pos:position pos:line="91" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="60"/></expr_stmt>

            <expr_stmt><expr><name pos:line="93" pos:column="13">ld<pos:position pos:line="93" pos:column="15"/></name> <operator pos:line="93" pos:column="16">=<pos:position pos:line="93" pos:column="17"/></operator> <call><name pos:line="93" pos:column="18">tool_ldap_open<pos:position pos:line="93" pos:column="32"/></name><argument_list pos:line="93" pos:column="32">(<argument><expr><name pos:line="93" pos:column="33">margs<pos:position pos:line="93" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="40">hlist<pos:position pos:line="93" pos:column="45"/></name><index pos:line="93" pos:column="45">[<expr><name pos:line="93" pos:column="46">i<pos:position pos:line="93" pos:column="47"/></name></expr>]<pos:position pos:line="93" pos:column="48"/></index></name><operator pos:line="93" pos:column="48">.<pos:position pos:line="93" pos:column="49"/></operator><name pos:line="93" pos:column="49">host<pos:position pos:line="93" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="55">port<pos:position pos:line="93" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="61">margs<pos:position pos:line="93" pos:column="66"/></name><operator pos:line="93" pos:column="66">-&gt;<pos:position pos:line="93" pos:column="71"/></operator><name pos:line="93" pos:column="68">ssl<pos:position pos:line="93" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="73"/></expr_stmt>
            <if pos:line="94" pos:column="13">if <condition pos:line="94" pos:column="16">(<expr><operator pos:line="94" pos:column="17">!<pos:position pos:line="94" pos:column="18"/></operator><name pos:line="94" pos:column="18">ld<pos:position pos:line="94" pos:column="20"/></name></expr>)<pos:position pos:line="94" pos:column="21"/></condition><then pos:line="94" pos:column="21">
                <block type="pseudo"><continue pos:line="95" pos:column="17">continue;<pos:position pos:line="95" pos:column="26"/></continue></block></then></if>

            <comment type="block" pos:line="97" pos:column="13">/*
             * ldap bind with SASL/GSSAPI authentication (only possible if a domain was part of the username)
             */</comment>

<cpp:if pos:line="101" pos:column="1">#<cpp:directive pos:line="101" pos:column="2">if<pos:position pos:line="101" pos:column="4"/></cpp:directive> <expr><name pos:line="101" pos:column="5">HAVE_SASL_H<pos:position pos:line="101" pos:column="16"/></name> <operator pos:line="101" pos:column="17">||<pos:position pos:line="101" pos:column="19"/></operator> <name pos:line="101" pos:column="20">HAVE_SASL_SASL_H<pos:position pos:line="101" pos:column="36"/></name> <operator pos:line="101" pos:column="37">||<pos:position pos:line="101" pos:column="39"/></operator> <name pos:line="101" pos:column="40">HAVE_SASL_DARWIN<pos:position pos:line="101" pos:column="56"/></name></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="102" pos:column="13">debug<pos:position pos:line="102" pos:column="18"/></name><argument_list pos:line="102" pos:column="18">(<argument><expr><operator pos:line="102" pos:column="19">(<pos:position pos:line="102" pos:column="20"/></operator><name pos:line="102" pos:column="20">char<pos:position pos:line="102" pos:column="24"/></name> <operator pos:line="102" pos:column="25">*<pos:position pos:line="102" pos:column="26"/></operator><operator pos:line="102" pos:column="26">)<pos:position pos:line="102" pos:column="27"/></operator>
                  <literal type="string" pos:line="103" pos:column="19">"%s| %s: DEBUG: Bind to ldap server with SASL/GSSAPI\n"<pos:position pos:line="103" pos:column="74"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="104" pos:column="19">LogTime<pos:position pos:line="104" pos:column="26"/></name><argument_list pos:line="104" pos:column="26">()<pos:position pos:line="104" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="104" pos:column="30">PROGRAM<pos:position pos:line="104" pos:column="37"/></name></expr></argument>)<pos:position pos:line="104" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="39"/></expr_stmt>

            <expr_stmt><expr><name pos:line="106" pos:column="13">rc<pos:position pos:line="106" pos:column="15"/></name> <operator pos:line="106" pos:column="16">=<pos:position pos:line="106" pos:column="17"/></operator> <call><name pos:line="106" pos:column="18">tool_sasl_bind<pos:position pos:line="106" pos:column="32"/></name><argument_list pos:line="106" pos:column="32">(<argument><expr><name pos:line="106" pos:column="33">ld<pos:position pos:line="106" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="37">bindp<pos:position pos:line="106" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="106" pos:column="44">margs<pos:position pos:line="106" pos:column="49"/></name><operator pos:line="106" pos:column="49">-&gt;<pos:position pos:line="106" pos:column="54"/></operator><name pos:line="106" pos:column="51">ssl<pos:position pos:line="106" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="56"/></expr_stmt>
            <if pos:line="107" pos:column="13">if <condition pos:line="107" pos:column="16">(<expr><name pos:line="107" pos:column="17">rc<pos:position pos:line="107" pos:column="19"/></name> <operator pos:line="107" pos:column="20">!=<pos:position pos:line="107" pos:column="22"/></operator> <name pos:line="107" pos:column="23">LDAP_SUCCESS<pos:position pos:line="107" pos:column="35"/></name></expr>)<pos:position pos:line="107" pos:column="36"/></condition><then pos:line="107" pos:column="36"> <block pos:line="107" pos:column="37">{
                <expr_stmt><expr><call><name pos:line="108" pos:column="17">error<pos:position pos:line="108" pos:column="22"/></name><argument_list pos:line="108" pos:column="22">(<argument><expr><operator pos:line="108" pos:column="23">(<pos:position pos:line="108" pos:column="24"/></operator><name pos:line="108" pos:column="24">char<pos:position pos:line="108" pos:column="28"/></name> <operator pos:line="108" pos:column="29">*<pos:position pos:line="108" pos:column="30"/></operator><operator pos:line="108" pos:column="30">)<pos:position pos:line="108" pos:column="31"/></operator>
                      <literal type="string" pos:line="109" pos:column="23">"%s| %s: ERROR: Error while binding to ldap server with SASL/GSSAPI: %s\n"<pos:position pos:line="109" pos:column="97"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="110" pos:column="23">LogTime<pos:position pos:line="110" pos:column="30"/></name><argument_list pos:line="110" pos:column="30">()<pos:position pos:line="110" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="110" pos:column="34">PROGRAM<pos:position pos:line="110" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="110" pos:column="43">ldap_err2string<pos:position pos:line="110" pos:column="58"/></name><argument_list pos:line="110" pos:column="58">(<argument><expr><name pos:line="110" pos:column="59">rc<pos:position pos:line="110" pos:column="61"/></name></expr></argument>)<pos:position pos:line="110" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="110" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="111" pos:column="17">ldap_unbind_ext<pos:position pos:line="111" pos:column="32"/></name><argument_list pos:line="111" pos:column="32">(<argument><expr><name pos:line="111" pos:column="33">ld<pos:position pos:line="111" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="37">NULL<pos:position pos:line="111" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="43">NULL<pos:position pos:line="111" pos:column="47"/></name></expr></argument>)<pos:position pos:line="111" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><name pos:line="112" pos:column="17">ld<pos:position pos:line="112" pos:column="19"/></name> <operator pos:line="112" pos:column="20">=<pos:position pos:line="112" pos:column="21"/></operator> <name pos:line="112" pos:column="22">NULL<pos:position pos:line="112" pos:column="26"/></name></expr>;<pos:position pos:line="112" pos:column="27"/></expr_stmt>
                <continue pos:line="113" pos:column="17">continue;<pos:position pos:line="113" pos:column="26"/></continue>
            }<pos:position pos:line="114" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="115" pos:column="13">lcreds<pos:position pos:line="115" pos:column="19"/></name> <operator pos:line="115" pos:column="20">=<pos:position pos:line="115" pos:column="21"/></operator> <operator pos:line="115" pos:column="22">(<pos:position pos:line="115" pos:column="23"/></operator>struct <name pos:line="115" pos:column="30">ldap_creds<pos:position pos:line="115" pos:column="40"/></name> <operator pos:line="115" pos:column="41">*<pos:position pos:line="115" pos:column="42"/></operator><operator pos:line="115" pos:column="42">)<pos:position pos:line="115" pos:column="43"/></operator> <call><name pos:line="115" pos:column="44">xmalloc<pos:position pos:line="115" pos:column="51"/></name><argument_list pos:line="115" pos:column="51">(<argument><expr><sizeof pos:line="115" pos:column="52">sizeof<argument_list pos:line="115" pos:column="58">(<argument><expr pos:line="115" pos:column="59">struct <name pos:line="115" pos:column="66">ldap_creds<pos:position pos:line="115" pos:column="76"/></name></expr></argument>)<pos:position pos:line="115" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="115" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="116" pos:column="13">lcreds<pos:position pos:line="116" pos:column="19"/></name><operator pos:line="116" pos:column="19">-&gt;<pos:position pos:line="116" pos:column="24"/></operator><name pos:line="116" pos:column="21">dn<pos:position pos:line="116" pos:column="23"/></name></name> <operator pos:line="116" pos:column="24">=<pos:position pos:line="116" pos:column="25"/></operator> <name pos:line="116" pos:column="26">NULL<pos:position pos:line="116" pos:column="30"/></name></expr>;<pos:position pos:line="116" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="117" pos:column="13">lcreds<pos:position pos:line="117" pos:column="19"/></name><operator pos:line="117" pos:column="19">-&gt;<pos:position pos:line="117" pos:column="24"/></operator><name pos:line="117" pos:column="21">pw<pos:position pos:line="117" pos:column="23"/></name></name> <operator pos:line="117" pos:column="24">=<pos:position pos:line="117" pos:column="25"/></operator> <ternary><condition><expr><name><name pos:line="117" pos:column="26">margs<pos:position pos:line="117" pos:column="31"/></name><operator pos:line="117" pos:column="31">-&gt;<pos:position pos:line="117" pos:column="36"/></operator><name pos:line="117" pos:column="33">ssl<pos:position pos:line="117" pos:column="36"/></name></name></expr> ?<pos:position pos:line="117" pos:column="38"/></condition><then pos:line="117" pos:column="38"> <expr><call><name pos:line="117" pos:column="39">xstrdup<pos:position pos:line="117" pos:column="46"/></name><argument_list pos:line="117" pos:column="46">(<argument><expr><name><name pos:line="117" pos:column="47">margs<pos:position pos:line="117" pos:column="52"/></name><operator pos:line="117" pos:column="52">-&gt;<pos:position pos:line="117" pos:column="57"/></operator><name pos:line="117" pos:column="54">ssl<pos:position pos:line="117" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="58"/></argument_list></call></expr> <pos:position pos:line="117" pos:column="59"/></then><else pos:line="117" pos:column="59">: <expr><name pos:line="117" pos:column="61">NULL<pos:position pos:line="117" pos:column="65"/></name></expr></else></ternary></expr>;<pos:position pos:line="117" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="118" pos:column="13">ldap_set_rebind_proc<pos:position pos:line="118" pos:column="33"/></name><argument_list pos:line="118" pos:column="33">(<argument><expr><name pos:line="118" pos:column="34">ld<pos:position pos:line="118" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="38">ldap_sasl_rebind<pos:position pos:line="118" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="56">(<pos:position pos:line="118" pos:column="57"/></operator><name pos:line="118" pos:column="57">char<pos:position pos:line="118" pos:column="61"/></name> <operator pos:line="118" pos:column="62">*<pos:position pos:line="118" pos:column="63"/></operator><operator pos:line="118" pos:column="63">)<pos:position pos:line="118" pos:column="64"/></operator> <name pos:line="118" pos:column="65">lcreds<pos:position pos:line="118" pos:column="71"/></name></expr></argument>)<pos:position pos:line="118" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="73"/></expr_stmt>
            <if pos:line="119" pos:column="13">if <condition pos:line="119" pos:column="16">(<expr><name pos:line="119" pos:column="17">ld<pos:position pos:line="119" pos:column="19"/></name> <operator pos:line="119" pos:column="20">!=<pos:position pos:line="119" pos:column="22"/></operator> <name pos:line="119" pos:column="23">NULL<pos:position pos:line="119" pos:column="27"/></name></expr>)<pos:position pos:line="119" pos:column="28"/></condition><then pos:line="119" pos:column="28"> <block pos:line="119" pos:column="29">{
                <expr_stmt><expr><call><name pos:line="120" pos:column="17">debug<pos:position pos:line="120" pos:column="22"/></name><argument_list pos:line="120" pos:column="22">(<argument><expr><operator pos:line="120" pos:column="23">(<pos:position pos:line="120" pos:column="24"/></operator><name pos:line="120" pos:column="24">char<pos:position pos:line="120" pos:column="28"/></name> <operator pos:line="120" pos:column="29">*<pos:position pos:line="120" pos:column="30"/></operator><operator pos:line="120" pos:column="30">)<pos:position pos:line="120" pos:column="31"/></operator>
                      <literal type="string" pos:line="121" pos:column="23">"%s| %s: DEBUG: %s initialised %sconnection to ldap server %s:%d\n"<pos:position pos:line="121" pos:column="90"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="122" pos:column="23">LogTime<pos:position pos:line="122" pos:column="30"/></name><argument_list pos:line="122" pos:column="30">()<pos:position pos:line="122" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="122" pos:column="34">PROGRAM<pos:position pos:line="122" pos:column="41"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="122" pos:column="43">ld<pos:position pos:line="122" pos:column="45"/></name></expr> ?<pos:position pos:line="122" pos:column="47"/></condition><then pos:line="122" pos:column="47"> <expr><literal type="string" pos:line="122" pos:column="48">"Successfully"<pos:position pos:line="122" pos:column="62"/></literal></expr> <pos:position pos:line="122" pos:column="63"/></then><else pos:line="122" pos:column="63">: <expr><literal type="string" pos:line="122" pos:column="65">"Failed to"<pos:position pos:line="122" pos:column="76"/></literal></expr></else></ternary></expr></argument>,
                      <argument><expr><ternary><condition><expr><name><name pos:line="123" pos:column="23">margs<pos:position pos:line="123" pos:column="28"/></name><operator pos:line="123" pos:column="28">-&gt;<pos:position pos:line="123" pos:column="33"/></operator><name pos:line="123" pos:column="30">ssl<pos:position pos:line="123" pos:column="33"/></name></name></expr> ?<pos:position pos:line="123" pos:column="35"/></condition><then pos:line="123" pos:column="35"> <expr><literal type="string" pos:line="123" pos:column="36">"SSL protected "<pos:position pos:line="123" pos:column="52"/></literal></expr> <pos:position pos:line="123" pos:column="53"/></then><else pos:line="123" pos:column="53">: <expr><literal type="string" pos:line="123" pos:column="55">""<pos:position pos:line="123" pos:column="57"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="123" pos:column="59">hlist<pos:position pos:line="123" pos:column="64"/></name><index pos:line="123" pos:column="64">[<expr><name pos:line="123" pos:column="65">i<pos:position pos:line="123" pos:column="66"/></name></expr>]<pos:position pos:line="123" pos:column="67"/></index></name><operator pos:line="123" pos:column="67">.<pos:position pos:line="123" pos:column="68"/></operator><name pos:line="123" pos:column="68">host<pos:position pos:line="123" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="123" pos:column="74">port<pos:position pos:line="123" pos:column="78"/></name></expr></argument>)<pos:position pos:line="123" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="80"/></expr_stmt>
                <break pos:line="124" pos:column="17">break;<pos:position pos:line="124" pos:column="23"/></break>
            }<pos:position pos:line="125" pos:column="14"/></block></then></if>
<cpp:else pos:line="126" pos:column="1">#<cpp:directive pos:line="126" pos:column="2">else<pos:position pos:line="126" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><call><name pos:line="127" pos:column="13">ldap_unbind_ext<pos:position pos:line="127" pos:column="28"/></name><argument_list pos:line="127" pos:column="28">(<argument><expr><name pos:line="127" pos:column="29">ld<pos:position pos:line="127" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="33">NULL<pos:position pos:line="127" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="127" pos:column="39">NULL<pos:position pos:line="127" pos:column="43"/></name></expr></argument>)<pos:position pos:line="127" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><name pos:line="128" pos:column="13">ld<pos:position pos:line="128" pos:column="15"/></name> <operator pos:line="128" pos:column="16">=<pos:position pos:line="128" pos:column="17"/></operator> <name pos:line="128" pos:column="18">NULL<pos:position pos:line="128" pos:column="22"/></name></expr>;<pos:position pos:line="128" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="129" pos:column="13">error<pos:position pos:line="129" pos:column="18"/></name><argument_list pos:line="129" pos:column="18">(<argument><expr><operator pos:line="129" pos:column="19">(<pos:position pos:line="129" pos:column="20"/></operator><name pos:line="129" pos:column="20">char<pos:position pos:line="129" pos:column="24"/></name> <operator pos:line="129" pos:column="25">*<pos:position pos:line="129" pos:column="26"/></operator><operator pos:line="129" pos:column="26">)<pos:position pos:line="129" pos:column="27"/></operator> <literal type="string" pos:line="129" pos:column="28">"%s| %s: ERROR: SASL not supported on system\n"<pos:position pos:line="129" pos:column="75"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="130" pos:column="19">LogTime<pos:position pos:line="130" pos:column="26"/></name><argument_list pos:line="130" pos:column="26">()<pos:position pos:line="130" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="130" pos:column="30">PROGRAM<pos:position pos:line="130" pos:column="37"/></name></expr></argument>)<pos:position pos:line="130" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="39"/></expr_stmt>
            <continue pos:line="131" pos:column="13">continue;<pos:position pos:line="131" pos:column="22"/></continue>
<cpp:endif pos:line="132" pos:column="1">#<cpp:directive pos:line="132" pos:column="2">endif<pos:position pos:line="132" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="133" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="134" pos:column="9">nhosts<pos:position pos:line="134" pos:column="15"/></name> <operator pos:line="134" pos:column="16">=<pos:position pos:line="134" pos:column="17"/></operator> <call><name pos:line="134" pos:column="18">free_hostname_list<pos:position pos:line="134" pos:column="36"/></name><argument_list pos:line="134" pos:column="36">(<argument><expr><operator pos:line="134" pos:column="37">&amp;<pos:position pos:line="134" pos:column="42"/></operator><name pos:line="134" pos:column="38">hlist<pos:position pos:line="134" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="134" pos:column="45">nhosts<pos:position pos:line="134" pos:column="51"/></name></expr></argument>)<pos:position pos:line="134" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="53"/></expr_stmt>
        <if pos:line="135" pos:column="9">if <condition pos:line="135" pos:column="12">(<expr><name pos:line="135" pos:column="13">ld<pos:position pos:line="135" pos:column="15"/></name> <operator pos:line="135" pos:column="16">==<pos:position pos:line="135" pos:column="18"/></operator> <name pos:line="135" pos:column="19">NULL<pos:position pos:line="135" pos:column="23"/></name></expr>)<pos:position pos:line="135" pos:column="24"/></condition><then pos:line="135" pos:column="24"> <block pos:line="135" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="136" pos:column="13">debug<pos:position pos:line="136" pos:column="18"/></name><argument_list pos:line="136" pos:column="18">(<argument><expr><operator pos:line="136" pos:column="19">(<pos:position pos:line="136" pos:column="20"/></operator><name pos:line="136" pos:column="20">char<pos:position pos:line="136" pos:column="24"/></name> <operator pos:line="136" pos:column="25">*<pos:position pos:line="136" pos:column="26"/></operator><operator pos:line="136" pos:column="26">)<pos:position pos:line="136" pos:column="27"/></operator>
                  <literal type="string" pos:line="137" pos:column="19">"%s| %s: DEBUG: Error during initialisation of ldap connection: %s\n"<pos:position pos:line="137" pos:column="88"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="138" pos:column="19">LogTime<pos:position pos:line="138" pos:column="26"/></name><argument_list pos:line="138" pos:column="26">()<pos:position pos:line="138" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="138" pos:column="30">PROGRAM<pos:position pos:line="138" pos:column="37"/></name></expr></argument>, <argument><expr><call><name pos:line="138" pos:column="39">strerror<pos:position pos:line="138" pos:column="47"/></name><argument_list pos:line="138" pos:column="47">(<argument><expr><name pos:line="138" pos:column="48">errno<pos:position pos:line="138" pos:column="53"/></name></expr></argument>)<pos:position pos:line="138" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="138" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="139" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="140" pos:column="9">bindp<pos:position pos:line="140" pos:column="14"/></name> <operator pos:line="140" pos:column="15">=<pos:position pos:line="140" pos:column="16"/></operator> <call><name pos:line="140" pos:column="17">convert_domain_to_bind_path<pos:position pos:line="140" pos:column="44"/></name><argument_list pos:line="140" pos:column="44">(<argument><expr><name pos:line="140" pos:column="45">domain<pos:position pos:line="140" pos:column="51"/></name></expr></argument>)<pos:position pos:line="140" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="141" pos:column="6"/></block></then></if>
    <if pos:line="142" pos:column="5">if <condition pos:line="142" pos:column="8">(<expr><operator pos:line="142" pos:column="9">(<pos:position pos:line="142" pos:column="10"/></operator><operator pos:line="142" pos:column="10">!<pos:position pos:line="142" pos:column="11"/></operator><name pos:line="142" pos:column="11">domain<pos:position pos:line="142" pos:column="17"/></name> <operator pos:line="142" pos:column="18">||<pos:position pos:line="142" pos:column="20"/></operator> <operator pos:line="142" pos:column="21">!<pos:position pos:line="142" pos:column="22"/></operator><name pos:line="142" pos:column="22">ld<pos:position pos:line="142" pos:column="24"/></name><operator pos:line="142" pos:column="24">)<pos:position pos:line="142" pos:column="25"/></operator> <operator pos:line="142" pos:column="26">&amp;&amp;<pos:position pos:line="142" pos:column="36"/></operator> <name><name pos:line="142" pos:column="29">margs<pos:position pos:line="142" pos:column="34"/></name><operator pos:line="142" pos:column="34">-&gt;<pos:position pos:line="142" pos:column="39"/></operator><name pos:line="142" pos:column="36">lurl<pos:position pos:line="142" pos:column="40"/></name></name> <operator pos:line="142" pos:column="41">&amp;&amp;<pos:position pos:line="142" pos:column="51"/></operator> <call><name pos:line="142" pos:column="44">strstr<pos:position pos:line="142" pos:column="50"/></name><argument_list pos:line="142" pos:column="50">(<argument><expr><name><name pos:line="142" pos:column="51">margs<pos:position pos:line="142" pos:column="56"/></name><operator pos:line="142" pos:column="56">-&gt;<pos:position pos:line="142" pos:column="61"/></operator><name pos:line="142" pos:column="58">lurl<pos:position pos:line="142" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="64">"://"<pos:position pos:line="142" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="142" pos:column="71"/></condition><then pos:line="142" pos:column="71"> <block pos:line="142" pos:column="72">{
        <decl_stmt><decl><type><name pos:line="143" pos:column="9">char<pos:position pos:line="143" pos:column="13"/></name> <modifier pos:line="143" pos:column="14">*<pos:position pos:line="143" pos:column="15"/></modifier></type><name pos:line="143" pos:column="15">hostname<pos:position pos:line="143" pos:column="23"/></name></decl>;<pos:position pos:line="143" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="144" pos:column="9">char<pos:position pos:line="144" pos:column="13"/></name> <modifier pos:line="144" pos:column="14">*<pos:position pos:line="144" pos:column="15"/></modifier></type><name pos:line="144" pos:column="15">host<pos:position pos:line="144" pos:column="19"/></name></decl>;<pos:position pos:line="144" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="145" pos:column="9">int<pos:position pos:line="145" pos:column="12"/></name></type> <name pos:line="145" pos:column="13">port<pos:position pos:line="145" pos:column="17"/></name></decl>;<pos:position pos:line="145" pos:column="18"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="146" pos:column="9">char<pos:position pos:line="146" pos:column="13"/></name> <modifier pos:line="146" pos:column="14">*<pos:position pos:line="146" pos:column="15"/></modifier></type><name pos:line="146" pos:column="15">ssl<pos:position pos:line="146" pos:column="18"/></name> <init pos:line="146" pos:column="19">= <expr><name pos:line="146" pos:column="21">NULL<pos:position pos:line="146" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="146" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="147" pos:column="9">char<pos:position pos:line="147" pos:column="13"/></name> <modifier pos:line="147" pos:column="14">*<pos:position pos:line="147" pos:column="15"/></modifier></type><name pos:line="147" pos:column="15">p<pos:position pos:line="147" pos:column="16"/></name></decl>;<pos:position pos:line="147" pos:column="17"/></decl_stmt>
        <comment type="block" pos:line="148" pos:column="9">/*
         * If username does not contain a domain and a url was given then try it
         */</comment>
        <expr_stmt><expr><name pos:line="151" pos:column="9">hostname<pos:position pos:line="151" pos:column="17"/></name> <operator pos:line="151" pos:column="18">=<pos:position pos:line="151" pos:column="19"/></operator> <call><name pos:line="151" pos:column="20">strstr<pos:position pos:line="151" pos:column="26"/></name><argument_list pos:line="151" pos:column="26">(<argument><expr><name><name pos:line="151" pos:column="27">margs<pos:position pos:line="151" pos:column="32"/></name><operator pos:line="151" pos:column="32">-&gt;<pos:position pos:line="151" pos:column="37"/></operator><name pos:line="151" pos:column="34">lurl<pos:position pos:line="151" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="40">"://"<pos:position pos:line="151" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="46"/></argument_list></call> <operator pos:line="151" pos:column="47">+<pos:position pos:line="151" pos:column="48"/></operator> <literal type="number" pos:line="151" pos:column="49">3<pos:position pos:line="151" pos:column="50"/></literal></expr>;<pos:position pos:line="151" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="152" pos:column="9">ssl<pos:position pos:line="152" pos:column="12"/></name> <operator pos:line="152" pos:column="13">=<pos:position pos:line="152" pos:column="14"/></operator> <call><name pos:line="152" pos:column="15">strstr<pos:position pos:line="152" pos:column="21"/></name><argument_list pos:line="152" pos:column="21">(<argument><expr><name><name pos:line="152" pos:column="22">margs<pos:position pos:line="152" pos:column="27"/></name><operator pos:line="152" pos:column="27">-&gt;<pos:position pos:line="152" pos:column="32"/></operator><name pos:line="152" pos:column="29">lurl<pos:position pos:line="152" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="35">"ldaps://"<pos:position pos:line="152" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="152" pos:column="47"/></expr_stmt>
        <if pos:line="153" pos:column="9">if <condition pos:line="153" pos:column="12">(<expr><name pos:line="153" pos:column="13">ssl<pos:position pos:line="153" pos:column="16"/></name></expr>)<pos:position pos:line="153" pos:column="17"/></condition><then pos:line="153" pos:column="17"> <block pos:line="153" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="154" pos:column="13">debug<pos:position pos:line="154" pos:column="18"/></name><argument_list pos:line="154" pos:column="18">(<argument><expr><operator pos:line="154" pos:column="19">(<pos:position pos:line="154" pos:column="20"/></operator><name pos:line="154" pos:column="20">char<pos:position pos:line="154" pos:column="24"/></name> <operator pos:line="154" pos:column="25">*<pos:position pos:line="154" pos:column="26"/></operator><operator pos:line="154" pos:column="26">)<pos:position pos:line="154" pos:column="27"/></operator> <literal type="string" pos:line="154" pos:column="28">"%s| %s: DEBUG: Enable SSL to ldap servers\n"<pos:position pos:line="154" pos:column="73"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="155" pos:column="19">LogTime<pos:position pos:line="155" pos:column="26"/></name><argument_list pos:line="155" pos:column="26">()<pos:position pos:line="155" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="155" pos:column="30">PROGRAM<pos:position pos:line="155" pos:column="37"/></name></expr></argument>)<pos:position pos:line="155" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="156" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="157" pos:column="9">debug<pos:position pos:line="157" pos:column="14"/></name><argument_list pos:line="157" pos:column="14">(<argument><expr><operator pos:line="157" pos:column="15">(<pos:position pos:line="157" pos:column="16"/></operator><name pos:line="157" pos:column="16">char<pos:position pos:line="157" pos:column="20"/></name> <operator pos:line="157" pos:column="21">*<pos:position pos:line="157" pos:column="22"/></operator><operator pos:line="157" pos:column="22">)<pos:position pos:line="157" pos:column="23"/></operator> <literal type="string" pos:line="157" pos:column="24">"%s| %s: DEBUG: Canonicalise ldap server name %s\n"<pos:position pos:line="157" pos:column="75"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="158" pos:column="15">LogTime<pos:position pos:line="158" pos:column="22"/></name><argument_list pos:line="158" pos:column="22">()<pos:position pos:line="158" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="158" pos:column="26">PROGRAM<pos:position pos:line="158" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="158" pos:column="35">hostname<pos:position pos:line="158" pos:column="43"/></name></expr></argument>)<pos:position pos:line="158" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="45"/></expr_stmt>
        <comment type="block" pos:line="159" pos:column="9">/*
         * Loop over list of ldap servers
         */</comment>
        <expr_stmt><expr><name pos:line="162" pos:column="9">host<pos:position pos:line="162" pos:column="13"/></name> <operator pos:line="162" pos:column="14">=<pos:position pos:line="162" pos:column="15"/></operator> <call><name pos:line="162" pos:column="16">xstrdup<pos:position pos:line="162" pos:column="23"/></name><argument_list pos:line="162" pos:column="23">(<argument><expr><name pos:line="162" pos:column="24">hostname<pos:position pos:line="162" pos:column="32"/></name></expr></argument>)<pos:position pos:line="162" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="163" pos:column="9">port<pos:position pos:line="163" pos:column="13"/></name> <operator pos:line="163" pos:column="14">=<pos:position pos:line="163" pos:column="15"/></operator> <literal type="number" pos:line="163" pos:column="16">389<pos:position pos:line="163" pos:column="19"/></literal></expr>;<pos:position pos:line="163" pos:column="20"/></expr_stmt>
        <if pos:line="164" pos:column="9">if <condition pos:line="164" pos:column="12">(<expr><operator pos:line="164" pos:column="13">(<pos:position pos:line="164" pos:column="14"/></operator><name pos:line="164" pos:column="14">p<pos:position pos:line="164" pos:column="15"/></name> <operator pos:line="164" pos:column="16">=<pos:position pos:line="164" pos:column="17"/></operator> <call><name pos:line="164" pos:column="18">strchr<pos:position pos:line="164" pos:column="24"/></name><argument_list pos:line="164" pos:column="24">(<argument><expr><name pos:line="164" pos:column="25">host<pos:position pos:line="164" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="164" pos:column="31">':'<pos:position pos:line="164" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="35"/></argument_list></call><operator pos:line="164" pos:column="35">)<pos:position pos:line="164" pos:column="36"/></operator></expr>)<pos:position pos:line="164" pos:column="37"/></condition><then pos:line="164" pos:column="37"> <block pos:line="164" pos:column="38">{
            <expr_stmt><expr><operator pos:line="165" pos:column="13">*<pos:position pos:line="165" pos:column="14"/></operator><name pos:line="165" pos:column="14">p<pos:position pos:line="165" pos:column="15"/></name> <operator pos:line="165" pos:column="16">=<pos:position pos:line="165" pos:column="17"/></operator> <literal type="char" pos:line="165" pos:column="18">'\0'<pos:position pos:line="165" pos:column="22"/></literal></expr>;<pos:position pos:line="165" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="166" pos:column="13">++<pos:position pos:line="166" pos:column="15"/></operator><name pos:line="166" pos:column="15">p<pos:position pos:line="166" pos:column="16"/></name></expr>;<pos:position pos:line="166" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><name pos:line="167" pos:column="13">port<pos:position pos:line="167" pos:column="17"/></name> <operator pos:line="167" pos:column="18">=<pos:position pos:line="167" pos:column="19"/></operator> <call><name pos:line="167" pos:column="20">atoi<pos:position pos:line="167" pos:column="24"/></name><argument_list pos:line="167" pos:column="24">(<argument><expr><name pos:line="167" pos:column="25">p<pos:position pos:line="167" pos:column="26"/></name></expr></argument>)<pos:position pos:line="167" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="168" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="169" pos:column="9">nhosts<pos:position pos:line="169" pos:column="15"/></name> <operator pos:line="169" pos:column="16">=<pos:position pos:line="169" pos:column="17"/></operator> <call><name pos:line="169" pos:column="18">get_hostname_list<pos:position pos:line="169" pos:column="35"/></name><argument_list pos:line="169" pos:column="35">(<argument><expr><operator pos:line="169" pos:column="36">&amp;<pos:position pos:line="169" pos:column="41"/></operator><name pos:line="169" pos:column="37">hlist<pos:position pos:line="169" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="169" pos:column="44">0<pos:position pos:line="169" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="169" pos:column="47">host<pos:position pos:line="169" pos:column="51"/></name></expr></argument>)<pos:position pos:line="169" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="170" pos:column="9">xfree<pos:position pos:line="170" pos:column="14"/></name><argument_list pos:line="170" pos:column="14">(<argument><expr><name pos:line="170" pos:column="15">host<pos:position pos:line="170" pos:column="19"/></name></expr></argument>)<pos:position pos:line="170" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="170" pos:column="21"/></expr_stmt>
        <for pos:line="171" pos:column="9">for <control pos:line="171" pos:column="13">(<init><decl><type><name pos:line="171" pos:column="14">size_t<pos:position pos:line="171" pos:column="20"/></name></type> <name pos:line="171" pos:column="21">i<pos:position pos:line="171" pos:column="22"/></name> <init pos:line="171" pos:column="23">= <expr><literal type="number" pos:line="171" pos:column="25">0<pos:position pos:line="171" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="171" pos:column="27"/></init> <condition><expr><name pos:line="171" pos:column="28">i<pos:position pos:line="171" pos:column="29"/></name> <operator pos:line="171" pos:column="30">&lt;<pos:position pos:line="171" pos:column="34"/></operator> <name pos:line="171" pos:column="32">nhosts<pos:position pos:line="171" pos:column="38"/></name></expr>;<pos:position pos:line="171" pos:column="39"/></condition> <incr><expr><operator pos:line="171" pos:column="40">++<pos:position pos:line="171" pos:column="42"/></operator><name pos:line="171" pos:column="42">i<pos:position pos:line="171" pos:column="43"/></name></expr></incr>)<pos:position pos:line="171" pos:column="44"/></control> <block pos:line="171" pos:column="45">{
            <decl_stmt><decl><type><name><name pos:line="172" pos:column="13">struct<pos:position pos:line="172" pos:column="19"/></name> <name pos:line="172" pos:column="20">berval<pos:position pos:line="172" pos:column="26"/></name></name></type> <name pos:line="172" pos:column="27">cred<pos:position pos:line="172" pos:column="31"/></name></decl>;<pos:position pos:line="172" pos:column="32"/></decl_stmt>
            <if pos:line="173" pos:column="13">if <condition pos:line="173" pos:column="16">(<expr><name><name pos:line="173" pos:column="17">margs<pos:position pos:line="173" pos:column="22"/></name><operator pos:line="173" pos:column="22">-&gt;<pos:position pos:line="173" pos:column="27"/></operator><name pos:line="173" pos:column="24">lpass<pos:position pos:line="173" pos:column="29"/></name></name></expr>)<pos:position pos:line="173" pos:column="30"/></condition><then pos:line="173" pos:column="30"> <block pos:line="173" pos:column="31">{
                <expr_stmt><expr><name><name pos:line="174" pos:column="17">cred<pos:position pos:line="174" pos:column="21"/></name><operator pos:line="174" pos:column="21">.<pos:position pos:line="174" pos:column="22"/></operator><name pos:line="174" pos:column="22">bv_val<pos:position pos:line="174" pos:column="28"/></name></name> <operator pos:line="174" pos:column="29">=<pos:position pos:line="174" pos:column="30"/></operator> <name><name pos:line="174" pos:column="31">margs<pos:position pos:line="174" pos:column="36"/></name><operator pos:line="174" pos:column="36">-&gt;<pos:position pos:line="174" pos:column="41"/></operator><name pos:line="174" pos:column="38">lpass<pos:position pos:line="174" pos:column="43"/></name></name></expr>;<pos:position pos:line="174" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="175" pos:column="17">cred<pos:position pos:line="175" pos:column="21"/></name><operator pos:line="175" pos:column="21">.<pos:position pos:line="175" pos:column="22"/></operator><name pos:line="175" pos:column="22">bv_len<pos:position pos:line="175" pos:column="28"/></name></name> <operator pos:line="175" pos:column="29">=<pos:position pos:line="175" pos:column="30"/></operator> <call><name pos:line="175" pos:column="31">strlen<pos:position pos:line="175" pos:column="37"/></name><argument_list pos:line="175" pos:column="37">(<argument><expr><name><name pos:line="175" pos:column="38">margs<pos:position pos:line="175" pos:column="43"/></name><operator pos:line="175" pos:column="43">-&gt;<pos:position pos:line="175" pos:column="48"/></operator><name pos:line="175" pos:column="45">lpass<pos:position pos:line="175" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="175" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="176" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="177" pos:column="13">ld<pos:position pos:line="177" pos:column="15"/></name> <operator pos:line="177" pos:column="16">=<pos:position pos:line="177" pos:column="17"/></operator> <call><name pos:line="177" pos:column="18">tool_ldap_open<pos:position pos:line="177" pos:column="32"/></name><argument_list pos:line="177" pos:column="32">(<argument><expr><name pos:line="177" pos:column="33">margs<pos:position pos:line="177" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="177" pos:column="40">hlist<pos:position pos:line="177" pos:column="45"/></name><index pos:line="177" pos:column="45">[<expr><name pos:line="177" pos:column="46">i<pos:position pos:line="177" pos:column="47"/></name></expr>]<pos:position pos:line="177" pos:column="48"/></index></name><operator pos:line="177" pos:column="48">.<pos:position pos:line="177" pos:column="49"/></operator><name pos:line="177" pos:column="49">host<pos:position pos:line="177" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="55">port<pos:position pos:line="177" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="177" pos:column="61">ssl<pos:position pos:line="177" pos:column="64"/></name></expr></argument>)<pos:position pos:line="177" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="177" pos:column="66"/></expr_stmt>
            <if pos:line="178" pos:column="13">if <condition pos:line="178" pos:column="16">(<expr><operator pos:line="178" pos:column="17">!<pos:position pos:line="178" pos:column="18"/></operator><name pos:line="178" pos:column="18">ld<pos:position pos:line="178" pos:column="20"/></name></expr>)<pos:position pos:line="178" pos:column="21"/></condition><then pos:line="178" pos:column="21">
                <block type="pseudo"><continue pos:line="179" pos:column="17">continue;<pos:position pos:line="179" pos:column="26"/></continue></block></then></if>
            <comment type="block" pos:line="180" pos:column="13">/*
             * ldap bind with username/password authentication
             */</comment>

            <expr_stmt><expr><call><name pos:line="184" pos:column="13">debug<pos:position pos:line="184" pos:column="18"/></name><argument_list pos:line="184" pos:column="18">(<argument><expr><operator pos:line="184" pos:column="19">(<pos:position pos:line="184" pos:column="20"/></operator><name pos:line="184" pos:column="20">char<pos:position pos:line="184" pos:column="24"/></name> <operator pos:line="184" pos:column="25">*<pos:position pos:line="184" pos:column="26"/></operator><operator pos:line="184" pos:column="26">)<pos:position pos:line="184" pos:column="27"/></operator>
                  <literal type="string" pos:line="185" pos:column="19">"%s| %s: DEBUG: Bind to ldap server with Username/Password\n"<pos:position pos:line="185" pos:column="80"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="186" pos:column="19">LogTime<pos:position pos:line="186" pos:column="26"/></name><argument_list pos:line="186" pos:column="26">()<pos:position pos:line="186" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="186" pos:column="30">PROGRAM<pos:position pos:line="186" pos:column="37"/></name></expr></argument>)<pos:position pos:line="186" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="187" pos:column="13">rc<pos:position pos:line="187" pos:column="15"/></name> <operator pos:line="187" pos:column="16">=<pos:position pos:line="187" pos:column="17"/></operator> <call><name pos:line="187" pos:column="18">ldap_sasl_bind_s<pos:position pos:line="187" pos:column="34"/></name><argument_list pos:line="187" pos:column="34">(<argument><expr><name pos:line="187" pos:column="35">ld<pos:position pos:line="187" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="187" pos:column="39">margs<pos:position pos:line="187" pos:column="44"/></name><operator pos:line="187" pos:column="44">-&gt;<pos:position pos:line="187" pos:column="49"/></operator><name pos:line="187" pos:column="46">luser<pos:position pos:line="187" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="187" pos:column="53">LDAP_SASL_SIMPLE<pos:position pos:line="187" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="187" pos:column="71">&amp;<pos:position pos:line="187" pos:column="76"/></operator><name pos:line="187" pos:column="72">cred<pos:position pos:line="187" pos:column="76"/></name></expr></argument>,
                                  <argument><expr><name pos:line="188" pos:column="35">NULL<pos:position pos:line="188" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="41">NULL<pos:position pos:line="188" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="47">NULL<pos:position pos:line="188" pos:column="51"/></name></expr></argument>)<pos:position pos:line="188" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="53"/></expr_stmt>
            <if pos:line="189" pos:column="13">if <condition pos:line="189" pos:column="16">(<expr><name pos:line="189" pos:column="17">rc<pos:position pos:line="189" pos:column="19"/></name> <operator pos:line="189" pos:column="20">!=<pos:position pos:line="189" pos:column="22"/></operator> <name pos:line="189" pos:column="23">LDAP_SUCCESS<pos:position pos:line="189" pos:column="35"/></name></expr>)<pos:position pos:line="189" pos:column="36"/></condition><then pos:line="189" pos:column="36"> <block pos:line="189" pos:column="37">{
                <expr_stmt><expr><call><name pos:line="190" pos:column="17">error<pos:position pos:line="190" pos:column="22"/></name><argument_list pos:line="190" pos:column="22">(<argument><expr><operator pos:line="190" pos:column="23">(<pos:position pos:line="190" pos:column="24"/></operator><name pos:line="190" pos:column="24">char<pos:position pos:line="190" pos:column="28"/></name> <operator pos:line="190" pos:column="29">*<pos:position pos:line="190" pos:column="30"/></operator><operator pos:line="190" pos:column="30">)<pos:position pos:line="190" pos:column="31"/></operator>
                      <literal type="string" pos:line="191" pos:column="23">"%s| %s: ERROR: Error while binding to ldap server with Username/Password: %s\n"<pos:position pos:line="191" pos:column="103"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="192" pos:column="23">LogTime<pos:position pos:line="192" pos:column="30"/></name><argument_list pos:line="192" pos:column="30">()<pos:position pos:line="192" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="192" pos:column="34">PROGRAM<pos:position pos:line="192" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="192" pos:column="43">ldap_err2string<pos:position pos:line="192" pos:column="58"/></name><argument_list pos:line="192" pos:column="58">(<argument><expr><name pos:line="192" pos:column="59">rc<pos:position pos:line="192" pos:column="61"/></name></expr></argument>)<pos:position pos:line="192" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="192" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="193" pos:column="17">ldap_unbind_ext<pos:position pos:line="193" pos:column="32"/></name><argument_list pos:line="193" pos:column="32">(<argument><expr><name pos:line="193" pos:column="33">ld<pos:position pos:line="193" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="37">NULL<pos:position pos:line="193" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="193" pos:column="43">NULL<pos:position pos:line="193" pos:column="47"/></name></expr></argument>)<pos:position pos:line="193" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><name pos:line="194" pos:column="17">ld<pos:position pos:line="194" pos:column="19"/></name> <operator pos:line="194" pos:column="20">=<pos:position pos:line="194" pos:column="21"/></operator> <name pos:line="194" pos:column="22">NULL<pos:position pos:line="194" pos:column="26"/></name></expr>;<pos:position pos:line="194" pos:column="27"/></expr_stmt>
                <continue pos:line="195" pos:column="17">continue;<pos:position pos:line="195" pos:column="26"/></continue>
            }<pos:position pos:line="196" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="197" pos:column="13">lcreds<pos:position pos:line="197" pos:column="19"/></name> <operator pos:line="197" pos:column="20">=<pos:position pos:line="197" pos:column="21"/></operator> <operator pos:line="197" pos:column="22">(<pos:position pos:line="197" pos:column="23"/></operator>struct <name pos:line="197" pos:column="30">ldap_creds<pos:position pos:line="197" pos:column="40"/></name> <operator pos:line="197" pos:column="41">*<pos:position pos:line="197" pos:column="42"/></operator><operator pos:line="197" pos:column="42">)<pos:position pos:line="197" pos:column="43"/></operator> <call><name pos:line="197" pos:column="44">xmalloc<pos:position pos:line="197" pos:column="51"/></name><argument_list pos:line="197" pos:column="51">(<argument><expr><sizeof pos:line="197" pos:column="52">sizeof<argument_list pos:line="197" pos:column="58">(<argument><expr pos:line="197" pos:column="59">struct <name pos:line="197" pos:column="66">ldap_creds<pos:position pos:line="197" pos:column="76"/></name></expr></argument>)<pos:position pos:line="197" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="197" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="197" pos:column="79"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="198" pos:column="13">lcreds<pos:position pos:line="198" pos:column="19"/></name><operator pos:line="198" pos:column="19">-&gt;<pos:position pos:line="198" pos:column="24"/></operator><name pos:line="198" pos:column="21">dn<pos:position pos:line="198" pos:column="23"/></name></name> <operator pos:line="198" pos:column="24">=<pos:position pos:line="198" pos:column="25"/></operator> <call><name pos:line="198" pos:column="26">xstrdup<pos:position pos:line="198" pos:column="33"/></name><argument_list pos:line="198" pos:column="33">(<argument><expr><name><name pos:line="198" pos:column="34">margs<pos:position pos:line="198" pos:column="39"/></name><operator pos:line="198" pos:column="39">-&gt;<pos:position pos:line="198" pos:column="44"/></operator><name pos:line="198" pos:column="41">luser<pos:position pos:line="198" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="198" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="199" pos:column="13">lcreds<pos:position pos:line="199" pos:column="19"/></name><operator pos:line="199" pos:column="19">-&gt;<pos:position pos:line="199" pos:column="24"/></operator><name pos:line="199" pos:column="21">pw<pos:position pos:line="199" pos:column="23"/></name></name> <operator pos:line="199" pos:column="24">=<pos:position pos:line="199" pos:column="25"/></operator> <call><name pos:line="199" pos:column="26">xstrdup<pos:position pos:line="199" pos:column="33"/></name><argument_list pos:line="199" pos:column="33">(<argument><expr><name><name pos:line="199" pos:column="34">margs<pos:position pos:line="199" pos:column="39"/></name><operator pos:line="199" pos:column="39">-&gt;<pos:position pos:line="199" pos:column="44"/></operator><name pos:line="199" pos:column="41">lpass<pos:position pos:line="199" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="199" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="200" pos:column="13">ldap_set_rebind_proc<pos:position pos:line="200" pos:column="33"/></name><argument_list pos:line="200" pos:column="33">(<argument><expr><name pos:line="200" pos:column="34">ld<pos:position pos:line="200" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="200" pos:column="38">ldap_simple_rebind<pos:position pos:line="200" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="200" pos:column="58">(<pos:position pos:line="200" pos:column="59"/></operator><name pos:line="200" pos:column="59">char<pos:position pos:line="200" pos:column="63"/></name> <operator pos:line="200" pos:column="64">*<pos:position pos:line="200" pos:column="65"/></operator><operator pos:line="200" pos:column="65">)<pos:position pos:line="200" pos:column="66"/></operator> <name pos:line="200" pos:column="67">lcreds<pos:position pos:line="200" pos:column="73"/></name></expr></argument>)<pos:position pos:line="200" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="200" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="201" pos:column="13">debug<pos:position pos:line="201" pos:column="18"/></name><argument_list pos:line="201" pos:column="18">(<argument><expr><operator pos:line="201" pos:column="19">(<pos:position pos:line="201" pos:column="20"/></operator><name pos:line="201" pos:column="20">char<pos:position pos:line="201" pos:column="24"/></name> <operator pos:line="201" pos:column="25">*<pos:position pos:line="201" pos:column="26"/></operator><operator pos:line="201" pos:column="26">)<pos:position pos:line="201" pos:column="27"/></operator>
                  <literal type="string" pos:line="202" pos:column="19">"%s| %s: DEBUG: %s set up %sconnection to ldap server %s:%d\n"<pos:position pos:line="202" pos:column="81"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="203" pos:column="19">LogTime<pos:position pos:line="203" pos:column="26"/></name><argument_list pos:line="203" pos:column="26">()<pos:position pos:line="203" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="203" pos:column="30">PROGRAM<pos:position pos:line="203" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="203" pos:column="39">ld<pos:position pos:line="203" pos:column="41"/></name></expr> ?<pos:position pos:line="203" pos:column="43"/></condition><then pos:line="203" pos:column="43"> <expr><literal type="string" pos:line="203" pos:column="44">"Successfully"<pos:position pos:line="203" pos:column="58"/></literal></expr> <pos:position pos:line="203" pos:column="59"/></then><else pos:line="203" pos:column="59">: <expr><literal type="string" pos:line="203" pos:column="61">"Failed to"<pos:position pos:line="203" pos:column="72"/></literal></expr></else></ternary></expr></argument>,
                  <argument><expr><ternary><condition><expr><name pos:line="204" pos:column="19">ssl<pos:position pos:line="204" pos:column="22"/></name></expr> ?<pos:position pos:line="204" pos:column="24"/></condition><then pos:line="204" pos:column="24"> <expr><literal type="string" pos:line="204" pos:column="25">"SSL protected "<pos:position pos:line="204" pos:column="41"/></literal></expr> <pos:position pos:line="204" pos:column="42"/></then><else pos:line="204" pos:column="42">: <expr><literal type="string" pos:line="204" pos:column="44">""<pos:position pos:line="204" pos:column="46"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="204" pos:column="48">hlist<pos:position pos:line="204" pos:column="53"/></name><index pos:line="204" pos:column="53">[<expr><name pos:line="204" pos:column="54">i<pos:position pos:line="204" pos:column="55"/></name></expr>]<pos:position pos:line="204" pos:column="56"/></index></name><operator pos:line="204" pos:column="56">.<pos:position pos:line="204" pos:column="57"/></operator><name pos:line="204" pos:column="57">host<pos:position pos:line="204" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="204" pos:column="63">port<pos:position pos:line="204" pos:column="67"/></name></expr></argument>)<pos:position pos:line="204" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="69"/></expr_stmt>
            <break pos:line="205" pos:column="13">break;<pos:position pos:line="205" pos:column="19"/></break>

        }<pos:position pos:line="207" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="208" pos:column="9">nhosts<pos:position pos:line="208" pos:column="15"/></name> <operator pos:line="208" pos:column="16">=<pos:position pos:line="208" pos:column="17"/></operator> <call><name pos:line="208" pos:column="18">free_hostname_list<pos:position pos:line="208" pos:column="36"/></name><argument_list pos:line="208" pos:column="36">(<argument><expr><operator pos:line="208" pos:column="37">&amp;<pos:position pos:line="208" pos:column="42"/></operator><name pos:line="208" pos:column="38">hlist<pos:position pos:line="208" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="45">nhosts<pos:position pos:line="208" pos:column="51"/></name></expr></argument>)<pos:position pos:line="208" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="209" pos:column="9">xfree<pos:position pos:line="209" pos:column="14"/></name><argument_list pos:line="209" pos:column="14">(<argument><expr><name pos:line="209" pos:column="15">bindp<pos:position pos:line="209" pos:column="20"/></name></expr></argument>)<pos:position pos:line="209" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="22"/></expr_stmt>
        <if pos:line="210" pos:column="9">if <condition pos:line="210" pos:column="12">(<expr><name><name pos:line="210" pos:column="13">margs<pos:position pos:line="210" pos:column="18"/></name><operator pos:line="210" pos:column="18">-&gt;<pos:position pos:line="210" pos:column="23"/></operator><name pos:line="210" pos:column="20">lbind<pos:position pos:line="210" pos:column="25"/></name></name></expr>)<pos:position pos:line="210" pos:column="26"/></condition><then pos:line="210" pos:column="26"> <block pos:line="210" pos:column="27">{
            <expr_stmt><expr><name pos:line="211" pos:column="13">bindp<pos:position pos:line="211" pos:column="18"/></name> <operator pos:line="211" pos:column="19">=<pos:position pos:line="211" pos:column="20"/></operator> <call><name pos:line="211" pos:column="21">xstrdup<pos:position pos:line="211" pos:column="28"/></name><argument_list pos:line="211" pos:column="28">(<argument><expr><name><name pos:line="211" pos:column="29">margs<pos:position pos:line="211" pos:column="34"/></name><operator pos:line="211" pos:column="34">-&gt;<pos:position pos:line="211" pos:column="39"/></operator><name pos:line="211" pos:column="36">lbind<pos:position pos:line="211" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="211" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="211" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="212" pos:column="10"/></block></then> <else pos:line="212" pos:column="11">else <block pos:line="212" pos:column="16">{
            <expr_stmt><expr><name pos:line="213" pos:column="13">bindp<pos:position pos:line="213" pos:column="18"/></name> <operator pos:line="213" pos:column="19">=<pos:position pos:line="213" pos:column="20"/></operator> <call><name pos:line="213" pos:column="21">convert_domain_to_bind_path<pos:position pos:line="213" pos:column="48"/></name><argument_list pos:line="213" pos:column="48">(<argument><expr><name pos:line="213" pos:column="49">domain<pos:position pos:line="213" pos:column="55"/></name></expr></argument>)<pos:position pos:line="213" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="214" pos:column="10"/></block></else></if>
    }<pos:position pos:line="215" pos:column="6"/></block></then></if>
    <if pos:line="216" pos:column="5">if <condition pos:line="216" pos:column="8">(<expr><name pos:line="216" pos:column="9">ld<pos:position pos:line="216" pos:column="11"/></name> <operator pos:line="216" pos:column="12">==<pos:position pos:line="216" pos:column="14"/></operator> <name pos:line="216" pos:column="15">NULL<pos:position pos:line="216" pos:column="19"/></name></expr>)<pos:position pos:line="216" pos:column="20"/></condition><then pos:line="216" pos:column="20"> <block pos:line="216" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="217" pos:column="9">debug<pos:position pos:line="217" pos:column="14"/></name><argument_list pos:line="217" pos:column="14">(<argument><expr><operator pos:line="217" pos:column="15">(<pos:position pos:line="217" pos:column="16"/></operator><name pos:line="217" pos:column="16">char<pos:position pos:line="217" pos:column="20"/></name> <operator pos:line="217" pos:column="21">*<pos:position pos:line="217" pos:column="22"/></operator><operator pos:line="217" pos:column="22">)<pos:position pos:line="217" pos:column="23"/></operator>
              <literal type="string" pos:line="218" pos:column="15">"%s| %s: DEBUG: Error during initialisation of ldap connection: %s\n"<pos:position pos:line="218" pos:column="84"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="219" pos:column="15">LogTime<pos:position pos:line="219" pos:column="22"/></name><argument_list pos:line="219" pos:column="22">()<pos:position pos:line="219" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="219" pos:column="26">PROGRAM<pos:position pos:line="219" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="219" pos:column="35">strerror<pos:position pos:line="219" pos:column="43"/></name><argument_list pos:line="219" pos:column="43">(<argument><expr><name pos:line="219" pos:column="44">errno<pos:position pos:line="219" pos:column="49"/></name></expr></argument>)<pos:position pos:line="219" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="219" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="220" pos:column="9">retval<pos:position pos:line="220" pos:column="15"/></name> <operator pos:line="220" pos:column="16">=<pos:position pos:line="220" pos:column="17"/></operator> <literal type="number" pos:line="220" pos:column="18">0<pos:position pos:line="220" pos:column="19"/></literal></expr>;<pos:position pos:line="220" pos:column="20"/></expr_stmt>
        <goto pos:line="221" pos:column="9">goto <name pos:line="221" pos:column="14">cleanup<pos:position pos:line="221" pos:column="21"/></name>;<pos:position pos:line="221" pos:column="22"/></goto>
    }<pos:position pos:line="222" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="223" pos:column="5">/*
     * ldap search for user
     */</comment>
    <comment type="block" pos:line="226" pos:column="5">/*
     * Check if server is AD by querying for attribute samaccountname
     */</comment>
    <expr_stmt><expr><name><name pos:line="229" pos:column="5">margs<pos:position pos:line="229" pos:column="10"/></name><operator pos:line="229" pos:column="10">-&gt;<pos:position pos:line="229" pos:column="15"/></operator><name pos:line="229" pos:column="12">AD<pos:position pos:line="229" pos:column="14"/></name></name> <operator pos:line="229" pos:column="15">=<pos:position pos:line="229" pos:column="16"/></operator> <literal type="number" pos:line="229" pos:column="17">0<pos:position pos:line="229" pos:column="18"/></literal></expr>;<pos:position pos:line="229" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="230" pos:column="5">rc<pos:position pos:line="230" pos:column="7"/></name> <operator pos:line="230" pos:column="8">=<pos:position pos:line="230" pos:column="9"/></operator> <call><name pos:line="230" pos:column="10">check_AD<pos:position pos:line="230" pos:column="18"/></name><argument_list pos:line="230" pos:column="18">(<argument><expr><name pos:line="230" pos:column="19">margs<pos:position pos:line="230" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="230" pos:column="26">ld<pos:position pos:line="230" pos:column="28"/></name></expr></argument>)<pos:position pos:line="230" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="30"/></expr_stmt>
    <if pos:line="231" pos:column="5">if <condition pos:line="231" pos:column="8">(<expr><name pos:line="231" pos:column="9">rc<pos:position pos:line="231" pos:column="11"/></name> <operator pos:line="231" pos:column="12">!=<pos:position pos:line="231" pos:column="14"/></operator> <name pos:line="231" pos:column="15">LDAP_SUCCESS<pos:position pos:line="231" pos:column="27"/></name></expr>)<pos:position pos:line="231" pos:column="28"/></condition><then pos:line="231" pos:column="28"> <block pos:line="231" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="232" pos:column="9">error<pos:position pos:line="232" pos:column="14"/></name><argument_list pos:line="232" pos:column="14">(<argument><expr><operator pos:line="232" pos:column="15">(<pos:position pos:line="232" pos:column="16"/></operator><name pos:line="232" pos:column="16">char<pos:position pos:line="232" pos:column="20"/></name> <operator pos:line="232" pos:column="21">*<pos:position pos:line="232" pos:column="22"/></operator><operator pos:line="232" pos:column="22">)<pos:position pos:line="232" pos:column="23"/></operator>
              <literal type="string" pos:line="233" pos:column="15">"%s| %s: ERROR: Error determining ldap server type: %s\n"<pos:position pos:line="233" pos:column="72"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="234" pos:column="15">LogTime<pos:position pos:line="234" pos:column="22"/></name><argument_list pos:line="234" pos:column="22">()<pos:position pos:line="234" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="234" pos:column="26">PROGRAM<pos:position pos:line="234" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="234" pos:column="35">ldap_err2string<pos:position pos:line="234" pos:column="50"/></name><argument_list pos:line="234" pos:column="50">(<argument><expr><name pos:line="234" pos:column="51">rc<pos:position pos:line="234" pos:column="53"/></name></expr></argument>)<pos:position pos:line="234" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="234" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="235" pos:column="9">ldap_unbind_ext<pos:position pos:line="235" pos:column="24"/></name><argument_list pos:line="235" pos:column="24">(<argument><expr><name pos:line="235" pos:column="25">ld<pos:position pos:line="235" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="29">NULL<pos:position pos:line="235" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="235" pos:column="35">NULL<pos:position pos:line="235" pos:column="39"/></name></expr></argument>)<pos:position pos:line="235" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="235" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="236" pos:column="9">ld<pos:position pos:line="236" pos:column="11"/></name> <operator pos:line="236" pos:column="12">=<pos:position pos:line="236" pos:column="13"/></operator> <name pos:line="236" pos:column="14">NULL<pos:position pos:line="236" pos:column="18"/></name></expr>;<pos:position pos:line="236" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="237" pos:column="9">retval<pos:position pos:line="237" pos:column="15"/></name> <operator pos:line="237" pos:column="16">=<pos:position pos:line="237" pos:column="17"/></operator> <literal type="number" pos:line="237" pos:column="18">0<pos:position pos:line="237" pos:column="19"/></literal></expr>;<pos:position pos:line="237" pos:column="20"/></expr_stmt>
        <goto pos:line="238" pos:column="9">goto <name pos:line="238" pos:column="14">cleanup<pos:position pos:line="238" pos:column="21"/></name>;<pos:position pos:line="238" pos:column="22"/></goto>
    }<pos:position pos:line="239" pos:column="6"/></block></then></if>
    <if pos:line="240" pos:column="5">if <condition pos:line="240" pos:column="8">(<expr><name><name pos:line="240" pos:column="9">margs<pos:position pos:line="240" pos:column="14"/></name><operator pos:line="240" pos:column="14">-&gt;<pos:position pos:line="240" pos:column="19"/></operator><name pos:line="240" pos:column="16">AD<pos:position pos:line="240" pos:column="18"/></name></name></expr>)<pos:position pos:line="240" pos:column="19"/></condition><then pos:line="240" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="241" pos:column="9">filter<pos:position pos:line="241" pos:column="15"/></name> <operator pos:line="241" pos:column="16">=<pos:position pos:line="241" pos:column="17"/></operator> <operator pos:line="241" pos:column="18">(<pos:position pos:line="241" pos:column="19"/></operator><name pos:line="241" pos:column="19">char<pos:position pos:line="241" pos:column="23"/></name> <operator pos:line="241" pos:column="24">*<pos:position pos:line="241" pos:column="25"/></operator><operator pos:line="241" pos:column="25">)<pos:position pos:line="241" pos:column="26"/></operator> <name pos:line="241" pos:column="27">FILTER_AD<pos:position pos:line="241" pos:column="36"/></name></expr>;<pos:position pos:line="241" pos:column="37"/></expr_stmt></block></then>
    <else pos:line="242" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="243" pos:column="9">filter<pos:position pos:line="243" pos:column="15"/></name> <operator pos:line="243" pos:column="16">=<pos:position pos:line="243" pos:column="17"/></operator> <operator pos:line="243" pos:column="18">(<pos:position pos:line="243" pos:column="19"/></operator><name pos:line="243" pos:column="19">char<pos:position pos:line="243" pos:column="23"/></name> <operator pos:line="243" pos:column="24">*<pos:position pos:line="243" pos:column="25"/></operator><operator pos:line="243" pos:column="25">)<pos:position pos:line="243" pos:column="26"/></operator> <name pos:line="243" pos:column="27">FILTER<pos:position pos:line="243" pos:column="33"/></name></expr>;<pos:position pos:line="243" pos:column="34"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="245" pos:column="5">ldap_filter_esc<pos:position pos:line="245" pos:column="20"/></name> <operator pos:line="245" pos:column="21">=<pos:position pos:line="245" pos:column="22"/></operator> <call><name pos:line="245" pos:column="23">escape_filter<pos:position pos:line="245" pos:column="36"/></name><argument_list pos:line="245" pos:column="36">(<argument><expr><name pos:line="245" pos:column="37">user<pos:position pos:line="245" pos:column="41"/></name></expr></argument>)<pos:position pos:line="245" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name pos:line="247" pos:column="5">se_len<pos:position pos:line="247" pos:column="11"/></name> <operator pos:line="247" pos:column="12">=<pos:position pos:line="247" pos:column="13"/></operator> <call><name pos:line="247" pos:column="14">strlen<pos:position pos:line="247" pos:column="20"/></name><argument_list pos:line="247" pos:column="20">(<argument><expr><name pos:line="247" pos:column="21">filter<pos:position pos:line="247" pos:column="27"/></name></expr></argument>)<pos:position pos:line="247" pos:column="28"/></argument_list></call> <operator pos:line="247" pos:column="29">+<pos:position pos:line="247" pos:column="30"/></operator> <call><name pos:line="247" pos:column="31">strlen<pos:position pos:line="247" pos:column="37"/></name><argument_list pos:line="247" pos:column="37">(<argument><expr><name pos:line="247" pos:column="38">ldap_filter_esc<pos:position pos:line="247" pos:column="53"/></name></expr></argument>)<pos:position pos:line="247" pos:column="54"/></argument_list></call> <operator pos:line="247" pos:column="55">+<pos:position pos:line="247" pos:column="56"/></operator> <literal type="number" pos:line="247" pos:column="57">1<pos:position pos:line="247" pos:column="58"/></literal></expr>;<pos:position pos:line="247" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><name pos:line="248" pos:column="5">search_exp<pos:position pos:line="248" pos:column="15"/></name> <operator pos:line="248" pos:column="16">=<pos:position pos:line="248" pos:column="17"/></operator> <operator pos:line="248" pos:column="18">(<pos:position pos:line="248" pos:column="19"/></operator><name pos:line="248" pos:column="19">char<pos:position pos:line="248" pos:column="23"/></name> <operator pos:line="248" pos:column="24">*<pos:position pos:line="248" pos:column="25"/></operator><operator pos:line="248" pos:column="25">)<pos:position pos:line="248" pos:column="26"/></operator> <call><name pos:line="248" pos:column="27">xmalloc<pos:position pos:line="248" pos:column="34"/></name><argument_list pos:line="248" pos:column="34">(<argument><expr><name pos:line="248" pos:column="35">se_len<pos:position pos:line="248" pos:column="41"/></name></expr></argument>)<pos:position pos:line="248" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="249" pos:column="5">snprintf<pos:position pos:line="249" pos:column="13"/></name><argument_list pos:line="249" pos:column="13">(<argument><expr><name pos:line="249" pos:column="14">search_exp<pos:position pos:line="249" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="26">se_len<pos:position pos:line="249" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="34">filter<pos:position pos:line="249" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="42">ldap_filter_esc<pos:position pos:line="249" pos:column="57"/></name></expr></argument>)<pos:position pos:line="249" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="251" pos:column="5">xfree<pos:position pos:line="251" pos:column="10"/></name><argument_list pos:line="251" pos:column="10">(<argument><expr><name pos:line="251" pos:column="11">ldap_filter_esc<pos:position pos:line="251" pos:column="26"/></name></expr></argument>)<pos:position pos:line="251" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="253" pos:column="5">debug<pos:position pos:line="253" pos:column="10"/></name><argument_list pos:line="253" pos:column="10">(<argument><expr><operator pos:line="253" pos:column="11">(<pos:position pos:line="253" pos:column="12"/></operator><name pos:line="253" pos:column="12">char<pos:position pos:line="253" pos:column="16"/></name> <operator pos:line="253" pos:column="17">*<pos:position pos:line="253" pos:column="18"/></operator><operator pos:line="253" pos:column="18">)<pos:position pos:line="253" pos:column="19"/></operator>
          <literal type="string" pos:line="254" pos:column="11">"%s| %s: DEBUG: Search ldap server with bind path %s and filter : %s\n"<pos:position pos:line="254" pos:column="82"/></literal></expr></argument>,
          <argument><expr><call><name pos:line="255" pos:column="11">LogTime<pos:position pos:line="255" pos:column="18"/></name><argument_list pos:line="255" pos:column="18">()<pos:position pos:line="255" pos:column="20"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="255" pos:column="22">PROGRAM<pos:position pos:line="255" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="31">bindp<pos:position pos:line="255" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="255" pos:column="38">search_exp<pos:position pos:line="255" pos:column="48"/></name></expr></argument>)<pos:position pos:line="255" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="255" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><name pos:line="256" pos:column="5">rc<pos:position pos:line="256" pos:column="7"/></name> <operator pos:line="256" pos:column="8">=<pos:position pos:line="256" pos:column="9"/></operator> <call><name pos:line="256" pos:column="10">ldap_search_ext_s<pos:position pos:line="256" pos:column="27"/></name><argument_list pos:line="256" pos:column="27">(<argument><expr><name pos:line="256" pos:column="28">ld<pos:position pos:line="256" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="32">bindp<pos:position pos:line="256" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="39">LDAP_SCOPE_SUBTREE<pos:position pos:line="256" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="59">search_exp<pos:position pos:line="256" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="256" pos:column="71">NULL<pos:position pos:line="256" pos:column="75"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="256" pos:column="77">0<pos:position pos:line="256" pos:column="78"/></literal></expr></argument>,
                           <argument><expr><name pos:line="257" pos:column="28">NULL<pos:position pos:line="257" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="34">NULL<pos:position pos:line="257" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="257" pos:column="40">&amp;<pos:position pos:line="257" pos:column="45"/></operator><name pos:line="257" pos:column="41">searchtime<pos:position pos:line="257" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="257" pos:column="53">0<pos:position pos:line="257" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="257" pos:column="56">&amp;<pos:position pos:line="257" pos:column="61"/></operator><name pos:line="257" pos:column="57">res<pos:position pos:line="257" pos:column="60"/></name></expr></argument>)<pos:position pos:line="257" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="258" pos:column="5">xfree<pos:position pos:line="258" pos:column="10"/></name><argument_list pos:line="258" pos:column="10">(<argument><expr><name pos:line="258" pos:column="11">search_exp<pos:position pos:line="258" pos:column="21"/></name></expr></argument>)<pos:position pos:line="258" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="23"/></expr_stmt>

    <if pos:line="260" pos:column="5">if <condition pos:line="260" pos:column="8">(<expr><name pos:line="260" pos:column="9">rc<pos:position pos:line="260" pos:column="11"/></name> <operator pos:line="260" pos:column="12">!=<pos:position pos:line="260" pos:column="14"/></operator> <name pos:line="260" pos:column="15">LDAP_SUCCESS<pos:position pos:line="260" pos:column="27"/></name></expr>)<pos:position pos:line="260" pos:column="28"/></condition><then pos:line="260" pos:column="28"> <block pos:line="260" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="261" pos:column="9">error<pos:position pos:line="261" pos:column="14"/></name><argument_list pos:line="261" pos:column="14">(<argument><expr><operator pos:line="261" pos:column="15">(<pos:position pos:line="261" pos:column="16"/></operator><name pos:line="261" pos:column="16">char<pos:position pos:line="261" pos:column="20"/></name> <operator pos:line="261" pos:column="21">*<pos:position pos:line="261" pos:column="22"/></operator><operator pos:line="261" pos:column="22">)<pos:position pos:line="261" pos:column="23"/></operator> <literal type="string" pos:line="261" pos:column="24">"%s| %s: ERROR: Error searching ldap server: %s\n"<pos:position pos:line="261" pos:column="74"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="262" pos:column="15">LogTime<pos:position pos:line="262" pos:column="22"/></name><argument_list pos:line="262" pos:column="22">()<pos:position pos:line="262" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="262" pos:column="26">PROGRAM<pos:position pos:line="262" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="262" pos:column="35">ldap_err2string<pos:position pos:line="262" pos:column="50"/></name><argument_list pos:line="262" pos:column="50">(<argument><expr><name pos:line="262" pos:column="51">rc<pos:position pos:line="262" pos:column="53"/></name></expr></argument>)<pos:position pos:line="262" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="262" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="262" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="263" pos:column="9">ldap_unbind_ext<pos:position pos:line="263" pos:column="24"/></name><argument_list pos:line="263" pos:column="24">(<argument><expr><name pos:line="263" pos:column="25">ld<pos:position pos:line="263" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="29">NULL<pos:position pos:line="263" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="263" pos:column="35">NULL<pos:position pos:line="263" pos:column="39"/></name></expr></argument>)<pos:position pos:line="263" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="264" pos:column="9">ld<pos:position pos:line="264" pos:column="11"/></name> <operator pos:line="264" pos:column="12">=<pos:position pos:line="264" pos:column="13"/></operator> <name pos:line="264" pos:column="14">NULL<pos:position pos:line="264" pos:column="18"/></name></expr>;<pos:position pos:line="264" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="265" pos:column="9">retval<pos:position pos:line="265" pos:column="15"/></name> <operator pos:line="265" pos:column="16">=<pos:position pos:line="265" pos:column="17"/></operator> <literal type="number" pos:line="265" pos:column="18">0<pos:position pos:line="265" pos:column="19"/></literal></expr>;<pos:position pos:line="265" pos:column="20"/></expr_stmt>
        <goto pos:line="266" pos:column="9">goto <name pos:line="266" pos:column="14">cleanup<pos:position pos:line="266" pos:column="21"/></name>;<pos:position pos:line="266" pos:column="22"/></goto>
    }<pos:position pos:line="267" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="268" pos:column="5">debug<pos:position pos:line="268" pos:column="10"/></name><argument_list pos:line="268" pos:column="10">(<argument><expr><operator pos:line="268" pos:column="11">(<pos:position pos:line="268" pos:column="12"/></operator><name pos:line="268" pos:column="12">char<pos:position pos:line="268" pos:column="16"/></name> <operator pos:line="268" pos:column="17">*<pos:position pos:line="268" pos:column="18"/></operator><operator pos:line="268" pos:column="18">)<pos:position pos:line="268" pos:column="19"/></operator> <literal type="string" pos:line="268" pos:column="20">"%s| %s: DEBUG: Found %d ldap entr%s\n"<pos:position pos:line="268" pos:column="59"/></literal></expr></argument>, <argument><expr><call><name pos:line="268" pos:column="61">LogTime<pos:position pos:line="268" pos:column="68"/></name><argument_list pos:line="268" pos:column="68">()<pos:position pos:line="268" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="268" pos:column="72">PROGRAM<pos:position pos:line="268" pos:column="79"/></name></expr></argument>,
          <argument><expr><call><name pos:line="269" pos:column="11">ldap_count_entries<pos:position pos:line="269" pos:column="29"/></name><argument_list pos:line="269" pos:column="29">(<argument><expr><name pos:line="269" pos:column="30">ld<pos:position pos:line="269" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="34">res<pos:position pos:line="269" pos:column="37"/></name></expr></argument>)<pos:position pos:line="269" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="269" pos:column="40">ldap_count_entries<pos:position pos:line="269" pos:column="58"/></name><argument_list pos:line="269" pos:column="58">(<argument><expr><name pos:line="269" pos:column="59">ld<pos:position pos:line="269" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="63">res<pos:position pos:line="269" pos:column="66"/></name></expr></argument>)<pos:position pos:line="269" pos:column="67"/></argument_list></call> <operator pos:line="269" pos:column="68">&gt;<pos:position pos:line="269" pos:column="72"/></operator> <literal type="number" pos:line="269" pos:column="70">1<pos:position pos:line="269" pos:column="71"/></literal>
          <operator pos:line="270" pos:column="11">||<pos:position pos:line="270" pos:column="13"/></operator> <call><name pos:line="270" pos:column="14">ldap_count_entries<pos:position pos:line="270" pos:column="32"/></name><argument_list pos:line="270" pos:column="32">(<argument><expr><name pos:line="270" pos:column="33">ld<pos:position pos:line="270" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="270" pos:column="37">res<pos:position pos:line="270" pos:column="40"/></name></expr></argument>)<pos:position pos:line="270" pos:column="41"/></argument_list></call> <operator pos:line="270" pos:column="42">==<pos:position pos:line="270" pos:column="44"/></operator> <literal type="number" pos:line="270" pos:column="45">0<pos:position pos:line="270" pos:column="46"/></literal></expr> ?<pos:position pos:line="270" pos:column="48"/></condition><then pos:line="270" pos:column="48"> <expr><literal type="string" pos:line="270" pos:column="49">"ies"<pos:position pos:line="270" pos:column="54"/></literal></expr> <pos:position pos:line="270" pos:column="55"/></then><else pos:line="270" pos:column="55">: <expr><literal type="string" pos:line="270" pos:column="57">"y"<pos:position pos:line="270" pos:column="60"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="270" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="270" pos:column="62"/></expr_stmt>

    <if pos:line="272" pos:column="5">if <condition pos:line="272" pos:column="8">(<expr><call><name pos:line="272" pos:column="9">ldap_count_entries<pos:position pos:line="272" pos:column="27"/></name><argument_list pos:line="272" pos:column="27">(<argument><expr><name pos:line="272" pos:column="28">ld<pos:position pos:line="272" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="272" pos:column="32">res<pos:position pos:line="272" pos:column="35"/></name></expr></argument>)<pos:position pos:line="272" pos:column="36"/></argument_list></call> <operator pos:line="272" pos:column="37">!=<pos:position pos:line="272" pos:column="39"/></operator> <literal type="number" pos:line="272" pos:column="40">0<pos:position pos:line="272" pos:column="41"/></literal></expr>)<pos:position pos:line="272" pos:column="42"/></condition><then pos:line="272" pos:column="42"> <block pos:line="272" pos:column="43">{

        <if pos:line="274" pos:column="9">if <condition pos:line="274" pos:column="12">(<expr><name><name pos:line="274" pos:column="13">margs<pos:position pos:line="274" pos:column="18"/></name><operator pos:line="274" pos:column="18">-&gt;<pos:position pos:line="274" pos:column="23"/></operator><name pos:line="274" pos:column="20">AD<pos:position pos:line="274" pos:column="22"/></name></name></expr>)<pos:position pos:line="274" pos:column="23"/></condition><then pos:line="274" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><name pos:line="275" pos:column="13">max_attr<pos:position pos:line="275" pos:column="21"/></name> <operator pos:line="275" pos:column="22">=<pos:position pos:line="275" pos:column="23"/></operator> <call><name pos:line="275" pos:column="24">get_attributes<pos:position pos:line="275" pos:column="38"/></name><argument_list pos:line="275" pos:column="38">(<argument><expr><name pos:line="275" pos:column="39">ld<pos:position pos:line="275" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="43">res<pos:position pos:line="275" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="275" pos:column="48">ATTRIBUTE_AD<pos:position pos:line="275" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="275" pos:column="62">&amp;<pos:position pos:line="275" pos:column="67"/></operator><name pos:line="275" pos:column="63">attr_value<pos:position pos:line="275" pos:column="73"/></name></expr></argument>)<pos:position pos:line="275" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="275" pos:column="75"/></expr_stmt></block></then>
        <else pos:line="276" pos:column="9">else <block pos:line="276" pos:column="14">{
            <expr_stmt><expr><name pos:line="277" pos:column="13">max_attr<pos:position pos:line="277" pos:column="21"/></name> <operator pos:line="277" pos:column="22">=<pos:position pos:line="277" pos:column="23"/></operator> <call><name pos:line="277" pos:column="24">get_attributes<pos:position pos:line="277" pos:column="38"/></name><argument_list pos:line="277" pos:column="38">(<argument><expr><name pos:line="277" pos:column="39">ld<pos:position pos:line="277" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="43">res<pos:position pos:line="277" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="277" pos:column="48">ATTRIBUTE<pos:position pos:line="277" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="277" pos:column="59">&amp;<pos:position pos:line="277" pos:column="64"/></operator><name pos:line="277" pos:column="60">attr_value<pos:position pos:line="277" pos:column="70"/></name></expr></argument>)<pos:position pos:line="277" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="277" pos:column="72"/></expr_stmt>
        }<pos:position pos:line="278" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="280" pos:column="9">/*
         * Compare group names
         */</comment>
        <expr_stmt><expr><name pos:line="283" pos:column="9">retval<pos:position pos:line="283" pos:column="15"/></name> <operator pos:line="283" pos:column="16">=<pos:position pos:line="283" pos:column="17"/></operator> <literal type="number" pos:line="283" pos:column="18">0<pos:position pos:line="283" pos:column="19"/></literal></expr>;<pos:position pos:line="283" pos:column="20"/></expr_stmt>
        <for pos:line="284" pos:column="9">for <control pos:line="284" pos:column="13">(<init><decl><type><name pos:line="284" pos:column="14">size_t<pos:position pos:line="284" pos:column="20"/></name></type> <name pos:line="284" pos:column="21">k<pos:position pos:line="284" pos:column="22"/></name> <init pos:line="284" pos:column="23">= <expr><literal type="number" pos:line="284" pos:column="25">0<pos:position pos:line="284" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="284" pos:column="27"/></init> <condition><expr><name pos:line="284" pos:column="28">k<pos:position pos:line="284" pos:column="29"/></name> <operator pos:line="284" pos:column="30">&lt;<pos:position pos:line="284" pos:column="34"/></operator> <name pos:line="284" pos:column="32">max_attr<pos:position pos:line="284" pos:column="40"/></name></expr>;<pos:position pos:line="284" pos:column="41"/></condition> <incr><expr><operator pos:line="284" pos:column="42">++<pos:position pos:line="284" pos:column="44"/></operator><name pos:line="284" pos:column="44">k<pos:position pos:line="284" pos:column="45"/></name></expr></incr>)<pos:position pos:line="284" pos:column="46"/></control> <block pos:line="284" pos:column="47">{
            <decl_stmt><decl><type><name pos:line="285" pos:column="13">char<pos:position pos:line="285" pos:column="17"/></name> <modifier pos:line="285" pos:column="18">*<pos:position pos:line="285" pos:column="19"/></modifier></type><name pos:line="285" pos:column="19">av<pos:position pos:line="285" pos:column="21"/></name> <init pos:line="285" pos:column="22">= <expr><name pos:line="285" pos:column="24">NULL<pos:position pos:line="285" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="285" pos:column="29"/></decl_stmt>

            <comment type="block" pos:line="287" pos:column="13">/* Compare first CN= value assuming it is the same as the group name itself */</comment>
            <expr_stmt><expr><name pos:line="288" pos:column="13">av<pos:position pos:line="288" pos:column="15"/></name> <operator pos:line="288" pos:column="16">=<pos:position pos:line="288" pos:column="17"/></operator> <name><name pos:line="288" pos:column="18">attr_value<pos:position pos:line="288" pos:column="28"/></name><index pos:line="288" pos:column="28">[<expr><name pos:line="288" pos:column="29">k<pos:position pos:line="288" pos:column="30"/></name></expr>]<pos:position pos:line="288" pos:column="31"/></index></name></expr>;<pos:position pos:line="288" pos:column="32"/></expr_stmt>
            <if pos:line="289" pos:column="13">if <condition pos:line="289" pos:column="16">(<expr><operator pos:line="289" pos:column="17">!<pos:position pos:line="289" pos:column="18"/></operator><call><name pos:line="289" pos:column="18">strncasecmp<pos:position pos:line="289" pos:column="29"/></name><argument_list pos:line="289" pos:column="29">(<argument><expr><literal type="string" pos:line="289" pos:column="30">"CN="<pos:position pos:line="289" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="289" pos:column="37">av<pos:position pos:line="289" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="289" pos:column="41">3<pos:position pos:line="289" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="289" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="289" pos:column="44"/></condition><then pos:line="289" pos:column="44"> <block pos:line="289" pos:column="45">{
                <decl_stmt><decl><type><name pos:line="290" pos:column="17">char<pos:position pos:line="290" pos:column="21"/></name> <modifier pos:line="290" pos:column="22">*<pos:position pos:line="290" pos:column="23"/></modifier></type><name pos:line="290" pos:column="23">avp<pos:position pos:line="290" pos:column="26"/></name> <init pos:line="290" pos:column="27">= <expr><name pos:line="290" pos:column="29">NULL<pos:position pos:line="290" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="290" pos:column="34"/></decl_stmt>
                <expr_stmt><expr><name pos:line="291" pos:column="17">av<pos:position pos:line="291" pos:column="19"/></name> <operator pos:line="291" pos:column="20">+=<pos:position pos:line="291" pos:column="22"/></operator> <literal type="number" pos:line="291" pos:column="23">3<pos:position pos:line="291" pos:column="24"/></literal></expr>;<pos:position pos:line="291" pos:column="25"/></expr_stmt>
                <if pos:line="292" pos:column="17">if <condition pos:line="292" pos:column="20">(<expr><operator pos:line="292" pos:column="21">(<pos:position pos:line="292" pos:column="22"/></operator><name pos:line="292" pos:column="22">avp<pos:position pos:line="292" pos:column="25"/></name> <operator pos:line="292" pos:column="26">=<pos:position pos:line="292" pos:column="27"/></operator> <call><name pos:line="292" pos:column="28">strchr<pos:position pos:line="292" pos:column="34"/></name><argument_list pos:line="292" pos:column="34">(<argument><expr><name pos:line="292" pos:column="35">av<pos:position pos:line="292" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="292" pos:column="39">','<pos:position pos:line="292" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="292" pos:column="43"/></argument_list></call><operator pos:line="292" pos:column="43">)<pos:position pos:line="292" pos:column="44"/></operator></expr>)<pos:position pos:line="292" pos:column="45"/></condition><then pos:line="292" pos:column="45"> <block pos:line="292" pos:column="46">{
                    <expr_stmt><expr><operator pos:line="293" pos:column="21">*<pos:position pos:line="293" pos:column="22"/></operator><name pos:line="293" pos:column="22">avp<pos:position pos:line="293" pos:column="25"/></name> <operator pos:line="293" pos:column="26">=<pos:position pos:line="293" pos:column="27"/></operator> <literal type="char" pos:line="293" pos:column="28">'\0'<pos:position pos:line="293" pos:column="32"/></literal></expr>;<pos:position pos:line="293" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="294" pos:column="18"/></block></then></if>
            }<pos:position pos:line="295" pos:column="14"/></block></then></if>
            <if pos:line="296" pos:column="13">if <condition pos:line="296" pos:column="16">(<expr><name pos:line="296" pos:column="17">debug_enabled<pos:position pos:line="296" pos:column="30"/></name></expr>)<pos:position pos:line="296" pos:column="31"/></condition><then pos:line="296" pos:column="31"> <block pos:line="296" pos:column="32">{
                <expr_stmt><expr><call><name pos:line="297" pos:column="17">debug<pos:position pos:line="297" pos:column="22"/></name><argument_list pos:line="297" pos:column="22">(<argument><expr><operator pos:line="297" pos:column="23">(<pos:position pos:line="297" pos:column="24"/></operator><name pos:line="297" pos:column="24">char<pos:position pos:line="297" pos:column="28"/></name> <operator pos:line="297" pos:column="29">*<pos:position pos:line="297" pos:column="30"/></operator><operator pos:line="297" pos:column="30">)<pos:position pos:line="297" pos:column="31"/></operator> <literal type="string" pos:line="297" pos:column="32">"%s| %s: DEBUG: Entry %"<pos:position pos:line="297" pos:column="56"/></literal> <name pos:line="297" pos:column="57">PRIuSIZE<pos:position pos:line="297" pos:column="65"/></name>
                      <literal type="string" pos:line="298" pos:column="23">" \"%s\" in hex UTF-8 is "<pos:position pos:line="298" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="298" pos:column="51">LogTime<pos:position pos:line="298" pos:column="58"/></name><argument_list pos:line="298" pos:column="58">()<pos:position pos:line="298" pos:column="60"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="298" pos:column="62">PROGRAM<pos:position pos:line="298" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="298" pos:column="71">k<pos:position pos:line="298" pos:column="72"/></name> <operator pos:line="298" pos:column="73">+<pos:position pos:line="298" pos:column="74"/></operator> <literal type="number" pos:line="298" pos:column="75">1<pos:position pos:line="298" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="298" pos:column="78">av<pos:position pos:line="298" pos:column="80"/></name></expr></argument>)<pos:position pos:line="298" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="82"/></expr_stmt>
                <for pos:line="299" pos:column="17">for <control pos:line="299" pos:column="21">(<init><decl><type><name pos:line="299" pos:column="22">unsigned<pos:position pos:line="299" pos:column="30"/></name> <name pos:line="299" pos:column="31">int<pos:position pos:line="299" pos:column="34"/></name></type> <name pos:line="299" pos:column="35">n<pos:position pos:line="299" pos:column="36"/></name> <init pos:line="299" pos:column="37">= <expr><literal type="number" pos:line="299" pos:column="39">0<pos:position pos:line="299" pos:column="40"/></literal></expr></init></decl>;<pos:position pos:line="299" pos:column="41"/></init> <condition><expr><name><name pos:line="299" pos:column="42">av<pos:position pos:line="299" pos:column="44"/></name><index pos:line="299" pos:column="44">[<expr><name pos:line="299" pos:column="45">n<pos:position pos:line="299" pos:column="46"/></name></expr>]<pos:position pos:line="299" pos:column="47"/></index></name> <operator pos:line="299" pos:column="48">!=<pos:position pos:line="299" pos:column="50"/></operator> <literal type="char" pos:line="299" pos:column="51">'\0'<pos:position pos:line="299" pos:column="55"/></literal></expr>;<pos:position pos:line="299" pos:column="56"/></condition> <incr><expr><operator pos:line="299" pos:column="57">++<pos:position pos:line="299" pos:column="59"/></operator><name pos:line="299" pos:column="59">n<pos:position pos:line="299" pos:column="60"/></name></expr></incr>)<pos:position pos:line="299" pos:column="61"/></control>
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="300" pos:column="21">fprintf<pos:position pos:line="300" pos:column="28"/></name><argument_list pos:line="300" pos:column="28">(<argument><expr><name pos:line="300" pos:column="29">stderr<pos:position pos:line="300" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="300" pos:column="37">"%02x"<pos:position pos:line="300" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="300" pos:column="45">(<pos:position pos:line="300" pos:column="46"/></operator><name pos:line="300" pos:column="46">unsigned<pos:position pos:line="300" pos:column="54"/></name> <name pos:line="300" pos:column="55">char<pos:position pos:line="300" pos:column="59"/></name><operator pos:line="300" pos:column="59">)<pos:position pos:line="300" pos:column="60"/></operator> <name><name pos:line="300" pos:column="61">av<pos:position pos:line="300" pos:column="63"/></name><index pos:line="300" pos:column="63">[<expr><name pos:line="300" pos:column="64">n<pos:position pos:line="300" pos:column="65"/></name></expr>]<pos:position pos:line="300" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="300" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="300" pos:column="68"/></expr_stmt></block></for>
                <expr_stmt><expr><call><name pos:line="301" pos:column="17">fprintf<pos:position pos:line="301" pos:column="24"/></name><argument_list pos:line="301" pos:column="24">(<argument><expr><name pos:line="301" pos:column="25">stderr<pos:position pos:line="301" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="301" pos:column="33">"\n"<pos:position pos:line="301" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="301" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="301" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="302" pos:column="14"/></block></then></if>
            <if pos:line="303" pos:column="13">if <condition pos:line="303" pos:column="16">(<expr><operator pos:line="303" pos:column="17">!<pos:position pos:line="303" pos:column="18"/></operator><call><name pos:line="303" pos:column="18">strcasecmp<pos:position pos:line="303" pos:column="28"/></name><argument_list pos:line="303" pos:column="28">(<argument><expr><name pos:line="303" pos:column="29">group<pos:position pos:line="303" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="303" pos:column="36">av<pos:position pos:line="303" pos:column="38"/></name></expr></argument>)<pos:position pos:line="303" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="303" pos:column="40"/></condition><then pos:line="303" pos:column="40"> <block pos:line="303" pos:column="41">{
                <expr_stmt><expr><name pos:line="304" pos:column="17">retval<pos:position pos:line="304" pos:column="23"/></name> <operator pos:line="304" pos:column="24">=<pos:position pos:line="304" pos:column="25"/></operator> <literal type="number" pos:line="304" pos:column="26">1<pos:position pos:line="304" pos:column="27"/></literal></expr>;<pos:position pos:line="304" pos:column="28"/></expr_stmt>
                <if pos:line="305" pos:column="17">if <condition pos:line="305" pos:column="20">(<expr><name pos:line="305" pos:column="21">debug_enabled<pos:position pos:line="305" pos:column="34"/></name></expr>)<pos:position pos:line="305" pos:column="35"/></condition><then pos:line="305" pos:column="35">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="306" pos:column="21">debug<pos:position pos:line="306" pos:column="26"/></name><argument_list pos:line="306" pos:column="26">(<argument><expr><operator pos:line="306" pos:column="27">(<pos:position pos:line="306" pos:column="28"/></operator><name pos:line="306" pos:column="28">char<pos:position pos:line="306" pos:column="32"/></name> <operator pos:line="306" pos:column="33">*<pos:position pos:line="306" pos:column="34"/></operator><operator pos:line="306" pos:column="34">)<pos:position pos:line="306" pos:column="35"/></operator> <literal type="string" pos:line="306" pos:column="36">"%s| %s: DEBUG: Entry %"<pos:position pos:line="306" pos:column="60"/></literal> <name pos:line="306" pos:column="61">PRIuSIZE<pos:position pos:line="306" pos:column="69"/></name>
                          <literal type="string" pos:line="307" pos:column="27">" \"%s\" matches group name \"%s\"\n"<pos:position pos:line="307" pos:column="64"/></literal></expr></argument>, <argument><expr><call><name pos:line="307" pos:column="66">LogTime<pos:position pos:line="307" pos:column="73"/></name><argument_list pos:line="307" pos:column="73">()<pos:position pos:line="307" pos:column="75"/></argument_list></call></expr></argument>,
                          <argument><expr><name pos:line="308" pos:column="27">PROGRAM<pos:position pos:line="308" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="308" pos:column="36">k<pos:position pos:line="308" pos:column="37"/></name> <operator pos:line="308" pos:column="38">+<pos:position pos:line="308" pos:column="39"/></operator> <literal type="number" pos:line="308" pos:column="40">1<pos:position pos:line="308" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="308" pos:column="43">av<pos:position pos:line="308" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="308" pos:column="47">group<pos:position pos:line="308" pos:column="52"/></name></expr></argument>)<pos:position pos:line="308" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="308" pos:column="54"/></expr_stmt></block></then>
                <else pos:line="309" pos:column="17">else
                    <block type="pseudo"><break pos:line="310" pos:column="21">break;<pos:position pos:line="310" pos:column="27"/></break></block></else></if>
            }<pos:position pos:line="311" pos:column="14"/></block></then> <else pos:line="311" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="312" pos:column="17">debug<pos:position pos:line="312" pos:column="22"/></name><argument_list pos:line="312" pos:column="22">(<argument><expr><operator pos:line="312" pos:column="23">(<pos:position pos:line="312" pos:column="24"/></operator><name pos:line="312" pos:column="24">char<pos:position pos:line="312" pos:column="28"/></name> <operator pos:line="312" pos:column="29">*<pos:position pos:line="312" pos:column="30"/></operator><operator pos:line="312" pos:column="30">)<pos:position pos:line="312" pos:column="31"/></operator> <literal type="string" pos:line="312" pos:column="32">"%s| %s: DEBUG: Entry %"<pos:position pos:line="312" pos:column="56"/></literal> <name pos:line="312" pos:column="57">PRIuSIZE<pos:position pos:line="312" pos:column="65"/></name>
                      <literal type="string" pos:line="313" pos:column="23">" \"%s\" does not match group name \"%s\"\n"<pos:position pos:line="313" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="313" pos:column="69">LogTime<pos:position pos:line="313" pos:column="76"/></name><argument_list pos:line="313" pos:column="76">()<pos:position pos:line="313" pos:column="78"/></argument_list></call></expr></argument>,
                      <argument><expr><name pos:line="314" pos:column="23">PROGRAM<pos:position pos:line="314" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="314" pos:column="32">k<pos:position pos:line="314" pos:column="33"/></name> <operator pos:line="314" pos:column="34">+<pos:position pos:line="314" pos:column="35"/></operator> <literal type="number" pos:line="314" pos:column="36">1<pos:position pos:line="314" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="314" pos:column="39">av<pos:position pos:line="314" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="314" pos:column="43">group<pos:position pos:line="314" pos:column="48"/></name></expr></argument>)<pos:position pos:line="314" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="50"/></expr_stmt></block></else></if>
        }<pos:position pos:line="315" pos:column="10"/></block></for>
        <comment type="block" pos:line="316" pos:column="9">/*
         * Do recursive group search for AD only since posixgroups can not contain other groups
         */</comment>
        <if pos:line="319" pos:column="9">if <condition pos:line="319" pos:column="12">(<expr><operator pos:line="319" pos:column="13">!<pos:position pos:line="319" pos:column="14"/></operator><name pos:line="319" pos:column="14">retval<pos:position pos:line="319" pos:column="20"/></name> <operator pos:line="319" pos:column="21">&amp;&amp;<pos:position pos:line="319" pos:column="31"/></operator> <name><name pos:line="319" pos:column="24">margs<pos:position pos:line="319" pos:column="29"/></name><operator pos:line="319" pos:column="29">-&gt;<pos:position pos:line="319" pos:column="34"/></operator><name pos:line="319" pos:column="31">AD<pos:position pos:line="319" pos:column="33"/></name></name></expr>)<pos:position pos:line="319" pos:column="34"/></condition><then pos:line="319" pos:column="34"> <block pos:line="319" pos:column="35">{
            <if pos:line="320" pos:column="13">if <condition pos:line="320" pos:column="16">(<expr><name pos:line="320" pos:column="17">debug_enabled<pos:position pos:line="320" pos:column="30"/></name> <operator pos:line="320" pos:column="31">&amp;&amp;<pos:position pos:line="320" pos:column="41"/></operator> <name pos:line="320" pos:column="34">max_attr<pos:position pos:line="320" pos:column="42"/></name> <operator pos:line="320" pos:column="43">&gt;<pos:position pos:line="320" pos:column="47"/></operator> <literal type="number" pos:line="320" pos:column="45">0<pos:position pos:line="320" pos:column="46"/></literal></expr>)<pos:position pos:line="320" pos:column="47"/></condition><then pos:line="320" pos:column="47"> <block pos:line="320" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="321" pos:column="17">debug<pos:position pos:line="321" pos:column="22"/></name><argument_list pos:line="321" pos:column="22">(<argument><expr><operator pos:line="321" pos:column="23">(<pos:position pos:line="321" pos:column="24"/></operator><name pos:line="321" pos:column="24">char<pos:position pos:line="321" pos:column="28"/></name> <operator pos:line="321" pos:column="29">*<pos:position pos:line="321" pos:column="30"/></operator><operator pos:line="321" pos:column="30">)<pos:position pos:line="321" pos:column="31"/></operator>
                      <literal type="string" pos:line="322" pos:column="23">"%s| %s: DEBUG: Perform recursive group search\n"<pos:position pos:line="322" pos:column="72"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="323" pos:column="23">LogTime<pos:position pos:line="323" pos:column="30"/></name><argument_list pos:line="323" pos:column="30">()<pos:position pos:line="323" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="323" pos:column="34">PROGRAM<pos:position pos:line="323" pos:column="41"/></name></expr></argument>)<pos:position pos:line="323" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="324" pos:column="14"/></block></then></if>
            <for pos:line="325" pos:column="13">for <control pos:line="325" pos:column="17">(<init><decl><type><name pos:line="325" pos:column="18">size_t<pos:position pos:line="325" pos:column="24"/></name></type> <name pos:line="325" pos:column="25">j<pos:position pos:line="325" pos:column="26"/></name> <init pos:line="325" pos:column="27">= <expr><literal type="number" pos:line="325" pos:column="29">0<pos:position pos:line="325" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="325" pos:column="31"/></init> <condition><expr><name pos:line="325" pos:column="32">j<pos:position pos:line="325" pos:column="33"/></name> <operator pos:line="325" pos:column="34">&lt;<pos:position pos:line="325" pos:column="38"/></operator> <name pos:line="325" pos:column="36">max_attr<pos:position pos:line="325" pos:column="44"/></name></expr>;<pos:position pos:line="325" pos:column="45"/></condition> <incr><expr><operator pos:line="325" pos:column="46">++<pos:position pos:line="325" pos:column="48"/></operator><name pos:line="325" pos:column="48">j<pos:position pos:line="325" pos:column="49"/></name></expr></incr>)<pos:position pos:line="325" pos:column="50"/></control> <block pos:line="325" pos:column="51">{
                <decl_stmt><decl><type><name pos:line="326" pos:column="17">char<pos:position pos:line="326" pos:column="21"/></name> <modifier pos:line="326" pos:column="22">*<pos:position pos:line="326" pos:column="23"/></modifier></type><name pos:line="326" pos:column="23">av<pos:position pos:line="326" pos:column="25"/></name> <init pos:line="326" pos:column="26">= <expr><name pos:line="326" pos:column="28">NULL<pos:position pos:line="326" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="326" pos:column="33"/></decl_stmt>

                <expr_stmt><expr><name pos:line="328" pos:column="17">av<pos:position pos:line="328" pos:column="19"/></name> <operator pos:line="328" pos:column="20">=<pos:position pos:line="328" pos:column="21"/></operator> <name><name pos:line="328" pos:column="22">attr_value<pos:position pos:line="328" pos:column="32"/></name><index pos:line="328" pos:column="32">[<expr><name pos:line="328" pos:column="33">j<pos:position pos:line="328" pos:column="34"/></name></expr>]<pos:position pos:line="328" pos:column="35"/></index></name></expr>;<pos:position pos:line="328" pos:column="36"/></expr_stmt>
                <if pos:line="329" pos:column="17">if <condition pos:line="329" pos:column="20">(<expr><call><name pos:line="329" pos:column="21">search_group_tree<pos:position pos:line="329" pos:column="38"/></name><argument_list pos:line="329" pos:column="38">(<argument><expr><name pos:line="329" pos:column="39">margs<pos:position pos:line="329" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="329" pos:column="46">ld<pos:position pos:line="329" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="329" pos:column="50">bindp<pos:position pos:line="329" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="329" pos:column="57">av<pos:position pos:line="329" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="329" pos:column="61">group<pos:position pos:line="329" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="329" pos:column="68">1<pos:position pos:line="329" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="329" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="329" pos:column="71"/></condition><then pos:line="329" pos:column="71"> <block pos:line="329" pos:column="72">{
                    <expr_stmt><expr><name pos:line="330" pos:column="21">retval<pos:position pos:line="330" pos:column="27"/></name> <operator pos:line="330" pos:column="28">=<pos:position pos:line="330" pos:column="29"/></operator> <literal type="number" pos:line="330" pos:column="30">1<pos:position pos:line="330" pos:column="31"/></literal></expr>;<pos:position pos:line="330" pos:column="32"/></expr_stmt>
                    <if pos:line="331" pos:column="21">if <condition pos:line="331" pos:column="24">(<expr><operator pos:line="331" pos:column="25">!<pos:position pos:line="331" pos:column="26"/></operator><call><name pos:line="331" pos:column="26">strncasecmp<pos:position pos:line="331" pos:column="37"/></name><argument_list pos:line="331" pos:column="37">(<argument><expr><literal type="string" pos:line="331" pos:column="38">"CN="<pos:position pos:line="331" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="331" pos:column="45">av<pos:position pos:line="331" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="331" pos:column="49">3<pos:position pos:line="331" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="331" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="331" pos:column="52"/></condition><then pos:line="331" pos:column="52"> <block pos:line="331" pos:column="53">{
                        <decl_stmt><decl><type><name pos:line="332" pos:column="25">char<pos:position pos:line="332" pos:column="29"/></name> <modifier pos:line="332" pos:column="30">*<pos:position pos:line="332" pos:column="31"/></modifier></type><name pos:line="332" pos:column="31">avp<pos:position pos:line="332" pos:column="34"/></name> <init pos:line="332" pos:column="35">= <expr><name pos:line="332" pos:column="37">NULL<pos:position pos:line="332" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="332" pos:column="42"/></decl_stmt>
                        <expr_stmt><expr><name pos:line="333" pos:column="25">av<pos:position pos:line="333" pos:column="27"/></name> <operator pos:line="333" pos:column="28">+=<pos:position pos:line="333" pos:column="30"/></operator> <literal type="number" pos:line="333" pos:column="31">3<pos:position pos:line="333" pos:column="32"/></literal></expr>;<pos:position pos:line="333" pos:column="33"/></expr_stmt>
                        <if pos:line="334" pos:column="25">if <condition pos:line="334" pos:column="28">(<expr><operator pos:line="334" pos:column="29">(<pos:position pos:line="334" pos:column="30"/></operator><name pos:line="334" pos:column="30">avp<pos:position pos:line="334" pos:column="33"/></name> <operator pos:line="334" pos:column="34">=<pos:position pos:line="334" pos:column="35"/></operator> <call><name pos:line="334" pos:column="36">strchr<pos:position pos:line="334" pos:column="42"/></name><argument_list pos:line="334" pos:column="42">(<argument><expr><name pos:line="334" pos:column="43">av<pos:position pos:line="334" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="334" pos:column="47">','<pos:position pos:line="334" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="334" pos:column="51"/></argument_list></call><operator pos:line="334" pos:column="51">)<pos:position pos:line="334" pos:column="52"/></operator></expr>)<pos:position pos:line="334" pos:column="53"/></condition><then pos:line="334" pos:column="53"> <block pos:line="334" pos:column="54">{
                            <expr_stmt><expr><operator pos:line="335" pos:column="29">*<pos:position pos:line="335" pos:column="30"/></operator><name pos:line="335" pos:column="30">avp<pos:position pos:line="335" pos:column="33"/></name> <operator pos:line="335" pos:column="34">=<pos:position pos:line="335" pos:column="35"/></operator> <literal type="char" pos:line="335" pos:column="36">'\0'<pos:position pos:line="335" pos:column="40"/></literal></expr>;<pos:position pos:line="335" pos:column="41"/></expr_stmt>
                        }<pos:position pos:line="336" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="337" pos:column="22"/></block></then></if>
                    <if pos:line="338" pos:column="21">if <condition pos:line="338" pos:column="24">(<expr><name pos:line="338" pos:column="25">debug_enabled<pos:position pos:line="338" pos:column="38"/></name></expr>)<pos:position pos:line="338" pos:column="39"/></condition><then pos:line="338" pos:column="39">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="339" pos:column="25">debug<pos:position pos:line="339" pos:column="30"/></name><argument_list pos:line="339" pos:column="30">(<argument><expr><operator pos:line="339" pos:column="31">(<pos:position pos:line="339" pos:column="32"/></operator><name pos:line="339" pos:column="32">char<pos:position pos:line="339" pos:column="36"/></name> <operator pos:line="339" pos:column="37">*<pos:position pos:line="339" pos:column="38"/></operator><operator pos:line="339" pos:column="38">)<pos:position pos:line="339" pos:column="39"/></operator> <literal type="string" pos:line="339" pos:column="40">"%s| %s: DEBUG: Entry %"<pos:position pos:line="339" pos:column="64"/></literal> <name pos:line="339" pos:column="65">PRIuSIZE<pos:position pos:line="339" pos:column="73"/></name>
                              <literal type="string" pos:line="340" pos:column="31">" group \"%s\" is (in)direct member of group \"%s\"\n"<pos:position pos:line="340" pos:column="85"/></literal></expr></argument>,
                              <argument><expr><call><name pos:line="341" pos:column="31">LogTime<pos:position pos:line="341" pos:column="38"/></name><argument_list pos:line="341" pos:column="38">()<pos:position pos:line="341" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="341" pos:column="42">PROGRAM<pos:position pos:line="341" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="51">j<pos:position pos:line="341" pos:column="52"/></name> <operator pos:line="341" pos:column="53">+<pos:position pos:line="341" pos:column="54"/></operator> <literal type="number" pos:line="341" pos:column="55">1<pos:position pos:line="341" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="341" pos:column="58">av<pos:position pos:line="341" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="341" pos:column="62">group<pos:position pos:line="341" pos:column="67"/></name></expr></argument>)<pos:position pos:line="341" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="341" pos:column="69"/></expr_stmt></block></then>
                    <else pos:line="342" pos:column="21">else
                        <block type="pseudo"><break pos:line="343" pos:column="25">break;<pos:position pos:line="343" pos:column="31"/></break></block></else></if>
                }<pos:position pos:line="344" pos:column="18"/></block></then></if>
            }<pos:position pos:line="345" pos:column="14"/></block></for>
        }<pos:position pos:line="346" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="347" pos:column="9">/*
         * Cleanup
         */</comment>
        <if pos:line="350" pos:column="9">if <condition pos:line="350" pos:column="12">(<expr><name pos:line="350" pos:column="13">attr_value<pos:position pos:line="350" pos:column="23"/></name></expr>)<pos:position pos:line="350" pos:column="24"/></condition><then pos:line="350" pos:column="24"> <block pos:line="350" pos:column="25">{
            <for pos:line="351" pos:column="13">for <control pos:line="351" pos:column="17">(<init><decl><type><name pos:line="351" pos:column="18">size_t<pos:position pos:line="351" pos:column="24"/></name></type> <name pos:line="351" pos:column="25">j<pos:position pos:line="351" pos:column="26"/></name> <init pos:line="351" pos:column="27">= <expr><literal type="number" pos:line="351" pos:column="29">0<pos:position pos:line="351" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="351" pos:column="31"/></init> <condition><expr><name pos:line="351" pos:column="32">j<pos:position pos:line="351" pos:column="33"/></name> <operator pos:line="351" pos:column="34">&lt;<pos:position pos:line="351" pos:column="38"/></operator> <name pos:line="351" pos:column="36">max_attr<pos:position pos:line="351" pos:column="44"/></name></expr>;<pos:position pos:line="351" pos:column="45"/></condition> <incr><expr><operator pos:line="351" pos:column="46">++<pos:position pos:line="351" pos:column="48"/></operator><name pos:line="351" pos:column="48">j<pos:position pos:line="351" pos:column="49"/></name></expr></incr>)<pos:position pos:line="351" pos:column="50"/></control> <block pos:line="351" pos:column="51">{
                <expr_stmt><expr><call><name pos:line="352" pos:column="17">xfree<pos:position pos:line="352" pos:column="22"/></name><argument_list pos:line="352" pos:column="22">(<argument><expr><name><name pos:line="352" pos:column="23">attr_value<pos:position pos:line="352" pos:column="33"/></name><index pos:line="352" pos:column="33">[<expr><name pos:line="352" pos:column="34">j<pos:position pos:line="352" pos:column="35"/></name></expr>]<pos:position pos:line="352" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="352" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="352" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="353" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="354" pos:column="13">safe_free<pos:position pos:line="354" pos:column="22"/></name><argument_list pos:line="354" pos:column="22">(<argument><expr><name pos:line="354" pos:column="23">attr_value<pos:position pos:line="354" pos:column="33"/></name></expr></argument>)<pos:position pos:line="354" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="354" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="355" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="356" pos:column="9">ldap_msgfree<pos:position pos:line="356" pos:column="21"/></name><argument_list pos:line="356" pos:column="21">(<argument><expr><name pos:line="356" pos:column="22">res<pos:position pos:line="356" pos:column="25"/></name></expr></argument>)<pos:position pos:line="356" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="356" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="357" pos:column="6"/></block></then> <elseif pos:line="357" pos:column="7">else <if pos:line="357" pos:column="12">if <condition pos:line="357" pos:column="15">(<expr><call><name pos:line="357" pos:column="16">ldap_count_entries<pos:position pos:line="357" pos:column="34"/></name><argument_list pos:line="357" pos:column="34">(<argument><expr><name pos:line="357" pos:column="35">ld<pos:position pos:line="357" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="357" pos:column="39">res<pos:position pos:line="357" pos:column="42"/></name></expr></argument>)<pos:position pos:line="357" pos:column="43"/></argument_list></call> <operator pos:line="357" pos:column="44">==<pos:position pos:line="357" pos:column="46"/></operator> <literal type="number" pos:line="357" pos:column="47">0<pos:position pos:line="357" pos:column="48"/></literal> <operator pos:line="357" pos:column="49">&amp;&amp;<pos:position pos:line="357" pos:column="59"/></operator> <name><name pos:line="357" pos:column="52">margs<pos:position pos:line="357" pos:column="57"/></name><operator pos:line="357" pos:column="57">-&gt;<pos:position pos:line="357" pos:column="62"/></operator><name pos:line="357" pos:column="59">AD<pos:position pos:line="357" pos:column="61"/></name></name></expr>)<pos:position pos:line="357" pos:column="62"/></condition><then pos:line="357" pos:column="62"> <block pos:line="357" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="358" pos:column="9">ldap_msgfree<pos:position pos:line="358" pos:column="21"/></name><argument_list pos:line="358" pos:column="21">(<argument><expr><name pos:line="358" pos:column="22">res<pos:position pos:line="358" pos:column="25"/></name></expr></argument>)<pos:position pos:line="358" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="358" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="359" pos:column="9">ldap_unbind_ext<pos:position pos:line="359" pos:column="24"/></name><argument_list pos:line="359" pos:column="24">(<argument><expr><name pos:line="359" pos:column="25">ld<pos:position pos:line="359" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="29">NULL<pos:position pos:line="359" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="35">NULL<pos:position pos:line="359" pos:column="39"/></name></expr></argument>)<pos:position pos:line="359" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="359" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="360" pos:column="9">ld<pos:position pos:line="360" pos:column="11"/></name> <operator pos:line="360" pos:column="12">=<pos:position pos:line="360" pos:column="13"/></operator> <name pos:line="360" pos:column="14">NULL<pos:position pos:line="360" pos:column="18"/></name></expr>;<pos:position pos:line="360" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="361" pos:column="9">retval<pos:position pos:line="361" pos:column="15"/></name> <operator pos:line="361" pos:column="16">=<pos:position pos:line="361" pos:column="17"/></operator> <literal type="number" pos:line="361" pos:column="18">0<pos:position pos:line="361" pos:column="19"/></literal></expr>;<pos:position pos:line="361" pos:column="20"/></expr_stmt>
        <goto pos:line="362" pos:column="9">goto <name pos:line="362" pos:column="14">cleanup<pos:position pos:line="362" pos:column="21"/></name>;<pos:position pos:line="362" pos:column="22"/></goto>
    }<pos:position pos:line="363" pos:column="6"/></block></then></if></elseif> <else pos:line="363" pos:column="7">else <block pos:line="363" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="364" pos:column="9">ldap_msgfree<pos:position pos:line="364" pos:column="21"/></name><argument_list pos:line="364" pos:column="21">(<argument><expr><name pos:line="364" pos:column="22">res<pos:position pos:line="364" pos:column="25"/></name></expr></argument>)<pos:position pos:line="364" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="364" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="365" pos:column="9">retval<pos:position pos:line="365" pos:column="15"/></name> <operator pos:line="365" pos:column="16">=<pos:position pos:line="365" pos:column="17"/></operator> <literal type="number" pos:line="365" pos:column="18">0<pos:position pos:line="365" pos:column="19"/></literal></expr>;<pos:position pos:line="365" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="366" pos:column="6"/></block></else></if>

    <if pos:line="368" pos:column="5">if <condition pos:line="368" pos:column="8">(<expr><name pos:line="368" pos:column="9">retval<pos:position pos:line="368" pos:column="15"/></name> <operator pos:line="368" pos:column="16">==<pos:position pos:line="368" pos:column="18"/></operator> <literal type="number" pos:line="368" pos:column="19">0<pos:position pos:line="368" pos:column="20"/></literal></expr>)<pos:position pos:line="368" pos:column="21"/></condition><then pos:line="368" pos:column="21"> <block pos:line="368" pos:column="22">{
        <comment type="block" pos:line="369" pos:column="9">/*
         * Check for primary Group membership
         */</comment>
        <expr_stmt><expr><call><name pos:line="372" pos:column="9">debug<pos:position pos:line="372" pos:column="14"/></name><argument_list pos:line="372" pos:column="14">(<argument><expr><operator pos:line="372" pos:column="15">(<pos:position pos:line="372" pos:column="16"/></operator><name pos:line="372" pos:column="16">char<pos:position pos:line="372" pos:column="20"/></name> <operator pos:line="372" pos:column="21">*<pos:position pos:line="372" pos:column="22"/></operator><operator pos:line="372" pos:column="22">)<pos:position pos:line="372" pos:column="23"/></operator>
              <literal type="string" pos:line="373" pos:column="15">"%s| %s: DEBUG: Search for primary group membership: \"%s\"\n"<pos:position pos:line="373" pos:column="77"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="374" pos:column="15">LogTime<pos:position pos:line="374" pos:column="22"/></name><argument_list pos:line="374" pos:column="22">()<pos:position pos:line="374" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="374" pos:column="26">PROGRAM<pos:position pos:line="374" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="374" pos:column="35">group<pos:position pos:line="374" pos:column="40"/></name></expr></argument>)<pos:position pos:line="374" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="374" pos:column="42"/></expr_stmt>
        <if pos:line="375" pos:column="9">if <condition pos:line="375" pos:column="12">(<expr><name><name pos:line="375" pos:column="13">margs<pos:position pos:line="375" pos:column="18"/></name><operator pos:line="375" pos:column="18">-&gt;<pos:position pos:line="375" pos:column="23"/></operator><name pos:line="375" pos:column="20">AD<pos:position pos:line="375" pos:column="22"/></name></name></expr>)<pos:position pos:line="375" pos:column="23"/></condition><then pos:line="375" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><name pos:line="376" pos:column="13">filter<pos:position pos:line="376" pos:column="19"/></name> <operator pos:line="376" pos:column="20">=<pos:position pos:line="376" pos:column="21"/></operator> <operator pos:line="376" pos:column="22">(<pos:position pos:line="376" pos:column="23"/></operator><name pos:line="376" pos:column="23">char<pos:position pos:line="376" pos:column="27"/></name> <operator pos:line="376" pos:column="28">*<pos:position pos:line="376" pos:column="29"/></operator><operator pos:line="376" pos:column="29">)<pos:position pos:line="376" pos:column="30"/></operator> <name pos:line="376" pos:column="31">FILTER_AD<pos:position pos:line="376" pos:column="40"/></name></expr>;<pos:position pos:line="376" pos:column="41"/></expr_stmt></block></then>
        <else pos:line="377" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="378" pos:column="13">filter<pos:position pos:line="378" pos:column="19"/></name> <operator pos:line="378" pos:column="20">=<pos:position pos:line="378" pos:column="21"/></operator> <operator pos:line="378" pos:column="22">(<pos:position pos:line="378" pos:column="23"/></operator><name pos:line="378" pos:column="23">char<pos:position pos:line="378" pos:column="27"/></name> <operator pos:line="378" pos:column="28">*<pos:position pos:line="378" pos:column="29"/></operator><operator pos:line="378" pos:column="29">)<pos:position pos:line="378" pos:column="30"/></operator> <name pos:line="378" pos:column="31">FILTER_UID<pos:position pos:line="378" pos:column="41"/></name></expr>;<pos:position pos:line="378" pos:column="42"/></expr_stmt></block></else></if>

        <expr_stmt><expr><name pos:line="380" pos:column="9">ldap_filter_esc<pos:position pos:line="380" pos:column="24"/></name> <operator pos:line="380" pos:column="25">=<pos:position pos:line="380" pos:column="26"/></operator> <call><name pos:line="380" pos:column="27">escape_filter<pos:position pos:line="380" pos:column="40"/></name><argument_list pos:line="380" pos:column="40">(<argument><expr><name pos:line="380" pos:column="41">user<pos:position pos:line="380" pos:column="45"/></name></expr></argument>)<pos:position pos:line="380" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="380" pos:column="47"/></expr_stmt>

        <expr_stmt><expr><name pos:line="382" pos:column="9">se_len<pos:position pos:line="382" pos:column="15"/></name> <operator pos:line="382" pos:column="16">=<pos:position pos:line="382" pos:column="17"/></operator> <call><name pos:line="382" pos:column="18">strlen<pos:position pos:line="382" pos:column="24"/></name><argument_list pos:line="382" pos:column="24">(<argument><expr><name pos:line="382" pos:column="25">filter<pos:position pos:line="382" pos:column="31"/></name></expr></argument>)<pos:position pos:line="382" pos:column="32"/></argument_list></call> <operator pos:line="382" pos:column="33">+<pos:position pos:line="382" pos:column="34"/></operator> <call><name pos:line="382" pos:column="35">strlen<pos:position pos:line="382" pos:column="41"/></name><argument_list pos:line="382" pos:column="41">(<argument><expr><name pos:line="382" pos:column="42">ldap_filter_esc<pos:position pos:line="382" pos:column="57"/></name></expr></argument>)<pos:position pos:line="382" pos:column="58"/></argument_list></call> <operator pos:line="382" pos:column="59">+<pos:position pos:line="382" pos:column="60"/></operator> <literal type="number" pos:line="382" pos:column="61">1<pos:position pos:line="382" pos:column="62"/></literal></expr>;<pos:position pos:line="382" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><name pos:line="383" pos:column="9">search_exp<pos:position pos:line="383" pos:column="19"/></name> <operator pos:line="383" pos:column="20">=<pos:position pos:line="383" pos:column="21"/></operator> <operator pos:line="383" pos:column="22">(<pos:position pos:line="383" pos:column="23"/></operator><name pos:line="383" pos:column="23">char<pos:position pos:line="383" pos:column="27"/></name> <operator pos:line="383" pos:column="28">*<pos:position pos:line="383" pos:column="29"/></operator><operator pos:line="383" pos:column="29">)<pos:position pos:line="383" pos:column="30"/></operator> <call><name pos:line="383" pos:column="31">xmalloc<pos:position pos:line="383" pos:column="38"/></name><argument_list pos:line="383" pos:column="38">(<argument><expr><name pos:line="383" pos:column="39">se_len<pos:position pos:line="383" pos:column="45"/></name></expr></argument>)<pos:position pos:line="383" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="383" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="384" pos:column="9">snprintf<pos:position pos:line="384" pos:column="17"/></name><argument_list pos:line="384" pos:column="17">(<argument><expr><name pos:line="384" pos:column="18">search_exp<pos:position pos:line="384" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="384" pos:column="30">se_len<pos:position pos:line="384" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="384" pos:column="38">filter<pos:position pos:line="384" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="384" pos:column="46">ldap_filter_esc<pos:position pos:line="384" pos:column="61"/></name></expr></argument>)<pos:position pos:line="384" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="384" pos:column="63"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="386" pos:column="9">xfree<pos:position pos:line="386" pos:column="14"/></name><argument_list pos:line="386" pos:column="14">(<argument><expr><name pos:line="386" pos:column="15">ldap_filter_esc<pos:position pos:line="386" pos:column="30"/></name></expr></argument>)<pos:position pos:line="386" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="386" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="388" pos:column="9">debug<pos:position pos:line="388" pos:column="14"/></name><argument_list pos:line="388" pos:column="14">(<argument><expr><operator pos:line="388" pos:column="15">(<pos:position pos:line="388" pos:column="16"/></operator><name pos:line="388" pos:column="16">char<pos:position pos:line="388" pos:column="20"/></name> <operator pos:line="388" pos:column="21">*<pos:position pos:line="388" pos:column="22"/></operator><operator pos:line="388" pos:column="22">)<pos:position pos:line="388" pos:column="23"/></operator>
              <literal type="string" pos:line="389" pos:column="15">"%s| %s: DEBUG: Search ldap server with bind path %s and filter: %s\n"<pos:position pos:line="389" pos:column="85"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="390" pos:column="15">LogTime<pos:position pos:line="390" pos:column="22"/></name><argument_list pos:line="390" pos:column="22">()<pos:position pos:line="390" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="390" pos:column="26">PROGRAM<pos:position pos:line="390" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="390" pos:column="35">bindp<pos:position pos:line="390" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="390" pos:column="42">search_exp<pos:position pos:line="390" pos:column="52"/></name></expr></argument>)<pos:position pos:line="390" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="390" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="391" pos:column="9">rc<pos:position pos:line="391" pos:column="11"/></name> <operator pos:line="391" pos:column="12">=<pos:position pos:line="391" pos:column="13"/></operator> <call><name pos:line="391" pos:column="14">ldap_search_ext_s<pos:position pos:line="391" pos:column="31"/></name><argument_list pos:line="391" pos:column="31">(<argument><expr><name pos:line="391" pos:column="32">ld<pos:position pos:line="391" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="391" pos:column="36">bindp<pos:position pos:line="391" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="391" pos:column="43">LDAP_SCOPE_SUBTREE<pos:position pos:line="391" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="391" pos:column="63">search_exp<pos:position pos:line="391" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="391" pos:column="75">NULL<pos:position pos:line="391" pos:column="79"/></name></expr></argument>,
                               <argument><expr><literal type="number" pos:line="392" pos:column="32">0<pos:position pos:line="392" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="392" pos:column="35">NULL<pos:position pos:line="392" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="392" pos:column="41">NULL<pos:position pos:line="392" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="392" pos:column="47">&amp;<pos:position pos:line="392" pos:column="52"/></operator><name pos:line="392" pos:column="48">searchtime<pos:position pos:line="392" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="392" pos:column="60">0<pos:position pos:line="392" pos:column="61"/></literal></expr></argument>, <argument><expr><operator pos:line="392" pos:column="63">&amp;<pos:position pos:line="392" pos:column="68"/></operator><name pos:line="392" pos:column="64">res<pos:position pos:line="392" pos:column="67"/></name></expr></argument>)<pos:position pos:line="392" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="392" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="393" pos:column="9">xfree<pos:position pos:line="393" pos:column="14"/></name><argument_list pos:line="393" pos:column="14">(<argument><expr><name pos:line="393" pos:column="15">search_exp<pos:position pos:line="393" pos:column="25"/></name></expr></argument>)<pos:position pos:line="393" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="393" pos:column="27"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="395" pos:column="9">debug<pos:position pos:line="395" pos:column="14"/></name><argument_list pos:line="395" pos:column="14">(<argument><expr><operator pos:line="395" pos:column="15">(<pos:position pos:line="395" pos:column="16"/></operator><name pos:line="395" pos:column="16">char<pos:position pos:line="395" pos:column="20"/></name> <operator pos:line="395" pos:column="21">*<pos:position pos:line="395" pos:column="22"/></operator><operator pos:line="395" pos:column="22">)<pos:position pos:line="395" pos:column="23"/></operator> <literal type="string" pos:line="395" pos:column="24">"%s| %s: DEBUG: Found %d ldap entr%s\n"<pos:position pos:line="395" pos:column="63"/></literal></expr></argument>, <argument><expr><call><name pos:line="395" pos:column="65">LogTime<pos:position pos:line="395" pos:column="72"/></name><argument_list pos:line="395" pos:column="72">()<pos:position pos:line="395" pos:column="74"/></argument_list></call></expr></argument>,
              <argument><expr><name pos:line="396" pos:column="15">PROGRAM<pos:position pos:line="396" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="396" pos:column="24">ldap_count_entries<pos:position pos:line="396" pos:column="42"/></name><argument_list pos:line="396" pos:column="42">(<argument><expr><name pos:line="396" pos:column="43">ld<pos:position pos:line="396" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="396" pos:column="47">res<pos:position pos:line="396" pos:column="50"/></name></expr></argument>)<pos:position pos:line="396" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="396" pos:column="53">ldap_count_entries<pos:position pos:line="396" pos:column="71"/></name><argument_list pos:line="396" pos:column="71">(<argument><expr><name pos:line="396" pos:column="72">ld<pos:position pos:line="396" pos:column="74"/></name></expr></argument>,
                      <argument><expr><name pos:line="397" pos:column="23">res<pos:position pos:line="397" pos:column="26"/></name></expr></argument>)<pos:position pos:line="397" pos:column="27"/></argument_list></call> <operator pos:line="397" pos:column="28">&gt;<pos:position pos:line="397" pos:column="32"/></operator> <literal type="number" pos:line="397" pos:column="30">1<pos:position pos:line="397" pos:column="31"/></literal> <operator pos:line="397" pos:column="32">||<pos:position pos:line="397" pos:column="34"/></operator> <call><name pos:line="397" pos:column="35">ldap_count_entries<pos:position pos:line="397" pos:column="53"/></name><argument_list pos:line="397" pos:column="53">(<argument><expr><name pos:line="397" pos:column="54">ld<pos:position pos:line="397" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="397" pos:column="58">res<pos:position pos:line="397" pos:column="61"/></name></expr></argument>)<pos:position pos:line="397" pos:column="62"/></argument_list></call> <operator pos:line="397" pos:column="63">==<pos:position pos:line="397" pos:column="65"/></operator> <literal type="number" pos:line="397" pos:column="66">0<pos:position pos:line="397" pos:column="67"/></literal></expr> ?<pos:position pos:line="397" pos:column="69"/></condition><then pos:line="397" pos:column="69"> <expr><literal type="string" pos:line="397" pos:column="70">"ies"<pos:position pos:line="397" pos:column="75"/></literal></expr> <pos:position pos:line="397" pos:column="76"/></then><else pos:line="397" pos:column="76">: <expr><literal type="string" pos:line="397" pos:column="78">"y"<pos:position pos:line="397" pos:column="81"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="397" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="397" pos:column="83"/></expr_stmt>

        <expr_stmt><expr><name pos:line="399" pos:column="9">max_attr<pos:position pos:line="399" pos:column="17"/></name> <operator pos:line="399" pos:column="18">=<pos:position pos:line="399" pos:column="19"/></operator> <literal type="number" pos:line="399" pos:column="20">0<pos:position pos:line="399" pos:column="21"/></literal></expr>;<pos:position pos:line="399" pos:column="22"/></expr_stmt>
        <if pos:line="400" pos:column="9">if <condition pos:line="400" pos:column="12">(<expr><operator pos:line="400" pos:column="13">!<pos:position pos:line="400" pos:column="14"/></operator><name pos:line="400" pos:column="14">rc<pos:position pos:line="400" pos:column="16"/></name></expr>)<pos:position pos:line="400" pos:column="17"/></condition><then pos:line="400" pos:column="17"> <block pos:line="400" pos:column="18">{
            <if pos:line="401" pos:column="13">if <condition pos:line="401" pos:column="16">(<expr><name><name pos:line="401" pos:column="17">margs<pos:position pos:line="401" pos:column="22"/></name><operator pos:line="401" pos:column="22">-&gt;<pos:position pos:line="401" pos:column="27"/></operator><name pos:line="401" pos:column="24">AD<pos:position pos:line="401" pos:column="26"/></name></name></expr>)<pos:position pos:line="401" pos:column="27"/></condition><then pos:line="401" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><name pos:line="402" pos:column="17">max_attr<pos:position pos:line="402" pos:column="25"/></name> <operator pos:line="402" pos:column="26">=<pos:position pos:line="402" pos:column="27"/></operator>
                    <call><name pos:line="403" pos:column="21">get_attributes<pos:position pos:line="403" pos:column="35"/></name><argument_list pos:line="403" pos:column="35">(<argument><expr><name pos:line="403" pos:column="36">ld<pos:position pos:line="403" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="403" pos:column="40">res<pos:position pos:line="403" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="403" pos:column="45">ATTRIBUTE_GID_AD<pos:position pos:line="403" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="403" pos:column="63">&amp;<pos:position pos:line="403" pos:column="68"/></operator><name pos:line="403" pos:column="64">attr_value<pos:position pos:line="403" pos:column="74"/></name></expr></argument>)<pos:position pos:line="403" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="403" pos:column="76"/></expr_stmt></block></then>
            <else pos:line="404" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="405" pos:column="17">max_attr<pos:position pos:line="405" pos:column="25"/></name> <operator pos:line="405" pos:column="26">=<pos:position pos:line="405" pos:column="27"/></operator> <call><name pos:line="405" pos:column="28">get_attributes<pos:position pos:line="405" pos:column="42"/></name><argument_list pos:line="405" pos:column="42">(<argument><expr><name pos:line="405" pos:column="43">ld<pos:position pos:line="405" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="405" pos:column="47">res<pos:position pos:line="405" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="405" pos:column="52">ATTRIBUTE_GID<pos:position pos:line="405" pos:column="65"/></name></expr></argument>, <argument><expr><operator pos:line="405" pos:column="67">&amp;<pos:position pos:line="405" pos:column="72"/></operator><name pos:line="405" pos:column="68">attr_value<pos:position pos:line="405" pos:column="78"/></name></expr></argument>)<pos:position pos:line="405" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="405" pos:column="80"/></expr_stmt></block></else></if>
        }<pos:position pos:line="406" pos:column="10"/></block></then></if>

        <if pos:line="408" pos:column="9">if <condition pos:line="408" pos:column="12">(<expr><name pos:line="408" pos:column="13">max_attr<pos:position pos:line="408" pos:column="21"/></name> <operator pos:line="408" pos:column="22">==<pos:position pos:line="408" pos:column="24"/></operator> <literal type="number" pos:line="408" pos:column="25">1<pos:position pos:line="408" pos:column="26"/></literal></expr>)<pos:position pos:line="408" pos:column="27"/></condition><then pos:line="408" pos:column="27"> <block pos:line="408" pos:column="28">{
            <decl_stmt><decl><type><name pos:line="409" pos:column="13">char<pos:position pos:line="409" pos:column="17"/></name> <modifier pos:line="409" pos:column="18">*<pos:position pos:line="409" pos:column="19"/></modifier><modifier pos:line="409" pos:column="19">*<pos:position pos:line="409" pos:column="20"/></modifier></type><name pos:line="409" pos:column="20">attr_value_2<pos:position pos:line="409" pos:column="32"/></name> <init pos:line="409" pos:column="33">= <expr><name pos:line="409" pos:column="35">NULL<pos:position pos:line="409" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="409" pos:column="40"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="410" pos:column="13">size_t<pos:position pos:line="410" pos:column="19"/></name></type> <name pos:line="410" pos:column="20">max_attr_2<pos:position pos:line="410" pos:column="30"/></name> <init pos:line="410" pos:column="31">= <expr><literal type="number" pos:line="410" pos:column="33">0<pos:position pos:line="410" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="410" pos:column="35"/></decl_stmt>

            <if pos:line="412" pos:column="13">if <condition pos:line="412" pos:column="16">(<expr><name><name pos:line="412" pos:column="17">margs<pos:position pos:line="412" pos:column="22"/></name><operator pos:line="412" pos:column="22">-&gt;<pos:position pos:line="412" pos:column="27"/></operator><name pos:line="412" pos:column="24">AD<pos:position pos:line="412" pos:column="26"/></name></name></expr>)<pos:position pos:line="412" pos:column="27"/></condition><then pos:line="412" pos:column="27"> <block pos:line="412" pos:column="28">{
                <decl_stmt><decl><type><name pos:line="413" pos:column="17">char<pos:position pos:line="413" pos:column="21"/></name> <modifier pos:line="413" pos:column="22">*<pos:position pos:line="413" pos:column="23"/></modifier><modifier pos:line="413" pos:column="23">*<pos:position pos:line="413" pos:column="24"/></modifier></type><name pos:line="413" pos:column="24">attr_value_3<pos:position pos:line="413" pos:column="36"/></name> <init pos:line="413" pos:column="37">= <expr><name pos:line="413" pos:column="39">NULL<pos:position pos:line="413" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="413" pos:column="44"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="414" pos:column="17">int<pos:position pos:line="414" pos:column="20"/></name> <modifier pos:line="414" pos:column="21">*<pos:position pos:line="414" pos:column="22"/></modifier></type><name pos:line="414" pos:column="22">attr_len_3<pos:position pos:line="414" pos:column="32"/></name> <init pos:line="414" pos:column="33">= <expr><name pos:line="414" pos:column="35">NULL<pos:position pos:line="414" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="414" pos:column="40"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="415" pos:column="17">size_t<pos:position pos:line="415" pos:column="23"/></name></type> <name pos:line="415" pos:column="24">max_attr_3<pos:position pos:line="415" pos:column="34"/></name> <init pos:line="415" pos:column="35">= <expr><literal type="number" pos:line="415" pos:column="37">0<pos:position pos:line="415" pos:column="38"/></literal></expr></init></decl>;<pos:position pos:line="415" pos:column="39"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="416" pos:column="17">uint32_t<pos:position pos:line="416" pos:column="25"/></name></type> <name pos:line="416" pos:column="26">gid<pos:position pos:line="416" pos:column="29"/></name> <init pos:line="416" pos:column="30">= <expr><call><name pos:line="416" pos:column="32">atoi<pos:position pos:line="416" pos:column="36"/></name><argument_list pos:line="416" pos:column="36">(<argument><expr><name><name pos:line="416" pos:column="37">attr_value<pos:position pos:line="416" pos:column="47"/></name><index pos:line="416" pos:column="47">[<expr><literal type="number" pos:line="416" pos:column="48">0<pos:position pos:line="416" pos:column="49"/></literal></expr>]<pos:position pos:line="416" pos:column="50"/></index></name></expr></argument>)<pos:position pos:line="416" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="416" pos:column="52"/></decl_stmt>

                <comment type="block" pos:line="418" pos:column="17">/* Get objectsid and search for group
                 * with objectsid = domain(objectsid) + primarygroupid  */</comment>
                <expr_stmt><expr><call><name pos:line="420" pos:column="17">debug<pos:position pos:line="420" pos:column="22"/></name><argument_list pos:line="420" pos:column="22">(<argument><expr><operator pos:line="420" pos:column="23">(<pos:position pos:line="420" pos:column="24"/></operator><name pos:line="420" pos:column="24">char<pos:position pos:line="420" pos:column="28"/></name> <operator pos:line="420" pos:column="29">*<pos:position pos:line="420" pos:column="30"/></operator><operator pos:line="420" pos:column="30">)<pos:position pos:line="420" pos:column="31"/></operator> <literal type="string" pos:line="420" pos:column="32">"%s| %s: DEBUG: Got primaryGroupID %u\n"<pos:position pos:line="420" pos:column="72"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="421" pos:column="23">LogTime<pos:position pos:line="421" pos:column="30"/></name><argument_list pos:line="421" pos:column="30">()<pos:position pos:line="421" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="421" pos:column="34">PROGRAM<pos:position pos:line="421" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="421" pos:column="43">gid<pos:position pos:line="421" pos:column="46"/></name></expr></argument>)<pos:position pos:line="421" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="421" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name pos:line="422" pos:column="17">max_attr_3<pos:position pos:line="422" pos:column="27"/></name> <operator pos:line="422" pos:column="28">=<pos:position pos:line="422" pos:column="29"/></operator>
                    <call><name pos:line="423" pos:column="21">get_bin_attributes<pos:position pos:line="423" pos:column="39"/></name><argument_list pos:line="423" pos:column="39">(<argument><expr><name pos:line="423" pos:column="40">ld<pos:position pos:line="423" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="423" pos:column="44">res<pos:position pos:line="423" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="423" pos:column="49">ATTRIBUTE_SID<pos:position pos:line="423" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="423" pos:column="64">&amp;<pos:position pos:line="423" pos:column="69"/></operator><name pos:line="423" pos:column="65">attr_value_3<pos:position pos:line="423" pos:column="77"/></name></expr></argument>,
                                       <argument><expr><operator pos:line="424" pos:column="40">&amp;<pos:position pos:line="424" pos:column="45"/></operator><name pos:line="424" pos:column="41">attr_len_3<pos:position pos:line="424" pos:column="51"/></name></expr></argument>)<pos:position pos:line="424" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="424" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="425" pos:column="17">ldap_msgfree<pos:position pos:line="425" pos:column="29"/></name><argument_list pos:line="425" pos:column="29">(<argument><expr><name pos:line="425" pos:column="30">res<pos:position pos:line="425" pos:column="33"/></name></expr></argument>)<pos:position pos:line="425" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="425" pos:column="35"/></expr_stmt>
                <if pos:line="426" pos:column="17">if <condition pos:line="426" pos:column="20">(<expr><name pos:line="426" pos:column="21">max_attr_3<pos:position pos:line="426" pos:column="31"/></name> <operator pos:line="426" pos:column="32">==<pos:position pos:line="426" pos:column="34"/></operator> <literal type="number" pos:line="426" pos:column="35">1<pos:position pos:line="426" pos:column="36"/></literal></expr>)<pos:position pos:line="426" pos:column="37"/></condition><then pos:line="426" pos:column="37"> <block pos:line="426" pos:column="38">{
                    <decl_stmt><decl><type><name pos:line="427" pos:column="21">int<pos:position pos:line="427" pos:column="24"/></name></type> <name pos:line="427" pos:column="25">len<pos:position pos:line="427" pos:column="28"/></name> <init pos:line="427" pos:column="29">= <expr><name><name pos:line="427" pos:column="31">attr_len_3<pos:position pos:line="427" pos:column="41"/></name><index pos:line="427" pos:column="41">[<expr><literal type="number" pos:line="427" pos:column="42">0<pos:position pos:line="427" pos:column="43"/></literal></expr>]<pos:position pos:line="427" pos:column="44"/></index></name></expr></init></decl>;<pos:position pos:line="427" pos:column="45"/></decl_stmt>
                    <if pos:line="428" pos:column="21">if <condition pos:line="428" pos:column="24">(<expr><name pos:line="428" pos:column="25">len<pos:position pos:line="428" pos:column="28"/></name> <operator pos:line="428" pos:column="29">&lt;<pos:position pos:line="428" pos:column="33"/></operator> <literal type="number" pos:line="428" pos:column="31">4<pos:position pos:line="428" pos:column="32"/></literal></expr>)<pos:position pos:line="428" pos:column="33"/></condition><then pos:line="428" pos:column="33"> <block pos:line="428" pos:column="34">{
                        <expr_stmt><expr><call><name pos:line="429" pos:column="25">debug<pos:position pos:line="429" pos:column="30"/></name><argument_list pos:line="429" pos:column="30">(<argument><expr><operator pos:line="429" pos:column="31">(<pos:position pos:line="429" pos:column="32"/></operator><name pos:line="429" pos:column="32">char<pos:position pos:line="429" pos:column="36"/></name> <operator pos:line="429" pos:column="37">*<pos:position pos:line="429" pos:column="38"/></operator><operator pos:line="429" pos:column="38">)<pos:position pos:line="429" pos:column="39"/></operator>
                              <literal type="string" pos:line="430" pos:column="31">"%s| %s: ERROR: Length %d is too short for objectSID\n"<pos:position pos:line="430" pos:column="86"/></literal></expr></argument>,
                              <argument><expr><call><name pos:line="431" pos:column="31">LogTime<pos:position pos:line="431" pos:column="38"/></name><argument_list pos:line="431" pos:column="38">()<pos:position pos:line="431" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="431" pos:column="42">PROGRAM<pos:position pos:line="431" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="431" pos:column="51">len<pos:position pos:line="431" pos:column="54"/></name></expr></argument>)<pos:position pos:line="431" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="431" pos:column="56"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="432" pos:column="25">rc<pos:position pos:line="432" pos:column="27"/></name> <operator pos:line="432" pos:column="28">=<pos:position pos:line="432" pos:column="29"/></operator> <literal type="number" pos:line="432" pos:column="30">1<pos:position pos:line="432" pos:column="31"/></literal></expr>;<pos:position pos:line="432" pos:column="32"/></expr_stmt>
                    }<pos:position pos:line="433" pos:column="22"/></block></then> <else pos:line="433" pos:column="23">else <block pos:line="433" pos:column="28">{
                        <decl_stmt><decl><type><name pos:line="434" pos:column="25">char<pos:position pos:line="434" pos:column="29"/></name> <modifier pos:line="434" pos:column="30">*<pos:position pos:line="434" pos:column="31"/></modifier></type><name pos:line="434" pos:column="31">se<pos:position pos:line="434" pos:column="33"/></name> <init pos:line="434" pos:column="34">= <expr><name pos:line="434" pos:column="36">NULL<pos:position pos:line="434" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="434" pos:column="41"/></decl_stmt>
                        <expr_stmt><expr><name><name pos:line="435" pos:column="25">attr_value_3<pos:position pos:line="435" pos:column="37"/></name><index pos:line="435" pos:column="37">[<expr><literal type="number" pos:line="435" pos:column="38">0<pos:position pos:line="435" pos:column="39"/></literal></expr>]<pos:position pos:line="435" pos:column="40"/></index><index pos:line="435" pos:column="40">[<expr><name pos:line="435" pos:column="41">len<pos:position pos:line="435" pos:column="44"/></name> <operator pos:line="435" pos:column="45">-<pos:position pos:line="435" pos:column="46"/></operator> <literal type="number" pos:line="435" pos:column="47">1<pos:position pos:line="435" pos:column="48"/></literal></expr>]<pos:position pos:line="435" pos:column="49"/></index></name> <operator pos:line="435" pos:column="50">=<pos:position pos:line="435" pos:column="51"/></operator> <operator pos:line="435" pos:column="52">(<pos:position pos:line="435" pos:column="53"/></operator><operator pos:line="435" pos:column="53">(<pos:position pos:line="435" pos:column="54"/></operator><name pos:line="435" pos:column="54">gid<pos:position pos:line="435" pos:column="57"/></name> <operator pos:line="435" pos:column="58">&gt;&gt;<pos:position pos:line="435" pos:column="63"/></operator> <literal type="number" pos:line="435" pos:column="61">24<pos:position pos:line="435" pos:column="63"/></literal><operator pos:line="435" pos:column="63">)<pos:position pos:line="435" pos:column="64"/></operator> <operator pos:line="435" pos:column="65">&amp;<pos:position pos:line="435" pos:column="70"/></operator> <literal type="number" pos:line="435" pos:column="67">0xff<pos:position pos:line="435" pos:column="71"/></literal><operator pos:line="435" pos:column="71">)<pos:position pos:line="435" pos:column="72"/></operator></expr>;<pos:position pos:line="435" pos:column="73"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="436" pos:column="25">attr_value_3<pos:position pos:line="436" pos:column="37"/></name><index pos:line="436" pos:column="37">[<expr><literal type="number" pos:line="436" pos:column="38">0<pos:position pos:line="436" pos:column="39"/></literal></expr>]<pos:position pos:line="436" pos:column="40"/></index><index pos:line="436" pos:column="40">[<expr><name pos:line="436" pos:column="41">len<pos:position pos:line="436" pos:column="44"/></name> <operator pos:line="436" pos:column="45">-<pos:position pos:line="436" pos:column="46"/></operator> <literal type="number" pos:line="436" pos:column="47">2<pos:position pos:line="436" pos:column="48"/></literal></expr>]<pos:position pos:line="436" pos:column="49"/></index></name> <operator pos:line="436" pos:column="50">=<pos:position pos:line="436" pos:column="51"/></operator> <operator pos:line="436" pos:column="52">(<pos:position pos:line="436" pos:column="53"/></operator><operator pos:line="436" pos:column="53">(<pos:position pos:line="436" pos:column="54"/></operator><name pos:line="436" pos:column="54">gid<pos:position pos:line="436" pos:column="57"/></name> <operator pos:line="436" pos:column="58">&gt;&gt;<pos:position pos:line="436" pos:column="63"/></operator> <literal type="number" pos:line="436" pos:column="61">16<pos:position pos:line="436" pos:column="63"/></literal><operator pos:line="436" pos:column="63">)<pos:position pos:line="436" pos:column="64"/></operator> <operator pos:line="436" pos:column="65">&amp;<pos:position pos:line="436" pos:column="70"/></operator> <literal type="number" pos:line="436" pos:column="67">0xff<pos:position pos:line="436" pos:column="71"/></literal><operator pos:line="436" pos:column="71">)<pos:position pos:line="436" pos:column="72"/></operator></expr>;<pos:position pos:line="436" pos:column="73"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="437" pos:column="25">attr_value_3<pos:position pos:line="437" pos:column="37"/></name><index pos:line="437" pos:column="37">[<expr><literal type="number" pos:line="437" pos:column="38">0<pos:position pos:line="437" pos:column="39"/></literal></expr>]<pos:position pos:line="437" pos:column="40"/></index><index pos:line="437" pos:column="40">[<expr><name pos:line="437" pos:column="41">len<pos:position pos:line="437" pos:column="44"/></name> <operator pos:line="437" pos:column="45">-<pos:position pos:line="437" pos:column="46"/></operator> <literal type="number" pos:line="437" pos:column="47">3<pos:position pos:line="437" pos:column="48"/></literal></expr>]<pos:position pos:line="437" pos:column="49"/></index></name> <operator pos:line="437" pos:column="50">=<pos:position pos:line="437" pos:column="51"/></operator> <operator pos:line="437" pos:column="52">(<pos:position pos:line="437" pos:column="53"/></operator><operator pos:line="437" pos:column="53">(<pos:position pos:line="437" pos:column="54"/></operator><name pos:line="437" pos:column="54">gid<pos:position pos:line="437" pos:column="57"/></name> <operator pos:line="437" pos:column="58">&gt;&gt;<pos:position pos:line="437" pos:column="63"/></operator> <literal type="number" pos:line="437" pos:column="61">8<pos:position pos:line="437" pos:column="62"/></literal><operator pos:line="437" pos:column="62">)<pos:position pos:line="437" pos:column="63"/></operator> <operator pos:line="437" pos:column="64">&amp;<pos:position pos:line="437" pos:column="69"/></operator> <literal type="number" pos:line="437" pos:column="66">0xff<pos:position pos:line="437" pos:column="70"/></literal><operator pos:line="437" pos:column="70">)<pos:position pos:line="437" pos:column="71"/></operator></expr>;<pos:position pos:line="437" pos:column="72"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="438" pos:column="25">attr_value_3<pos:position pos:line="438" pos:column="37"/></name><index pos:line="438" pos:column="37">[<expr><literal type="number" pos:line="438" pos:column="38">0<pos:position pos:line="438" pos:column="39"/></literal></expr>]<pos:position pos:line="438" pos:column="40"/></index><index pos:line="438" pos:column="40">[<expr><name pos:line="438" pos:column="41">len<pos:position pos:line="438" pos:column="44"/></name> <operator pos:line="438" pos:column="45">-<pos:position pos:line="438" pos:column="46"/></operator> <literal type="number" pos:line="438" pos:column="47">4<pos:position pos:line="438" pos:column="48"/></literal></expr>]<pos:position pos:line="438" pos:column="49"/></index></name> <operator pos:line="438" pos:column="50">=<pos:position pos:line="438" pos:column="51"/></operator> <operator pos:line="438" pos:column="52">(<pos:position pos:line="438" pos:column="53"/></operator><operator pos:line="438" pos:column="53">(<pos:position pos:line="438" pos:column="54"/></operator><name pos:line="438" pos:column="54">gid<pos:position pos:line="438" pos:column="57"/></name> <operator pos:line="438" pos:column="58">&gt;&gt;<pos:position pos:line="438" pos:column="63"/></operator> <literal type="number" pos:line="438" pos:column="61">0<pos:position pos:line="438" pos:column="62"/></literal><operator pos:line="438" pos:column="62">)<pos:position pos:line="438" pos:column="63"/></operator> <operator pos:line="438" pos:column="64">&amp;<pos:position pos:line="438" pos:column="69"/></operator> <literal type="number" pos:line="438" pos:column="66">0xff<pos:position pos:line="438" pos:column="70"/></literal><operator pos:line="438" pos:column="70">)<pos:position pos:line="438" pos:column="71"/></operator></expr>;<pos:position pos:line="438" pos:column="72"/></expr_stmt>

<cpp:define pos:line="440" pos:column="1">#<cpp:directive pos:line="440" pos:column="2">define<pos:position pos:line="440" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="440" pos:column="9">FILTER_SID_1<pos:position pos:line="440" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="440" pos:column="22">"(objectSID="<pos:position pos:line="440" pos:column="35"/></cpp:value></cpp:define>
<cpp:define pos:line="441" pos:column="1">#<cpp:directive pos:line="441" pos:column="2">define<pos:position pos:line="441" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="441" pos:column="9">FILTER_SID_2<pos:position pos:line="441" pos:column="21"/></name></cpp:macro> <cpp:value pos:line="441" pos:column="22">")"<pos:position pos:line="441" pos:column="25"/></cpp:value></cpp:define>

                        <expr_stmt><expr><name pos:line="443" pos:column="25">se_len<pos:position pos:line="443" pos:column="31"/></name> <operator pos:line="443" pos:column="32">=<pos:position pos:line="443" pos:column="33"/></operator>
                            <call><name pos:line="444" pos:column="29">strlen<pos:position pos:line="444" pos:column="35"/></name><argument_list pos:line="444" pos:column="35">(<argument><expr><name pos:line="444" pos:column="36">FILTER_SID_1<pos:position pos:line="444" pos:column="48"/></name></expr></argument>)<pos:position pos:line="444" pos:column="49"/></argument_list></call> <operator pos:line="444" pos:column="50">+<pos:position pos:line="444" pos:column="51"/></operator> <name pos:line="444" pos:column="52">len<pos:position pos:line="444" pos:column="55"/></name> <operator pos:line="444" pos:column="56">*<pos:position pos:line="444" pos:column="57"/></operator> <literal type="number" pos:line="444" pos:column="58">3<pos:position pos:line="444" pos:column="59"/></literal> <operator pos:line="444" pos:column="60">+<pos:position pos:line="444" pos:column="61"/></operator>
                            <call><name pos:line="445" pos:column="29">strlen<pos:position pos:line="445" pos:column="35"/></name><argument_list pos:line="445" pos:column="35">(<argument><expr><name pos:line="445" pos:column="36">FILTER_SID_2<pos:position pos:line="445" pos:column="48"/></name></expr></argument>)<pos:position pos:line="445" pos:column="49"/></argument_list></call> <operator pos:line="445" pos:column="50">+<pos:position pos:line="445" pos:column="51"/></operator> <literal type="number" pos:line="445" pos:column="52">1<pos:position pos:line="445" pos:column="53"/></literal></expr>;<pos:position pos:line="445" pos:column="54"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="446" pos:column="25">search_exp<pos:position pos:line="446" pos:column="35"/></name> <operator pos:line="446" pos:column="36">=<pos:position pos:line="446" pos:column="37"/></operator> <operator pos:line="446" pos:column="38">(<pos:position pos:line="446" pos:column="39"/></operator><name pos:line="446" pos:column="39">char<pos:position pos:line="446" pos:column="43"/></name> <operator pos:line="446" pos:column="44">*<pos:position pos:line="446" pos:column="45"/></operator><operator pos:line="446" pos:column="45">)<pos:position pos:line="446" pos:column="46"/></operator> <call><name pos:line="446" pos:column="47">xmalloc<pos:position pos:line="446" pos:column="54"/></name><argument_list pos:line="446" pos:column="54">(<argument><expr><name pos:line="446" pos:column="55">se_len<pos:position pos:line="446" pos:column="61"/></name></expr></argument>)<pos:position pos:line="446" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="446" pos:column="63"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="447" pos:column="25">snprintf<pos:position pos:line="447" pos:column="33"/></name><argument_list pos:line="447" pos:column="33">(<argument><expr><name pos:line="447" pos:column="34">search_exp<pos:position pos:line="447" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="447" pos:column="46">se_len<pos:position pos:line="447" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="447" pos:column="54">"%s"<pos:position pos:line="447" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="447" pos:column="60">FILTER_SID_1<pos:position pos:line="447" pos:column="72"/></name></expr></argument>)<pos:position pos:line="447" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="447" pos:column="74"/></expr_stmt>

                        <for pos:line="449" pos:column="25">for <control pos:line="449" pos:column="29">(<init><decl><type><name pos:line="449" pos:column="30">int<pos:position pos:line="449" pos:column="33"/></name></type> <name pos:line="449" pos:column="34">j<pos:position pos:line="449" pos:column="35"/></name> <init pos:line="449" pos:column="36">= <expr><literal type="number" pos:line="449" pos:column="38">0<pos:position pos:line="449" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="449" pos:column="40"/></init> <condition><expr><name pos:line="449" pos:column="41">j<pos:position pos:line="449" pos:column="42"/></name> <operator pos:line="449" pos:column="43">&lt;<pos:position pos:line="449" pos:column="47"/></operator> <name pos:line="449" pos:column="45">len<pos:position pos:line="449" pos:column="48"/></name></expr>;<pos:position pos:line="449" pos:column="49"/></condition> <incr><expr><name pos:line="449" pos:column="50">j<pos:position pos:line="449" pos:column="51"/></name><operator pos:line="449" pos:column="51">++<pos:position pos:line="449" pos:column="53"/></operator></expr></incr>)<pos:position pos:line="449" pos:column="54"/></control> <block pos:line="449" pos:column="55">{
                            <expr_stmt><expr><name pos:line="450" pos:column="29">se<pos:position pos:line="450" pos:column="31"/></name> <operator pos:line="450" pos:column="32">=<pos:position pos:line="450" pos:column="33"/></operator> <call><name pos:line="450" pos:column="34">xstrdup<pos:position pos:line="450" pos:column="41"/></name><argument_list pos:line="450" pos:column="41">(<argument><expr><name pos:line="450" pos:column="42">search_exp<pos:position pos:line="450" pos:column="52"/></name></expr></argument>)<pos:position pos:line="450" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="450" pos:column="54"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="451" pos:column="29">snprintf<pos:position pos:line="451" pos:column="37"/></name><argument_list pos:line="451" pos:column="37">(<argument><expr><name pos:line="451" pos:column="38">search_exp<pos:position pos:line="451" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="451" pos:column="50">se_len<pos:position pos:line="451" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="451" pos:column="58">"%s\\%02x"<pos:position pos:line="451" pos:column="68"/></literal></expr></argument>, <argument><expr><name pos:line="451" pos:column="70">se<pos:position pos:line="451" pos:column="72"/></name></expr></argument>,
                                     <argument><expr><name><name pos:line="452" pos:column="38">attr_value_3<pos:position pos:line="452" pos:column="50"/></name><index pos:line="452" pos:column="50">[<expr><literal type="number" pos:line="452" pos:column="51">0<pos:position pos:line="452" pos:column="52"/></literal></expr>]<pos:position pos:line="452" pos:column="53"/></index><index pos:line="452" pos:column="53">[<expr><name pos:line="452" pos:column="54">j<pos:position pos:line="452" pos:column="55"/></name></expr>]<pos:position pos:line="452" pos:column="56"/></index></name> <operator pos:line="452" pos:column="57">&amp;<pos:position pos:line="452" pos:column="62"/></operator> <literal type="number" pos:line="452" pos:column="59">0xFF<pos:position pos:line="452" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="452" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="452" pos:column="65"/></expr_stmt>
                            <expr_stmt><expr><call><name pos:line="453" pos:column="29">xfree<pos:position pos:line="453" pos:column="34"/></name><argument_list pos:line="453" pos:column="34">(<argument><expr><name pos:line="453" pos:column="35">se<pos:position pos:line="453" pos:column="37"/></name></expr></argument>)<pos:position pos:line="453" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="453" pos:column="39"/></expr_stmt>
                        }<pos:position pos:line="454" pos:column="26"/></block></for>
                        <expr_stmt><expr><name pos:line="455" pos:column="25">se<pos:position pos:line="455" pos:column="27"/></name> <operator pos:line="455" pos:column="28">=<pos:position pos:line="455" pos:column="29"/></operator> <call><name pos:line="455" pos:column="30">xstrdup<pos:position pos:line="455" pos:column="37"/></name><argument_list pos:line="455" pos:column="37">(<argument><expr><name pos:line="455" pos:column="38">search_exp<pos:position pos:line="455" pos:column="48"/></name></expr></argument>)<pos:position pos:line="455" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="455" pos:column="50"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="456" pos:column="25">snprintf<pos:position pos:line="456" pos:column="33"/></name><argument_list pos:line="456" pos:column="33">(<argument><expr><name pos:line="456" pos:column="34">search_exp<pos:position pos:line="456" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="456" pos:column="46">se_len<pos:position pos:line="456" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="456" pos:column="54">"%s%s"<pos:position pos:line="456" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="456" pos:column="62">se<pos:position pos:line="456" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="456" pos:column="66">FILTER_SID_2<pos:position pos:line="456" pos:column="78"/></name></expr></argument>)<pos:position pos:line="456" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="456" pos:column="80"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="457" pos:column="25">xfree<pos:position pos:line="457" pos:column="30"/></name><argument_list pos:line="457" pos:column="30">(<argument><expr><name pos:line="457" pos:column="31">se<pos:position pos:line="457" pos:column="33"/></name></expr></argument>)<pos:position pos:line="457" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="457" pos:column="35"/></expr_stmt>

                        <expr_stmt><expr><call><name pos:line="459" pos:column="25">debug<pos:position pos:line="459" pos:column="30"/></name><argument_list pos:line="459" pos:column="30">(<argument><expr><operator pos:line="459" pos:column="31">(<pos:position pos:line="459" pos:column="32"/></operator><name pos:line="459" pos:column="32">char<pos:position pos:line="459" pos:column="36"/></name> <operator pos:line="459" pos:column="37">*<pos:position pos:line="459" pos:column="38"/></operator><operator pos:line="459" pos:column="38">)<pos:position pos:line="459" pos:column="39"/></operator>
                              <literal type="string" pos:line="460" pos:column="31">"%s| %s: DEBUG: Search ldap server with bind path %s and filter: %s\n"<pos:position pos:line="460" pos:column="101"/></literal></expr></argument>,
                              <argument><expr><call><name pos:line="461" pos:column="31">LogTime<pos:position pos:line="461" pos:column="38"/></name><argument_list pos:line="461" pos:column="38">()<pos:position pos:line="461" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="461" pos:column="42">PROGRAM<pos:position pos:line="461" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="51">bindp<pos:position pos:line="461" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="461" pos:column="58">search_exp<pos:position pos:line="461" pos:column="68"/></name></expr></argument>)<pos:position pos:line="461" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="461" pos:column="70"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="462" pos:column="25">rc<pos:position pos:line="462" pos:column="27"/></name> <operator pos:line="462" pos:column="28">=<pos:position pos:line="462" pos:column="29"/></operator> <call><name pos:line="462" pos:column="30">ldap_search_ext_s<pos:position pos:line="462" pos:column="47"/></name><argument_list pos:line="462" pos:column="47">(<argument><expr><name pos:line="462" pos:column="48">ld<pos:position pos:line="462" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="462" pos:column="52">bindp<pos:position pos:line="462" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="462" pos:column="59">LDAP_SCOPE_SUBTREE<pos:position pos:line="462" pos:column="77"/></name></expr></argument>,
                                               <argument><expr><name pos:line="463" pos:column="48">search_exp<pos:position pos:line="463" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="463" pos:column="60">NULL<pos:position pos:line="463" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="463" pos:column="66">0<pos:position pos:line="463" pos:column="67"/></literal></expr></argument>, <argument><expr><name pos:line="463" pos:column="69">NULL<pos:position pos:line="463" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="463" pos:column="75">NULL<pos:position pos:line="463" pos:column="79"/></name></expr></argument>, <argument><expr><operator pos:line="463" pos:column="81">&amp;<pos:position pos:line="463" pos:column="86"/></operator><name pos:line="463" pos:column="82">searchtime<pos:position pos:line="463" pos:column="92"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="463" pos:column="94">0<pos:position pos:line="463" pos:column="95"/></literal></expr></argument>,
                                               <argument><expr><operator pos:line="464" pos:column="48">&amp;<pos:position pos:line="464" pos:column="53"/></operator><name pos:line="464" pos:column="49">res<pos:position pos:line="464" pos:column="52"/></name></expr></argument>)<pos:position pos:line="464" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="464" pos:column="54"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="465" pos:column="25">xfree<pos:position pos:line="465" pos:column="30"/></name><argument_list pos:line="465" pos:column="30">(<argument><expr><name pos:line="465" pos:column="31">search_exp<pos:position pos:line="465" pos:column="41"/></name></expr></argument>)<pos:position pos:line="465" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="465" pos:column="43"/></expr_stmt>

                        <expr_stmt><expr><call><name pos:line="467" pos:column="25">debug<pos:position pos:line="467" pos:column="30"/></name><argument_list pos:line="467" pos:column="30">(<argument><expr><operator pos:line="467" pos:column="31">(<pos:position pos:line="467" pos:column="32"/></operator><name pos:line="467" pos:column="32">char<pos:position pos:line="467" pos:column="36"/></name> <operator pos:line="467" pos:column="37">*<pos:position pos:line="467" pos:column="38"/></operator><operator pos:line="467" pos:column="38">)<pos:position pos:line="467" pos:column="39"/></operator> <literal type="string" pos:line="467" pos:column="40">"%s| %s: DEBUG: Found %d ldap entr%s\n"<pos:position pos:line="467" pos:column="79"/></literal></expr></argument>,
                              <argument><expr><call><name pos:line="468" pos:column="31">LogTime<pos:position pos:line="468" pos:column="38"/></name><argument_list pos:line="468" pos:column="38">()<pos:position pos:line="468" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="468" pos:column="42">PROGRAM<pos:position pos:line="468" pos:column="49"/></name></expr></argument>, <argument><expr><call><name pos:line="468" pos:column="51">ldap_count_entries<pos:position pos:line="468" pos:column="69"/></name><argument_list pos:line="468" pos:column="69">(<argument><expr><name pos:line="468" pos:column="70">ld<pos:position pos:line="468" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="468" pos:column="74">res<pos:position pos:line="468" pos:column="77"/></name></expr></argument>)<pos:position pos:line="468" pos:column="78"/></argument_list></call></expr></argument>,
                              <argument><expr><ternary><condition><expr><call><name pos:line="469" pos:column="31">ldap_count_entries<pos:position pos:line="469" pos:column="49"/></name><argument_list pos:line="469" pos:column="49">(<argument><expr><name pos:line="469" pos:column="50">ld<pos:position pos:line="469" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="469" pos:column="54">res<pos:position pos:line="469" pos:column="57"/></name></expr></argument>)<pos:position pos:line="469" pos:column="58"/></argument_list></call> <operator pos:line="469" pos:column="59">&gt;<pos:position pos:line="469" pos:column="63"/></operator> <literal type="number" pos:line="469" pos:column="61">1<pos:position pos:line="469" pos:column="62"/></literal>
                              <operator pos:line="470" pos:column="31">||<pos:position pos:line="470" pos:column="33"/></operator> <call><name pos:line="470" pos:column="34">ldap_count_entries<pos:position pos:line="470" pos:column="52"/></name><argument_list pos:line="470" pos:column="52">(<argument><expr><name pos:line="470" pos:column="53">ld<pos:position pos:line="470" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="470" pos:column="57">res<pos:position pos:line="470" pos:column="60"/></name></expr></argument>)<pos:position pos:line="470" pos:column="61"/></argument_list></call> <operator pos:line="470" pos:column="62">==<pos:position pos:line="470" pos:column="64"/></operator> <literal type="number" pos:line="470" pos:column="65">0<pos:position pos:line="470" pos:column="66"/></literal></expr> ?<pos:position pos:line="470" pos:column="68"/></condition><then pos:line="470" pos:column="68"> <expr><literal type="string" pos:line="470" pos:column="69">"ies"<pos:position pos:line="470" pos:column="74"/></literal></expr> <pos:position pos:line="470" pos:column="75"/></then><else pos:line="470" pos:column="75">: <expr><literal type="string" pos:line="470" pos:column="77">"y"<pos:position pos:line="470" pos:column="80"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="470" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="470" pos:column="82"/></expr_stmt>

                    }<pos:position pos:line="472" pos:column="22"/></block></else></if>
                }<pos:position pos:line="473" pos:column="18"/></block></then> <else pos:line="473" pos:column="19">else <block pos:line="473" pos:column="24">{
                    <expr_stmt><expr><name pos:line="474" pos:column="21">rc<pos:position pos:line="474" pos:column="23"/></name> <operator pos:line="474" pos:column="24">=<pos:position pos:line="474" pos:column="25"/></operator> <literal type="number" pos:line="474" pos:column="26">1<pos:position pos:line="474" pos:column="27"/></literal></expr>;<pos:position pos:line="474" pos:column="28"/></expr_stmt>
                }<pos:position pos:line="475" pos:column="18"/></block></else></if>
                <if pos:line="476" pos:column="17">if <condition pos:line="476" pos:column="20">(<expr><name pos:line="476" pos:column="21">attr_value_3<pos:position pos:line="476" pos:column="33"/></name></expr>)<pos:position pos:line="476" pos:column="34"/></condition><then pos:line="476" pos:column="34"> <block pos:line="476" pos:column="35">{
                    <decl_stmt><decl><type><name pos:line="477" pos:column="21">size_t<pos:position pos:line="477" pos:column="27"/></name></type> <name pos:line="477" pos:column="28">j<pos:position pos:line="477" pos:column="29"/></name></decl>;<pos:position pos:line="477" pos:column="30"/></decl_stmt>
                    <for pos:line="478" pos:column="21">for <control pos:line="478" pos:column="25">(<init><expr><name pos:line="478" pos:column="26">j<pos:position pos:line="478" pos:column="27"/></name> <operator pos:line="478" pos:column="28">=<pos:position pos:line="478" pos:column="29"/></operator> <literal type="number" pos:line="478" pos:column="30">0<pos:position pos:line="478" pos:column="31"/></literal></expr>;<pos:position pos:line="478" pos:column="32"/></init> <condition><expr><name pos:line="478" pos:column="33">j<pos:position pos:line="478" pos:column="34"/></name> <operator pos:line="478" pos:column="35">&lt;<pos:position pos:line="478" pos:column="39"/></operator> <name pos:line="478" pos:column="37">max_attr_3<pos:position pos:line="478" pos:column="47"/></name></expr>;<pos:position pos:line="478" pos:column="48"/></condition> <incr><expr><operator pos:line="478" pos:column="49">++<pos:position pos:line="478" pos:column="51"/></operator><name pos:line="478" pos:column="51">j<pos:position pos:line="478" pos:column="52"/></name></expr></incr>)<pos:position pos:line="478" pos:column="53"/></control> <block pos:line="478" pos:column="54">{
                        <expr_stmt><expr><call><name pos:line="479" pos:column="25">xfree<pos:position pos:line="479" pos:column="30"/></name><argument_list pos:line="479" pos:column="30">(<argument><expr><name><name pos:line="479" pos:column="31">attr_value_3<pos:position pos:line="479" pos:column="43"/></name><index pos:line="479" pos:column="43">[<expr><name pos:line="479" pos:column="44">j<pos:position pos:line="479" pos:column="45"/></name></expr>]<pos:position pos:line="479" pos:column="46"/></index></name></expr></argument>)<pos:position pos:line="479" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="479" pos:column="48"/></expr_stmt>
                    }<pos:position pos:line="480" pos:column="22"/></block></for>
                    <expr_stmt><expr><call><name pos:line="481" pos:column="21">safe_free<pos:position pos:line="481" pos:column="30"/></name><argument_list pos:line="481" pos:column="30">(<argument><expr><name pos:line="481" pos:column="31">attr_value_3<pos:position pos:line="481" pos:column="43"/></name></expr></argument>)<pos:position pos:line="481" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="481" pos:column="45"/></expr_stmt>
                }<pos:position pos:line="482" pos:column="18"/></block></then></if>
                <if pos:line="483" pos:column="17">if <condition pos:line="483" pos:column="20">(<expr><name pos:line="483" pos:column="21">attr_len_3<pos:position pos:line="483" pos:column="31"/></name></expr>)<pos:position pos:line="483" pos:column="32"/></condition><then pos:line="483" pos:column="32"> <block pos:line="483" pos:column="33">{
                    <expr_stmt><expr><call><name pos:line="484" pos:column="21">xfree<pos:position pos:line="484" pos:column="26"/></name><argument_list pos:line="484" pos:column="26">(<argument><expr><name pos:line="484" pos:column="27">attr_len_3<pos:position pos:line="484" pos:column="37"/></name></expr></argument>)<pos:position pos:line="484" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="484" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="485" pos:column="18"/></block></then></if>
            }<pos:position pos:line="486" pos:column="14"/></block></then> <else pos:line="486" pos:column="15">else <block pos:line="486" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="487" pos:column="17">ldap_msgfree<pos:position pos:line="487" pos:column="29"/></name><argument_list pos:line="487" pos:column="29">(<argument><expr><name pos:line="487" pos:column="30">res<pos:position pos:line="487" pos:column="33"/></name></expr></argument>)<pos:position pos:line="487" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="487" pos:column="35"/></expr_stmt>
                <expr_stmt><expr><name pos:line="488" pos:column="17">filter<pos:position pos:line="488" pos:column="23"/></name> <operator pos:line="488" pos:column="24">=<pos:position pos:line="488" pos:column="25"/></operator> <operator pos:line="488" pos:column="26">(<pos:position pos:line="488" pos:column="27"/></operator><name pos:line="488" pos:column="27">char<pos:position pos:line="488" pos:column="31"/></name> <operator pos:line="488" pos:column="32">*<pos:position pos:line="488" pos:column="33"/></operator><operator pos:line="488" pos:column="33">)<pos:position pos:line="488" pos:column="34"/></operator> <name pos:line="488" pos:column="35">FILTER_GID<pos:position pos:line="488" pos:column="45"/></name></expr>;<pos:position pos:line="488" pos:column="46"/></expr_stmt>

                <expr_stmt><expr><name pos:line="490" pos:column="17">ldap_filter_esc<pos:position pos:line="490" pos:column="32"/></name> <operator pos:line="490" pos:column="33">=<pos:position pos:line="490" pos:column="34"/></operator> <call><name pos:line="490" pos:column="35">escape_filter<pos:position pos:line="490" pos:column="48"/></name><argument_list pos:line="490" pos:column="48">(<argument><expr><name><name pos:line="490" pos:column="49">attr_value<pos:position pos:line="490" pos:column="59"/></name><index pos:line="490" pos:column="59">[<expr><literal type="number" pos:line="490" pos:column="60">0<pos:position pos:line="490" pos:column="61"/></literal></expr>]<pos:position pos:line="490" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="490" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="490" pos:column="64"/></expr_stmt>

                <expr_stmt><expr><name pos:line="492" pos:column="17">se_len<pos:position pos:line="492" pos:column="23"/></name> <operator pos:line="492" pos:column="24">=<pos:position pos:line="492" pos:column="25"/></operator> <call><name pos:line="492" pos:column="26">strlen<pos:position pos:line="492" pos:column="32"/></name><argument_list pos:line="492" pos:column="32">(<argument><expr><name pos:line="492" pos:column="33">filter<pos:position pos:line="492" pos:column="39"/></name></expr></argument>)<pos:position pos:line="492" pos:column="40"/></argument_list></call> <operator pos:line="492" pos:column="41">+<pos:position pos:line="492" pos:column="42"/></operator> <call><name pos:line="492" pos:column="43">strlen<pos:position pos:line="492" pos:column="49"/></name><argument_list pos:line="492" pos:column="49">(<argument><expr><name pos:line="492" pos:column="50">ldap_filter_esc<pos:position pos:line="492" pos:column="65"/></name></expr></argument>)<pos:position pos:line="492" pos:column="66"/></argument_list></call> <operator pos:line="492" pos:column="67">+<pos:position pos:line="492" pos:column="68"/></operator> <literal type="number" pos:line="492" pos:column="69">1<pos:position pos:line="492" pos:column="70"/></literal></expr>;<pos:position pos:line="492" pos:column="71"/></expr_stmt>
                <expr_stmt><expr><name pos:line="493" pos:column="17">search_exp<pos:position pos:line="493" pos:column="27"/></name> <operator pos:line="493" pos:column="28">=<pos:position pos:line="493" pos:column="29"/></operator> <operator pos:line="493" pos:column="30">(<pos:position pos:line="493" pos:column="31"/></operator><name pos:line="493" pos:column="31">char<pos:position pos:line="493" pos:column="35"/></name> <operator pos:line="493" pos:column="36">*<pos:position pos:line="493" pos:column="37"/></operator><operator pos:line="493" pos:column="37">)<pos:position pos:line="493" pos:column="38"/></operator> <call><name pos:line="493" pos:column="39">xmalloc<pos:position pos:line="493" pos:column="46"/></name><argument_list pos:line="493" pos:column="46">(<argument><expr><name pos:line="493" pos:column="47">se_len<pos:position pos:line="493" pos:column="53"/></name></expr></argument>)<pos:position pos:line="493" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="493" pos:column="55"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="494" pos:column="17">snprintf<pos:position pos:line="494" pos:column="25"/></name><argument_list pos:line="494" pos:column="25">(<argument><expr><name pos:line="494" pos:column="26">search_exp<pos:position pos:line="494" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="494" pos:column="38">se_len<pos:position pos:line="494" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="494" pos:column="46">filter<pos:position pos:line="494" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="494" pos:column="54">ldap_filter_esc<pos:position pos:line="494" pos:column="69"/></name></expr></argument>)<pos:position pos:line="494" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="494" pos:column="71"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="496" pos:column="17">xfree<pos:position pos:line="496" pos:column="22"/></name><argument_list pos:line="496" pos:column="22">(<argument><expr><name pos:line="496" pos:column="23">ldap_filter_esc<pos:position pos:line="496" pos:column="38"/></name></expr></argument>)<pos:position pos:line="496" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="496" pos:column="40"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="498" pos:column="17">debug<pos:position pos:line="498" pos:column="22"/></name><argument_list pos:line="498" pos:column="22">(<argument><expr><operator pos:line="498" pos:column="23">(<pos:position pos:line="498" pos:column="24"/></operator><name pos:line="498" pos:column="24">char<pos:position pos:line="498" pos:column="28"/></name> <operator pos:line="498" pos:column="29">*<pos:position pos:line="498" pos:column="30"/></operator><operator pos:line="498" pos:column="30">)<pos:position pos:line="498" pos:column="31"/></operator>
                      <literal type="string" pos:line="499" pos:column="23">"%s| %s: DEBUG: Search ldap server with bind path %s and filter: %s\n"<pos:position pos:line="499" pos:column="93"/></literal></expr></argument>,
                      <argument><expr><call><name pos:line="500" pos:column="23">LogTime<pos:position pos:line="500" pos:column="30"/></name><argument_list pos:line="500" pos:column="30">()<pos:position pos:line="500" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="500" pos:column="34">PROGRAM<pos:position pos:line="500" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="500" pos:column="43">bindp<pos:position pos:line="500" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="500" pos:column="50">search_exp<pos:position pos:line="500" pos:column="60"/></name></expr></argument>)<pos:position pos:line="500" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="500" pos:column="62"/></expr_stmt>
                <expr_stmt><expr><name pos:line="501" pos:column="17">rc<pos:position pos:line="501" pos:column="19"/></name> <operator pos:line="501" pos:column="20">=<pos:position pos:line="501" pos:column="21"/></operator> <call><name pos:line="501" pos:column="22">ldap_search_ext_s<pos:position pos:line="501" pos:column="39"/></name><argument_list pos:line="501" pos:column="39">(<argument><expr><name pos:line="501" pos:column="40">ld<pos:position pos:line="501" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="501" pos:column="44">bindp<pos:position pos:line="501" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="501" pos:column="51">LDAP_SCOPE_SUBTREE<pos:position pos:line="501" pos:column="69"/></name></expr></argument>,
                                       <argument><expr><name pos:line="502" pos:column="40">search_exp<pos:position pos:line="502" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="502" pos:column="52">NULL<pos:position pos:line="502" pos:column="56"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="502" pos:column="58">0<pos:position pos:line="502" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="502" pos:column="61">NULL<pos:position pos:line="502" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="502" pos:column="67">NULL<pos:position pos:line="502" pos:column="71"/></name></expr></argument>, <argument><expr><operator pos:line="502" pos:column="73">&amp;<pos:position pos:line="502" pos:column="78"/></operator><name pos:line="502" pos:column="74">searchtime<pos:position pos:line="502" pos:column="84"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="502" pos:column="86">0<pos:position pos:line="502" pos:column="87"/></literal></expr></argument>, <argument><expr><operator pos:line="502" pos:column="89">&amp;<pos:position pos:line="502" pos:column="94"/></operator><name pos:line="502" pos:column="90">res<pos:position pos:line="502" pos:column="93"/></name></expr></argument>)<pos:position pos:line="502" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="502" pos:column="95"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="503" pos:column="17">xfree<pos:position pos:line="503" pos:column="22"/></name><argument_list pos:line="503" pos:column="22">(<argument><expr><name pos:line="503" pos:column="23">search_exp<pos:position pos:line="503" pos:column="33"/></name></expr></argument>)<pos:position pos:line="503" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="503" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="504" pos:column="14"/></block></else></if>

            <if pos:line="506" pos:column="13">if <condition pos:line="506" pos:column="16">(<expr><operator pos:line="506" pos:column="17">!<pos:position pos:line="506" pos:column="18"/></operator><name pos:line="506" pos:column="18">rc<pos:position pos:line="506" pos:column="20"/></name></expr>)<pos:position pos:line="506" pos:column="21"/></condition><then pos:line="506" pos:column="21"> <block pos:line="506" pos:column="22">{
                <if pos:line="507" pos:column="17">if <condition pos:line="507" pos:column="20">(<expr><name><name pos:line="507" pos:column="21">margs<pos:position pos:line="507" pos:column="26"/></name><operator pos:line="507" pos:column="26">-&gt;<pos:position pos:line="507" pos:column="31"/></operator><name pos:line="507" pos:column="28">AD<pos:position pos:line="507" pos:column="30"/></name></name></expr>)<pos:position pos:line="507" pos:column="31"/></condition><then pos:line="507" pos:column="31">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="508" pos:column="21">max_attr_2<pos:position pos:line="508" pos:column="31"/></name> <operator pos:line="508" pos:column="32">=<pos:position pos:line="508" pos:column="33"/></operator>
                        <call><name pos:line="509" pos:column="25">get_attributes<pos:position pos:line="509" pos:column="39"/></name><argument_list pos:line="509" pos:column="39">(<argument><expr><name pos:line="509" pos:column="40">ld<pos:position pos:line="509" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="509" pos:column="44">res<pos:position pos:line="509" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="509" pos:column="49">ATTRIBUTE_DN<pos:position pos:line="509" pos:column="61"/></name></expr></argument>, <argument><expr><operator pos:line="509" pos:column="63">&amp;<pos:position pos:line="509" pos:column="68"/></operator><name pos:line="509" pos:column="64">attr_value_2<pos:position pos:line="509" pos:column="76"/></name></expr></argument>)<pos:position pos:line="509" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="509" pos:column="78"/></expr_stmt></block></then>
                <else pos:line="510" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><name pos:line="511" pos:column="21">max_attr_2<pos:position pos:line="511" pos:column="31"/></name> <operator pos:line="511" pos:column="32">=<pos:position pos:line="511" pos:column="33"/></operator>
                        <call><name pos:line="512" pos:column="25">get_attributes<pos:position pos:line="512" pos:column="39"/></name><argument_list pos:line="512" pos:column="39">(<argument><expr><name pos:line="512" pos:column="40">ld<pos:position pos:line="512" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="512" pos:column="44">res<pos:position pos:line="512" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="512" pos:column="49">ATTRIBUTE<pos:position pos:line="512" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="512" pos:column="60">&amp;<pos:position pos:line="512" pos:column="65"/></operator><name pos:line="512" pos:column="61">attr_value_2<pos:position pos:line="512" pos:column="73"/></name></expr></argument>)<pos:position pos:line="512" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="512" pos:column="75"/></expr_stmt></block></else></if>
                <expr_stmt><expr><call><name pos:line="513" pos:column="17">ldap_msgfree<pos:position pos:line="513" pos:column="29"/></name><argument_list pos:line="513" pos:column="29">(<argument><expr><name pos:line="513" pos:column="30">res<pos:position pos:line="513" pos:column="33"/></name></expr></argument>)<pos:position pos:line="513" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="513" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="514" pos:column="14"/></block></then> <else pos:line="514" pos:column="15">else <block pos:line="514" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="515" pos:column="17">ldap_msgfree<pos:position pos:line="515" pos:column="29"/></name><argument_list pos:line="515" pos:column="29">(<argument><expr><name pos:line="515" pos:column="30">res<pos:position pos:line="515" pos:column="33"/></name></expr></argument>)<pos:position pos:line="515" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="515" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="516" pos:column="14"/></block></else></if>
            <comment type="block" pos:line="517" pos:column="13">/*
             * Compare group names
             */</comment>
            <expr_stmt><expr><name pos:line="520" pos:column="13">retval<pos:position pos:line="520" pos:column="19"/></name> <operator pos:line="520" pos:column="20">=<pos:position pos:line="520" pos:column="21"/></operator> <literal type="number" pos:line="520" pos:column="22">0<pos:position pos:line="520" pos:column="23"/></literal></expr>;<pos:position pos:line="520" pos:column="24"/></expr_stmt>
            <if pos:line="521" pos:column="13">if <condition pos:line="521" pos:column="16">(<expr><name pos:line="521" pos:column="17">max_attr_2<pos:position pos:line="521" pos:column="27"/></name> <operator pos:line="521" pos:column="28">==<pos:position pos:line="521" pos:column="30"/></operator> <literal type="number" pos:line="521" pos:column="31">1<pos:position pos:line="521" pos:column="32"/></literal></expr>)<pos:position pos:line="521" pos:column="33"/></condition><then pos:line="521" pos:column="33"> <block pos:line="521" pos:column="34">{
                <comment type="block" pos:line="522" pos:column="17">/* Compare first CN= value assuming it is the same as the group name itself */</comment>
                <decl_stmt><decl><type><name pos:line="523" pos:column="17">char<pos:position pos:line="523" pos:column="21"/></name> <modifier pos:line="523" pos:column="22">*<pos:position pos:line="523" pos:column="23"/></modifier></type><name pos:line="523" pos:column="23">av<pos:position pos:line="523" pos:column="25"/></name> <init pos:line="523" pos:column="26">= <expr><name><name pos:line="523" pos:column="28">attr_value_2<pos:position pos:line="523" pos:column="40"/></name><index pos:line="523" pos:column="40">[<expr><literal type="number" pos:line="523" pos:column="41">0<pos:position pos:line="523" pos:column="42"/></literal></expr>]<pos:position pos:line="523" pos:column="43"/></index></name></expr></init></decl>;<pos:position pos:line="523" pos:column="44"/></decl_stmt>
                <if pos:line="524" pos:column="17">if <condition pos:line="524" pos:column="20">(<expr><operator pos:line="524" pos:column="21">!<pos:position pos:line="524" pos:column="22"/></operator><call><name pos:line="524" pos:column="22">strncasecmp<pos:position pos:line="524" pos:column="33"/></name><argument_list pos:line="524" pos:column="33">(<argument><expr><literal type="string" pos:line="524" pos:column="34">"CN="<pos:position pos:line="524" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="524" pos:column="41">av<pos:position pos:line="524" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="524" pos:column="45">3<pos:position pos:line="524" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="524" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="524" pos:column="48"/></condition><then pos:line="524" pos:column="48"> <block pos:line="524" pos:column="49">{
                    <decl_stmt><decl><type><name pos:line="525" pos:column="21">char<pos:position pos:line="525" pos:column="25"/></name> <modifier pos:line="525" pos:column="26">*<pos:position pos:line="525" pos:column="27"/></modifier></type><name pos:line="525" pos:column="27">avp<pos:position pos:line="525" pos:column="30"/></name> <init pos:line="525" pos:column="31">= <expr><name pos:line="525" pos:column="33">NULL<pos:position pos:line="525" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="525" pos:column="38"/></decl_stmt>
                    <expr_stmt><expr><name pos:line="526" pos:column="21">av<pos:position pos:line="526" pos:column="23"/></name> <operator pos:line="526" pos:column="24">+=<pos:position pos:line="526" pos:column="26"/></operator> <literal type="number" pos:line="526" pos:column="27">3<pos:position pos:line="526" pos:column="28"/></literal></expr>;<pos:position pos:line="526" pos:column="29"/></expr_stmt>
                    <if pos:line="527" pos:column="21">if <condition pos:line="527" pos:column="24">(<expr><operator pos:line="527" pos:column="25">(<pos:position pos:line="527" pos:column="26"/></operator><name pos:line="527" pos:column="26">avp<pos:position pos:line="527" pos:column="29"/></name> <operator pos:line="527" pos:column="30">=<pos:position pos:line="527" pos:column="31"/></operator> <call><name pos:line="527" pos:column="32">strchr<pos:position pos:line="527" pos:column="38"/></name><argument_list pos:line="527" pos:column="38">(<argument><expr><name pos:line="527" pos:column="39">av<pos:position pos:line="527" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="527" pos:column="43">','<pos:position pos:line="527" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="527" pos:column="47"/></argument_list></call><operator pos:line="527" pos:column="47">)<pos:position pos:line="527" pos:column="48"/></operator></expr>)<pos:position pos:line="527" pos:column="49"/></condition><then pos:line="527" pos:column="49"> <block pos:line="527" pos:column="50">{
                        <expr_stmt><expr><operator pos:line="528" pos:column="25">*<pos:position pos:line="528" pos:column="26"/></operator><name pos:line="528" pos:column="26">avp<pos:position pos:line="528" pos:column="29"/></name> <operator pos:line="528" pos:column="30">=<pos:position pos:line="528" pos:column="31"/></operator> <literal type="char" pos:line="528" pos:column="32">'\0'<pos:position pos:line="528" pos:column="36"/></literal></expr>;<pos:position pos:line="528" pos:column="37"/></expr_stmt>
                    }<pos:position pos:line="529" pos:column="22"/></block></then></if>
                }<pos:position pos:line="530" pos:column="18"/></block></then></if>
                <if pos:line="531" pos:column="17">if <condition pos:line="531" pos:column="20">(<expr><operator pos:line="531" pos:column="21">!<pos:position pos:line="531" pos:column="22"/></operator><call><name pos:line="531" pos:column="22">strcasecmp<pos:position pos:line="531" pos:column="32"/></name><argument_list pos:line="531" pos:column="32">(<argument><expr><name pos:line="531" pos:column="33">group<pos:position pos:line="531" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="531" pos:column="40">av<pos:position pos:line="531" pos:column="42"/></name></expr></argument>)<pos:position pos:line="531" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="531" pos:column="44"/></condition><then pos:line="531" pos:column="44"> <block pos:line="531" pos:column="45">{
                    <expr_stmt><expr><name pos:line="532" pos:column="21">retval<pos:position pos:line="532" pos:column="27"/></name> <operator pos:line="532" pos:column="28">=<pos:position pos:line="532" pos:column="29"/></operator> <literal type="number" pos:line="532" pos:column="30">1<pos:position pos:line="532" pos:column="31"/></literal></expr>;<pos:position pos:line="532" pos:column="32"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="533" pos:column="21">debug<pos:position pos:line="533" pos:column="26"/></name><argument_list pos:line="533" pos:column="26">(<argument><expr><operator pos:line="533" pos:column="27">(<pos:position pos:line="533" pos:column="28"/></operator><name pos:line="533" pos:column="28">char<pos:position pos:line="533" pos:column="32"/></name> <operator pos:line="533" pos:column="33">*<pos:position pos:line="533" pos:column="34"/></operator><operator pos:line="533" pos:column="34">)<pos:position pos:line="533" pos:column="35"/></operator>
                          <literal type="string" pos:line="534" pos:column="27">"%s| %s: DEBUG: \"%s\" matches group name \"%s\"\n"<pos:position pos:line="534" pos:column="78"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="535" pos:column="27">LogTime<pos:position pos:line="535" pos:column="34"/></name><argument_list pos:line="535" pos:column="34">()<pos:position pos:line="535" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="535" pos:column="38">PROGRAM<pos:position pos:line="535" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="535" pos:column="47">av<pos:position pos:line="535" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="535" pos:column="51">group<pos:position pos:line="535" pos:column="56"/></name></expr></argument>)<pos:position pos:line="535" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="535" pos:column="58"/></expr_stmt>
                }<pos:position pos:line="536" pos:column="18"/></block></then> <else pos:line="536" pos:column="19">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="537" pos:column="21">debug<pos:position pos:line="537" pos:column="26"/></name><argument_list pos:line="537" pos:column="26">(<argument><expr><operator pos:line="537" pos:column="27">(<pos:position pos:line="537" pos:column="28"/></operator><name pos:line="537" pos:column="28">char<pos:position pos:line="537" pos:column="32"/></name> <operator pos:line="537" pos:column="33">*<pos:position pos:line="537" pos:column="34"/></operator><operator pos:line="537" pos:column="34">)<pos:position pos:line="537" pos:column="35"/></operator>
                          <literal type="string" pos:line="538" pos:column="27">"%s| %s: DEBUG: \"%s\" does not match group name \"%s\"\n"<pos:position pos:line="538" pos:column="85"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="539" pos:column="27">LogTime<pos:position pos:line="539" pos:column="34"/></name><argument_list pos:line="539" pos:column="34">()<pos:position pos:line="539" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="539" pos:column="38">PROGRAM<pos:position pos:line="539" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="539" pos:column="47">av<pos:position pos:line="539" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="539" pos:column="51">group<pos:position pos:line="539" pos:column="56"/></name></expr></argument>)<pos:position pos:line="539" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="539" pos:column="58"/></expr_stmt></block></else></if>

            }<pos:position pos:line="541" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="542" pos:column="13">/*
             * Do recursive group search for AD only since posixgroups can not contain other groups
             */</comment>
            <if pos:line="545" pos:column="13">if <condition pos:line="545" pos:column="16">(<expr><operator pos:line="545" pos:column="17">!<pos:position pos:line="545" pos:column="18"/></operator><name pos:line="545" pos:column="18">retval<pos:position pos:line="545" pos:column="24"/></name> <operator pos:line="545" pos:column="25">&amp;&amp;<pos:position pos:line="545" pos:column="35"/></operator> <name><name pos:line="545" pos:column="28">margs<pos:position pos:line="545" pos:column="33"/></name><operator pos:line="545" pos:column="33">-&gt;<pos:position pos:line="545" pos:column="38"/></operator><name pos:line="545" pos:column="35">AD<pos:position pos:line="545" pos:column="37"/></name></name></expr>)<pos:position pos:line="545" pos:column="38"/></condition><then pos:line="545" pos:column="38"> <block pos:line="545" pos:column="39">{
                <if pos:line="546" pos:column="17">if <condition pos:line="546" pos:column="20">(<expr><name pos:line="546" pos:column="21">debug_enabled<pos:position pos:line="546" pos:column="34"/></name> <operator pos:line="546" pos:column="35">&amp;&amp;<pos:position pos:line="546" pos:column="45"/></operator> <name pos:line="546" pos:column="38">max_attr_2<pos:position pos:line="546" pos:column="48"/></name> <operator pos:line="546" pos:column="49">&gt;<pos:position pos:line="546" pos:column="53"/></operator> <literal type="number" pos:line="546" pos:column="51">0<pos:position pos:line="546" pos:column="52"/></literal></expr>)<pos:position pos:line="546" pos:column="53"/></condition><then pos:line="546" pos:column="53"> <block pos:line="546" pos:column="54">{
                    <expr_stmt><expr><call><name pos:line="547" pos:column="21">debug<pos:position pos:line="547" pos:column="26"/></name><argument_list pos:line="547" pos:column="26">(<argument><expr><operator pos:line="547" pos:column="27">(<pos:position pos:line="547" pos:column="28"/></operator><name pos:line="547" pos:column="28">char<pos:position pos:line="547" pos:column="32"/></name> <operator pos:line="547" pos:column="33">*<pos:position pos:line="547" pos:column="34"/></operator><operator pos:line="547" pos:column="34">)<pos:position pos:line="547" pos:column="35"/></operator>
                          <literal type="string" pos:line="548" pos:column="27">"%s| %s: DEBUG: Perform recursive group search\n"<pos:position pos:line="548" pos:column="76"/></literal></expr></argument>,
                          <argument><expr><call><name pos:line="549" pos:column="27">LogTime<pos:position pos:line="549" pos:column="34"/></name><argument_list pos:line="549" pos:column="34">()<pos:position pos:line="549" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="549" pos:column="38">PROGRAM<pos:position pos:line="549" pos:column="45"/></name></expr></argument>)<pos:position pos:line="549" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="549" pos:column="47"/></expr_stmt>
                }<pos:position pos:line="550" pos:column="18"/></block></then></if>
                <for pos:line="551" pos:column="17">for <control pos:line="551" pos:column="21">(<init><decl><type><name pos:line="551" pos:column="22">size_t<pos:position pos:line="551" pos:column="28"/></name></type> <name pos:line="551" pos:column="29">j<pos:position pos:line="551" pos:column="30"/></name> <init pos:line="551" pos:column="31">= <expr><literal type="number" pos:line="551" pos:column="33">0<pos:position pos:line="551" pos:column="34"/></literal></expr></init></decl>;<pos:position pos:line="551" pos:column="35"/></init> <condition><expr><name pos:line="551" pos:column="36">j<pos:position pos:line="551" pos:column="37"/></name> <operator pos:line="551" pos:column="38">&lt;<pos:position pos:line="551" pos:column="42"/></operator> <name pos:line="551" pos:column="40">max_attr_2<pos:position pos:line="551" pos:column="50"/></name></expr>;<pos:position pos:line="551" pos:column="51"/></condition> <incr><expr><operator pos:line="551" pos:column="52">++<pos:position pos:line="551" pos:column="54"/></operator><name pos:line="551" pos:column="54">j<pos:position pos:line="551" pos:column="55"/></name></expr></incr>)<pos:position pos:line="551" pos:column="56"/></control> <block pos:line="551" pos:column="57">{
                    <decl_stmt><decl><type><name pos:line="552" pos:column="21">char<pos:position pos:line="552" pos:column="25"/></name> <modifier pos:line="552" pos:column="26">*<pos:position pos:line="552" pos:column="27"/></modifier></type><name pos:line="552" pos:column="27">av<pos:position pos:line="552" pos:column="29"/></name> <init pos:line="552" pos:column="30">= <expr><name pos:line="552" pos:column="32">NULL<pos:position pos:line="552" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="552" pos:column="37"/></decl_stmt>

                    <expr_stmt><expr><name pos:line="554" pos:column="21">av<pos:position pos:line="554" pos:column="23"/></name> <operator pos:line="554" pos:column="24">=<pos:position pos:line="554" pos:column="25"/></operator> <name><name pos:line="554" pos:column="26">attr_value_2<pos:position pos:line="554" pos:column="38"/></name><index pos:line="554" pos:column="38">[<expr><name pos:line="554" pos:column="39">j<pos:position pos:line="554" pos:column="40"/></name></expr>]<pos:position pos:line="554" pos:column="41"/></index></name></expr>;<pos:position pos:line="554" pos:column="42"/></expr_stmt>
                    <if pos:line="555" pos:column="21">if <condition pos:line="555" pos:column="24">(<expr><call><name pos:line="555" pos:column="25">search_group_tree<pos:position pos:line="555" pos:column="42"/></name><argument_list pos:line="555" pos:column="42">(<argument><expr><name pos:line="555" pos:column="43">margs<pos:position pos:line="555" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="555" pos:column="50">ld<pos:position pos:line="555" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="555" pos:column="54">bindp<pos:position pos:line="555" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="555" pos:column="61">av<pos:position pos:line="555" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="555" pos:column="65">group<pos:position pos:line="555" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="555" pos:column="72">1<pos:position pos:line="555" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="555" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="555" pos:column="75"/></condition><then pos:line="555" pos:column="75"> <block pos:line="555" pos:column="76">{
                        <expr_stmt><expr><name pos:line="556" pos:column="25">retval<pos:position pos:line="556" pos:column="31"/></name> <operator pos:line="556" pos:column="32">=<pos:position pos:line="556" pos:column="33"/></operator> <literal type="number" pos:line="556" pos:column="34">1<pos:position pos:line="556" pos:column="35"/></literal></expr>;<pos:position pos:line="556" pos:column="36"/></expr_stmt>
                        <if pos:line="557" pos:column="25">if <condition pos:line="557" pos:column="28">(<expr><operator pos:line="557" pos:column="29">!<pos:position pos:line="557" pos:column="30"/></operator><call><name pos:line="557" pos:column="30">strncasecmp<pos:position pos:line="557" pos:column="41"/></name><argument_list pos:line="557" pos:column="41">(<argument><expr><literal type="string" pos:line="557" pos:column="42">"CN="<pos:position pos:line="557" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="557" pos:column="49">av<pos:position pos:line="557" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="557" pos:column="53">3<pos:position pos:line="557" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="557" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="557" pos:column="56"/></condition><then pos:line="557" pos:column="56"> <block pos:line="557" pos:column="57">{
                            <decl_stmt><decl><type><name pos:line="558" pos:column="29">char<pos:position pos:line="558" pos:column="33"/></name> <modifier pos:line="558" pos:column="34">*<pos:position pos:line="558" pos:column="35"/></modifier></type><name pos:line="558" pos:column="35">avp<pos:position pos:line="558" pos:column="38"/></name> <init pos:line="558" pos:column="39">= <expr><name pos:line="558" pos:column="41">NULL<pos:position pos:line="558" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="558" pos:column="46"/></decl_stmt>
                            <expr_stmt><expr><name pos:line="559" pos:column="29">av<pos:position pos:line="559" pos:column="31"/></name> <operator pos:line="559" pos:column="32">+=<pos:position pos:line="559" pos:column="34"/></operator> <literal type="number" pos:line="559" pos:column="35">3<pos:position pos:line="559" pos:column="36"/></literal></expr>;<pos:position pos:line="559" pos:column="37"/></expr_stmt>
                            <if pos:line="560" pos:column="29">if <condition pos:line="560" pos:column="32">(<expr><operator pos:line="560" pos:column="33">(<pos:position pos:line="560" pos:column="34"/></operator><name pos:line="560" pos:column="34">avp<pos:position pos:line="560" pos:column="37"/></name> <operator pos:line="560" pos:column="38">=<pos:position pos:line="560" pos:column="39"/></operator> <call><name pos:line="560" pos:column="40">strchr<pos:position pos:line="560" pos:column="46"/></name><argument_list pos:line="560" pos:column="46">(<argument><expr><name pos:line="560" pos:column="47">av<pos:position pos:line="560" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="560" pos:column="51">','<pos:position pos:line="560" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="560" pos:column="55"/></argument_list></call><operator pos:line="560" pos:column="55">)<pos:position pos:line="560" pos:column="56"/></operator></expr>)<pos:position pos:line="560" pos:column="57"/></condition><then pos:line="560" pos:column="57"> <block pos:line="560" pos:column="58">{
                                <expr_stmt><expr><operator pos:line="561" pos:column="33">*<pos:position pos:line="561" pos:column="34"/></operator><name pos:line="561" pos:column="34">avp<pos:position pos:line="561" pos:column="37"/></name> <operator pos:line="561" pos:column="38">=<pos:position pos:line="561" pos:column="39"/></operator> <literal type="char" pos:line="561" pos:column="40">'\0'<pos:position pos:line="561" pos:column="44"/></literal></expr>;<pos:position pos:line="561" pos:column="45"/></expr_stmt>
                            }<pos:position pos:line="562" pos:column="30"/></block></then></if>
                        }<pos:position pos:line="563" pos:column="26"/></block></then></if>
                        <if pos:line="564" pos:column="25">if <condition pos:line="564" pos:column="28">(<expr><name pos:line="564" pos:column="29">debug_enabled<pos:position pos:line="564" pos:column="42"/></name></expr>)<pos:position pos:line="564" pos:column="43"/></condition><then pos:line="564" pos:column="43"> <block pos:line="564" pos:column="44">{
                            <expr_stmt><expr><call><name pos:line="565" pos:column="29">debug<pos:position pos:line="565" pos:column="34"/></name><argument_list pos:line="565" pos:column="34">(<argument><expr><operator pos:line="565" pos:column="35">(<pos:position pos:line="565" pos:column="36"/></operator><name pos:line="565" pos:column="36">char<pos:position pos:line="565" pos:column="40"/></name> <operator pos:line="565" pos:column="41">*<pos:position pos:line="565" pos:column="42"/></operator><operator pos:line="565" pos:column="42">)<pos:position pos:line="565" pos:column="43"/></operator> <literal type="string" pos:line="565" pos:column="44">"%s| %s: DEBUG: Entry %"<pos:position pos:line="565" pos:column="68"/></literal> <name pos:line="565" pos:column="69">PRIuSIZE<pos:position pos:line="565" pos:column="77"/></name>
                                  <literal type="string" pos:line="566" pos:column="35">" group \"%s\" is (in)direct member of group \"%s\"\n"<pos:position pos:line="566" pos:column="89"/></literal></expr></argument>,
                                  <argument><expr><call><name pos:line="567" pos:column="35">LogTime<pos:position pos:line="567" pos:column="42"/></name><argument_list pos:line="567" pos:column="42">()<pos:position pos:line="567" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="567" pos:column="46">PROGRAM<pos:position pos:line="567" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="567" pos:column="55">j<pos:position pos:line="567" pos:column="56"/></name> <operator pos:line="567" pos:column="57">+<pos:position pos:line="567" pos:column="58"/></operator> <literal type="number" pos:line="567" pos:column="59">1<pos:position pos:line="567" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="567" pos:column="62">av<pos:position pos:line="567" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="567" pos:column="66">group<pos:position pos:line="567" pos:column="71"/></name></expr></argument>)<pos:position pos:line="567" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="567" pos:column="73"/></expr_stmt>
                        }<pos:position pos:line="568" pos:column="26"/></block></then> <else pos:line="568" pos:column="27">else <block pos:line="568" pos:column="32">{
                            <break pos:line="569" pos:column="29">break;<pos:position pos:line="569" pos:column="35"/></break>
                        }<pos:position pos:line="570" pos:column="26"/></block></else></if>
                    }<pos:position pos:line="571" pos:column="22"/></block></then></if>
                }<pos:position pos:line="572" pos:column="18"/></block></for>
            }<pos:position pos:line="573" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="574" pos:column="13">/*
             * Cleanup
             */</comment>
            <if pos:line="577" pos:column="13">if <condition pos:line="577" pos:column="16">(<expr><name pos:line="577" pos:column="17">attr_value_2<pos:position pos:line="577" pos:column="29"/></name></expr>)<pos:position pos:line="577" pos:column="30"/></condition><then pos:line="577" pos:column="30"> <block pos:line="577" pos:column="31">{
                <decl_stmt><decl><type><name pos:line="578" pos:column="17">size_t<pos:position pos:line="578" pos:column="23"/></name></type> <name pos:line="578" pos:column="24">j<pos:position pos:line="578" pos:column="25"/></name></decl>;<pos:position pos:line="578" pos:column="26"/></decl_stmt>
                <for pos:line="579" pos:column="17">for <control pos:line="579" pos:column="21">(<init><expr><name pos:line="579" pos:column="22">j<pos:position pos:line="579" pos:column="23"/></name> <operator pos:line="579" pos:column="24">=<pos:position pos:line="579" pos:column="25"/></operator> <literal type="number" pos:line="579" pos:column="26">0<pos:position pos:line="579" pos:column="27"/></literal></expr>;<pos:position pos:line="579" pos:column="28"/></init> <condition><expr><name pos:line="579" pos:column="29">j<pos:position pos:line="579" pos:column="30"/></name> <operator pos:line="579" pos:column="31">&lt;<pos:position pos:line="579" pos:column="35"/></operator> <name pos:line="579" pos:column="33">max_attr_2<pos:position pos:line="579" pos:column="43"/></name></expr>;<pos:position pos:line="579" pos:column="44"/></condition> <incr><expr><operator pos:line="579" pos:column="45">++<pos:position pos:line="579" pos:column="47"/></operator><name pos:line="579" pos:column="47">j<pos:position pos:line="579" pos:column="48"/></name></expr></incr>)<pos:position pos:line="579" pos:column="49"/></control> <block pos:line="579" pos:column="50">{
                    <expr_stmt><expr><call><name pos:line="580" pos:column="21">xfree<pos:position pos:line="580" pos:column="26"/></name><argument_list pos:line="580" pos:column="26">(<argument><expr><name><name pos:line="580" pos:column="27">attr_value_2<pos:position pos:line="580" pos:column="39"/></name><index pos:line="580" pos:column="39">[<expr><name pos:line="580" pos:column="40">j<pos:position pos:line="580" pos:column="41"/></name></expr>]<pos:position pos:line="580" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="580" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="580" pos:column="44"/></expr_stmt>
                }<pos:position pos:line="581" pos:column="18"/></block></for>
                <expr_stmt><expr><call><name pos:line="582" pos:column="17">safe_free<pos:position pos:line="582" pos:column="26"/></name><argument_list pos:line="582" pos:column="26">(<argument><expr><name pos:line="582" pos:column="27">attr_value_2<pos:position pos:line="582" pos:column="39"/></name></expr></argument>)<pos:position pos:line="582" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="582" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="583" pos:column="14"/></block></then></if>

            <expr_stmt><expr><call><name pos:line="585" pos:column="13">debug<pos:position pos:line="585" pos:column="18"/></name><argument_list pos:line="585" pos:column="18">(<argument><expr><operator pos:line="585" pos:column="19">(<pos:position pos:line="585" pos:column="20"/></operator><name pos:line="585" pos:column="20">char<pos:position pos:line="585" pos:column="24"/></name> <operator pos:line="585" pos:column="25">*<pos:position pos:line="585" pos:column="26"/></operator><operator pos:line="585" pos:column="26">)<pos:position pos:line="585" pos:column="27"/></operator> <literal type="string" pos:line="585" pos:column="28">"%s| %s: DEBUG: Users primary group %s %s\n"<pos:position pos:line="585" pos:column="72"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="586" pos:column="19">LogTime<pos:position pos:line="586" pos:column="26"/></name><argument_list pos:line="586" pos:column="26">()<pos:position pos:line="586" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="586" pos:column="30">PROGRAM<pos:position pos:line="586" pos:column="37"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="586" pos:column="39">retval<pos:position pos:line="586" pos:column="45"/></name></expr> ?<pos:position pos:line="586" pos:column="47"/></condition><then pos:line="586" pos:column="47"> <expr><literal type="string" pos:line="586" pos:column="48">"matches"<pos:position pos:line="586" pos:column="57"/></literal></expr> <pos:position pos:line="586" pos:column="58"/></then><else pos:line="586" pos:column="58">: <expr><literal type="string" pos:line="586" pos:column="60">"does not match"<pos:position pos:line="586" pos:column="76"/></literal></expr></else></ternary></expr></argument>,
                  <argument><expr><name pos:line="587" pos:column="19">group<pos:position pos:line="587" pos:column="24"/></name></expr></argument>)<pos:position pos:line="587" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="587" pos:column="26"/></expr_stmt>

        }<pos:position pos:line="589" pos:column="10"/></block></then> <else pos:line="589" pos:column="11">else <block pos:line="589" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="590" pos:column="13">ldap_msgfree<pos:position pos:line="590" pos:column="25"/></name><argument_list pos:line="590" pos:column="25">(<argument><expr><name pos:line="590" pos:column="26">res<pos:position pos:line="590" pos:column="29"/></name></expr></argument>)<pos:position pos:line="590" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="590" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="591" pos:column="13">debug<pos:position pos:line="591" pos:column="18"/></name><argument_list pos:line="591" pos:column="18">(<argument><expr><operator pos:line="591" pos:column="19">(<pos:position pos:line="591" pos:column="20"/></operator><name pos:line="591" pos:column="20">char<pos:position pos:line="591" pos:column="24"/></name> <operator pos:line="591" pos:column="25">*<pos:position pos:line="591" pos:column="26"/></operator><operator pos:line="591" pos:column="26">)<pos:position pos:line="591" pos:column="27"/></operator>
                  <literal type="string" pos:line="592" pos:column="19">"%s| %s: DEBUG: Did not find ldap entry for group %s\n"<pos:position pos:line="592" pos:column="74"/></literal></expr></argument>,
                  <argument><expr><call><name pos:line="593" pos:column="19">LogTime<pos:position pos:line="593" pos:column="26"/></name><argument_list pos:line="593" pos:column="26">()<pos:position pos:line="593" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="593" pos:column="30">PROGRAM<pos:position pos:line="593" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="593" pos:column="39">group<pos:position pos:line="593" pos:column="44"/></name></expr></argument>)<pos:position pos:line="593" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="593" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="594" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="595" pos:column="9">/*
         * Cleanup
         */</comment>
        <if pos:line="598" pos:column="9">if <condition pos:line="598" pos:column="12">(<expr><name pos:line="598" pos:column="13">attr_value<pos:position pos:line="598" pos:column="23"/></name></expr>)<pos:position pos:line="598" pos:column="24"/></condition><then pos:line="598" pos:column="24"> <block pos:line="598" pos:column="25">{
            <for pos:line="599" pos:column="13">for <control pos:line="599" pos:column="17">(<init><decl><type><name pos:line="599" pos:column="18">size_t<pos:position pos:line="599" pos:column="24"/></name></type> <name pos:line="599" pos:column="25">j<pos:position pos:line="599" pos:column="26"/></name> <init pos:line="599" pos:column="27">= <expr><literal type="number" pos:line="599" pos:column="29">0<pos:position pos:line="599" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="599" pos:column="31"/></init> <condition><expr><name pos:line="599" pos:column="32">j<pos:position pos:line="599" pos:column="33"/></name> <operator pos:line="599" pos:column="34">&lt;<pos:position pos:line="599" pos:column="38"/></operator> <name pos:line="599" pos:column="36">max_attr<pos:position pos:line="599" pos:column="44"/></name></expr>;<pos:position pos:line="599" pos:column="45"/></condition> <incr><expr><operator pos:line="599" pos:column="46">++<pos:position pos:line="599" pos:column="48"/></operator><name pos:line="599" pos:column="48">j<pos:position pos:line="599" pos:column="49"/></name></expr></incr>)<pos:position pos:line="599" pos:column="50"/></control> <block pos:line="599" pos:column="51">{
                <expr_stmt><expr><call><name pos:line="600" pos:column="17">xfree<pos:position pos:line="600" pos:column="22"/></name><argument_list pos:line="600" pos:column="22">(<argument><expr><name><name pos:line="600" pos:column="23">attr_value<pos:position pos:line="600" pos:column="33"/></name><index pos:line="600" pos:column="33">[<expr><name pos:line="600" pos:column="34">j<pos:position pos:line="600" pos:column="35"/></name></expr>]<pos:position pos:line="600" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="600" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="600" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="601" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="602" pos:column="13">safe_free<pos:position pos:line="602" pos:column="22"/></name><argument_list pos:line="602" pos:column="22">(<argument><expr><name pos:line="602" pos:column="23">attr_value<pos:position pos:line="602" pos:column="33"/></name></expr></argument>)<pos:position pos:line="602" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="602" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="603" pos:column="10"/></block></then></if>
    }<pos:position pos:line="604" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="605" pos:column="5">rc<pos:position pos:line="605" pos:column="7"/></name> <operator pos:line="605" pos:column="8">=<pos:position pos:line="605" pos:column="9"/></operator> <call><name pos:line="605" pos:column="10">ldap_unbind_ext<pos:position pos:line="605" pos:column="25"/></name><argument_list pos:line="605" pos:column="25">(<argument><expr><name pos:line="605" pos:column="26">ld<pos:position pos:line="605" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="605" pos:column="30">NULL<pos:position pos:line="605" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="605" pos:column="36">NULL<pos:position pos:line="605" pos:column="40"/></name></expr></argument>)<pos:position pos:line="605" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="605" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><name pos:line="606" pos:column="5">ld<pos:position pos:line="606" pos:column="7"/></name> <operator pos:line="606" pos:column="8">=<pos:position pos:line="606" pos:column="9"/></operator> <name pos:line="606" pos:column="10">NULL<pos:position pos:line="606" pos:column="14"/></name></expr>;<pos:position pos:line="606" pos:column="15"/></expr_stmt>
    <if pos:line="607" pos:column="5">if <condition pos:line="607" pos:column="8">(<expr><name pos:line="607" pos:column="9">rc<pos:position pos:line="607" pos:column="11"/></name> <operator pos:line="607" pos:column="12">!=<pos:position pos:line="607" pos:column="14"/></operator> <name pos:line="607" pos:column="15">LDAP_SUCCESS<pos:position pos:line="607" pos:column="27"/></name></expr>)<pos:position pos:line="607" pos:column="28"/></condition><then pos:line="607" pos:column="28"> <block pos:line="607" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="608" pos:column="9">error<pos:position pos:line="608" pos:column="14"/></name><argument_list pos:line="608" pos:column="14">(<argument><expr><operator pos:line="608" pos:column="15">(<pos:position pos:line="608" pos:column="16"/></operator><name pos:line="608" pos:column="16">char<pos:position pos:line="608" pos:column="20"/></name> <operator pos:line="608" pos:column="21">*<pos:position pos:line="608" pos:column="22"/></operator><operator pos:line="608" pos:column="22">)<pos:position pos:line="608" pos:column="23"/></operator> <literal type="string" pos:line="608" pos:column="24">"%s| %s: ERROR: Error unbind ldap server: %s\n"<pos:position pos:line="608" pos:column="71"/></literal></expr></argument>,
              <argument><expr><call><name pos:line="609" pos:column="15">LogTime<pos:position pos:line="609" pos:column="22"/></name><argument_list pos:line="609" pos:column="22">()<pos:position pos:line="609" pos:column="24"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="609" pos:column="26">PROGRAM<pos:position pos:line="609" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="609" pos:column="35">ldap_err2string<pos:position pos:line="609" pos:column="50"/></name><argument_list pos:line="609" pos:column="50">(<argument><expr><name pos:line="609" pos:column="51">rc<pos:position pos:line="609" pos:column="53"/></name></expr></argument>)<pos:position pos:line="609" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="609" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="609" pos:column="56"/></expr_stmt>
    }<pos:position pos:line="610" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="611" pos:column="5">debug<pos:position pos:line="611" pos:column="10"/></name><argument_list pos:line="611" pos:column="10">(<argument><expr><operator pos:line="611" pos:column="11">(<pos:position pos:line="611" pos:column="12"/></operator><name pos:line="611" pos:column="12">char<pos:position pos:line="611" pos:column="16"/></name> <operator pos:line="611" pos:column="17">*<pos:position pos:line="611" pos:column="18"/></operator><operator pos:line="611" pos:column="18">)<pos:position pos:line="611" pos:column="19"/></operator> <literal type="string" pos:line="611" pos:column="20">"%s| %s: DEBUG: Unbind ldap server\n"<pos:position pos:line="611" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="611" pos:column="59">LogTime<pos:position pos:line="611" pos:column="66"/></name><argument_list pos:line="611" pos:column="66">()<pos:position pos:line="611" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="611" pos:column="70">PROGRAM<pos:position pos:line="611" pos:column="77"/></name></expr></argument>)<pos:position pos:line="611" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="611" pos:column="79"/></expr_stmt>
<label><name pos:line="612" pos:column="1">cleanup<pos:position pos:line="612" pos:column="8"/></name>:<pos:position pos:line="612" pos:column="9"/></label>
    <if pos:line="613" pos:column="5">if <condition pos:line="613" pos:column="8">(<expr><name pos:line="613" pos:column="9">lcreds<pos:position pos:line="613" pos:column="15"/></name></expr>)<pos:position pos:line="613" pos:column="16"/></condition><then pos:line="613" pos:column="16"> <block pos:line="613" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="614" pos:column="9">xfree<pos:position pos:line="614" pos:column="14"/></name><argument_list pos:line="614" pos:column="14">(<argument><expr><name><name pos:line="614" pos:column="15">lcreds<pos:position pos:line="614" pos:column="21"/></name><operator pos:line="614" pos:column="21">-&gt;<pos:position pos:line="614" pos:column="26"/></operator><name pos:line="614" pos:column="23">dn<pos:position pos:line="614" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="614" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="614" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="615" pos:column="9">xfree<pos:position pos:line="615" pos:column="14"/></name><argument_list pos:line="615" pos:column="14">(<argument><expr><name><name pos:line="615" pos:column="15">lcreds<pos:position pos:line="615" pos:column="21"/></name><operator pos:line="615" pos:column="21">-&gt;<pos:position pos:line="615" pos:column="26"/></operator><name pos:line="615" pos:column="23">pw<pos:position pos:line="615" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="615" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="615" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="616" pos:column="9">xfree<pos:position pos:line="616" pos:column="14"/></name><argument_list pos:line="616" pos:column="14">(<argument><expr><name pos:line="616" pos:column="15">lcreds<pos:position pos:line="616" pos:column="21"/></name></expr></argument>)<pos:position pos:line="616" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="616" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="617" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="618" pos:column="5">xfree<pos:position pos:line="618" pos:column="10"/></name><argument_list pos:line="618" pos:column="10">(<argument><expr><name pos:line="618" pos:column="11">bindp<pos:position pos:line="618" pos:column="16"/></name></expr></argument>)<pos:position pos:line="618" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="618" pos:column="18"/></expr_stmt>
    <return pos:line="619" pos:column="5">return <expr><operator pos:line="619" pos:column="12">(<pos:position pos:line="619" pos:column="13"/></operator><name pos:line="619" pos:column="13">retval<pos:position pos:line="619" pos:column="19"/></name><operator pos:line="619" pos:column="19">)<pos:position pos:line="619" pos:column="20"/></operator></expr>;<pos:position pos:line="619" pos:column="21"/></return>
}<pos:position pos:line="620" pos:column="2"/></block></function></unit>

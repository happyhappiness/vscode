<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7392_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerConnector<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">sslFinalized<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">()<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_OPENSSL<pos:position pos:line="4" pos:column="16"/></name></expr></cpp:if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">Ssl<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">::<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">TheConfig<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">.<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">ssl_crt_validator<pos:position pos:line="5" pos:column="41"/></name></name> <operator pos:line="5" pos:column="42">&amp;&amp;<pos:position pos:line="5" pos:column="52"/></operator> <name pos:line="5" pos:column="45">useCertValidator_<pos:position pos:line="5" pos:column="62"/></name></expr>)<pos:position pos:line="5" pos:column="63"/></condition><then pos:line="5" pos:column="63"> <block pos:line="5" pos:column="64">{
        <decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">int<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">fd<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><call><name pos:line="6" pos:column="24">serverConnection<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">()<pos:position pos:line="6" pos:column="42"/></argument_list></call><operator pos:line="6" pos:column="42">-&gt;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="44">fd<pos:position pos:line="6" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="7" pos:column="9">Security<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">::<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">SessionPointer<pos:position pos:line="7" pos:column="33"/></name></name></type> <name pos:line="7" pos:column="34">session<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">(<argument><expr><name><name pos:line="7" pos:column="42">fd_table<pos:position pos:line="7" pos:column="50"/></name><index pos:line="7" pos:column="50">[<expr><name pos:line="7" pos:column="51">fd<pos:position pos:line="7" pos:column="53"/></name></expr>]<pos:position pos:line="7" pos:column="54"/></index></name><operator pos:line="7" pos:column="54">.<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="55">ssl<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></decl>;<pos:position pos:line="7" pos:column="60"/></decl_stmt>

        <decl_stmt><decl><type><name><name pos:line="9" pos:column="9">Ssl<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">::<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">CertValidationRequest<pos:position pos:line="9" pos:column="35"/></name></name></type> <name pos:line="9" pos:column="36">validationRequest<pos:position pos:line="9" pos:column="53"/></name></decl>;<pos:position pos:line="9" pos:column="54"/></decl_stmt>
        <comment type="line" pos:line="10" pos:column="9">// WARNING: Currently we do not use any locking for 'errors' member</comment>
        <comment type="line" pos:line="11" pos:column="9">// of the Ssl::CertValidationRequest class. In this code the</comment>
        <comment type="line" pos:line="12" pos:column="9">// Ssl::CertValidationRequest object used only to pass data to</comment>
        <comment type="line" pos:line="13" pos:column="9">// Ssl::CertValidationHelper::submit method.</comment>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">validationRequest<pos:position pos:line="14" pos:column="26"/></name><operator pos:line="14" pos:column="26">.<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="27">ssl<pos:position pos:line="14" pos:column="30"/></name></name> <operator pos:line="14" pos:column="31">=<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="33">session<pos:position pos:line="14" pos:column="40"/></name></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<decl><type><name pos:line="15" pos:column="13">SBuf<pos:position pos:line="15" pos:column="17"/></name> <modifier pos:line="15" pos:column="18">*<pos:position pos:line="15" pos:column="19"/></modifier></type><name pos:line="15" pos:column="19">dName<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><operator pos:line="15" pos:column="27">(<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">SBuf<pos:position pos:line="15" pos:column="32"/></name> <operator pos:line="15" pos:column="33">*<pos:position pos:line="15" pos:column="34"/></operator><operator pos:line="15" pos:column="34">)<pos:position pos:line="15" pos:column="35"/></operator><call><name pos:line="15" pos:column="35">SSL_get_ex_data<pos:position pos:line="15" pos:column="50"/></name><argument_list pos:line="15" pos:column="50">(<argument><expr><call><name><name pos:line="15" pos:column="51">session<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">.<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="59">get<pos:position pos:line="15" pos:column="62"/></name></name><argument_list pos:line="15" pos:column="62">()<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="66">ssl_ex_index_server<pos:position pos:line="15" pos:column="85"/></name></expr></argument>)<pos:position pos:line="15" pos:column="86"/></argument_list></call></expr></init></decl>)<pos:position pos:line="15" pos:column="87"/></condition><then pos:line="15" pos:column="87">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="13">validationRequest<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">.<pos:position pos:line="16" pos:column="31"/></operator><name pos:line="16" pos:column="31">domainName<pos:position pos:line="16" pos:column="41"/></name></name> <operator pos:line="16" pos:column="42">=<pos:position pos:line="16" pos:column="43"/></operator> <call><name><name pos:line="16" pos:column="44">dName<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">-&gt;<pos:position pos:line="16" pos:column="54"/></operator><name pos:line="16" pos:column="51">c_str<pos:position pos:line="16" pos:column="56"/></name></name><argument_list pos:line="16" pos:column="56">()<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="59"/></expr_stmt></block></then></if>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<decl><type><name><name pos:line="17" pos:column="13">Security<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">::<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">CertErrors<pos:position pos:line="17" pos:column="33"/></name></name> <modifier pos:line="17" pos:column="34">*<pos:position pos:line="17" pos:column="35"/></modifier></type><name pos:line="17" pos:column="35">errs<pos:position pos:line="17" pos:column="39"/></name> <init pos:line="17" pos:column="40">= <expr><cast type="static" pos:line="17" pos:column="42">static_cast<argument_list type="generic" pos:line="17" pos:column="53">&lt;<argument><expr><name><name pos:line="17" pos:column="54">Security<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">::<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="64">CertErrors<pos:position pos:line="17" pos:column="74"/></name></name> <operator pos:line="17" pos:column="75">*<pos:position pos:line="17" pos:column="76"/></operator></expr></argument>&gt;<pos:position pos:line="17" pos:column="80"/></argument_list><argument_list pos:line="17" pos:column="77">(<argument><expr><call><name pos:line="17" pos:column="78">SSL_get_ex_data<pos:position pos:line="17" pos:column="93"/></name><argument_list pos:line="17" pos:column="93">(<argument><expr><call><name><name pos:line="17" pos:column="94">session<pos:position pos:line="17" pos:column="101"/></name><operator pos:line="17" pos:column="101">.<pos:position pos:line="17" pos:column="102"/></operator><name pos:line="17" pos:column="102">get<pos:position pos:line="17" pos:column="105"/></name></name><argument_list pos:line="17" pos:column="105">()<pos:position pos:line="17" pos:column="107"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="109">ssl_ex_index_ssl_errors<pos:position pos:line="17" pos:column="132"/></name></expr></argument>)<pos:position pos:line="17" pos:column="133"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="134"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="17" pos:column="135"/></condition><then pos:line="17" pos:column="135">
            <comment type="line" pos:line="18" pos:column="13">// validationRequest disappears on return so no need to cbdataReference</comment>
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="13">validationRequest<pos:position pos:line="19" pos:column="30"/></name><operator pos:line="19" pos:column="30">.<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="31">errors<pos:position pos:line="19" pos:column="37"/></name></name> <operator pos:line="19" pos:column="38">=<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="40">errs<pos:position pos:line="19" pos:column="44"/></name></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt></block></then></if>
        <try pos:line="20" pos:column="9">try <block pos:line="20" pos:column="13">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">debugs<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="number" pos:line="21" pos:column="20">83<pos:position pos:line="21" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="24">5<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="27">"Sending SSL certificate for validation to ssl_crtvd."<pos:position pos:line="21" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="83"/></expr_stmt>
            <decl_stmt><decl><type><name><name pos:line="22" pos:column="13">AsyncCall<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">::<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="24">Pointer<pos:position pos:line="22" pos:column="31"/></name></name></type> <name pos:line="22" pos:column="32">call<pos:position pos:line="22" pos:column="36"/></name> <init pos:line="22" pos:column="37">= <expr><call><name pos:line="22" pos:column="39">asyncCall<pos:position pos:line="22" pos:column="48"/></name><argument_list pos:line="22" pos:column="48">(<argument><expr><literal type="number" pos:line="22" pos:column="49">83<pos:position pos:line="22" pos:column="51"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="22" pos:column="52">5<pos:position pos:line="22" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="55">"Security::PeerConnector::sslCrtvdHandleReply"<pos:position pos:line="22" pos:column="101"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="22" pos:column="103">Ssl<pos:position pos:line="22" pos:column="106"/></name><operator pos:line="22" pos:column="106">::<pos:position pos:line="22" pos:column="108"/></operator><name pos:line="22" pos:column="108">CertValidationHelper<pos:position pos:line="22" pos:column="128"/></name><operator pos:line="22" pos:column="128">::<pos:position pos:line="22" pos:column="130"/></operator><name pos:line="22" pos:column="130">CbDialer<pos:position pos:line="22" pos:column="138"/></name></name><argument_list pos:line="22" pos:column="138">(<argument><expr><name pos:line="22" pos:column="139">this<pos:position pos:line="22" pos:column="143"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="145">&amp;<pos:position pos:line="22" pos:column="150"/></operator><name><name pos:line="22" pos:column="146">Security<pos:position pos:line="22" pos:column="154"/></name><operator pos:line="22" pos:column="154">::<pos:position pos:line="22" pos:column="156"/></operator><name pos:line="22" pos:column="156">PeerConnector<pos:position pos:line="22" pos:column="169"/></name><operator pos:line="22" pos:column="169">::<pos:position pos:line="22" pos:column="171"/></operator><name pos:line="22" pos:column="171">sslCrtvdHandleReply<pos:position pos:line="22" pos:column="190"/></name></name></expr></argument>, <argument><expr><literal type="null" pos:line="22" pos:column="192">nullptr<pos:position pos:line="22" pos:column="199"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="200"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="201"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="202"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="23" pos:column="13">Ssl<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">::<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">CertValidationHelper<pos:position pos:line="23" pos:column="38"/></name><operator pos:line="23" pos:column="38">::<pos:position pos:line="23" pos:column="40"/></operator><name pos:line="23" pos:column="40">GetInstance<pos:position pos:line="23" pos:column="51"/></name></name><argument_list pos:line="23" pos:column="51">()<pos:position pos:line="23" pos:column="53"/></argument_list></call><operator pos:line="23" pos:column="53">-&gt;<pos:position pos:line="23" pos:column="58"/></operator><call><name pos:line="23" pos:column="55">sslSubmit<pos:position pos:line="23" pos:column="64"/></name><argument_list pos:line="23" pos:column="64">(<argument><expr><name pos:line="23" pos:column="65">validationRequest<pos:position pos:line="23" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="84">call<pos:position pos:line="23" pos:column="88"/></name></expr></argument>)<pos:position pos:line="23" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="90"/></expr_stmt>
            <return pos:line="24" pos:column="13">return <expr><literal type="boolean" pos:line="24" pos:column="20">false<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></return>
        }<pos:position pos:line="25" pos:column="10"/></block> <catch pos:line="25" pos:column="11">catch <parameter_list pos:line="25" pos:column="17">(<parameter><decl><type><specifier pos:line="25" pos:column="18">const<pos:position pos:line="25" pos:column="23"/></specifier> <name><name pos:line="25" pos:column="24">std<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">::<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="29">exception<pos:position pos:line="25" pos:column="38"/></name></name> <modifier pos:line="25" pos:column="39">&amp;<pos:position pos:line="25" pos:column="44"/></modifier></type><name pos:line="25" pos:column="40">e<pos:position pos:line="25" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="25" pos:column="42"/></parameter_list> <block pos:line="25" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">debugs<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="number" pos:line="26" pos:column="20">83<pos:position pos:line="26" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="24">DBG_IMPORTANT<pos:position pos:line="26" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="39">"ERROR: Failed to compose ssl_crtvd "<pos:position pos:line="26" pos:column="76"/></literal> <operator pos:line="26" pos:column="77">&lt;&lt;<pos:position pos:line="26" pos:column="85"/></operator>
                   <literal type="string" pos:line="27" pos:column="20">"request for "<pos:position pos:line="27" pos:column="34"/></literal> <operator pos:line="27" pos:column="35">&lt;&lt;<pos:position pos:line="27" pos:column="43"/></operator> <name><name pos:line="27" pos:column="38">validationRequest<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">.<pos:position pos:line="27" pos:column="56"/></operator><name pos:line="27" pos:column="56">domainName<pos:position pos:line="27" pos:column="66"/></name></name> <operator pos:line="27" pos:column="67">&lt;&lt;<pos:position pos:line="27" pos:column="75"/></operator>
                   <literal type="string" pos:line="28" pos:column="20">" certificate: "<pos:position pos:line="28" pos:column="36"/></literal> <operator pos:line="28" pos:column="37">&lt;&lt;<pos:position pos:line="28" pos:column="45"/></operator> <call><name><name pos:line="28" pos:column="40">e<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">.<pos:position pos:line="28" pos:column="42"/></operator><name pos:line="28" pos:column="42">what<pos:position pos:line="28" pos:column="46"/></name></name><argument_list pos:line="28" pos:column="46">()<pos:position pos:line="28" pos:column="48"/></argument_list></call> <operator pos:line="28" pos:column="49">&lt;&lt;<pos:position pos:line="28" pos:column="57"/></operator> <literal type="string" pos:line="28" pos:column="52">"; will now block to "<pos:position pos:line="28" pos:column="74"/></literal> <operator pos:line="28" pos:column="75">&lt;&lt;<pos:position pos:line="28" pos:column="83"/></operator>
                   <literal type="string" pos:line="29" pos:column="20">"validate that certificate."<pos:position pos:line="29" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>
            <comment type="line" pos:line="30" pos:column="13">// fall through to do blocking in-process generation.</comment>
            <decl_stmt><decl><type><name pos:line="31" pos:column="13">ErrorState<pos:position pos:line="31" pos:column="23"/></name> <modifier pos:line="31" pos:column="24">*<pos:position pos:line="31" pos:column="25"/></modifier></type><name pos:line="31" pos:column="25">anErr<pos:position pos:line="31" pos:column="30"/></name> <init pos:line="31" pos:column="31">= <expr><operator pos:line="31" pos:column="33">new<pos:position pos:line="31" pos:column="36"/></operator> <call><name pos:line="31" pos:column="37">ErrorState<pos:position pos:line="31" pos:column="47"/></name><argument_list pos:line="31" pos:column="47">(<argument><expr><name pos:line="31" pos:column="48">ERR_GATEWAY_FAILURE<pos:position pos:line="31" pos:column="67"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="69">Http<pos:position pos:line="31" pos:column="73"/></name><operator pos:line="31" pos:column="73">::<pos:position pos:line="31" pos:column="75"/></operator><name pos:line="31" pos:column="75">scInternalServerError<pos:position pos:line="31" pos:column="96"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="31" pos:column="98">request<pos:position pos:line="31" pos:column="105"/></name><operator pos:line="31" pos:column="105">.<pos:position pos:line="31" pos:column="106"/></operator><name pos:line="31" pos:column="106">getRaw<pos:position pos:line="31" pos:column="112"/></name></name><argument_list pos:line="31" pos:column="112">()<pos:position pos:line="31" pos:column="114"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="115"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="116"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="33" pos:column="13">noteNegotiationDone<pos:position pos:line="33" pos:column="32"/></name><argument_list pos:line="33" pos:column="32">(<argument><expr><name pos:line="33" pos:column="33">anErr<pos:position pos:line="33" pos:column="38"/></name></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">bail<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">anErr<pos:position pos:line="34" pos:column="23"/></name></expr></argument>)<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="35" pos:column="13">serverConn<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">-&gt;<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="25">close<pos:position pos:line="35" pos:column="30"/></name></name><argument_list pos:line="35" pos:column="30">()<pos:position pos:line="35" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="33"/></expr_stmt>
            <return pos:line="36" pos:column="13">return <expr><literal type="boolean" pos:line="36" pos:column="20">true<pos:position pos:line="36" pos:column="24"/></literal></expr>;<pos:position pos:line="36" pos:column="25"/></return>
        }<pos:position pos:line="37" pos:column="10"/></block></catch></try>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">noteNegotiationDone<pos:position pos:line="41" pos:column="24"/></name><argument_list pos:line="41" pos:column="24">(<argument><expr><name pos:line="41" pos:column="25">NULL<pos:position pos:line="41" pos:column="29"/></name></expr></argument>)<pos:position pos:line="41" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><literal type="boolean" pos:line="42" pos:column="12">true<pos:position pos:line="42" pos:column="16"/></literal></expr>;<pos:position pos:line="42" pos:column="17"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

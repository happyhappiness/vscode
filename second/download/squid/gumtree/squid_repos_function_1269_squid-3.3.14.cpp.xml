<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1269_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">EventDialer<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">print<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">std<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">ostream<pos:position pos:line="2" pos:column="32"/></name></name> <modifier pos:line="2" pos:column="33">&amp;<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="34">os<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list> <specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">os<pos:position pos:line="4" pos:column="7"/></name> <operator pos:line="4" pos:column="8">&lt;&lt;<pos:position pos:line="4" pos:column="16"/></operator> <literal type="char" pos:line="4" pos:column="11">'('<pos:position pos:line="4" pos:column="14"/></literal></expr>;<pos:position pos:line="4" pos:column="15"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">theArg<pos:position pos:line="5" pos:column="15"/></name></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="9">os<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">&lt;&lt;<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="15">theArg<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">&lt;&lt;<pos:position pos:line="6" pos:column="30"/></operator> <operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><ternary><condition><expr><name pos:line="6" pos:column="26">isLockedArg<pos:position pos:line="6" pos:column="37"/></name></expr> ?<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39"> <expr><literal type="string" pos:line="6" pos:column="40">"*?"<pos:position pos:line="6" pos:column="44"/></literal></expr> <pos:position pos:line="6" pos:column="45"/></then><else pos:line="6" pos:column="45">: <expr><literal type="string" pos:line="6" pos:column="47">""<pos:position pos:line="6" pos:column="49"/></literal></expr></else></ternary><operator pos:line="6" pos:column="49">)<pos:position pos:line="6" pos:column="50"/></operator></expr>;<pos:position pos:line="6" pos:column="51"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name pos:line="7" pos:column="5">os<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">&lt;&lt;<pos:position pos:line="7" pos:column="16"/></operator> <literal type="char" pos:line="7" pos:column="11">')'<pos:position pos:line="7" pos:column="14"/></literal></expr>;<pos:position pos:line="7" pos:column="15"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

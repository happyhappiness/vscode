<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1340_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name><name pos:line="2" pos:column="1">LeakFinder<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">touch<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">void<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">p<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">file<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="46">int<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">line<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">p<pos:position pos:line="4" pos:column="13"/></name></expr></argument>)<pos:position pos:line="4" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="15"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">LeakFinderPtr<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">c<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><operator pos:line="5" pos:column="24">(<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">LeakFinderPtr<pos:position pos:line="5" pos:column="38"/></name> <operator pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></operator><operator pos:line="5" pos:column="40">)<pos:position pos:line="5" pos:column="41"/></operator> <call><name pos:line="5" pos:column="42">hash_lookup<pos:position pos:line="5" pos:column="53"/></name><argument_list pos:line="5" pos:column="53">(<argument><expr><name pos:line="5" pos:column="54">table<pos:position pos:line="5" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="61">p<pos:position pos:line="5" pos:column="62"/></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="64"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">c<pos:position pos:line="6" pos:column="13"/></name></expr></argument>)<pos:position pos:line="6" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">c<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">-&gt;<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="8">file<pos:position pos:line="7" pos:column="12"/></name></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <name pos:line="7" pos:column="15">file<pos:position pos:line="7" pos:column="19"/></name></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">c<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">-&gt;<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="8">line<pos:position pos:line="8" pos:column="12"/></name></name> <operator pos:line="8" pos:column="13">=<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">line<pos:position pos:line="8" pos:column="19"/></name></expr>;<pos:position pos:line="8" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">c<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">when<pos:position pos:line="9" pos:column="12"/></name></name> <operator pos:line="9" pos:column="13">=<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">squid_curtime<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></expr_stmt>
    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">p<pos:position pos:line="10" pos:column="13"/></name></expr>;<pos:position pos:line="10" pos:column="14"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

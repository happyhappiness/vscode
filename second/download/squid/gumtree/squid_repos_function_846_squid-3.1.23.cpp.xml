<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_846_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">comm_empty_os_read_buffers<pos:position pos:line="2" pos:column="27"/></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">int<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">fd<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">_SQUID_LINUX_<pos:position pos:line="4" pos:column="21"/></name></cpp:ifdef>
    <comment type="block" pos:line="5" pos:column="5">/* prevent those nasty RST packets */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">buf<pos:position pos:line="6" pos:column="13"/></name><index pos:line="6" pos:column="13">[<expr><name pos:line="6" pos:column="14">SQUID_TCP_SO_RCVBUF<pos:position pos:line="6" pos:column="33"/></name></expr>]<pos:position pos:line="6" pos:column="34"/></index></name></decl>;<pos:position pos:line="6" pos:column="35"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">fd_table<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><name pos:line="8" pos:column="18">fd<pos:position pos:line="8" pos:column="20"/></name></expr>]<pos:position pos:line="8" pos:column="21"/></index></name><operator pos:line="8" pos:column="21">.<pos:position pos:line="8" pos:column="22"/></operator><name><name pos:line="8" pos:column="22">flags<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">nonblocking<pos:position pos:line="8" pos:column="39"/></name></name> <operator pos:line="8" pos:column="40">==<pos:position pos:line="8" pos:column="42"/></operator> <literal type="number" pos:line="8" pos:column="43">1<pos:position pos:line="8" pos:column="44"/></literal></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45"> <block pos:line="8" pos:column="46">{
        <while pos:line="9" pos:column="9">while <condition pos:line="9" pos:column="15">(<expr><call><name pos:line="9" pos:column="16">FD_READ_METHOD<pos:position pos:line="9" pos:column="30"/></name><argument_list pos:line="9" pos:column="30">(<argument><expr><name pos:line="9" pos:column="31">fd<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">buf<pos:position pos:line="9" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="40">SQUID_TCP_SO_RCVBUF<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call> <operator pos:line="9" pos:column="61">&gt;<pos:position pos:line="9" pos:column="65"/></operator> <literal type="number" pos:line="9" pos:column="63">0<pos:position pos:line="9" pos:column="64"/></literal></expr>)<pos:position pos:line="9" pos:column="65"/></condition> <block pos:line="9" pos:column="66">{}<pos:position pos:line="9" pos:column="68"/></block></while><empty_stmt pos:line="9" pos:column="68">;<pos:position pos:line="9" pos:column="69"/></empty_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

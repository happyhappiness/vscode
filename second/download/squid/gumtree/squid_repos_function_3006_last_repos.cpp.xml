<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3006_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">readNextRequest<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">33<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="27">clientConnection<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">&lt;&lt;<pos:position pos:line="4" pos:column="52"/></operator> <literal type="string" pos:line="4" pos:column="47">" reading next req"<pos:position pos:line="4" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="68"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">fd_note<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><name><name pos:line="6" pos:column="13">clientConnection<pos:position pos:line="6" pos:column="29"/></name><operator pos:line="6" pos:column="29">-&gt;<pos:position pos:line="6" pos:column="34"/></operator><name pos:line="6" pos:column="31">fd<pos:position pos:line="6" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="35">"Idle client: Waiting for next request"<pos:position pos:line="6" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="76"/></expr_stmt>
    <comment type="block" format="doxygen" pos:line="7" pos:column="5">/**
     * Set the timeout BEFORE calling readSomeData().
     */</comment>
    <typedef pos:line="10" pos:column="5">typedef <type><name><name pos:line="10" pos:column="13">CommCbMemFunT<pos:position pos:line="10" pos:column="26"/></name><argument_list type="generic" pos:line="10" pos:column="26">&lt;<argument><expr><name pos:line="10" pos:column="27">ConnStateData<pos:position pos:line="10" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">CommTimeoutCbParams<pos:position pos:line="10" pos:column="61"/></name></expr></argument>&gt;<pos:position pos:line="10" pos:column="65"/></argument_list></name></type> <name pos:line="10" pos:column="63">TimeoutDialer<pos:position pos:line="10" pos:column="76"/></name>;<pos:position pos:line="10" pos:column="77"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">AsyncCall<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">::<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">Pointer<pos:position pos:line="11" pos:column="23"/></name></name></type> <name pos:line="11" pos:column="24">timeoutCall<pos:position pos:line="11" pos:column="35"/></name> <init pos:line="11" pos:column="36">= <expr><call><name pos:line="11" pos:column="38">JobCallback<pos:position pos:line="11" pos:column="49"/></name><argument_list pos:line="11" pos:column="49">(<argument><expr><literal type="number" pos:line="11" pos:column="50">33<pos:position pos:line="11" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="54">5<pos:position pos:line="11" pos:column="55"/></literal></expr></argument>,
                                     <argument><expr><name pos:line="12" pos:column="38">TimeoutDialer<pos:position pos:line="12" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="53">this<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="59">ConnStateData<pos:position pos:line="12" pos:column="72"/></name><operator pos:line="12" pos:column="72">::<pos:position pos:line="12" pos:column="74"/></operator><name pos:line="12" pos:column="74">requestTimeout<pos:position pos:line="12" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="89"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="90"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">commSetConnTimeout<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">clientConnection<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><call><name><name pos:line="13" pos:column="42">clientConnection<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">timeLeft<pos:position pos:line="13" pos:column="68"/></name></name><argument_list pos:line="13" pos:column="68">(<argument><expr><call><name pos:line="13" pos:column="69">idleTimeout<pos:position pos:line="13" pos:column="80"/></name><argument_list pos:line="13" pos:column="80">()<pos:position pos:line="13" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="85">timeoutCall<pos:position pos:line="13" pos:column="96"/></name></expr></argument>)<pos:position pos:line="13" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="98"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">readSomeData<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">()<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
    <comment type="block" format="doxygen" pos:line="16" pos:column="5">/** Please don't do anything with the FD past here! */</comment>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5349_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ftpSendType<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name><name pos:line="2" pos:column="13">Ftp<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">Gateway<pos:position pos:line="2" pos:column="25"/></name></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type> <name pos:line="2" pos:column="28">ftpState<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* check the server control channel is still available */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">ftpState<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">||<pos:position pos:line="5" pos:column="21"/></operator> <operator pos:line="5" pos:column="22">!<pos:position pos:line="5" pos:column="23"/></operator><call><name><name pos:line="5" pos:column="23">ftpState<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">-&gt;<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="33">haveControlChannel<pos:position pos:line="5" pos:column="51"/></name></name><argument_list pos:line="5" pos:column="51">(<argument><expr><literal type="string" pos:line="5" pos:column="52">"ftpSendType"<pos:position pos:line="5" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="67"/></condition><then pos:line="5" pos:column="67">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="8" pos:column="5">/*
     * Ref section 3.2.2 of RFC 1738
     */</comment>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">mode<pos:position pos:line="11" pos:column="14"/></name> <init pos:line="11" pos:column="15">= <expr><name><name pos:line="11" pos:column="17">ftpState<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">typecode<pos:position pos:line="11" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="36"/></decl_stmt>

    <switch pos:line="13" pos:column="5">switch <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">mode<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition> <block pos:line="13" pos:column="19">{

    <case pos:line="15" pos:column="5">case <expr><literal type="char" pos:line="15" pos:column="10">'D'<pos:position pos:line="15" pos:column="13"/></literal></expr>:<pos:position pos:line="15" pos:column="14"/></case>
        <expr_stmt><expr><name pos:line="16" pos:column="9">mode<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <literal type="char" pos:line="16" pos:column="16">'A'<pos:position pos:line="16" pos:column="19"/></literal></expr>;<pos:position pos:line="16" pos:column="20"/></expr_stmt>
        <break pos:line="17" pos:column="9">break;<pos:position pos:line="17" pos:column="15"/></break>

    <case pos:line="19" pos:column="5">case <expr><literal type="char" pos:line="19" pos:column="10">'A'<pos:position pos:line="19" pos:column="13"/></literal></expr>:<pos:position pos:line="19" pos:column="14"/></case>

    <case pos:line="21" pos:column="5">case <expr><literal type="char" pos:line="21" pos:column="10">'I'<pos:position pos:line="21" pos:column="13"/></literal></expr>:<pos:position pos:line="21" pos:column="14"/></case>
        <break pos:line="22" pos:column="9">break;<pos:position pos:line="22" pos:column="15"/></break>

    <default pos:line="24" pos:column="5">default:<pos:position pos:line="24" pos:column="13"/></default>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">ftpState<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">flags<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">.<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">isdir<pos:position pos:line="26" pos:column="34"/></name></name></expr>)<pos:position pos:line="26" pos:column="35"/></condition><then pos:line="26" pos:column="35"> <block pos:line="26" pos:column="36">{
            <expr_stmt><expr><name pos:line="27" pos:column="13">mode<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <literal type="char" pos:line="27" pos:column="20">'A'<pos:position pos:line="27" pos:column="23"/></literal></expr>;<pos:position pos:line="27" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then> <else pos:line="28" pos:column="11">else <block pos:line="28" pos:column="16">{
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">auto<pos:position pos:line="29" pos:column="17"/></name></type> <name pos:line="29" pos:column="18">t<pos:position pos:line="29" pos:column="19"/></name> <init pos:line="29" pos:column="20">= <expr><call><name><name pos:line="29" pos:column="22">ftpState<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">request<pos:position pos:line="29" pos:column="39"/></name><operator pos:line="29" pos:column="39">-&gt;<pos:position pos:line="29" pos:column="44"/></operator><name pos:line="29" pos:column="41">url<pos:position pos:line="29" pos:column="44"/></name><operator pos:line="29" pos:column="44">.<pos:position pos:line="29" pos:column="45"/></operator><name pos:line="29" pos:column="45">path<pos:position pos:line="29" pos:column="49"/></name></name><argument_list pos:line="29" pos:column="49">()<pos:position pos:line="29" pos:column="51"/></argument_list></call><operator pos:line="29" pos:column="51">.<pos:position pos:line="29" pos:column="52"/></operator><call><name pos:line="29" pos:column="52">rfind<pos:position pos:line="29" pos:column="57"/></name><argument_list pos:line="29" pos:column="57">(<argument><expr><literal type="char" pos:line="29" pos:column="58">'/'<pos:position pos:line="29" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="63"/></decl_stmt>
            <comment type="line" pos:line="30" pos:column="13">// XXX: performance regression, c_str() may reallocate</comment>
            <decl_stmt><decl><type><name pos:line="31" pos:column="13">SBuf<pos:position pos:line="31" pos:column="17"/></name></type> <name pos:line="31" pos:column="18">filename<pos:position pos:line="31" pos:column="26"/></name> <init pos:line="31" pos:column="27">= <expr><call><name><name pos:line="31" pos:column="29">ftpState<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">-&gt;<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="39">request<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">-&gt;<pos:position pos:line="31" pos:column="51"/></operator><name pos:line="31" pos:column="48">url<pos:position pos:line="31" pos:column="51"/></name><operator pos:line="31" pos:column="51">.<pos:position pos:line="31" pos:column="52"/></operator><name pos:line="31" pos:column="52">path<pos:position pos:line="31" pos:column="56"/></name></name><argument_list pos:line="31" pos:column="56">()<pos:position pos:line="31" pos:column="58"/></argument_list></call><operator pos:line="31" pos:column="58">.<pos:position pos:line="31" pos:column="59"/></operator><call><name pos:line="31" pos:column="59">substr<pos:position pos:line="31" pos:column="65"/></name><argument_list pos:line="31" pos:column="65">(<argument><expr><ternary><condition><expr><name pos:line="31" pos:column="66">t<pos:position pos:line="31" pos:column="67"/></name> <operator pos:line="31" pos:column="68">!=<pos:position pos:line="31" pos:column="70"/></operator> <name><name pos:line="31" pos:column="71">SBuf<pos:position pos:line="31" pos:column="75"/></name><operator pos:line="31" pos:column="75">::<pos:position pos:line="31" pos:column="77"/></operator><name pos:line="31" pos:column="77">npos<pos:position pos:line="31" pos:column="81"/></name></name></expr> ?<pos:position pos:line="31" pos:column="83"/></condition><then pos:line="31" pos:column="83"> <expr><name pos:line="31" pos:column="84">t<pos:position pos:line="31" pos:column="85"/></name> <operator pos:line="31" pos:column="86">+<pos:position pos:line="31" pos:column="87"/></operator> <literal type="number" pos:line="31" pos:column="88">1<pos:position pos:line="31" pos:column="89"/></literal></expr> <pos:position pos:line="31" pos:column="90"/></then><else pos:line="31" pos:column="90">: <expr><literal type="number" pos:line="31" pos:column="92">0<pos:position pos:line="31" pos:column="93"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="31" pos:column="94"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="95"/></decl_stmt>
            <expr_stmt><expr><name pos:line="32" pos:column="13">mode<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <call><name pos:line="32" pos:column="20">mimeGetTransferMode<pos:position pos:line="32" pos:column="39"/></name><argument_list pos:line="32" pos:column="39">(<argument><expr><call><name><name pos:line="32" pos:column="40">filename<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">.<pos:position pos:line="32" pos:column="49"/></operator><name pos:line="32" pos:column="49">c_str<pos:position pos:line="32" pos:column="54"/></name></name><argument_list pos:line="32" pos:column="54">()<pos:position pos:line="32" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></else></if>

        <break pos:line="35" pos:column="9">break;<pos:position pos:line="35" pos:column="15"/></break>
    }<pos:position pos:line="36" pos:column="6"/></block></switch>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">mode<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">==<pos:position pos:line="38" pos:column="16"/></operator> <literal type="char" pos:line="38" pos:column="17">'I'<pos:position pos:line="38" pos:column="20"/></literal></expr>)<pos:position pos:line="38" pos:column="21"/></condition><then pos:line="38" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="39" pos:column="9">ftpState<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">-&gt;<pos:position pos:line="39" pos:column="22"/></operator><name pos:line="39" pos:column="19">flags<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">.<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="25">binary<pos:position pos:line="39" pos:column="31"/></name></name> <operator pos:line="39" pos:column="32">=<pos:position pos:line="39" pos:column="33"/></operator> <literal type="number" pos:line="39" pos:column="34">1<pos:position pos:line="39" pos:column="35"/></literal></expr>;<pos:position pos:line="39" pos:column="36"/></expr_stmt></block></then>
    <else pos:line="40" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="41" pos:column="9">ftpState<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">flags<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">.<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">binary<pos:position pos:line="41" pos:column="31"/></name></name> <operator pos:line="41" pos:column="32">=<pos:position pos:line="41" pos:column="33"/></operator> <literal type="number" pos:line="41" pos:column="34">0<pos:position pos:line="41" pos:column="35"/></literal></expr>;<pos:position pos:line="41" pos:column="36"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">snprintf<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">(<argument><expr><name pos:line="43" pos:column="14">cbuf<pos:position pos:line="43" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="20">CTRL_BUFLEN<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="33">"TYPE %c\r\n"<pos:position pos:line="43" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="48">mode<pos:position pos:line="43" pos:column="52"/></name></expr></argument>)<pos:position pos:line="43" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="45" pos:column="5">ftpState<pos:position pos:line="45" pos:column="13"/></name><operator pos:line="45" pos:column="13">-&gt;<pos:position pos:line="45" pos:column="18"/></operator><name pos:line="45" pos:column="15">writeCommand<pos:position pos:line="45" pos:column="27"/></name></name><argument_list pos:line="45" pos:column="27">(<argument><expr><name pos:line="45" pos:column="28">cbuf<pos:position pos:line="45" pos:column="32"/></name></expr></argument>)<pos:position pos:line="45" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="47" pos:column="5">ftpState<pos:position pos:line="47" pos:column="13"/></name><operator pos:line="47" pos:column="13">-&gt;<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="15">state<pos:position pos:line="47" pos:column="20"/></name></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <name><name pos:line="47" pos:column="23">Ftp<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">::<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="28">Client<pos:position pos:line="47" pos:column="34"/></name><operator pos:line="47" pos:column="34">::<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="36">SENT_TYPE<pos:position pos:line="47" pos:column="45"/></name></name></expr>;<pos:position pos:line="47" pos:column="46"/></expr_stmt>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5528_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Log<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">TcpLogger<pos:position pos:line="1" pos:column="20"/></name><operator pos:line="1" pos:column="20">::<pos:position pos:line="1" pos:column="22"/></operator><name pos:line="1" pos:column="22">writeIfPossible<pos:position pos:line="1" pos:column="37"/></name></name><parameter_list pos:line="1" pos:column="37">()<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><name pos:line="3" pos:column="12">MY_DEBUG_SECTION<pos:position pos:line="3" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="30">7<pos:position pos:line="3" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="3" pos:column="33">"guards: "<pos:position pos:line="3" pos:column="43"/></literal> <operator pos:line="3" pos:column="44">&lt;&lt;<pos:position pos:line="3" pos:column="52"/></operator> <operator pos:line="3" pos:column="47">(<pos:position pos:line="3" pos:column="48"/></operator><operator pos:line="3" pos:column="48">!<pos:position pos:line="3" pos:column="49"/></operator><name pos:line="3" pos:column="49">writeScheduled<pos:position pos:line="3" pos:column="63"/></name><operator pos:line="3" pos:column="63">)<pos:position pos:line="3" pos:column="64"/></operator> <operator pos:line="3" pos:column="65">&lt;&lt;<pos:position pos:line="3" pos:column="73"/></operator>
           <operator pos:line="4" pos:column="12">(<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">bufferedSize<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">&gt;<pos:position pos:line="4" pos:column="30"/></operator> <literal type="number" pos:line="4" pos:column="28">0<pos:position pos:line="4" pos:column="29"/></literal><operator pos:line="4" pos:column="29">)<pos:position pos:line="4" pos:column="30"/></operator> <operator pos:line="4" pos:column="31">&lt;&lt;<pos:position pos:line="4" pos:column="39"/></operator> <operator pos:line="4" pos:column="34">(<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">conn<pos:position pos:line="4" pos:column="39"/></name> <operator pos:line="4" pos:column="40">!=<pos:position pos:line="4" pos:column="42"/></operator> <name pos:line="4" pos:column="43">NULL<pos:position pos:line="4" pos:column="47"/></name><operator pos:line="4" pos:column="47">)<pos:position pos:line="4" pos:column="48"/></operator> <operator pos:line="4" pos:column="49">&lt;&lt;<pos:position pos:line="4" pos:column="57"/></operator>
           <operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">conn<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">!=<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&amp;&amp;<pos:position pos:line="5" pos:column="36"/></operator> <operator pos:line="5" pos:column="29">!<pos:position pos:line="5" pos:column="30"/></operator><name><name pos:line="5" pos:column="30">fd_table<pos:position pos:line="5" pos:column="38"/></name><index pos:line="5" pos:column="38">[<expr><name><name pos:line="5" pos:column="39">conn<pos:position pos:line="5" pos:column="43"/></name><operator pos:line="5" pos:column="43">-&gt;<pos:position pos:line="5" pos:column="48"/></operator><name pos:line="5" pos:column="45">fd<pos:position pos:line="5" pos:column="47"/></name></name></expr>]<pos:position pos:line="5" pos:column="48"/></index></name><operator pos:line="5" pos:column="48">.<pos:position pos:line="5" pos:column="49"/></operator><call><name pos:line="5" pos:column="49">closing<pos:position pos:line="5" pos:column="56"/></name><argument_list pos:line="5" pos:column="56">()<pos:position pos:line="5" pos:column="58"/></argument_list></call><operator pos:line="5" pos:column="58">)<pos:position pos:line="5" pos:column="59"/></operator> <operator pos:line="5" pos:column="60">&lt;&lt;<pos:position pos:line="5" pos:column="68"/></operator> <literal type="string" pos:line="5" pos:column="63">" buffered: "<pos:position pos:line="5" pos:column="76"/></literal> <operator pos:line="5" pos:column="77">&lt;&lt;<pos:position pos:line="5" pos:column="85"/></operator>
           <name pos:line="6" pos:column="12">bufferedSize<pos:position pos:line="6" pos:column="24"/></name> <operator pos:line="6" pos:column="25">&lt;&lt;<pos:position pos:line="6" pos:column="33"/></operator> <literal type="char" pos:line="6" pos:column="28">'/'<pos:position pos:line="6" pos:column="31"/></literal> <operator pos:line="6" pos:column="32">&lt;&lt;<pos:position pos:line="6" pos:column="40"/></operator> <call><name><name pos:line="6" pos:column="35">buffers<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">.<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">size<pos:position pos:line="6" pos:column="47"/></name></name><argument_list pos:line="6" pos:column="47">()<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="51"/></expr_stmt>

    <comment type="line" pos:line="8" pos:column="5">// XXX: Squid shutdown sequence starts closing our connection before</comment>
    <comment type="line" pos:line="9" pos:column="5">// calling LogfileClose, leading to loss of log records during shutdown.</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">writeScheduled<pos:position pos:line="10" pos:column="24"/></name> <operator pos:line="10" pos:column="25">&amp;&amp;<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="28">bufferedSize<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">&gt;<pos:position pos:line="10" pos:column="45"/></operator> <literal type="number" pos:line="10" pos:column="43">0<pos:position pos:line="10" pos:column="44"/></literal> <operator pos:line="10" pos:column="45">&amp;&amp;<pos:position pos:line="10" pos:column="55"/></operator> <name pos:line="10" pos:column="48">conn<pos:position pos:line="10" pos:column="52"/></name> <operator pos:line="10" pos:column="53">!=<pos:position pos:line="10" pos:column="55"/></operator> <name pos:line="10" pos:column="56">NULL<pos:position pos:line="10" pos:column="60"/></name> <operator pos:line="10" pos:column="61">&amp;&amp;<pos:position pos:line="10" pos:column="71"/></operator>
            <operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name><name pos:line="11" pos:column="14">fd_table<pos:position pos:line="11" pos:column="22"/></name><index pos:line="11" pos:column="22">[<expr><name><name pos:line="11" pos:column="23">conn<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">fd<pos:position pos:line="11" pos:column="31"/></name></name></expr>]<pos:position pos:line="11" pos:column="32"/></index></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><call><name pos:line="11" pos:column="33">closing<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">()<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43"> <block pos:line="11" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">MY_DEBUG_SECTION<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="34">5<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="37">"writing first buffer"<pos:position pos:line="12" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="61"/></expr_stmt>

        <typedef pos:line="14" pos:column="9">typedef <type><name><name pos:line="14" pos:column="17">CommCbMemFunT<pos:position pos:line="14" pos:column="30"/></name><argument_list type="generic" pos:line="14" pos:column="30">&lt;<argument><expr><name pos:line="14" pos:column="31">TcpLogger<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">CommIoCbParams<pos:position pos:line="14" pos:column="56"/></name></expr></argument>&gt;<pos:position pos:line="14" pos:column="60"/></argument_list></name></type> <name pos:line="14" pos:column="58">WriteDialer<pos:position pos:line="14" pos:column="69"/></name>;<pos:position pos:line="14" pos:column="70"/></typedef>
        <decl_stmt><decl><type><name><name pos:line="15" pos:column="9">AsyncCall<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">::<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="20">Pointer<pos:position pos:line="15" pos:column="27"/></name></name></type> <name pos:line="15" pos:column="28">callback<pos:position pos:line="15" pos:column="36"/></name> <init pos:line="15" pos:column="37">= <expr><call><name pos:line="15" pos:column="39">JobCallback<pos:position pos:line="15" pos:column="50"/></name><argument_list pos:line="15" pos:column="50">(<argument><expr><name pos:line="15" pos:column="51">MY_DEBUG_SECTION<pos:position pos:line="15" pos:column="67"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="69">5<pos:position pos:line="15" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="72">WriteDialer<pos:position pos:line="15" pos:column="83"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="85">this<pos:position pos:line="15" pos:column="89"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="91">Log<pos:position pos:line="15" pos:column="94"/></name><operator pos:line="15" pos:column="94">::<pos:position pos:line="15" pos:column="96"/></operator><name pos:line="15" pos:column="96">TcpLogger<pos:position pos:line="15" pos:column="105"/></name><operator pos:line="15" pos:column="105">::<pos:position pos:line="15" pos:column="107"/></operator><name pos:line="15" pos:column="107">writeDone<pos:position pos:line="15" pos:column="116"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="117"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="118"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <name><name pos:line="16" pos:column="15">MemBlob<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">::<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">Pointer<pos:position pos:line="16" pos:column="31"/></name></name> <modifier pos:line="16" pos:column="32">&amp;<pos:position pos:line="16" pos:column="37"/></modifier></type><name pos:line="16" pos:column="33">buffer<pos:position pos:line="16" pos:column="39"/></name> <init pos:line="16" pos:column="40">= <expr><call><name><name pos:line="16" pos:column="42">buffers<pos:position pos:line="16" pos:column="49"/></name><operator pos:line="16" pos:column="49">.<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="50">front<pos:position pos:line="16" pos:column="55"/></name></name><argument_list pos:line="16" pos:column="55">()<pos:position pos:line="16" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="58"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="17" pos:column="9">Comm<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">::<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">Write<pos:position pos:line="17" pos:column="20"/></name></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">conn<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="27">buffer<pos:position pos:line="17" pos:column="33"/></name><operator pos:line="17" pos:column="33">-&gt;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="35">mem<pos:position pos:line="17" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="40">buffer<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">size<pos:position pos:line="17" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">callback<pos:position pos:line="17" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="64">NULL<pos:position pos:line="17" pos:column="68"/></name></expr></argument>)<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">writeScheduled<pos:position pos:line="18" pos:column="23"/></name> <operator pos:line="18" pos:column="24">=<pos:position pos:line="18" pos:column="25"/></operator> <literal type="boolean" pos:line="18" pos:column="26">true<pos:position pos:line="18" pos:column="30"/></literal></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

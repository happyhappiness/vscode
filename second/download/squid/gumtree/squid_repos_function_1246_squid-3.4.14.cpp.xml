<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1246_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">memConfigure<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">void<pos:position pos:line="2" pos:column="18"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="19"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int64_t<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">new_pool_limit<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

    <comment type="block" format="doxygen" pos:line="6" pos:column="5">/** Set to configured value first */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">Config<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">.<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">onoff<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">.<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">mem_pools<pos:position pos:line="7" pos:column="32"/></name></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">new_pool_limit<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">=<pos:position pos:line="8" pos:column="25"/></operator> <literal type="number" pos:line="8" pos:column="26">0<pos:position pos:line="8" pos:column="27"/></literal></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt></block></then>
    <elseif pos:line="9" pos:column="5">else <if pos:line="9" pos:column="10">if <condition pos:line="9" pos:column="13">(<expr><name><name pos:line="9" pos:column="14">Config<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">MemPools<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">.<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">limit<pos:position pos:line="9" pos:column="35"/></name></name> <operator pos:line="9" pos:column="36">&gt;<pos:position pos:line="9" pos:column="40"/></operator> <literal type="number" pos:line="9" pos:column="38">0<pos:position pos:line="9" pos:column="39"/></literal></expr>)<pos:position pos:line="9" pos:column="40"/></condition><then pos:line="9" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">new_pool_limit<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">=<pos:position pos:line="10" pos:column="25"/></operator> <name><name pos:line="10" pos:column="26">Config<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">.<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">MemPools<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">.<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">limit<pos:position pos:line="10" pos:column="47"/></name></name></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt></block></then></if></elseif>
    <else pos:line="11" pos:column="5">else <block pos:line="11" pos:column="10">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name><name pos:line="12" pos:column="13">Config<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">MemPools<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">.<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">limit<pos:position pos:line="12" pos:column="34"/></name></name> <operator pos:line="12" pos:column="35">==<pos:position pos:line="12" pos:column="37"/></operator> <literal type="number" pos:line="12" pos:column="38">0<pos:position pos:line="12" pos:column="39"/></literal></expr>)<pos:position pos:line="12" pos:column="40"/></condition><then pos:line="12" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="13">debugs<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">13<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="24">DBG_IMPORTANT<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="39">"memory_pools_limit 0 has been chagned to memory_pools_limit none. Please update your config"<pos:position pos:line="13" pos:column="132"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="134"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="14" pos:column="9">new_pool_limit<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <operator pos:line="14" pos:column="26">-<pos:position pos:line="14" pos:column="27"/></operator><literal type="number" pos:line="14" pos:column="27">1<pos:position pos:line="14" pos:column="28"/></literal></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></else></if>

<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="17" pos:column="5">0<pos:position pos:line="17" pos:column="6"/></literal></expr></cpp:if>
    <comment type="block" format="doxygen" pos:line="18" pos:column="5">/** \par
     * DPW 2007-04-12
     * No debugging here please because this method is called before
     * the debug log is configured and we'll get the message on
     * stderr when doing things like 'squid -k reconfigure'
     */</comment>
    if (MemPools::GetInstance().idleLimit() &gt; new_pool_limit)
        debugs(13, DBG_IMPORTANT, "Shrinking idle mem pools to "&lt;&lt; std::setprecision(3) &lt;&lt; toMB(new_pool_limit) &lt;&lt; " MB");
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name><name pos:line="28" pos:column="5">MemPools<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">::<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">GetInstance<pos:position pos:line="28" pos:column="26"/></name></name><argument_list pos:line="28" pos:column="26">()<pos:position pos:line="28" pos:column="28"/></argument_list></call><operator pos:line="28" pos:column="28">.<pos:position pos:line="28" pos:column="29"/></operator><call><name pos:line="28" pos:column="29">setIdleLimit<pos:position pos:line="28" pos:column="41"/></name><argument_list pos:line="28" pos:column="41">(<argument><expr><name pos:line="28" pos:column="42">new_pool_limit<pos:position pos:line="28" pos:column="56"/></name></expr></argument>)<pos:position pos:line="28" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="58"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

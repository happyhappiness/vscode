<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3162_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">gopherStart<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">FwdState<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type> <name pos:line="2" pos:column="24">fwd<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">fd<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><name><name pos:line="4" pos:column="14">fwd<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">-&gt;<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="19">server_fd<pos:position pos:line="4" pos:column="28"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StoreEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">entry<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name><name pos:line="5" pos:column="25">fwd<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">entry<pos:position pos:line="5" pos:column="35"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">GopherStateData<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">gopherState<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">CBDATA_INIT_TYPE<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">GopherStateData<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">gopherState<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">cbdataAlloc<pos:position pos:line="8" pos:column="30"/></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">GopherStateData<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">gopherState<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">buf<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">=<pos:position pos:line="9" pos:column="23"/></operator> <operator pos:line="9" pos:column="24">(<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">char<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">*<pos:position pos:line="9" pos:column="31"/></operator><operator pos:line="9" pos:column="31">)<pos:position pos:line="9" pos:column="32"/></operator><call><name pos:line="9" pos:column="32">memAllocate<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">MEM_4K_BUF<pos:position pos:line="9" pos:column="54"/></name></expr></argument>)<pos:position pos:line="9" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">entry<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">lock<pos:position pos:line="11" pos:column="16"/></name></name><argument_list pos:line="11" pos:column="16">()<pos:position pos:line="11" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">gopherState<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">entry<pos:position pos:line="12" pos:column="23"/></name></name> <operator pos:line="12" pos:column="24">=<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">entry<pos:position pos:line="12" pos:column="31"/></name></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">gopherState<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">fwd<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="24">fwd<pos:position pos:line="14" pos:column="27"/></name></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">10<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">3<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"gopherStart: "<pos:position pos:line="16" pos:column="34"/></literal> <operator pos:line="16" pos:column="35">&lt;&lt;<pos:position pos:line="16" pos:column="43"/></operator> <call><name><name pos:line="16" pos:column="38">entry<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">-&gt;<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="45">url<pos:position pos:line="16" pos:column="48"/></name></name><argument_list pos:line="16" pos:column="48">()<pos:position pos:line="16" pos:column="50"/></argument_list></call></expr></argument>  )<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">statCounter<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">.<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="17">server<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">.<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">all<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">requests<pos:position pos:line="18" pos:column="36"/></name></name><operator pos:line="18" pos:column="36">++<pos:position pos:line="18" pos:column="38"/></operator></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="20" pos:column="5">statCounter<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">.<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="17">server<pos:position pos:line="20" pos:column="23"/></name><operator pos:line="20" pos:column="23">.<pos:position pos:line="20" pos:column="24"/></operator><name pos:line="20" pos:column="24">other<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">.<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">requests<pos:position pos:line="20" pos:column="38"/></name></name><operator pos:line="20" pos:column="38">++<pos:position pos:line="20" pos:column="40"/></operator></expr>;<pos:position pos:line="20" pos:column="41"/></expr_stmt>

    <comment type="block" pos:line="22" pos:column="5">/* Parse url. */</comment>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">gopher_request_parse<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name><name pos:line="23" pos:column="26">fwd<pos:position pos:line="23" pos:column="29"/></name><operator pos:line="23" pos:column="29">-&gt;<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="31">request<pos:position pos:line="23" pos:column="38"/></name></name></expr></argument>,
                         <argument><expr><operator pos:line="24" pos:column="26">&amp;<pos:position pos:line="24" pos:column="31"/></operator><name><name pos:line="24" pos:column="27">gopherState<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">-&gt;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="40">type_id<pos:position pos:line="24" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="49">gopherState<pos:position pos:line="24" pos:column="60"/></name><operator pos:line="24" pos:column="60">-&gt;<pos:position pos:line="24" pos:column="65"/></operator><name pos:line="24" pos:column="62">request<pos:position pos:line="24" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">comm_add_close_handler<pos:position pos:line="26" pos:column="27"/></name><argument_list pos:line="26" pos:column="27">(<argument><expr><name pos:line="26" pos:column="28">fd<pos:position pos:line="26" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="32">gopherStateFree<pos:position pos:line="26" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="49">gopherState<pos:position pos:line="26" pos:column="60"/></name></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="62"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">(<pos:position pos:line="28" pos:column="10"/></operator><operator pos:line="28" pos:column="10">(<pos:position pos:line="28" pos:column="11"/></operator><name><name pos:line="28" pos:column="11">gopherState<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">type_id<pos:position pos:line="28" pos:column="31"/></name></name> <operator pos:line="28" pos:column="32">==<pos:position pos:line="28" pos:column="34"/></operator> <name pos:line="28" pos:column="35">GOPHER_INDEX<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">)<pos:position pos:line="28" pos:column="48"/></operator> <operator pos:line="28" pos:column="49">||<pos:position pos:line="28" pos:column="51"/></operator> <operator pos:line="28" pos:column="52">(<pos:position pos:line="28" pos:column="53"/></operator><name><name pos:line="28" pos:column="53">gopherState<pos:position pos:line="28" pos:column="64"/></name><operator pos:line="28" pos:column="64">-&gt;<pos:position pos:line="28" pos:column="69"/></operator><name pos:line="28" pos:column="66">type_id<pos:position pos:line="28" pos:column="73"/></name></name> <operator pos:line="28" pos:column="74">==<pos:position pos:line="28" pos:column="76"/></operator> <name pos:line="28" pos:column="77">GOPHER_CSO<pos:position pos:line="28" pos:column="87"/></name><operator pos:line="28" pos:column="87">)<pos:position pos:line="28" pos:column="88"/></operator><operator pos:line="28" pos:column="88">)<pos:position pos:line="28" pos:column="89"/></operator>
            <operator pos:line="29" pos:column="13">&amp;&amp;<pos:position pos:line="29" pos:column="23"/></operator> <operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><call><name pos:line="29" pos:column="17">strchr<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name><name pos:line="29" pos:column="24">gopherState<pos:position pos:line="29" pos:column="35"/></name><operator pos:line="29" pos:column="35">-&gt;<pos:position pos:line="29" pos:column="40"/></operator><name pos:line="29" pos:column="37">request<pos:position pos:line="29" pos:column="44"/></name></name></expr></argument>, <argument><expr><literal type="char" pos:line="29" pos:column="46">'?'<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call> <operator pos:line="29" pos:column="51">==<pos:position pos:line="29" pos:column="53"/></operator> <name pos:line="29" pos:column="54">NULL<pos:position pos:line="29" pos:column="58"/></name><operator pos:line="29" pos:column="58">)<pos:position pos:line="29" pos:column="59"/></operator></expr>)<pos:position pos:line="29" pos:column="60"/></condition><then pos:line="29" pos:column="60"> <block pos:line="29" pos:column="61">{
        <comment type="block" pos:line="30" pos:column="9">/* Index URL without query word */</comment>
        <comment type="block" pos:line="31" pos:column="9">/* We have to generate search page back to client. No need for connection */</comment>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">gopherMimeCreate<pos:position pos:line="32" pos:column="25"/></name><argument_list pos:line="32" pos:column="25">(<argument><expr><name pos:line="32" pos:column="26">gopherState<pos:position pos:line="32" pos:column="37"/></name></expr></argument>)<pos:position pos:line="32" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>

        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name><name pos:line="34" pos:column="13">gopherState<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">type_id<pos:position pos:line="34" pos:column="33"/></name></name> <operator pos:line="34" pos:column="34">==<pos:position pos:line="34" pos:column="36"/></operator> <name pos:line="34" pos:column="37">GOPHER_INDEX<pos:position pos:line="34" pos:column="49"/></name></expr>)<pos:position pos:line="34" pos:column="50"/></condition><then pos:line="34" pos:column="50"> <block pos:line="34" pos:column="51">{
            <expr_stmt><expr><name><name pos:line="35" pos:column="13">gopherState<pos:position pos:line="35" pos:column="24"/></name><operator pos:line="35" pos:column="24">-&gt;<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="26">conversion<pos:position pos:line="35" pos:column="36"/></name></name> <operator pos:line="35" pos:column="37">=<pos:position pos:line="35" pos:column="38"/></operator> <name><name pos:line="35" pos:column="39">gopher_ds<pos:position pos:line="35" pos:column="48"/></name><operator pos:line="35" pos:column="48">::<pos:position pos:line="35" pos:column="50"/></operator><name pos:line="35" pos:column="50">HTML_INDEX_PAGE<pos:position pos:line="35" pos:column="65"/></name></name></expr>;<pos:position pos:line="35" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then> <else pos:line="36" pos:column="11">else <block pos:line="36" pos:column="16">{
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name><name pos:line="37" pos:column="17">gopherState<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">type_id<pos:position pos:line="37" pos:column="37"/></name></name> <operator pos:line="37" pos:column="38">==<pos:position pos:line="37" pos:column="40"/></operator> <name pos:line="37" pos:column="41">GOPHER_CSO<pos:position pos:line="37" pos:column="51"/></name></expr>)<pos:position pos:line="37" pos:column="52"/></condition><then pos:line="37" pos:column="52"> <block pos:line="37" pos:column="53">{
                <expr_stmt><expr><name><name pos:line="38" pos:column="17">gopherState<pos:position pos:line="38" pos:column="28"/></name><operator pos:line="38" pos:column="28">-&gt;<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="30">conversion<pos:position pos:line="38" pos:column="40"/></name></name> <operator pos:line="38" pos:column="41">=<pos:position pos:line="38" pos:column="42"/></operator> <name><name pos:line="38" pos:column="43">gopher_ds<pos:position pos:line="38" pos:column="52"/></name><operator pos:line="38" pos:column="52">::<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="54">HTML_CSO_PAGE<pos:position pos:line="38" pos:column="67"/></name></name></expr>;<pos:position pos:line="38" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="39" pos:column="14"/></block></then> <else pos:line="39" pos:column="15">else <block pos:line="39" pos:column="20">{
                <expr_stmt><expr><name><name pos:line="40" pos:column="17">gopherState<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">conversion<pos:position pos:line="40" pos:column="40"/></name></name> <operator pos:line="40" pos:column="41">=<pos:position pos:line="40" pos:column="42"/></operator> <name><name pos:line="40" pos:column="43">gopher_ds<pos:position pos:line="40" pos:column="52"/></name><operator pos:line="40" pos:column="52">::<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="54">HTML_INDEX_PAGE<pos:position pos:line="40" pos:column="69"/></name></name></expr>;<pos:position pos:line="40" pos:column="70"/></expr_stmt>
            }<pos:position pos:line="41" pos:column="14"/></block></else></if>
        }<pos:position pos:line="42" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="44" pos:column="9">gopherToHTML<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">gopherState<pos:position pos:line="44" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="35">(<pos:position pos:line="44" pos:column="36"/></operator><name pos:line="44" pos:column="36">char<pos:position pos:line="44" pos:column="40"/></name> <operator pos:line="44" pos:column="41">*<pos:position pos:line="44" pos:column="42"/></operator><operator pos:line="44" pos:column="42">)<pos:position pos:line="44" pos:column="43"/></operator> <name pos:line="44" pos:column="44">NULL<pos:position pos:line="44" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="50">0<pos:position pos:line="44" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="45" pos:column="9">fwd<pos:position pos:line="45" pos:column="12"/></name><operator pos:line="45" pos:column="12">-&gt;<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="14">complete<pos:position pos:line="45" pos:column="22"/></name></name><argument_list pos:line="45" pos:column="22">()<pos:position pos:line="45" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">comm_close<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><name pos:line="46" pos:column="20">fd<pos:position pos:line="46" pos:column="22"/></name></expr></argument>)<pos:position pos:line="46" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="24"/></expr_stmt>
        <return pos:line="47" pos:column="9">return;<pos:position pos:line="47" pos:column="16"/></return>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="50" pos:column="5">gopherState<pos:position pos:line="50" pos:column="16"/></name><operator pos:line="50" pos:column="16">-&gt;<pos:position pos:line="50" pos:column="21"/></operator><name pos:line="50" pos:column="18">fd<pos:position pos:line="50" pos:column="20"/></name></name> <operator pos:line="50" pos:column="21">=<pos:position pos:line="50" pos:column="22"/></operator> <name pos:line="50" pos:column="23">fd<pos:position pos:line="50" pos:column="25"/></name></expr>;<pos:position pos:line="50" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">gopherState<pos:position pos:line="51" pos:column="16"/></name><operator pos:line="51" pos:column="16">-&gt;<pos:position pos:line="51" pos:column="21"/></operator><name pos:line="51" pos:column="18">fwd<pos:position pos:line="51" pos:column="21"/></name></name> <operator pos:line="51" pos:column="22">=<pos:position pos:line="51" pos:column="23"/></operator> <name pos:line="51" pos:column="24">fwd<pos:position pos:line="51" pos:column="27"/></name></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="52" pos:column="5">gopherSendRequest<pos:position pos:line="52" pos:column="22"/></name><argument_list pos:line="52" pos:column="22">(<argument><expr><name pos:line="52" pos:column="23">fd<pos:position pos:line="52" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="27">gopherState<pos:position pos:line="52" pos:column="38"/></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">commSetTimeout<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><name pos:line="53" pos:column="20">fd<pos:position pos:line="53" pos:column="22"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="24">Config<pos:position pos:line="53" pos:column="30"/></name><operator pos:line="53" pos:column="30">.<pos:position pos:line="53" pos:column="31"/></operator><name pos:line="53" pos:column="31">Timeout<pos:position pos:line="53" pos:column="38"/></name><operator pos:line="53" pos:column="38">.<pos:position pos:line="53" pos:column="39"/></operator><name pos:line="53" pos:column="39">read<pos:position pos:line="53" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="45">gopherTimeout<pos:position pos:line="53" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="60">gopherState<pos:position pos:line="53" pos:column="71"/></name></expr></argument>)<pos:position pos:line="53" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="73"/></expr_stmt>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4727_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLDestinationDomainStrategy<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">match<pos:position pos:line="2" pos:column="36"/></name></name> <parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><name><name pos:line="2" pos:column="38">ACLData<pos:position pos:line="2" pos:column="45"/></name><argument_list type="generic" pos:line="2" pos:column="45">&lt;<argument><expr><name pos:line="2" pos:column="46">MatchType<pos:position pos:line="2" pos:column="55"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="59"/></argument_list></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier> <modifier pos:line="2" pos:column="59">&amp;<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="60">data<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">ACLFilledChecklist<pos:position pos:line="2" pos:column="84"/></name> <modifier pos:line="2" pos:column="85">*<pos:position pos:line="2" pos:column="86"/></modifier></type><name pos:line="2" pos:column="86">checklist<pos:position pos:line="2" pos:column="95"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="97">ACLFlags<pos:position pos:line="2" pos:column="105"/></name> <modifier pos:line="2" pos:column="106">&amp;<pos:position pos:line="2" pos:column="111"/></modifier></type><name pos:line="2" pos:column="107">flags<pos:position pos:line="2" pos:column="112"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="113"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">checklist<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">!=<pos:position pos:line="4" pos:column="24"/></operator> <name pos:line="4" pos:column="25">NULL<pos:position pos:line="4" pos:column="29"/></name> <operator pos:line="4" pos:column="30">&amp;&amp;<pos:position pos:line="4" pos:column="40"/></operator> <name><name pos:line="4" pos:column="33">checklist<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">-&gt;<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="44">request<pos:position pos:line="4" pos:column="51"/></name></name> <operator pos:line="4" pos:column="52">!=<pos:position pos:line="4" pos:column="54"/></operator> <name pos:line="4" pos:column="55">NULL<pos:position pos:line="4" pos:column="59"/></name></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="61"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name><name pos:line="6" pos:column="9">data<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">match<pos:position pos:line="6" pos:column="20"/></name></name><argument_list pos:line="6" pos:column="20">(<argument><expr><call><name><name pos:line="6" pos:column="21">checklist<pos:position pos:line="6" pos:column="30"/></name><operator pos:line="6" pos:column="30">-&gt;<pos:position pos:line="6" pos:column="35"/></operator><name pos:line="6" pos:column="32">request<pos:position pos:line="6" pos:column="39"/></name><operator pos:line="6" pos:column="39">-&gt;<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="41">GetHost<pos:position pos:line="6" pos:column="48"/></name></name><argument_list pos:line="6" pos:column="48">()<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="52"/></condition><then pos:line="6" pos:column="52"> <block pos:line="6" pos:column="53">{
        <return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">1<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name><name pos:line="10" pos:column="9">flags<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">isSet<pos:position pos:line="10" pos:column="20"/></name></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">ACL_F_NO_LOOKUP<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38"> <block pos:line="10" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">28<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"aclMatchAcl:  No-lookup DNS ACL '"<pos:position pos:line="11" pos:column="58"/></literal> <operator pos:line="11" pos:column="59">&lt;&lt;<pos:position pos:line="11" pos:column="67"/></operator> <name pos:line="11" pos:column="62">AclMatchedName<pos:position pos:line="11" pos:column="76"/></name> <operator pos:line="11" pos:column="77">&lt;&lt;<pos:position pos:line="11" pos:column="85"/></operator> <literal type="string" pos:line="11" pos:column="80">"' for '"<pos:position pos:line="11" pos:column="89"/></literal> <operator pos:line="11" pos:column="90">&lt;&lt;<pos:position pos:line="11" pos:column="98"/></operator> <call><name><name pos:line="11" pos:column="93">checklist<pos:position pos:line="11" pos:column="102"/></name><operator pos:line="11" pos:column="102">-&gt;<pos:position pos:line="11" pos:column="107"/></operator><name pos:line="11" pos:column="104">request<pos:position pos:line="11" pos:column="111"/></name><operator pos:line="11" pos:column="111">-&gt;<pos:position pos:line="11" pos:column="116"/></operator><name pos:line="11" pos:column="113">GetHost<pos:position pos:line="11" pos:column="120"/></name></name><argument_list pos:line="11" pos:column="120">()<pos:position pos:line="11" pos:column="122"/></argument_list></call> <operator pos:line="11" pos:column="123">&lt;&lt;<pos:position pos:line="11" pos:column="131"/></operator> <literal type="string" pos:line="11" pos:column="126">"'"<pos:position pos:line="11" pos:column="129"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="131"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><literal type="number" pos:line="12" pos:column="16">0<pos:position pos:line="12" pos:column="17"/></literal></expr>;<pos:position pos:line="12" pos:column="18"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* numeric IPA? no, trust the above result. */</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name><name pos:line="16" pos:column="9">checklist<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">-&gt;<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="20">request<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">-&gt;<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="29">GetHostIsNumeric<pos:position pos:line="16" pos:column="45"/></name></name><argument_list pos:line="16" pos:column="45">()<pos:position pos:line="16" pos:column="47"/></argument_list></call> <operator pos:line="16" pos:column="48">==<pos:position pos:line="16" pos:column="50"/></operator> <literal type="number" pos:line="16" pos:column="51">0<pos:position pos:line="16" pos:column="52"/></literal></expr>)<pos:position pos:line="16" pos:column="53"/></condition><then pos:line="16" pos:column="53"> <block pos:line="16" pos:column="54">{
        <return pos:line="17" pos:column="9">return <expr><literal type="number" pos:line="17" pos:column="16">0<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/* do we already have the rDNS? match on it if we do. */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">checklist<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">dst_rdns<pos:position pos:line="21" pos:column="28"/></name></name></expr>)<pos:position pos:line="21" pos:column="29"/></condition><then pos:line="21" pos:column="29"> <block pos:line="21" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">28<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="20">3<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"aclMatchAcl: '"<pos:position pos:line="22" pos:column="39"/></literal> <operator pos:line="22" pos:column="40">&lt;&lt;<pos:position pos:line="22" pos:column="48"/></operator> <name pos:line="22" pos:column="43">AclMatchedName<pos:position pos:line="22" pos:column="57"/></name> <operator pos:line="22" pos:column="58">&lt;&lt;<pos:position pos:line="22" pos:column="66"/></operator> <literal type="string" pos:line="22" pos:column="61">"' match with stored rDNS '"<pos:position pos:line="22" pos:column="89"/></literal> <operator pos:line="22" pos:column="90">&lt;&lt;<pos:position pos:line="22" pos:column="98"/></operator> <name><name pos:line="22" pos:column="93">checklist<pos:position pos:line="22" pos:column="102"/></name><operator pos:line="22" pos:column="102">-&gt;<pos:position pos:line="22" pos:column="107"/></operator><name pos:line="22" pos:column="104">dst_rdns<pos:position pos:line="22" pos:column="112"/></name></name> <operator pos:line="22" pos:column="113">&lt;&lt;<pos:position pos:line="22" pos:column="121"/></operator> <literal type="string" pos:line="22" pos:column="116">"' for '"<pos:position pos:line="22" pos:column="125"/></literal> <operator pos:line="22" pos:column="126">&lt;&lt;<pos:position pos:line="22" pos:column="134"/></operator> <call><name><name pos:line="22" pos:column="129">checklist<pos:position pos:line="22" pos:column="138"/></name><operator pos:line="22" pos:column="138">-&gt;<pos:position pos:line="22" pos:column="143"/></operator><name pos:line="22" pos:column="140">request<pos:position pos:line="22" pos:column="147"/></name><operator pos:line="22" pos:column="147">-&gt;<pos:position pos:line="22" pos:column="152"/></operator><name pos:line="22" pos:column="149">GetHost<pos:position pos:line="22" pos:column="156"/></name></name><argument_list pos:line="22" pos:column="156">()<pos:position pos:line="22" pos:column="158"/></argument_list></call> <operator pos:line="22" pos:column="159">&lt;&lt;<pos:position pos:line="22" pos:column="167"/></operator> <literal type="string" pos:line="22" pos:column="162">"'"<pos:position pos:line="22" pos:column="165"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="166"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="167"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><call><name><name pos:line="23" pos:column="16">data<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">match<pos:position pos:line="23" pos:column="27"/></name></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name><name pos:line="23" pos:column="28">checklist<pos:position pos:line="23" pos:column="37"/></name><operator pos:line="23" pos:column="37">-&gt;<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="39">dst_rdns<pos:position pos:line="23" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="49"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* raw IP without rDNS? look it up and wait for the result */</comment>
    <decl_stmt><decl><type><specifier pos:line="27" pos:column="5">const<pos:position pos:line="27" pos:column="10"/></specifier> <name pos:line="27" pos:column="11">ipcache_addrs<pos:position pos:line="27" pos:column="24"/></name> <modifier pos:line="27" pos:column="25">*<pos:position pos:line="27" pos:column="26"/></modifier></type><name pos:line="27" pos:column="26">ia<pos:position pos:line="27" pos:column="28"/></name> <init pos:line="27" pos:column="29">= <expr><call><name pos:line="27" pos:column="31">ipcacheCheckNumeric<pos:position pos:line="27" pos:column="50"/></name><argument_list pos:line="27" pos:column="50">(<argument><expr><call><name><name pos:line="27" pos:column="51">checklist<pos:position pos:line="27" pos:column="60"/></name><operator pos:line="27" pos:column="60">-&gt;<pos:position pos:line="27" pos:column="65"/></operator><name pos:line="27" pos:column="62">request<pos:position pos:line="27" pos:column="69"/></name><operator pos:line="27" pos:column="69">-&gt;<pos:position pos:line="27" pos:column="74"/></operator><name pos:line="27" pos:column="71">GetHost<pos:position pos:line="27" pos:column="78"/></name></name><argument_list pos:line="27" pos:column="78">()<pos:position pos:line="27" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="27" pos:column="82"/></decl_stmt>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">ia<pos:position pos:line="28" pos:column="12"/></name></expr>)<pos:position pos:line="28" pos:column="13"/></condition><then pos:line="28" pos:column="13"> <block pos:line="28" pos:column="14">{
        <comment type="block" pos:line="29" pos:column="9">/* not a valid IPA */</comment>
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">checklist<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">-&gt;<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="20">dst_rdns<pos:position pos:line="30" pos:column="28"/></name></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <call><name pos:line="30" pos:column="31">xstrdup<pos:position pos:line="30" pos:column="38"/></name><argument_list pos:line="30" pos:column="38">(<argument><expr><literal type="string" pos:line="30" pos:column="39">"invalid"<pos:position pos:line="30" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><literal type="number" pos:line="31" pos:column="16">0<pos:position pos:line="31" pos:column="17"/></literal></expr>;<pos:position pos:line="31" pos:column="18"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="34" pos:column="5">checklist<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">-&gt;<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="16">dst_addr<pos:position pos:line="34" pos:column="24"/></name></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <name><name pos:line="34" pos:column="27">ia<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">in_addrs<pos:position pos:line="34" pos:column="39"/></name><index pos:line="34" pos:column="39">[<expr><literal type="number" pos:line="34" pos:column="40">0<pos:position pos:line="34" pos:column="41"/></literal></expr>]<pos:position pos:line="34" pos:column="42"/></index></name></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="35" pos:column="5">const<pos:position pos:line="35" pos:column="10"/></specifier> <name pos:line="35" pos:column="11">char<pos:position pos:line="35" pos:column="15"/></name> <modifier pos:line="35" pos:column="16">*<pos:position pos:line="35" pos:column="17"/></modifier></type><name pos:line="35" pos:column="17">fqdn<pos:position pos:line="35" pos:column="21"/></name> <init pos:line="35" pos:column="22">= <expr><call><name pos:line="35" pos:column="24">fqdncache_gethostbyaddr<pos:position pos:line="35" pos:column="47"/></name><argument_list pos:line="35" pos:column="47">(<argument><expr><name><name pos:line="35" pos:column="48">checklist<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">-&gt;<pos:position pos:line="35" pos:column="62"/></operator><name pos:line="35" pos:column="59">dst_addr<pos:position pos:line="35" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="69">FQDN_LOOKUP_IF_MISS<pos:position pos:line="35" pos:column="88"/></name></expr></argument>)<pos:position pos:line="35" pos:column="89"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="90"/></decl_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">fqdn<pos:position pos:line="37" pos:column="13"/></name></expr>)<pos:position pos:line="37" pos:column="14"/></condition><then pos:line="37" pos:column="14"> <block pos:line="37" pos:column="15">{
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">checklist<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">-&gt;<pos:position pos:line="38" pos:column="23"/></operator><name pos:line="38" pos:column="20">dst_rdns<pos:position pos:line="38" pos:column="28"/></name></name> <operator pos:line="38" pos:column="29">=<pos:position pos:line="38" pos:column="30"/></operator> <call><name pos:line="38" pos:column="31">xstrdup<pos:position pos:line="38" pos:column="38"/></name><argument_list pos:line="38" pos:column="38">(<argument><expr><name pos:line="38" pos:column="39">fqdn<pos:position pos:line="38" pos:column="43"/></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>
        <return pos:line="39" pos:column="9">return <expr><call><name><name pos:line="39" pos:column="16">data<pos:position pos:line="39" pos:column="20"/></name><operator pos:line="39" pos:column="20">-&gt;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="22">match<pos:position pos:line="39" pos:column="27"/></name></name><argument_list pos:line="39" pos:column="27">(<argument><expr><name pos:line="39" pos:column="28">fqdn<pos:position pos:line="39" pos:column="32"/></name></expr></argument>)<pos:position pos:line="39" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="34"/></return>
    }<pos:position pos:line="40" pos:column="6"/></block></then> <elseif pos:line="40" pos:column="7">else <if pos:line="40" pos:column="12">if <condition pos:line="40" pos:column="15">(<expr><operator pos:line="40" pos:column="16">!<pos:position pos:line="40" pos:column="17"/></operator><call><name><name pos:line="40" pos:column="17">checklist<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">-&gt;<pos:position pos:line="40" pos:column="31"/></operator><name pos:line="40" pos:column="28">destinationDomainChecked<pos:position pos:line="40" pos:column="52"/></name></name><argument_list pos:line="40" pos:column="52">()<pos:position pos:line="40" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="55"/></condition><then pos:line="40" pos:column="55"> <block pos:line="40" pos:column="56">{
        <comment type="block" pos:line="41" pos:column="9">/* FIXME: Using AclMatchedName here is not OO correct. Should find a way to the current acl */</comment>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">debugs<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="number" pos:line="42" pos:column="16">28<pos:position pos:line="42" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="20">3<pos:position pos:line="42" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="23">"aclMatchAcl: Can't yet compare '"<pos:position pos:line="42" pos:column="57"/></literal> <operator pos:line="42" pos:column="58">&lt;&lt;<pos:position pos:line="42" pos:column="66"/></operator> <name pos:line="42" pos:column="61">AclMatchedName<pos:position pos:line="42" pos:column="75"/></name> <operator pos:line="42" pos:column="76">&lt;&lt;<pos:position pos:line="42" pos:column="84"/></operator> <literal type="string" pos:line="42" pos:column="79">"' ACL for '"<pos:position pos:line="42" pos:column="92"/></literal> <operator pos:line="42" pos:column="93">&lt;&lt;<pos:position pos:line="42" pos:column="101"/></operator> <call><name><name pos:line="42" pos:column="96">checklist<pos:position pos:line="42" pos:column="105"/></name><operator pos:line="42" pos:column="105">-&gt;<pos:position pos:line="42" pos:column="110"/></operator><name pos:line="42" pos:column="107">request<pos:position pos:line="42" pos:column="114"/></name><operator pos:line="42" pos:column="114">-&gt;<pos:position pos:line="42" pos:column="119"/></operator><name pos:line="42" pos:column="116">GetHost<pos:position pos:line="42" pos:column="123"/></name></name><argument_list pos:line="42" pos:column="123">()<pos:position pos:line="42" pos:column="125"/></argument_list></call> <operator pos:line="42" pos:column="126">&lt;&lt;<pos:position pos:line="42" pos:column="134"/></operator> <literal type="string" pos:line="42" pos:column="129">"'"<pos:position pos:line="42" pos:column="132"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="133"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="134"/></expr_stmt>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><call><name><name pos:line="43" pos:column="13">checklist<pos:position pos:line="43" pos:column="22"/></name><operator pos:line="43" pos:column="22">-&gt;<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="24">goAsync<pos:position pos:line="43" pos:column="31"/></name></name><argument_list pos:line="43" pos:column="31">(<argument><expr><call><name><name pos:line="43" pos:column="32">DestinationDomainLookup<pos:position pos:line="43" pos:column="55"/></name><operator pos:line="43" pos:column="55">::<pos:position pos:line="43" pos:column="57"/></operator><name pos:line="43" pos:column="57">Instance<pos:position pos:line="43" pos:column="65"/></name></name><argument_list pos:line="43" pos:column="65">()<pos:position pos:line="43" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="69"/></condition><then pos:line="43" pos:column="69">
            <block type="pseudo"><return pos:line="44" pos:column="13">return <expr><operator pos:line="44" pos:column="20">-<pos:position pos:line="44" pos:column="21"/></operator><literal type="number" pos:line="44" pos:column="21">1<pos:position pos:line="44" pos:column="22"/></literal></expr>;<pos:position pos:line="44" pos:column="23"/></return></block></then></if>
        <comment type="line" pos:line="45" pos:column="9">// else fall through to "none" match, hiding the lookup failure (XXX)</comment>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if></elseif></if>

    <return pos:line="48" pos:column="5">return <expr><call><name><name pos:line="48" pos:column="12">data<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">match<pos:position pos:line="48" pos:column="23"/></name></name><argument_list pos:line="48" pos:column="23">(<argument><expr><literal type="string" pos:line="48" pos:column="24">"none"<pos:position pos:line="48" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="32"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

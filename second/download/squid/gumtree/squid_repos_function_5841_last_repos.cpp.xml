<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5841_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">argv<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">username<pos:position pos:line="4" pos:column="18"/></name><index pos:line="4" pos:column="18">[<expr><literal type="number" pos:line="4" pos:column="19">256<pos:position pos:line="4" pos:column="22"/></literal></expr>]<pos:position pos:line="4" pos:column="23"/></index></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">password<pos:position pos:line="5" pos:column="18"/></name><index pos:line="5" pos:column="18">[<expr><literal type="number" pos:line="5" pos:column="19">256<pos:position pos:line="5" pos:column="22"/></literal></expr>]<pos:position pos:line="5" pos:column="23"/></index></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">wstr<pos:position pos:line="6" pos:column="14"/></name><index pos:line="6" pos:column="14">[<expr><literal type="number" pos:line="6" pos:column="15">256<pos:position pos:line="6" pos:column="18"/></literal></expr>]<pos:position pos:line="6" pos:column="19"/></index></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">err<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">openlog<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><literal type="string" pos:line="9" pos:column="13">"basic_smb_lm_auth"<pos:position pos:line="9" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="34">LOG_PID<pos:position pos:line="9" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="43">LOG_USER<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">setbuf<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">stdout<pos:position pos:line="10" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name></expr></argument>)<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>

    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><decl><type><name pos:line="12" pos:column="10">int<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">j<pos:position pos:line="12" pos:column="15"/></name> <init pos:line="12" pos:column="16">= <expr><literal type="number" pos:line="12" pos:column="18">1<pos:position pos:line="12" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="20"/></init> <condition><expr><name pos:line="12" pos:column="21">j<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">&lt;<pos:position pos:line="12" pos:column="27"/></operator> <name pos:line="12" pos:column="25">argc<pos:position pos:line="12" pos:column="29"/></name></expr>;<pos:position pos:line="12" pos:column="30"/></condition> <incr><expr><operator pos:line="12" pos:column="31">++<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="33">j<pos:position pos:line="12" pos:column="34"/></name></expr></incr>)<pos:position pos:line="12" pos:column="35"/></control> <block pos:line="12" pos:column="36">{
        <decl_stmt><decl><type><name><name pos:line="13" pos:column="9">std<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">::<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">string<pos:position pos:line="13" pos:column="20"/></name></name></type> <name pos:line="13" pos:column="21">arg<pos:position pos:line="13" pos:column="24"/></name> <init pos:line="13" pos:column="25">= <expr><name><name pos:line="13" pos:column="27">argv<pos:position pos:line="13" pos:column="31"/></name><index pos:line="13" pos:column="31">[<expr><name pos:line="13" pos:column="32">j<pos:position pos:line="13" pos:column="33"/></name></expr>]<pos:position pos:line="13" pos:column="34"/></index></name></expr></init></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">size_t<pos:position pos:line="14" pos:column="15"/></name></type> <name pos:line="14" pos:column="16">pos<pos:position pos:line="14" pos:column="19"/></name><init pos:line="14" pos:column="19">=<expr><call><name><name pos:line="14" pos:column="20">arg<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">.<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">find<pos:position pos:line="14" pos:column="28"/></name></name><argument_list pos:line="14" pos:column="28">(<argument><expr><literal type="char" pos:line="14" pos:column="29">'/'<pos:position pos:line="14" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="33"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="34"/></decl_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name><name pos:line="15" pos:column="13">arg<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">.<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">find<pos:position pos:line="15" pos:column="21"/></name></name><argument_list pos:line="15" pos:column="21">(<argument><expr><literal type="char" pos:line="15" pos:column="22">'/'<pos:position pos:line="15" pos:column="25"/></literal></expr></argument>,<argument><expr><name pos:line="15" pos:column="26">pos<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">+<pos:position pos:line="15" pos:column="30"/></operator><literal type="number" pos:line="15" pos:column="30">1<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="32"/></argument_list></call> <operator pos:line="15" pos:column="33">!=<pos:position pos:line="15" pos:column="35"/></operator> <name><name pos:line="15" pos:column="36">std<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">::<pos:position pos:line="15" pos:column="41"/></operator><name pos:line="15" pos:column="41">string<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">::<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="49">npos<pos:position pos:line="15" pos:column="53"/></name></name></expr>)<pos:position pos:line="15" pos:column="54"/></condition><then pos:line="15" pos:column="54"> <block pos:line="15" pos:column="55">{
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">std<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">::<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">cerr<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">&lt;&lt;<pos:position pos:line="16" pos:column="31"/></operator> <literal type="string" pos:line="16" pos:column="26">"Error: can't understand domain controller specification '"<pos:position pos:line="16" pos:column="85"/></literal>
                      <operator pos:line="17" pos:column="23">&lt;&lt;<pos:position pos:line="17" pos:column="31"/></operator> <name pos:line="17" pos:column="26">arg<pos:position pos:line="17" pos:column="29"/></name> <operator pos:line="17" pos:column="30">&lt;&lt;<pos:position pos:line="17" pos:column="38"/></operator> <literal type="string" pos:line="17" pos:column="33">"'. Ignoring"<pos:position pos:line="17" pos:column="46"/></literal> <operator pos:line="17" pos:column="47">&lt;&lt;<pos:position pos:line="17" pos:column="55"/></operator> <name><name pos:line="17" pos:column="50">std<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">::<pos:position pos:line="17" pos:column="55"/></operator><name pos:line="17" pos:column="55">endl<pos:position pos:line="17" pos:column="59"/></name></name></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">domaincontroller<pos:position pos:line="19" pos:column="25"/></name></type> <name pos:line="19" pos:column="26">dc<pos:position pos:line="19" pos:column="28"/></name></decl>;<pos:position pos:line="19" pos:column="29"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">dc<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">.<pos:position pos:line="20" pos:column="12"/></operator><name pos:line="20" pos:column="12">domain<pos:position pos:line="20" pos:column="18"/></name></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <call><name><name pos:line="20" pos:column="21">arg<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">.<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="25">substr<pos:position pos:line="20" pos:column="31"/></name></name><argument_list pos:line="20" pos:column="31">(<argument><expr><literal type="number" pos:line="20" pos:column="32">0<pos:position pos:line="20" pos:column="33"/></literal></expr></argument>,<argument><expr><name pos:line="20" pos:column="34">pos<pos:position pos:line="20" pos:column="37"/></name></expr></argument>)<pos:position pos:line="20" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">dc<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">.<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">server<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <call><name><name pos:line="21" pos:column="21">arg<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">.<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">substr<pos:position pos:line="21" pos:column="31"/></name></name><argument_list pos:line="21" pos:column="31">(<argument><expr><name pos:line="21" pos:column="32">pos<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">+<pos:position pos:line="21" pos:column="36"/></operator><literal type="number" pos:line="21" pos:column="36">1<pos:position pos:line="21" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name><name pos:line="22" pos:column="13">dc<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">domain<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">.<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">length<pos:position pos:line="22" pos:column="29"/></name></name><argument_list pos:line="22" pos:column="29">()<pos:position pos:line="22" pos:column="31"/></argument_list></call> <operator pos:line="22" pos:column="32">==<pos:position pos:line="22" pos:column="34"/></operator> <literal type="number" pos:line="22" pos:column="35">0<pos:position pos:line="22" pos:column="36"/></literal> <operator pos:line="22" pos:column="37">||<pos:position pos:line="22" pos:column="39"/></operator> <call><name><name pos:line="22" pos:column="40">dc<pos:position pos:line="22" pos:column="42"/></name><operator pos:line="22" pos:column="42">.<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="43">server<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">.<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">length<pos:position pos:line="22" pos:column="56"/></name></name><argument_list pos:line="22" pos:column="56">()<pos:position pos:line="22" pos:column="58"/></argument_list></call> <operator pos:line="22" pos:column="59">==<pos:position pos:line="22" pos:column="61"/></operator> <literal type="number" pos:line="22" pos:column="62">0<pos:position pos:line="22" pos:column="63"/></literal></expr>)<pos:position pos:line="22" pos:column="64"/></condition><then pos:line="22" pos:column="64"> <block pos:line="22" pos:column="65">{
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">std<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">::<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">cerr<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">&lt;&lt;<pos:position pos:line="23" pos:column="31"/></operator> <literal type="string" pos:line="23" pos:column="26">"Error: invalid domain specification in '"<pos:position pos:line="23" pos:column="68"/></literal> <operator pos:line="23" pos:column="69">&lt;&lt;<pos:position pos:line="23" pos:column="77"/></operator> <name pos:line="23" pos:column="72">arg<pos:position pos:line="23" pos:column="75"/></name> <operator pos:line="23" pos:column="76">&lt;&lt;<pos:position pos:line="23" pos:column="84"/></operator>
                      <literal type="string" pos:line="24" pos:column="23">"'. Ignoring."<pos:position pos:line="24" pos:column="37"/></literal> <operator pos:line="24" pos:column="38">&lt;&lt;<pos:position pos:line="24" pos:column="46"/></operator> <name><name pos:line="24" pos:column="41">std<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">::<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="46">endl<pos:position pos:line="24" pos:column="50"/></name></name></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">exit<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><literal type="number" pos:line="25" pos:column="18">1<pos:position pos:line="25" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="27" pos:column="9">domaincontrollers<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">.<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">push_back<pos:position pos:line="27" pos:column="36"/></name></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name pos:line="27" pos:column="37">dc<pos:position pos:line="27" pos:column="39"/></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></for>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name><name pos:line="29" pos:column="9">domaincontrollers<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">.<pos:position pos:line="29" pos:column="27"/></operator><name pos:line="29" pos:column="27">empty<pos:position pos:line="29" pos:column="32"/></name></name><argument_list pos:line="29" pos:column="32">()<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35"> <block pos:line="29" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">display_usage_instructions<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">()<pos:position pos:line="30" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="31" pos:column="9">std<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">::<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">cerr<pos:position pos:line="31" pos:column="18"/></name></name> <operator pos:line="31" pos:column="19">&lt;&lt;<pos:position pos:line="31" pos:column="27"/></operator> <literal type="string" pos:line="31" pos:column="22">"Error: no domain controllers specified"<pos:position pos:line="31" pos:column="62"/></literal> <operator pos:line="31" pos:column="63">&lt;&lt;<pos:position pos:line="31" pos:column="71"/></operator> <name><name pos:line="31" pos:column="66">std<pos:position pos:line="31" pos:column="69"/></name><operator pos:line="31" pos:column="69">::<pos:position pos:line="31" pos:column="71"/></operator><name pos:line="31" pos:column="71">endl<pos:position pos:line="31" pos:column="75"/></name></name></expr>;<pos:position pos:line="31" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">exit<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <while pos:line="35" pos:column="5">while <condition pos:line="35" pos:column="11">(<expr><literal type="number" pos:line="35" pos:column="12">1<pos:position pos:line="35" pos:column="13"/></literal></expr>)<pos:position pos:line="35" pos:column="14"/></condition> <block pos:line="35" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">int<pos:position pos:line="36" pos:column="12"/></name></type> <name pos:line="36" pos:column="13">n<pos:position pos:line="36" pos:column="14"/></name></decl>;<pos:position pos:line="36" pos:column="15"/></decl_stmt>
        <comment type="block" pos:line="37" pos:column="9">/* Read whole line from standard input. Terminate on break. */</comment>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">memset<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">wstr<pos:position pos:line="38" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="22">'\0'<pos:position pos:line="38" pos:column="26"/></literal></expr></argument>, <argument><expr><sizeof pos:line="38" pos:column="28">sizeof<argument_list pos:line="38" pos:column="34">(<argument><expr><name pos:line="38" pos:column="35">wstr<pos:position pos:line="38" pos:column="39"/></name></expr></argument>)<pos:position pos:line="38" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">fgets<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><name pos:line="39" pos:column="19">wstr<pos:position pos:line="39" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="25">255<pos:position pos:line="39" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="30">stdin<pos:position pos:line="39" pos:column="35"/></name></expr></argument>)<pos:position pos:line="39" pos:column="36"/></argument_list></call> <operator pos:line="39" pos:column="37">==<pos:position pos:line="39" pos:column="39"/></operator> <name pos:line="39" pos:column="40">NULL<pos:position pos:line="39" pos:column="44"/></name></expr>)<pos:position pos:line="39" pos:column="45"/></condition><then pos:line="39" pos:column="45">
            <block type="pseudo"><break pos:line="40" pos:column="13">break;<pos:position pos:line="40" pos:column="19"/></break></block></then></if>
        <comment type="block" pos:line="41" pos:column="9">/* ignore this line if we didn't get the end-of-line marker */</comment>
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><name pos:line="42" pos:column="13">NULL<pos:position pos:line="42" pos:column="17"/></name> <operator pos:line="42" pos:column="18">==<pos:position pos:line="42" pos:column="20"/></operator> <call><name pos:line="42" pos:column="21">strchr<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">wstr<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="42" pos:column="34">'\n'<pos:position pos:line="42" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="40"/></condition><then pos:line="42" pos:column="40"> <block pos:line="42" pos:column="41">{
            <expr_stmt><expr><name pos:line="43" pos:column="13">err<pos:position pos:line="43" pos:column="16"/></name> <operator pos:line="43" pos:column="17">=<pos:position pos:line="43" pos:column="18"/></operator> <literal type="number" pos:line="43" pos:column="19">1<pos:position pos:line="43" pos:column="20"/></literal></expr>;<pos:position pos:line="43" pos:column="21"/></expr_stmt>
            <continue pos:line="44" pos:column="13">continue;<pos:position pos:line="44" pos:column="22"/></continue>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><name pos:line="46" pos:column="13">err<pos:position pos:line="46" pos:column="16"/></name></expr>)<pos:position pos:line="46" pos:column="17"/></condition><then pos:line="46" pos:column="17"> <block pos:line="46" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">syslog<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name pos:line="47" pos:column="20">LOG_WARNING<pos:position pos:line="47" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="33">"oversized message"<pos:position pos:line="47" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">puts<pos:position pos:line="48" pos:column="17"/></name><argument_list pos:line="48" pos:column="17">(<argument><expr><literal type="string" pos:line="48" pos:column="18">"ERR"<pos:position pos:line="48" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><name pos:line="49" pos:column="13">err<pos:position pos:line="49" pos:column="16"/></name> <operator pos:line="49" pos:column="17">=<pos:position pos:line="49" pos:column="18"/></operator> <literal type="number" pos:line="49" pos:column="19">0<pos:position pos:line="49" pos:column="20"/></literal></expr>;<pos:position pos:line="49" pos:column="21"/></expr_stmt>
            <continue pos:line="50" pos:column="13">continue;<pos:position pos:line="50" pos:column="22"/></continue>
        }<pos:position pos:line="51" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="53" pos:column="9">/*
         * extract username and password.
         */</comment>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">username<pos:position pos:line="56" pos:column="17"/></name><index pos:line="56" pos:column="17">[<expr><literal type="number" pos:line="56" pos:column="18">0<pos:position pos:line="56" pos:column="19"/></literal></expr>]<pos:position pos:line="56" pos:column="20"/></index></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <literal type="char" pos:line="56" pos:column="23">'\0'<pos:position pos:line="56" pos:column="27"/></literal></expr>;<pos:position pos:line="56" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="57" pos:column="9">password<pos:position pos:line="57" pos:column="17"/></name><index pos:line="57" pos:column="17">[<expr><literal type="number" pos:line="57" pos:column="18">0<pos:position pos:line="57" pos:column="19"/></literal></expr>]<pos:position pos:line="57" pos:column="20"/></index></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <literal type="char" pos:line="57" pos:column="23">'\0'<pos:position pos:line="57" pos:column="27"/></literal></expr>;<pos:position pos:line="57" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">n<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">=<pos:position pos:line="58" pos:column="12"/></operator> <call><name pos:line="58" pos:column="13">sscanf<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name pos:line="58" pos:column="20">wstr<pos:position pos:line="58" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="26">"%s %[^\n]"<pos:position pos:line="58" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="39">username<pos:position pos:line="58" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="49">password<pos:position pos:line="58" pos:column="57"/></name></expr></argument>)<pos:position pos:line="58" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="59"/></expr_stmt>
        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><literal type="number" pos:line="59" pos:column="13">2<pos:position pos:line="59" pos:column="14"/></literal> <operator pos:line="59" pos:column="15">!=<pos:position pos:line="59" pos:column="17"/></operator> <name pos:line="59" pos:column="18">n<pos:position pos:line="59" pos:column="19"/></name></expr>)<pos:position pos:line="59" pos:column="20"/></condition><then pos:line="59" pos:column="20"> <block pos:line="59" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="60" pos:column="13">puts<pos:position pos:line="60" pos:column="17"/></name><argument_list pos:line="60" pos:column="17">(<argument><expr><literal type="string" pos:line="60" pos:column="18">"ERR"<pos:position pos:line="60" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="25"/></expr_stmt>
            <continue pos:line="61" pos:column="13">continue;<pos:position pos:line="61" pos:column="22"/></continue>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="63" pos:column="9">/* Check for invalid or blank entries */</comment>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">(<pos:position pos:line="64" pos:column="14"/></operator><name><name pos:line="64" pos:column="14">username<pos:position pos:line="64" pos:column="22"/></name><index pos:line="64" pos:column="22">[<expr><literal type="number" pos:line="64" pos:column="23">0<pos:position pos:line="64" pos:column="24"/></literal></expr>]<pos:position pos:line="64" pos:column="25"/></index></name> <operator pos:line="64" pos:column="26">==<pos:position pos:line="64" pos:column="28"/></operator> <literal type="char" pos:line="64" pos:column="29">'\0'<pos:position pos:line="64" pos:column="33"/></literal><operator pos:line="64" pos:column="33">)<pos:position pos:line="64" pos:column="34"/></operator> <operator pos:line="64" pos:column="35">||<pos:position pos:line="64" pos:column="37"/></operator> <operator pos:line="64" pos:column="38">(<pos:position pos:line="64" pos:column="39"/></operator><name><name pos:line="64" pos:column="39">password<pos:position pos:line="64" pos:column="47"/></name><index pos:line="64" pos:column="47">[<expr><literal type="number" pos:line="64" pos:column="48">0<pos:position pos:line="64" pos:column="49"/></literal></expr>]<pos:position pos:line="64" pos:column="50"/></index></name> <operator pos:line="64" pos:column="51">==<pos:position pos:line="64" pos:column="53"/></operator> <literal type="char" pos:line="64" pos:column="54">'\0'<pos:position pos:line="64" pos:column="58"/></literal><operator pos:line="64" pos:column="58">)<pos:position pos:line="64" pos:column="59"/></operator></expr>)<pos:position pos:line="64" pos:column="60"/></condition><then pos:line="64" pos:column="60"> <block pos:line="64" pos:column="61">{
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">puts<pos:position pos:line="65" pos:column="17"/></name><argument_list pos:line="65" pos:column="17">(<argument><expr><literal type="string" pos:line="65" pos:column="18">"ERR"<pos:position pos:line="65" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="25"/></expr_stmt>
            <continue pos:line="66" pos:column="13">continue;<pos:position pos:line="66" pos:column="22"/></continue>
        }<pos:position pos:line="67" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="69" pos:column="9">rfc1738_unescape<pos:position pos:line="69" pos:column="25"/></name><argument_list pos:line="69" pos:column="25">(<argument><expr><name pos:line="69" pos:column="26">username<pos:position pos:line="69" pos:column="34"/></name></expr></argument>)<pos:position pos:line="69" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">rfc1738_unescape<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><name pos:line="70" pos:column="26">password<pos:position pos:line="70" pos:column="34"/></name></expr></argument>)<pos:position pos:line="70" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="36"/></expr_stmt>

        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><call><name pos:line="72" pos:column="13">validate_user<pos:position pos:line="72" pos:column="26"/></name><argument_list pos:line="72" pos:column="26">(<argument><expr><name pos:line="72" pos:column="27">username<pos:position pos:line="72" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="72" pos:column="37">password<pos:position pos:line="72" pos:column="45"/></name></expr></argument>)<pos:position pos:line="72" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="72" pos:column="47"/></condition><then pos:line="72" pos:column="47"> <block pos:line="72" pos:column="48">{
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">puts<pos:position pos:line="73" pos:column="17"/></name><argument_list pos:line="73" pos:column="17">(<argument><expr><literal type="string" pos:line="73" pos:column="18">"OK"<pos:position pos:line="73" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="74" pos:column="10"/></block></then> <else pos:line="74" pos:column="11">else <block pos:line="74" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="75" pos:column="13">syslog<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><name pos:line="75" pos:column="20">LOG_INFO<pos:position pos:line="75" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="30">"'%s' login failed"<pos:position pos:line="75" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="51">username<pos:position pos:line="75" pos:column="59"/></name></expr></argument>)<pos:position pos:line="75" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="61"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="76" pos:column="13">puts<pos:position pos:line="76" pos:column="17"/></name><argument_list pos:line="76" pos:column="17">(<argument><expr><literal type="string" pos:line="76" pos:column="18">"ERR"<pos:position pos:line="76" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="78" pos:column="9">err<pos:position pos:line="78" pos:column="12"/></name> <operator pos:line="78" pos:column="13">=<pos:position pos:line="78" pos:column="14"/></operator> <literal type="number" pos:line="78" pos:column="15">0<pos:position pos:line="78" pos:column="16"/></literal></expr>;<pos:position pos:line="78" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block></while>

    <return pos:line="81" pos:column="5">return <expr><literal type="number" pos:line="81" pos:column="12">0<pos:position pos:line="81" pos:column="13"/></literal></expr>;<pos:position pos:line="81" pos:column="14"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

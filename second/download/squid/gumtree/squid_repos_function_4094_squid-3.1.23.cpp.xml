<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4094_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">index_serial_LHASH_COMP<pos:position pos:line="1" pos:column="35"/></name><parameter_list pos:line="1" pos:column="35">(<parameter><decl><type><specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier> <name pos:line="1" pos:column="42">void<pos:position pos:line="1" pos:column="46"/></name> <modifier pos:line="1" pos:column="47">*<pos:position pos:line="1" pos:column="48"/></modifier></type><name pos:line="1" pos:column="48">arg1<pos:position pos:line="1" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name pos:line="1" pos:column="60">void<pos:position pos:line="1" pos:column="64"/></name> <modifier pos:line="1" pos:column="65">*<pos:position pos:line="1" pos:column="66"/></modifier></type><name pos:line="1" pos:column="66">arg2<pos:position pos:line="1" pos:column="70"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="71"/></parameter_list> <block pos:line="1" pos:column="72">{
        <return pos:line="2" pos:column="9">return <expr><call><name pos:line="2" pos:column="16">index_serial_cmp<pos:position pos:line="2" pos:column="32"/></name><argument_list pos:line="2" pos:column="32">(<argument><expr><operator pos:line="2" pos:column="33">(<pos:position pos:line="2" pos:column="34"/></operator><specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier> <name pos:line="2" pos:column="40">char<pos:position pos:line="2" pos:column="44"/></name> <operator pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></operator><operator pos:line="2" pos:column="46">*<pos:position pos:line="2" pos:column="47"/></operator><operator pos:line="2" pos:column="47">)<pos:position pos:line="2" pos:column="48"/></operator><name pos:line="2" pos:column="48">arg1<pos:position pos:line="2" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="2" pos:column="54">(<pos:position pos:line="2" pos:column="55"/></operator><specifier pos:line="2" pos:column="55">const<pos:position pos:line="2" pos:column="60"/></specifier> <name pos:line="2" pos:column="61">char<pos:position pos:line="2" pos:column="65"/></name> <operator pos:line="2" pos:column="66">*<pos:position pos:line="2" pos:column="67"/></operator><operator pos:line="2" pos:column="67">*<pos:position pos:line="2" pos:column="68"/></operator><operator pos:line="2" pos:column="68">)<pos:position pos:line="2" pos:column="69"/></operator><name pos:line="2" pos:column="69">arg2<pos:position pos:line="2" pos:column="73"/></name></expr></argument>)<pos:position pos:line="2" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="75"/></return>
    }<pos:position pos:line="3" pos:column="6"/></block></function></unit>

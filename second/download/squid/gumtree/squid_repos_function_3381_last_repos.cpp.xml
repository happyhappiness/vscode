<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3381_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">HeaderRep<pos:position pos:line="2" pos:column="28"/></name><operator pos:line="2" pos:column="28">::<pos:position pos:line="2" pos:column="30"/></operator><name pos:line="2" pos:column="30">visitEach<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">(<parameter><decl><type><name><name pos:line="2" pos:column="40">libecap<pos:position pos:line="2" pos:column="47"/></name><operator pos:line="2" pos:column="47">::<pos:position pos:line="2" pos:column="49"/></operator><name pos:line="2" pos:column="49">NamedValueVisitor<pos:position pos:line="2" pos:column="66"/></name></name> <modifier pos:line="2" pos:column="67">&amp;<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="68">visitor<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list> <specifier pos:line="2" pos:column="77">const<pos:position pos:line="2" pos:column="82"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpHeaderPos<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">pos<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">HttpHeaderInitPos<pos:position pos:line="4" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<decl><type><name pos:line="5" pos:column="12">HttpHeaderEntry<pos:position pos:line="5" pos:column="27"/></name> <modifier pos:line="5" pos:column="28">*<pos:position pos:line="5" pos:column="29"/></modifier></type><name pos:line="5" pos:column="29">e<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><call><name><name pos:line="5" pos:column="33">theHeader<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">.<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">getEntry<pos:position pos:line="5" pos:column="51"/></name></name><argument_list pos:line="5" pos:column="51">(<argument><expr><operator pos:line="5" pos:column="52">&amp;<pos:position pos:line="5" pos:column="57"/></operator><name pos:line="5" pos:column="53">pos<pos:position pos:line="5" pos:column="56"/></name></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr></init></decl>)<pos:position pos:line="5" pos:column="58"/></condition> <block pos:line="5" pos:column="59">{
        <decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">Name<pos:position pos:line="6" pos:column="19"/></name></type> <name pos:line="6" pos:column="20">name<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><call><name><name pos:line="6" pos:column="25">e<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">-&gt;<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="28">name<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">termedBuf<pos:position pos:line="6" pos:column="42"/></name></name><argument_list pos:line="6" pos:column="42">()<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt> <comment type="line" pos:line="6" pos:column="47">// optimize: find std Names</comment>
        <expr_stmt><expr><call><name><name pos:line="7" pos:column="9">name<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">.<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">assignHostId<pos:position pos:line="7" pos:column="26"/></name></name><argument_list pos:line="7" pos:column="26">(<argument><expr><name><name pos:line="7" pos:column="27">e<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">id<pos:position pos:line="7" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">visitor<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">.<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">visit<pos:position pos:line="8" pos:column="22"/></name></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">name<pos:position pos:line="8" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="8" pos:column="29">Value<pos:position pos:line="8" pos:column="34"/></name><argument_list pos:line="8" pos:column="34">(<argument><expr><call><name><name pos:line="8" pos:column="35">e<pos:position pos:line="8" pos:column="36"/></name><operator pos:line="8" pos:column="36">-&gt;<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="38">value<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">.<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">rawBuf<pos:position pos:line="8" pos:column="50"/></name></name><argument_list pos:line="8" pos:column="50">()<pos:position pos:line="8" pos:column="52"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="54">e<pos:position pos:line="8" pos:column="55"/></name><operator pos:line="8" pos:column="55">-&gt;<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="57">value<pos:position pos:line="8" pos:column="62"/></name><operator pos:line="8" pos:column="62">.<pos:position pos:line="8" pos:column="63"/></operator><name pos:line="8" pos:column="63">size<pos:position pos:line="8" pos:column="67"/></name></name><argument_list pos:line="8" pos:column="67">()<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></while>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

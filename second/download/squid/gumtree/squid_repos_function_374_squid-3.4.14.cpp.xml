<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_374_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">process_options<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">argc<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name><name pos:line="2" pos:column="33">argv<pos:position pos:line="2" pos:column="37"/></name><index pos:line="2" pos:column="37">[]<pos:position pos:line="2" pos:column="39"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">opt<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><operator pos:line="5" pos:column="12">-<pos:position pos:line="5" pos:column="13"/></operator><literal type="number" pos:line="5" pos:column="13">1<pos:position pos:line="5" pos:column="14"/></literal> <operator pos:line="5" pos:column="15">!=<pos:position pos:line="5" pos:column="17"/></operator> <operator pos:line="5" pos:column="18">(<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">opt<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">=<pos:position pos:line="5" pos:column="24"/></operator> <call><name pos:line="5" pos:column="25">getopt<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">(<argument><expr><name pos:line="5" pos:column="32">argc<pos:position pos:line="5" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="38">argv<pos:position pos:line="5" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="44">"dhA:D:O:"<pos:position pos:line="5" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="55"/></argument_list></call><operator pos:line="5" pos:column="55">)<pos:position pos:line="5" pos:column="56"/></operator></expr>)<pos:position pos:line="5" pos:column="57"/></condition> <block pos:line="5" pos:column="58">{
        <switch pos:line="6" pos:column="9">switch <condition pos:line="6" pos:column="16">(<expr><name pos:line="6" pos:column="17">opt<pos:position pos:line="6" pos:column="20"/></name></expr>)<pos:position pos:line="6" pos:column="21"/></condition> <block pos:line="6" pos:column="22">{
        <case pos:line="7" pos:column="9">case <expr><literal type="char" pos:line="7" pos:column="14">'A'<pos:position pos:line="7" pos:column="17"/></literal></expr>:<pos:position pos:line="7" pos:column="18"/></case>
            <expr_stmt><expr><call><name pos:line="8" pos:column="13">safe_free<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">(<argument><expr><name pos:line="8" pos:column="23">NTAllowedGroup<pos:position pos:line="8" pos:column="37"/></name></expr></argument>)<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name pos:line="9" pos:column="13">NTAllowedGroup<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">=<pos:position pos:line="9" pos:column="28"/></operator><call><name pos:line="9" pos:column="28">xstrdup<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">optarg<pos:position pos:line="9" pos:column="42"/></name></expr></argument>)<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name pos:line="10" pos:column="13">UseAllowedGroup<pos:position pos:line="10" pos:column="28"/></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <literal type="number" pos:line="10" pos:column="31">1<pos:position pos:line="10" pos:column="32"/></literal></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
            <break pos:line="11" pos:column="13">break;<pos:position pos:line="11" pos:column="19"/></break>
        <case pos:line="12" pos:column="9">case <expr><literal type="char" pos:line="12" pos:column="14">'D'<pos:position pos:line="12" pos:column="17"/></literal></expr>:<pos:position pos:line="12" pos:column="18"/></case>
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">safe_free<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">(<argument><expr><name pos:line="13" pos:column="23">NTDisAllowedGroup<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><name pos:line="14" pos:column="13">NTDisAllowedGroup<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">=<pos:position pos:line="14" pos:column="31"/></operator><call><name pos:line="14" pos:column="31">xstrdup<pos:position pos:line="14" pos:column="38"/></name><argument_list pos:line="14" pos:column="38">(<argument><expr><name pos:line="14" pos:column="39">optarg<pos:position pos:line="14" pos:column="45"/></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name pos:line="15" pos:column="13">UseDisallowedGroup<pos:position pos:line="15" pos:column="31"/></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <literal type="number" pos:line="15" pos:column="34">1<pos:position pos:line="15" pos:column="35"/></literal></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
            <break pos:line="16" pos:column="13">break;<pos:position pos:line="16" pos:column="19"/></break>
        <case pos:line="17" pos:column="9">case <expr><literal type="char" pos:line="17" pos:column="14">'O'<pos:position pos:line="17" pos:column="17"/></literal></expr>:<pos:position pos:line="17" pos:column="18"/></case>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">strncpy<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">Default_NTDomain<pos:position pos:line="18" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="39">optarg<pos:position pos:line="18" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="47">DNLEN<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>
            <break pos:line="19" pos:column="13">break;<pos:position pos:line="19" pos:column="19"/></break>
        <case pos:line="20" pos:column="9">case <expr><literal type="char" pos:line="20" pos:column="14">'d'<pos:position pos:line="20" pos:column="17"/></literal></expr>:<pos:position pos:line="20" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="21" pos:column="13">debug_enabled<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">=<pos:position pos:line="21" pos:column="28"/></operator> <literal type="number" pos:line="21" pos:column="29">1<pos:position pos:line="21" pos:column="30"/></literal></expr>;<pos:position pos:line="21" pos:column="31"/></expr_stmt>
            <break pos:line="22" pos:column="13">break;<pos:position pos:line="22" pos:column="19"/></break>
        <case pos:line="23" pos:column="9">case <expr><literal type="char" pos:line="23" pos:column="14">'h'<pos:position pos:line="23" pos:column="17"/></literal></expr>:<pos:position pos:line="23" pos:column="18"/></case>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">usage<pos:position pos:line="24" pos:column="18"/></name><argument_list pos:line="24" pos:column="18">(<argument><expr><name><name pos:line="24" pos:column="19">argv<pos:position pos:line="24" pos:column="23"/></name><index pos:line="24" pos:column="23">[<expr><literal type="number" pos:line="24" pos:column="24">0<pos:position pos:line="24" pos:column="25"/></literal></expr>]<pos:position pos:line="24" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">exit<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>
        <case pos:line="26" pos:column="9">case <expr><literal type="char" pos:line="26" pos:column="14">'?'<pos:position pos:line="26" pos:column="17"/></literal></expr>:<pos:position pos:line="26" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="27" pos:column="13">opt<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <name pos:line="27" pos:column="19">optopt<pos:position pos:line="27" pos:column="25"/></name></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
            <comment type="block" pos:line="28" pos:column="13">/* fall thru to default */</comment>
        <default pos:line="29" pos:column="9">default:<pos:position pos:line="29" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">fprintf<pos:position pos:line="30" pos:column="20"/></name><argument_list pos:line="30" pos:column="20">(<argument><expr><name pos:line="30" pos:column="21">stderr<pos:position pos:line="30" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="29">"FATAL: Unknown option: -%c\n"<pos:position pos:line="30" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="61">opt<pos:position pos:line="30" pos:column="64"/></name></expr></argument>)<pos:position pos:line="30" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">usage<pos:position pos:line="31" pos:column="18"/></name><argument_list pos:line="31" pos:column="18">(<argument><expr><name><name pos:line="31" pos:column="19">argv<pos:position pos:line="31" pos:column="23"/></name><index pos:line="31" pos:column="23">[<expr><literal type="number" pos:line="31" pos:column="24">0<pos:position pos:line="31" pos:column="25"/></literal></expr>]<pos:position pos:line="31" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">exit<pos:position pos:line="32" pos:column="17"/></name><argument_list pos:line="32" pos:column="17">(<argument><expr><literal type="number" pos:line="32" pos:column="18">1<pos:position pos:line="32" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></switch>
    }<pos:position pos:line="34" pos:column="6"/></block></while>
}<pos:position pos:line="35" pos:column="2"/></block></function></unit>

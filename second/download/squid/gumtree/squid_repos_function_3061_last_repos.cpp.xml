<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3061_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">parseTlsHandshake<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">parsingTlsHandshake<pos:position pos:line="4" pos:column="29"/></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><operator pos:line="6" pos:column="12">!<pos:position pos:line="6" pos:column="13"/></operator><call><name><name pos:line="6" pos:column="13">inBuf<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">.<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">isEmpty<pos:position pos:line="6" pos:column="26"/></name></name><argument_list pos:line="6" pos:column="26">()<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">receivedFirstByte<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">()<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">fd_note<pos:position pos:line="8" pos:column="12"/></name><argument_list pos:line="8" pos:column="12">(<argument><expr><name><name pos:line="8" pos:column="13">clientConnection<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">fd<pos:position pos:line="8" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="35">"Parsing TLS handshake"<pos:position pos:line="8" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="60"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">bool<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">unsupportedProtocol<pos:position pos:line="10" pos:column="29"/></name> <init pos:line="10" pos:column="30">= <expr><literal type="boolean" pos:line="10" pos:column="32">false<pos:position pos:line="10" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
    <try pos:line="11" pos:column="5">try <block pos:line="11" pos:column="9">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><call><name><name pos:line="12" pos:column="14">tlsParser<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">.<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="24">parseHello<pos:position pos:line="12" pos:column="34"/></name></name><argument_list pos:line="12" pos:column="34">(<argument><expr><name pos:line="12" pos:column="35">inBuf<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42"> <block pos:line="12" pos:column="43">{
            <comment type="line" pos:line="13" pos:column="13">// need more data to finish parsing</comment>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">readSomeData<pos:position pos:line="14" pos:column="25"/></name><argument_list pos:line="14" pos:column="25">()<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
            <return pos:line="15" pos:column="13">return;<pos:position pos:line="15" pos:column="20"/></return>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block>
    <catch pos:line="18" pos:column="5">catch <parameter_list pos:line="18" pos:column="11">(<parameter><decl><type><specifier pos:line="18" pos:column="12">const<pos:position pos:line="18" pos:column="17"/></specifier> <name><name pos:line="18" pos:column="18">std<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">::<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">exception<pos:position pos:line="18" pos:column="32"/></name></name> <modifier pos:line="18" pos:column="33">&amp;<pos:position pos:line="18" pos:column="38"/></modifier></type><name pos:line="18" pos:column="34">ex<pos:position pos:line="18" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="18" pos:column="37"/></parameter_list> <block pos:line="18" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">83<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="20">2<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"error on FD "<pos:position pos:line="19" pos:column="37"/></literal> <operator pos:line="19" pos:column="38">&lt;&lt;<pos:position pos:line="19" pos:column="46"/></operator> <name><name pos:line="19" pos:column="41">clientConnection<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">-&gt;<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="59">fd<pos:position pos:line="19" pos:column="61"/></name></name> <operator pos:line="19" pos:column="62">&lt;&lt;<pos:position pos:line="19" pos:column="70"/></operator> <literal type="string" pos:line="19" pos:column="65">": "<pos:position pos:line="19" pos:column="69"/></literal> <operator pos:line="19" pos:column="70">&lt;&lt;<pos:position pos:line="19" pos:column="78"/></operator> <call><name><name pos:line="19" pos:column="73">ex<pos:position pos:line="19" pos:column="75"/></name><operator pos:line="19" pos:column="75">.<pos:position pos:line="19" pos:column="76"/></operator><name pos:line="19" pos:column="76">what<pos:position pos:line="19" pos:column="80"/></name></name><argument_list pos:line="19" pos:column="80">()<pos:position pos:line="19" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">unsupportedProtocol<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <literal type="boolean" pos:line="20" pos:column="31">true<pos:position pos:line="20" pos:column="35"/></literal></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></catch></try>

    <expr_stmt><expr><name pos:line="23" pos:column="5">parsingTlsHandshake<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">=<pos:position pos:line="23" pos:column="26"/></operator> <literal type="boolean" pos:line="23" pos:column="27">false<pos:position pos:line="23" pos:column="32"/></literal></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>

    <comment type="line" pos:line="25" pos:column="5">// client data may be needed for splicing and for</comment>
    <comment type="line" pos:line="26" pos:column="5">// tunneling unsupportedProtocol after an error</comment>
    <expr_stmt><expr><name pos:line="27" pos:column="5">preservedClientData<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <name pos:line="27" pos:column="27">inBuf<pos:position pos:line="27" pos:column="32"/></name></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>

    <comment type="line" pos:line="29" pos:column="5">// Even if the parser failed, each TLS detail should either be set</comment>
    <comment type="line" pos:line="30" pos:column="5">// correctly or still be "unknown"; copying unknown detail is a no-op.</comment>
    <decl_stmt><decl><type><name><name pos:line="31" pos:column="5">Security<pos:position pos:line="31" pos:column="13"/></name><operator pos:line="31" pos:column="13">::<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">TlsDetails<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">::<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">Pointer<pos:position pos:line="31" pos:column="34"/></name></name> <specifier pos:line="31" pos:column="35">const<pos:position pos:line="31" pos:column="40"/></specifier> <modifier pos:line="31" pos:column="41">&amp;<pos:position pos:line="31" pos:column="46"/></modifier></type><name pos:line="31" pos:column="42">details<pos:position pos:line="31" pos:column="49"/></name> <init pos:line="31" pos:column="50">= <expr><name><name pos:line="31" pos:column="52">tlsParser<pos:position pos:line="31" pos:column="61"/></name><operator pos:line="31" pos:column="61">.<pos:position pos:line="31" pos:column="62"/></operator><name pos:line="31" pos:column="62">details<pos:position pos:line="31" pos:column="69"/></name></name></expr></init></decl>;<pos:position pos:line="31" pos:column="70"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">clientConnection<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">tlsNegotiations<pos:position pos:line="32" pos:column="38"/></name></name><argument_list pos:line="32" pos:column="38">()<pos:position pos:line="32" pos:column="40"/></argument_list></call><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><call><name pos:line="32" pos:column="42">retrieveParsedInfo<pos:position pos:line="32" pos:column="60"/></name><argument_list pos:line="32" pos:column="60">(<argument><expr><name pos:line="32" pos:column="61">details<pos:position pos:line="32" pos:column="68"/></name></expr></argument>)<pos:position pos:line="32" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="70"/></expr_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">details<pos:position pos:line="33" pos:column="16"/></name> <operator pos:line="33" pos:column="17">&amp;&amp;<pos:position pos:line="33" pos:column="27"/></operator> <operator pos:line="33" pos:column="20">!<pos:position pos:line="33" pos:column="21"/></operator><call><name><name pos:line="33" pos:column="21">details<pos:position pos:line="33" pos:column="28"/></name><operator pos:line="33" pos:column="28">-&gt;<pos:position pos:line="33" pos:column="33"/></operator><name pos:line="33" pos:column="30">serverName<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">.<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="41">isEmpty<pos:position pos:line="33" pos:column="48"/></name></name><argument_list pos:line="33" pos:column="48">()<pos:position pos:line="33" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="51"/></condition><then pos:line="33" pos:column="51"> <block pos:line="33" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">resetSslCommonName<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><call><name><name pos:line="34" pos:column="28">details<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">-&gt;<pos:position pos:line="34" pos:column="40"/></operator><name pos:line="34" pos:column="37">serverName<pos:position pos:line="34" pos:column="47"/></name><operator pos:line="34" pos:column="47">.<pos:position pos:line="34" pos:column="48"/></operator><name pos:line="34" pos:column="48">c_str<pos:position pos:line="34" pos:column="53"/></name></name><argument_list pos:line="34" pos:column="53">()<pos:position pos:line="34" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">tlsClientSni_<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">=<pos:position pos:line="35" pos:column="24"/></operator> <name><name pos:line="35" pos:column="25">details<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">-&gt;<pos:position pos:line="35" pos:column="37"/></operator><name pos:line="35" pos:column="34">serverName<pos:position pos:line="35" pos:column="44"/></name></name></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="38" pos:column="5">// We should disable read/write handlers</comment>
    <expr_stmt><expr><call><name><name pos:line="39" pos:column="5">Comm<pos:position pos:line="39" pos:column="9"/></name><operator pos:line="39" pos:column="9">::<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="11">SetSelect<pos:position pos:line="39" pos:column="20"/></name></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name><name pos:line="39" pos:column="21">clientConnection<pos:position pos:line="39" pos:column="37"/></name><operator pos:line="39" pos:column="37">-&gt;<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="39">fd<pos:position pos:line="39" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="43">COMM_SELECT_READ<pos:position pos:line="39" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="61">NULL<pos:position pos:line="39" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="67">NULL<pos:position pos:line="39" pos:column="71"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="73">0<pos:position pos:line="39" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="76"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="40" pos:column="5">Comm<pos:position pos:line="40" pos:column="9"/></name><operator pos:line="40" pos:column="9">::<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="11">SetSelect<pos:position pos:line="40" pos:column="20"/></name></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name><name pos:line="40" pos:column="21">clientConnection<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">-&gt;<pos:position pos:line="40" pos:column="42"/></operator><name pos:line="40" pos:column="39">fd<pos:position pos:line="40" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="43">COMM_SELECT_WRITE<pos:position pos:line="40" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="62">NULL<pos:position pos:line="40" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="68">NULL<pos:position pos:line="40" pos:column="72"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="74">0<pos:position pos:line="40" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="77"/></expr_stmt>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">unsupportedProtocol<pos:position pos:line="42" pos:column="28"/></name></expr>)<pos:position pos:line="42" pos:column="29"/></condition><then pos:line="42" pos:column="29"> <block pos:line="42" pos:column="30">{
        <decl_stmt><decl><type><name><name pos:line="43" pos:column="9">Http<pos:position pos:line="43" pos:column="13"/></name><operator pos:line="43" pos:column="13">::<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">StreamPointer<pos:position pos:line="43" pos:column="28"/></name></name></type> <name pos:line="43" pos:column="29">context<pos:position pos:line="43" pos:column="36"/></name> <init pos:line="43" pos:column="37">= <expr><call><name><name pos:line="43" pos:column="39">pipeline<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">.<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="48">front<pos:position pos:line="43" pos:column="53"/></name></name><argument_list pos:line="43" pos:column="53">()<pos:position pos:line="43" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="43" pos:column="56"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">Must<pos:position pos:line="44" pos:column="13"/></name><argument_list pos:line="44" pos:column="13">(<argument><expr><name pos:line="44" pos:column="14">context<pos:position pos:line="44" pos:column="21"/></name> <operator pos:line="44" pos:column="22">&amp;&amp;<pos:position pos:line="44" pos:column="32"/></operator> <name><name pos:line="44" pos:column="25">context<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">-&gt;<pos:position pos:line="44" pos:column="37"/></operator><name pos:line="44" pos:column="34">http<pos:position pos:line="44" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="40"/></expr_stmt>
        <decl_stmt><decl><type><name><name pos:line="45" pos:column="9">HttpRequest<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">::<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">Pointer<pos:position pos:line="45" pos:column="29"/></name></name></type> <name pos:line="45" pos:column="30">request<pos:position pos:line="45" pos:column="37"/></name> <init pos:line="45" pos:column="38">= <expr><name><name pos:line="45" pos:column="40">context<pos:position pos:line="45" pos:column="47"/></name><operator pos:line="45" pos:column="47">-&gt;<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="49">http<pos:position pos:line="45" pos:column="53"/></name><operator pos:line="45" pos:column="53">-&gt;<pos:position pos:line="45" pos:column="58"/></operator><name pos:line="45" pos:column="55">request<pos:position pos:line="45" pos:column="62"/></name></name></expr></init></decl>;<pos:position pos:line="45" pos:column="63"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">debugs<pos:position pos:line="46" pos:column="15"/></name><argument_list pos:line="46" pos:column="15">(<argument><expr><literal type="number" pos:line="46" pos:column="16">83<pos:position pos:line="46" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="20">5<pos:position pos:line="46" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="23">"Got something other than TLS Client Hello. Cannot SslBump."<pos:position pos:line="46" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><name pos:line="47" pos:column="9">sslBumpMode<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <name><name pos:line="47" pos:column="23">Ssl<pos:position pos:line="47" pos:column="26"/></name><operator pos:line="47" pos:column="26">::<pos:position pos:line="47" pos:column="28"/></operator><name pos:line="47" pos:column="28">bumpSplice<pos:position pos:line="47" pos:column="38"/></name></name></expr>;<pos:position pos:line="47" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">context<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">-&gt;<pos:position pos:line="48" pos:column="21"/></operator><name pos:line="48" pos:column="18">http<pos:position pos:line="48" pos:column="22"/></name><operator pos:line="48" pos:column="22">-&gt;<pos:position pos:line="48" pos:column="27"/></operator><name pos:line="48" pos:column="24">al<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">-&gt;<pos:position pos:line="48" pos:column="31"/></operator><name pos:line="48" pos:column="28">ssl<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">.<pos:position pos:line="48" pos:column="32"/></operator><name pos:line="48" pos:column="32">bumpMode<pos:position pos:line="48" pos:column="40"/></name></name> <operator pos:line="48" pos:column="41">=<pos:position pos:line="48" pos:column="42"/></operator> <name><name pos:line="48" pos:column="43">Ssl<pos:position pos:line="48" pos:column="46"/></name><operator pos:line="48" pos:column="46">::<pos:position pos:line="48" pos:column="48"/></operator><name pos:line="48" pos:column="48">bumpSplice<pos:position pos:line="48" pos:column="58"/></name></name></expr>;<pos:position pos:line="48" pos:column="59"/></expr_stmt>
        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><call><name pos:line="49" pos:column="14">clientTunnelOnError<pos:position pos:line="49" pos:column="33"/></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">this<pos:position pos:line="49" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="40">context<pos:position pos:line="49" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="49">request<pos:position pos:line="49" pos:column="56"/></name></expr></argument>, <argument><expr><call><name pos:line="49" pos:column="58">HttpRequestMethod<pos:position pos:line="49" pos:column="75"/></name><argument_list pos:line="49" pos:column="75">()<pos:position pos:line="49" pos:column="77"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="49" pos:column="79">ERR_PROTOCOL_UNKNOWN<pos:position pos:line="49" pos:column="99"/></name></expr></argument>)<pos:position pos:line="49" pos:column="100"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="101"/></condition><then pos:line="49" pos:column="101">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="50" pos:column="13">clientConnection<pos:position pos:line="50" pos:column="29"/></name><operator pos:line="50" pos:column="29">-&gt;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="31">close<pos:position pos:line="50" pos:column="36"/></name></name><argument_list pos:line="50" pos:column="36">()<pos:position pos:line="50" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt></block></then></if>
        <return pos:line="51" pos:column="9">return;<pos:position pos:line="51" pos:column="16"/></return>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>

    <if pos:line="54" pos:column="5">if <condition pos:line="54" pos:column="8">(<expr><operator pos:line="54" pos:column="9">!<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">sslServerBump<pos:position pos:line="54" pos:column="23"/></name> <operator pos:line="54" pos:column="24">||<pos:position pos:line="54" pos:column="26"/></operator> <name><name pos:line="54" pos:column="27">sslServerBump<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">-&gt;<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="42">act<pos:position pos:line="54" pos:column="45"/></name><operator pos:line="54" pos:column="45">.<pos:position pos:line="54" pos:column="46"/></operator><name pos:line="54" pos:column="46">step1<pos:position pos:line="54" pos:column="51"/></name></name> <operator pos:line="54" pos:column="52">==<pos:position pos:line="54" pos:column="54"/></operator> <name><name pos:line="54" pos:column="55">Ssl<pos:position pos:line="54" pos:column="58"/></name><operator pos:line="54" pos:column="58">::<pos:position pos:line="54" pos:column="60"/></operator><name pos:line="54" pos:column="60">bumpClientFirst<pos:position pos:line="54" pos:column="75"/></name></name></expr>)<pos:position pos:line="54" pos:column="76"/></condition><then pos:line="54" pos:column="76"> <block pos:line="54" pos:column="77">{ <comment type="line" pos:line="54" pos:column="79">// Either means client-first.</comment>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">getSslContextStart<pos:position pos:line="55" pos:column="27"/></name><argument_list pos:line="55" pos:column="27">()<pos:position pos:line="55" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
        <return pos:line="56" pos:column="9">return;<pos:position pos:line="56" pos:column="16"/></return>
    }<pos:position pos:line="57" pos:column="6"/></block></then> <elseif pos:line="57" pos:column="7">else <if pos:line="57" pos:column="12">if <condition pos:line="57" pos:column="15">(<expr><name><name pos:line="57" pos:column="16">sslServerBump<pos:position pos:line="57" pos:column="29"/></name><operator pos:line="57" pos:column="29">-&gt;<pos:position pos:line="57" pos:column="34"/></operator><name pos:line="57" pos:column="31">act<pos:position pos:line="57" pos:column="34"/></name><operator pos:line="57" pos:column="34">.<pos:position pos:line="57" pos:column="35"/></operator><name pos:line="57" pos:column="35">step1<pos:position pos:line="57" pos:column="40"/></name></name> <operator pos:line="57" pos:column="41">==<pos:position pos:line="57" pos:column="43"/></operator> <name><name pos:line="57" pos:column="44">Ssl<pos:position pos:line="57" pos:column="47"/></name><operator pos:line="57" pos:column="47">::<pos:position pos:line="57" pos:column="49"/></operator><name pos:line="57" pos:column="49">bumpServerFirst<pos:position pos:line="57" pos:column="64"/></name></name></expr>)<pos:position pos:line="57" pos:column="65"/></condition><then pos:line="57" pos:column="65"> <block pos:line="57" pos:column="66">{
        <comment type="line" pos:line="58" pos:column="9">// will call httpsPeeked() with certificate and connection, eventually</comment>
        <expr_stmt><expr><call><name><name pos:line="59" pos:column="9">FwdState<pos:position pos:line="59" pos:column="17"/></name><operator pos:line="59" pos:column="17">::<pos:position pos:line="59" pos:column="19"/></operator><name pos:line="59" pos:column="19">fwdStart<pos:position pos:line="59" pos:column="27"/></name></name><argument_list pos:line="59" pos:column="27">(<argument><expr><name pos:line="59" pos:column="28">clientConnection<pos:position pos:line="59" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="46">sslServerBump<pos:position pos:line="59" pos:column="59"/></name><operator pos:line="59" pos:column="59">-&gt;<pos:position pos:line="59" pos:column="64"/></operator><name pos:line="59" pos:column="61">entry<pos:position pos:line="59" pos:column="66"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="59" pos:column="68">sslServerBump<pos:position pos:line="59" pos:column="81"/></name><operator pos:line="59" pos:column="81">-&gt;<pos:position pos:line="59" pos:column="86"/></operator><name pos:line="59" pos:column="83">request<pos:position pos:line="59" pos:column="90"/></name><operator pos:line="59" pos:column="90">.<pos:position pos:line="59" pos:column="91"/></operator><name pos:line="59" pos:column="91">getRaw<pos:position pos:line="59" pos:column="97"/></name></name><argument_list pos:line="59" pos:column="97">()<pos:position pos:line="59" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="101"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if></elseif> <else pos:line="60" pos:column="7">else <block pos:line="60" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">Must<pos:position pos:line="61" pos:column="13"/></name><argument_list pos:line="61" pos:column="13">(<argument><expr><name><name pos:line="61" pos:column="14">sslServerBump<pos:position pos:line="61" pos:column="27"/></name><operator pos:line="61" pos:column="27">-&gt;<pos:position pos:line="61" pos:column="32"/></operator><name pos:line="61" pos:column="29">act<pos:position pos:line="61" pos:column="32"/></name><operator pos:line="61" pos:column="32">.<pos:position pos:line="61" pos:column="33"/></operator><name pos:line="61" pos:column="33">step1<pos:position pos:line="61" pos:column="38"/></name></name> <operator pos:line="61" pos:column="39">==<pos:position pos:line="61" pos:column="41"/></operator> <name><name pos:line="61" pos:column="42">Ssl<pos:position pos:line="61" pos:column="45"/></name><operator pos:line="61" pos:column="45">::<pos:position pos:line="61" pos:column="47"/></operator><name pos:line="61" pos:column="47">bumpPeek<pos:position pos:line="61" pos:column="55"/></name></name> <operator pos:line="61" pos:column="56">||<pos:position pos:line="61" pos:column="58"/></operator> <name><name pos:line="61" pos:column="59">sslServerBump<pos:position pos:line="61" pos:column="72"/></name><operator pos:line="61" pos:column="72">-&gt;<pos:position pos:line="61" pos:column="77"/></operator><name pos:line="61" pos:column="74">act<pos:position pos:line="61" pos:column="77"/></name><operator pos:line="61" pos:column="77">.<pos:position pos:line="61" pos:column="78"/></operator><name pos:line="61" pos:column="78">step1<pos:position pos:line="61" pos:column="83"/></name></name> <operator pos:line="61" pos:column="84">==<pos:position pos:line="61" pos:column="86"/></operator> <name><name pos:line="61" pos:column="87">Ssl<pos:position pos:line="61" pos:column="90"/></name><operator pos:line="61" pos:column="90">::<pos:position pos:line="61" pos:column="92"/></operator><name pos:line="61" pos:column="92">bumpStare<pos:position pos:line="61" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="61" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="103"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">startPeekAndSplice<pos:position pos:line="62" pos:column="27"/></name><argument_list pos:line="62" pos:column="27">()<pos:position pos:line="62" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></else></if>
}<pos:position pos:line="64" pos:column="2"/></block></function></unit>

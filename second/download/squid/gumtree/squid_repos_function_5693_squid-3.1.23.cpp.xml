<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5693_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">malloc_stat<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">int<pos:position pos:line="2" pos:column="16"/></name></type> <name pos:line="2" pos:column="17">sz<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">dbg_stat_init<pos:position pos:line="4" pos:column="23"/></name></expr>)<pos:position pos:line="4" pos:column="24"/></condition><then pos:line="4" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">stat_init<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">()<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt></block></then></if>

    <return pos:line="7" pos:column="5">return <expr><name><name pos:line="7" pos:column="12">malloc_sizes<pos:position pos:line="7" pos:column="24"/></name><index pos:line="7" pos:column="24">[<expr><call><name pos:line="7" pos:column="25">DBG_INDEX<pos:position pos:line="7" pos:column="34"/></name><argument_list pos:line="7" pos:column="34">(<argument><expr><name pos:line="7" pos:column="35">sz<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>]<pos:position pos:line="7" pos:column="39"/></index></name> <operator pos:line="7" pos:column="40">+=<pos:position pos:line="7" pos:column="42"/></operator> <literal type="number" pos:line="7" pos:column="43">1<pos:position pos:line="7" pos:column="44"/></literal></expr>;<pos:position pos:line="7" pos:column="45"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5070_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ident<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">ConnectDone<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name><name pos:line="2" pos:column="26">Comm<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">ConnectionPointer<pos:position pos:line="2" pos:column="49"/></name></name> <modifier pos:line="2" pos:column="50">&amp;<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="51">conn<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">comm_err_t<pos:position pos:line="2" pos:column="67"/></name></type> <name pos:line="2" pos:column="68">status<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="76">int<pos:position pos:line="2" pos:column="79"/></name></type> <name pos:line="2" pos:column="80">xerrno<pos:position pos:line="2" pos:column="86"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="88">void<pos:position pos:line="2" pos:column="92"/></name> <modifier pos:line="2" pos:column="93">*<pos:position pos:line="2" pos:column="94"/></modifier></type><name pos:line="2" pos:column="94">data<pos:position pos:line="2" pos:column="98"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="99"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">IdentStateData<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">state<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">(<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="30">IdentStateData<pos:position pos:line="4" pos:column="44"/></name> <operator pos:line="4" pos:column="45">*<pos:position pos:line="4" pos:column="46"/></operator><operator pos:line="4" pos:column="46">)<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="47">data<pos:position pos:line="4" pos:column="51"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">status<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">!=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">COMM_OK<pos:position pos:line="6" pos:column="26"/></name></expr>)<pos:position pos:line="6" pos:column="27"/></condition><then pos:line="6" pos:column="27"> <block pos:line="6" pos:column="28">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">status<pos:position pos:line="7" pos:column="19"/></name> <operator pos:line="7" pos:column="20">==<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">COMM_TIMEOUT<pos:position pos:line="7" pos:column="35"/></name></expr>)<pos:position pos:line="7" pos:column="36"/></condition><then pos:line="7" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="13">debugs<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">(<argument><expr><literal type="number" pos:line="8" pos:column="20">30<pos:position pos:line="8" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="24">3<pos:position pos:line="8" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="27">"IDENT connection timeout to "<pos:position pos:line="8" pos:column="57"/></literal> <operator pos:line="8" pos:column="58">&lt;&lt;<pos:position pos:line="8" pos:column="66"/></operator> <name><name pos:line="8" pos:column="61">state<pos:position pos:line="8" pos:column="66"/></name><operator pos:line="8" pos:column="66">-&gt;<pos:position pos:line="8" pos:column="71"/></operator><name pos:line="8" pos:column="68">conn<pos:position pos:line="8" pos:column="72"/></name><operator pos:line="8" pos:column="72">-&gt;<pos:position pos:line="8" pos:column="77"/></operator><name pos:line="8" pos:column="74">remote<pos:position pos:line="8" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="82"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">state<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">deleteThis<pos:position pos:line="9" pos:column="26"/></name></name><argument_list pos:line="9" pos:column="26">(<argument><expr><ternary><condition><expr><name pos:line="9" pos:column="27">status<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">==<pos:position pos:line="9" pos:column="36"/></operator> <name pos:line="9" pos:column="37">COMM_TIMEOUT<pos:position pos:line="9" pos:column="49"/></name></expr> ?<pos:position pos:line="9" pos:column="51"/></condition><then pos:line="9" pos:column="51"> <expr><literal type="string" pos:line="9" pos:column="52">"connect timeout"<pos:position pos:line="9" pos:column="69"/></literal></expr> <pos:position pos:line="9" pos:column="70"/></then><else pos:line="9" pos:column="70">: <expr><literal type="string" pos:line="9" pos:column="72">"connect error"<pos:position pos:line="9" pos:column="87"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="9" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="89"/></expr_stmt>
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/*
     * see if any of our clients still care
     */</comment>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">IdentClient<pos:position pos:line="16" pos:column="16"/></name> <modifier pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></modifier></type><name pos:line="16" pos:column="18">c<pos:position pos:line="16" pos:column="19"/></name></decl>;<pos:position pos:line="16" pos:column="20"/></decl_stmt>
    <for pos:line="17" pos:column="5">for <control pos:line="17" pos:column="9">(<init><expr><name pos:line="17" pos:column="10">c<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name><name pos:line="17" pos:column="14">state<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">clients<pos:position pos:line="17" pos:column="28"/></name></name></expr>;<pos:position pos:line="17" pos:column="29"/></init> <condition><expr><name pos:line="17" pos:column="30">c<pos:position pos:line="17" pos:column="31"/></name></expr>;<pos:position pos:line="17" pos:column="32"/></condition> <incr><expr><name pos:line="17" pos:column="33">c<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">=<pos:position pos:line="17" pos:column="36"/></operator> <name><name pos:line="17" pos:column="37">c<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">-&gt;<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="40">next<pos:position pos:line="17" pos:column="44"/></name></name></expr></incr>)<pos:position pos:line="17" pos:column="45"/></control> <block pos:line="17" pos:column="46">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><call><name pos:line="18" pos:column="13">cbdataReferenceValid<pos:position pos:line="18" pos:column="33"/></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name><name pos:line="18" pos:column="34">c<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">-&gt;<pos:position pos:line="18" pos:column="40"/></operator><name pos:line="18" pos:column="37">callback_data<pos:position pos:line="18" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="52"/></condition><then pos:line="18" pos:column="52">
            <block type="pseudo"><break pos:line="19" pos:column="13">break;<pos:position pos:line="19" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></for>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">c<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">==<pos:position pos:line="22" pos:column="13"/></operator> <name pos:line="22" pos:column="14">NULL<pos:position pos:line="22" pos:column="18"/></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
        <expr_stmt><expr><call><name><name pos:line="23" pos:column="9">state<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">deleteThis<pos:position pos:line="23" pos:column="26"/></name></name><argument_list pos:line="23" pos:column="26">(<argument><expr><literal type="string" pos:line="23" pos:column="27">"client(s) aborted"<pos:position pos:line="23" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>
        <return pos:line="24" pos:column="9">return;<pos:position pos:line="24" pos:column="16"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">assert<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><name pos:line="27" pos:column="12">conn<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">!=<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">NULL<pos:position pos:line="27" pos:column="24"/></name> <operator pos:line="27" pos:column="25">&amp;&amp;<pos:position pos:line="27" pos:column="35"/></operator> <name pos:line="27" pos:column="28">conn<pos:position pos:line="27" pos:column="32"/></name> <operator pos:line="27" pos:column="33">==<pos:position pos:line="27" pos:column="35"/></operator> <name><name pos:line="27" pos:column="36">state<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">-&gt;<pos:position pos:line="27" pos:column="46"/></operator><name pos:line="27" pos:column="43">conn<pos:position pos:line="27" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">comm_add_close_handler<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name><name pos:line="28" pos:column="28">conn<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">fd<pos:position pos:line="28" pos:column="36"/></name></name></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="38">Ident<pos:position pos:line="28" pos:column="43"/></name><operator pos:line="28" pos:column="43">::<pos:position pos:line="28" pos:column="45"/></operator><name pos:line="28" pos:column="45">Close<pos:position pos:line="28" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="52">state<pos:position pos:line="28" pos:column="57"/></name></expr></argument>)<pos:position pos:line="28" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="30" pos:column="5">AsyncCall<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">::<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">Pointer<pos:position pos:line="30" pos:column="23"/></name></name></type> <name pos:line="30" pos:column="24">writeCall<pos:position pos:line="30" pos:column="33"/></name> <init pos:line="30" pos:column="34">= <expr><call><name pos:line="30" pos:column="36">commCbCall<pos:position pos:line="30" pos:column="46"/></name><argument_list pos:line="30" pos:column="46">(<argument><expr><literal type="number" pos:line="30" pos:column="47">5<pos:position pos:line="30" pos:column="48"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="30" pos:column="49">4<pos:position pos:line="30" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="52">"Ident::WriteFeedback"<pos:position pos:line="30" pos:column="74"/></literal></expr></argument>,
                                   <argument><expr><call><name pos:line="31" pos:column="36">CommIoCbPtrFun<pos:position pos:line="31" pos:column="50"/></name><argument_list pos:line="31" pos:column="50">(<argument><expr><name><name pos:line="31" pos:column="51">Ident<pos:position pos:line="31" pos:column="56"/></name><operator pos:line="31" pos:column="56">::<pos:position pos:line="31" pos:column="58"/></operator><name pos:line="31" pos:column="58">WriteFeedback<pos:position pos:line="31" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="73">state<pos:position pos:line="31" pos:column="78"/></name></expr></argument>)<pos:position pos:line="31" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="80"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="81"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">Comm<pos:position pos:line="32" pos:column="9"/></name><operator pos:line="32" pos:column="9">::<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="11">Write<pos:position pos:line="32" pos:column="16"/></name></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name pos:line="32" pos:column="17">conn<pos:position pos:line="32" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="23">&amp;<pos:position pos:line="32" pos:column="28"/></operator><name><name pos:line="32" pos:column="24">state<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="31">queryMsg<pos:position pos:line="32" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">writeCall<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="52"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="33" pos:column="5">AsyncCall<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">::<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">Pointer<pos:position pos:line="33" pos:column="23"/></name></name></type> <name pos:line="33" pos:column="24">readCall<pos:position pos:line="33" pos:column="32"/></name> <init pos:line="33" pos:column="33">= <expr><call><name pos:line="33" pos:column="35">commCbCall<pos:position pos:line="33" pos:column="45"/></name><argument_list pos:line="33" pos:column="45">(<argument><expr><literal type="number" pos:line="33" pos:column="46">5<pos:position pos:line="33" pos:column="47"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="33" pos:column="48">4<pos:position pos:line="33" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="51">"Ident::ReadReply"<pos:position pos:line="33" pos:column="69"/></literal></expr></argument>,
                                  <argument><expr><call><name pos:line="34" pos:column="35">CommIoCbPtrFun<pos:position pos:line="34" pos:column="49"/></name><argument_list pos:line="34" pos:column="49">(<argument><expr><name><name pos:line="34" pos:column="50">Ident<pos:position pos:line="34" pos:column="55"/></name><operator pos:line="34" pos:column="55">::<pos:position pos:line="34" pos:column="57"/></operator><name pos:line="34" pos:column="57">ReadReply<pos:position pos:line="34" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="68">state<pos:position pos:line="34" pos:column="73"/></name></expr></argument>)<pos:position pos:line="34" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="76"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="35" pos:column="5">comm_read<pos:position pos:line="35" pos:column="14"/></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">conn<pos:position pos:line="35" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="21">state<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">-&gt;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="28">buf<pos:position pos:line="35" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="33">IDENT_BUFSIZE<pos:position pos:line="35" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="48">readCall<pos:position pos:line="35" pos:column="56"/></name></expr></argument>)<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="58"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="36" pos:column="5">AsyncCall<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">::<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">Pointer<pos:position pos:line="36" pos:column="23"/></name></name></type> <name pos:line="36" pos:column="24">timeoutCall<pos:position pos:line="36" pos:column="35"/></name> <init pos:line="36" pos:column="36">= <expr><call><name pos:line="36" pos:column="38">commCbCall<pos:position pos:line="36" pos:column="48"/></name><argument_list pos:line="36" pos:column="48">(<argument><expr><literal type="number" pos:line="36" pos:column="49">5<pos:position pos:line="36" pos:column="50"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="36" pos:column="51">4<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="54">"Ident::Timeout"<pos:position pos:line="36" pos:column="70"/></literal></expr></argument>,
                                     <argument><expr><call><name pos:line="37" pos:column="38">CommTimeoutCbPtrFun<pos:position pos:line="37" pos:column="57"/></name><argument_list pos:line="37" pos:column="57">(<argument><expr><name><name pos:line="37" pos:column="58">Ident<pos:position pos:line="37" pos:column="63"/></name><operator pos:line="37" pos:column="63">::<pos:position pos:line="37" pos:column="65"/></operator><name pos:line="37" pos:column="65">Timeout<pos:position pos:line="37" pos:column="72"/></name></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="74">state<pos:position pos:line="37" pos:column="79"/></name></expr></argument>)<pos:position pos:line="37" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="37" pos:column="82"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">commSetConnTimeout<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name pos:line="38" pos:column="24">conn<pos:position pos:line="38" pos:column="28"/></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="30">Ident<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">::<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="37">TheConfig<pos:position pos:line="38" pos:column="46"/></name><operator pos:line="38" pos:column="46">.<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="47">timeout<pos:position pos:line="38" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="56">timeoutCall<pos:position pos:line="38" pos:column="67"/></name></expr></argument>)<pos:position pos:line="38" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="69"/></expr_stmt>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

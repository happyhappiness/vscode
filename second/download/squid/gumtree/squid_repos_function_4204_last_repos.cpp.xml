<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4204_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name><name pos:line="1" pos:column="7">Acl<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">Option<pos:position pos:line="1" pos:column="18"/></name></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name><name pos:line="2" pos:column="1">Acl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">OptionsParser<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">findOption<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<comment type="block" pos:line="2" pos:column="32">/* const */</comment> <parameter><decl><type><name pos:line="2" pos:column="44">SBuf<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">&amp;<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="50">rawNameBuf<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// TODO: new std::map::find() in C++14 does not require this conversion</comment>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <specifier pos:line="5" pos:column="11">auto<pos:position pos:line="5" pos:column="15"/></specifier></type> <name pos:line="5" pos:column="16">rawName<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><call><name><name pos:line="5" pos:column="26">rawNameBuf<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">.<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">c_str<pos:position pos:line="5" pos:column="42"/></name></name><argument_list pos:line="5" pos:column="42">()<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <specifier pos:line="7" pos:column="11">auto<pos:position pos:line="7" pos:column="15"/></specifier></type> <name pos:line="7" pos:column="16">optionPos<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><call><name><name pos:line="7" pos:column="28">options_<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">.<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">find<pos:position pos:line="7" pos:column="41"/></name></name><argument_list pos:line="7" pos:column="41">(<argument><expr><name pos:line="7" pos:column="42">rawName<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="51"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">optionPos<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">!=<pos:position pos:line="8" pos:column="21"/></operator> <call><name><name pos:line="8" pos:column="22">options_<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">.<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">end<pos:position pos:line="8" pos:column="34"/></name></name><argument_list pos:line="8" pos:column="34">()<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><name><name pos:line="9" pos:column="16">optionPos<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">second<pos:position pos:line="9" pos:column="33"/></name></name></expr>;<pos:position pos:line="9" pos:column="34"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <specifier pos:line="11" pos:column="11">auto<pos:position pos:line="11" pos:column="15"/></specifier></type> <name pos:line="11" pos:column="16">flagPos<pos:position pos:line="11" pos:column="23"/></name> <init pos:line="11" pos:column="24">= <expr><call><name><name pos:line="11" pos:column="26">parameterFlags_<pos:position pos:line="11" pos:column="41"/></name><operator pos:line="11" pos:column="41">.<pos:position pos:line="11" pos:column="42"/></operator><name pos:line="11" pos:column="42">find<pos:position pos:line="11" pos:column="46"/></name></name><argument_list pos:line="11" pos:column="46">(<argument><expr><name pos:line="11" pos:column="47">rawName<pos:position pos:line="11" pos:column="54"/></name></expr></argument>)<pos:position pos:line="11" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="56"/></decl_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">flagPos<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">!=<pos:position pos:line="12" pos:column="19"/></operator> <call><name><name pos:line="12" pos:column="20">parameterFlags_<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">.<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">end<pos:position pos:line="12" pos:column="39"/></name></name><argument_list pos:line="12" pos:column="39">()<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="42"/></condition><then pos:line="12" pos:column="42"> <block pos:line="12" pos:column="43">{
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">flagsToSkip<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">push_back<pos:position pos:line="13" pos:column="30"/></name></name><argument_list pos:line="13" pos:column="30">(<argument><expr><operator pos:line="13" pos:column="31">*<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">flagPos<pos:position pos:line="13" pos:column="39"/></name></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt> <comment type="line" pos:line="13" pos:column="42">// *flagPos is permanent unlike rawName</comment>
        <return pos:line="14" pos:column="9">return <expr><literal type="null" pos:line="14" pos:column="16">nullptr<pos:position pos:line="14" pos:column="23"/></literal></expr>;<pos:position pos:line="14" pos:column="24"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <throw pos:line="17" pos:column="5">throw <expr><call><name pos:line="17" pos:column="11">TexcHere<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><call><name pos:line="17" pos:column="20">ToSBuf<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><literal type="string" pos:line="17" pos:column="27">"unsupported ACL option: "<pos:position pos:line="17" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="55">rawNameBuf<pos:position pos:line="17" pos:column="65"/></name></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></throw>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7432_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">remove_session_cb<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">SSL_CTX<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">SSL_SESSION<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">sessionID<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">SessionCache<pos:position pos:line="4" pos:column="22"/></name></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">83<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">5<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"Request to remove corrupted or not valid SSL_SESSION"<pos:position pos:line="7" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="75"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">pos<pos:position pos:line="8" pos:column="12"/></name></decl>;<pos:position pos:line="8" pos:column="13"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name><name pos:line="9" pos:column="9">SessionCache<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">openForReading<pos:position pos:line="9" pos:column="37"/></name></name><argument_list pos:line="9" pos:column="37">(<argument><expr><cast type="reinterpret" pos:line="9" pos:column="38">reinterpret_cast<argument_list type="generic" pos:line="9" pos:column="54">&lt;<argument><expr><specifier pos:line="9" pos:column="55">const<pos:position pos:line="9" pos:column="60"/></specifier> <name pos:line="9" pos:column="61">cache_key<pos:position pos:line="9" pos:column="70"/></name><operator pos:line="9" pos:column="70">*<pos:position pos:line="9" pos:column="71"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="75"/></argument_list><argument_list pos:line="9" pos:column="72">(<argument><expr><name pos:line="9" pos:column="73">sessionID<pos:position pos:line="9" pos:column="82"/></name></expr></argument>)<pos:position pos:line="9" pos:column="83"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="9" pos:column="85">pos<pos:position pos:line="9" pos:column="88"/></name></expr></argument>)<pos:position pos:line="9" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="90"/></condition><then pos:line="9" pos:column="90"> <block pos:line="9" pos:column="91">{
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">SessionCache<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">-&gt;<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="23">closeForReading<pos:position pos:line="10" pos:column="38"/></name></name><argument_list pos:line="10" pos:column="38">(<argument><expr><name pos:line="10" pos:column="39">pos<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>
        <comment type="line" pos:line="11" pos:column="9">// TODO:</comment>
        <comment type="line" pos:line="12" pos:column="9">// What if we are not able to remove the session?</comment>
        <comment type="line" pos:line="13" pos:column="9">// Maybe schedule a job to remove it later?</comment>
        <comment type="line" pos:line="14" pos:column="9">// For now we just have an invalid entry in cache until will be expired</comment>
        <comment type="line" pos:line="15" pos:column="9">// The OpenSSL library will reject it when we try to use it</comment>
        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">SessionCache<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">-&gt;<pos:position pos:line="16" pos:column="26"/></operator><name pos:line="16" pos:column="23">free<pos:position pos:line="16" pos:column="27"/></name></name><argument_list pos:line="16" pos:column="27">(<argument><expr><name pos:line="16" pos:column="28">pos<pos:position pos:line="16" pos:column="31"/></name></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

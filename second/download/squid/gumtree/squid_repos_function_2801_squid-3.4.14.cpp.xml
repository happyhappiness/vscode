<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2801_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHeader<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">getByNameIfPresent<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">name<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">String<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">&amp;<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="58">result<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list> <specifier pos:line="2" pos:column="66">const<pos:position pos:line="2" pos:column="71"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">http_hdr_type<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">id<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpHeaderPos<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">pos<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name pos:line="5" pos:column="25">HttpHeaderInitPos<pos:position pos:line="5" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HttpHeaderEntry<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">e<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">name<pos:position pos:line="8" pos:column="16"/></name></expr></argument>)<pos:position pos:line="8" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* First try the quick path */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">id<pos:position pos:line="11" pos:column="7"/></name> <operator pos:line="11" pos:column="8">=<pos:position pos:line="11" pos:column="9"/></operator> <call><name pos:line="11" pos:column="10">httpHeaderIdByNameDef<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name pos:line="11" pos:column="32">name<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="38">strlen<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><name pos:line="11" pos:column="45">name<pos:position pos:line="11" pos:column="49"/></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">id<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">!=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">-<pos:position pos:line="13" pos:column="16"/></operator><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18"> <block pos:line="13" pos:column="19">{
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><operator pos:line="14" pos:column="13">!<pos:position pos:line="14" pos:column="14"/></operator><call><name pos:line="14" pos:column="14">has<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">id<pos:position pos:line="14" pos:column="20"/></name></expr></argument>)<pos:position pos:line="14" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22">
            <block type="pseudo"><return pos:line="15" pos:column="13">return <expr><literal type="boolean" pos:line="15" pos:column="20">false<pos:position pos:line="15" pos:column="25"/></literal></expr>;<pos:position pos:line="15" pos:column="26"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="16" pos:column="9">result<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <call><name pos:line="16" pos:column="18">getStrOrList<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">id<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
        <return pos:line="17" pos:column="9">return <expr><literal type="boolean" pos:line="17" pos:column="16">true<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/* Sorry, an unknown header name. Do linear search */</comment>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">bool<pos:position pos:line="21" pos:column="9"/></name></type> <name pos:line="21" pos:column="10">found<pos:position pos:line="21" pos:column="15"/></name> <init pos:line="21" pos:column="16">= <expr><literal type="boolean" pos:line="21" pos:column="18">false<pos:position pos:line="21" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="21" pos:column="24"/></decl_stmt>
    <while pos:line="22" pos:column="5">while <condition pos:line="22" pos:column="11">(<expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">e<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <call><name pos:line="22" pos:column="17">getEntry<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><operator pos:line="22" pos:column="26">&amp;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="27">pos<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call><operator pos:line="22" pos:column="31">)<pos:position pos:line="22" pos:column="32"/></operator></expr>)<pos:position pos:line="22" pos:column="33"/></condition> <block pos:line="22" pos:column="34">{
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">e<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">id<pos:position pos:line="23" pos:column="18"/></name></name> <operator pos:line="23" pos:column="19">==<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">HDR_OTHER<pos:position pos:line="23" pos:column="31"/></name> <operator pos:line="23" pos:column="32">&amp;&amp;<pos:position pos:line="23" pos:column="42"/></operator> <call><name><name pos:line="23" pos:column="35">e<pos:position pos:line="23" pos:column="36"/></name><operator pos:line="23" pos:column="36">-&gt;<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="38">name<pos:position pos:line="23" pos:column="42"/></name><operator pos:line="23" pos:column="42">.<pos:position pos:line="23" pos:column="43"/></operator><name pos:line="23" pos:column="43">caseCmp<pos:position pos:line="23" pos:column="50"/></name></name><argument_list pos:line="23" pos:column="50">(<argument><expr><name pos:line="23" pos:column="51">name<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call> <operator pos:line="23" pos:column="57">==<pos:position pos:line="23" pos:column="59"/></operator> <literal type="number" pos:line="23" pos:column="60">0<pos:position pos:line="23" pos:column="61"/></literal></expr>)<pos:position pos:line="23" pos:column="62"/></condition><then pos:line="23" pos:column="62"> <block pos:line="23" pos:column="63">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">found<pos:position pos:line="24" pos:column="18"/></name> <operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator> <literal type="boolean" pos:line="24" pos:column="21">true<pos:position pos:line="24" pos:column="25"/></literal></expr>;<pos:position pos:line="24" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">strListAdd<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><operator pos:line="25" pos:column="24">&amp;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="25">result<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><call><name><name pos:line="25" pos:column="33">e<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">value<pos:position pos:line="25" pos:column="41"/></name><operator pos:line="25" pos:column="41">.<pos:position pos:line="25" pos:column="42"/></operator><name pos:line="25" pos:column="42">termedBuf<pos:position pos:line="25" pos:column="51"/></name></name><argument_list pos:line="25" pos:column="51">()<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="55">','<pos:position pos:line="25" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if>
    }<pos:position pos:line="27" pos:column="6"/></block></while>

    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">found<pos:position pos:line="29" pos:column="17"/></name></expr>;<pos:position pos:line="29" pos:column="18"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3601_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Launcher<pos:position pos:line="1" pos:column="32"/></name><operator pos:line="1" pos:column="32">::<pos:position pos:line="1" pos:column="34"/></operator><name pos:line="1" pos:column="34">noteAdaptationAnswer<pos:position pos:line="1" pos:column="54"/></name></name><parameter_list pos:line="1" pos:column="54">(<parameter><decl><type><specifier pos:line="1" pos:column="55">const<pos:position pos:line="1" pos:column="60"/></specifier> <name pos:line="1" pos:column="61">Answer<pos:position pos:line="1" pos:column="67"/></name> <modifier pos:line="1" pos:column="68">&amp;<pos:position pos:line="1" pos:column="73"/></modifier></type><name pos:line="1" pos:column="69">answer<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="76"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">93<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="3" pos:column="15">5<pos:position pos:line="3" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="18">HERE<pos:position pos:line="3" pos:column="22"/></name> <operator pos:line="3" pos:column="23">&lt;&lt;<pos:position pos:line="3" pos:column="31"/></operator> <literal type="string" pos:line="3" pos:column="26">"launches: "<pos:position pos:line="3" pos:column="38"/></literal> <operator pos:line="3" pos:column="39">&lt;&lt;<pos:position pos:line="3" pos:column="47"/></operator> <name pos:line="3" pos:column="42">theLaunches<pos:position pos:line="3" pos:column="53"/></name> <operator pos:line="3" pos:column="54">&lt;&lt;<pos:position pos:line="3" pos:column="62"/></operator> <literal type="string" pos:line="3" pos:column="57">" answer: "<pos:position pos:line="3" pos:column="68"/></literal> <operator pos:line="3" pos:column="69">&lt;&lt;<pos:position pos:line="3" pos:column="77"/></operator> <name pos:line="3" pos:column="72">answer<pos:position pos:line="3" pos:column="78"/></name></expr></argument>)<pos:position pos:line="3" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="80"/></expr_stmt>

    <comment type="line" pos:line="5" pos:column="5">// XXX: akError is unused by ICAPXaction in favor of noteXactAbort()</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><name><name pos:line="6" pos:column="10">answer<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">.<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">kind<pos:position pos:line="6" pos:column="21"/></name></name> <operator pos:line="6" pos:column="22">!=<pos:position pos:line="6" pos:column="24"/></operator> <name><name pos:line="6" pos:column="25">Answer<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">::<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">akError<pos:position pos:line="6" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">sendAnswer<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">answer<pos:position pos:line="8" pos:column="22"/></name></expr></argument>)<pos:position pos:line="8" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">clearAdaptation<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">theXaction<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">Must<pos:position pos:line="10" pos:column="9"/></name><argument_list pos:line="10" pos:column="9">(<argument><expr><call><name pos:line="10" pos:column="10">done<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">()<pos:position pos:line="10" pos:column="16"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

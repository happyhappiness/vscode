<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5408_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">MemAllocator<pos:position pos:line="1" pos:column="13"/></name> <modifier pos:line="1" pos:column="14">*<pos:position pos:line="1" pos:column="15"/></modifier></type>
<name><name pos:line="2" pos:column="1">Mem<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">AllocatorProxy<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">getAllocator<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list> <specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">theAllocator<pos:position pos:line="4" pos:column="22"/></name></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23"> <block pos:line="4" pos:column="24">{
        <expr_stmt><expr><name pos:line="5" pos:column="9">theAllocator<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">=<pos:position pos:line="5" pos:column="23"/></operator> <call><name><name pos:line="5" pos:column="24">MemPools<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">::<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="34">GetInstance<pos:position pos:line="5" pos:column="45"/></name></name><argument_list pos:line="5" pos:column="45">()<pos:position pos:line="5" pos:column="47"/></argument_list></call><operator pos:line="5" pos:column="47">.<pos:position pos:line="5" pos:column="48"/></operator><call><name pos:line="5" pos:column="48">create<pos:position pos:line="5" pos:column="54"/></name><argument_list pos:line="5" pos:column="54">(<argument><expr><call><name pos:line="5" pos:column="55">objectType<pos:position pos:line="5" pos:column="65"/></name><argument_list pos:line="5" pos:column="65">()<pos:position pos:line="5" pos:column="67"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="69">size<pos:position pos:line="5" pos:column="73"/></name></expr></argument>)<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="6" pos:column="9">theAllocator<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">zeroBlocks<pos:position pos:line="6" pos:column="33"/></name></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">doZero<pos:position pos:line="6" pos:column="40"/></name></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">theAllocator<pos:position pos:line="8" pos:column="24"/></name></expr>;<pos:position pos:line="8" pos:column="25"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

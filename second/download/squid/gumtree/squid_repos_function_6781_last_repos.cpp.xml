<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6781_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESISegment<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">listAppend<pos:position pos:line="2" pos:column="23"/></name></name> <parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">char<pos:position pos:line="2" pos:column="29"/></name> <specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">s<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">size_t<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">length<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><call><name><name pos:line="4" pos:column="13">next<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">.<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">getRaw<pos:position pos:line="4" pos:column="24"/></name></name><argument_list pos:line="4" pos:column="24">()<pos:position pos:line="4" pos:column="26"/></argument_list></call> <operator pos:line="4" pos:column="27">==<pos:position pos:line="4" pos:column="29"/></operator> <name pos:line="4" pos:column="30">NULL<pos:position pos:line="4" pos:column="34"/></name></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">ESISegment<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">::<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">Pointer<pos:position pos:line="5" pos:column="24"/></name></name></type> <name pos:line="5" pos:column="25">output<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><name pos:line="5" pos:column="34">this<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="39"/></decl_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* copy the string to output */</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">size_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">pos<pos:position pos:line="7" pos:column="15"/></name><init pos:line="7" pos:column="15">=<expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>

    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><name pos:line="9" pos:column="12">pos<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">&lt;<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="18">length<pos:position pos:line="9" pos:column="24"/></name></expr>)<pos:position pos:line="9" pos:column="25"/></condition> <block pos:line="9" pos:column="26">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name><name pos:line="10" pos:column="13">output<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">space<pos:position pos:line="10" pos:column="26"/></name></name><argument_list pos:line="10" pos:column="26">()<pos:position pos:line="10" pos:column="28"/></argument_list></call> <operator pos:line="10" pos:column="29">==<pos:position pos:line="10" pos:column="31"/></operator> <literal type="number" pos:line="10" pos:column="32">0<pos:position pos:line="10" pos:column="33"/></literal></expr>)<pos:position pos:line="10" pos:column="34"/></condition><then pos:line="10" pos:column="34"> <block pos:line="10" pos:column="35">{
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">assert<pos:position pos:line="11" pos:column="19"/></name> <argument_list pos:line="11" pos:column="20">(<argument><expr><call><name><name pos:line="11" pos:column="21">output<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">-&gt;<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="29">next<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">.<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="34">getRaw<pos:position pos:line="11" pos:column="40"/></name></name><argument_list pos:line="11" pos:column="40">()<pos:position pos:line="11" pos:column="42"/></argument_list></call> <operator pos:line="11" pos:column="43">==<pos:position pos:line="11" pos:column="45"/></operator> <name pos:line="11" pos:column="46">NULL<pos:position pos:line="11" pos:column="50"/></name></expr></argument>)<pos:position pos:line="11" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="12" pos:column="13">output<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">-&gt;<pos:position pos:line="12" pos:column="24"/></operator><name pos:line="12" pos:column="21">next<pos:position pos:line="12" pos:column="25"/></name></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <operator pos:line="12" pos:column="28">new<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="32">ESISegment<pos:position pos:line="12" pos:column="42"/></name></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name pos:line="13" pos:column="13">output<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">=<pos:position pos:line="13" pos:column="21"/></operator> <name><name pos:line="13" pos:column="22">output<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">next<pos:position pos:line="13" pos:column="34"/></name></name></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="16" pos:column="9">pos<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">+=<pos:position pos:line="16" pos:column="15"/></operator> <call><name><name pos:line="16" pos:column="16">output<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">append<pos:position pos:line="16" pos:column="30"/></name></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">s<pos:position pos:line="16" pos:column="32"/></name> <operator pos:line="16" pos:column="33">+<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="35">pos<pos:position pos:line="16" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="40">length<pos:position pos:line="16" pos:column="46"/></name> <operator pos:line="16" pos:column="47">-<pos:position pos:line="16" pos:column="48"/></operator> <name pos:line="16" pos:column="49">pos<pos:position pos:line="16" pos:column="52"/></name></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></while>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

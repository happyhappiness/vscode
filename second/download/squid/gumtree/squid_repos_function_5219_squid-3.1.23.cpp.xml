<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5219_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">aio_open<pos:position pos:line="1" pos:column="13"/></name><parameter_list pos:line="1" pos:column="13">(<parameter><decl><type><specifier pos:line="1" pos:column="14">const<pos:position pos:line="1" pos:column="19"/></specifier> <name pos:line="1" pos:column="20">char<pos:position pos:line="1" pos:column="24"/></name> <modifier pos:line="1" pos:column="25">*<pos:position pos:line="1" pos:column="26"/></modifier></type><name pos:line="1" pos:column="26">path<pos:position pos:line="1" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="32">int<pos:position pos:line="1" pos:column="35"/></name></type> <name pos:line="1" pos:column="36">mode<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">HANDLE<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">hndl<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">DWORD<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">dwCreationDisposition<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">DWORD<pos:position pos:line="5" pos:column="10"/></name></type> <name pos:line="5" pos:column="11">dwDesiredAccess<pos:position pos:line="5" pos:column="26"/></name></decl>;<pos:position pos:line="5" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">fd<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">mode<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">&amp;<pos:position pos:line="8" pos:column="19"/></operator> <name pos:line="8" pos:column="16">O_WRONLY<pos:position pos:line="8" pos:column="24"/></name></expr>)<pos:position pos:line="8" pos:column="25"/></condition><then pos:line="8" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">mode<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">|=<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">O_APPEND<pos:position pos:line="9" pos:column="25"/></name></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="11" pos:column="5">mode<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">|=<pos:position pos:line="11" pos:column="12"/></operator> <name pos:line="11" pos:column="13">O_BINARY<pos:position pos:line="11" pos:column="21"/></name></expr>;<pos:position pos:line="11" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">errno<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <literal type="number" pos:line="13" pos:column="13">0<pos:position pos:line="13" pos:column="14"/></literal></expr>;<pos:position pos:line="13" pos:column="15"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">mode<pos:position pos:line="15" pos:column="13"/></name> <operator pos:line="15" pos:column="14">&amp;<pos:position pos:line="15" pos:column="19"/></operator> <name pos:line="15" pos:column="16">O_WRONLY<pos:position pos:line="15" pos:column="24"/></name></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">dwDesiredAccess<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">=<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">GENERIC_WRITE<pos:position pos:line="16" pos:column="40"/></name></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">dwDesiredAccess<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator> <ternary><condition><expr><operator pos:line="18" pos:column="27">(<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">mode<pos:position pos:line="18" pos:column="32"/></name> <operator pos:line="18" pos:column="33">&amp;<pos:position pos:line="18" pos:column="38"/></operator> <name pos:line="18" pos:column="35">O_RDONLY<pos:position pos:line="18" pos:column="43"/></name><operator pos:line="18" pos:column="43">)<pos:position pos:line="18" pos:column="44"/></operator></expr> ?<pos:position pos:line="18" pos:column="46"/></condition><then pos:line="18" pos:column="46"> <expr><name pos:line="18" pos:column="47">GENERIC_READ<pos:position pos:line="18" pos:column="59"/></name></expr> <pos:position pos:line="18" pos:column="60"/></then><else pos:line="18" pos:column="60">: <expr><name pos:line="18" pos:column="62">GENERIC_READ<pos:position pos:line="18" pos:column="74"/></name> <operator pos:line="18" pos:column="75">|<pos:position pos:line="18" pos:column="76"/></operator> <name pos:line="18" pos:column="77">GENERIC_WRITE<pos:position pos:line="18" pos:column="90"/></name></expr></else></ternary></expr>;<pos:position pos:line="18" pos:column="91"/></expr_stmt></block></else></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">mode<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">&amp;<pos:position pos:line="20" pos:column="19"/></operator> <name pos:line="20" pos:column="16">O_TRUNC<pos:position pos:line="20" pos:column="23"/></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">dwCreationDisposition<pos:position pos:line="21" pos:column="30"/></name> <operator pos:line="21" pos:column="31">=<pos:position pos:line="21" pos:column="32"/></operator> <name pos:line="21" pos:column="33">CREATE_ALWAYS<pos:position pos:line="21" pos:column="46"/></name></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt></block></then>
    <else pos:line="22" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="9">dwCreationDisposition<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <ternary><condition><expr><operator pos:line="23" pos:column="33">(<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="34">mode<pos:position pos:line="23" pos:column="38"/></name> <operator pos:line="23" pos:column="39">&amp;<pos:position pos:line="23" pos:column="44"/></operator> <name pos:line="23" pos:column="41">O_CREAT<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">)<pos:position pos:line="23" pos:column="49"/></operator></expr> ?<pos:position pos:line="23" pos:column="51"/></condition><then pos:line="23" pos:column="51"> <expr><name pos:line="23" pos:column="52">OPEN_ALWAYS<pos:position pos:line="23" pos:column="63"/></name></expr> <pos:position pos:line="23" pos:column="64"/></then><else pos:line="23" pos:column="64">: <expr><name pos:line="23" pos:column="66">OPEN_EXISTING<pos:position pos:line="23" pos:column="79"/></name></expr></else></ternary></expr>;<pos:position pos:line="23" pos:column="80"/></expr_stmt></block></else></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">(<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">hndl<pos:position pos:line="25" pos:column="14"/></name> <operator pos:line="25" pos:column="15">=<pos:position pos:line="25" pos:column="16"/></operator> <call><name pos:line="25" pos:column="17">CreateFile<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">path<pos:position pos:line="25" pos:column="32"/></name></expr></argument>,	                <comment type="block" pos:line="25" pos:column="57">/* file name               */</comment>
                           <argument><expr><name pos:line="26" pos:column="28">dwDesiredAccess<pos:position pos:line="26" pos:column="43"/></name></expr></argument>,	        <comment type="block" pos:line="26" pos:column="57">/* access mode             */</comment>
                           <argument><expr><literal type="number" pos:line="27" pos:column="28">0<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>,			            <comment type="block" pos:line="27" pos:column="61">/* share mode              */</comment>
                           <argument><expr><name pos:line="28" pos:column="28">NULL<pos:position pos:line="28" pos:column="32"/></name></expr></argument>,			        <comment type="block" pos:line="28" pos:column="65">/* SD                      */</comment>
                           <argument><expr><name pos:line="29" pos:column="28">dwCreationDisposition<pos:position pos:line="29" pos:column="49"/></name></expr></argument>,	<comment type="block" pos:line="29" pos:column="57">/* how to create           */</comment>
                           <argument><expr><name pos:line="30" pos:column="28">FILE_FLAG_OVERLAPPED<pos:position pos:line="30" pos:column="48"/></name></expr></argument>,	<comment type="block" pos:line="30" pos:column="57">/* file attributes         */</comment>
                           <argument><expr><name pos:line="31" pos:column="28">NULL<pos:position pos:line="31" pos:column="32"/></name></expr></argument>			            <comment type="block" pos:line="31" pos:column="61">/* handle to template file */</comment>
                          )<pos:position pos:line="32" pos:column="28"/></argument_list></call><operator pos:line="32" pos:column="28">)<pos:position pos:line="32" pos:column="29"/></operator> <operator pos:line="32" pos:column="30">!=<pos:position pos:line="32" pos:column="32"/></operator> <name pos:line="32" pos:column="33">INVALID_HANDLE_VALUE<pos:position pos:line="32" pos:column="53"/></name></expr>)<pos:position pos:line="32" pos:column="54"/></condition><then pos:line="32" pos:column="54"> <block pos:line="32" pos:column="55">{
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">statCounter<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">.<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">syscalls<pos:position pos:line="33" pos:column="29"/></name><operator pos:line="33" pos:column="29">.<pos:position pos:line="33" pos:column="30"/></operator><name pos:line="33" pos:column="30">disk<pos:position pos:line="33" pos:column="34"/></name><operator pos:line="33" pos:column="34">.<pos:position pos:line="33" pos:column="35"/></operator><name pos:line="33" pos:column="35">opens<pos:position pos:line="33" pos:column="40"/></name></name><operator pos:line="33" pos:column="40">++<pos:position pos:line="33" pos:column="42"/></operator></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">fd<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <call><name pos:line="34" pos:column="14">_open_osfhandle<pos:position pos:line="34" pos:column="29"/></name><argument_list pos:line="34" pos:column="29">(<argument><expr><operator pos:line="34" pos:column="30">(<pos:position pos:line="34" pos:column="31"/></operator><name pos:line="34" pos:column="31">long<pos:position pos:line="34" pos:column="35"/></name><operator pos:line="34" pos:column="35">)<pos:position pos:line="34" pos:column="36"/></operator> <name pos:line="34" pos:column="37">hndl<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="43">0<pos:position pos:line="34" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">commSetCloseOnExec<pos:position pos:line="35" pos:column="27"/></name><argument_list pos:line="35" pos:column="27">(<argument><expr><name pos:line="35" pos:column="28">fd<pos:position pos:line="35" pos:column="30"/></name></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">fd_open<pos:position pos:line="36" pos:column="16"/></name><argument_list pos:line="36" pos:column="16">(<argument><expr><name pos:line="36" pos:column="17">fd<pos:position pos:line="36" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="21">FD_FILE<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="30">path<pos:position pos:line="36" pos:column="34"/></name></expr></argument>)<pos:position pos:line="36" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then> <else pos:line="37" pos:column="7">else <block pos:line="37" pos:column="12">{
        <expr_stmt><expr><name pos:line="38" pos:column="9">errno<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <call><name pos:line="38" pos:column="17">GetLastError<pos:position pos:line="38" pos:column="29"/></name><argument_list pos:line="38" pos:column="29">()<pos:position pos:line="38" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="39" pos:column="9">fd<pos:position pos:line="39" pos:column="11"/></name> <operator pos:line="39" pos:column="12">=<pos:position pos:line="39" pos:column="13"/></operator> <name pos:line="39" pos:column="14">DISK_ERROR<pos:position pos:line="39" pos:column="24"/></name></expr>;<pos:position pos:line="39" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></else></if>

    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">fd<pos:position pos:line="42" pos:column="14"/></name></expr>;<pos:position pos:line="42" pos:column="15"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

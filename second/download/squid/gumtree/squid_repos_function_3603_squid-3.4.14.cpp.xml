<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3603_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">switchToHttps<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">HttpRequest<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">request<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="52">Ssl<pos:position pos:line="2" pos:column="55"/></name><operator pos:line="2" pos:column="55">::<pos:position pos:line="2" pos:column="57"/></operator><name pos:line="2" pos:column="57">BumpMode<pos:position pos:line="2" pos:column="65"/></name></name></type> <name pos:line="2" pos:column="66">bumpServerMode<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">switchedToHttps_<pos:position pos:line="4" pos:column="29"/></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">sslConnectHostOrIp<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <call><name><name pos:line="6" pos:column="26">request<pos:position pos:line="6" pos:column="33"/></name><operator pos:line="6" pos:column="33">-&gt;<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="35">GetHost<pos:position pos:line="6" pos:column="42"/></name></name><argument_list pos:line="6" pos:column="42">()<pos:position pos:line="6" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">sslCommonName<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <call><name><name pos:line="7" pos:column="21">request<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">-&gt;<pos:position pos:line="7" pos:column="33"/></operator><name pos:line="7" pos:column="30">GetHost<pos:position pos:line="7" pos:column="37"/></name></name><argument_list pos:line="7" pos:column="37">()<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>

    <comment type="line" pos:line="9" pos:column="5">// We are going to read new request</comment>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">flags<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">readMore<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <literal type="boolean" pos:line="10" pos:column="22">true<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">33<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">5<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="19">HERE<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&lt;&lt;<pos:position pos:line="11" pos:column="32"/></operator> <literal type="string" pos:line="11" pos:column="27">"converting "<pos:position pos:line="11" pos:column="40"/></literal> <operator pos:line="11" pos:column="41">&lt;&lt;<pos:position pos:line="11" pos:column="49"/></operator> <name pos:line="11" pos:column="44">clientConnection<pos:position pos:line="11" pos:column="60"/></name> <operator pos:line="11" pos:column="61">&lt;&lt;<pos:position pos:line="11" pos:column="69"/></operator> <literal type="string" pos:line="11" pos:column="64">" to SSL"<pos:position pos:line="11" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="75"/></expr_stmt>

    <comment type="line" pos:line="13" pos:column="5">// If sslServerBump is set, then we have decided to deny CONNECT</comment>
    <comment type="line" pos:line="14" pos:column="5">// and now want to switch to SSL to send the error to the client</comment>
    <comment type="line" pos:line="15" pos:column="5">// without even peeking at the origin server certificate.</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name pos:line="16" pos:column="9">bumpServerMode<pos:position pos:line="16" pos:column="23"/></name> <operator pos:line="16" pos:column="24">==<pos:position pos:line="16" pos:column="26"/></operator> <name><name pos:line="16" pos:column="27">Ssl<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">::<pos:position pos:line="16" pos:column="32"/></operator><name pos:line="16" pos:column="32">bumpServerFirst<pos:position pos:line="16" pos:column="47"/></name></name> <operator pos:line="16" pos:column="48">&amp;&amp;<pos:position pos:line="16" pos:column="58"/></operator> <operator pos:line="16" pos:column="51">!<pos:position pos:line="16" pos:column="52"/></operator><name pos:line="16" pos:column="52">sslServerBump<pos:position pos:line="16" pos:column="65"/></name></expr>)<pos:position pos:line="16" pos:column="66"/></condition><then pos:line="16" pos:column="66"> <block pos:line="16" pos:column="67">{
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">request<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">-&gt;<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="18">flags<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">.<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="24">sslPeek<pos:position pos:line="17" pos:column="31"/></name></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <literal type="boolean" pos:line="17" pos:column="34">true<pos:position pos:line="17" pos:column="38"/></literal></expr>;<pos:position pos:line="17" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">sslServerBump<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <operator pos:line="18" pos:column="25">new<pos:position pos:line="18" pos:column="28"/></operator> <call><name><name pos:line="18" pos:column="29">Ssl<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">::<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="34">ServerBump<pos:position pos:line="18" pos:column="44"/></name></name><argument_list pos:line="18" pos:column="44">(<argument><expr><name pos:line="18" pos:column="45">request<pos:position pos:line="18" pos:column="52"/></name></expr></argument>)<pos:position pos:line="18" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="54"/></expr_stmt>

        <comment type="line" pos:line="20" pos:column="9">// will call httpsPeeked() with certificate and connection, eventually</comment>
        <expr_stmt><expr><call><name><name pos:line="21" pos:column="9">FwdState<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">::<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">fwdStart<pos:position pos:line="21" pos:column="27"/></name></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name pos:line="21" pos:column="28">clientConnection<pos:position pos:line="21" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="46">sslServerBump<pos:position pos:line="21" pos:column="59"/></name><operator pos:line="21" pos:column="59">-&gt;<pos:position pos:line="21" pos:column="64"/></operator><name pos:line="21" pos:column="61">entry<pos:position pos:line="21" pos:column="66"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="21" pos:column="68">sslServerBump<pos:position pos:line="21" pos:column="81"/></name><operator pos:line="21" pos:column="81">-&gt;<pos:position pos:line="21" pos:column="86"/></operator><name pos:line="21" pos:column="83">request<pos:position pos:line="21" pos:column="90"/></name><operator pos:line="21" pos:column="90">.<pos:position pos:line="21" pos:column="91"/></operator><name pos:line="21" pos:column="91">getRaw<pos:position pos:line="21" pos:column="97"/></name></name><argument_list pos:line="21" pos:column="97">()<pos:position pos:line="21" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="101"/></expr_stmt>
        <return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="25" pos:column="5">// otherwise, use sslConnectHostOrIp</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">getSslContextStart<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">()<pos:position pos:line="26" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

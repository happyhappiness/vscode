<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7408_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerConnector<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">checkForMissingCertificates<pos:position pos:line="2" pos:column="53"/></name></name><parameter_list pos:line="2" pos:column="53">()<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// Check for nested SSL certificates downloads. For example when the</comment>
    <comment type="line" pos:line="5" pos:column="5">// certificate located in an SSL site which requires to download a</comment>
    <comment type="line" pos:line="6" pos:column="5">// a missing certificate (... from an SSL site which requires to ...).</comment>

    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">Downloader<pos:position pos:line="8" pos:column="21"/></name> <modifier pos:line="8" pos:column="22">*<pos:position pos:line="8" pos:column="23"/></modifier></type><name pos:line="8" pos:column="23">csd<pos:position pos:line="8" pos:column="26"/></name> <init pos:line="8" pos:column="27">= <expr><operator pos:line="8" pos:column="29">(<pos:position pos:line="8" pos:column="30"/></operator><ternary><condition><expr><name pos:line="8" pos:column="30">request<pos:position pos:line="8" pos:column="37"/></name></expr> ?<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39"> <expr><call><name><name pos:line="8" pos:column="40">request<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">-&gt;<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="49">downloader<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">.<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="60">get<pos:position pos:line="8" pos:column="63"/></name></name><argument_list pos:line="8" pos:column="63">()<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr> <pos:position pos:line="8" pos:column="66"/></then><else pos:line="8" pos:column="66">: <expr><literal type="null" pos:line="8" pos:column="68">nullptr<pos:position pos:line="8" pos:column="75"/></literal></expr></else></ternary><operator pos:line="8" pos:column="75">)<pos:position pos:line="8" pos:column="76"/></operator></expr></init></decl>;<pos:position pos:line="8" pos:column="77"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">csd<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">&amp;&amp;<pos:position pos:line="9" pos:column="23"/></operator> <call><name><name pos:line="9" pos:column="16">csd<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">nestedLevel<pos:position pos:line="9" pos:column="32"/></name></name><argument_list pos:line="9" pos:column="32">()<pos:position pos:line="9" pos:column="34"/></argument_list></call> <operator pos:line="9" pos:column="35">&gt;=<pos:position pos:line="9" pos:column="40"/></operator> <name pos:line="9" pos:column="38">MaxNestedDownloads<pos:position pos:line="9" pos:column="56"/></name></expr>)<pos:position pos:line="9" pos:column="57"/></condition><then pos:line="9" pos:column="57">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><literal type="boolean" pos:line="10" pos:column="16">false<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">int<pos:position pos:line="12" pos:column="14"/></name></type> <name pos:line="12" pos:column="15">fd<pos:position pos:line="12" pos:column="17"/></name> <init pos:line="12" pos:column="18">= <expr><call><name pos:line="12" pos:column="20">serverConnection<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">()<pos:position pos:line="12" pos:column="38"/></argument_list></call><operator pos:line="12" pos:column="38">-&gt;<pos:position pos:line="12" pos:column="43"/></operator><name pos:line="12" pos:column="40">fd<pos:position pos:line="12" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">Security<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">::<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">SessionPointer<pos:position pos:line="13" pos:column="29"/></name></name></type> <name pos:line="13" pos:column="30">session<pos:position pos:line="13" pos:column="37"/></name><argument_list pos:line="13" pos:column="37">(<argument><expr><name><name pos:line="13" pos:column="38">fd_table<pos:position pos:line="13" pos:column="46"/></name><index pos:line="13" pos:column="46">[<expr><name pos:line="13" pos:column="47">fd<pos:position pos:line="13" pos:column="49"/></name></expr>]<pos:position pos:line="13" pos:column="50"/></index></name><operator pos:line="13" pos:column="50">.<pos:position pos:line="13" pos:column="51"/></operator><name pos:line="13" pos:column="51">ssl<pos:position pos:line="13" pos:column="54"/></name></expr></argument>)<pos:position pos:line="13" pos:column="55"/></argument_list></decl>;<pos:position pos:line="13" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">BIO<pos:position pos:line="14" pos:column="8"/></name> <modifier pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></modifier></type><name pos:line="14" pos:column="10">b<pos:position pos:line="14" pos:column="11"/></name> <init pos:line="14" pos:column="12">= <expr><call><name pos:line="14" pos:column="14">SSL_get_rbio<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">(<argument><expr><call><name><name pos:line="14" pos:column="27">session<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">.<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="35">get<pos:position pos:line="14" pos:column="38"/></name></name><argument_list pos:line="14" pos:column="38">()<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">Ssl<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">::<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">ServerBio<pos:position pos:line="15" pos:column="19"/></name></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">srvBio<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><cast type="static" pos:line="15" pos:column="30">static_cast<argument_list type="generic" pos:line="15" pos:column="41">&lt;<argument><expr><name><name pos:line="15" pos:column="42">Ssl<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">::<pos:position pos:line="15" pos:column="47"/></operator><name pos:line="15" pos:column="47">ServerBio<pos:position pos:line="15" pos:column="56"/></name></name> <operator pos:line="15" pos:column="57">*<pos:position pos:line="15" pos:column="58"/></operator></expr></argument>&gt;<pos:position pos:line="15" pos:column="62"/></argument_list><argument_list pos:line="15" pos:column="59">(<argument><expr><call><name pos:line="15" pos:column="60">BIO_get_data<pos:position pos:line="15" pos:column="72"/></name><argument_list pos:line="15" pos:column="72">(<argument><expr><name pos:line="15" pos:column="73">b<pos:position pos:line="15" pos:column="74"/></name></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="76"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="15" pos:column="77"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="16" pos:column="5">const<pos:position pos:line="16" pos:column="10"/></specifier> <name><name pos:line="16" pos:column="11">Security<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">::<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">CertList<pos:position pos:line="16" pos:column="29"/></name></name> <modifier pos:line="16" pos:column="30">&amp;<pos:position pos:line="16" pos:column="35"/></modifier></type><name pos:line="16" pos:column="31">certs<pos:position pos:line="16" pos:column="36"/></name> <init pos:line="16" pos:column="37">= <expr><call><name><name pos:line="16" pos:column="39">srvBio<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">serverCertificatesIfAny<pos:position pos:line="16" pos:column="70"/></name></name><argument_list pos:line="16" pos:column="70">()<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="73"/></decl_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name><name pos:line="18" pos:column="9">certs<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">.<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="15">size<pos:position pos:line="18" pos:column="19"/></name></name><argument_list pos:line="18" pos:column="19">()<pos:position pos:line="18" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22"> <block pos:line="18" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">83<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="20">5<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"SSL server sent "<pos:position pos:line="19" pos:column="41"/></literal> <operator pos:line="19" pos:column="42">&lt;&lt;<pos:position pos:line="19" pos:column="50"/></operator> <call><name><name pos:line="19" pos:column="45">certs<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">.<pos:position pos:line="19" pos:column="51"/></operator><name pos:line="19" pos:column="51">size<pos:position pos:line="19" pos:column="55"/></name></name><argument_list pos:line="19" pos:column="55">()<pos:position pos:line="19" pos:column="57"/></argument_list></call> <operator pos:line="19" pos:column="58">&lt;&lt;<pos:position pos:line="19" pos:column="66"/></operator> <literal type="string" pos:line="19" pos:column="61">" certificates"<pos:position pos:line="19" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">Ssl<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">::<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">missingChainCertificatesUrls<pos:position pos:line="20" pos:column="42"/></name></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">urlsOfMissingCerts<pos:position pos:line="20" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="63">certs<pos:position pos:line="20" pos:column="68"/></name></expr></argument>)<pos:position pos:line="20" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="70"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><call><name><name pos:line="21" pos:column="13">urlsOfMissingCerts<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">.<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="32">size<pos:position pos:line="21" pos:column="36"/></name></name><argument_list pos:line="21" pos:column="36">()<pos:position pos:line="21" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="39"/></condition><then pos:line="21" pos:column="39"> <block pos:line="21" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">startCertDownloading<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><call><name><name pos:line="22" pos:column="34">urlsOfMissingCerts<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">.<pos:position pos:line="22" pos:column="53"/></operator><name pos:line="22" pos:column="53">front<pos:position pos:line="22" pos:column="58"/></name></name><argument_list pos:line="22" pos:column="58">()<pos:position pos:line="22" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="23" pos:column="13">urlsOfMissingCerts<pos:position pos:line="23" pos:column="31"/></name><operator pos:line="23" pos:column="31">.<pos:position pos:line="23" pos:column="32"/></operator><name pos:line="23" pos:column="32">pop<pos:position pos:line="23" pos:column="35"/></name></name><argument_list pos:line="23" pos:column="35">()<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
            <return pos:line="24" pos:column="13">return <expr><literal type="boolean" pos:line="24" pos:column="20">true<pos:position pos:line="24" pos:column="24"/></literal></expr>;<pos:position pos:line="24" pos:column="25"/></return>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <return pos:line="28" pos:column="5">return <expr><literal type="boolean" pos:line="28" pos:column="12">false<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

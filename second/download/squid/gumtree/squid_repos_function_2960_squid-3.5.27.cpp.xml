<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2960_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpRequest<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">pack<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">Packer<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type> <name pos:line="2" pos:column="28">p<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">p<pos:position pos:line="4" pos:column="13"/></name></expr></argument>)<pos:position pos:line="4" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="15"/></expr_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* pack request-line */</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">packerPrintf<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><name pos:line="6" pos:column="18">p<pos:position pos:line="6" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="21">SQUIDSBUFPH<pos:position pos:line="6" pos:column="32"/></name> <literal type="string" pos:line="6" pos:column="33">" "<pos:position pos:line="6" pos:column="36"/></literal> <name pos:line="6" pos:column="37">SQUIDSTRINGPH<pos:position pos:line="6" pos:column="50"/></name> <literal type="string" pos:line="6" pos:column="51">" HTTP/%d.%d\r\n"<pos:position pos:line="6" pos:column="68"/></literal></expr></argument>,
                 <argument><expr><call><name pos:line="7" pos:column="18">SQUIDSBUFPRINT<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><call><name><name pos:line="7" pos:column="33">method<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">.<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">image<pos:position pos:line="7" pos:column="45"/></name></name><argument_list pos:line="7" pos:column="45">()<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="50">SQUIDSTRINGPRINT<pos:position pos:line="7" pos:column="66"/></name><argument_list pos:line="7" pos:column="66">(<argument><expr><name pos:line="7" pos:column="67">urlpath<pos:position pos:line="7" pos:column="74"/></name></expr></argument>)<pos:position pos:line="7" pos:column="75"/></argument_list></call></expr></argument>,
                 <argument><expr><name><name pos:line="8" pos:column="18">http_ver<pos:position pos:line="8" pos:column="26"/></name><operator pos:line="8" pos:column="26">.<pos:position pos:line="8" pos:column="27"/></operator><name pos:line="8" pos:column="27">major<pos:position pos:line="8" pos:column="32"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="34">http_ver<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">.<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="43">minor<pos:position pos:line="8" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="50"/></expr_stmt>
    <comment type="block" pos:line="9" pos:column="5">/* headers */</comment>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">header<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">packInto<pos:position pos:line="10" pos:column="20"/></name></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">p<pos:position pos:line="10" pos:column="22"/></name></expr></argument>)<pos:position pos:line="10" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
    <comment type="block" pos:line="11" pos:column="5">/* trailer */</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">packerAppend<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name pos:line="12" pos:column="18">p<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="21">"\r\n"<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="29">2<pos:position pos:line="12" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="32"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

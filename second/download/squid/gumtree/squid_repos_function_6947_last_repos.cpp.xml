<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6947_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ipc<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">SharedListenJoined<pos:position pos:line="1" pos:column="29"/></name></name><parameter_list pos:line="1" pos:column="29">(<parameter><decl><type><specifier pos:line="1" pos:column="30">const<pos:position pos:line="1" pos:column="35"/></specifier> <name pos:line="1" pos:column="36">SharedListenResponse<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">&amp;<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="58">response<pos:position pos:line="1" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="67"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">// Dont debugs c fully since only FD is filled right now.</comment>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">54<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"got listening FD "<pos:position pos:line="4" pos:column="38"/></literal> <operator pos:line="4" pos:column="39">&lt;&lt;<pos:position pos:line="4" pos:column="47"/></operator> <name><name pos:line="4" pos:column="42">response<pos:position pos:line="4" pos:column="50"/></name><operator pos:line="4" pos:column="50">.<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="51">fd<pos:position pos:line="4" pos:column="53"/></name></name> <operator pos:line="4" pos:column="54">&lt;&lt;<pos:position pos:line="4" pos:column="62"/></operator> <literal type="string" pos:line="4" pos:column="57">" errNo="<pos:position pos:line="4" pos:column="66"/></literal> <operator pos:line="4" pos:column="67">&lt;&lt;<pos:position pos:line="4" pos:column="75"/></operator>
           <name><name pos:line="5" pos:column="12">response<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">.<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="21">errNo<pos:position pos:line="5" pos:column="26"/></name></name> <operator pos:line="5" pos:column="27">&lt;&lt;<pos:position pos:line="5" pos:column="35"/></operator> <literal type="string" pos:line="5" pos:column="30">" mapId="<pos:position pos:line="5" pos:column="39"/></literal> <operator pos:line="5" pos:column="40">&lt;&lt;<pos:position pos:line="5" pos:column="48"/></operator> <name><name pos:line="5" pos:column="43">response<pos:position pos:line="5" pos:column="51"/></name><operator pos:line="5" pos:column="51">.<pos:position pos:line="5" pos:column="52"/></operator><name pos:line="5" pos:column="52">mapId<pos:position pos:line="5" pos:column="57"/></name></name> <operator pos:line="5" pos:column="58">&lt;&lt;<pos:position pos:line="5" pos:column="66"/></operator> <literal type="string" pos:line="5" pos:column="61">" with "<pos:position pos:line="5" pos:column="69"/></literal> <operator pos:line="5" pos:column="70">&lt;&lt;<pos:position pos:line="5" pos:column="78"/></operator>
           <call><name><name pos:line="6" pos:column="12">TheSharedListenRequestMap<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">.<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">size<pos:position pos:line="6" pos:column="42"/></name></name><argument_list pos:line="6" pos:column="42">()<pos:position pos:line="6" pos:column="44"/></argument_list></call> <operator pos:line="6" pos:column="45">&lt;&lt;<pos:position pos:line="6" pos:column="53"/></operator> <literal type="string" pos:line="6" pos:column="48">" active + "<pos:position pos:line="6" pos:column="60"/></literal> <operator pos:line="6" pos:column="61">&lt;&lt;<pos:position pos:line="6" pos:column="69"/></operator>
           <call><name><name pos:line="7" pos:column="12">TheDelayedRequests<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">.<pos:position pos:line="7" pos:column="31"/></operator><name pos:line="7" pos:column="31">size<pos:position pos:line="7" pos:column="35"/></name></name><argument_list pos:line="7" pos:column="35">()<pos:position pos:line="7" pos:column="37"/></argument_list></call> <operator pos:line="7" pos:column="38">&lt;&lt;<pos:position pos:line="7" pos:column="46"/></operator> <literal type="string" pos:line="7" pos:column="41">" delayed requests"<pos:position pos:line="7" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">Must<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><call><name><name pos:line="9" pos:column="10">TheSharedListenRequestMap<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">.<pos:position pos:line="9" pos:column="36"/></operator><name pos:line="9" pos:column="36">find<pos:position pos:line="9" pos:column="40"/></name></name><argument_list pos:line="9" pos:column="40">(<argument><expr><name><name pos:line="9" pos:column="41">response<pos:position pos:line="9" pos:column="49"/></name><operator pos:line="9" pos:column="49">.<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="50">mapId<pos:position pos:line="9" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="56"/></argument_list></call> <operator pos:line="9" pos:column="57">!=<pos:position pos:line="9" pos:column="59"/></operator> <call><name><name pos:line="9" pos:column="60">TheSharedListenRequestMap<pos:position pos:line="9" pos:column="85"/></name><operator pos:line="9" pos:column="85">.<pos:position pos:line="9" pos:column="86"/></operator><name pos:line="9" pos:column="86">end<pos:position pos:line="9" pos:column="89"/></name></name><argument_list pos:line="9" pos:column="89">()<pos:position pos:line="9" pos:column="91"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="93"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">PendingOpenRequest<pos:position pos:line="10" pos:column="23"/></name></type> <name pos:line="10" pos:column="24">por<pos:position pos:line="10" pos:column="27"/></name> <init pos:line="10" pos:column="28">= <expr><name><name pos:line="10" pos:column="30">TheSharedListenRequestMap<pos:position pos:line="10" pos:column="55"/></name><index pos:line="10" pos:column="55">[<expr><name><name pos:line="10" pos:column="56">response<pos:position pos:line="10" pos:column="64"/></name><operator pos:line="10" pos:column="64">.<pos:position pos:line="10" pos:column="65"/></operator><name pos:line="10" pos:column="65">mapId<pos:position pos:line="10" pos:column="70"/></name></name></expr>]<pos:position pos:line="10" pos:column="71"/></index></name></expr></init></decl>;<pos:position pos:line="10" pos:column="72"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">Must<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><name><name pos:line="11" pos:column="10">por<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">.<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">callback<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">!=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">NULL<pos:position pos:line="11" pos:column="30"/></name></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">TheSharedListenRequestMap<pos:position pos:line="12" pos:column="30"/></name><operator pos:line="12" pos:column="30">.<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="31">erase<pos:position pos:line="12" pos:column="36"/></name></name><argument_list pos:line="12" pos:column="36">(<argument><expr><name><name pos:line="12" pos:column="37">response<pos:position pos:line="12" pos:column="45"/></name><operator pos:line="12" pos:column="45">.<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="46">mapId<pos:position pos:line="12" pos:column="51"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="53"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">StartListeningCb<pos:position pos:line="14" pos:column="21"/></name> <modifier pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></modifier></type><name pos:line="14" pos:column="23">cbd<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><cast type="dynamic" pos:line="14" pos:column="29">dynamic_cast<argument_list type="generic" pos:line="14" pos:column="41">&lt;<argument><expr><name pos:line="14" pos:column="42">StartListeningCb<pos:position pos:line="14" pos:column="58"/></name><operator pos:line="14" pos:column="58">*<pos:position pos:line="14" pos:column="59"/></operator></expr></argument>&gt;<pos:position pos:line="14" pos:column="63"/></argument_list><argument_list pos:line="14" pos:column="60">(<argument><expr><call><name><name pos:line="14" pos:column="61">por<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">.<pos:position pos:line="14" pos:column="65"/></operator><name pos:line="14" pos:column="65">callback<pos:position pos:line="14" pos:column="73"/></name><operator pos:line="14" pos:column="73">-&gt;<pos:position pos:line="14" pos:column="78"/></operator><name pos:line="14" pos:column="75">getDialer<pos:position pos:line="14" pos:column="84"/></name></name><argument_list pos:line="14" pos:column="84">()<pos:position pos:line="14" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="87"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="14" pos:column="88"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">cbd<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">&amp;&amp;<pos:position pos:line="15" pos:column="26"/></operator> <name><name pos:line="15" pos:column="19">cbd<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">conn<pos:position pos:line="15" pos:column="28"/></name></name> <operator pos:line="15" pos:column="29">!=<pos:position pos:line="15" pos:column="31"/></operator> <name pos:line="15" pos:column="32">NULL<pos:position pos:line="15" pos:column="36"/></name></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">Must<pos:position pos:line="16" pos:column="9"/></name><argument_list pos:line="16" pos:column="9">(<argument><expr><name pos:line="16" pos:column="10">cbd<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">&amp;&amp;<pos:position pos:line="16" pos:column="24"/></operator> <name><name pos:line="16" pos:column="17">cbd<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">conn<pos:position pos:line="16" pos:column="26"/></name></name> <operator pos:line="16" pos:column="27">!=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">NULL<pos:position pos:line="16" pos:column="34"/></name></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">cbd<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">-&gt;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="10">conn<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">-&gt;<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="16">fd<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name><name pos:line="17" pos:column="21">response<pos:position pos:line="17" pos:column="29"/></name><operator pos:line="17" pos:column="29">.<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">fd<pos:position pos:line="17" pos:column="32"/></name></name></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name><name pos:line="19" pos:column="9">Comm<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">::<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">IsConnOpen<pos:position pos:line="19" pos:column="25"/></name></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name><name pos:line="19" pos:column="26">cbd<pos:position pos:line="19" pos:column="29"/></name><operator pos:line="19" pos:column="29">-&gt;<pos:position pos:line="19" pos:column="34"/></operator><name pos:line="19" pos:column="31">conn<pos:position pos:line="19" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block pos:line="19" pos:column="38">{
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">OpenListenerParams<pos:position pos:line="20" pos:column="27"/></name> <modifier pos:line="20" pos:column="28">&amp;<pos:position pos:line="20" pos:column="33"/></modifier></type><name pos:line="20" pos:column="29">p<pos:position pos:line="20" pos:column="30"/></name> <init pos:line="20" pos:column="31">= <expr><name><name pos:line="20" pos:column="33">por<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">.<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">params<pos:position pos:line="20" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="20" pos:column="44"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">cbd<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">conn<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><name pos:line="21" pos:column="20">local<pos:position pos:line="21" pos:column="25"/></name></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <name><name pos:line="21" pos:column="28">p<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">.<pos:position pos:line="21" pos:column="30"/></operator><name pos:line="21" pos:column="30">addr<pos:position pos:line="21" pos:column="34"/></name></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">cbd<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">conn<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">flags<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <name><name pos:line="22" pos:column="28">p<pos:position pos:line="22" pos:column="29"/></name><operator pos:line="22" pos:column="29">.<pos:position pos:line="22" pos:column="30"/></operator><name pos:line="22" pos:column="30">flags<pos:position pos:line="22" pos:column="35"/></name></name></expr>;<pos:position pos:line="22" pos:column="36"/></expr_stmt>
        <comment type="line" pos:line="23" pos:column="9">// XXX: leave the comm AI stuff to comm_import_opened()?</comment>
        <decl_stmt><decl><type><name><name pos:line="24" pos:column="9">struct<pos:position pos:line="24" pos:column="15"/></name> <name pos:line="24" pos:column="16">addrinfo<pos:position pos:line="24" pos:column="24"/></name></name> <modifier pos:line="24" pos:column="25">*<pos:position pos:line="24" pos:column="26"/></modifier></type><name pos:line="24" pos:column="26">AI<pos:position pos:line="24" pos:column="28"/></name> <init pos:line="24" pos:column="29">= <expr><name pos:line="24" pos:column="31">NULL<pos:position pos:line="24" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="36"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="25" pos:column="9">p<pos:position pos:line="25" pos:column="10"/></name><operator pos:line="25" pos:column="10">.<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">addr<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">getAddrInfo<pos:position pos:line="25" pos:column="27"/></name></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name pos:line="25" pos:column="28">AI<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">AI<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">ai_socktype<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <name><name pos:line="26" pos:column="27">p<pos:position pos:line="26" pos:column="28"/></name><operator pos:line="26" pos:column="28">.<pos:position pos:line="26" pos:column="29"/></operator><name pos:line="26" pos:column="29">sock_type<pos:position pos:line="26" pos:column="38"/></name></name></expr>;<pos:position pos:line="26" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">AI<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">-&gt;<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="13">ai_protocol<pos:position pos:line="27" pos:column="24"/></name></name> <operator pos:line="27" pos:column="25">=<pos:position pos:line="27" pos:column="26"/></operator> <name><name pos:line="27" pos:column="27">p<pos:position pos:line="27" pos:column="28"/></name><operator pos:line="27" pos:column="28">.<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="29">proto<pos:position pos:line="27" pos:column="34"/></name></name></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">comm_import_opened<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name><name pos:line="28" pos:column="28">cbd<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">-&gt;<pos:position pos:line="28" pos:column="36"/></operator><name pos:line="28" pos:column="33">conn<pos:position pos:line="28" pos:column="37"/></name></name></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="39">FdNote<pos:position pos:line="28" pos:column="45"/></name><argument_list pos:line="28" pos:column="45">(<argument><expr><name><name pos:line="28" pos:column="46">p<pos:position pos:line="28" pos:column="47"/></name><operator pos:line="28" pos:column="47">.<pos:position pos:line="28" pos:column="48"/></operator><name pos:line="28" pos:column="48">fdNote<pos:position pos:line="28" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="55"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="57">AI<pos:position pos:line="28" pos:column="59"/></name></expr></argument>)<pos:position pos:line="28" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="29" pos:column="9">Ip<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">::<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">Address<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">::<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">FreeAddr<pos:position pos:line="29" pos:column="30"/></name></name><argument_list pos:line="29" pos:column="30">(<argument><expr><name pos:line="29" pos:column="31">AI<pos:position pos:line="29" pos:column="33"/></name></expr></argument>)<pos:position pos:line="29" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="32" pos:column="5">cbd<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">errNo<pos:position pos:line="32" pos:column="15"/></name></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <name><name pos:line="32" pos:column="18">response<pos:position pos:line="32" pos:column="26"/></name><operator pos:line="32" pos:column="26">.<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="27">errNo<pos:position pos:line="32" pos:column="32"/></name></name></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">cbd<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="10">handlerSubscription<pos:position pos:line="33" pos:column="29"/></name></name> <operator pos:line="33" pos:column="30">=<pos:position pos:line="33" pos:column="31"/></operator> <name><name pos:line="33" pos:column="32">por<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">.<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">params<pos:position pos:line="33" pos:column="42"/></name><operator pos:line="33" pos:column="42">.<pos:position pos:line="33" pos:column="43"/></operator><name pos:line="33" pos:column="43">handlerSubscription<pos:position pos:line="33" pos:column="62"/></name></name></expr>;<pos:position pos:line="33" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">ScheduleCallHere<pos:position pos:line="34" pos:column="21"/></name><argument_list pos:line="34" pos:column="21">(<argument><expr><name><name pos:line="34" pos:column="22">por<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">.<pos:position pos:line="34" pos:column="26"/></operator><name pos:line="34" pos:column="26">callback<pos:position pos:line="34" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">kickDelayedRequest<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">()<pos:position pos:line="36" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

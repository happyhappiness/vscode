<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6101_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">dumpstack<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">stackmember<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">stack<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">depth<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>;<pos:position pos:line="6" pos:column="16"/></init> <condition><expr><name pos:line="6" pos:column="17">i<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&lt;<pos:position pos:line="6" pos:column="23"/></operator> <name pos:line="6" pos:column="21">depth<pos:position pos:line="6" pos:column="26"/></name></expr>;<pos:position pos:line="6" pos:column="27"/></condition> <incr><expr><operator pos:line="6" pos:column="28">++<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="30">i<pos:position pos:line="6" pos:column="31"/></name></expr></incr>)<pos:position pos:line="6" pos:column="32"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">printmember<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name><name pos:line="7" pos:column="21">stack<pos:position pos:line="7" pos:column="26"/></name><index pos:line="7" pos:column="26">[<expr><name pos:line="7" pos:column="27">i<pos:position pos:line="7" pos:column="28"/></name></expr>]<pos:position pos:line="7" pos:column="29"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="31"/></expr_stmt></block></for>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">depth<pos:position pos:line="9" pos:column="14"/></name></expr>)<pos:position pos:line="9" pos:column="15"/></condition><then pos:line="9" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><call><name pos:line="10" pos:column="9">old_debug<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><literal type="number" pos:line="10" pos:column="19">86<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="10" pos:column="22">1<pos:position pos:line="10" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call><argument_list pos:line="10" pos:column="24">(<argument><expr><literal type="string" pos:line="10" pos:column="25">"\n"<pos:position pos:line="10" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

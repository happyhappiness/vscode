<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1823_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">wordlist<pos:position pos:line="1" pos:column="9"/></name> <modifier pos:line="1" pos:column="10">*<pos:position pos:line="1" pos:column="11"/></modifier></type>
<name><name pos:line="2" pos:column="1">ACLExternal<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">dump<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list> <specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">external_acl_data<pos:position pos:line="4" pos:column="22"/></name> <specifier pos:line="4" pos:column="23">const<pos:position pos:line="4" pos:column="28"/></specifier> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">acl<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><name pos:line="4" pos:column="36">data<pos:position pos:line="4" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">wordlist<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">result<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">wordlist<pos:position pos:line="6" pos:column="13"/></name> <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">arg<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">MemBuf<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">mb<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">mb<pos:position pos:line="8" pos:column="7"/></name><operator pos:line="8" pos:column="7">.<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">init<pos:position pos:line="8" pos:column="12"/></name></name><argument_list pos:line="8" pos:column="12">()<pos:position pos:line="8" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">mb<pos:position pos:line="9" pos:column="7"/></name><operator pos:line="9" pos:column="7">.<pos:position pos:line="9" pos:column="8"/></operator><name pos:line="9" pos:column="8">Printf<pos:position pos:line="9" pos:column="14"/></name></name><argument_list pos:line="9" pos:column="14">(<argument><expr><literal type="string" pos:line="9" pos:column="15">"%s"<pos:position pos:line="9" pos:column="19"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="21">acl<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">-&gt;<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="26">def<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">-&gt;<pos:position pos:line="9" pos:column="34"/></operator><name pos:line="9" pos:column="31">name<pos:position pos:line="9" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></expr_stmt>

    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">arg<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <name><name pos:line="11" pos:column="16">acl<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">-&gt;<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="21">arguments<pos:position pos:line="11" pos:column="30"/></name></name></expr>;<pos:position pos:line="11" pos:column="31"/></init> <condition><expr><name pos:line="11" pos:column="32">arg<pos:position pos:line="11" pos:column="35"/></name></expr>;<pos:position pos:line="11" pos:column="36"/></condition> <incr><expr><name pos:line="11" pos:column="37">arg<pos:position pos:line="11" pos:column="40"/></name> <operator pos:line="11" pos:column="41">=<pos:position pos:line="11" pos:column="42"/></operator> <name><name pos:line="11" pos:column="43">arg<pos:position pos:line="11" pos:column="46"/></name><operator pos:line="11" pos:column="46">-&gt;<pos:position pos:line="11" pos:column="51"/></operator><name pos:line="11" pos:column="48">next<pos:position pos:line="11" pos:column="52"/></name></name></expr></incr>)<pos:position pos:line="11" pos:column="53"/></control> <block pos:line="11" pos:column="54">{
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">mb<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">.<pos:position pos:line="12" pos:column="12"/></operator><name pos:line="12" pos:column="12">Printf<pos:position pos:line="12" pos:column="18"/></name></name><argument_list pos:line="12" pos:column="18">(<argument><expr><literal type="string" pos:line="12" pos:column="19">" %s"<pos:position pos:line="12" pos:column="24"/></literal></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="26">arg<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">key<pos:position pos:line="12" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">wordlistAdd<pos:position pos:line="15" pos:column="16"/></name><argument_list pos:line="15" pos:column="16">(<argument><expr><operator pos:line="15" pos:column="17">&amp;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="18">result<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="26">mb<pos:position pos:line="15" pos:column="28"/></name><operator pos:line="15" pos:column="28">.<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">buf<pos:position pos:line="15" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="16" pos:column="5">mb<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">.<pos:position pos:line="16" pos:column="8"/></operator><name pos:line="16" pos:column="8">clean<pos:position pos:line="16" pos:column="13"/></name></name><argument_list pos:line="16" pos:column="13">()<pos:position pos:line="16" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="16"/></expr_stmt>
    <return pos:line="17" pos:column="5">return <expr><name pos:line="17" pos:column="12">result<pos:position pos:line="17" pos:column="18"/></name></expr>;<pos:position pos:line="17" pos:column="19"/></return>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

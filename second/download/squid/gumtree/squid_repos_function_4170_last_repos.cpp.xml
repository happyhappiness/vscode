<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4170_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">ACL<pos:position pos:line="2" pos:column="4"/></name> <modifier pos:line="2" pos:column="5">*<pos:position pos:line="2" pos:column="6"/></modifier></type>
<name pos:line="3" pos:column="1">Make<pos:position pos:line="3" pos:column="5"/></name><parameter_list pos:line="3" pos:column="5">(<parameter><decl><type><name pos:line="3" pos:column="6">TypeName<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">typeName<pos:position pos:line="3" pos:column="23"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="24"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <specifier pos:line="5" pos:column="11">auto<pos:position pos:line="5" pos:column="15"/></specifier></type> <name pos:line="5" pos:column="16">pos<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name pos:line="5" pos:column="22">TheMakers<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">()<pos:position pos:line="5" pos:column="33"/></argument_list></call><operator pos:line="5" pos:column="33">.<pos:position pos:line="5" pos:column="34"/></operator><call><name pos:line="5" pos:column="34">find<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">typeName<pos:position pos:line="5" pos:column="47"/></name></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="49"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">pos<pos:position pos:line="6" pos:column="12"/></name> <operator pos:line="6" pos:column="13">==<pos:position pos:line="6" pos:column="15"/></operator> <call><name pos:line="6" pos:column="16">TheMakers<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">()<pos:position pos:line="6" pos:column="27"/></argument_list></call><operator pos:line="6" pos:column="27">.<pos:position pos:line="6" pos:column="28"/></operator><call><name pos:line="6" pos:column="28">end<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">()<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34"> <block pos:line="6" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">28<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="20">DBG_CRITICAL<pos:position pos:line="7" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="34">"FATAL: Invalid ACL type '"<pos:position pos:line="7" pos:column="61"/></literal> <operator pos:line="7" pos:column="62">&lt;&lt;<pos:position pos:line="7" pos:column="70"/></operator> <name pos:line="7" pos:column="65">typeName<pos:position pos:line="7" pos:column="73"/></name> <operator pos:line="7" pos:column="74">&lt;&lt;<pos:position pos:line="7" pos:column="82"/></operator> <literal type="string" pos:line="7" pos:column="77">"'"<pos:position pos:line="7" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">self_destruct<pos:position pos:line="8" pos:column="22"/></name><argument_list pos:line="8" pos:column="22">()<pos:position pos:line="8" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">assert<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="boolean" pos:line="9" pos:column="16">false<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt> <comment type="line" pos:line="9" pos:column="24">// not reached</comment>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">ACL<pos:position pos:line="12" pos:column="8"/></name> <modifier pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></modifier></type><name pos:line="12" pos:column="10">result<pos:position pos:line="12" pos:column="16"/></name> <init pos:line="12" pos:column="17">= <expr><call pos:line="12" pos:column="19">(<name><name pos:line="12" pos:column="20">pos<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">second<pos:position pos:line="12" pos:column="31"/></name></name>)<argument_list pos:line="12" pos:column="32">(<argument><expr><name><name pos:line="12" pos:column="33">pos<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">-&gt;<pos:position pos:line="12" pos:column="41"/></operator><name pos:line="12" pos:column="38">first<pos:position pos:line="12" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="45"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">28<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="16">4<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="19">typeName<pos:position pos:line="13" pos:column="27"/></name> <operator pos:line="13" pos:column="28">&lt;&lt;<pos:position pos:line="13" pos:column="36"/></operator> <literal type="char" pos:line="13" pos:column="31">'='<pos:position pos:line="13" pos:column="34"/></literal> <operator pos:line="13" pos:column="35">&lt;&lt;<pos:position pos:line="13" pos:column="43"/></operator> <name pos:line="13" pos:column="38">result<pos:position pos:line="13" pos:column="44"/></name></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">result<pos:position pos:line="14" pos:column="18"/></name></expr></argument>)<pos:position pos:line="14" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">result<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

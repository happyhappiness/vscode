<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7479_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">NegotiationHistory<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">retrieveNegotiatedInfo<pos:position pos:line="2" pos:column="53"/></name></name><parameter_list pos:line="2" pos:column="53">(<parameter><decl><type><specifier pos:line="2" pos:column="54">const<pos:position pos:line="2" pos:column="59"/></specifier> <name><name pos:line="2" pos:column="60">Security<pos:position pos:line="2" pos:column="68"/></name><operator pos:line="2" pos:column="68">::<pos:position pos:line="2" pos:column="70"/></operator><name pos:line="2" pos:column="70">SessionPointer<pos:position pos:line="2" pos:column="84"/></name></name> <modifier pos:line="2" pos:column="85">&amp;<pos:position pos:line="2" pos:column="90"/></modifier></type><name pos:line="2" pos:column="86">session<pos:position pos:line="2" pos:column="93"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="94"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_OPENSSL<pos:position pos:line="4" pos:column="16"/></name></expr></cpp:if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">cipher<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">=<pos:position pos:line="5" pos:column="18"/></operator> <call><name pos:line="5" pos:column="19">SSL_get_current_cipher<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><call><name><name pos:line="5" pos:column="42">session<pos:position pos:line="5" pos:column="49"/></name><operator pos:line="5" pos:column="49">.<pos:position pos:line="5" pos:column="50"/></operator><name pos:line="5" pos:column="50">get<pos:position pos:line="5" pos:column="53"/></name></name><argument_list pos:line="5" pos:column="53">()<pos:position pos:line="5" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call><operator pos:line="5" pos:column="56">)<pos:position pos:line="5" pos:column="57"/></operator></expr>)<pos:position pos:line="5" pos:column="58"/></condition><then pos:line="5" pos:column="58"> <block pos:line="5" pos:column="59">{
        <comment type="line" pos:line="6" pos:column="9">// Set the negotiated version only if the cipher negotiated</comment>
        <comment type="line" pos:line="7" pos:column="9">// else probably the negotiation is not completed and version</comment>
        <comment type="line" pos:line="8" pos:column="9">// is not the final negotiated version</comment>
        <expr_stmt><expr><name pos:line="9" pos:column="9">version_<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">=<pos:position pos:line="9" pos:column="19"/></operator> <call><name pos:line="9" pos:column="20">toProtocolVersion<pos:position pos:line="9" pos:column="37"/></name><argument_list pos:line="9" pos:column="37">(<argument><expr><call><name pos:line="9" pos:column="38">SSL_version<pos:position pos:line="9" pos:column="49"/></name><argument_list pos:line="9" pos:column="49">(<argument><expr><call><name><name pos:line="9" pos:column="50">session<pos:position pos:line="9" pos:column="57"/></name><operator pos:line="9" pos:column="57">.<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="58">get<pos:position pos:line="9" pos:column="61"/></name></name><argument_list pos:line="9" pos:column="61">()<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><call><name><name pos:line="12" pos:column="9">Debug<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">::<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">Enabled<pos:position pos:line="12" pos:column="23"/></name></name><argument_list pos:line="12" pos:column="23">(<argument><expr><literal type="number" pos:line="12" pos:column="24">83<pos:position pos:line="12" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="28">5<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31"> <block pos:line="12" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="13" pos:column="9">BIO<pos:position pos:line="13" pos:column="12"/></name> <modifier pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></modifier></type><name pos:line="13" pos:column="14">b<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><call><name pos:line="13" pos:column="18">SSL_get_rbio<pos:position pos:line="13" pos:column="30"/></name><argument_list pos:line="13" pos:column="30">(<argument><expr><call><name><name pos:line="13" pos:column="31">session<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">.<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">get<pos:position pos:line="13" pos:column="42"/></name></name><argument_list pos:line="13" pos:column="42">()<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="46"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="14" pos:column="9">Ssl<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">::<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">Bio<pos:position pos:line="14" pos:column="17"/></name></name> <modifier pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></modifier></type><name pos:line="14" pos:column="19">bio<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><cast type="static" pos:line="14" pos:column="25">static_cast<argument_list type="generic" pos:line="14" pos:column="36">&lt;<argument><expr><name><name pos:line="14" pos:column="37">Ssl<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">::<pos:position pos:line="14" pos:column="42"/></operator><name pos:line="14" pos:column="42">Bio<pos:position pos:line="14" pos:column="45"/></name></name> <operator pos:line="14" pos:column="46">*<pos:position pos:line="14" pos:column="47"/></operator></expr></argument>&gt;<pos:position pos:line="14" pos:column="51"/></argument_list><argument_list pos:line="14" pos:column="48">(<argument><expr><call><name pos:line="14" pos:column="49">BIO_get_data<pos:position pos:line="14" pos:column="61"/></name><argument_list pos:line="14" pos:column="61">(<argument><expr><name pos:line="14" pos:column="62">b<pos:position pos:line="14" pos:column="63"/></name></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="14" pos:column="66"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">83<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">5<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"SSL connection info on FD "<pos:position pos:line="15" pos:column="51"/></literal> <operator pos:line="15" pos:column="52">&lt;&lt;<pos:position pos:line="15" pos:column="60"/></operator> <call><name><name pos:line="15" pos:column="55">bio<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">-&gt;<pos:position pos:line="15" pos:column="63"/></operator><name pos:line="15" pos:column="60">fd<pos:position pos:line="15" pos:column="62"/></name></name><argument_list pos:line="15" pos:column="62">()<pos:position pos:line="15" pos:column="64"/></argument_list></call> <operator pos:line="15" pos:column="65">&lt;&lt;<pos:position pos:line="15" pos:column="73"/></operator>
               <literal type="string" pos:line="16" pos:column="16">" SSL version "<pos:position pos:line="16" pos:column="31"/></literal> <operator pos:line="16" pos:column="32">&lt;&lt;<pos:position pos:line="16" pos:column="40"/></operator> <name pos:line="16" pos:column="35">version_<pos:position pos:line="16" pos:column="43"/></name> <operator pos:line="16" pos:column="44">&lt;&lt;<pos:position pos:line="16" pos:column="52"/></operator>
               <literal type="string" pos:line="17" pos:column="16">" negotiated cipher "<pos:position pos:line="17" pos:column="37"/></literal> <operator pos:line="17" pos:column="38">&lt;&lt;<pos:position pos:line="17" pos:column="46"/></operator> <call><name pos:line="17" pos:column="41">cipherName<pos:position pos:line="17" pos:column="51"/></name><argument_list pos:line="17" pos:column="51">()<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

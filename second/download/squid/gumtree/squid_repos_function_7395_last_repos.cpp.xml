<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7395_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerConnector<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">NegotiateSsl<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">(<parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">void<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">data<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">PeerConnector<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">pc<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><cast type="static" pos:line="4" pos:column="25">static_cast<argument_list type="generic" pos:line="4" pos:column="36">&lt;<argument><expr><name><name pos:line="4" pos:column="37">Security<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">::<pos:position pos:line="4" pos:column="47"/></operator><name pos:line="4" pos:column="47">PeerConnector<pos:position pos:line="4" pos:column="60"/></name></name> <operator pos:line="4" pos:column="61">*<pos:position pos:line="4" pos:column="62"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="66"/></argument_list><argument_list pos:line="4" pos:column="63">(<argument><expr><name pos:line="4" pos:column="64">data<pos:position pos:line="4" pos:column="68"/></name></expr></argument>)<pos:position pos:line="4" pos:column="69"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="70"/></decl_stmt>
    <comment type="line" pos:line="5" pos:column="5">// Use job calls to add done() checks and other job logic/protections.</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">CallJobHere<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><literal type="number" pos:line="6" pos:column="17">83<pos:position pos:line="6" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="21">7<pos:position pos:line="6" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="24">pc<pos:position pos:line="6" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="28">Security<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">::<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">PeerConnector<pos:position pos:line="6" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="53">negotiate<pos:position pos:line="6" pos:column="62"/></name></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="64"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2446_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">Logfile<pos:position pos:line="1" pos:column="8"/></name> <modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type>
<name pos:line="2" pos:column="1">logfileOpen<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><specifier pos:line="2" pos:column="13">const<pos:position pos:line="2" pos:column="18"/></specifier> <name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">path<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">size_t<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">bufsz<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">int<pos:position pos:line="2" pos:column="48"/></name></type> <name pos:line="2" pos:column="49">fatal_flag<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">fd<pos:position pos:line="4" pos:column="11"/></name></decl>;<pos:position pos:line="4" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">Logfile<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">lf<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><cast type="static" pos:line="5" pos:column="19">static_cast<argument_list type="generic" pos:line="5" pos:column="30">&lt;<argument><expr><name pos:line="5" pos:column="31">Logfile<pos:position pos:line="5" pos:column="38"/></name> <operator pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="44"/></argument_list><argument_list pos:line="5" pos:column="41">(<argument><expr><call><name pos:line="5" pos:column="42">xcalloc<pos:position pos:line="5" pos:column="49"/></name><argument_list pos:line="5" pos:column="49">(<argument><expr><literal type="number" pos:line="5" pos:column="50">1<pos:position pos:line="5" pos:column="51"/></literal></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="53">sizeof<argument_list pos:line="5" pos:column="59">(<argument><expr><operator pos:line="5" pos:column="60">*<pos:position pos:line="5" pos:column="61"/></operator><name pos:line="5" pos:column="61">lf<pos:position pos:line="5" pos:column="63"/></name></expr></argument>)<pos:position pos:line="5" pos:column="64"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="66"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="5" pos:column="67"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">xstrncpy<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name><name pos:line="7" pos:column="14">lf<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">path<pos:position pos:line="7" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="24">path<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">MAXPATHLEN<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="42"/></expr_stmt>

<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">HAVE_SYSLOG<pos:position pos:line="9" pos:column="16"/></name></expr></cpp:if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">strncmp<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">path<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"syslog"<pos:position pos:line="11" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="33">6<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call> <operator pos:line="11" pos:column="36">==<pos:position pos:line="11" pos:column="38"/></operator> <literal type="number" pos:line="11" pos:column="39">0<pos:position pos:line="11" pos:column="40"/></literal></expr>)<pos:position pos:line="11" pos:column="41"/></condition><then pos:line="11" pos:column="41"> <block pos:line="11" pos:column="42">{
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">lf<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">-&gt;<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="13">flags<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">syslog<pos:position pos:line="12" pos:column="25"/></name></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <literal type="number" pos:line="12" pos:column="28">1<pos:position pos:line="12" pos:column="29"/></literal></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">lf<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">syslog_priority<pos:position pos:line="13" pos:column="28"/></name></name> <operator pos:line="13" pos:column="29">=<pos:position pos:line="13" pos:column="30"/></operator> <name pos:line="13" pos:column="31">LOG_INFO<pos:position pos:line="13" pos:column="39"/></name></expr>;<pos:position pos:line="13" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">lf<pos:position pos:line="14" pos:column="11"/></name><operator pos:line="14" pos:column="11">-&gt;<pos:position pos:line="14" pos:column="16"/></operator><name pos:line="14" pos:column="13">fd<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <operator pos:line="14" pos:column="18">-<pos:position pos:line="14" pos:column="19"/></operator><literal type="number" pos:line="14" pos:column="19">1<pos:position pos:line="14" pos:column="20"/></literal></expr>;<pos:position pos:line="14" pos:column="21"/></expr_stmt>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">path<pos:position pos:line="16" pos:column="17"/></name><index pos:line="16" pos:column="17">[<expr><literal type="number" pos:line="16" pos:column="18">6<pos:position pos:line="16" pos:column="19"/></literal></expr>]<pos:position pos:line="16" pos:column="20"/></index></name> <operator pos:line="16" pos:column="21">!=<pos:position pos:line="16" pos:column="23"/></operator> <literal type="char" pos:line="16" pos:column="24">'\0'<pos:position pos:line="16" pos:column="28"/></literal></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29"> <block pos:line="16" pos:column="30">{
            <expr_stmt><expr><name pos:line="17" pos:column="13">path<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">+=<pos:position pos:line="17" pos:column="20"/></operator> <literal type="number" pos:line="17" pos:column="21">7<pos:position pos:line="17" pos:column="22"/></literal></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="18" pos:column="13">char<pos:position pos:line="18" pos:column="17"/></name> <modifier pos:line="18" pos:column="18">*<pos:position pos:line="18" pos:column="19"/></modifier></type><name pos:line="18" pos:column="19">priority<pos:position pos:line="18" pos:column="27"/></name> <init pos:line="18" pos:column="28">= <expr><call><name pos:line="18" pos:column="30">xstrdup<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><name pos:line="18" pos:column="38">path<pos:position pos:line="18" pos:column="42"/></name></expr></argument>)<pos:position pos:line="18" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="44"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">char<pos:position pos:line="19" pos:column="17"/></name> <modifier pos:line="19" pos:column="18">*<pos:position pos:line="19" pos:column="19"/></modifier></type><name pos:line="19" pos:column="19">facility<pos:position pos:line="19" pos:column="27"/></name> <init pos:line="19" pos:column="28">= <expr><operator pos:line="19" pos:column="30">(<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="31">char<pos:position pos:line="19" pos:column="35"/></name> <operator pos:line="19" pos:column="36">*<pos:position pos:line="19" pos:column="37"/></operator><operator pos:line="19" pos:column="37">)<pos:position pos:line="19" pos:column="38"/></operator> <call><name pos:line="19" pos:column="39">strchr<pos:position pos:line="19" pos:column="45"/></name><argument_list pos:line="19" pos:column="45">(<argument><expr><name pos:line="19" pos:column="46">priority<pos:position pos:line="19" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="56">'.'<pos:position pos:line="19" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="61"/></decl_stmt>
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><operator pos:line="20" pos:column="17">!<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">facility<pos:position pos:line="20" pos:column="26"/></name></expr>)<pos:position pos:line="20" pos:column="27"/></condition><then pos:line="20" pos:column="27">
                <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">facility<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">=<pos:position pos:line="21" pos:column="27"/></operator> <operator pos:line="21" pos:column="28">(<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="29">char<pos:position pos:line="21" pos:column="33"/></name> <operator pos:line="21" pos:column="34">*<pos:position pos:line="21" pos:column="35"/></operator><operator pos:line="21" pos:column="35">)<pos:position pos:line="21" pos:column="36"/></operator> <call><name pos:line="21" pos:column="37">strchr<pos:position pos:line="21" pos:column="43"/></name><argument_list pos:line="21" pos:column="43">(<argument><expr><name pos:line="21" pos:column="44">priority<pos:position pos:line="21" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="21" pos:column="54">'|'<pos:position pos:line="21" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt></block></then></if>
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name pos:line="22" pos:column="17">facility<pos:position pos:line="22" pos:column="25"/></name></expr>)<pos:position pos:line="22" pos:column="26"/></condition><then pos:line="22" pos:column="26"> <block pos:line="22" pos:column="27">{
                <expr_stmt><expr><operator pos:line="23" pos:column="17">*<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">facility<pos:position pos:line="23" pos:column="26"/></name><operator pos:line="23" pos:column="26">++<pos:position pos:line="23" pos:column="28"/></operator> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <literal type="char" pos:line="23" pos:column="31">'\0'<pos:position pos:line="23" pos:column="35"/></literal></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="24" pos:column="17">lf<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">syslog_priority<pos:position pos:line="24" pos:column="36"/></name></name> <operator pos:line="24" pos:column="37">|=<pos:position pos:line="24" pos:column="39"/></operator> <call><name pos:line="24" pos:column="40">syslog_ntoa<pos:position pos:line="24" pos:column="51"/></name><argument_list pos:line="24" pos:column="51">(<argument><expr><name pos:line="24" pos:column="52">facility<pos:position pos:line="24" pos:column="60"/></name></expr></argument>)<pos:position pos:line="24" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="62"/></expr_stmt>
            }<pos:position pos:line="25" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name><name pos:line="26" pos:column="13">lf<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">syslog_priority<pos:position pos:line="26" pos:column="32"/></name></name> <operator pos:line="26" pos:column="33">|=<pos:position pos:line="26" pos:column="35"/></operator> <call><name pos:line="26" pos:column="36">syslog_ntoa<pos:position pos:line="26" pos:column="47"/></name><argument_list pos:line="26" pos:column="47">(<argument><expr><name pos:line="26" pos:column="48">priority<pos:position pos:line="26" pos:column="56"/></name></expr></argument>)<pos:position pos:line="26" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">xfree<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name pos:line="27" pos:column="19">priority<pos:position pos:line="27" pos:column="27"/></name></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>
            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal> <operator pos:line="28" pos:column="19">==<pos:position pos:line="28" pos:column="21"/></operator> <operator pos:line="28" pos:column="22">(<pos:position pos:line="28" pos:column="23"/></operator><name><name pos:line="28" pos:column="23">lf<pos:position pos:line="28" pos:column="25"/></name><operator pos:line="28" pos:column="25">-&gt;<pos:position pos:line="28" pos:column="30"/></operator><name pos:line="28" pos:column="27">syslog_priority<pos:position pos:line="28" pos:column="42"/></name></name> <operator pos:line="28" pos:column="43">&amp;<pos:position pos:line="28" pos:column="48"/></operator> <name pos:line="28" pos:column="45">PRIORITY_MASK<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">)<pos:position pos:line="28" pos:column="59"/></operator></expr>)<pos:position pos:line="28" pos:column="60"/></condition><then pos:line="28" pos:column="60">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="29" pos:column="17">lf<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">-&gt;<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="21">syslog_priority<pos:position pos:line="29" pos:column="36"/></name></name> <operator pos:line="29" pos:column="37">|=<pos:position pos:line="29" pos:column="39"/></operator> <name pos:line="29" pos:column="40">LOG_INFO<pos:position pos:line="29" pos:column="48"/></name></expr>;<pos:position pos:line="29" pos:column="49"/></expr_stmt></block></then></if>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then> <else pos:line="31" pos:column="7">else
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif>
    <block pos:line="33" pos:column="5">{
        <expr_stmt><expr><name pos:line="34" pos:column="9">fd<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <call><name pos:line="34" pos:column="14">file_open<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">path<pos:position pos:line="34" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="30">O_WRONLY<pos:position pos:line="34" pos:column="38"/></name> <operator pos:line="34" pos:column="39">|<pos:position pos:line="34" pos:column="40"/></operator> <name pos:line="34" pos:column="41">O_CREAT<pos:position pos:line="34" pos:column="48"/></name> <operator pos:line="34" pos:column="49">|<pos:position pos:line="34" pos:column="50"/></operator> <name pos:line="34" pos:column="51">O_TEXT<pos:position pos:line="34" pos:column="57"/></name></expr></argument>)<pos:position pos:line="34" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="59"/></expr_stmt>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name pos:line="36" pos:column="13">DISK_ERROR<pos:position pos:line="36" pos:column="23"/></name> <operator pos:line="36" pos:column="24">==<pos:position pos:line="36" pos:column="26"/></operator> <name pos:line="36" pos:column="27">fd<pos:position pos:line="36" pos:column="29"/></name></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30"> <block pos:line="36" pos:column="31">{
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name pos:line="37" pos:column="17">ENOENT<pos:position pos:line="37" pos:column="23"/></name> <operator pos:line="37" pos:column="24">==<pos:position pos:line="37" pos:column="26"/></operator> <name pos:line="37" pos:column="27">errno<pos:position pos:line="37" pos:column="32"/></name> <operator pos:line="37" pos:column="33">&amp;&amp;<pos:position pos:line="37" pos:column="43"/></operator> <name pos:line="37" pos:column="36">fatal_flag<pos:position pos:line="37" pos:column="46"/></name></expr>)<pos:position pos:line="37" pos:column="47"/></condition><then pos:line="37" pos:column="47"> <block pos:line="37" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="38" pos:column="17">fatalf<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><literal type="string" pos:line="38" pos:column="24">"Cannot open '%s' because\n"<pos:position pos:line="38" pos:column="52"/></literal>
                       <literal type="string" pos:line="39" pos:column="24">"\tthe parent directory does not exist.\n"<pos:position pos:line="39" pos:column="66"/></literal>
                       <literal type="string" pos:line="40" pos:column="24">"\tPlease create the directory.\n"<pos:position pos:line="40" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="60">path<pos:position pos:line="40" pos:column="64"/></name></expr></argument>)<pos:position pos:line="40" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="66"/></expr_stmt>
            }<pos:position pos:line="41" pos:column="14"/></block></then> <elseif pos:line="41" pos:column="15">else <if pos:line="41" pos:column="20">if <condition pos:line="41" pos:column="23">(<expr><name pos:line="41" pos:column="24">EACCES<pos:position pos:line="41" pos:column="30"/></name> <operator pos:line="41" pos:column="31">==<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="34">errno<pos:position pos:line="41" pos:column="39"/></name> <operator pos:line="41" pos:column="40">&amp;&amp;<pos:position pos:line="41" pos:column="50"/></operator> <name pos:line="41" pos:column="43">fatal_flag<pos:position pos:line="41" pos:column="53"/></name></expr>)<pos:position pos:line="41" pos:column="54"/></condition><then pos:line="41" pos:column="54"> <block pos:line="41" pos:column="55">{
                <expr_stmt><expr><call><name pos:line="42" pos:column="17">fatalf<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><literal type="string" pos:line="42" pos:column="24">"Cannot open '%s' for writing.\n"<pos:position pos:line="42" pos:column="57"/></literal>
                       <literal type="string" pos:line="43" pos:column="24">"\tThe parent directory must be writeable by the\n"<pos:position pos:line="43" pos:column="75"/></literal>
                       <literal type="string" pos:line="44" pos:column="24">"\tuser '%s', which is the cache_effective_user\n"<pos:position pos:line="44" pos:column="74"/></literal>
                       <literal type="string" pos:line="45" pos:column="24">"\tset in squid.conf."<pos:position pos:line="45" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="48">path<pos:position pos:line="45" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="54">Config<pos:position pos:line="45" pos:column="60"/></name><operator pos:line="45" pos:column="60">.<pos:position pos:line="45" pos:column="61"/></operator><name pos:line="45" pos:column="61">effectiveUser<pos:position pos:line="45" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="76"/></expr_stmt>
            }<pos:position pos:line="46" pos:column="14"/></block></then></if></elseif> <elseif pos:line="46" pos:column="15">else <if pos:line="46" pos:column="20">if <condition pos:line="46" pos:column="23">(<expr><name pos:line="46" pos:column="24">EISDIR<pos:position pos:line="46" pos:column="30"/></name> <operator pos:line="46" pos:column="31">==<pos:position pos:line="46" pos:column="33"/></operator> <name pos:line="46" pos:column="34">errno<pos:position pos:line="46" pos:column="39"/></name> <operator pos:line="46" pos:column="40">&amp;&amp;<pos:position pos:line="46" pos:column="50"/></operator> <name pos:line="46" pos:column="43">fatal_flag<pos:position pos:line="46" pos:column="53"/></name></expr>)<pos:position pos:line="46" pos:column="54"/></condition><then pos:line="46" pos:column="54"> <block pos:line="46" pos:column="55">{
                <expr_stmt><expr><call><name pos:line="47" pos:column="17">fatalf<pos:position pos:line="47" pos:column="23"/></name><argument_list pos:line="47" pos:column="23">(<argument><expr><literal type="string" pos:line="47" pos:column="24">"Cannot open '%s' because it is a directory, not a file.\n"<pos:position pos:line="47" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="85">path<pos:position pos:line="47" pos:column="89"/></name></expr></argument>)<pos:position pos:line="47" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="91"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></then></if></elseif> <else pos:line="48" pos:column="15">else <block pos:line="48" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="49" pos:column="17">debugs<pos:position pos:line="49" pos:column="23"/></name><argument_list pos:line="49" pos:column="23">(<argument><expr><literal type="number" pos:line="49" pos:column="24">50<pos:position pos:line="49" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="28">1<pos:position pos:line="49" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="31">"logfileOpen: "<pos:position pos:line="49" pos:column="46"/></literal> <operator pos:line="49" pos:column="47">&lt;&lt;<pos:position pos:line="49" pos:column="55"/></operator> <name pos:line="49" pos:column="50">path<pos:position pos:line="49" pos:column="54"/></name> <operator pos:line="49" pos:column="55">&lt;&lt;<pos:position pos:line="49" pos:column="63"/></operator> <literal type="string" pos:line="49" pos:column="58">": "<pos:position pos:line="49" pos:column="62"/></literal> <operator pos:line="49" pos:column="63">&lt;&lt;<pos:position pos:line="49" pos:column="71"/></operator> <call><name pos:line="49" pos:column="66">xstrerror<pos:position pos:line="49" pos:column="75"/></name><argument_list pos:line="49" pos:column="75">()<pos:position pos:line="49" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="79"/></expr_stmt>
                <return pos:line="50" pos:column="17">return <expr><name pos:line="50" pos:column="24">NULL<pos:position pos:line="50" pos:column="28"/></name></expr>;<pos:position pos:line="50" pos:column="29"/></return>
            }<pos:position pos:line="51" pos:column="14"/></block></else></if>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="54" pos:column="9">lf<pos:position pos:line="54" pos:column="11"/></name><operator pos:line="54" pos:column="11">-&gt;<pos:position pos:line="54" pos:column="16"/></operator><name pos:line="54" pos:column="13">fd<pos:position pos:line="54" pos:column="15"/></name></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <name pos:line="54" pos:column="18">fd<pos:position pos:line="54" pos:column="20"/></name></expr>;<pos:position pos:line="54" pos:column="21"/></expr_stmt>

        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name pos:line="56" pos:column="13">bufsz<pos:position pos:line="56" pos:column="18"/></name> <operator pos:line="56" pos:column="19">&gt;<pos:position pos:line="56" pos:column="23"/></operator> <literal type="number" pos:line="56" pos:column="21">0<pos:position pos:line="56" pos:column="22"/></literal></expr>)<pos:position pos:line="56" pos:column="23"/></condition><then pos:line="56" pos:column="23"> <block pos:line="56" pos:column="24">{
            <expr_stmt><expr><name><name pos:line="57" pos:column="13">lf<pos:position pos:line="57" pos:column="15"/></name><operator pos:line="57" pos:column="15">-&gt;<pos:position pos:line="57" pos:column="20"/></operator><name pos:line="57" pos:column="17">buf<pos:position pos:line="57" pos:column="20"/></name></name> <operator pos:line="57" pos:column="21">=<pos:position pos:line="57" pos:column="22"/></operator> <operator pos:line="57" pos:column="23">(<pos:position pos:line="57" pos:column="24"/></operator><name pos:line="57" pos:column="24">char<pos:position pos:line="57" pos:column="28"/></name> <operator pos:line="57" pos:column="29">*<pos:position pos:line="57" pos:column="30"/></operator><operator pos:line="57" pos:column="30">)<pos:position pos:line="57" pos:column="31"/></operator> <call><name pos:line="57" pos:column="32">xmalloc<pos:position pos:line="57" pos:column="39"/></name><argument_list pos:line="57" pos:column="39">(<argument><expr><name pos:line="57" pos:column="40">bufsz<pos:position pos:line="57" pos:column="45"/></name></expr></argument>)<pos:position pos:line="57" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="47"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">lf<pos:position pos:line="58" pos:column="15"/></name><operator pos:line="58" pos:column="15">-&gt;<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="17">bufsz<pos:position pos:line="58" pos:column="22"/></name></name> <operator pos:line="58" pos:column="23">=<pos:position pos:line="58" pos:column="24"/></operator> <name pos:line="58" pos:column="25">bufsz<pos:position pos:line="58" pos:column="30"/></name></expr>;<pos:position pos:line="58" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
    }<pos:position pos:line="60" pos:column="6"/></block></else></if>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">fatal_flag<pos:position pos:line="62" pos:column="19"/></name></expr>)<pos:position pos:line="62" pos:column="20"/></condition><then pos:line="62" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="63" pos:column="9">lf<pos:position pos:line="63" pos:column="11"/></name><operator pos:line="63" pos:column="11">-&gt;<pos:position pos:line="63" pos:column="16"/></operator><name pos:line="63" pos:column="13">flags<pos:position pos:line="63" pos:column="18"/></name><operator pos:line="63" pos:column="18">.<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="19">fatal<pos:position pos:line="63" pos:column="24"/></name></name> <operator pos:line="63" pos:column="25">=<pos:position pos:line="63" pos:column="26"/></operator> <literal type="number" pos:line="63" pos:column="27">1<pos:position pos:line="63" pos:column="28"/></literal></expr>;<pos:position pos:line="63" pos:column="29"/></expr_stmt></block></then></if>

    <return pos:line="65" pos:column="5">return <expr><name pos:line="65" pos:column="12">lf<pos:position pos:line="65" pos:column="14"/></name></expr>;<pos:position pos:line="65" pos:column="15"/></return>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

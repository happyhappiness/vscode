<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1617_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">helperStatefulOpenServers<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">statefulhelper<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type> <name pos:line="2" pos:column="44">hlp<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">shortname<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name><name pos:line="5" pos:column="17">args<pos:position pos:line="5" pos:column="21"/></name><index pos:line="5" pos:column="21">[<expr><name pos:line="5" pos:column="22">HELPER_MAX_ARGS<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">+<pos:position pos:line="5" pos:column="38"/></operator><literal type="number" pos:line="5" pos:column="38">1<pos:position pos:line="5" pos:column="39"/></literal></expr>]<pos:position pos:line="5" pos:column="40"/></index></name></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt> <comment type="line" pos:line="5" pos:column="42">// save space for a NULL terminator</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">fd_note_buf<pos:position pos:line="6" pos:column="21"/></name><index pos:line="6" pos:column="21">[<expr><name pos:line="6" pos:column="22">FD_DESC_SZ<pos:position pos:line="6" pos:column="32"/></name></expr>]<pos:position pos:line="6" pos:column="33"/></index></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">nargs<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">hlp<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">cmdline<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">==<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="25">NULL<pos:position pos:line="9" pos:column="29"/></name></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30">
        <block type="pseudo"><return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">progname<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><name><name pos:line="12" pos:column="22">hlp<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">cmdline<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">key<pos:position pos:line="12" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="40"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">s<pos:position pos:line="14" pos:column="12"/></name></decl>;<pos:position pos:line="14" pos:column="13"/></decl_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">(<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">s<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <call><name pos:line="15" pos:column="14">strrchr<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">progname<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="32">'/'<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call><operator pos:line="15" pos:column="36">)<pos:position pos:line="15" pos:column="37"/></operator></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><name pos:line="16" pos:column="9">shortname<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <call><name pos:line="16" pos:column="21">xstrdup<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">s<pos:position pos:line="16" pos:column="30"/></name> <operator pos:line="16" pos:column="31">+<pos:position pos:line="16" pos:column="32"/></operator> <literal type="number" pos:line="16" pos:column="33">1<pos:position pos:line="16" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">shortname<pos:position pos:line="18" pos:column="18"/></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <call><name pos:line="18" pos:column="21">xstrdup<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">progname<pos:position pos:line="18" pos:column="37"/></name></expr></argument>)<pos:position pos:line="18" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="39"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="20" pos:column="5">/* dont ever start more than hlp-&gt;n_to_start processes. */</comment>
    <comment type="block" pos:line="21" pos:column="5">/* n_active are the helpers which have not been shut down. */</comment>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">need_new<pos:position pos:line="22" pos:column="17"/></name> <init pos:line="22" pos:column="18">= <expr><name><name pos:line="22" pos:column="20">hlp<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">n_to_start<pos:position pos:line="22" pos:column="35"/></name></name> <operator pos:line="22" pos:column="36">-<pos:position pos:line="22" pos:column="37"/></operator> <name><name pos:line="22" pos:column="38">hlp<pos:position pos:line="22" pos:column="41"/></name><operator pos:line="22" pos:column="41">-&gt;<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="43">n_active<pos:position pos:line="22" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="22" pos:column="52"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">debugs<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">84<pos:position pos:line="24" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="16">1<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"helperOpenServers: Starting "<pos:position pos:line="24" pos:column="49"/></literal> <operator pos:line="24" pos:column="50">&lt;&lt;<pos:position pos:line="24" pos:column="58"/></operator> <name pos:line="24" pos:column="53">need_new<pos:position pos:line="24" pos:column="61"/></name> <operator pos:line="24" pos:column="62">&lt;&lt;<pos:position pos:line="24" pos:column="70"/></operator> <literal type="string" pos:line="24" pos:column="65">"/"<pos:position pos:line="24" pos:column="68"/></literal> <operator pos:line="24" pos:column="69">&lt;&lt;<pos:position pos:line="24" pos:column="77"/></operator> <name><name pos:line="24" pos:column="72">hlp<pos:position pos:line="24" pos:column="75"/></name><operator pos:line="24" pos:column="75">-&gt;<pos:position pos:line="24" pos:column="80"/></operator><name pos:line="24" pos:column="77">n_to_start<pos:position pos:line="24" pos:column="87"/></name></name> <operator pos:line="24" pos:column="88">&lt;&lt;<pos:position pos:line="24" pos:column="96"/></operator> <literal type="string" pos:line="24" pos:column="91">" '"<pos:position pos:line="24" pos:column="95"/></literal> <operator pos:line="24" pos:column="96">&lt;&lt;<pos:position pos:line="24" pos:column="104"/></operator> <name pos:line="24" pos:column="99">shortname<pos:position pos:line="24" pos:column="108"/></name> <operator pos:line="24" pos:column="109">&lt;&lt;<pos:position pos:line="24" pos:column="117"/></operator> <literal type="string" pos:line="24" pos:column="112">"' processes"<pos:position pos:line="24" pos:column="125"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="127"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">need_new<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">&lt;<pos:position pos:line="26" pos:column="22"/></operator> <literal type="number" pos:line="26" pos:column="20">1<pos:position pos:line="26" pos:column="21"/></literal></expr>)<pos:position pos:line="26" pos:column="22"/></condition><then pos:line="26" pos:column="22"> <block pos:line="26" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">debugs<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="number" pos:line="27" pos:column="16">84<pos:position pos:line="27" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="20">1<pos:position pos:line="27" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="23">"helperStatefulOpenServers: No '"<pos:position pos:line="27" pos:column="56"/></literal> <operator pos:line="27" pos:column="57">&lt;&lt;<pos:position pos:line="27" pos:column="65"/></operator> <name pos:line="27" pos:column="60">shortname<pos:position pos:line="27" pos:column="69"/></name> <operator pos:line="27" pos:column="70">&lt;&lt;<pos:position pos:line="27" pos:column="78"/></operator> <literal type="string" pos:line="27" pos:column="73">"' processes needed."<pos:position pos:line="27" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="96"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="30" pos:column="5">char<pos:position pos:line="30" pos:column="9"/></name> <modifier pos:line="30" pos:column="10">*<pos:position pos:line="30" pos:column="11"/></modifier></type><name pos:line="30" pos:column="11">procname<pos:position pos:line="30" pos:column="19"/></name> <init pos:line="30" pos:column="20">= <expr><operator pos:line="30" pos:column="22">(<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">char<pos:position pos:line="30" pos:column="27"/></name> <operator pos:line="30" pos:column="28">*<pos:position pos:line="30" pos:column="29"/></operator><operator pos:line="30" pos:column="29">)<pos:position pos:line="30" pos:column="30"/></operator><call><name pos:line="30" pos:column="30">xmalloc<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><call><name pos:line="30" pos:column="38">strlen<pos:position pos:line="30" pos:column="44"/></name><argument_list pos:line="30" pos:column="44">(<argument><expr><name pos:line="30" pos:column="45">shortname<pos:position pos:line="30" pos:column="54"/></name></expr></argument>)<pos:position pos:line="30" pos:column="55"/></argument_list></call> <operator pos:line="30" pos:column="56">+<pos:position pos:line="30" pos:column="57"/></operator> <literal type="number" pos:line="30" pos:column="58">3<pos:position pos:line="30" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="61"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">snprintf<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><name pos:line="32" pos:column="14">procname<pos:position pos:line="32" pos:column="22"/></name></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="24">strlen<pos:position pos:line="32" pos:column="30"/></name><argument_list pos:line="32" pos:column="30">(<argument><expr><name pos:line="32" pos:column="31">shortname<pos:position pos:line="32" pos:column="40"/></name></expr></argument>)<pos:position pos:line="32" pos:column="41"/></argument_list></call> <operator pos:line="32" pos:column="42">+<pos:position pos:line="32" pos:column="43"/></operator> <literal type="number" pos:line="32" pos:column="44">3<pos:position pos:line="32" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="47">"(%s)"<pos:position pos:line="32" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="32" pos:column="55">shortname<pos:position pos:line="32" pos:column="64"/></name></expr></argument>)<pos:position pos:line="32" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="34" pos:column="5">args<pos:position pos:line="34" pos:column="9"/></name><index pos:line="34" pos:column="9">[<expr><name pos:line="34" pos:column="10">nargs<pos:position pos:line="34" pos:column="15"/></name><operator pos:line="34" pos:column="15">++<pos:position pos:line="34" pos:column="17"/></operator></expr>]<pos:position pos:line="34" pos:column="18"/></index></name> <operator pos:line="34" pos:column="19">=<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">procname<pos:position pos:line="34" pos:column="29"/></name></expr>;<pos:position pos:line="34" pos:column="30"/></expr_stmt>

    <for pos:line="36" pos:column="5">for <control pos:line="36" pos:column="9">(<init><decl><type><name pos:line="36" pos:column="10">wordlist<pos:position pos:line="36" pos:column="18"/></name> <modifier pos:line="36" pos:column="19">*<pos:position pos:line="36" pos:column="20"/></modifier></type><name pos:line="36" pos:column="20">w<pos:position pos:line="36" pos:column="21"/></name> <init pos:line="36" pos:column="22">= <expr><name><name pos:line="36" pos:column="24">hlp<pos:position pos:line="36" pos:column="27"/></name><operator pos:line="36" pos:column="27">-&gt;<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="29">cmdline<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">-&gt;<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="38">next<pos:position pos:line="36" pos:column="42"/></name></name></expr></init></decl>;<pos:position pos:line="36" pos:column="43"/></init> <condition><expr><name pos:line="36" pos:column="44">w<pos:position pos:line="36" pos:column="45"/></name> <operator pos:line="36" pos:column="46">&amp;&amp;<pos:position pos:line="36" pos:column="56"/></operator> <name pos:line="36" pos:column="49">nargs<pos:position pos:line="36" pos:column="54"/></name> <operator pos:line="36" pos:column="55">&lt;<pos:position pos:line="36" pos:column="59"/></operator> <name pos:line="36" pos:column="57">HELPER_MAX_ARGS<pos:position pos:line="36" pos:column="72"/></name></expr>;<pos:position pos:line="36" pos:column="73"/></condition> <incr><expr><name pos:line="36" pos:column="74">w<pos:position pos:line="36" pos:column="75"/></name> <operator pos:line="36" pos:column="76">=<pos:position pos:line="36" pos:column="77"/></operator> <name><name pos:line="36" pos:column="78">w<pos:position pos:line="36" pos:column="79"/></name><operator pos:line="36" pos:column="79">-&gt;<pos:position pos:line="36" pos:column="84"/></operator><name pos:line="36" pos:column="81">next<pos:position pos:line="36" pos:column="85"/></name></name></expr></incr>)<pos:position pos:line="36" pos:column="86"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="9">args<pos:position pos:line="37" pos:column="13"/></name><index pos:line="37" pos:column="13">[<expr><name pos:line="37" pos:column="14">nargs<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">++<pos:position pos:line="37" pos:column="21"/></operator></expr>]<pos:position pos:line="37" pos:column="22"/></index></name> <operator pos:line="37" pos:column="23">=<pos:position pos:line="37" pos:column="24"/></operator> <name><name pos:line="37" pos:column="25">w<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">-&gt;<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="28">key<pos:position pos:line="37" pos:column="31"/></name></name></expr>;<pos:position pos:line="37" pos:column="32"/></expr_stmt></block></for>

    <expr_stmt><expr><name><name pos:line="39" pos:column="5">args<pos:position pos:line="39" pos:column="9"/></name><index pos:line="39" pos:column="9">[<expr><name pos:line="39" pos:column="10">nargs<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">++<pos:position pos:line="39" pos:column="17"/></operator></expr>]<pos:position pos:line="39" pos:column="18"/></index></name> <operator pos:line="39" pos:column="19">=<pos:position pos:line="39" pos:column="20"/></operator> <name pos:line="39" pos:column="21">NULL<pos:position pos:line="39" pos:column="25"/></name></expr>;<pos:position pos:line="39" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">assert<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><name pos:line="41" pos:column="12">nargs<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">&lt;=<pos:position pos:line="41" pos:column="23"/></operator> <name pos:line="41" pos:column="21">HELPER_MAX_ARGS<pos:position pos:line="41" pos:column="36"/></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>

    <for pos:line="43" pos:column="5">for <control pos:line="43" pos:column="9">(<init><decl><type><name pos:line="43" pos:column="10">int<pos:position pos:line="43" pos:column="13"/></name></type> <name pos:line="43" pos:column="14">k<pos:position pos:line="43" pos:column="15"/></name> <init pos:line="43" pos:column="16">= <expr><literal type="number" pos:line="43" pos:column="18">0<pos:position pos:line="43" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="43" pos:column="20"/></init> <condition><expr><name pos:line="43" pos:column="21">k<pos:position pos:line="43" pos:column="22"/></name> <operator pos:line="43" pos:column="23">&lt;<pos:position pos:line="43" pos:column="27"/></operator> <name pos:line="43" pos:column="25">need_new<pos:position pos:line="43" pos:column="33"/></name></expr>;<pos:position pos:line="43" pos:column="34"/></condition> <incr><expr><name pos:line="43" pos:column="35">k<pos:position pos:line="43" pos:column="36"/></name><operator pos:line="43" pos:column="36">++<pos:position pos:line="43" pos:column="38"/></operator></expr></incr>)<pos:position pos:line="43" pos:column="39"/></control> <block pos:line="43" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">getCurrentTime<pos:position pos:line="44" pos:column="23"/></name><argument_list pos:line="44" pos:column="23">()<pos:position pos:line="44" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="45" pos:column="9">int<pos:position pos:line="45" pos:column="12"/></name></type> <name pos:line="45" pos:column="13">rfd<pos:position pos:line="45" pos:column="16"/></name> <init pos:line="45" pos:column="17">= <expr><operator pos:line="45" pos:column="19">-<pos:position pos:line="45" pos:column="20"/></operator><literal type="number" pos:line="45" pos:column="20">1<pos:position pos:line="45" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="45" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="46" pos:column="9">int<pos:position pos:line="46" pos:column="12"/></name></type> <name pos:line="46" pos:column="13">wfd<pos:position pos:line="46" pos:column="16"/></name> <init pos:line="46" pos:column="17">= <expr><operator pos:line="46" pos:column="19">-<pos:position pos:line="46" pos:column="20"/></operator><literal type="number" pos:line="46" pos:column="20">1<pos:position pos:line="46" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="46" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="47" pos:column="9">void<pos:position pos:line="47" pos:column="13"/></name> <modifier pos:line="47" pos:column="14">*<pos:position pos:line="47" pos:column="15"/></modifier></type> <name pos:line="47" pos:column="16">hIpc<pos:position pos:line="47" pos:column="20"/></name></decl>;<pos:position pos:line="47" pos:column="21"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="48" pos:column="9">pid_t<pos:position pos:line="48" pos:column="14"/></name></type> <name pos:line="48" pos:column="15">pid<pos:position pos:line="48" pos:column="18"/></name> <init pos:line="48" pos:column="19">= <expr><call><name pos:line="48" pos:column="21">ipcCreate<pos:position pos:line="48" pos:column="30"/></name><argument_list pos:line="48" pos:column="30">(<argument><expr><name><name pos:line="48" pos:column="31">hlp<pos:position pos:line="48" pos:column="34"/></name><operator pos:line="48" pos:column="34">-&gt;<pos:position pos:line="48" pos:column="39"/></operator><name pos:line="48" pos:column="36">ipc_type<pos:position pos:line="48" pos:column="44"/></name></name></expr></argument>,
                              <argument><expr><name pos:line="49" pos:column="31">progname<pos:position pos:line="49" pos:column="39"/></name></expr></argument>,
                              <argument><expr><name pos:line="50" pos:column="31">args<pos:position pos:line="50" pos:column="35"/></name></expr></argument>,
                              <argument><expr><name pos:line="51" pos:column="31">shortname<pos:position pos:line="51" pos:column="40"/></name></expr></argument>,
                              <argument><expr><name><name pos:line="52" pos:column="31">hlp<pos:position pos:line="52" pos:column="34"/></name><operator pos:line="52" pos:column="34">-&gt;<pos:position pos:line="52" pos:column="39"/></operator><name pos:line="52" pos:column="36">addr<pos:position pos:line="52" pos:column="40"/></name></name></expr></argument>,
                              <argument><expr><operator pos:line="53" pos:column="31">&amp;<pos:position pos:line="53" pos:column="36"/></operator><name pos:line="53" pos:column="32">rfd<pos:position pos:line="53" pos:column="35"/></name></expr></argument>,
                              <argument><expr><operator pos:line="54" pos:column="31">&amp;<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="32">wfd<pos:position pos:line="54" pos:column="35"/></name></expr></argument>,
                              <argument><expr><operator pos:line="55" pos:column="31">&amp;<pos:position pos:line="55" pos:column="36"/></operator><name pos:line="55" pos:column="32">hIpc<pos:position pos:line="55" pos:column="36"/></name></expr></argument>)<pos:position pos:line="55" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="55" pos:column="38"/></decl_stmt>

        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">pid<pos:position pos:line="57" pos:column="16"/></name> <operator pos:line="57" pos:column="17">&lt;<pos:position pos:line="57" pos:column="21"/></operator> <literal type="number" pos:line="57" pos:column="19">0<pos:position pos:line="57" pos:column="20"/></literal></expr>)<pos:position pos:line="57" pos:column="21"/></condition><then pos:line="57" pos:column="21"> <block pos:line="57" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="58" pos:column="13">debugs<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><literal type="number" pos:line="58" pos:column="20">84<pos:position pos:line="58" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="24">1<pos:position pos:line="58" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="27">"WARNING: Cannot run '"<pos:position pos:line="58" pos:column="50"/></literal> <operator pos:line="58" pos:column="51">&lt;&lt;<pos:position pos:line="58" pos:column="59"/></operator> <name pos:line="58" pos:column="54">progname<pos:position pos:line="58" pos:column="62"/></name> <operator pos:line="58" pos:column="63">&lt;&lt;<pos:position pos:line="58" pos:column="71"/></operator> <literal type="string" pos:line="58" pos:column="66">"' process."<pos:position pos:line="58" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="80"/></expr_stmt>
            <continue pos:line="59" pos:column="13">continue;<pos:position pos:line="59" pos:column="22"/></continue>
        }<pos:position pos:line="60" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="62" pos:column="9">hlp<pos:position pos:line="62" pos:column="12"/></name><operator pos:line="62" pos:column="12">-&gt;<pos:position pos:line="62" pos:column="17"/></operator><name pos:line="62" pos:column="14">n_running<pos:position pos:line="62" pos:column="23"/></name></name><operator pos:line="62" pos:column="23">++<pos:position pos:line="62" pos:column="25"/></operator></expr>;<pos:position pos:line="62" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">hlp<pos:position pos:line="63" pos:column="12"/></name><operator pos:line="63" pos:column="12">-&gt;<pos:position pos:line="63" pos:column="17"/></operator><name pos:line="63" pos:column="14">n_active<pos:position pos:line="63" pos:column="22"/></name></name><operator pos:line="63" pos:column="22">++<pos:position pos:line="63" pos:column="24"/></operator></expr>;<pos:position pos:line="63" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">CBDATA_INIT_TYPE<pos:position pos:line="64" pos:column="25"/></name><argument_list pos:line="64" pos:column="25">(<argument><expr><name pos:line="64" pos:column="26">helper_stateful_server<pos:position pos:line="64" pos:column="48"/></name></expr></argument>)<pos:position pos:line="64" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="50"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="65" pos:column="9">helper_stateful_server<pos:position pos:line="65" pos:column="31"/></name> <modifier pos:line="65" pos:column="32">*<pos:position pos:line="65" pos:column="33"/></modifier></type><name pos:line="65" pos:column="33">srv<pos:position pos:line="65" pos:column="36"/></name> <init pos:line="65" pos:column="37">= <expr><call><name pos:line="65" pos:column="39">cbdataAlloc<pos:position pos:line="65" pos:column="50"/></name><argument_list pos:line="65" pos:column="50">(<argument><expr><name pos:line="65" pos:column="51">helper_stateful_server<pos:position pos:line="65" pos:column="73"/></name></expr></argument>)<pos:position pos:line="65" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="65" pos:column="75"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">srv<pos:position pos:line="66" pos:column="12"/></name><operator pos:line="66" pos:column="12">-&gt;<pos:position pos:line="66" pos:column="17"/></operator><name pos:line="66" pos:column="14">hIpc<pos:position pos:line="66" pos:column="18"/></name></name> <operator pos:line="66" pos:column="19">=<pos:position pos:line="66" pos:column="20"/></operator> <name pos:line="66" pos:column="21">hIpc<pos:position pos:line="66" pos:column="25"/></name></expr>;<pos:position pos:line="66" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="67" pos:column="9">srv<pos:position pos:line="67" pos:column="12"/></name><operator pos:line="67" pos:column="12">-&gt;<pos:position pos:line="67" pos:column="17"/></operator><name pos:line="67" pos:column="14">pid<pos:position pos:line="67" pos:column="17"/></name></name> <operator pos:line="67" pos:column="18">=<pos:position pos:line="67" pos:column="19"/></operator> <name pos:line="67" pos:column="20">pid<pos:position pos:line="67" pos:column="23"/></name></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">srv<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">-&gt;<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="14">flags<pos:position pos:line="68" pos:column="19"/></name><operator pos:line="68" pos:column="19">.<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="20">reserved<pos:position pos:line="68" pos:column="28"/></name></name> <operator pos:line="68" pos:column="29">=<pos:position pos:line="68" pos:column="30"/></operator> <literal type="number" pos:line="68" pos:column="31">0<pos:position pos:line="68" pos:column="32"/></literal></expr>;<pos:position pos:line="68" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="69" pos:column="9">srv<pos:position pos:line="69" pos:column="12"/></name><operator pos:line="69" pos:column="12">-&gt;<pos:position pos:line="69" pos:column="17"/></operator><name pos:line="69" pos:column="14">stats<pos:position pos:line="69" pos:column="19"/></name><operator pos:line="69" pos:column="19">.<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="20">submits<pos:position pos:line="69" pos:column="27"/></name></name> <operator pos:line="69" pos:column="28">=<pos:position pos:line="69" pos:column="29"/></operator> <literal type="number" pos:line="69" pos:column="30">0<pos:position pos:line="69" pos:column="31"/></literal></expr>;<pos:position pos:line="69" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">srv<pos:position pos:line="70" pos:column="12"/></name><operator pos:line="70" pos:column="12">-&gt;<pos:position pos:line="70" pos:column="17"/></operator><name pos:line="70" pos:column="14">stats<pos:position pos:line="70" pos:column="19"/></name><operator pos:line="70" pos:column="19">.<pos:position pos:line="70" pos:column="20"/></operator><name pos:line="70" pos:column="20">releases<pos:position pos:line="70" pos:column="28"/></name></name> <operator pos:line="70" pos:column="29">=<pos:position pos:line="70" pos:column="30"/></operator> <literal type="number" pos:line="70" pos:column="31">0<pos:position pos:line="70" pos:column="32"/></literal></expr>;<pos:position pos:line="70" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="71" pos:column="9">srv<pos:position pos:line="71" pos:column="12"/></name><operator pos:line="71" pos:column="12">-&gt;<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="14">index<pos:position pos:line="71" pos:column="19"/></name></name> <operator pos:line="71" pos:column="20">=<pos:position pos:line="71" pos:column="21"/></operator> <name pos:line="71" pos:column="22">k<pos:position pos:line="71" pos:column="23"/></name></expr>;<pos:position pos:line="71" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">srv<pos:position pos:line="72" pos:column="12"/></name><operator pos:line="72" pos:column="12">-&gt;<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="14">addr<pos:position pos:line="72" pos:column="18"/></name></name> <operator pos:line="72" pos:column="19">=<pos:position pos:line="72" pos:column="20"/></operator> <name><name pos:line="72" pos:column="21">hlp<pos:position pos:line="72" pos:column="24"/></name><operator pos:line="72" pos:column="24">-&gt;<pos:position pos:line="72" pos:column="29"/></operator><name pos:line="72" pos:column="26">addr<pos:position pos:line="72" pos:column="30"/></name></name></expr>;<pos:position pos:line="72" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">srv<pos:position pos:line="73" pos:column="12"/></name><operator pos:line="73" pos:column="12">-&gt;<pos:position pos:line="73" pos:column="17"/></operator><name pos:line="73" pos:column="14">rfd<pos:position pos:line="73" pos:column="17"/></name></name> <operator pos:line="73" pos:column="18">=<pos:position pos:line="73" pos:column="19"/></operator> <name pos:line="73" pos:column="20">rfd<pos:position pos:line="73" pos:column="23"/></name></expr>;<pos:position pos:line="73" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="74" pos:column="9">srv<pos:position pos:line="74" pos:column="12"/></name><operator pos:line="74" pos:column="12">-&gt;<pos:position pos:line="74" pos:column="17"/></operator><name pos:line="74" pos:column="14">wfd<pos:position pos:line="74" pos:column="17"/></name></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <name pos:line="74" pos:column="20">wfd<pos:position pos:line="74" pos:column="23"/></name></expr>;<pos:position pos:line="74" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">srv<pos:position pos:line="75" pos:column="12"/></name><operator pos:line="75" pos:column="12">-&gt;<pos:position pos:line="75" pos:column="17"/></operator><name pos:line="75" pos:column="14">rbuf<pos:position pos:line="75" pos:column="18"/></name></name> <operator pos:line="75" pos:column="19">=<pos:position pos:line="75" pos:column="20"/></operator> <operator pos:line="75" pos:column="21">(<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="22">char<pos:position pos:line="75" pos:column="26"/></name> <operator pos:line="75" pos:column="27">*<pos:position pos:line="75" pos:column="28"/></operator><operator pos:line="75" pos:column="28">)<pos:position pos:line="75" pos:column="29"/></operator><call><name pos:line="75" pos:column="29">memAllocBuf<pos:position pos:line="75" pos:column="40"/></name><argument_list pos:line="75" pos:column="40">(<argument><expr><name pos:line="75" pos:column="41">ReadBufMinSize<pos:position pos:line="75" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="75" pos:column="57">&amp;<pos:position pos:line="75" pos:column="62"/></operator><name><name pos:line="75" pos:column="58">srv<pos:position pos:line="75" pos:column="61"/></name><operator pos:line="75" pos:column="61">-&gt;<pos:position pos:line="75" pos:column="66"/></operator><name pos:line="75" pos:column="63">rbuf_sz<pos:position pos:line="75" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">srv<pos:position pos:line="76" pos:column="12"/></name><operator pos:line="76" pos:column="12">-&gt;<pos:position pos:line="76" pos:column="17"/></operator><name pos:line="76" pos:column="14">roffset<pos:position pos:line="76" pos:column="21"/></name></name> <operator pos:line="76" pos:column="22">=<pos:position pos:line="76" pos:column="23"/></operator> <literal type="number" pos:line="76" pos:column="24">0<pos:position pos:line="76" pos:column="25"/></literal></expr>;<pos:position pos:line="76" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">srv<pos:position pos:line="77" pos:column="12"/></name><operator pos:line="77" pos:column="12">-&gt;<pos:position pos:line="77" pos:column="17"/></operator><name pos:line="77" pos:column="14">parent<pos:position pos:line="77" pos:column="20"/></name></name> <operator pos:line="77" pos:column="21">=<pos:position pos:line="77" pos:column="22"/></operator> <call><name pos:line="77" pos:column="23">cbdataReference<pos:position pos:line="77" pos:column="38"/></name><argument_list pos:line="77" pos:column="38">(<argument><expr><name pos:line="77" pos:column="39">hlp<pos:position pos:line="77" pos:column="42"/></name></expr></argument>)<pos:position pos:line="77" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="44"/></expr_stmt>

        <if pos:line="79" pos:column="9">if <condition pos:line="79" pos:column="12">(<expr><name><name pos:line="79" pos:column="13">hlp<pos:position pos:line="79" pos:column="16"/></name><operator pos:line="79" pos:column="16">-&gt;<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="18">datapool<pos:position pos:line="79" pos:column="26"/></name></name> <operator pos:line="79" pos:column="27">!=<pos:position pos:line="79" pos:column="29"/></operator> <name pos:line="79" pos:column="30">NULL<pos:position pos:line="79" pos:column="34"/></name></expr>)<pos:position pos:line="79" pos:column="35"/></condition><then pos:line="79" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="80" pos:column="13">srv<pos:position pos:line="80" pos:column="16"/></name><operator pos:line="80" pos:column="16">-&gt;<pos:position pos:line="80" pos:column="21"/></operator><name pos:line="80" pos:column="18">data<pos:position pos:line="80" pos:column="22"/></name></name> <operator pos:line="80" pos:column="23">=<pos:position pos:line="80" pos:column="24"/></operator> <call><name><name pos:line="80" pos:column="25">hlp<pos:position pos:line="80" pos:column="28"/></name><operator pos:line="80" pos:column="28">-&gt;<pos:position pos:line="80" pos:column="33"/></operator><name pos:line="80" pos:column="30">datapool<pos:position pos:line="80" pos:column="38"/></name><operator pos:line="80" pos:column="38">-&gt;<pos:position pos:line="80" pos:column="43"/></operator><name pos:line="80" pos:column="40">alloc<pos:position pos:line="80" pos:column="45"/></name></name><argument_list pos:line="80" pos:column="45">()<pos:position pos:line="80" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="48"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="82" pos:column="9">dlinkAddTail<pos:position pos:line="82" pos:column="21"/></name><argument_list pos:line="82" pos:column="21">(<argument><expr><name pos:line="82" pos:column="22">srv<pos:position pos:line="82" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="27">&amp;<pos:position pos:line="82" pos:column="32"/></operator><name><name pos:line="82" pos:column="28">srv<pos:position pos:line="82" pos:column="31"/></name><operator pos:line="82" pos:column="31">-&gt;<pos:position pos:line="82" pos:column="36"/></operator><name pos:line="82" pos:column="33">link<pos:position pos:line="82" pos:column="37"/></name></name></expr></argument>, <argument><expr><operator pos:line="82" pos:column="39">&amp;<pos:position pos:line="82" pos:column="44"/></operator><name><name pos:line="82" pos:column="40">hlp<pos:position pos:line="82" pos:column="43"/></name><operator pos:line="82" pos:column="43">-&gt;<pos:position pos:line="82" pos:column="48"/></operator><name pos:line="82" pos:column="45">servers<pos:position pos:line="82" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="82" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="54"/></expr_stmt>

        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">(<expr><name pos:line="84" pos:column="13">rfd<pos:position pos:line="84" pos:column="16"/></name> <operator pos:line="84" pos:column="17">==<pos:position pos:line="84" pos:column="19"/></operator> <name pos:line="84" pos:column="20">wfd<pos:position pos:line="84" pos:column="23"/></name></expr>)<pos:position pos:line="84" pos:column="24"/></condition><then pos:line="84" pos:column="24"> <block pos:line="84" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">snprintf<pos:position pos:line="85" pos:column="21"/></name><argument_list pos:line="85" pos:column="21">(<argument><expr><name pos:line="85" pos:column="22">fd_note_buf<pos:position pos:line="85" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="35">FD_DESC_SZ<pos:position pos:line="85" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="47">"%s #%d"<pos:position pos:line="85" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="57">shortname<pos:position pos:line="85" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="68">k<pos:position pos:line="85" pos:column="69"/></name> <operator pos:line="85" pos:column="70">+<pos:position pos:line="85" pos:column="71"/></operator> <literal type="number" pos:line="85" pos:column="72">1<pos:position pos:line="85" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="85" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">fd_note<pos:position pos:line="86" pos:column="20"/></name><argument_list pos:line="86" pos:column="20">(<argument><expr><name pos:line="86" pos:column="21">rfd<pos:position pos:line="86" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="26">fd_note_buf<pos:position pos:line="86" pos:column="37"/></name></expr></argument>)<pos:position pos:line="86" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></then> <else pos:line="87" pos:column="11">else <block pos:line="87" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">snprintf<pos:position pos:line="88" pos:column="21"/></name><argument_list pos:line="88" pos:column="21">(<argument><expr><name pos:line="88" pos:column="22">fd_note_buf<pos:position pos:line="88" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="35">FD_DESC_SZ<pos:position pos:line="88" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="47">"reading %s #%d"<pos:position pos:line="88" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="88" pos:column="65">shortname<pos:position pos:line="88" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="88" pos:column="76">k<pos:position pos:line="88" pos:column="77"/></name> <operator pos:line="88" pos:column="78">+<pos:position pos:line="88" pos:column="79"/></operator> <literal type="number" pos:line="88" pos:column="80">1<pos:position pos:line="88" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">fd_note<pos:position pos:line="89" pos:column="20"/></name><argument_list pos:line="89" pos:column="20">(<argument><expr><name pos:line="89" pos:column="21">rfd<pos:position pos:line="89" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="89" pos:column="26">fd_note_buf<pos:position pos:line="89" pos:column="37"/></name></expr></argument>)<pos:position pos:line="89" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">snprintf<pos:position pos:line="90" pos:column="21"/></name><argument_list pos:line="90" pos:column="21">(<argument><expr><name pos:line="90" pos:column="22">fd_note_buf<pos:position pos:line="90" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="35">FD_DESC_SZ<pos:position pos:line="90" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="47">"writing %s #%d"<pos:position pos:line="90" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="90" pos:column="65">shortname<pos:position pos:line="90" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="76">k<pos:position pos:line="90" pos:column="77"/></name> <operator pos:line="90" pos:column="78">+<pos:position pos:line="90" pos:column="79"/></operator> <literal type="number" pos:line="90" pos:column="80">1<pos:position pos:line="90" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="91" pos:column="13">fd_note<pos:position pos:line="91" pos:column="20"/></name><argument_list pos:line="91" pos:column="20">(<argument><expr><name pos:line="91" pos:column="21">wfd<pos:position pos:line="91" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="26">fd_note_buf<pos:position pos:line="91" pos:column="37"/></name></expr></argument>)<pos:position pos:line="91" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="92" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="94" pos:column="9">commSetNonBlocking<pos:position pos:line="94" pos:column="27"/></name><argument_list pos:line="94" pos:column="27">(<argument><expr><name pos:line="94" pos:column="28">rfd<pos:position pos:line="94" pos:column="31"/></name></expr></argument>)<pos:position pos:line="94" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="33"/></expr_stmt>

        <if pos:line="96" pos:column="9">if <condition pos:line="96" pos:column="12">(<expr><name pos:line="96" pos:column="13">wfd<pos:position pos:line="96" pos:column="16"/></name> <operator pos:line="96" pos:column="17">!=<pos:position pos:line="96" pos:column="19"/></operator> <name pos:line="96" pos:column="20">rfd<pos:position pos:line="96" pos:column="23"/></name></expr>)<pos:position pos:line="96" pos:column="24"/></condition><then pos:line="96" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="97" pos:column="13">commSetNonBlocking<pos:position pos:line="97" pos:column="31"/></name><argument_list pos:line="97" pos:column="31">(<argument><expr><name pos:line="97" pos:column="32">wfd<pos:position pos:line="97" pos:column="35"/></name></expr></argument>)<pos:position pos:line="97" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="37"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="99" pos:column="9">comm_add_close_handler<pos:position pos:line="99" pos:column="31"/></name><argument_list pos:line="99" pos:column="31">(<argument><expr><name pos:line="99" pos:column="32">rfd<pos:position pos:line="99" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="37">helperStatefulServerFree<pos:position pos:line="99" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="63">srv<pos:position pos:line="99" pos:column="66"/></name></expr></argument>)<pos:position pos:line="99" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="68"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="101" pos:column="9">comm_read<pos:position pos:line="101" pos:column="18"/></name><argument_list pos:line="101" pos:column="18">(<argument><expr><name><name pos:line="101" pos:column="19">srv<pos:position pos:line="101" pos:column="22"/></name><operator pos:line="101" pos:column="22">-&gt;<pos:position pos:line="101" pos:column="27"/></operator><name pos:line="101" pos:column="24">rfd<pos:position pos:line="101" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="29">srv<pos:position pos:line="101" pos:column="32"/></name><operator pos:line="101" pos:column="32">-&gt;<pos:position pos:line="101" pos:column="37"/></operator><name pos:line="101" pos:column="34">rbuf<pos:position pos:line="101" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="40">srv<pos:position pos:line="101" pos:column="43"/></name><operator pos:line="101" pos:column="43">-&gt;<pos:position pos:line="101" pos:column="48"/></operator><name pos:line="101" pos:column="45">rbuf_sz<pos:position pos:line="101" pos:column="52"/></name></name> <operator pos:line="101" pos:column="53">-<pos:position pos:line="101" pos:column="54"/></operator> <literal type="number" pos:line="101" pos:column="55">1<pos:position pos:line="101" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="101" pos:column="58">helperStatefulHandleRead<pos:position pos:line="101" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="84">srv<pos:position pos:line="101" pos:column="87"/></name></expr></argument>)<pos:position pos:line="101" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="89"/></expr_stmt>
    }<pos:position pos:line="102" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="104" pos:column="5">hlp<pos:position pos:line="104" pos:column="8"/></name><operator pos:line="104" pos:column="8">-&gt;<pos:position pos:line="104" pos:column="13"/></operator><name pos:line="104" pos:column="10">last_restart<pos:position pos:line="104" pos:column="22"/></name></name> <operator pos:line="104" pos:column="23">=<pos:position pos:line="104" pos:column="24"/></operator> <name pos:line="104" pos:column="25">squid_curtime<pos:position pos:line="104" pos:column="38"/></name></expr>;<pos:position pos:line="104" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="105" pos:column="5">safe_free<pos:position pos:line="105" pos:column="14"/></name><argument_list pos:line="105" pos:column="14">(<argument><expr><name pos:line="105" pos:column="15">shortname<pos:position pos:line="105" pos:column="24"/></name></expr></argument>)<pos:position pos:line="105" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="106" pos:column="5">safe_free<pos:position pos:line="106" pos:column="14"/></name><argument_list pos:line="106" pos:column="14">(<argument><expr><name pos:line="106" pos:column="15">procname<pos:position pos:line="106" pos:column="23"/></name></expr></argument>)<pos:position pos:line="106" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="107" pos:column="5">helperStatefulKickQueue<pos:position pos:line="107" pos:column="28"/></name><argument_list pos:line="107" pos:column="28">(<argument><expr><name pos:line="107" pos:column="29">hlp<pos:position pos:line="107" pos:column="32"/></name></expr></argument>)<pos:position pos:line="107" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="34"/></expr_stmt>
}<pos:position pos:line="108" pos:column="2"/></block></function></unit>

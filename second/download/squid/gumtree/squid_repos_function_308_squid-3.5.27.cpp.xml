<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_308_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">wccmparray<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">wchar_t<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type> <name pos:line="2" pos:column="28">str<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">wchar_t<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier><modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="50">array<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <while pos:line="4" pos:column="5">while <condition pos:line="4" pos:column="11">(<expr><operator pos:line="4" pos:column="12">*<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">array<pos:position pos:line="4" pos:column="18"/></name></expr>)<pos:position pos:line="4" pos:column="19"/></condition> <block pos:line="4" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debug<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><literal type="string" pos:line="5" pos:column="15">"Windows group: %S, Squid group: %S\n"<pos:position pos:line="5" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="55">str<pos:position pos:line="5" pos:column="58"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="60">*<pos:position pos:line="5" pos:column="61"/></operator><name pos:line="5" pos:column="61">array<pos:position pos:line="5" pos:column="66"/></name></expr></argument>)<pos:position pos:line="5" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="68"/></expr_stmt>
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><call><name pos:line="6" pos:column="13">wcscmp<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name pos:line="6" pos:column="20">str<pos:position pos:line="6" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="25">*<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">array<pos:position pos:line="6" pos:column="31"/></name></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call> <operator pos:line="6" pos:column="33">==<pos:position pos:line="6" pos:column="35"/></operator> <literal type="number" pos:line="6" pos:column="36">0<pos:position pos:line="6" pos:column="37"/></literal></expr>)<pos:position pos:line="6" pos:column="38"/></condition><then pos:line="6" pos:column="38">
            <block type="pseudo"><return pos:line="7" pos:column="13">return <expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></return></block></then></if>
        <expr_stmt><expr><operator pos:line="8" pos:column="9">++<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">array<pos:position pos:line="8" pos:column="16"/></name></expr>;<pos:position pos:line="8" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></while>
    <return pos:line="10" pos:column="5">return <expr><operator pos:line="10" pos:column="12">-<pos:position pos:line="10" pos:column="13"/></operator><literal type="number" pos:line="10" pos:column="13">1<pos:position pos:line="10" pos:column="14"/></literal></expr>;<pos:position pos:line="10" pos:column="15"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

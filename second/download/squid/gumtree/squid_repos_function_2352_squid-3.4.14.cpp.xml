<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2352_squid-3.4.14.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">headerMangler<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type>
<name><name pos:line="2" pos:column="1">HeaderManglers<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">find<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">HttpHeaderEntry<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">&amp;<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="45">e<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list> <specifier pos:line="2" pos:column="48">const<pos:position pos:line="2" pos:column="53"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// a known header with a configured ACL list</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name><name pos:line="5" pos:column="9">e<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">.<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">id<pos:position pos:line="5" pos:column="13"/></name></name> <operator pos:line="5" pos:column="14">!=<pos:position pos:line="5" pos:column="16"/></operator> <name pos:line="5" pos:column="17">HDR_OTHER<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&amp;&amp;<pos:position pos:line="5" pos:column="37"/></operator> <literal type="number" pos:line="5" pos:column="30">0<pos:position pos:line="5" pos:column="31"/></literal> <operator pos:line="5" pos:column="32">&lt;=<pos:position pos:line="5" pos:column="37"/></operator> <name><name pos:line="5" pos:column="35">e<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">.<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="37">id<pos:position pos:line="5" pos:column="39"/></name></name> <operator pos:line="5" pos:column="40">&amp;&amp;<pos:position pos:line="5" pos:column="50"/></operator> <name><name pos:line="5" pos:column="43">e<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">.<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="45">id<pos:position pos:line="5" pos:column="47"/></name></name> <operator pos:line="5" pos:column="48">&lt;<pos:position pos:line="5" pos:column="52"/></operator> <name pos:line="5" pos:column="50">HDR_ENUM_END<pos:position pos:line="5" pos:column="62"/></name> <operator pos:line="5" pos:column="63">&amp;&amp;<pos:position pos:line="5" pos:column="73"/></operator>
            <name><name pos:line="6" pos:column="13">known<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><name><name pos:line="6" pos:column="19">e<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">.<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">id<pos:position pos:line="6" pos:column="23"/></name></name></expr>]<pos:position pos:line="6" pos:column="24"/></index></name><operator pos:line="6" pos:column="24">.<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">access_list<pos:position pos:line="6" pos:column="36"/></name></expr>)<pos:position pos:line="6" pos:column="37"/></condition><then pos:line="6" pos:column="37">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><operator pos:line="7" pos:column="16">&amp;<pos:position pos:line="7" pos:column="21"/></operator><name><name pos:line="7" pos:column="17">known<pos:position pos:line="7" pos:column="22"/></name><index pos:line="7" pos:column="22">[<expr><name><name pos:line="7" pos:column="23">e<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">id<pos:position pos:line="7" pos:column="27"/></name></name></expr>]<pos:position pos:line="7" pos:column="28"/></index></name></expr>;<pos:position pos:line="7" pos:column="29"/></return></block></then></if>

    <comment type="line" pos:line="9" pos:column="5">// a custom header</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">e<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">id<pos:position pos:line="10" pos:column="13"/></name></name> <operator pos:line="10" pos:column="14">==<pos:position pos:line="10" pos:column="16"/></operator> <name pos:line="10" pos:column="17">HDR_OTHER<pos:position pos:line="10" pos:column="26"/></name></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27"> <block pos:line="10" pos:column="28">{
        <comment type="line" pos:line="11" pos:column="9">// does it have an ACL list configured?</comment>
        <comment type="line" pos:line="12" pos:column="9">// Optimize: use a name type that we do not need to convert to here</comment>
        <decl_stmt><decl><type><specifier pos:line="13" pos:column="9">const<pos:position pos:line="13" pos:column="14"/></specifier> <name><name pos:line="13" pos:column="15">ManglersByName<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">::<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">const_iterator<pos:position pos:line="13" pos:column="45"/></name></name></type> <name pos:line="13" pos:column="46">i<pos:position pos:line="13" pos:column="47"/></name> <init pos:line="13" pos:column="48">= <expr><call><name><name pos:line="13" pos:column="50">custom<pos:position pos:line="13" pos:column="56"/></name><operator pos:line="13" pos:column="56">.<pos:position pos:line="13" pos:column="57"/></operator><name pos:line="13" pos:column="57">find<pos:position pos:line="13" pos:column="61"/></name></name><argument_list pos:line="13" pos:column="61">(<argument><expr><call><name><name pos:line="13" pos:column="62">e<pos:position pos:line="13" pos:column="63"/></name><operator pos:line="13" pos:column="63">.<pos:position pos:line="13" pos:column="64"/></operator><name pos:line="13" pos:column="64">name<pos:position pos:line="13" pos:column="68"/></name><operator pos:line="13" pos:column="68">.<pos:position pos:line="13" pos:column="69"/></operator><name pos:line="13" pos:column="69">termedBuf<pos:position pos:line="13" pos:column="78"/></name></name><argument_list pos:line="13" pos:column="78">()<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="82"/></decl_stmt>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">i<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">!=<pos:position pos:line="14" pos:column="17"/></operator> <call><name><name pos:line="14" pos:column="18">custom<pos:position pos:line="14" pos:column="24"/></name><operator pos:line="14" pos:column="24">.<pos:position pos:line="14" pos:column="25"/></operator><name pos:line="14" pos:column="25">end<pos:position pos:line="14" pos:column="28"/></name></name><argument_list pos:line="14" pos:column="28">()<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="31"/></condition><then pos:line="14" pos:column="31">
            <block type="pseudo"><return pos:line="15" pos:column="13">return <expr><operator pos:line="15" pos:column="20">&amp;<pos:position pos:line="15" pos:column="25"/></operator><name><name pos:line="15" pos:column="21">i<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">second<pos:position pos:line="15" pos:column="30"/></name></name></expr>;<pos:position pos:line="15" pos:column="31"/></return></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="18" pos:column="5">// Next-to-last resort: "Other" rules match any custom header</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name><name pos:line="19" pos:column="9">e<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">.<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">id<pos:position pos:line="19" pos:column="13"/></name></name> <operator pos:line="19" pos:column="14">==<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">HDR_OTHER<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">&amp;&amp;<pos:position pos:line="19" pos:column="37"/></operator> <name><name pos:line="19" pos:column="30">known<pos:position pos:line="19" pos:column="35"/></name><index pos:line="19" pos:column="35">[<expr><name pos:line="19" pos:column="36">HDR_OTHER<pos:position pos:line="19" pos:column="45"/></name></expr>]<pos:position pos:line="19" pos:column="46"/></index></name><operator pos:line="19" pos:column="46">.<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="47">access_list<pos:position pos:line="19" pos:column="58"/></name></expr>)<pos:position pos:line="19" pos:column="59"/></condition><then pos:line="19" pos:column="59">
        <block type="pseudo"><return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">&amp;<pos:position pos:line="20" pos:column="21"/></operator><name><name pos:line="20" pos:column="17">known<pos:position pos:line="20" pos:column="22"/></name><index pos:line="20" pos:column="22">[<expr><name pos:line="20" pos:column="23">HDR_OTHER<pos:position pos:line="20" pos:column="32"/></name></expr>]<pos:position pos:line="20" pos:column="33"/></index></name></expr>;<pos:position pos:line="20" pos:column="34"/></return></block></then></if>

    <comment type="line" pos:line="22" pos:column="5">// Last resort: "All" rules match any header</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">all<pos:position pos:line="23" pos:column="12"/></name><operator pos:line="23" pos:column="12">.<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">access_list<pos:position pos:line="23" pos:column="24"/></name></name></expr>)<pos:position pos:line="23" pos:column="25"/></condition><then pos:line="23" pos:column="25">
        <block type="pseudo"><return pos:line="24" pos:column="9">return <expr><operator pos:line="24" pos:column="16">&amp;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="17">all<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></return></block></then></if>

    <return pos:line="26" pos:column="5">return <expr><name pos:line="26" pos:column="12">NULL<pos:position pos:line="26" pos:column="16"/></name></expr>;<pos:position pos:line="26" pos:column="17"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

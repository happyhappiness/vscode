<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2163_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">comm_err_t<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">comm_select<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">int<pos:position pos:line="2" pos:column="16"/></name></type> <name pos:line="2" pos:column="17">msec<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="22"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">num<pos:position pos:line="4" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name></decl>,<decl><type ref="prev"/><name pos:line="4" pos:column="16">fd<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">fde<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">F<pos:position pos:line="5" pos:column="11"/></name></decl>;<pos:position pos:line="5" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">PF<pos:position pos:line="6" pos:column="7"/></name> <modifier pos:line="6" pos:column="8">*<pos:position pos:line="6" pos:column="9"/></modifier></type><name pos:line="6" pos:column="9">hdl<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">epoll_event<pos:position pos:line="8" pos:column="23"/></name></name> <modifier pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></modifier></type><name pos:line="8" pos:column="25">cevents<pos:position pos:line="8" pos:column="32"/></name></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">PROF_start<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">comm_check_incoming<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="37"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">msec<pos:position pos:line="12" pos:column="13"/></name> <operator pos:line="12" pos:column="14">&gt;<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="16">max_poll_time<pos:position pos:line="12" pos:column="29"/></name></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="9">msec<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <name pos:line="13" pos:column="16">max_poll_time<pos:position pos:line="13" pos:column="29"/></name></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt></block></then></if>

    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init pos:line="15" pos:column="10">;<pos:position pos:line="15" pos:column="11"/></init><condition pos:line="15" pos:column="11">;<pos:position pos:line="15" pos:column="12"/></condition><incr/>)<pos:position pos:line="15" pos:column="13"/></control> <block pos:line="15" pos:column="14">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">num<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <call><name pos:line="16" pos:column="15">epoll_wait<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">kdpfd<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">pevents<pos:position pos:line="16" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="42">SQUID_MAXFD<pos:position pos:line="16" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="55">msec<pos:position pos:line="16" pos:column="59"/></name></expr></argument>)<pos:position pos:line="16" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="17" pos:column="9">++<pos:position pos:line="17" pos:column="11"/></operator><name><name pos:line="17" pos:column="11">statCounter<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">.<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">select_loops<pos:position pos:line="17" pos:column="35"/></name></name></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">num<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">&gt;=<pos:position pos:line="19" pos:column="22"/></operator> <literal type="number" pos:line="19" pos:column="20">0<pos:position pos:line="19" pos:column="21"/></literal></expr>)<pos:position pos:line="19" pos:column="22"/></condition><then pos:line="19" pos:column="22">
            <block type="pseudo"><break pos:line="20" pos:column="13">break;<pos:position pos:line="20" pos:column="19"/></break></block></then></if>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><call><name pos:line="22" pos:column="13">ignoreErrno<pos:position pos:line="22" pos:column="24"/></name><argument_list pos:line="22" pos:column="24">(<argument><expr><name pos:line="22" pos:column="25">errno<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="32"/></condition><then pos:line="22" pos:column="32">
            <block type="pseudo"><break pos:line="23" pos:column="13">break;<pos:position pos:line="23" pos:column="19"/></break></block></then></if>

        <expr_stmt><expr><call><name pos:line="25" pos:column="9">getCurrentTime<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">()<pos:position pos:line="25" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="27" pos:column="9">PROF_stop<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name pos:line="27" pos:column="19">comm_check_incoming<pos:position pos:line="27" pos:column="38"/></name></expr></argument>)<pos:position pos:line="27" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>

        <return pos:line="29" pos:column="9">return <expr><name pos:line="29" pos:column="16">COMM_ERROR<pos:position pos:line="29" pos:column="26"/></name></expr>;<pos:position pos:line="29" pos:column="27"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">PROF_stop<pos:position pos:line="32" pos:column="14"/></name><argument_list pos:line="32" pos:column="14">(<argument><expr><name pos:line="32" pos:column="15">comm_check_incoming<pos:position pos:line="32" pos:column="34"/></name></expr></argument>)<pos:position pos:line="32" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">getCurrentTime<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">()<pos:position pos:line="33" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">statHistCount<pos:position pos:line="35" pos:column="18"/></name><argument_list pos:line="35" pos:column="18">(<argument><expr><operator pos:line="35" pos:column="19">&amp;<pos:position pos:line="35" pos:column="24"/></operator><name><name pos:line="35" pos:column="20">statCounter<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">.<pos:position pos:line="35" pos:column="32"/></operator><name pos:line="35" pos:column="32">select_fds_hist<pos:position pos:line="35" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="49">num<pos:position pos:line="35" pos:column="52"/></name></expr></argument>)<pos:position pos:line="35" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="54"/></expr_stmt>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">num<pos:position pos:line="37" pos:column="12"/></name> <operator pos:line="37" pos:column="13">==<pos:position pos:line="37" pos:column="15"/></operator> <literal type="number" pos:line="37" pos:column="16">0<pos:position pos:line="37" pos:column="17"/></literal></expr>)<pos:position pos:line="37" pos:column="18"/></condition><then pos:line="37" pos:column="18">
        <block type="pseudo"><return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">COMM_TIMEOUT<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></return></block></then></if>		<comment type="block" pos:line="38" pos:column="41">/* No error.. */</comment>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">PROF_start<pos:position pos:line="40" pos:column="15"/></name><argument_list pos:line="40" pos:column="15">(<argument><expr><name pos:line="40" pos:column="16">comm_handle_ready_fd<pos:position pos:line="40" pos:column="36"/></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>

    <for pos:line="42" pos:column="5">for <control pos:line="42" pos:column="9">(<init><expr><name pos:line="42" pos:column="10">i<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <literal type="number" pos:line="42" pos:column="14">0<pos:position pos:line="42" pos:column="15"/></literal></expr><operator pos:line="42" pos:column="15">,<pos:position pos:line="42" pos:column="16"/></operator> <expr><name pos:line="42" pos:column="17">cevents<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <name pos:line="42" pos:column="27">pevents<pos:position pos:line="42" pos:column="34"/></name></expr>;<pos:position pos:line="42" pos:column="35"/></init> <condition><expr><name pos:line="42" pos:column="36">i<pos:position pos:line="42" pos:column="37"/></name> <operator pos:line="42" pos:column="38">&lt;<pos:position pos:line="42" pos:column="42"/></operator> <name pos:line="42" pos:column="40">num<pos:position pos:line="42" pos:column="43"/></name></expr>;<pos:position pos:line="42" pos:column="44"/></condition> <incr><expr><name pos:line="42" pos:column="45">i<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">++<pos:position pos:line="42" pos:column="48"/></operator></expr><operator pos:line="42" pos:column="48">,<pos:position pos:line="42" pos:column="49"/></operator> <expr><name pos:line="42" pos:column="50">cevents<pos:position pos:line="42" pos:column="57"/></name><operator pos:line="42" pos:column="57">++<pos:position pos:line="42" pos:column="59"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="60"/></control> <block pos:line="42" pos:column="61">{
        <expr_stmt><expr><name pos:line="43" pos:column="9">fd<pos:position pos:line="43" pos:column="11"/></name> <operator pos:line="43" pos:column="12">=<pos:position pos:line="43" pos:column="13"/></operator> <name><name pos:line="43" pos:column="14">cevents<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">-&gt;<pos:position pos:line="43" pos:column="26"/></operator><name pos:line="43" pos:column="23">data<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">.<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="28">fd<pos:position pos:line="43" pos:column="30"/></name></name></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="44" pos:column="9">F<pos:position pos:line="44" pos:column="10"/></name> <operator pos:line="44" pos:column="11">=<pos:position pos:line="44" pos:column="12"/></operator> <operator pos:line="44" pos:column="13">&amp;<pos:position pos:line="44" pos:column="18"/></operator><name><name pos:line="44" pos:column="14">fd_table<pos:position pos:line="44" pos:column="22"/></name><index pos:line="44" pos:column="22">[<expr><name pos:line="44" pos:column="23">fd<pos:position pos:line="44" pos:column="25"/></name></expr>]<pos:position pos:line="44" pos:column="26"/></index></name></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">debugs<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><literal type="number" pos:line="45" pos:column="16">5<pos:position pos:line="45" pos:column="17"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="45" pos:column="19">DEBUG_EPOLL<pos:position pos:line="45" pos:column="30"/></name></expr> ?<pos:position pos:line="45" pos:column="32"/></condition><then pos:line="45" pos:column="32"> <expr><literal type="number" pos:line="45" pos:column="33">0<pos:position pos:line="45" pos:column="34"/></literal></expr> <pos:position pos:line="45" pos:column="35"/></then><else pos:line="45" pos:column="35">: <expr><literal type="number" pos:line="45" pos:column="37">8<pos:position pos:line="45" pos:column="38"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="40">"comm_select(): got FD "<pos:position pos:line="45" pos:column="64"/></literal> <operator pos:line="45" pos:column="65">&lt;&lt;<pos:position pos:line="45" pos:column="73"/></operator> <name pos:line="45" pos:column="68">fd<pos:position pos:line="45" pos:column="70"/></name> <operator pos:line="45" pos:column="71">&lt;&lt;<pos:position pos:line="45" pos:column="79"/></operator> <literal type="string" pos:line="45" pos:column="74">" events="<pos:position pos:line="45" pos:column="84"/></literal> <operator pos:line="45" pos:column="85">&lt;&lt;<pos:position pos:line="45" pos:column="93"/></operator>
               <name><name pos:line="46" pos:column="16">std<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">::<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">hex<pos:position pos:line="46" pos:column="24"/></name></name> <operator pos:line="46" pos:column="25">&lt;&lt;<pos:position pos:line="46" pos:column="33"/></operator> <name><name pos:line="46" pos:column="28">cevents<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">-&gt;<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="37">events<pos:position pos:line="46" pos:column="43"/></name></name> <operator pos:line="46" pos:column="44">&lt;&lt;<pos:position pos:line="46" pos:column="52"/></operator> <literal type="string" pos:line="46" pos:column="47">" monitoring="<pos:position pos:line="46" pos:column="61"/></literal> <operator pos:line="46" pos:column="62">&lt;&lt;<pos:position pos:line="46" pos:column="70"/></operator> <name><name pos:line="46" pos:column="65">F<pos:position pos:line="46" pos:column="66"/></name><operator pos:line="46" pos:column="66">-&gt;<pos:position pos:line="46" pos:column="71"/></operator><name pos:line="46" pos:column="68">epoll_state<pos:position pos:line="46" pos:column="79"/></name></name> <operator pos:line="46" pos:column="80">&lt;&lt;<pos:position pos:line="46" pos:column="88"/></operator>
               <literal type="string" pos:line="47" pos:column="16">" F-&gt;read_handler="<pos:position pos:line="47" pos:column="38"/></literal> <operator pos:line="47" pos:column="36">&lt;&lt;<pos:position pos:line="47" pos:column="44"/></operator> <name><name pos:line="47" pos:column="39">F<pos:position pos:line="47" pos:column="40"/></name><operator pos:line="47" pos:column="40">-&gt;<pos:position pos:line="47" pos:column="45"/></operator><name pos:line="47" pos:column="42">read_handler<pos:position pos:line="47" pos:column="54"/></name></name> <operator pos:line="47" pos:column="55">&lt;&lt;<pos:position pos:line="47" pos:column="63"/></operator> <literal type="string" pos:line="47" pos:column="58">" F-&gt;write_handler="<pos:position pos:line="47" pos:column="81"/></literal> <operator pos:line="47" pos:column="79">&lt;&lt;<pos:position pos:line="47" pos:column="87"/></operator> <name><name pos:line="47" pos:column="82">F<pos:position pos:line="47" pos:column="83"/></name><operator pos:line="47" pos:column="83">-&gt;<pos:position pos:line="47" pos:column="88"/></operator><name pos:line="47" pos:column="85">write_handler<pos:position pos:line="47" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="100"/></expr_stmt>

        <comment type="line" pos:line="49" pos:column="9">// TODO: add EPOLLPRI??</comment>

        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name><name pos:line="51" pos:column="13">cevents<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">-&gt;<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="22">events<pos:position pos:line="51" pos:column="28"/></name></name> <operator pos:line="51" pos:column="29">&amp;<pos:position pos:line="51" pos:column="34"/></operator> <operator pos:line="51" pos:column="31">(<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="32">EPOLLIN<pos:position pos:line="51" pos:column="39"/></name><operator pos:line="51" pos:column="39">|<pos:position pos:line="51" pos:column="40"/></operator><name pos:line="51" pos:column="40">EPOLLHUP<pos:position pos:line="51" pos:column="48"/></name><operator pos:line="51" pos:column="48">|<pos:position pos:line="51" pos:column="49"/></operator><name pos:line="51" pos:column="49">EPOLLERR<pos:position pos:line="51" pos:column="57"/></name><operator pos:line="51" pos:column="57">)<pos:position pos:line="51" pos:column="58"/></operator> <operator pos:line="51" pos:column="59">||<pos:position pos:line="51" pos:column="61"/></operator> <name><name pos:line="51" pos:column="62">F<pos:position pos:line="51" pos:column="63"/></name><operator pos:line="51" pos:column="63">-&gt;<pos:position pos:line="51" pos:column="68"/></operator><name pos:line="51" pos:column="65">flags<pos:position pos:line="51" pos:column="70"/></name><operator pos:line="51" pos:column="70">.<pos:position pos:line="51" pos:column="71"/></operator><name pos:line="51" pos:column="71">read_pending<pos:position pos:line="51" pos:column="83"/></name></name></expr>)<pos:position pos:line="51" pos:column="84"/></condition><then pos:line="51" pos:column="84"> <block pos:line="51" pos:column="85">{
            <if pos:line="52" pos:column="13">if <condition pos:line="52" pos:column="16">(<expr><operator pos:line="52" pos:column="17">(<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="18">hdl<pos:position pos:line="52" pos:column="21"/></name> <operator pos:line="52" pos:column="22">=<pos:position pos:line="52" pos:column="23"/></operator> <name><name pos:line="52" pos:column="24">F<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">read_handler<pos:position pos:line="52" pos:column="39"/></name></name><operator pos:line="52" pos:column="39">)<pos:position pos:line="52" pos:column="40"/></operator> <operator pos:line="52" pos:column="41">!=<pos:position pos:line="52" pos:column="43"/></operator> <name pos:line="52" pos:column="44">NULL<pos:position pos:line="52" pos:column="48"/></name></expr>)<pos:position pos:line="52" pos:column="49"/></condition><then pos:line="52" pos:column="49"> <block pos:line="52" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="53" pos:column="17">debugs<pos:position pos:line="53" pos:column="23"/></name><argument_list pos:line="53" pos:column="23">(<argument><expr><literal type="number" pos:line="53" pos:column="24">5<pos:position pos:line="53" pos:column="25"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="53" pos:column="27">DEBUG_EPOLL<pos:position pos:line="53" pos:column="38"/></name></expr> ?<pos:position pos:line="53" pos:column="40"/></condition><then pos:line="53" pos:column="40"> <expr><literal type="number" pos:line="53" pos:column="41">0<pos:position pos:line="53" pos:column="42"/></literal></expr> <pos:position pos:line="53" pos:column="43"/></then><else pos:line="53" pos:column="43">: <expr><literal type="number" pos:line="53" pos:column="45">8<pos:position pos:line="53" pos:column="46"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="48">"comm_select(): Calling read handler on FD "<pos:position pos:line="53" pos:column="92"/></literal> <operator pos:line="53" pos:column="93">&lt;&lt;<pos:position pos:line="53" pos:column="101"/></operator> <name pos:line="53" pos:column="96">fd<pos:position pos:line="53" pos:column="98"/></name></expr></argument>)<pos:position pos:line="53" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="100"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="54" pos:column="17">PROF_start<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><name pos:line="54" pos:column="28">comm_write_handler<pos:position pos:line="54" pos:column="46"/></name></expr></argument>)<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="48"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="55" pos:column="17">F<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">flags<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">.<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="26">read_pending<pos:position pos:line="55" pos:column="38"/></name></name> <operator pos:line="55" pos:column="39">=<pos:position pos:line="55" pos:column="40"/></operator> <literal type="number" pos:line="55" pos:column="41">0<pos:position pos:line="55" pos:column="42"/></literal></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="56" pos:column="17">F<pos:position pos:line="56" pos:column="18"/></name><operator pos:line="56" pos:column="18">-&gt;<pos:position pos:line="56" pos:column="23"/></operator><name pos:line="56" pos:column="20">read_handler<pos:position pos:line="56" pos:column="32"/></name></name> <operator pos:line="56" pos:column="33">=<pos:position pos:line="56" pos:column="34"/></operator> <name pos:line="56" pos:column="35">NULL<pos:position pos:line="56" pos:column="39"/></name></expr>;<pos:position pos:line="56" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="57" pos:column="17">hdl<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">fd<pos:position pos:line="57" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="25">F<pos:position pos:line="57" pos:column="26"/></name><operator pos:line="57" pos:column="26">-&gt;<pos:position pos:line="57" pos:column="31"/></operator><name pos:line="57" pos:column="28">read_data<pos:position pos:line="57" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="58" pos:column="17">PROF_stop<pos:position pos:line="58" pos:column="26"/></name><argument_list pos:line="58" pos:column="26">(<argument><expr><name pos:line="58" pos:column="27">comm_write_handler<pos:position pos:line="58" pos:column="45"/></name></expr></argument>)<pos:position pos:line="58" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="59" pos:column="17">statCounter<pos:position pos:line="59" pos:column="28"/></name><operator pos:line="59" pos:column="28">.<pos:position pos:line="59" pos:column="29"/></operator><name pos:line="59" pos:column="29">select_fds<pos:position pos:line="59" pos:column="39"/></name></name><operator pos:line="59" pos:column="39">++<pos:position pos:line="59" pos:column="41"/></operator></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="60" pos:column="14"/></block></then> <else pos:line="60" pos:column="15">else <block pos:line="60" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="61" pos:column="17">debugs<pos:position pos:line="61" pos:column="23"/></name><argument_list pos:line="61" pos:column="23">(<argument><expr><literal type="number" pos:line="61" pos:column="24">5<pos:position pos:line="61" pos:column="25"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="61" pos:column="27">DEBUG_EPOLL<pos:position pos:line="61" pos:column="38"/></name></expr> ?<pos:position pos:line="61" pos:column="40"/></condition><then pos:line="61" pos:column="40"> <expr><literal type="number" pos:line="61" pos:column="41">0<pos:position pos:line="61" pos:column="42"/></literal></expr> <pos:position pos:line="61" pos:column="43"/></then><else pos:line="61" pos:column="43">: <expr><literal type="number" pos:line="61" pos:column="45">8<pos:position pos:line="61" pos:column="46"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="48">"comm_select(): no read handler for FD "<pos:position pos:line="61" pos:column="88"/></literal> <operator pos:line="61" pos:column="89">&lt;&lt;<pos:position pos:line="61" pos:column="97"/></operator> <name pos:line="61" pos:column="92">fd<pos:position pos:line="61" pos:column="94"/></name></expr></argument>)<pos:position pos:line="61" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="96"/></expr_stmt>
                <comment type="line" pos:line="62" pos:column="17">// remove interest since no handler exist for this event.</comment>
                <expr_stmt><expr><call><name pos:line="63" pos:column="17">commSetSelect<pos:position pos:line="63" pos:column="30"/></name><argument_list pos:line="63" pos:column="30">(<argument><expr><name pos:line="63" pos:column="31">fd<pos:position pos:line="63" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="35">COMM_SELECT_READ<pos:position pos:line="63" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="53">NULL<pos:position pos:line="63" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="59">NULL<pos:position pos:line="63" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="63" pos:column="65">0<pos:position pos:line="63" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="68"/></expr_stmt>
            }<pos:position pos:line="64" pos:column="14"/></block></else></if>
        }<pos:position pos:line="65" pos:column="10"/></block></then></if>

        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><name><name pos:line="67" pos:column="13">cevents<pos:position pos:line="67" pos:column="20"/></name><operator pos:line="67" pos:column="20">-&gt;<pos:position pos:line="67" pos:column="25"/></operator><name pos:line="67" pos:column="22">events<pos:position pos:line="67" pos:column="28"/></name></name> <operator pos:line="67" pos:column="29">&amp;<pos:position pos:line="67" pos:column="34"/></operator> <operator pos:line="67" pos:column="31">(<pos:position pos:line="67" pos:column="32"/></operator><name pos:line="67" pos:column="32">EPOLLOUT<pos:position pos:line="67" pos:column="40"/></name><operator pos:line="67" pos:column="40">|<pos:position pos:line="67" pos:column="41"/></operator><name pos:line="67" pos:column="41">EPOLLHUP<pos:position pos:line="67" pos:column="49"/></name><operator pos:line="67" pos:column="49">|<pos:position pos:line="67" pos:column="50"/></operator><name pos:line="67" pos:column="50">EPOLLERR<pos:position pos:line="67" pos:column="58"/></name><operator pos:line="67" pos:column="58">)<pos:position pos:line="67" pos:column="59"/></operator></expr>)<pos:position pos:line="67" pos:column="60"/></condition><then pos:line="67" pos:column="60"> <block pos:line="67" pos:column="61">{
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><operator pos:line="68" pos:column="17">(<pos:position pos:line="68" pos:column="18"/></operator><name pos:line="68" pos:column="18">hdl<pos:position pos:line="68" pos:column="21"/></name> <operator pos:line="68" pos:column="22">=<pos:position pos:line="68" pos:column="23"/></operator> <name><name pos:line="68" pos:column="24">F<pos:position pos:line="68" pos:column="25"/></name><operator pos:line="68" pos:column="25">-&gt;<pos:position pos:line="68" pos:column="30"/></operator><name pos:line="68" pos:column="27">write_handler<pos:position pos:line="68" pos:column="40"/></name></name><operator pos:line="68" pos:column="40">)<pos:position pos:line="68" pos:column="41"/></operator> <operator pos:line="68" pos:column="42">!=<pos:position pos:line="68" pos:column="44"/></operator> <name pos:line="68" pos:column="45">NULL<pos:position pos:line="68" pos:column="49"/></name></expr>)<pos:position pos:line="68" pos:column="50"/></condition><then pos:line="68" pos:column="50"> <block pos:line="68" pos:column="51">{
                <expr_stmt><expr><call><name pos:line="69" pos:column="17">debugs<pos:position pos:line="69" pos:column="23"/></name><argument_list pos:line="69" pos:column="23">(<argument><expr><literal type="number" pos:line="69" pos:column="24">5<pos:position pos:line="69" pos:column="25"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="69" pos:column="27">DEBUG_EPOLL<pos:position pos:line="69" pos:column="38"/></name></expr> ?<pos:position pos:line="69" pos:column="40"/></condition><then pos:line="69" pos:column="40"> <expr><literal type="number" pos:line="69" pos:column="41">0<pos:position pos:line="69" pos:column="42"/></literal></expr> <pos:position pos:line="69" pos:column="43"/></then><else pos:line="69" pos:column="43">: <expr><literal type="number" pos:line="69" pos:column="45">8<pos:position pos:line="69" pos:column="46"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="48">"comm_select(): Calling write handler on FD "<pos:position pos:line="69" pos:column="93"/></literal> <operator pos:line="69" pos:column="94">&lt;&lt;<pos:position pos:line="69" pos:column="102"/></operator> <name pos:line="69" pos:column="97">fd<pos:position pos:line="69" pos:column="99"/></name></expr></argument>)<pos:position pos:line="69" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="101"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="70" pos:column="17">PROF_start<pos:position pos:line="70" pos:column="27"/></name><argument_list pos:line="70" pos:column="27">(<argument><expr><name pos:line="70" pos:column="28">comm_read_handler<pos:position pos:line="70" pos:column="45"/></name></expr></argument>)<pos:position pos:line="70" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="71" pos:column="17">F<pos:position pos:line="71" pos:column="18"/></name><operator pos:line="71" pos:column="18">-&gt;<pos:position pos:line="71" pos:column="23"/></operator><name pos:line="71" pos:column="20">write_handler<pos:position pos:line="71" pos:column="33"/></name></name> <operator pos:line="71" pos:column="34">=<pos:position pos:line="71" pos:column="35"/></operator> <name pos:line="71" pos:column="36">NULL<pos:position pos:line="71" pos:column="40"/></name></expr>;<pos:position pos:line="71" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="72" pos:column="17">hdl<pos:position pos:line="72" pos:column="20"/></name><argument_list pos:line="72" pos:column="20">(<argument><expr><name pos:line="72" pos:column="21">fd<pos:position pos:line="72" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="72" pos:column="25">F<pos:position pos:line="72" pos:column="26"/></name><operator pos:line="72" pos:column="26">-&gt;<pos:position pos:line="72" pos:column="31"/></operator><name pos:line="72" pos:column="28">write_data<pos:position pos:line="72" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="73" pos:column="17">PROF_stop<pos:position pos:line="73" pos:column="26"/></name><argument_list pos:line="73" pos:column="26">(<argument><expr><name pos:line="73" pos:column="27">comm_read_handler<pos:position pos:line="73" pos:column="44"/></name></expr></argument>)<pos:position pos:line="73" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="46"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="74" pos:column="17">statCounter<pos:position pos:line="74" pos:column="28"/></name><operator pos:line="74" pos:column="28">.<pos:position pos:line="74" pos:column="29"/></operator><name pos:line="74" pos:column="29">select_fds<pos:position pos:line="74" pos:column="39"/></name></name><operator pos:line="74" pos:column="39">++<pos:position pos:line="74" pos:column="41"/></operator></expr>;<pos:position pos:line="74" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="75" pos:column="14"/></block></then> <else pos:line="75" pos:column="15">else <block pos:line="75" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="76" pos:column="17">debugs<pos:position pos:line="76" pos:column="23"/></name><argument_list pos:line="76" pos:column="23">(<argument><expr><literal type="number" pos:line="76" pos:column="24">5<pos:position pos:line="76" pos:column="25"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="76" pos:column="27">DEBUG_EPOLL<pos:position pos:line="76" pos:column="38"/></name></expr> ?<pos:position pos:line="76" pos:column="40"/></condition><then pos:line="76" pos:column="40"> <expr><literal type="number" pos:line="76" pos:column="41">0<pos:position pos:line="76" pos:column="42"/></literal></expr> <pos:position pos:line="76" pos:column="43"/></then><else pos:line="76" pos:column="43">: <expr><literal type="number" pos:line="76" pos:column="45">8<pos:position pos:line="76" pos:column="46"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="48">"comm_select(): no write handler for FD "<pos:position pos:line="76" pos:column="89"/></literal> <operator pos:line="76" pos:column="90">&lt;&lt;<pos:position pos:line="76" pos:column="98"/></operator> <name pos:line="76" pos:column="93">fd<pos:position pos:line="76" pos:column="95"/></name></expr></argument>)<pos:position pos:line="76" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="97"/></expr_stmt>
                <comment type="line" pos:line="77" pos:column="17">// remove interest since no handler exist for this event.</comment>
                <expr_stmt><expr><call><name pos:line="78" pos:column="17">commSetSelect<pos:position pos:line="78" pos:column="30"/></name><argument_list pos:line="78" pos:column="30">(<argument><expr><name pos:line="78" pos:column="31">fd<pos:position pos:line="78" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="35">COMM_SELECT_WRITE<pos:position pos:line="78" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="54">NULL<pos:position pos:line="78" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="60">NULL<pos:position pos:line="78" pos:column="64"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="66">0<pos:position pos:line="78" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="69"/></expr_stmt>
            }<pos:position pos:line="79" pos:column="14"/></block></else></if>
        }<pos:position pos:line="80" pos:column="10"/></block></then></if>
    }<pos:position pos:line="81" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="83" pos:column="5">PROF_stop<pos:position pos:line="83" pos:column="14"/></name><argument_list pos:line="83" pos:column="14">(<argument><expr><name pos:line="83" pos:column="15">comm_handle_ready_fd<pos:position pos:line="83" pos:column="35"/></name></expr></argument>)<pos:position pos:line="83" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="37"/></expr_stmt>

    <return pos:line="85" pos:column="5">return <expr><name pos:line="85" pos:column="12">COMM_OK<pos:position pos:line="85" pos:column="19"/></name></expr>;<pos:position pos:line="85" pos:column="20"/></return>
}<pos:position pos:line="86" pos:column="2"/></block></function></unit>

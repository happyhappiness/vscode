<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1426_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">mcastSetTtl<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">int<pos:position pos:line="2" pos:column="16"/></name></type> <name pos:line="2" pos:column="17">fd<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name></type> <name pos:line="2" pos:column="25">mcast_ttl<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:ifdef pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">ifdef<pos:position pos:line="4" pos:column="7"/></cpp:directive> <name pos:line="4" pos:column="8">IP_MULTICAST_TTL<pos:position pos:line="4" pos:column="24"/></name></cpp:ifdef>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">ttl<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><operator pos:line="5" pos:column="16">(<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">)<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">mcast_ttl<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">setsockopt<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">fd<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="24">IPPROTO_IP<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">IP_MULTICAST_TTL<pos:position pos:line="7" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="54">&amp;<pos:position pos:line="7" pos:column="59"/></operator><name pos:line="7" pos:column="55">ttl<pos:position pos:line="7" pos:column="58"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="60">1<pos:position pos:line="7" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="62"/></argument_list></call> <operator pos:line="7" pos:column="63">&lt;<pos:position pos:line="7" pos:column="67"/></operator> <literal type="number" pos:line="7" pos:column="65">0<pos:position pos:line="7" pos:column="66"/></literal></expr>)<pos:position pos:line="7" pos:column="67"/></condition><then pos:line="7" pos:column="67">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">50<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="20">DBG_IMPORTANT<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="35">"comm_set_mcast_ttl: FD "<pos:position pos:line="8" pos:column="60"/></literal> <operator pos:line="8" pos:column="61">&lt;&lt;<pos:position pos:line="8" pos:column="69"/></operator> <name pos:line="8" pos:column="64">fd<pos:position pos:line="8" pos:column="66"/></name> <operator pos:line="8" pos:column="67">&lt;&lt;<pos:position pos:line="8" pos:column="75"/></operator> <literal type="string" pos:line="8" pos:column="70">", TTL: "<pos:position pos:line="8" pos:column="79"/></literal> <operator pos:line="8" pos:column="80">&lt;&lt;<pos:position pos:line="8" pos:column="88"/></operator> <name pos:line="8" pos:column="83">mcast_ttl<pos:position pos:line="8" pos:column="92"/></name> <operator pos:line="8" pos:column="93">&lt;&lt;<pos:position pos:line="8" pos:column="101"/></operator> <literal type="string" pos:line="8" pos:column="96">": "<pos:position pos:line="8" pos:column="100"/></literal> <operator pos:line="8" pos:column="101">&lt;&lt;<pos:position pos:line="8" pos:column="109"/></operator> <call><name pos:line="8" pos:column="104">xstrerror<pos:position pos:line="8" pos:column="113"/></name><argument_list pos:line="8" pos:column="113">()<pos:position pos:line="8" pos:column="115"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="117"/></expr_stmt></block></then></if>

<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="12" pos:column="5">return <expr><literal type="number" pos:line="12" pos:column="12">0<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

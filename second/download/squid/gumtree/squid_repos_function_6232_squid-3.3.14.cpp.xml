<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6232_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">TypedMsgHdr<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">putRaw<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">void<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">raw<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">size_t<pos:position pos:line="2" pos:column="49"/></name></type> <name pos:line="2" pos:column="50">size<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">size<pos:position pos:line="4" pos:column="13"/></name> <operator pos:line="4" pos:column="14">&gt;<pos:position pos:line="4" pos:column="18"/></operator> <literal type="number" pos:line="4" pos:column="16">0<pos:position pos:line="4" pos:column="17"/></literal></expr>)<pos:position pos:line="4" pos:column="18"/></condition><then pos:line="4" pos:column="18"> <block pos:line="4" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">Must<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><name pos:line="5" pos:column="14">size<pos:position pos:line="5" pos:column="18"/></name> <operator pos:line="5" pos:column="19">&lt;=<pos:position pos:line="5" pos:column="24"/></operator> <sizeof pos:line="5" pos:column="22">sizeof<argument_list pos:line="5" pos:column="28">(<argument><expr><name><name pos:line="5" pos:column="29">data<pos:position pos:line="5" pos:column="33"/></name><operator pos:line="5" pos:column="33">.<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="34">raw<pos:position pos:line="5" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></sizeof> <operator pos:line="5" pos:column="39">-<pos:position pos:line="5" pos:column="40"/></operator> <name><name pos:line="5" pos:column="41">data<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">.<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">size<pos:position pos:line="5" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">memcpy<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name><name pos:line="6" pos:column="16">data<pos:position pos:line="6" pos:column="20"/></name><operator pos:line="6" pos:column="20">.<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="21">raw<pos:position pos:line="6" pos:column="24"/></name></name> <operator pos:line="6" pos:column="25">+<pos:position pos:line="6" pos:column="26"/></operator> <name><name pos:line="6" pos:column="27">data<pos:position pos:line="6" pos:column="31"/></name><operator pos:line="6" pos:column="31">.<pos:position pos:line="6" pos:column="32"/></operator><name pos:line="6" pos:column="32">size<pos:position pos:line="6" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="38">raw<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="43">size<pos:position pos:line="6" pos:column="47"/></name></expr></argument>)<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">data<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">.<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">size<pos:position pos:line="7" pos:column="18"/></name></name> <operator pos:line="7" pos:column="19">+=<pos:position pos:line="7" pos:column="21"/></operator> <name pos:line="7" pos:column="22">size<pos:position pos:line="7" pos:column="26"/></name></expr>;<pos:position pos:line="7" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

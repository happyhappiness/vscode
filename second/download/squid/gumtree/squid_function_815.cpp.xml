<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_815.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Negotiate<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">UserRequest<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">HandleReply<pos:position pos:line="2" pos:column="42"/></name></name><parameter_list pos:line="2" pos:column="42">(<parameter><decl><type><name pos:line="2" pos:column="43">void<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">data<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">void<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">*<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="61">lastserver<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="73">char<pos:position pos:line="2" pos:column="77"/></name> <modifier pos:line="2" pos:column="78">*<pos:position pos:line="2" pos:column="79"/></modifier></type><name pos:line="2" pos:column="79">reply<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="85"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Auth<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">::<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">StateData<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">r<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><cast type="static" pos:line="4" pos:column="26">static_cast<argument_list type="generic" pos:line="4" pos:column="37">&lt;<argument><expr><name><name pos:line="4" pos:column="38">Auth<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">::<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">StateData<pos:position pos:line="4" pos:column="53"/></name></name> <operator pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="59"/></argument_list><argument_list pos:line="4" pos:column="56">(<argument><expr><name pos:line="4" pos:column="57">data<pos:position pos:line="4" pos:column="61"/></name></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="63"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">blob<pos:position pos:line="6" pos:column="15"/></name></decl>, <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="18">arg<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">29<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="16">8<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="19">HERE<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">&lt;&lt;<pos:position pos:line="8" pos:column="32"/></operator> <literal type="string" pos:line="8" pos:column="27">"helper: '"<pos:position pos:line="8" pos:column="38"/></literal> <operator pos:line="8" pos:column="39">&lt;&lt;<pos:position pos:line="8" pos:column="47"/></operator> <name pos:line="8" pos:column="42">lastserver<pos:position pos:line="8" pos:column="52"/></name> <operator pos:line="8" pos:column="53">&lt;&lt;<pos:position pos:line="8" pos:column="61"/></operator> <literal type="string" pos:line="8" pos:column="56">"' sent us '"<pos:position pos:line="8" pos:column="69"/></literal> <operator pos:line="8" pos:column="70">&lt;&lt;<pos:position pos:line="8" pos:column="78"/></operator> <operator pos:line="8" pos:column="73">(<pos:position pos:line="8" pos:column="74"/></operator><ternary><condition><expr><name pos:line="8" pos:column="74">reply<pos:position pos:line="8" pos:column="79"/></name></expr> ?<pos:position pos:line="8" pos:column="81"/></condition><then pos:line="8" pos:column="81"> <expr><name pos:line="8" pos:column="82">reply<pos:position pos:line="8" pos:column="87"/></name></expr> <pos:position pos:line="8" pos:column="88"/></then><else pos:line="8" pos:column="88">: <expr><literal type="string" pos:line="8" pos:column="90">"&lt;NULL&gt;"<pos:position pos:line="8" pos:column="104"/></literal></expr></else></ternary><operator pos:line="8" pos:column="98">)<pos:position pos:line="8" pos:column="99"/></operator> <operator pos:line="8" pos:column="100">&lt;&lt;<pos:position pos:line="8" pos:column="108"/></operator> <literal type="string" pos:line="8" pos:column="103">"'"<pos:position pos:line="8" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="108"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name pos:line="10" pos:column="10">cbdataReferenceValid<pos:position pos:line="10" pos:column="30"/></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name><name pos:line="10" pos:column="31">r<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">data<pos:position pos:line="10" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="40"/></condition><then pos:line="10" pos:column="40"> <block pos:line="10" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">29<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">DBG_IMPORTANT<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"ERROR: Negotiate Authentication invalid callback data. helper '"<pos:position pos:line="11" pos:column="100"/></literal> <operator pos:line="11" pos:column="101">&lt;&lt;<pos:position pos:line="11" pos:column="109"/></operator> <name pos:line="11" pos:column="104">lastserver<pos:position pos:line="11" pos:column="114"/></name> <operator pos:line="11" pos:column="115">&lt;&lt;<pos:position pos:line="11" pos:column="123"/></operator> <literal type="string" pos:line="11" pos:column="118">"'."<pos:position pos:line="11" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="124"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="12" pos:column="9">delete<pos:position pos:line="12" pos:column="15"/></operator> <name pos:line="12" pos:column="16">r<pos:position pos:line="12" pos:column="17"/></name></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">reply<pos:position pos:line="16" pos:column="15"/></name></expr>)<pos:position pos:line="16" pos:column="16"/></condition><then pos:line="16" pos:column="16"> <block pos:line="16" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">29<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="20">DBG_IMPORTANT<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="35">"ERROR: Negotiate Authentication Helper '"<pos:position pos:line="17" pos:column="77"/></literal> <operator pos:line="17" pos:column="78">&lt;&lt;<pos:position pos:line="17" pos:column="86"/></operator> <name pos:line="17" pos:column="81">lastserver<pos:position pos:line="17" pos:column="91"/></name> <operator pos:line="17" pos:column="92">&lt;&lt;<pos:position pos:line="17" pos:column="100"/></operator> <literal type="string" pos:line="17" pos:column="95">"' crashed!."<pos:position pos:line="17" pos:column="108"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="110"/></expr_stmt>
        <expr_stmt><expr><name pos:line="18" pos:column="9">reply<pos:position pos:line="18" pos:column="14"/></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <operator pos:line="18" pos:column="17">(<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="18">char<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">*<pos:position pos:line="18" pos:column="24"/></operator><operator pos:line="18" pos:column="24">)<pos:position pos:line="18" pos:column="25"/></operator><literal type="string" pos:line="18" pos:column="25">"BH Internal error"<pos:position pos:line="18" pos:column="44"/></literal></expr>;<pos:position pos:line="18" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="21" pos:column="5">Auth<pos:position pos:line="21" pos:column="9"/></name><operator pos:line="21" pos:column="9">::<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">UserRequest<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">::<pos:position pos:line="21" pos:column="24"/></operator><name pos:line="21" pos:column="24">Pointer<pos:position pos:line="21" pos:column="31"/></name></name></type> <name pos:line="21" pos:column="32">auth_user_request<pos:position pos:line="21" pos:column="49"/></name> <init pos:line="21" pos:column="50">= <expr><name><name pos:line="21" pos:column="52">r<pos:position pos:line="21" pos:column="53"/></name><operator pos:line="21" pos:column="53">-&gt;<pos:position pos:line="21" pos:column="58"/></operator><name pos:line="21" pos:column="55">auth_user_request<pos:position pos:line="21" pos:column="72"/></name></name></expr></init></decl>;<pos:position pos:line="21" pos:column="73"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">assert<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><name pos:line="22" pos:column="12">auth_user_request<pos:position pos:line="22" pos:column="29"/></name> <operator pos:line="22" pos:column="30">!=<pos:position pos:line="22" pos:column="32"/></operator> <name pos:line="22" pos:column="33">NULL<pos:position pos:line="22" pos:column="37"/></name></expr></argument>)<pos:position pos:line="22" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="24" pos:column="5">Auth<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">::<pos:position pos:line="24" pos:column="11"/></operator><name pos:line="24" pos:column="11">Negotiate<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">::<pos:position pos:line="24" pos:column="22"/></operator><name pos:line="24" pos:column="22">UserRequest<pos:position pos:line="24" pos:column="33"/></name></name> <modifier pos:line="24" pos:column="34">*<pos:position pos:line="24" pos:column="35"/></modifier></type><name pos:line="24" pos:column="35">lm_request<pos:position pos:line="24" pos:column="45"/></name> <init pos:line="24" pos:column="46">= <expr><cast type="dynamic" pos:line="24" pos:column="48">dynamic_cast<argument_list type="generic" pos:line="24" pos:column="60">&lt;<argument><expr><name><name pos:line="24" pos:column="61">Auth<pos:position pos:line="24" pos:column="65"/></name><operator pos:line="24" pos:column="65">::<pos:position pos:line="24" pos:column="67"/></operator><name pos:line="24" pos:column="67">Negotiate<pos:position pos:line="24" pos:column="76"/></name><operator pos:line="24" pos:column="76">::<pos:position pos:line="24" pos:column="78"/></operator><name pos:line="24" pos:column="78">UserRequest<pos:position pos:line="24" pos:column="89"/></name></name> <operator pos:line="24" pos:column="90">*<pos:position pos:line="24" pos:column="91"/></operator></expr></argument>&gt;<pos:position pos:line="24" pos:column="95"/></argument_list><argument_list pos:line="24" pos:column="92">(<argument><expr><call><name><name pos:line="24" pos:column="93">auth_user_request<pos:position pos:line="24" pos:column="110"/></name><operator pos:line="24" pos:column="110">.<pos:position pos:line="24" pos:column="111"/></operator><name pos:line="24" pos:column="111">getRaw<pos:position pos:line="24" pos:column="117"/></name></name><argument_list pos:line="24" pos:column="117">()<pos:position pos:line="24" pos:column="119"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="120"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="24" pos:column="121"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">assert<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name pos:line="25" pos:column="12">lm_request<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">!=<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">NULL<pos:position pos:line="25" pos:column="30"/></name></expr></argument>)<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">assert<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name><name pos:line="26" pos:column="12">lm_request<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">waiting<pos:position pos:line="26" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">lm_request<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">waiting<pos:position pos:line="28" pos:column="24"/></name></name> <operator pos:line="28" pos:column="25">=<pos:position pos:line="28" pos:column="26"/></operator> <literal type="number" pos:line="28" pos:column="27">0<pos:position pos:line="28" pos:column="28"/></literal></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">safe_free<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name><name pos:line="29" pos:column="15">lm_request<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">-&gt;<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="27">client_blob<pos:position pos:line="29" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="31" pos:column="5">assert<pos:position pos:line="31" pos:column="11"/></name><argument_list pos:line="31" pos:column="11">(<argument><expr><call><name><name pos:line="31" pos:column="12">auth_user_request<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">user<pos:position pos:line="31" pos:column="35"/></name></name><argument_list pos:line="31" pos:column="35">()<pos:position pos:line="31" pos:column="37"/></argument_list></call> <operator pos:line="31" pos:column="38">!=<pos:position pos:line="31" pos:column="40"/></operator> <name pos:line="31" pos:column="41">NULL<pos:position pos:line="31" pos:column="45"/></name></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">assert<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><call><name><name pos:line="32" pos:column="12">auth_user_request<pos:position pos:line="32" pos:column="29"/></name><operator pos:line="32" pos:column="29">-&gt;<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="31">user<pos:position pos:line="32" pos:column="35"/></name></name><argument_list pos:line="32" pos:column="35">()<pos:position pos:line="32" pos:column="37"/></argument_list></call><operator pos:line="32" pos:column="37">-&gt;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="39">auth_type<pos:position pos:line="32" pos:column="48"/></name> <operator pos:line="32" pos:column="49">==<pos:position pos:line="32" pos:column="51"/></operator> <name><name pos:line="32" pos:column="52">Auth<pos:position pos:line="32" pos:column="56"/></name><operator pos:line="32" pos:column="56">::<pos:position pos:line="32" pos:column="58"/></operator><name pos:line="32" pos:column="58">AUTH_NEGOTIATE<pos:position pos:line="32" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="74"/></expr_stmt>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><name pos:line="34" pos:column="9">lm_request<pos:position pos:line="34" pos:column="19"/></name><operator pos:line="34" pos:column="19">-&gt;<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="21">authserver<pos:position pos:line="34" pos:column="31"/></name></name> <operator pos:line="34" pos:column="32">==<pos:position pos:line="34" pos:column="34"/></operator> <name pos:line="34" pos:column="35">NULL<pos:position pos:line="34" pos:column="39"/></name></expr>)<pos:position pos:line="34" pos:column="40"/></condition><then pos:line="34" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="35" pos:column="9">lm_request<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">authserver<pos:position pos:line="35" pos:column="31"/></name></name> <operator pos:line="35" pos:column="32">=<pos:position pos:line="35" pos:column="33"/></operator> <cast type="static" pos:line="35" pos:column="34">static_cast<argument_list type="generic" pos:line="35" pos:column="45">&lt;<argument><expr><name pos:line="35" pos:column="46">helper_stateful_server<pos:position pos:line="35" pos:column="68"/></name><operator pos:line="35" pos:column="68">*<pos:position pos:line="35" pos:column="69"/></operator></expr></argument>&gt;<pos:position pos:line="35" pos:column="73"/></argument_list><argument_list pos:line="35" pos:column="70">(<argument><expr><name pos:line="35" pos:column="71">lastserver<pos:position pos:line="35" pos:column="81"/></name></expr></argument>)<pos:position pos:line="35" pos:column="82"/></argument_list></cast></expr>;<pos:position pos:line="35" pos:column="83"/></expr_stmt></block></then>
    <else pos:line="36" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="9">assert<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><name><name pos:line="37" pos:column="16">lm_request<pos:position pos:line="37" pos:column="26"/></name><operator pos:line="37" pos:column="26">-&gt;<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="28">authserver<pos:position pos:line="37" pos:column="38"/></name></name> <operator pos:line="37" pos:column="39">==<pos:position pos:line="37" pos:column="41"/></operator> <name pos:line="37" pos:column="42">lastserver<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="39" pos:column="5">/* seperate out the useful data */</comment>
    <expr_stmt><expr><name pos:line="40" pos:column="5">blob<pos:position pos:line="40" pos:column="9"/></name> <operator pos:line="40" pos:column="10">=<pos:position pos:line="40" pos:column="11"/></operator> <call><name pos:line="40" pos:column="12">strchr<pos:position pos:line="40" pos:column="18"/></name><argument_list pos:line="40" pos:column="18">(<argument><expr><name pos:line="40" pos:column="19">reply<pos:position pos:line="40" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="40" pos:column="26">' '<pos:position pos:line="40" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">blob<pos:position pos:line="42" pos:column="13"/></name></expr>)<pos:position pos:line="42" pos:column="14"/></condition><then pos:line="42" pos:column="14"> <block pos:line="42" pos:column="15">{
        <expr_stmt><expr><operator pos:line="43" pos:column="9">++<pos:position pos:line="43" pos:column="11"/></operator><name pos:line="43" pos:column="11">blob<pos:position pos:line="43" pos:column="15"/></name></expr>;<pos:position pos:line="43" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="44" pos:column="9">arg<pos:position pos:line="44" pos:column="12"/></name> <operator pos:line="44" pos:column="13">=<pos:position pos:line="44" pos:column="14"/></operator> <call><name pos:line="44" pos:column="15">strchr<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><name pos:line="44" pos:column="22">blob<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">+<pos:position pos:line="44" pos:column="28"/></operator> <literal type="number" pos:line="44" pos:column="29">1<pos:position pos:line="44" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="44" pos:column="32">' '<pos:position pos:line="44" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then> <else pos:line="45" pos:column="7">else <block pos:line="45" pos:column="12">{
        <expr_stmt><expr><name pos:line="46" pos:column="9">arg<pos:position pos:line="46" pos:column="12"/></name> <operator pos:line="46" pos:column="13">=<pos:position pos:line="46" pos:column="14"/></operator> <name pos:line="46" pos:column="15">NULL<pos:position pos:line="46" pos:column="19"/></name></expr>;<pos:position pos:line="46" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></else></if>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><call><name pos:line="49" pos:column="9">strncasecmp<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name pos:line="49" pos:column="21">reply<pos:position pos:line="49" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="28">"TT "<pos:position pos:line="49" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="35">3<pos:position pos:line="49" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call> <operator pos:line="49" pos:column="38">==<pos:position pos:line="49" pos:column="40"/></operator> <literal type="number" pos:line="49" pos:column="41">0<pos:position pos:line="49" pos:column="42"/></literal></expr>)<pos:position pos:line="49" pos:column="43"/></condition><then pos:line="49" pos:column="43"> <block pos:line="49" pos:column="44">{
        <comment type="block" pos:line="50" pos:column="9">/* we have been given a blob to send to the client */</comment>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">arg<pos:position pos:line="51" pos:column="16"/></name></expr>)<pos:position pos:line="51" pos:column="17"/></condition><then pos:line="51" pos:column="17"> <block pos:line="51" pos:column="18">{
            <expr_stmt><expr><operator pos:line="52" pos:column="13">*<pos:position pos:line="52" pos:column="14"/></operator><name pos:line="52" pos:column="14">arg<pos:position pos:line="52" pos:column="17"/></name> <operator pos:line="52" pos:column="18">=<pos:position pos:line="52" pos:column="19"/></operator> <literal type="char" pos:line="52" pos:column="20">'\0'<pos:position pos:line="52" pos:column="24"/></literal></expr>;<pos:position pos:line="52" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="53" pos:column="13">++<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="15">arg<pos:position pos:line="53" pos:column="18"/></name></expr>;<pos:position pos:line="53" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">safe_free<pos:position pos:line="55" pos:column="18"/></name><argument_list pos:line="55" pos:column="18">(<argument><expr><name><name pos:line="55" pos:column="19">lm_request<pos:position pos:line="55" pos:column="29"/></name><operator pos:line="55" pos:column="29">-&gt;<pos:position pos:line="55" pos:column="34"/></operator><name pos:line="55" pos:column="31">server_blob<pos:position pos:line="55" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="55" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">lm_request<pos:position pos:line="56" pos:column="19"/></name><operator pos:line="56" pos:column="19">-&gt;<pos:position pos:line="56" pos:column="24"/></operator><name pos:line="56" pos:column="21">request<pos:position pos:line="56" pos:column="28"/></name><operator pos:line="56" pos:column="28">-&gt;<pos:position pos:line="56" pos:column="33"/></operator><name pos:line="56" pos:column="30">flags<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">.<pos:position pos:line="56" pos:column="36"/></operator><name pos:line="56" pos:column="36">mustKeepalive<pos:position pos:line="56" pos:column="49"/></name></name> <operator pos:line="56" pos:column="50">=<pos:position pos:line="56" pos:column="51"/></operator> <literal type="number" pos:line="56" pos:column="52">1<pos:position pos:line="56" pos:column="53"/></literal></expr>;<pos:position pos:line="56" pos:column="54"/></expr_stmt>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name><name pos:line="57" pos:column="13">lm_request<pos:position pos:line="57" pos:column="23"/></name><operator pos:line="57" pos:column="23">-&gt;<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="25">request<pos:position pos:line="57" pos:column="32"/></name><operator pos:line="57" pos:column="32">-&gt;<pos:position pos:line="57" pos:column="37"/></operator><name pos:line="57" pos:column="34">flags<pos:position pos:line="57" pos:column="39"/></name><operator pos:line="57" pos:column="39">.<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="40">proxyKeepalive<pos:position pos:line="57" pos:column="54"/></name></name></expr>)<pos:position pos:line="57" pos:column="55"/></condition><then pos:line="57" pos:column="55"> <block pos:line="57" pos:column="56">{
            <expr_stmt><expr><name><name pos:line="58" pos:column="13">lm_request<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">-&gt;<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="25">server_blob<pos:position pos:line="58" pos:column="36"/></name></name> <operator pos:line="58" pos:column="37">=<pos:position pos:line="58" pos:column="38"/></operator> <call><name pos:line="58" pos:column="39">xstrdup<pos:position pos:line="58" pos:column="46"/></name><argument_list pos:line="58" pos:column="46">(<argument><expr><name pos:line="58" pos:column="47">blob<pos:position pos:line="58" pos:column="51"/></name></expr></argument>)<pos:position pos:line="58" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="53"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="59" pos:column="13">auth_user_request<pos:position pos:line="59" pos:column="30"/></name><operator pos:line="59" pos:column="30">-&gt;<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="32">user<pos:position pos:line="59" pos:column="36"/></name></name><argument_list pos:line="59" pos:column="36">()<pos:position pos:line="59" pos:column="38"/></argument_list></call><operator pos:line="59" pos:column="38">-&gt;<pos:position pos:line="59" pos:column="43"/></operator><call><name pos:line="59" pos:column="40">credentials<pos:position pos:line="59" pos:column="51"/></name><argument_list pos:line="59" pos:column="51">(<argument><expr><name><name pos:line="59" pos:column="52">Auth<pos:position pos:line="59" pos:column="56"/></name><operator pos:line="59" pos:column="56">::<pos:position pos:line="59" pos:column="58"/></operator><name pos:line="59" pos:column="58">Handshake<pos:position pos:line="59" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="60" pos:column="13">auth_user_request<pos:position pos:line="60" pos:column="30"/></name><operator pos:line="60" pos:column="30">-&gt;<pos:position pos:line="60" pos:column="35"/></operator><name pos:line="60" pos:column="32">denyMessage<pos:position pos:line="60" pos:column="43"/></name></name><argument_list pos:line="60" pos:column="43">(<argument><expr><literal type="string" pos:line="60" pos:column="44">"Authentication in progress"<pos:position pos:line="60" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="61" pos:column="13">debugs<pos:position pos:line="61" pos:column="19"/></name><argument_list pos:line="61" pos:column="19">(<argument><expr><literal type="number" pos:line="61" pos:column="20">29<pos:position pos:line="61" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="24">4<pos:position pos:line="61" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="27">HERE<pos:position pos:line="61" pos:column="31"/></name> <operator pos:line="61" pos:column="32">&lt;&lt;<pos:position pos:line="61" pos:column="40"/></operator> <literal type="string" pos:line="61" pos:column="35">"Need to challenge the client with a server blob '"<pos:position pos:line="61" pos:column="86"/></literal> <operator pos:line="61" pos:column="87">&lt;&lt;<pos:position pos:line="61" pos:column="95"/></operator> <name pos:line="61" pos:column="90">blob<pos:position pos:line="61" pos:column="94"/></name> <operator pos:line="61" pos:column="95">&lt;&lt;<pos:position pos:line="61" pos:column="103"/></operator> <literal type="string" pos:line="61" pos:column="98">"'"<pos:position pos:line="61" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="103"/></expr_stmt>
        }<pos:position pos:line="62" pos:column="10"/></block></then> <else pos:line="62" pos:column="11">else <block pos:line="62" pos:column="16">{
            <expr_stmt><expr><call><name><name pos:line="63" pos:column="13">auth_user_request<pos:position pos:line="63" pos:column="30"/></name><operator pos:line="63" pos:column="30">-&gt;<pos:position pos:line="63" pos:column="35"/></operator><name pos:line="63" pos:column="32">user<pos:position pos:line="63" pos:column="36"/></name></name><argument_list pos:line="63" pos:column="36">()<pos:position pos:line="63" pos:column="38"/></argument_list></call><operator pos:line="63" pos:column="38">-&gt;<pos:position pos:line="63" pos:column="43"/></operator><call><name pos:line="63" pos:column="40">credentials<pos:position pos:line="63" pos:column="51"/></name><argument_list pos:line="63" pos:column="51">(<argument><expr><name><name pos:line="63" pos:column="52">Auth<pos:position pos:line="63" pos:column="56"/></name><operator pos:line="63" pos:column="56">::<pos:position pos:line="63" pos:column="58"/></operator><name pos:line="63" pos:column="58">Failed<pos:position pos:line="63" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="64" pos:column="13">auth_user_request<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">-&gt;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="32">denyMessage<pos:position pos:line="64" pos:column="43"/></name></name><argument_list pos:line="64" pos:column="43">(<argument><expr><literal type="string" pos:line="64" pos:column="44">"NTLM authentication requires a persistent connection"<pos:position pos:line="64" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="100"/></expr_stmt>
        }<pos:position pos:line="65" pos:column="10"/></block></else></if>
    }<pos:position pos:line="66" pos:column="6"/></block></then> <elseif pos:line="66" pos:column="7">else <if pos:line="66" pos:column="12">if <condition pos:line="66" pos:column="15">(<expr><call><name pos:line="66" pos:column="16">strncasecmp<pos:position pos:line="66" pos:column="27"/></name><argument_list pos:line="66" pos:column="27">(<argument><expr><name pos:line="66" pos:column="28">reply<pos:position pos:line="66" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="35">"AF "<pos:position pos:line="66" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="42">3<pos:position pos:line="66" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="44"/></argument_list></call> <operator pos:line="66" pos:column="45">==<pos:position pos:line="66" pos:column="47"/></operator> <literal type="number" pos:line="66" pos:column="48">0<pos:position pos:line="66" pos:column="49"/></literal> <operator pos:line="66" pos:column="50">&amp;&amp;<pos:position pos:line="66" pos:column="60"/></operator> <name pos:line="66" pos:column="53">arg<pos:position pos:line="66" pos:column="56"/></name> <operator pos:line="66" pos:column="57">!=<pos:position pos:line="66" pos:column="59"/></operator> <name pos:line="66" pos:column="60">NULL<pos:position pos:line="66" pos:column="64"/></name></expr>)<pos:position pos:line="66" pos:column="65"/></condition><then pos:line="66" pos:column="65"> <block pos:line="66" pos:column="66">{
        <comment type="block" pos:line="67" pos:column="9">/* we're finished, release the helper */</comment>

        <if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><name pos:line="69" pos:column="13">arg<pos:position pos:line="69" pos:column="16"/></name></expr>)<pos:position pos:line="69" pos:column="17"/></condition><then pos:line="69" pos:column="17"> <block pos:line="69" pos:column="18">{
            <expr_stmt><expr><operator pos:line="70" pos:column="13">*<pos:position pos:line="70" pos:column="14"/></operator><name pos:line="70" pos:column="14">arg<pos:position pos:line="70" pos:column="17"/></name> <operator pos:line="70" pos:column="18">=<pos:position pos:line="70" pos:column="19"/></operator> <literal type="char" pos:line="70" pos:column="20">'\0'<pos:position pos:line="70" pos:column="24"/></literal></expr>;<pos:position pos:line="70" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="71" pos:column="13">++<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="15">arg<pos:position pos:line="71" pos:column="18"/></name></expr>;<pos:position pos:line="71" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="74" pos:column="9">auth_user_request<pos:position pos:line="74" pos:column="26"/></name><operator pos:line="74" pos:column="26">-&gt;<pos:position pos:line="74" pos:column="31"/></operator><name pos:line="74" pos:column="28">user<pos:position pos:line="74" pos:column="32"/></name></name><argument_list pos:line="74" pos:column="32">()<pos:position pos:line="74" pos:column="34"/></argument_list></call><operator pos:line="74" pos:column="34">-&gt;<pos:position pos:line="74" pos:column="39"/></operator><call><name pos:line="74" pos:column="36">username<pos:position pos:line="74" pos:column="44"/></name><argument_list pos:line="74" pos:column="44">(<argument><expr><name pos:line="74" pos:column="45">arg<pos:position pos:line="74" pos:column="48"/></name></expr></argument>)<pos:position pos:line="74" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="75" pos:column="9">auth_user_request<pos:position pos:line="75" pos:column="26"/></name><operator pos:line="75" pos:column="26">-&gt;<pos:position pos:line="75" pos:column="31"/></operator><name pos:line="75" pos:column="28">denyMessage<pos:position pos:line="75" pos:column="39"/></name></name><argument_list pos:line="75" pos:column="39">(<argument><expr><literal type="string" pos:line="75" pos:column="40">"Login successful"<pos:position pos:line="75" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">safe_free<pos:position pos:line="76" pos:column="18"/></name><argument_list pos:line="76" pos:column="18">(<argument><expr><name><name pos:line="76" pos:column="19">lm_request<pos:position pos:line="76" pos:column="29"/></name><operator pos:line="76" pos:column="29">-&gt;<pos:position pos:line="76" pos:column="34"/></operator><name pos:line="76" pos:column="31">server_blob<pos:position pos:line="76" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">lm_request<pos:position pos:line="77" pos:column="19"/></name><operator pos:line="77" pos:column="19">-&gt;<pos:position pos:line="77" pos:column="24"/></operator><name pos:line="77" pos:column="21">server_blob<pos:position pos:line="77" pos:column="32"/></name></name> <operator pos:line="77" pos:column="33">=<pos:position pos:line="77" pos:column="34"/></operator> <call><name pos:line="77" pos:column="35">xstrdup<pos:position pos:line="77" pos:column="42"/></name><argument_list pos:line="77" pos:column="42">(<argument><expr><name pos:line="77" pos:column="43">blob<pos:position pos:line="77" pos:column="47"/></name></expr></argument>)<pos:position pos:line="77" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="78" pos:column="9">lm_request<pos:position pos:line="78" pos:column="19"/></name><operator pos:line="78" pos:column="19">-&gt;<pos:position pos:line="78" pos:column="24"/></operator><name pos:line="78" pos:column="21">releaseAuthServer<pos:position pos:line="78" pos:column="38"/></name></name><argument_list pos:line="78" pos:column="38">()<pos:position pos:line="78" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="41"/></expr_stmt>

        <comment type="block" pos:line="80" pos:column="9">/* connection is authenticated */</comment>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">debugs<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><literal type="number" pos:line="81" pos:column="16">29<pos:position pos:line="81" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="81" pos:column="20">4<pos:position pos:line="81" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="23">HERE<pos:position pos:line="81" pos:column="27"/></name> <operator pos:line="81" pos:column="28">&lt;&lt;<pos:position pos:line="81" pos:column="36"/></operator> <literal type="string" pos:line="81" pos:column="31">"authenticated user "<pos:position pos:line="81" pos:column="52"/></literal> <operator pos:line="81" pos:column="53">&lt;&lt;<pos:position pos:line="81" pos:column="61"/></operator> <call><name><name pos:line="81" pos:column="56">auth_user_request<pos:position pos:line="81" pos:column="73"/></name><operator pos:line="81" pos:column="73">-&gt;<pos:position pos:line="81" pos:column="78"/></operator><name pos:line="81" pos:column="75">user<pos:position pos:line="81" pos:column="79"/></name></name><argument_list pos:line="81" pos:column="79">()<pos:position pos:line="81" pos:column="81"/></argument_list></call><operator pos:line="81" pos:column="81">-&gt;<pos:position pos:line="81" pos:column="86"/></operator><call><name pos:line="81" pos:column="83">username<pos:position pos:line="81" pos:column="91"/></name><argument_list pos:line="81" pos:column="91">()<pos:position pos:line="81" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="95"/></expr_stmt>
        <comment type="block" pos:line="82" pos:column="9">/* see if this is an existing user with a different proxy_auth
         * string */</comment>
        <decl_stmt><decl><type><name pos:line="84" pos:column="9">AuthUserHashPointer<pos:position pos:line="84" pos:column="28"/></name> <modifier pos:line="84" pos:column="29">*<pos:position pos:line="84" pos:column="30"/></modifier></type><name pos:line="84" pos:column="30">usernamehash<pos:position pos:line="84" pos:column="42"/></name> <init pos:line="84" pos:column="43">= <expr><cast type="static" pos:line="84" pos:column="45">static_cast<argument_list type="generic" pos:line="84" pos:column="56">&lt;<argument><expr><name pos:line="84" pos:column="57">AuthUserHashPointer<pos:position pos:line="84" pos:column="76"/></name> <operator pos:line="84" pos:column="77">*<pos:position pos:line="84" pos:column="78"/></operator></expr></argument>&gt;<pos:position pos:line="84" pos:column="82"/></argument_list><argument_list pos:line="84" pos:column="79">(<argument><expr><call><name pos:line="84" pos:column="80">hash_lookup<pos:position pos:line="84" pos:column="91"/></name><argument_list pos:line="84" pos:column="91">(<argument><expr><name pos:line="84" pos:column="92">proxy_auth_username_cache<pos:position pos:line="84" pos:column="117"/></name></expr></argument>, <argument><expr><call><name><name pos:line="84" pos:column="119">auth_user_request<pos:position pos:line="84" pos:column="136"/></name><operator pos:line="84" pos:column="136">-&gt;<pos:position pos:line="84" pos:column="141"/></operator><name pos:line="84" pos:column="138">user<pos:position pos:line="84" pos:column="142"/></name></name><argument_list pos:line="84" pos:column="142">()<pos:position pos:line="84" pos:column="144"/></argument_list></call><operator pos:line="84" pos:column="144">-&gt;<pos:position pos:line="84" pos:column="149"/></operator><call><name pos:line="84" pos:column="146">username<pos:position pos:line="84" pos:column="154"/></name><argument_list pos:line="84" pos:column="154">()<pos:position pos:line="84" pos:column="156"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="157"/></argument_list></call></expr></argument>)<pos:position pos:line="84" pos:column="158"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="84" pos:column="159"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="85" pos:column="9">Auth<pos:position pos:line="85" pos:column="13"/></name><operator pos:line="85" pos:column="13">::<pos:position pos:line="85" pos:column="15"/></operator><name pos:line="85" pos:column="15">User<pos:position pos:line="85" pos:column="19"/></name><operator pos:line="85" pos:column="19">::<pos:position pos:line="85" pos:column="21"/></operator><name pos:line="85" pos:column="21">Pointer<pos:position pos:line="85" pos:column="28"/></name></name></type> <name pos:line="85" pos:column="29">local_auth_user<pos:position pos:line="85" pos:column="44"/></name> <init pos:line="85" pos:column="45">= <expr><call><name><name pos:line="85" pos:column="47">lm_request<pos:position pos:line="85" pos:column="57"/></name><operator pos:line="85" pos:column="57">-&gt;<pos:position pos:line="85" pos:column="62"/></operator><name pos:line="85" pos:column="59">user<pos:position pos:line="85" pos:column="63"/></name></name><argument_list pos:line="85" pos:column="63">()<pos:position pos:line="85" pos:column="65"/></argument_list></call></expr></init></decl>;<pos:position pos:line="85" pos:column="66"/></decl_stmt>
        <while pos:line="86" pos:column="9">while <condition pos:line="86" pos:column="15">(<expr><name pos:line="86" pos:column="16">usernamehash<pos:position pos:line="86" pos:column="28"/></name> <operator pos:line="86" pos:column="29">&amp;&amp;<pos:position pos:line="86" pos:column="39"/></operator> <operator pos:line="86" pos:column="32">(<pos:position pos:line="86" pos:column="33"/></operator><call><name><name pos:line="86" pos:column="33">usernamehash<pos:position pos:line="86" pos:column="45"/></name><operator pos:line="86" pos:column="45">-&gt;<pos:position pos:line="86" pos:column="50"/></operator><name pos:line="86" pos:column="47">user<pos:position pos:line="86" pos:column="51"/></name></name><argument_list pos:line="86" pos:column="51">()<pos:position pos:line="86" pos:column="53"/></argument_list></call><operator pos:line="86" pos:column="53">-&gt;<pos:position pos:line="86" pos:column="58"/></operator><name pos:line="86" pos:column="55">auth_type<pos:position pos:line="86" pos:column="64"/></name> <operator pos:line="86" pos:column="65">!=<pos:position pos:line="86" pos:column="67"/></operator> <name><name pos:line="86" pos:column="68">Auth<pos:position pos:line="86" pos:column="72"/></name><operator pos:line="86" pos:column="72">::<pos:position pos:line="86" pos:column="74"/></operator><name pos:line="86" pos:column="74">AUTH_NEGOTIATE<pos:position pos:line="86" pos:column="88"/></name></name> <operator pos:line="86" pos:column="89">||<pos:position pos:line="86" pos:column="91"/></operator>
                                <call><name pos:line="87" pos:column="33">strcmp<pos:position pos:line="87" pos:column="39"/></name><argument_list pos:line="87" pos:column="39">(<argument><expr><call><name><name pos:line="87" pos:column="40">usernamehash<pos:position pos:line="87" pos:column="52"/></name><operator pos:line="87" pos:column="52">-&gt;<pos:position pos:line="87" pos:column="57"/></operator><name pos:line="87" pos:column="54">user<pos:position pos:line="87" pos:column="58"/></name></name><argument_list pos:line="87" pos:column="58">()<pos:position pos:line="87" pos:column="60"/></argument_list></call><operator pos:line="87" pos:column="60">-&gt;<pos:position pos:line="87" pos:column="65"/></operator><call><name pos:line="87" pos:column="62">username<pos:position pos:line="87" pos:column="70"/></name><argument_list pos:line="87" pos:column="70">()<pos:position pos:line="87" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="87" pos:column="74">auth_user_request<pos:position pos:line="87" pos:column="91"/></name><operator pos:line="87" pos:column="91">-&gt;<pos:position pos:line="87" pos:column="96"/></operator><name pos:line="87" pos:column="93">user<pos:position pos:line="87" pos:column="97"/></name></name><argument_list pos:line="87" pos:column="97">()<pos:position pos:line="87" pos:column="99"/></argument_list></call><operator pos:line="87" pos:column="99">-&gt;<pos:position pos:line="87" pos:column="104"/></operator><call><name pos:line="87" pos:column="101">username<pos:position pos:line="87" pos:column="109"/></name><argument_list pos:line="87" pos:column="109">()<pos:position pos:line="87" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="112"/></argument_list></call> <operator pos:line="87" pos:column="113">!=<pos:position pos:line="87" pos:column="115"/></operator> <literal type="number" pos:line="87" pos:column="116">0<pos:position pos:line="87" pos:column="117"/></literal><operator pos:line="87" pos:column="117">)<pos:position pos:line="87" pos:column="118"/></operator></expr>)<pos:position pos:line="87" pos:column="119"/></condition>
            <block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="13">usernamehash<pos:position pos:line="88" pos:column="25"/></name> <operator pos:line="88" pos:column="26">=<pos:position pos:line="88" pos:column="27"/></operator> <cast type="static" pos:line="88" pos:column="28">static_cast<argument_list type="generic" pos:line="88" pos:column="39">&lt;<argument><expr><name pos:line="88" pos:column="40">AuthUserHashPointer<pos:position pos:line="88" pos:column="59"/></name> <operator pos:line="88" pos:column="60">*<pos:position pos:line="88" pos:column="61"/></operator></expr></argument>&gt;<pos:position pos:line="88" pos:column="65"/></argument_list><argument_list pos:line="88" pos:column="62">(<argument><expr><name><name pos:line="88" pos:column="63">usernamehash<pos:position pos:line="88" pos:column="75"/></name><operator pos:line="88" pos:column="75">-&gt;<pos:position pos:line="88" pos:column="80"/></operator><name pos:line="88" pos:column="77">next<pos:position pos:line="88" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="88" pos:column="82"/></argument_list></cast></expr>;<pos:position pos:line="88" pos:column="83"/></expr_stmt></block></while>
        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><name pos:line="89" pos:column="13">usernamehash<pos:position pos:line="89" pos:column="25"/></name></expr>)<pos:position pos:line="89" pos:column="26"/></condition><then pos:line="89" pos:column="26"> <block pos:line="89" pos:column="27">{
            <comment type="block" pos:line="90" pos:column="13">/* we can't seamlessly recheck the username due to the
             * challenge-response nature of the protocol.
             * Just free the temporary auth_user after merging as
             * much of it new state into the existing one as possible */</comment>
            <expr_stmt><expr><call><name><name pos:line="94" pos:column="13">usernamehash<pos:position pos:line="94" pos:column="25"/></name><operator pos:line="94" pos:column="25">-&gt;<pos:position pos:line="94" pos:column="30"/></operator><name pos:line="94" pos:column="27">user<pos:position pos:line="94" pos:column="31"/></name></name><argument_list pos:line="94" pos:column="31">()<pos:position pos:line="94" pos:column="33"/></argument_list></call><operator pos:line="94" pos:column="33">-&gt;<pos:position pos:line="94" pos:column="38"/></operator><call><name pos:line="94" pos:column="35">absorb<pos:position pos:line="94" pos:column="41"/></name><argument_list pos:line="94" pos:column="41">(<argument><expr><name pos:line="94" pos:column="42">local_auth_user<pos:position pos:line="94" pos:column="57"/></name></expr></argument>)<pos:position pos:line="94" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="59"/></expr_stmt>
            <comment type="block" pos:line="95" pos:column="13">/* from here on we are working with the original cached credentials. */</comment>
            <expr_stmt><expr><name pos:line="96" pos:column="13">local_auth_user<pos:position pos:line="96" pos:column="28"/></name> <operator pos:line="96" pos:column="29">=<pos:position pos:line="96" pos:column="30"/></operator> <call><name><name pos:line="96" pos:column="31">usernamehash<pos:position pos:line="96" pos:column="43"/></name><operator pos:line="96" pos:column="43">-&gt;<pos:position pos:line="96" pos:column="48"/></operator><name pos:line="96" pos:column="45">user<pos:position pos:line="96" pos:column="49"/></name></name><argument_list pos:line="96" pos:column="49">()<pos:position pos:line="96" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="97" pos:column="13">auth_user_request<pos:position pos:line="97" pos:column="30"/></name><operator pos:line="97" pos:column="30">-&gt;<pos:position pos:line="97" pos:column="35"/></operator><name pos:line="97" pos:column="32">user<pos:position pos:line="97" pos:column="36"/></name></name><argument_list pos:line="97" pos:column="36">(<argument><expr><name pos:line="97" pos:column="37">local_auth_user<pos:position pos:line="97" pos:column="52"/></name></expr></argument>)<pos:position pos:line="97" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="98" pos:column="10"/></block></then> <else pos:line="98" pos:column="11">else <block pos:line="98" pos:column="16">{
            <comment type="block" pos:line="99" pos:column="13">/* store user in hash's */</comment>
            <expr_stmt><expr><call><name><name pos:line="100" pos:column="13">local_auth_user<pos:position pos:line="100" pos:column="28"/></name><operator pos:line="100" pos:column="28">-&gt;<pos:position pos:line="100" pos:column="33"/></operator><name pos:line="100" pos:column="30">addToNameCache<pos:position pos:line="100" pos:column="44"/></name></name><argument_list pos:line="100" pos:column="44">()<pos:position pos:line="100" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="100" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="101" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="102" pos:column="9">/* set these to now because this is either a new login from an
         * existing user or a new user */</comment>
        <expr_stmt><expr><name><name pos:line="104" pos:column="9">local_auth_user<pos:position pos:line="104" pos:column="24"/></name><operator pos:line="104" pos:column="24">-&gt;<pos:position pos:line="104" pos:column="29"/></operator><name pos:line="104" pos:column="26">expiretime<pos:position pos:line="104" pos:column="36"/></name></name> <operator pos:line="104" pos:column="37">=<pos:position pos:line="104" pos:column="38"/></operator> <name><name pos:line="104" pos:column="39">current_time<pos:position pos:line="104" pos:column="51"/></name><operator pos:line="104" pos:column="51">.<pos:position pos:line="104" pos:column="52"/></operator><name pos:line="104" pos:column="52">tv_sec<pos:position pos:line="104" pos:column="58"/></name></name></expr>;<pos:position pos:line="104" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="105" pos:column="9">auth_user_request<pos:position pos:line="105" pos:column="26"/></name><operator pos:line="105" pos:column="26">-&gt;<pos:position pos:line="105" pos:column="31"/></operator><name pos:line="105" pos:column="28">user<pos:position pos:line="105" pos:column="32"/></name></name><argument_list pos:line="105" pos:column="32">()<pos:position pos:line="105" pos:column="34"/></argument_list></call><operator pos:line="105" pos:column="34">-&gt;<pos:position pos:line="105" pos:column="39"/></operator><call><name pos:line="105" pos:column="36">credentials<pos:position pos:line="105" pos:column="47"/></name><argument_list pos:line="105" pos:column="47">(<argument><expr><name><name pos:line="105" pos:column="48">Auth<pos:position pos:line="105" pos:column="52"/></name><operator pos:line="105" pos:column="52">::<pos:position pos:line="105" pos:column="54"/></operator><name pos:line="105" pos:column="54">Ok<pos:position pos:line="105" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="106" pos:column="9">debugs<pos:position pos:line="106" pos:column="15"/></name><argument_list pos:line="106" pos:column="15">(<argument><expr><literal type="number" pos:line="106" pos:column="16">29<pos:position pos:line="106" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="20">4<pos:position pos:line="106" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="106" pos:column="23">HERE<pos:position pos:line="106" pos:column="27"/></name> <operator pos:line="106" pos:column="28">&lt;&lt;<pos:position pos:line="106" pos:column="36"/></operator> <literal type="string" pos:line="106" pos:column="31">"Successfully validated user via Negotiate. Username '"<pos:position pos:line="106" pos:column="86"/></literal> <operator pos:line="106" pos:column="87">&lt;&lt;<pos:position pos:line="106" pos:column="95"/></operator> <name pos:line="106" pos:column="90">blob<pos:position pos:line="106" pos:column="94"/></name> <operator pos:line="106" pos:column="95">&lt;&lt;<pos:position pos:line="106" pos:column="103"/></operator> <literal type="string" pos:line="106" pos:column="98">"'"<pos:position pos:line="106" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="103"/></expr_stmt>

    }<pos:position pos:line="108" pos:column="6"/></block></then></if></elseif> <elseif pos:line="108" pos:column="7">else <if pos:line="108" pos:column="12">if <condition pos:line="108" pos:column="15">(<expr><call><name pos:line="108" pos:column="16">strncasecmp<pos:position pos:line="108" pos:column="27"/></name><argument_list pos:line="108" pos:column="27">(<argument><expr><name pos:line="108" pos:column="28">reply<pos:position pos:line="108" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="35">"NA "<pos:position pos:line="108" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="108" pos:column="42">3<pos:position pos:line="108" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="44"/></argument_list></call> <operator pos:line="108" pos:column="45">==<pos:position pos:line="108" pos:column="47"/></operator> <literal type="number" pos:line="108" pos:column="48">0<pos:position pos:line="108" pos:column="49"/></literal> <operator pos:line="108" pos:column="50">&amp;&amp;<pos:position pos:line="108" pos:column="60"/></operator> <name pos:line="108" pos:column="53">arg<pos:position pos:line="108" pos:column="56"/></name> <operator pos:line="108" pos:column="57">!=<pos:position pos:line="108" pos:column="59"/></operator> <name pos:line="108" pos:column="60">NULL<pos:position pos:line="108" pos:column="64"/></name></expr>)<pos:position pos:line="108" pos:column="65"/></condition><then pos:line="108" pos:column="65"> <block pos:line="108" pos:column="66">{
        <comment type="block" pos:line="109" pos:column="9">/* authentication failure (wrong password, etc.) */</comment>

        <if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><name pos:line="111" pos:column="13">arg<pos:position pos:line="111" pos:column="16"/></name></expr>)<pos:position pos:line="111" pos:column="17"/></condition><then pos:line="111" pos:column="17"> <block pos:line="111" pos:column="18">{
            <expr_stmt><expr><operator pos:line="112" pos:column="13">*<pos:position pos:line="112" pos:column="14"/></operator><name pos:line="112" pos:column="14">arg<pos:position pos:line="112" pos:column="17"/></name> <operator pos:line="112" pos:column="18">=<pos:position pos:line="112" pos:column="19"/></operator> <literal type="char" pos:line="112" pos:column="20">'\0'<pos:position pos:line="112" pos:column="24"/></literal></expr>;<pos:position pos:line="112" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="113" pos:column="13">++<pos:position pos:line="113" pos:column="15"/></operator><name pos:line="113" pos:column="15">arg<pos:position pos:line="113" pos:column="18"/></name></expr>;<pos:position pos:line="113" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="114" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="116" pos:column="9">auth_user_request<pos:position pos:line="116" pos:column="26"/></name><operator pos:line="116" pos:column="26">-&gt;<pos:position pos:line="116" pos:column="31"/></operator><name pos:line="116" pos:column="28">denyMessage<pos:position pos:line="116" pos:column="39"/></name></name><argument_list pos:line="116" pos:column="39">(<argument><expr><name pos:line="116" pos:column="40">arg<pos:position pos:line="116" pos:column="43"/></name></expr></argument>)<pos:position pos:line="116" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="117" pos:column="9">auth_user_request<pos:position pos:line="117" pos:column="26"/></name><operator pos:line="117" pos:column="26">-&gt;<pos:position pos:line="117" pos:column="31"/></operator><name pos:line="117" pos:column="28">user<pos:position pos:line="117" pos:column="32"/></name></name><argument_list pos:line="117" pos:column="32">()<pos:position pos:line="117" pos:column="34"/></argument_list></call><operator pos:line="117" pos:column="34">-&gt;<pos:position pos:line="117" pos:column="39"/></operator><call><name pos:line="117" pos:column="36">credentials<pos:position pos:line="117" pos:column="47"/></name><argument_list pos:line="117" pos:column="47">(<argument><expr><name><name pos:line="117" pos:column="48">Auth<pos:position pos:line="117" pos:column="52"/></name><operator pos:line="117" pos:column="52">::<pos:position pos:line="117" pos:column="54"/></operator><name pos:line="117" pos:column="54">Failed<pos:position pos:line="117" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="117" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="118" pos:column="9">safe_free<pos:position pos:line="118" pos:column="18"/></name><argument_list pos:line="118" pos:column="18">(<argument><expr><name><name pos:line="118" pos:column="19">lm_request<pos:position pos:line="118" pos:column="29"/></name><operator pos:line="118" pos:column="29">-&gt;<pos:position pos:line="118" pos:column="34"/></operator><name pos:line="118" pos:column="31">server_blob<pos:position pos:line="118" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="119" pos:column="9">lm_request<pos:position pos:line="119" pos:column="19"/></name><operator pos:line="119" pos:column="19">-&gt;<pos:position pos:line="119" pos:column="24"/></operator><name pos:line="119" pos:column="21">server_blob<pos:position pos:line="119" pos:column="32"/></name></name> <operator pos:line="119" pos:column="33">=<pos:position pos:line="119" pos:column="34"/></operator> <call><name pos:line="119" pos:column="35">xstrdup<pos:position pos:line="119" pos:column="42"/></name><argument_list pos:line="119" pos:column="42">(<argument><expr><name pos:line="119" pos:column="43">blob<pos:position pos:line="119" pos:column="47"/></name></expr></argument>)<pos:position pos:line="119" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="120" pos:column="9">lm_request<pos:position pos:line="120" pos:column="19"/></name><operator pos:line="120" pos:column="19">-&gt;<pos:position pos:line="120" pos:column="24"/></operator><name pos:line="120" pos:column="21">releaseAuthServer<pos:position pos:line="120" pos:column="38"/></name></name><argument_list pos:line="120" pos:column="38">()<pos:position pos:line="120" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="121" pos:column="9">debugs<pos:position pos:line="121" pos:column="15"/></name><argument_list pos:line="121" pos:column="15">(<argument><expr><literal type="number" pos:line="121" pos:column="16">29<pos:position pos:line="121" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="121" pos:column="20">4<pos:position pos:line="121" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="121" pos:column="23">HERE<pos:position pos:line="121" pos:column="27"/></name> <operator pos:line="121" pos:column="28">&lt;&lt;<pos:position pos:line="121" pos:column="36"/></operator> <literal type="string" pos:line="121" pos:column="31">"Failed validating user via Negotiate. Error returned '"<pos:position pos:line="121" pos:column="87"/></literal> <operator pos:line="121" pos:column="88">&lt;&lt;<pos:position pos:line="121" pos:column="96"/></operator> <name pos:line="121" pos:column="91">blob<pos:position pos:line="121" pos:column="95"/></name> <operator pos:line="121" pos:column="96">&lt;&lt;<pos:position pos:line="121" pos:column="104"/></operator> <literal type="string" pos:line="121" pos:column="99">"'"<pos:position pos:line="121" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="121" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="104"/></expr_stmt>
    }<pos:position pos:line="122" pos:column="6"/></block></then></if></elseif> <elseif pos:line="122" pos:column="7">else <if pos:line="122" pos:column="12">if <condition pos:line="122" pos:column="15">(<expr><call><name pos:line="122" pos:column="16">strncasecmp<pos:position pos:line="122" pos:column="27"/></name><argument_list pos:line="122" pos:column="27">(<argument><expr><name pos:line="122" pos:column="28">reply<pos:position pos:line="122" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="122" pos:column="35">"BH "<pos:position pos:line="122" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="122" pos:column="42">3<pos:position pos:line="122" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="44"/></argument_list></call> <operator pos:line="122" pos:column="45">==<pos:position pos:line="122" pos:column="47"/></operator> <literal type="number" pos:line="122" pos:column="48">0<pos:position pos:line="122" pos:column="49"/></literal></expr>)<pos:position pos:line="122" pos:column="50"/></condition><then pos:line="122" pos:column="50"> <block pos:line="122" pos:column="51">{
        <comment type="block" pos:line="123" pos:column="9">/* TODO kick off a refresh process. This can occur after a YR or after
         * a KK. If after a YR release the helper and resubmit the request via
         * Authenticate Negotiate start.
         * If after a KK deny the user's request w/ 407 and mark the helper as
         * Needing YR. */</comment>
        <expr_stmt><expr><call><name><name pos:line="128" pos:column="9">auth_user_request<pos:position pos:line="128" pos:column="26"/></name><operator pos:line="128" pos:column="26">-&gt;<pos:position pos:line="128" pos:column="31"/></operator><name pos:line="128" pos:column="28">denyMessage<pos:position pos:line="128" pos:column="39"/></name></name><argument_list pos:line="128" pos:column="39">(<argument><expr><name pos:line="128" pos:column="40">blob<pos:position pos:line="128" pos:column="44"/></name></expr></argument>)<pos:position pos:line="128" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="129" pos:column="9">auth_user_request<pos:position pos:line="129" pos:column="26"/></name><operator pos:line="129" pos:column="26">-&gt;<pos:position pos:line="129" pos:column="31"/></operator><name pos:line="129" pos:column="28">user<pos:position pos:line="129" pos:column="32"/></name></name><argument_list pos:line="129" pos:column="32">()<pos:position pos:line="129" pos:column="34"/></argument_list></call><operator pos:line="129" pos:column="34">-&gt;<pos:position pos:line="129" pos:column="39"/></operator><call><name pos:line="129" pos:column="36">credentials<pos:position pos:line="129" pos:column="47"/></name><argument_list pos:line="129" pos:column="47">(<argument><expr><name><name pos:line="129" pos:column="48">Auth<pos:position pos:line="129" pos:column="52"/></name><operator pos:line="129" pos:column="52">::<pos:position pos:line="129" pos:column="54"/></operator><name pos:line="129" pos:column="54">Failed<pos:position pos:line="129" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="129" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="130" pos:column="9">safe_free<pos:position pos:line="130" pos:column="18"/></name><argument_list pos:line="130" pos:column="18">(<argument><expr><name><name pos:line="130" pos:column="19">lm_request<pos:position pos:line="130" pos:column="29"/></name><operator pos:line="130" pos:column="29">-&gt;<pos:position pos:line="130" pos:column="34"/></operator><name pos:line="130" pos:column="31">server_blob<pos:position pos:line="130" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="131" pos:column="9">lm_request<pos:position pos:line="131" pos:column="19"/></name><operator pos:line="131" pos:column="19">-&gt;<pos:position pos:line="131" pos:column="24"/></operator><name pos:line="131" pos:column="21">releaseAuthServer<pos:position pos:line="131" pos:column="38"/></name></name><argument_list pos:line="131" pos:column="38">()<pos:position pos:line="131" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="132" pos:column="9">debugs<pos:position pos:line="132" pos:column="15"/></name><argument_list pos:line="132" pos:column="15">(<argument><expr><literal type="number" pos:line="132" pos:column="16">29<pos:position pos:line="132" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="132" pos:column="20">DBG_IMPORTANT<pos:position pos:line="132" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="35">"ERROR: Negotiate Authentication validating user. Error returned '"<pos:position pos:line="132" pos:column="102"/></literal> <operator pos:line="132" pos:column="103">&lt;&lt;<pos:position pos:line="132" pos:column="111"/></operator> <name pos:line="132" pos:column="106">reply<pos:position pos:line="132" pos:column="111"/></name> <operator pos:line="132" pos:column="112">&lt;&lt;<pos:position pos:line="132" pos:column="120"/></operator> <literal type="string" pos:line="132" pos:column="115">"'"<pos:position pos:line="132" pos:column="118"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="120"/></expr_stmt>
    }<pos:position pos:line="133" pos:column="6"/></block></then></if></elseif> <else pos:line="133" pos:column="7">else <block pos:line="133" pos:column="12">{
        <comment type="block" pos:line="134" pos:column="9">/* protocol error */</comment>
        <expr_stmt><expr><call><name pos:line="135" pos:column="9">fatalf<pos:position pos:line="135" pos:column="15"/></name><argument_list pos:line="135" pos:column="15">(<argument><expr><literal type="string" pos:line="135" pos:column="16">"authenticateNegotiateHandleReply: *** Unsupported helper response ***, '%s'\n"<pos:position pos:line="135" pos:column="95"/></literal></expr></argument>, <argument><expr><name pos:line="135" pos:column="97">reply<pos:position pos:line="135" pos:column="102"/></name></expr></argument>)<pos:position pos:line="135" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="104"/></expr_stmt>
    }<pos:position pos:line="136" pos:column="6"/></block></else></if>

    <if pos:line="138" pos:column="5">if <condition pos:line="138" pos:column="8">(<expr><name><name pos:line="138" pos:column="9">lm_request<pos:position pos:line="138" pos:column="19"/></name><operator pos:line="138" pos:column="19">-&gt;<pos:position pos:line="138" pos:column="24"/></operator><name pos:line="138" pos:column="21">request<pos:position pos:line="138" pos:column="28"/></name></name></expr>)<pos:position pos:line="138" pos:column="29"/></condition><then pos:line="138" pos:column="29"> <block pos:line="138" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="139" pos:column="9">HTTPMSGUNLOCK<pos:position pos:line="139" pos:column="22"/></name><argument_list pos:line="139" pos:column="22">(<argument><expr><name><name pos:line="139" pos:column="23">lm_request<pos:position pos:line="139" pos:column="33"/></name><operator pos:line="139" pos:column="33">-&gt;<pos:position pos:line="139" pos:column="38"/></operator><name pos:line="139" pos:column="35">request<pos:position pos:line="139" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="139" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="140" pos:column="9">lm_request<pos:position pos:line="140" pos:column="19"/></name><operator pos:line="140" pos:column="19">-&gt;<pos:position pos:line="140" pos:column="24"/></operator><name pos:line="140" pos:column="21">request<pos:position pos:line="140" pos:column="28"/></name></name> <operator pos:line="140" pos:column="29">=<pos:position pos:line="140" pos:column="30"/></operator> <name pos:line="140" pos:column="31">NULL<pos:position pos:line="140" pos:column="35"/></name></expr>;<pos:position pos:line="140" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="141" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="142" pos:column="5">r<pos:position pos:line="142" pos:column="6"/></name><operator pos:line="142" pos:column="6">-&gt;<pos:position pos:line="142" pos:column="11"/></operator><name pos:line="142" pos:column="8">handler<pos:position pos:line="142" pos:column="15"/></name></name><argument_list pos:line="142" pos:column="15">(<argument><expr><name><name pos:line="142" pos:column="16">r<pos:position pos:line="142" pos:column="17"/></name><operator pos:line="142" pos:column="17">-&gt;<pos:position pos:line="142" pos:column="22"/></operator><name pos:line="142" pos:column="19">data<pos:position pos:line="142" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="143" pos:column="5">delete<pos:position pos:line="143" pos:column="11"/></operator> <name pos:line="143" pos:column="12">r<pos:position pos:line="143" pos:column="13"/></name></expr>;<pos:position pos:line="143" pos:column="14"/></expr_stmt>
}<pos:position pos:line="144" pos:column="2"/></block></function></unit>

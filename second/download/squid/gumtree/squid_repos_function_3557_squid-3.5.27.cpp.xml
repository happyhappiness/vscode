<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3557_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientSocketContext<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">WroteControlMsg<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name><name pos:line="2" pos:column="44">Comm<pos:position pos:line="2" pos:column="48"/></name><operator pos:line="2" pos:column="48">::<pos:position pos:line="2" pos:column="50"/></operator><name pos:line="2" pos:column="50">ConnectionPointer<pos:position pos:line="2" pos:column="67"/></name></name> <modifier pos:line="2" pos:column="68">&amp;<pos:position pos:line="2" pos:column="73"/></modifier></type><name pos:line="2" pos:column="69">conn<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="75">char<pos:position pos:line="2" pos:column="79"/></name> <modifier pos:line="2" pos:column="80">*<pos:position pos:line="2" pos:column="81"/></modifier></type><name pos:line="2" pos:column="81">bufnotused<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="93">size_t<pos:position pos:line="2" pos:column="99"/></name></type> <name pos:line="2" pos:column="100">size<pos:position pos:line="2" pos:column="104"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="106">Comm<pos:position pos:line="2" pos:column="110"/></name><operator pos:line="2" pos:column="110">::<pos:position pos:line="2" pos:column="112"/></operator><name pos:line="2" pos:column="112">Flag<pos:position pos:line="2" pos:column="116"/></name></name></type> <name pos:line="2" pos:column="117">errflag<pos:position pos:line="2" pos:column="124"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="126">int<pos:position pos:line="2" pos:column="129"/></name></type> <name pos:line="2" pos:column="130">xerrno<pos:position pos:line="2" pos:column="136"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="138">void<pos:position pos:line="2" pos:column="142"/></name> <modifier pos:line="2" pos:column="143">*<pos:position pos:line="2" pos:column="144"/></modifier></type><name pos:line="2" pos:column="144">data<pos:position pos:line="2" pos:column="148"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="149"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ClientSocketContext<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">context<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><cast type="static" pos:line="4" pos:column="36">static_cast<argument_list type="generic" pos:line="4" pos:column="47">&lt;<argument><expr><name pos:line="4" pos:column="48">ClientSocketContext<pos:position pos:line="4" pos:column="67"/></name><operator pos:line="4" pos:column="67">*<pos:position pos:line="4" pos:column="68"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="72"/></argument_list><argument_list pos:line="4" pos:column="69">(<argument><expr><name pos:line="4" pos:column="70">data<pos:position pos:line="4" pos:column="74"/></name></expr></argument>)<pos:position pos:line="4" pos:column="75"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="76"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">context<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">-&gt;<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="14">wroteControlMsg<pos:position pos:line="5" pos:column="29"/></name></name><argument_list pos:line="5" pos:column="29">(<argument><expr><name pos:line="5" pos:column="30">conn<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">bufnotused<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="48">size<pos:position pos:line="5" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="54">errflag<pos:position pos:line="5" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="63">xerrno<pos:position pos:line="5" pos:column="69"/></name></expr></argument>)<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="71"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_222_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">read_reply<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">int<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">fd<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="20">void<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">data<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">_request<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">r<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">data<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="5" pos:column="5">static<pos:position pos:line="5" pos:column="11"/></specifier> <type><name pos:line="5" pos:column="12">unsigned<pos:position pos:line="5" pos:column="20"/></name> <name pos:line="5" pos:column="21">char<pos:position pos:line="5" pos:column="25"/></name></type> <name><name pos:line="5" pos:column="26">buf<pos:position pos:line="5" pos:column="29"/></name><index pos:line="5" pos:column="29">[<expr><name pos:line="5" pos:column="30">READ_BUF_SZ<pos:position pos:line="5" pos:column="41"/></name></expr>]<pos:position pos:line="5" pos:column="42"/></index></name></decl>;<pos:position pos:line="5" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">len<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">used<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">len<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">read<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">fd<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">buf<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="30">READ_BUF_SZ<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call><operator pos:line="8" pos:column="42">)<pos:position pos:line="8" pos:column="43"/></operator> <operator pos:line="8" pos:column="44">&lt;=<pos:position pos:line="8" pos:column="49"/></operator> <literal type="number" pos:line="8" pos:column="47">0<pos:position pos:line="8" pos:column="48"/></literal></expr>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49"> <block pos:line="8" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">fd_close<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">fd<pos:position pos:line="9" pos:column="20"/></name></expr></argument>)<pos:position pos:line="9" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">reqpersec<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">++<pos:position pos:line="10" pos:column="20"/></operator></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">nrequests<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">++<pos:position pos:line="11" pos:column="20"/></operator></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="14" pos:column="5">total_bytes_read<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">+=<pos:position pos:line="14" pos:column="24"/></operator> <name pos:line="14" pos:column="25">len<pos:position pos:line="14" pos:column="28"/></name></expr>;<pos:position pos:line="14" pos:column="29"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name><name pos:line="15" pos:column="9">r<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">headfound<pos:position pos:line="15" pos:column="21"/></name></name> <operator pos:line="15" pos:column="22">&lt;<pos:position pos:line="15" pos:column="26"/></operator> <literal type="number" pos:line="15" pos:column="24">2<pos:position pos:line="15" pos:column="25"/></literal></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <block pos:line="15" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">char<pos:position pos:line="16" pos:column="13"/></name> <modifier pos:line="16" pos:column="14">*<pos:position pos:line="16" pos:column="15"/></modifier></type><name pos:line="16" pos:column="15">p<pos:position pos:line="16" pos:column="16"/></name></decl>, <modifier pos:line="16" pos:column="18">*<pos:position pos:line="16" pos:column="19"/></modifier><decl><type ref="prev"/><name pos:line="16" pos:column="19">header<pos:position pos:line="16" pos:column="25"/></name> <init pos:line="16" pos:column="26">= <expr><name pos:line="16" pos:column="28">NULL<pos:position pos:line="16" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="33"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">int<pos:position pos:line="17" pos:column="12"/></name></type> <name pos:line="17" pos:column="13">oldlen<pos:position pos:line="17" pos:column="19"/></name> <init pos:line="17" pos:column="20">= <expr><call><name pos:line="17" pos:column="22">strlen<pos:position pos:line="17" pos:column="28"/></name><argument_list pos:line="17" pos:column="28">(<argument><expr><name><name pos:line="17" pos:column="29">r<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">buf<pos:position pos:line="17" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="37"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">int<pos:position pos:line="18" pos:column="12"/></name></type> <name pos:line="18" pos:column="13">newlen<pos:position pos:line="18" pos:column="19"/></name> <init pos:line="18" pos:column="20">= <expr><name pos:line="18" pos:column="22">oldlen<pos:position pos:line="18" pos:column="28"/></name> <operator pos:line="18" pos:column="29">+<pos:position pos:line="18" pos:column="30"/></operator> <name pos:line="18" pos:column="31">len<pos:position pos:line="18" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="35"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">assert<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">oldlen<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">&lt;=<pos:position pos:line="19" pos:column="28"/></operator> <name pos:line="19" pos:column="26">READ_BUF_SZ<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">memcpy<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name><name pos:line="20" pos:column="16">r<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">buf<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">+<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">oldlen<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="33">buf<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">len<pos:position pos:line="20" pos:column="41"/></name></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">r<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">buf<pos:position pos:line="21" pos:column="15"/></name><index pos:line="21" pos:column="15">[<expr><name pos:line="21" pos:column="16">newlen<pos:position pos:line="21" pos:column="22"/></name> <operator pos:line="21" pos:column="23">+<pos:position pos:line="21" pos:column="24"/></operator> <literal type="number" pos:line="21" pos:column="25">1<pos:position pos:line="21" pos:column="26"/></literal></expr>]<pos:position pos:line="21" pos:column="27"/></index></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <literal type="char" pos:line="21" pos:column="30">'\0'<pos:position pos:line="21" pos:column="34"/></literal></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
        <for pos:line="22" pos:column="9">for <control pos:line="22" pos:column="13">(<init><expr><name pos:line="22" pos:column="14">p<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name><name pos:line="22" pos:column="18">r<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">buf<pos:position pos:line="22" pos:column="24"/></name></name></expr>;<pos:position pos:line="22" pos:column="25"/></init> <condition><expr><name><name pos:line="22" pos:column="26">r<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">-&gt;<pos:position pos:line="22" pos:column="32"/></operator><name pos:line="22" pos:column="29">headfound<pos:position pos:line="22" pos:column="38"/></name></name> <operator pos:line="22" pos:column="39">&lt;<pos:position pos:line="22" pos:column="43"/></operator> <literal type="number" pos:line="22" pos:column="41">2<pos:position pos:line="22" pos:column="42"/></literal> <operator pos:line="22" pos:column="43">&amp;&amp;<pos:position pos:line="22" pos:column="53"/></operator> <name pos:line="22" pos:column="46">used<pos:position pos:line="22" pos:column="50"/></name> <operator pos:line="22" pos:column="51">&lt;<pos:position pos:line="22" pos:column="55"/></operator> <name pos:line="22" pos:column="53">newlen<pos:position pos:line="22" pos:column="59"/></name></expr>;<pos:position pos:line="22" pos:column="60"/></condition> <incr><expr><name pos:line="22" pos:column="61">p<pos:position pos:line="22" pos:column="62"/></name><operator pos:line="22" pos:column="62">++<pos:position pos:line="22" pos:column="64"/></operator></expr><operator pos:line="22" pos:column="64">,<pos:position pos:line="22" pos:column="65"/></operator> <expr><name pos:line="22" pos:column="66">used<pos:position pos:line="22" pos:column="70"/></name><operator pos:line="22" pos:column="70">++<pos:position pos:line="22" pos:column="72"/></operator></expr></incr>)<pos:position pos:line="22" pos:column="73"/></control> <block pos:line="22" pos:column="74">{
            <switch pos:line="23" pos:column="13">switch <condition pos:line="23" pos:column="20">(<expr><operator pos:line="23" pos:column="21">*<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">p<pos:position pos:line="23" pos:column="23"/></name></expr>)<pos:position pos:line="23" pos:column="24"/></condition> <block pos:line="23" pos:column="25">{
            <case pos:line="24" pos:column="13">case <expr><literal type="char" pos:line="24" pos:column="18">'\n'<pos:position pos:line="24" pos:column="22"/></literal></expr>:<pos:position pos:line="24" pos:column="23"/></case>
                <expr_stmt><expr><name><name pos:line="25" pos:column="17">r<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">headfound<pos:position pos:line="25" pos:column="29"/></name></name><operator pos:line="25" pos:column="29">++<pos:position pos:line="25" pos:column="31"/></operator></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>
                <if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><operator pos:line="26" pos:column="21">!<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">header<pos:position pos:line="26" pos:column="28"/></name></expr>)<pos:position pos:line="26" pos:column="29"/></condition><then pos:line="26" pos:column="29">
                    <block type="pseudo"><break pos:line="27" pos:column="21">break;<pos:position pos:line="27" pos:column="27"/></break></block></then></if>
                <comment type="block" pos:line="28" pos:column="17">/* Decode header */</comment>
                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">strncmp<pos:position pos:line="29" pos:column="28"/></name><argument_list pos:line="29" pos:column="28">(<argument><expr><name pos:line="29" pos:column="29">header<pos:position pos:line="29" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="37">"HTTP"<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="45">4<pos:position pos:line="29" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call> <operator pos:line="29" pos:column="48">==<pos:position pos:line="29" pos:column="50"/></operator> <literal type="number" pos:line="29" pos:column="51">0<pos:position pos:line="29" pos:column="52"/></literal></expr>)<pos:position pos:line="29" pos:column="53"/></condition><then pos:line="29" pos:column="53">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="30" pos:column="21">r<pos:position pos:line="30" pos:column="22"/></name><operator pos:line="30" pos:column="22">-&gt;<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="24">status<pos:position pos:line="30" pos:column="30"/></name></name> <operator pos:line="30" pos:column="31">=<pos:position pos:line="30" pos:column="32"/></operator> <call><name pos:line="30" pos:column="33">atoi<pos:position pos:line="30" pos:column="37"/></name><argument_list pos:line="30" pos:column="37">(<argument><expr><name pos:line="30" pos:column="38">header<pos:position pos:line="30" pos:column="44"/></name> <operator pos:line="30" pos:column="45">+<pos:position pos:line="30" pos:column="46"/></operator> <literal type="number" pos:line="30" pos:column="47">8<pos:position pos:line="30" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="50"/></expr_stmt></block></then>
                <elseif pos:line="31" pos:column="17">else <if pos:line="31" pos:column="22">if <condition pos:line="31" pos:column="25">(<expr><call><name pos:line="31" pos:column="26">strncasecmp<pos:position pos:line="31" pos:column="37"/></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">header<pos:position pos:line="31" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="46">"Content-Length:"<pos:position pos:line="31" pos:column="63"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="65">15<pos:position pos:line="31" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="68"/></argument_list></call> <operator pos:line="31" pos:column="69">==<pos:position pos:line="31" pos:column="71"/></operator> <literal type="number" pos:line="31" pos:column="72">0<pos:position pos:line="31" pos:column="73"/></literal></expr>)<pos:position pos:line="31" pos:column="74"/></condition><then pos:line="31" pos:column="74">
                    <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="21">r<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">content_length<pos:position pos:line="32" pos:column="38"/></name></name> <operator pos:line="32" pos:column="39">=<pos:position pos:line="32" pos:column="40"/></operator> <call><name pos:line="32" pos:column="41">atoi<pos:position pos:line="32" pos:column="45"/></name><argument_list pos:line="32" pos:column="45">(<argument><expr><name pos:line="32" pos:column="46">header<pos:position pos:line="32" pos:column="52"/></name> <operator pos:line="32" pos:column="53">+<pos:position pos:line="32" pos:column="54"/></operator> <literal type="number" pos:line="32" pos:column="55">15<pos:position pos:line="32" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="59"/></expr_stmt></block></then></if></elseif>
                <elseif pos:line="33" pos:column="17">else <if pos:line="33" pos:column="22">if <condition pos:line="33" pos:column="25">(<expr><call><name pos:line="33" pos:column="26">strncasecmp<pos:position pos:line="33" pos:column="37"/></name><argument_list pos:line="33" pos:column="37">(<argument><expr><name pos:line="33" pos:column="38">header<pos:position pos:line="33" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="46">"X-Request-URI:"<pos:position pos:line="33" pos:column="62"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="64">14<pos:position pos:line="33" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="67"/></argument_list></call> <operator pos:line="33" pos:column="68">==<pos:position pos:line="33" pos:column="70"/></operator> <literal type="number" pos:line="33" pos:column="71">0<pos:position pos:line="33" pos:column="72"/></literal></expr>)<pos:position pos:line="33" pos:column="73"/></condition><then pos:line="33" pos:column="73"> <block pos:line="33" pos:column="74">{
                    <comment type="block" pos:line="34" pos:column="21">/* Check URI */</comment>
                    <if pos:line="35" pos:column="21">if <condition pos:line="35" pos:column="24">(<expr><call><name pos:line="35" pos:column="25">strncmp<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><name><name pos:line="35" pos:column="33">r<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">-&gt;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="36">url<pos:position pos:line="35" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="41">header<pos:position pos:line="35" pos:column="47"/></name> <operator pos:line="35" pos:column="48">+<pos:position pos:line="35" pos:column="49"/></operator> <literal type="number" pos:line="35" pos:column="50">15<pos:position pos:line="35" pos:column="52"/></literal></expr></argument>, <argument><expr><call><name pos:line="35" pos:column="54">strcspn<pos:position pos:line="35" pos:column="61"/></name><argument_list pos:line="35" pos:column="61">(<argument><expr><name pos:line="35" pos:column="62">header<pos:position pos:line="35" pos:column="68"/></name> <operator pos:line="35" pos:column="69">+<pos:position pos:line="35" pos:column="70"/></operator> <literal type="number" pos:line="35" pos:column="71">15<pos:position pos:line="35" pos:column="73"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="75">"\r\n"<pos:position pos:line="35" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="35" pos:column="84"/></condition><then pos:line="35" pos:column="84"> <block pos:line="35" pos:column="85">{
                        <decl_stmt><decl><type><name pos:line="36" pos:column="25">char<pos:position pos:line="36" pos:column="29"/></name></type> <name><name pos:line="36" pos:column="30">url<pos:position pos:line="36" pos:column="33"/></name><index pos:line="36" pos:column="33">[<expr><literal type="number" pos:line="36" pos:column="34">8192<pos:position pos:line="36" pos:column="38"/></literal></expr>]<pos:position pos:line="36" pos:column="39"/></index></name></decl>;<pos:position pos:line="36" pos:column="40"/></decl_stmt>
                        <expr_stmt><expr><call><name pos:line="37" pos:column="25">strncpy<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">url<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="38">header<pos:position pos:line="37" pos:column="44"/></name> <operator pos:line="37" pos:column="45">+<pos:position pos:line="37" pos:column="46"/></operator> <literal type="number" pos:line="37" pos:column="47">15<pos:position pos:line="37" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name pos:line="37" pos:column="51">strcspn<pos:position pos:line="37" pos:column="58"/></name><argument_list pos:line="37" pos:column="58">(<argument><expr><name pos:line="37" pos:column="59">header<pos:position pos:line="37" pos:column="65"/></name> <operator pos:line="37" pos:column="66">+<pos:position pos:line="37" pos:column="67"/></operator> <literal type="number" pos:line="37" pos:column="68">15<pos:position pos:line="37" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="72">"\r\n"<pos:position pos:line="37" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="81"/></expr_stmt>
                        <expr_stmt><expr><name><name pos:line="38" pos:column="25">url<pos:position pos:line="38" pos:column="28"/></name><index pos:line="38" pos:column="28">[<expr><call><name pos:line="38" pos:column="29">strcspn<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><name pos:line="38" pos:column="37">header<pos:position pos:line="38" pos:column="43"/></name> <operator pos:line="38" pos:column="44">+<pos:position pos:line="38" pos:column="45"/></operator> <literal type="number" pos:line="38" pos:column="46">15<pos:position pos:line="38" pos:column="48"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="50">"\r\n"<pos:position pos:line="38" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call></expr>]<pos:position pos:line="38" pos:column="58"/></index></name> <operator pos:line="38" pos:column="59">=<pos:position pos:line="38" pos:column="60"/></operator> <literal type="char" pos:line="38" pos:column="61">'\n'<pos:position pos:line="38" pos:column="65"/></literal></expr>;<pos:position pos:line="38" pos:column="66"/></expr_stmt>
                        <expr_stmt><expr><call><name pos:line="39" pos:column="25">fprintf<pos:position pos:line="39" pos:column="32"/></name><argument_list pos:line="39" pos:column="32">(<argument><expr><name pos:line="39" pos:column="33">stderr<pos:position pos:line="39" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="41">"ERROR: Sent %s received %s\n"<pos:position pos:line="39" pos:column="71"/></literal></expr></argument>,
                                <argument><expr><name><name pos:line="40" pos:column="33">r<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">-&gt;<pos:position pos:line="40" pos:column="39"/></operator><name pos:line="40" pos:column="36">url<pos:position pos:line="40" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="41">url<pos:position pos:line="40" pos:column="44"/></name></expr></argument>)<pos:position pos:line="40" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="46"/></expr_stmt>
                    }<pos:position pos:line="41" pos:column="22"/></block></then></if>
                }<pos:position pos:line="42" pos:column="18"/></block></then></if></elseif></if>
                <expr_stmt><expr><name pos:line="43" pos:column="17">header<pos:position pos:line="43" pos:column="23"/></name> <operator pos:line="43" pos:column="24">=<pos:position pos:line="43" pos:column="25"/></operator> <name pos:line="43" pos:column="26">NULL<pos:position pos:line="43" pos:column="30"/></name></expr>;<pos:position pos:line="43" pos:column="31"/></expr_stmt>
                <break pos:line="44" pos:column="17">break;<pos:position pos:line="44" pos:column="23"/></break>
            <case pos:line="45" pos:column="13">case <expr><literal type="char" pos:line="45" pos:column="18">'\r'<pos:position pos:line="45" pos:column="22"/></literal></expr>:<pos:position pos:line="45" pos:column="23"/></case>
                <break pos:line="46" pos:column="17">break;<pos:position pos:line="46" pos:column="23"/></break>
            <default pos:line="47" pos:column="13">default:<pos:position pos:line="47" pos:column="21"/></default>
                <expr_stmt><expr><name><name pos:line="48" pos:column="17">r<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">headfound<pos:position pos:line="48" pos:column="29"/></name></name> <operator pos:line="48" pos:column="30">=<pos:position pos:line="48" pos:column="31"/></operator> <literal type="number" pos:line="48" pos:column="32">0<pos:position pos:line="48" pos:column="33"/></literal></expr>;<pos:position pos:line="48" pos:column="34"/></expr_stmt>
                <if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">!<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">header<pos:position pos:line="49" pos:column="28"/></name></expr>)<pos:position pos:line="49" pos:column="29"/></condition><then pos:line="49" pos:column="29">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="50" pos:column="21">header<pos:position pos:line="50" pos:column="27"/></name> <operator pos:line="50" pos:column="28">=<pos:position pos:line="50" pos:column="29"/></operator> <name pos:line="50" pos:column="30">p<pos:position pos:line="50" pos:column="31"/></name></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt></block></then></if>
                <break pos:line="51" pos:column="17">break;<pos:position pos:line="51" pos:column="23"/></break>
            }<pos:position pos:line="52" pos:column="14"/></block></switch>
        }<pos:position pos:line="53" pos:column="10"/></block></for>
        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name pos:line="54" pos:column="13">header<pos:position pos:line="54" pos:column="19"/></name></expr>)<pos:position pos:line="54" pos:column="20"/></condition><then pos:line="54" pos:column="20"> <block pos:line="54" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="55" pos:column="13">memmove<pos:position pos:line="55" pos:column="20"/></name><argument_list pos:line="55" pos:column="20">(<argument><expr><name><name pos:line="55" pos:column="21">r<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">-&gt;<pos:position pos:line="55" pos:column="27"/></operator><name pos:line="55" pos:column="24">buf<pos:position pos:line="55" pos:column="27"/></name></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="29">header<pos:position pos:line="55" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="37">newlen<pos:position pos:line="55" pos:column="43"/></name> <operator pos:line="55" pos:column="44">-<pos:position pos:line="55" pos:column="45"/></operator> <operator pos:line="55" pos:column="46">(<pos:position pos:line="55" pos:column="47"/></operator><name pos:line="55" pos:column="47">header<pos:position pos:line="55" pos:column="53"/></name> <operator pos:line="55" pos:column="54">-<pos:position pos:line="55" pos:column="55"/></operator> <name><name pos:line="55" pos:column="56">r<pos:position pos:line="55" pos:column="57"/></name><operator pos:line="55" pos:column="57">-&gt;<pos:position pos:line="55" pos:column="62"/></operator><name pos:line="55" pos:column="59">buf<pos:position pos:line="55" pos:column="62"/></name></name><operator pos:line="55" pos:column="62">)<pos:position pos:line="55" pos:column="63"/></operator> <operator pos:line="55" pos:column="64">+<pos:position pos:line="55" pos:column="65"/></operator> <literal type="number" pos:line="55" pos:column="66">1<pos:position pos:line="55" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="69"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">assert<pos:position pos:line="57" pos:column="15"/></name><argument_list pos:line="57" pos:column="15">(<argument><expr><name pos:line="57" pos:column="16">used<pos:position pos:line="57" pos:column="20"/></name> <operator pos:line="57" pos:column="21">&gt;=<pos:position pos:line="57" pos:column="26"/></operator> <name pos:line="57" pos:column="24">oldlen<pos:position pos:line="57" pos:column="30"/></name></expr></argument>)<pos:position pos:line="57" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">used<pos:position pos:line="58" pos:column="13"/></name> <operator pos:line="58" pos:column="14">-=<pos:position pos:line="58" pos:column="16"/></operator> <name pos:line="58" pos:column="17">oldlen<pos:position pos:line="58" pos:column="23"/></name></expr>;<pos:position pos:line="58" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">r<pos:position pos:line="60" pos:column="6"/></name><operator pos:line="60" pos:column="6">-&gt;<pos:position pos:line="60" pos:column="11"/></operator><name pos:line="60" pos:column="8">bodysize<pos:position pos:line="60" pos:column="16"/></name></name> <operator pos:line="60" pos:column="17">+=<pos:position pos:line="60" pos:column="19"/></operator> <name pos:line="60" pos:column="20">len<pos:position pos:line="60" pos:column="23"/></name> <operator pos:line="60" pos:column="24">-<pos:position pos:line="60" pos:column="25"/></operator> <name pos:line="60" pos:column="26">used<pos:position pos:line="60" pos:column="30"/></name></expr>;<pos:position pos:line="60" pos:column="31"/></expr_stmt>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">opt_checksum<pos:position pos:line="61" pos:column="21"/></name></expr>)<pos:position pos:line="61" pos:column="22"/></condition><then pos:line="61" pos:column="22"> <block pos:line="61" pos:column="23">{
        <for pos:line="62" pos:column="9">for <control pos:line="62" pos:column="13">(<init pos:line="62" pos:column="14">;<pos:position pos:line="62" pos:column="15"/></init> <condition><expr><name pos:line="62" pos:column="16">used<pos:position pos:line="62" pos:column="20"/></name> <operator pos:line="62" pos:column="21">&lt;<pos:position pos:line="62" pos:column="25"/></operator> <name pos:line="62" pos:column="23">len<pos:position pos:line="62" pos:column="26"/></name></expr>;<pos:position pos:line="62" pos:column="27"/></condition> <incr><expr><name pos:line="62" pos:column="28">used<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">++<pos:position pos:line="62" pos:column="34"/></operator></expr></incr>)<pos:position pos:line="62" pos:column="35"/></control> <block pos:line="62" pos:column="36">{
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">r<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">sum<pos:position pos:line="63" pos:column="19"/></name></name> <operator pos:line="63" pos:column="20">+=<pos:position pos:line="63" pos:column="22"/></operator> <name><name pos:line="63" pos:column="23">buf<pos:position pos:line="63" pos:column="26"/></name><index pos:line="63" pos:column="26">[<expr><name pos:line="63" pos:column="27">used<pos:position pos:line="63" pos:column="31"/></name></expr>]<pos:position pos:line="63" pos:column="32"/></index></name></expr>;<pos:position pos:line="63" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="64" pos:column="10"/></block></for>
    }<pos:position pos:line="65" pos:column="6"/></block></then></if>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

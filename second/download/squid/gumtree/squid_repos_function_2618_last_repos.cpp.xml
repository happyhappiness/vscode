<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2618_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">storeSwapInStart<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">store_client<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">sc<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name><name pos:line="4" pos:column="21">sc<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">-&gt;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="25">entry<pos:position pos:line="4" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">EBIT_TEST<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><name><name pos:line="6" pos:column="20">e<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">-&gt;<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="23">flags<pos:position pos:line="6" pos:column="28"/></name></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="30">ENTRY_VALIDATED<pos:position pos:line="6" pos:column="45"/></name></expr></argument>)<pos:position pos:line="6" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="47"/></condition><then pos:line="6" pos:column="47"> <block pos:line="6" pos:column="48">{
        <comment type="block" pos:line="7" pos:column="9">/* We're still reloading and haven't validated this entry yet */</comment>
        <return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">e<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">-&gt;<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="12">mem_status<pos:position pos:line="11" pos:column="22"/></name></name> <operator pos:line="11" pos:column="23">!=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">NOT_IN_MEMORY<pos:position pos:line="11" pos:column="39"/></name></expr>)<pos:position pos:line="11" pos:column="40"/></condition><then pos:line="11" pos:column="40">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">20<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="20">3<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">HERE<pos:position pos:line="12" pos:column="27"/></name> <operator pos:line="12" pos:column="28">&lt;&lt;<pos:position pos:line="12" pos:column="36"/></operator> <literal type="string" pos:line="12" pos:column="31">"already IN_MEMORY"<pos:position pos:line="12" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debugs<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">20<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="16">3<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="19">"storeSwapInStart: called for : "<pos:position pos:line="14" pos:column="52"/></literal> <operator pos:line="14" pos:column="53">&lt;&lt;<pos:position pos:line="14" pos:column="61"/></operator> <name><name pos:line="14" pos:column="56">e<pos:position pos:line="14" pos:column="57"/></name><operator pos:line="14" pos:column="57">-&gt;<pos:position pos:line="14" pos:column="62"/></operator><name pos:line="14" pos:column="59">swap_dirn<pos:position pos:line="14" pos:column="68"/></name></name> <operator pos:line="14" pos:column="69">&lt;&lt;<pos:position pos:line="14" pos:column="77"/></operator> <literal type="string" pos:line="14" pos:column="72">" "<pos:position pos:line="14" pos:column="75"/></literal> <operator pos:line="14" pos:column="76">&lt;&lt;<pos:position pos:line="14" pos:column="84"/></operator>
           <name><name pos:line="15" pos:column="12">std<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">::<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">hex<pos:position pos:line="15" pos:column="20"/></name></name> <operator pos:line="15" pos:column="21">&lt;&lt;<pos:position pos:line="15" pos:column="29"/></operator> <call><name><name pos:line="15" pos:column="24">std<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">::<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">setw<pos:position pos:line="15" pos:column="33"/></name></name><argument_list pos:line="15" pos:column="33">(<argument><expr><literal type="number" pos:line="15" pos:column="34">8<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="36"/></argument_list></call> <operator pos:line="15" pos:column="37">&lt;&lt;<pos:position pos:line="15" pos:column="45"/></operator> <call><name><name pos:line="15" pos:column="40">std<pos:position pos:line="15" pos:column="43"/></name><operator pos:line="15" pos:column="43">::<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="45">setfill<pos:position pos:line="15" pos:column="52"/></name></name><argument_list pos:line="15" pos:column="52">(<argument><expr><literal type="char" pos:line="15" pos:column="53">'0'<pos:position pos:line="15" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call> <operator pos:line="15" pos:column="58">&lt;&lt;<pos:position pos:line="15" pos:column="66"/></operator> <name><name pos:line="15" pos:column="61">std<pos:position pos:line="15" pos:column="64"/></name><operator pos:line="15" pos:column="64">::<pos:position pos:line="15" pos:column="66"/></operator><name pos:line="15" pos:column="66">uppercase<pos:position pos:line="15" pos:column="75"/></name></name> <operator pos:line="15" pos:column="76">&lt;&lt;<pos:position pos:line="15" pos:column="84"/></operator>
           <name><name pos:line="16" pos:column="12">e<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">swap_filen<pos:position pos:line="16" pos:column="25"/></name></name> <operator pos:line="16" pos:column="26">&lt;&lt;<pos:position pos:line="16" pos:column="34"/></operator> <literal type="string" pos:line="16" pos:column="29">" "<pos:position pos:line="16" pos:column="32"/></literal> <operator pos:line="16" pos:column="33">&lt;&lt;<pos:position pos:line="16" pos:column="41"/></operator>  <call><name><name pos:line="16" pos:column="37">e<pos:position pos:line="16" pos:column="38"/></name><operator pos:line="16" pos:column="38">-&gt;<pos:position pos:line="16" pos:column="43"/></operator><name pos:line="16" pos:column="40">getMD5Text<pos:position pos:line="16" pos:column="50"/></name></name><argument_list pos:line="16" pos:column="50">()<pos:position pos:line="16" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">e<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">swap_status<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">!=<pos:position pos:line="18" pos:column="26"/></operator> <name pos:line="18" pos:column="27">SWAPOUT_WRITING<pos:position pos:line="18" pos:column="42"/></name> <operator pos:line="18" pos:column="43">&amp;&amp;<pos:position pos:line="18" pos:column="53"/></operator> <name><name pos:line="18" pos:column="46">e<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">swap_status<pos:position pos:line="18" pos:column="60"/></name></name> <operator pos:line="18" pos:column="61">!=<pos:position pos:line="18" pos:column="63"/></operator> <name pos:line="18" pos:column="64">SWAPOUT_DONE<pos:position pos:line="18" pos:column="76"/></name></expr>)<pos:position pos:line="18" pos:column="77"/></condition><then pos:line="18" pos:column="77"> <block pos:line="18" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">20<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="20">DBG_IMPORTANT<pos:position pos:line="19" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="35">"storeSwapInStart: bad swap_status ("<pos:position pos:line="19" pos:column="72"/></literal> <operator pos:line="19" pos:column="73">&lt;&lt;<pos:position pos:line="19" pos:column="81"/></operator> <name><name pos:line="19" pos:column="76">swapStatusStr<pos:position pos:line="19" pos:column="89"/></name><index pos:line="19" pos:column="89">[<expr><name><name pos:line="19" pos:column="90">e<pos:position pos:line="19" pos:column="91"/></name><operator pos:line="19" pos:column="91">-&gt;<pos:position pos:line="19" pos:column="96"/></operator><name pos:line="19" pos:column="93">swap_status<pos:position pos:line="19" pos:column="104"/></name></name></expr>]<pos:position pos:line="19" pos:column="105"/></index></name> <operator pos:line="19" pos:column="106">&lt;&lt;<pos:position pos:line="19" pos:column="114"/></operator> <literal type="string" pos:line="19" pos:column="109">")"<pos:position pos:line="19" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="114"/></expr_stmt>
        <return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">e<pos:position pos:line="23" pos:column="10"/></name><operator pos:line="23" pos:column="10">-&gt;<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="12">swap_filen<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">&lt;<pos:position pos:line="23" pos:column="27"/></operator> <literal type="number" pos:line="23" pos:column="25">0<pos:position pos:line="23" pos:column="26"/></literal></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <block pos:line="23" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">20<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="20">DBG_IMPORTANT<pos:position pos:line="24" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="35">"storeSwapInStart: swap_filen &lt; 0"<pos:position pos:line="24" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>
        <return pos:line="25" pos:column="9">return;<pos:position pos:line="25" pos:column="16"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">assert<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name><name pos:line="28" pos:column="12">e<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">mem_obj<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">!=<pos:position pos:line="28" pos:column="25"/></operator> <name pos:line="28" pos:column="26">NULL<pos:position pos:line="28" pos:column="30"/></name></expr></argument>)<pos:position pos:line="28" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">debugs<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="number" pos:line="29" pos:column="12">20<pos:position pos:line="29" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="16">3<pos:position pos:line="29" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="19">"storeSwapInStart: Opening fileno "<pos:position pos:line="29" pos:column="54"/></literal> <operator pos:line="29" pos:column="55">&lt;&lt;<pos:position pos:line="29" pos:column="63"/></operator> <name><name pos:line="29" pos:column="58">std<pos:position pos:line="29" pos:column="61"/></name><operator pos:line="29" pos:column="61">::<pos:position pos:line="29" pos:column="63"/></operator><name pos:line="29" pos:column="63">hex<pos:position pos:line="29" pos:column="66"/></name></name> <operator pos:line="29" pos:column="67">&lt;&lt;<pos:position pos:line="29" pos:column="75"/></operator> <call><name><name pos:line="29" pos:column="70">std<pos:position pos:line="29" pos:column="73"/></name><operator pos:line="29" pos:column="73">::<pos:position pos:line="29" pos:column="75"/></operator><name pos:line="29" pos:column="75">setw<pos:position pos:line="29" pos:column="79"/></name></name><argument_list pos:line="29" pos:column="79">(<argument><expr><literal type="number" pos:line="29" pos:column="80">8<pos:position pos:line="29" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="82"/></argument_list></call> <operator pos:line="29" pos:column="83">&lt;&lt;<pos:position pos:line="29" pos:column="91"/></operator> <call><name><name pos:line="29" pos:column="86">std<pos:position pos:line="29" pos:column="89"/></name><operator pos:line="29" pos:column="89">::<pos:position pos:line="29" pos:column="91"/></operator><name pos:line="29" pos:column="91">setfill<pos:position pos:line="29" pos:column="98"/></name></name><argument_list pos:line="29" pos:column="98">(<argument><expr><literal type="char" pos:line="29" pos:column="99">'0'<pos:position pos:line="29" pos:column="102"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="103"/></argument_list></call> <operator pos:line="29" pos:column="104">&lt;&lt;<pos:position pos:line="29" pos:column="112"/></operator> <name><name pos:line="29" pos:column="107">std<pos:position pos:line="29" pos:column="110"/></name><operator pos:line="29" pos:column="110">::<pos:position pos:line="29" pos:column="112"/></operator><name pos:line="29" pos:column="112">uppercase<pos:position pos:line="29" pos:column="121"/></name></name> <operator pos:line="29" pos:column="122">&lt;&lt;<pos:position pos:line="29" pos:column="130"/></operator> <name><name pos:line="29" pos:column="125">e<pos:position pos:line="29" pos:column="126"/></name><operator pos:line="29" pos:column="126">-&gt;<pos:position pos:line="29" pos:column="131"/></operator><name pos:line="29" pos:column="128">swap_filen<pos:position pos:line="29" pos:column="138"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="139"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="140"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">sc<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">-&gt;<pos:position pos:line="30" pos:column="12"/></operator><name pos:line="30" pos:column="9">swapin_sio<pos:position pos:line="30" pos:column="19"/></name></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <call><name pos:line="30" pos:column="22">storeOpen<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">e<pos:position pos:line="30" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="35">storeSwapInFileNotify<pos:position pos:line="30" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="58">storeSwapInFileClosed<pos:position pos:line="30" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="81">sc<pos:position pos:line="30" pos:column="83"/></name></expr></argument>)<pos:position pos:line="30" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="85"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

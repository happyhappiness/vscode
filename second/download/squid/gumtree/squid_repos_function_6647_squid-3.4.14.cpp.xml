<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6647_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">lru_referenced<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">RemovalPolicy<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">policy<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">StoreEntry<pos:position pos:line="2" pos:column="56"/></name> <modifier pos:line="2" pos:column="57">*<pos:position pos:line="2" pos:column="58"/></modifier></type> <name pos:line="2" pos:column="59">entry<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>,
               <parameter><decl><type><name pos:line="3" pos:column="16">RemovalPolicyNode<pos:position pos:line="3" pos:column="33"/></name> <modifier pos:line="3" pos:column="34">*<pos:position pos:line="3" pos:column="35"/></modifier></type> <name pos:line="3" pos:column="36">node<pos:position pos:line="3" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="41"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">LruPolicyData<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">lru<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><operator pos:line="5" pos:column="26">(<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">LruPolicyData<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></operator><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator><name><name pos:line="5" pos:column="43">policy<pos:position pos:line="5" pos:column="49"/></name><operator pos:line="5" pos:column="49">-&gt;<pos:position pos:line="5" pos:column="54"/></operator><name pos:line="5" pos:column="51">_data<pos:position pos:line="5" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="57"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">LruNode<pos:position pos:line="6" pos:column="12"/></name> <modifier pos:line="6" pos:column="13">*<pos:position pos:line="6" pos:column="14"/></modifier></type><name pos:line="6" pos:column="14">lru_node<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><operator pos:line="6" pos:column="25">(<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">LruNode<pos:position pos:line="6" pos:column="33"/></name> <operator pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></operator><operator pos:line="6" pos:column="35">)<pos:position pos:line="6" pos:column="36"/></operator><name><name pos:line="6" pos:column="36">node<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">-&gt;<pos:position pos:line="6" pos:column="45"/></operator><name pos:line="6" pos:column="42">data<pos:position pos:line="6" pos:column="46"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="47"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">lru_node<pos:position pos:line="8" pos:column="18"/></name></expr>)<pos:position pos:line="8" pos:column="19"/></condition><then pos:line="8" pos:column="19">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">dlinkDelete<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><operator pos:line="11" pos:column="17">&amp;<pos:position pos:line="11" pos:column="22"/></operator><name><name pos:line="11" pos:column="18">lru_node<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">-&gt;<pos:position pos:line="11" pos:column="31"/></operator><name pos:line="11" pos:column="28">node<pos:position pos:line="11" pos:column="32"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="34">&amp;<pos:position pos:line="11" pos:column="39"/></operator><name><name pos:line="11" pos:column="35">lru<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">-&gt;<pos:position pos:line="11" pos:column="43"/></operator><name pos:line="11" pos:column="40">list<pos:position pos:line="11" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">dlinkAddTail<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><operator pos:line="13" pos:column="18">(<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">void<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">*<pos:position pos:line="13" pos:column="25"/></operator><operator pos:line="13" pos:column="25">)<pos:position pos:line="13" pos:column="26"/></operator> <name pos:line="13" pos:column="27">entry<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="34">&amp;<pos:position pos:line="13" pos:column="39"/></operator><name><name pos:line="13" pos:column="35">lru_node<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">-&gt;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="45">node<pos:position pos:line="13" pos:column="49"/></name></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="51">&amp;<pos:position pos:line="13" pos:column="56"/></operator><name><name pos:line="13" pos:column="52">lru<pos:position pos:line="13" pos:column="55"/></name><operator pos:line="13" pos:column="55">-&gt;<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="57">list<pos:position pos:line="13" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

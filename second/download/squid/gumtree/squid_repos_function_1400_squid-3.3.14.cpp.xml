<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1400_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">icpCreateAndSend<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">icp_opcode<pos:position pos:line="2" pos:column="28"/></name></type> <name pos:line="2" pos:column="29">opcode<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">int<pos:position pos:line="2" pos:column="40"/></name></type> <name pos:line="2" pos:column="41">flags<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">url<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">int<pos:position pos:line="2" pos:column="68"/></name></type> <name pos:line="2" pos:column="69">reqnum<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="77">int<pos:position pos:line="2" pos:column="80"/></name></type> <name pos:line="2" pos:column="81">pad<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="86">int<pos:position pos:line="2" pos:column="89"/></name></type> <name pos:line="2" pos:column="90">fd<pos:position pos:line="2" pos:column="92"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="94">const<pos:position pos:line="2" pos:column="99"/></specifier> <name><name pos:line="2" pos:column="100">Ip<pos:position pos:line="2" pos:column="102"/></name><operator pos:line="2" pos:column="102">::<pos:position pos:line="2" pos:column="104"/></operator><name pos:line="2" pos:column="104">Address<pos:position pos:line="2" pos:column="111"/></name></name> <modifier pos:line="2" pos:column="112">&amp;<pos:position pos:line="2" pos:column="117"/></modifier></type><name pos:line="2" pos:column="113">from<pos:position pos:line="2" pos:column="117"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="118"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">icp_common_t<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">reply<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><call><name><name pos:line="4" pos:column="27">_icp_common_t<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">::<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">createMessage<pos:position pos:line="4" pos:column="55"/></name></name><argument_list pos:line="4" pos:column="55">(<argument><expr><name pos:line="4" pos:column="56">opcode<pos:position pos:line="4" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="64">flags<pos:position pos:line="4" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="71">url<pos:position pos:line="4" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="76">reqnum<pos:position pos:line="4" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="84">pad<pos:position pos:line="4" pos:column="87"/></name></expr></argument>)<pos:position pos:line="4" pos:column="88"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="89"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">icpUdpSend<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">fd<pos:position pos:line="5" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="20">from<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="26">reply<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="33">icpLogFromICPCode<pos:position pos:line="5" pos:column="50"/></name><argument_list pos:line="5" pos:column="50">(<argument><expr><name pos:line="5" pos:column="51">opcode<pos:position pos:line="5" pos:column="57"/></name></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="60">0<pos:position pos:line="5" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="63"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

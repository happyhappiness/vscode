<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2394_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpRequest<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">init<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">method<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">=<pos:position pos:line="4" pos:column="13"/></operator> <name><name pos:line="4" pos:column="14">Http<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">METHOD_NONE<pos:position pos:line="4" pos:column="31"/></name></name></expr>;<pos:position pos:line="4" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">url<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">.<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">clear<pos:position pos:line="5" pos:column="14"/></name></name><argument_list pos:line="5" pos:column="14">()<pos:position pos:line="5" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_AUTH<pos:position pos:line="6" pos:column="13"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="7" pos:column="5">auth_user_request<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">=<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="25">NULL<pos:position pos:line="7" pos:column="29"/></name></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">memset<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><operator pos:line="9" pos:column="12">&amp;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="13">flags<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="9" pos:column="20">'\0'<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="26">sizeof<argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">flags<pos:position pos:line="9" pos:column="38"/></name></expr></argument>)<pos:position pos:line="9" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">range<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">=<pos:position pos:line="10" pos:column="12"/></operator> <name pos:line="10" pos:column="13">NULL<pos:position pos:line="10" pos:column="17"/></name></expr>;<pos:position pos:line="10" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">ims<pos:position pos:line="11" pos:column="8"/></name> <operator pos:line="11" pos:column="9">=<pos:position pos:line="11" pos:column="10"/></operator> <operator pos:line="11" pos:column="11">-<pos:position pos:line="11" pos:column="12"/></operator><literal type="number" pos:line="11" pos:column="12">1<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="12" pos:column="5">imslen<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">=<pos:position pos:line="12" pos:column="13"/></operator> <literal type="number" pos:line="12" pos:column="14">0<pos:position pos:line="12" pos:column="15"/></literal></expr>;<pos:position pos:line="12" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">lastmod<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <operator pos:line="13" pos:column="15">-<pos:position pos:line="13" pos:column="16"/></operator><literal type="number" pos:line="13" pos:column="16">1<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">client_addr<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">.<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="17">setEmpty<pos:position pos:line="14" pos:column="25"/></name></name><argument_list pos:line="14" pos:column="25">()<pos:position pos:line="14" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">my_addr<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">.<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">setEmpty<pos:position pos:line="15" pos:column="21"/></name></name><argument_list pos:line="15" pos:column="21">()<pos:position pos:line="15" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">body_pipe<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">NULL<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
    <comment type="line" pos:line="17" pos:column="5">// hier</comment>
    <expr_stmt><expr><name pos:line="18" pos:column="5">dnsWait<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <operator pos:line="18" pos:column="15">-<pos:position pos:line="18" pos:column="16"/></operator><literal type="number" pos:line="18" pos:column="16">1<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">errType<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">ERR_NONE<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name pos:line="20" pos:column="5">errDetail<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">ERR_DETAIL_NONE<pos:position pos:line="20" pos:column="32"/></name></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">peer_login<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">NULL<pos:position pos:line="21" pos:column="22"/></name></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>      <comment type="line" pos:line="21" pos:column="29">// not allocated/deallocated by this class</comment>
    <expr_stmt><expr><name pos:line="22" pos:column="5">peer_domain<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <name pos:line="22" pos:column="19">NULL<pos:position pos:line="22" pos:column="23"/></name></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>     <comment type="line" pos:line="22" pos:column="29">// not allocated/deallocated by this class</comment>
    <expr_stmt><expr><name pos:line="23" pos:column="5">peer_host<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="17">NULL<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="24" pos:column="5">vary_headers<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <call><name pos:line="24" pos:column="20">SBuf<pos:position pos:line="24" pos:column="24"/></name><argument_list pos:line="24" pos:column="24">()<pos:position pos:line="24" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">myportname<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">null_string<pos:position pos:line="25" pos:column="29"/></name></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">tag<pos:position pos:line="26" pos:column="8"/></name> <operator pos:line="26" pos:column="9">=<pos:position pos:line="26" pos:column="10"/></operator> <name pos:line="26" pos:column="11">null_string<pos:position pos:line="26" pos:column="22"/></name></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
<cpp:if pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">if<pos:position pos:line="27" pos:column="4"/></cpp:directive> <expr><name pos:line="27" pos:column="5">USE_AUTH<pos:position pos:line="27" pos:column="13"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="28" pos:column="5">extacl_user<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">null_string<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name pos:line="29" pos:column="5">extacl_passwd<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">null_string<pos:position pos:line="29" pos:column="32"/></name></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="31" pos:column="5">extacl_log<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">null_string<pos:position pos:line="31" pos:column="29"/></name></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="32" pos:column="5">extacl_message<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">null_string<pos:position pos:line="32" pos:column="33"/></name></expr>;<pos:position pos:line="32" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="33" pos:column="5">pstate<pos:position pos:line="33" pos:column="11"/></name> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <name pos:line="33" pos:column="14">psReadyToParseStartLine<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></expr_stmt>
<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><name pos:line="34" pos:column="5">FOLLOW_X_FORWARDED_FOR<pos:position pos:line="34" pos:column="27"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">indirect_client_addr<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">.<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="26">setEmpty<pos:position pos:line="35" pos:column="34"/></name></name><argument_list pos:line="35" pos:column="34">()<pos:position pos:line="35" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="36" pos:column="8">/* FOLLOW_X_FORWARDED_FOR */</comment>
<cpp:if pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">if<pos:position pos:line="37" pos:column="4"/></cpp:directive> <expr><name pos:line="37" pos:column="5">USE_ADAPTATION<pos:position pos:line="37" pos:column="19"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="38" pos:column="5">adaptHistory_<pos:position pos:line="38" pos:column="18"/></name> <operator pos:line="38" pos:column="19">=<pos:position pos:line="38" pos:column="20"/></operator> <name pos:line="38" pos:column="21">NULL<pos:position pos:line="38" pos:column="25"/></name></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">if<pos:position pos:line="40" pos:column="4"/></cpp:directive> <expr><name pos:line="40" pos:column="5">ICAP_CLIENT<pos:position pos:line="40" pos:column="16"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="41" pos:column="5">icapHistory_<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">NULL<pos:position pos:line="41" pos:column="24"/></name></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt>
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="43" pos:column="5">rangeOffsetLimit<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">=<pos:position pos:line="43" pos:column="23"/></operator> <operator pos:line="43" pos:column="24">-<pos:position pos:line="43" pos:column="25"/></operator><literal type="number" pos:line="43" pos:column="25">2<pos:position pos:line="43" pos:column="26"/></literal></expr>;<pos:position pos:line="43" pos:column="27"/></expr_stmt> <comment type="line" pos:line="43" pos:column="28">//a value of -2 means not checked yet</comment>
    <expr_stmt><expr><name pos:line="44" pos:column="5">forcedBodyContinuation<pos:position pos:line="44" pos:column="27"/></name> <operator pos:line="44" pos:column="28">=<pos:position pos:line="44" pos:column="29"/></operator> <literal type="boolean" pos:line="44" pos:column="30">false<pos:position pos:line="44" pos:column="35"/></literal></expr>;<pos:position pos:line="44" pos:column="36"/></expr_stmt>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

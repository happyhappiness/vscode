<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3432_squid-3.3.14.cpp" pos:tabs="8"><function type="operator"><name><name pos:line="1" pos:column="1">YesNoNone<pos:position pos:line="1" pos:column="10"/></name><operator pos:line="1" pos:column="10">::<pos:position pos:line="1" pos:column="12"/></operator><name pos:line="1" pos:column="12">operator <name pos:line="1" pos:column="21">void*<pos:position pos:line="1" pos:column="26"/></name></name></name><parameter_list pos:line="1" pos:column="26">()<pos:position pos:line="1" pos:column="28"/></parameter_list> <specifier pos:line="1" pos:column="29">const<pos:position pos:line="1" pos:column="34"/></specifier>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">assert<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><name pos:line="3" pos:column="12">option<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">!=<pos:position pos:line="3" pos:column="21"/></operator> <literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="3" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="25"/></expr_stmt> <comment type="line" pos:line="3" pos:column="26">// must call configure() first</comment>
    <return pos:line="4" pos:column="5">return <expr><ternary><condition><expr><name pos:line="4" pos:column="12">option<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">&gt;<pos:position pos:line="4" pos:column="23"/></operator> <literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr> ?<pos:position pos:line="4" pos:column="24"/></condition><then pos:line="4" pos:column="24"> <expr><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">void<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">*<pos:position pos:line="4" pos:column="31"/></operator><operator pos:line="4" pos:column="31">)<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">this<pos:position pos:line="4" pos:column="36"/></name></expr> <pos:position pos:line="4" pos:column="37"/></then><else pos:line="4" pos:column="37">: <expr><name pos:line="4" pos:column="39">NULL<pos:position pos:line="4" pos:column="43"/></name></expr></else></ternary></expr>;<pos:position pos:line="4" pos:column="44"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

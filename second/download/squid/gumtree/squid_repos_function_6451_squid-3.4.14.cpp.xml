<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6451_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ipc<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">Strand<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">receive<pos:position pos:line="1" pos:column="26"/></name></name><parameter_list pos:line="1" pos:column="26">(<parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">TypedMsgHdr<pos:position pos:line="1" pos:column="44"/></name> <modifier pos:line="1" pos:column="45">&amp;<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="46">message<pos:position pos:line="1" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">54<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="16">6<pos:position pos:line="3" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="19">HERE<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">&lt;&lt;<pos:position pos:line="3" pos:column="32"/></operator> <call><name><name pos:line="3" pos:column="27">message<pos:position pos:line="3" pos:column="34"/></name><operator pos:line="3" pos:column="34">.<pos:position pos:line="3" pos:column="35"/></operator><name pos:line="3" pos:column="35">type<pos:position pos:line="3" pos:column="39"/></name></name><argument_list pos:line="3" pos:column="39">()<pos:position pos:line="3" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="43"/></expr_stmt>
    <switch pos:line="4" pos:column="5">switch <condition pos:line="4" pos:column="12">(<expr><call><name><name pos:line="4" pos:column="13">message<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">.<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">type<pos:position pos:line="4" pos:column="25"/></name></name><argument_list pos:line="4" pos:column="25">()<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="28"/></condition> <block pos:line="4" pos:column="29">{

    <case pos:line="6" pos:column="5">case <expr><name pos:line="6" pos:column="10">mtRegistration<pos:position pos:line="6" pos:column="24"/></name></expr>:<pos:position pos:line="6" pos:column="25"/></case>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">handleRegistrationResponse<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><call><name pos:line="7" pos:column="36">HereIamMessage<pos:position pos:line="7" pos:column="50"/></name><argument_list pos:line="7" pos:column="50">(<argument><expr><name pos:line="7" pos:column="51">message<pos:position pos:line="7" pos:column="58"/></name></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt>
        <break pos:line="8" pos:column="9">break;<pos:position pos:line="8" pos:column="15"/></break>

    <case pos:line="10" pos:column="5">case <expr><name pos:line="10" pos:column="10">mtSharedListenResponse<pos:position pos:line="10" pos:column="32"/></name></expr>:<pos:position pos:line="10" pos:column="33"/></case>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">SharedListenJoined<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><call><name pos:line="11" pos:column="28">SharedListenResponse<pos:position pos:line="11" pos:column="48"/></name><argument_list pos:line="11" pos:column="48">(<argument><expr><name pos:line="11" pos:column="49">message<pos:position pos:line="11" pos:column="56"/></name></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>
        <break pos:line="12" pos:column="9">break;<pos:position pos:line="12" pos:column="15"/></break>

<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">USE_DISKIO_IPCIO<pos:position pos:line="14" pos:column="21"/></name></expr></cpp:if>
    <case pos:line="15" pos:column="5">case <expr><name pos:line="15" pos:column="10">mtStrandSearchResponse<pos:position pos:line="15" pos:column="32"/></name></expr>:<pos:position pos:line="15" pos:column="33"/></case>
        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">IpcIoFile<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">::<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">HandleOpenResponse<pos:position pos:line="16" pos:column="38"/></name></name><argument_list pos:line="16" pos:column="38">(<argument><expr><call><name pos:line="16" pos:column="39">StrandSearchResponse<pos:position pos:line="16" pos:column="59"/></name><argument_list pos:line="16" pos:column="59">(<argument><expr><name pos:line="16" pos:column="60">message<pos:position pos:line="16" pos:column="67"/></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="70"/></expr_stmt>
        <break pos:line="17" pos:column="9">break;<pos:position pos:line="17" pos:column="15"/></break>

    <case pos:line="19" pos:column="5">case <expr><name pos:line="19" pos:column="10">mtIpcIoNotification<pos:position pos:line="19" pos:column="29"/></name></expr>:<pos:position pos:line="19" pos:column="30"/></case>
        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">IpcIoFile<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">::<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">HandleNotification<pos:position pos:line="20" pos:column="38"/></name></name><argument_list pos:line="20" pos:column="38">(<argument><expr><name pos:line="20" pos:column="39">message<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>
        <break pos:line="21" pos:column="9">break;<pos:position pos:line="21" pos:column="15"/></break>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="22" pos:column="8">/* USE_DISKIO_IPCIO */</comment>

    <case pos:line="24" pos:column="5">case <expr><name pos:line="24" pos:column="10">mtCacheMgrRequest<pos:position pos:line="24" pos:column="27"/></name></expr>:<pos:position pos:line="24" pos:column="28"/></case> <block pos:line="24" pos:column="29">{
        <decl_stmt><decl><type><specifier pos:line="25" pos:column="9">const<pos:position pos:line="25" pos:column="14"/></specifier> <name><name pos:line="25" pos:column="15">Mgr<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">::<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">Request<pos:position pos:line="25" pos:column="27"/></name></name></type> <name pos:line="25" pos:column="28">req<pos:position pos:line="25" pos:column="31"/></name><argument_list pos:line="25" pos:column="31">(<argument><expr><name pos:line="25" pos:column="32">message<pos:position pos:line="25" pos:column="39"/></name></expr></argument>)<pos:position pos:line="25" pos:column="40"/></argument_list></decl>;<pos:position pos:line="25" pos:column="41"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">handleCacheMgrRequest<pos:position pos:line="26" pos:column="30"/></name><argument_list pos:line="26" pos:column="30">(<argument><expr><name pos:line="26" pos:column="31">req<pos:position pos:line="26" pos:column="34"/></name></expr></argument>)<pos:position pos:line="26" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block>
    <break pos:line="28" pos:column="5">break;<pos:position pos:line="28" pos:column="11"/></break>

    <case pos:line="30" pos:column="5">case <expr><name pos:line="30" pos:column="10">mtCacheMgrResponse<pos:position pos:line="30" pos:column="28"/></name></expr>:<pos:position pos:line="30" pos:column="29"/></case> <block pos:line="30" pos:column="30">{
        <decl_stmt><decl><type><specifier pos:line="31" pos:column="9">const<pos:position pos:line="31" pos:column="14"/></specifier> <name><name pos:line="31" pos:column="15">Mgr<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">::<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">Response<pos:position pos:line="31" pos:column="28"/></name></name></type> <name pos:line="31" pos:column="29">resp<pos:position pos:line="31" pos:column="33"/></name><argument_list pos:line="31" pos:column="33">(<argument><expr><name pos:line="31" pos:column="34">message<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></decl>;<pos:position pos:line="31" pos:column="43"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">handleCacheMgrResponse<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">resp<pos:position pos:line="32" pos:column="36"/></name></expr></argument>)<pos:position pos:line="32" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block>
    <break pos:line="34" pos:column="5">break;<pos:position pos:line="34" pos:column="11"/></break>

<cpp:if pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">if<pos:position pos:line="36" pos:column="4"/></cpp:directive> <expr><name pos:line="36" pos:column="5">SQUID_SNMP<pos:position pos:line="36" pos:column="15"/></name></expr></cpp:if>
    <case pos:line="37" pos:column="5">case <expr><name pos:line="37" pos:column="10">mtSnmpRequest<pos:position pos:line="37" pos:column="23"/></name></expr>:<pos:position pos:line="37" pos:column="24"/></case> <block pos:line="37" pos:column="25">{
        <decl_stmt><decl><type><specifier pos:line="38" pos:column="9">const<pos:position pos:line="38" pos:column="14"/></specifier> <name><name pos:line="38" pos:column="15">Snmp<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">::<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">Request<pos:position pos:line="38" pos:column="28"/></name></name></type> <name pos:line="38" pos:column="29">req<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><name pos:line="38" pos:column="33">message<pos:position pos:line="38" pos:column="40"/></name></expr></argument>)<pos:position pos:line="38" pos:column="41"/></argument_list></decl>;<pos:position pos:line="38" pos:column="42"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">handleSnmpRequest<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">req<pos:position pos:line="39" pos:column="30"/></name></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block>
    <break pos:line="41" pos:column="5">break;<pos:position pos:line="41" pos:column="11"/></break>

    <case pos:line="43" pos:column="5">case <expr><name pos:line="43" pos:column="10">mtSnmpResponse<pos:position pos:line="43" pos:column="24"/></name></expr>:<pos:position pos:line="43" pos:column="25"/></case> <block pos:line="43" pos:column="26">{
        <decl_stmt><decl><type><specifier pos:line="44" pos:column="9">const<pos:position pos:line="44" pos:column="14"/></specifier> <name><name pos:line="44" pos:column="15">Snmp<pos:position pos:line="44" pos:column="19"/></name><operator pos:line="44" pos:column="19">::<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="21">Response<pos:position pos:line="44" pos:column="29"/></name></name></type> <name pos:line="44" pos:column="30">resp<pos:position pos:line="44" pos:column="34"/></name><argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">message<pos:position pos:line="44" pos:column="42"/></name></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></decl>;<pos:position pos:line="44" pos:column="44"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">handleSnmpResponse<pos:position pos:line="45" pos:column="27"/></name><argument_list pos:line="45" pos:column="27">(<argument><expr><name pos:line="45" pos:column="28">resp<pos:position pos:line="45" pos:column="32"/></name></expr></argument>)<pos:position pos:line="45" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block>
    <break pos:line="47" pos:column="5">break;<pos:position pos:line="47" pos:column="11"/></break>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>

    <default pos:line="50" pos:column="5">default:<pos:position pos:line="50" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">debugs<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><literal type="number" pos:line="51" pos:column="16">54<pos:position pos:line="51" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="20">DBG_IMPORTANT<pos:position pos:line="51" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="35">HERE<pos:position pos:line="51" pos:column="39"/></name> <operator pos:line="51" pos:column="40">&lt;&lt;<pos:position pos:line="51" pos:column="48"/></operator> <literal type="string" pos:line="51" pos:column="43">"Unhandled message type: "<pos:position pos:line="51" pos:column="69"/></literal> <operator pos:line="51" pos:column="70">&lt;&lt;<pos:position pos:line="51" pos:column="78"/></operator> <call><name><name pos:line="51" pos:column="73">message<pos:position pos:line="51" pos:column="80"/></name><operator pos:line="51" pos:column="80">.<pos:position pos:line="51" pos:column="81"/></operator><name pos:line="51" pos:column="81">type<pos:position pos:line="51" pos:column="85"/></name></name><argument_list pos:line="51" pos:column="85">()<pos:position pos:line="51" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="51" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="89"/></expr_stmt>
        <break pos:line="52" pos:column="9">break;<pos:position pos:line="52" pos:column="15"/></break>
    }<pos:position pos:line="53" pos:column="6"/></block></switch>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

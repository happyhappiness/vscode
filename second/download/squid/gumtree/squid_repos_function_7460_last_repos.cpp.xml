<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7460_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">HandshakeParser<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">parseServerCertificates<pos:position pos:line="2" pos:column="51"/></name></name><parameter_list pos:line="2" pos:column="51">(<parameter><decl><type><specifier pos:line="2" pos:column="52">const<pos:position pos:line="2" pos:column="57"/></specifier> <name pos:line="2" pos:column="58">SBuf<pos:position pos:line="2" pos:column="62"/></name> <modifier pos:line="2" pos:column="63">&amp;<pos:position pos:line="2" pos:column="68"/></modifier></type><name pos:line="2" pos:column="64">raw<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Parser<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">::<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">BinaryTokenizer<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">tkList<pos:position pos:line="4" pos:column="35"/></name><argument_list pos:line="4" pos:column="35">(<argument><expr><name pos:line="4" pos:column="36">raw<pos:position pos:line="4" pos:column="39"/></name></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">SBuf<pos:position pos:line="5" pos:column="15"/></name></type> <name pos:line="5" pos:column="16">clist<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><call><name><name pos:line="5" pos:column="24">tkList<pos:position pos:line="5" pos:column="30"/></name><operator pos:line="5" pos:column="30">.<pos:position pos:line="5" pos:column="31"/></operator><name pos:line="5" pos:column="31">pstring24<pos:position pos:line="5" pos:column="40"/></name></name><argument_list pos:line="5" pos:column="40">(<argument><expr><literal type="string" pos:line="5" pos:column="41">"CertificateList"<pos:position pos:line="5" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><call><name><name pos:line="6" pos:column="10">tkList<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">.<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">atEnd<pos:position pos:line="6" pos:column="22"/></name></name><argument_list pos:line="6" pos:column="22">()<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt> <comment type="line" pos:line="6" pos:column="27">// no leftovers after all certificates</comment>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">Parser<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">::<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">BinaryTokenizer<pos:position pos:line="8" pos:column="28"/></name></name></type> <name pos:line="8" pos:column="29">tkItems<pos:position pos:line="8" pos:column="36"/></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name pos:line="8" pos:column="37">clist<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></decl>;<pos:position pos:line="8" pos:column="44"/></decl_stmt>
    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">!<pos:position pos:line="9" pos:column="13"/></operator><call><name><name pos:line="9" pos:column="13">tkItems<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">atEnd<pos:position pos:line="9" pos:column="26"/></name></name><argument_list pos:line="9" pos:column="26">()<pos:position pos:line="9" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="29"/></condition> <block pos:line="9" pos:column="30">{
        <decl_stmt><decl><type><name><name pos:line="10" pos:column="9">Security<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">::<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">CertPointer<pos:position pos:line="10" pos:column="30"/></name></name></type> <name pos:line="10" pos:column="31">cert<pos:position pos:line="10" pos:column="35"/></name></decl>;<pos:position pos:line="10" pos:column="36"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">ParseCertificate<pos:position pos:line="11" pos:column="25"/></name><argument_list pos:line="11" pos:column="25">(<argument><expr><call><name><name pos:line="11" pos:column="26">tkItems<pos:position pos:line="11" pos:column="33"/></name><operator pos:line="11" pos:column="33">.<pos:position pos:line="11" pos:column="34"/></operator><name pos:line="11" pos:column="34">pstring24<pos:position pos:line="11" pos:column="43"/></name></name><argument_list pos:line="11" pos:column="43">(<argument><expr><literal type="string" pos:line="11" pos:column="44">"Certificate"<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="11" pos:column="60">cert<pos:position pos:line="11" pos:column="64"/></name></expr></argument>)<pos:position pos:line="11" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">serverCertificates<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">.<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="28">push_back<pos:position pos:line="12" pos:column="37"/></name></name><argument_list pos:line="12" pos:column="37">(<argument><expr><name pos:line="12" pos:column="38">cert<pos:position pos:line="12" pos:column="42"/></name></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">83<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">7<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="23">"parsed "<pos:position pos:line="13" pos:column="32"/></literal> <operator pos:line="13" pos:column="33">&lt;&lt;<pos:position pos:line="13" pos:column="41"/></operator> <call><name><name pos:line="13" pos:column="36">serverCertificates<pos:position pos:line="13" pos:column="54"/></name><operator pos:line="13" pos:column="54">.<pos:position pos:line="13" pos:column="55"/></operator><name pos:line="13" pos:column="55">size<pos:position pos:line="13" pos:column="59"/></name></name><argument_list pos:line="13" pos:column="59">()<pos:position pos:line="13" pos:column="61"/></argument_list></call> <operator pos:line="13" pos:column="62">&lt;&lt;<pos:position pos:line="13" pos:column="70"/></operator> <literal type="string" pos:line="13" pos:column="65">" certificates so far"<pos:position pos:line="13" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="89"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></while>

}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

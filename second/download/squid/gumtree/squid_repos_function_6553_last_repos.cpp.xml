<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6553_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">Icmp4<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">Open<pos:position pos:line="2" pos:column="12"/></name></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">void<pos:position pos:line="2" pos:column="17"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="18"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">icmp_sock<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">=<pos:position pos:line="4" pos:column="16"/></operator> <call><name pos:line="4" pos:column="17">socket<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><name pos:line="4" pos:column="24">PF_INET<pos:position pos:line="4" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="33">SOCK_RAW<pos:position pos:line="4" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="43">IPPROTO_ICMP<pos:position pos:line="4" pos:column="55"/></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="57"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">icmp_sock<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&lt;<pos:position pos:line="6" pos:column="23"/></operator> <literal type="number" pos:line="6" pos:column="21">0<pos:position pos:line="6" pos:column="22"/></literal></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block pos:line="6" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">xerrno<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">errno<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">50<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="20">DBG_CRITICAL<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="34">MYNAME<pos:position pos:line="8" pos:column="40"/></name> <operator pos:line="8" pos:column="41">&lt;&lt;<pos:position pos:line="8" pos:column="49"/></operator> <literal type="string" pos:line="8" pos:column="44">" icmp_sock: "<pos:position pos:line="8" pos:column="58"/></literal> <operator pos:line="8" pos:column="59">&lt;&lt;<pos:position pos:line="8" pos:column="67"/></operator> <call><name pos:line="8" pos:column="62">xstrerr<pos:position pos:line="8" pos:column="69"/></name><argument_list pos:line="8" pos:column="69">(<argument><expr><name pos:line="8" pos:column="70">xerrno<pos:position pos:line="8" pos:column="76"/></name></expr></argument>)<pos:position pos:line="8" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="79"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><operator pos:line="9" pos:column="16">-<pos:position pos:line="9" pos:column="17"/></operator><literal type="number" pos:line="9" pos:column="17">1<pos:position pos:line="9" pos:column="18"/></literal></expr>;<pos:position pos:line="9" pos:column="19"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">icmp_ident<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <call><name pos:line="12" pos:column="18">getpid<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">()<pos:position pos:line="12" pos:column="26"/></argument_list></call> <operator pos:line="12" pos:column="27">&amp;<pos:position pos:line="12" pos:column="32"/></operator> <literal type="number" pos:line="12" pos:column="29">0xffff<pos:position pos:line="12" pos:column="35"/></literal></expr>;<pos:position pos:line="12" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">42<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="16">DBG_IMPORTANT<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="31">"pinger: ICMP socket opened."<pos:position pos:line="13" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="62"/></expr_stmt>

    <return pos:line="15" pos:column="5">return <expr><name pos:line="15" pos:column="12">icmp_sock<pos:position pos:line="15" pos:column="21"/></name></expr>;<pos:position pos:line="15" pos:column="22"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_807_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">parse_eol<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">char<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier><specifier pos:line="2" pos:column="17">volatile<pos:position pos:line="2" pos:column="25"/></specifier> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">var<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">var<pos:position pos:line="4" pos:column="13"/></name></expr>)<pos:position pos:line="4" pos:column="14"/></condition><then pos:line="4" pos:column="14"> <block pos:line="4" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">self_destruct<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">()<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>
        <return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">unsigned<pos:position pos:line="9" pos:column="13"/></name> <name pos:line="9" pos:column="14">char<pos:position pos:line="9" pos:column="18"/></name> <modifier pos:line="9" pos:column="19">*<pos:position pos:line="9" pos:column="20"/></modifier></type><name pos:line="9" pos:column="20">token<pos:position pos:line="9" pos:column="25"/></name> <init pos:line="9" pos:column="26">= <expr><operator pos:line="9" pos:column="28">(<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">unsigned<pos:position pos:line="9" pos:column="37"/></name> <name pos:line="9" pos:column="38">char<pos:position pos:line="9" pos:column="42"/></name> <operator pos:line="9" pos:column="43">*<pos:position pos:line="9" pos:column="44"/></operator><operator pos:line="9" pos:column="44">)<pos:position pos:line="9" pos:column="45"/></operator> <call><name><name pos:line="9" pos:column="46">ConfigParser<pos:position pos:line="9" pos:column="58"/></name><operator pos:line="9" pos:column="58">::<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="60">NextQuotedOrToEol<pos:position pos:line="9" pos:column="77"/></name></name><argument_list pos:line="9" pos:column="77">()<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="80"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">safe_free<pos:position pos:line="10" pos:column="14"/></name><argument_list pos:line="10" pos:column="14">(<argument><expr><operator pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">var<pos:position pos:line="10" pos:column="19"/></name></expr></argument>)<pos:position pos:line="10" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="21"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">token<pos:position pos:line="12" pos:column="15"/></name></expr>)<pos:position pos:line="12" pos:column="16"/></condition><then pos:line="12" pos:column="16"> <block pos:line="12" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">self_destruct<pos:position pos:line="13" pos:column="22"/></name><argument_list pos:line="13" pos:column="22">()<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><operator pos:line="17" pos:column="12">*<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">token<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">&amp;&amp;<pos:position pos:line="17" pos:column="29"/></operator> <call><name pos:line="17" pos:column="22">xisspace<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><operator pos:line="17" pos:column="31">*<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">token<pos:position pos:line="17" pos:column="37"/></name></expr></argument>)<pos:position pos:line="17" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="39"/></condition>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="9">++<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">token<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt></block></while>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><operator pos:line="20" pos:column="10">*<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">token<pos:position pos:line="20" pos:column="16"/></name></expr>)<pos:position pos:line="20" pos:column="17"/></condition><then pos:line="20" pos:column="17"> <block pos:line="20" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">self_destruct<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">()<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
        <return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="25" pos:column="5">*<pos:position pos:line="25" pos:column="6"/></operator><name pos:line="25" pos:column="6">var<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <call><name pos:line="25" pos:column="12">xstrdup<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><operator pos:line="25" pos:column="20">(<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">char<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">*<pos:position pos:line="25" pos:column="27"/></operator><operator pos:line="25" pos:column="27">)<pos:position pos:line="25" pos:column="28"/></operator> <name pos:line="25" pos:column="29">token<pos:position pos:line="25" pos:column="34"/></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2953_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">StoreEntry<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">unlock<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">lock_count<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">--<pos:position pos:line="4" pos:column="17"/></operator></expr>;<pos:position pos:line="4" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">20<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"StoreEntry::unlock: key '"<pos:position pos:line="5" pos:column="46"/></literal> <operator pos:line="5" pos:column="47">&lt;&lt;<pos:position pos:line="5" pos:column="55"/></operator> <call><name pos:line="5" pos:column="50">getMD5Text<pos:position pos:line="5" pos:column="60"/></name><argument_list pos:line="5" pos:column="60">()<pos:position pos:line="5" pos:column="62"/></argument_list></call> <operator pos:line="5" pos:column="63">&lt;&lt;<pos:position pos:line="5" pos:column="71"/></operator> <literal type="string" pos:line="5" pos:column="66">"' count="<pos:position pos:line="5" pos:column="76"/></literal> <operator pos:line="5" pos:column="77">&lt;&lt;<pos:position pos:line="5" pos:column="85"/></operator> <name pos:line="5" pos:column="80">lock_count<pos:position pos:line="5" pos:column="90"/></name></expr></argument>)<pos:position pos:line="5" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="92"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">lock_count<pos:position pos:line="7" pos:column="19"/></name></expr>)<pos:position pos:line="7" pos:column="20"/></condition><then pos:line="7" pos:column="20">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><operator pos:line="8" pos:column="16">(<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">int<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">)<pos:position pos:line="8" pos:column="21"/></operator> <name pos:line="8" pos:column="22">lock_count<pos:position pos:line="8" pos:column="32"/></name></expr>;<pos:position pos:line="8" pos:column="33"/></return></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">store_status<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">==<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">STORE_PENDING<pos:position pos:line="10" pos:column="38"/></name></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="9">setReleaseFlag<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">()<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">assert<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><call><name pos:line="13" pos:column="12">storePendingNClients<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">this<pos:position pos:line="13" pos:column="37"/></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call> <operator pos:line="13" pos:column="39">==<pos:position pos:line="13" pos:column="41"/></operator> <literal type="number" pos:line="13" pos:column="42">0<pos:position pos:line="13" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="45"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">EBIT_TEST<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">flags<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="26">RELEASE_REQUEST<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="43"/></condition><then pos:line="15" pos:column="43">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="16" pos:column="9">this<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">-&gt;<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="15">release<pos:position pos:line="16" pos:column="22"/></name></name><argument_list pos:line="16" pos:column="22">()<pos:position pos:line="16" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt></block></then>
    <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><call><name pos:line="17" pos:column="14">keepInMemory<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">()<pos:position pos:line="17" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="29"/></condition><then pos:line="17" pos:column="29"> <block pos:line="17" pos:column="30">{
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">Store<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">::<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">Root<pos:position pos:line="18" pos:column="20"/></name></name><argument_list pos:line="18" pos:column="20">()<pos:position pos:line="18" pos:column="22"/></argument_list></call><operator pos:line="18" pos:column="22">.<pos:position pos:line="18" pos:column="23"/></operator><call><name pos:line="18" pos:column="23">dereference<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><operator pos:line="18" pos:column="35">*<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="36">this<pos:position pos:line="18" pos:column="40"/></name></expr></argument>)<pos:position pos:line="18" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">setMemStatus<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">IN_MEMORY<pos:position pos:line="19" pos:column="31"/></name></expr></argument>)<pos:position pos:line="19" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">mem_obj<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">unlinkRequest<pos:position pos:line="20" pos:column="31"/></name></name><argument_list pos:line="20" pos:column="31">()<pos:position pos:line="20" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if></elseif> <else pos:line="21" pos:column="7">else <block pos:line="21" pos:column="12">{
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">Store<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">::<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">Root<pos:position pos:line="22" pos:column="20"/></name></name><argument_list pos:line="22" pos:column="20">()<pos:position pos:line="22" pos:column="22"/></argument_list></call><operator pos:line="22" pos:column="22">.<pos:position pos:line="22" pos:column="23"/></operator><call><name pos:line="22" pos:column="23">dereference<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><operator pos:line="22" pos:column="35">*<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">this<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>

        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><call><name pos:line="24" pos:column="13">EBIT_TEST<pos:position pos:line="24" pos:column="22"/></name><argument_list pos:line="24" pos:column="22">(<argument><expr><name pos:line="24" pos:column="23">flags<pos:position pos:line="24" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="30">KEY_PRIVATE<pos:position pos:line="24" pos:column="41"/></name></expr></argument>)<pos:position pos:line="24" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="43"/></condition><then pos:line="24" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="13">debugs<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="number" pos:line="25" pos:column="20">20<pos:position pos:line="25" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="24">1<pos:position pos:line="25" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="27">"WARNING: "<pos:position pos:line="25" pos:column="38"/></literal> <operator pos:line="25" pos:column="39">&lt;&lt;<pos:position pos:line="25" pos:column="47"/></operator> <name pos:line="25" pos:column="42">__FILE__<pos:position pos:line="25" pos:column="50"/></name> <operator pos:line="25" pos:column="51">&lt;&lt;<pos:position pos:line="25" pos:column="59"/></operator> <literal type="string" pos:line="25" pos:column="54">":"<pos:position pos:line="25" pos:column="57"/></literal> <operator pos:line="25" pos:column="58">&lt;&lt;<pos:position pos:line="25" pos:column="66"/></operator> <name pos:line="25" pos:column="61">__LINE__<pos:position pos:line="25" pos:column="69"/></name> <operator pos:line="25" pos:column="70">&lt;&lt;<pos:position pos:line="25" pos:column="78"/></operator> <literal type="string" pos:line="25" pos:column="73">": found KEY_PRIVATE"<pos:position pos:line="25" pos:column="94"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="96"/></expr_stmt></block></then></if>

        <comment type="block" pos:line="27" pos:column="9">/* StoreEntry::purgeMem may free e */</comment>
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">purgeMem<pos:position pos:line="28" pos:column="17"/></name><argument_list pos:line="28" pos:column="17">()<pos:position pos:line="28" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="29" pos:column="6"/></block></else></if>

    <return pos:line="31" pos:column="5">return <expr><literal type="number" pos:line="31" pos:column="12">0<pos:position pos:line="31" pos:column="13"/></literal></expr>;<pos:position pos:line="31" pos:column="14"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

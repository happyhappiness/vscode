<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5008_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Rock<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">LoadingEntry<pos:position pos:line="1" pos:column="19"/></name></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Rebuild<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">loadingEntry<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">sfileno<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">fileNo<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><literal type="number" pos:line="4" pos:column="10">0<pos:position pos:line="4" pos:column="11"/></literal> <operator pos:line="4" pos:column="12">&lt;=<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="15">fileNo<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">&amp;&amp;<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="25">fileNo<pos:position pos:line="4" pos:column="31"/></name> <operator pos:line="4" pos:column="32">&lt;<pos:position pos:line="4" pos:column="36"/></operator> <name pos:line="4" pos:column="34">dbEntryLimit<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="48"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><call><name pos:line="5" pos:column="12">LoadingEntry<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">(<argument><expr><name pos:line="5" pos:column="25">fileNo<pos:position pos:line="5" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="33">*<pos:position pos:line="5" pos:column="34"/></operator><name pos:line="5" pos:column="34">parts<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="41"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

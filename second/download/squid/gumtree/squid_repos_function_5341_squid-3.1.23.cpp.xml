<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5341_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIContext<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">parseOneBuffer<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><call><name><name pos:line="4" pos:column="13">buffered<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">.<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">getRaw<pos:position pos:line="4" pos:column="28"/></name></name><argument_list pos:line="4" pos:column="28">()<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name> <argument_list pos:line="6" pos:column="12">(<argument><expr><literal type="number" pos:line="6" pos:column="13">86<pos:position pos:line="6" pos:column="15"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="6" pos:column="16">9<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="6" pos:column="18">"ESIContext::parseOneBuffer: "<pos:position pos:line="6" pos:column="48"/></literal> <operator pos:line="6" pos:column="49">&lt;&lt;<pos:position pos:line="6" pos:column="57"/></operator> <name><name pos:line="6" pos:column="52">buffered<pos:position pos:line="6" pos:column="60"/></name><operator pos:line="6" pos:column="60">-&gt;<pos:position pos:line="6" pos:column="65"/></operator><name pos:line="6" pos:column="62">len<pos:position pos:line="6" pos:column="65"/></name></name> <operator pos:line="6" pos:column="66">&lt;&lt;<pos:position pos:line="6" pos:column="74"/></operator> <literal type="string" pos:line="6" pos:column="69">" bytes"<pos:position pos:line="6" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="79"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">bool<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">lastBlock<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><ternary><condition><expr><call><name><name pos:line="7" pos:column="22">buffered<pos:position pos:line="7" pos:column="30"/></name><operator pos:line="7" pos:column="30">-&gt;<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="32">next<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">.<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="37">getRaw<pos:position pos:line="7" pos:column="43"/></name></name><argument_list pos:line="7" pos:column="43">()<pos:position pos:line="7" pos:column="45"/></argument_list></call> <operator pos:line="7" pos:column="46">==<pos:position pos:line="7" pos:column="48"/></operator> <name pos:line="7" pos:column="49">NULL<pos:position pos:line="7" pos:column="53"/></name> <operator pos:line="7" pos:column="54">&amp;&amp;<pos:position pos:line="7" pos:column="64"/></operator> <name><name pos:line="7" pos:column="57">flags<pos:position pos:line="7" pos:column="62"/></name><operator pos:line="7" pos:column="62">.<pos:position pos:line="7" pos:column="63"/></operator><name pos:line="7" pos:column="63">finishedtemplate<pos:position pos:line="7" pos:column="79"/></name></name></expr> ?<pos:position pos:line="7" pos:column="81"/></condition><then pos:line="7" pos:column="81"> <expr><literal type="boolean" pos:line="7" pos:column="82">true<pos:position pos:line="7" pos:column="86"/></literal></expr> <pos:position pos:line="7" pos:column="87"/></then><else pos:line="7" pos:column="87">: <expr><literal type="boolean" pos:line="7" pos:column="89">false<pos:position pos:line="7" pos:column="94"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="7" pos:column="95"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator> <call><name><name pos:line="9" pos:column="11">parserState<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">.<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">theParser<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">parse<pos:position pos:line="9" pos:column="39"/></name></name><argument_list pos:line="9" pos:column="39">(<argument><expr><name><name pos:line="9" pos:column="40">buffered<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">-&gt;<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="50">buf<pos:position pos:line="9" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="55">buffered<pos:position pos:line="9" pos:column="63"/></name><operator pos:line="9" pos:column="63">-&gt;<pos:position pos:line="9" pos:column="68"/></operator><name pos:line="9" pos:column="65">len<pos:position pos:line="9" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="70">lastBlock<pos:position pos:line="9" pos:column="79"/></name></expr></argument>)<pos:position pos:line="9" pos:column="80"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="81"/></condition><then pos:line="9" pos:column="81"> <block pos:line="9" pos:column="82">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">setError<pos:position pos:line="10" pos:column="17"/></name><argument_list pos:line="10" pos:column="17">()<pos:position pos:line="10" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="20"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">char<pos:position pos:line="11" pos:column="13"/></name></type> <name><name pos:line="11" pos:column="14">tempstr<pos:position pos:line="11" pos:column="21"/></name><index pos:line="11" pos:column="21">[<expr><literal type="number" pos:line="11" pos:column="22">1024<pos:position pos:line="11" pos:column="26"/></literal></expr>]<pos:position pos:line="11" pos:column="27"/></index></name></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">snprintf<pos:position pos:line="12" pos:column="17"/></name> <argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">tempstr<pos:position pos:line="12" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="28">1023<pos:position pos:line="12" pos:column="32"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="34">"esiProcess: Parse error at line %ld:\n%s\n"<pos:position pos:line="12" pos:column="78"/></literal></expr></argument>,
                  <argument><expr><call><name><name pos:line="13" pos:column="19">parserState<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">.<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">theParser<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">lineNumber<pos:position pos:line="13" pos:column="52"/></name></name><argument_list pos:line="13" pos:column="52">()<pos:position pos:line="13" pos:column="54"/></argument_list></call></expr></argument>,
                  <argument><expr><call><name><name pos:line="14" pos:column="19">parserState<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">.<pos:position pos:line="14" pos:column="31"/></operator><name pos:line="14" pos:column="31">theParser<pos:position pos:line="14" pos:column="40"/></name><operator pos:line="14" pos:column="40">-&gt;<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="42">errorString<pos:position pos:line="14" pos:column="53"/></name></name><argument_list pos:line="14" pos:column="53">()<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">86<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">0<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">""<pos:position pos:line="15" pos:column="25"/></literal> <operator pos:line="15" pos:column="26">&lt;&lt;<pos:position pos:line="15" pos:column="34"/></operator> <name pos:line="15" pos:column="29">tempstr<pos:position pos:line="15" pos:column="36"/></name> <operator pos:line="15" pos:column="37">&lt;&lt;<pos:position pos:line="15" pos:column="45"/></operator> <literal type="string" pos:line="15" pos:column="40">""<pos:position pos:line="15" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="44"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="17" pos:column="9">setErrorMessage<pos:position pos:line="17" pos:column="24"/></name><argument_list pos:line="17" pos:column="24">(<argument><expr><name pos:line="17" pos:column="25">tempstr<pos:position pos:line="17" pos:column="32"/></name></expr></argument>)<pos:position pos:line="17" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="19" pos:column="9">assert<pos:position pos:line="19" pos:column="15"/></name> <argument_list pos:line="19" pos:column="16">(<argument><expr><name><name pos:line="19" pos:column="17">flags<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">error<pos:position pos:line="19" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>

        <return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name><name pos:line="24" pos:column="9">flags<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">.<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">error<pos:position pos:line="24" pos:column="20"/></name></name></expr>)<pos:position pos:line="24" pos:column="21"/></condition><then pos:line="24" pos:column="21"> <block pos:line="24" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">setError<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">()<pos:position pos:line="25" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="20"/></expr_stmt>
        <return pos:line="26" pos:column="9">return;<pos:position pos:line="26" pos:column="16"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="29" pos:column="5">ESISegment<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">::<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">Pointer<pos:position pos:line="29" pos:column="24"/></name></name></type> <name pos:line="29" pos:column="25">temp<pos:position pos:line="29" pos:column="29"/></name> <init pos:line="29" pos:column="30">= <expr><name pos:line="29" pos:column="32">buffered<pos:position pos:line="29" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><name pos:line="30" pos:column="5">buffered<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">=<pos:position pos:line="30" pos:column="15"/></operator> <name><name pos:line="30" pos:column="16">temp<pos:position pos:line="30" pos:column="20"/></name><operator pos:line="30" pos:column="20">-&gt;<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="22">next<pos:position pos:line="30" pos:column="26"/></name></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

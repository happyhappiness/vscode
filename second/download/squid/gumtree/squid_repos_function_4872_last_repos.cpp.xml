<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4872_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpRequestMethod<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">respMaybeCacheable<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">()<pos:position pos:line="2" pos:column="40"/></parameter_list> <specifier pos:line="2" pos:column="41">const<pos:position pos:line="2" pos:column="46"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// Only a few methods are defined as cacheable.</comment>
    <comment type="line" pos:line="5" pos:column="5">// All other methods from the below RFC are "MUST NOT cache"</comment>
    <switch pos:line="6" pos:column="5">switch <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">theMethod<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition> <block pos:line="6" pos:column="24">{
    <comment type="line" pos:line="7" pos:column="5">// RFC 2616 section 9</comment>
    <case pos:line="8" pos:column="5">case <expr><name><name pos:line="8" pos:column="10">Http<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">::<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">METHOD_GET<pos:position pos:line="8" pos:column="26"/></name></name></expr>:<pos:position pos:line="8" pos:column="27"/></case>
    <case pos:line="9" pos:column="5">case <expr><name><name pos:line="9" pos:column="10">Http<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">::<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">METHOD_HEAD<pos:position pos:line="9" pos:column="27"/></name></name></expr>:<pos:position pos:line="9" pos:column="28"/></case>
        <return pos:line="10" pos:column="9">return <expr><literal type="boolean" pos:line="10" pos:column="16">true<pos:position pos:line="10" pos:column="20"/></literal></expr>;<pos:position pos:line="10" pos:column="21"/></return>
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">WHEN_POST_CACHE_SUPPORTED<pos:position pos:line="11" pos:column="30"/></name></expr></cpp:if>
    <case pos:line="12" pos:column="5">case <expr><name><name pos:line="12" pos:column="10">Http<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">::<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">METHOD_POST<pos:position pos:line="12" pos:column="27"/></name></name></expr>:<pos:position pos:line="12" pos:column="28"/></case> <comment type="line" pos:line="12" pos:column="29">// Special case.</comment>
        <comment type="line" pos:line="13" pos:column="9">// RFC 2616 specifies POST as possibly cacheable</comment>
        <comment type="line" pos:line="14" pos:column="9">// However, Squid does not implement the required checks yet</comment>
        <return pos:line="15" pos:column="9">return <expr><literal type="boolean" pos:line="15" pos:column="16">true<pos:position pos:line="15" pos:column="20"/></literal></expr>;<pos:position pos:line="15" pos:column="21"/></return>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="line" pos:line="18" pos:column="9">// RFC 4918 section 9</comment>
<cpp:if pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">if<pos:position pos:line="19" pos:column="4"/></cpp:directive> <expr><name pos:line="19" pos:column="5">WHEN_PROPFIND_CACHE_SUPPORTED<pos:position pos:line="19" pos:column="34"/></name></expr></cpp:if>
    <case pos:line="20" pos:column="5">case <expr><name><name pos:line="20" pos:column="10">Http<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">::<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">METHOD_PROPFIND<pos:position pos:line="20" pos:column="31"/></name></name></expr>:<pos:position pos:line="20" pos:column="32"/></case> <comment type="line" pos:line="20" pos:column="33">// Special case.</comment>
        <comment type="line" pos:line="21" pos:column="9">// RFC 4918 specifies PROPFIND as possibly cacheable</comment>
        <comment type="line" pos:line="22" pos:column="9">// However, Squid does not implement the required checks yet</comment>
        <return pos:line="23" pos:column="9">return <expr><literal type="boolean" pos:line="23" pos:column="16">true<pos:position pos:line="23" pos:column="20"/></literal></expr>;<pos:position pos:line="23" pos:column="21"/></return>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="line" pos:line="26" pos:column="9">// RFC 5323 section 2 - defines no cacheable methods</comment>

        <comment type="line" pos:line="28" pos:column="9">// RFC 3253</comment>
<cpp:if pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">if<pos:position pos:line="29" pos:column="4"/></cpp:directive> <expr><name pos:line="29" pos:column="5">WHEN_CC_NOCACHE_DOES_REVALIDATES_IS_CONFIRMED<pos:position pos:line="29" pos:column="50"/></name></expr></cpp:if>
    <case pos:line="30" pos:column="5">case <expr><name><name pos:line="30" pos:column="10">Http<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">::<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">METHOD_CHECKOUT<pos:position pos:line="30" pos:column="31"/></name></name></expr>:<pos:position pos:line="30" pos:column="32"/></case>
    <case pos:line="31" pos:column="5">case <expr><name><name pos:line="31" pos:column="10">Http<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">::<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">METHOD_CHECKIN<pos:position pos:line="31" pos:column="30"/></name></name></expr>:<pos:position pos:line="31" pos:column="31"/></case>
    <case pos:line="32" pos:column="5">case <expr><name><name pos:line="32" pos:column="10">Http<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">::<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">METHOD_UNCHECKOUT<pos:position pos:line="32" pos:column="33"/></name></name></expr>:<pos:position pos:line="32" pos:column="34"/></case>
    <case pos:line="33" pos:column="5">case <expr><name><name pos:line="33" pos:column="10">Http<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">::<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">METHOD_MKWORKSPACE<pos:position pos:line="33" pos:column="34"/></name></name></expr>:<pos:position pos:line="33" pos:column="35"/></case>
    <case pos:line="34" pos:column="5">case <expr><name><name pos:line="34" pos:column="10">Http<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">::<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">METHOD_VERSION_CONTROL<pos:position pos:line="34" pos:column="38"/></name></name></expr>:<pos:position pos:line="34" pos:column="39"/></case>
    <case pos:line="35" pos:column="5">case <expr><name><name pos:line="35" pos:column="10">Http<pos:position pos:line="35" pos:column="14"/></name><operator pos:line="35" pos:column="14">::<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">METHOD_UPDATE<pos:position pos:line="35" pos:column="29"/></name></name></expr>:<pos:position pos:line="35" pos:column="30"/></case>
    <case pos:line="36" pos:column="5">case <expr><name><name pos:line="36" pos:column="10">Http<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">::<pos:position pos:line="36" pos:column="16"/></operator><name pos:line="36" pos:column="16">METHOD_LABEL<pos:position pos:line="36" pos:column="28"/></name></name></expr>:<pos:position pos:line="36" pos:column="29"/></case>
    <case pos:line="37" pos:column="5">case <expr><name><name pos:line="37" pos:column="10">Http<pos:position pos:line="37" pos:column="14"/></name><operator pos:line="37" pos:column="14">::<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="16">METHOD_MERGE<pos:position pos:line="37" pos:column="28"/></name></name></expr>:<pos:position pos:line="37" pos:column="29"/></case>
    <case pos:line="38" pos:column="5">case <expr><name><name pos:line="38" pos:column="10">Http<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">::<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">METHOD_BASELINE_CONTROL<pos:position pos:line="38" pos:column="39"/></name></name></expr>:<pos:position pos:line="38" pos:column="40"/></case>
    <case pos:line="39" pos:column="5">case <expr><name><name pos:line="39" pos:column="10">Http<pos:position pos:line="39" pos:column="14"/></name><operator pos:line="39" pos:column="14">::<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="16">METHOD_MKACTIVITY<pos:position pos:line="39" pos:column="33"/></name></name></expr>:<pos:position pos:line="39" pos:column="34"/></case>
        <comment type="line" pos:line="40" pos:column="9">// RFC 3253 defines these methods using "MUST include Cache-Control: no-cache".</comment>
        <comment type="line" pos:line="41" pos:column="9">//</comment>
        <comment type="line" pos:line="42" pos:column="9">// XXX: follow RFC 2616 definition of "no-cache" meaning "MAY cache, always revalidate"</comment>
        <comment type="line" pos:line="43" pos:column="9">// XXX: or treat as unregistered/undefined methods ??</comment>
        <comment type="line" pos:line="44" pos:column="9">// However, Squid may not implement the required revalidation checks yet</comment>
        <return pos:line="45" pos:column="9">return <expr><operator pos:line="45" pos:column="16">??<pos:position pos:line="45" pos:column="18"/></operator></expr>;<pos:position pos:line="45" pos:column="19"/></return>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="line" pos:line="48" pos:column="5">// Special Squid method tokens are not cacheable.</comment>
    <comment type="line" pos:line="49" pos:column="5">// RFC 2616 defines all unregistered or unspecified methods as non-cacheable</comment>
    <comment type="line" pos:line="50" pos:column="5">// until such time as an RFC defines them cacheable.</comment>
    <default pos:line="51" pos:column="5">default:<pos:position pos:line="51" pos:column="13"/></default>
        <return pos:line="52" pos:column="9">return <expr><literal type="boolean" pos:line="52" pos:column="16">false<pos:position pos:line="52" pos:column="21"/></literal></expr>;<pos:position pos:line="52" pos:column="22"/></return>
    }<pos:position pos:line="53" pos:column="6"/></block></switch>
}<pos:position pos:line="54" pos:column="2"/></block></function></unit>

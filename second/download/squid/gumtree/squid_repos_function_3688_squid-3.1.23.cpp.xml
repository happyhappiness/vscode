<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3688_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">QosConfig<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">dumpConfigLine<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">entry<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">name<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list> <specifier pos:line="2" pos:column="58">const<pos:position pos:line="2" pos:column="63"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">p<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">entry<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">snprintf<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><name pos:line="5" pos:column="14">p<pos:position pos:line="5" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="17">10<pos:position pos:line="5" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="21">"%s"<pos:position pos:line="5" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="27">name<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt> <comment type="line" pos:line="5" pos:column="34">// strlen("qos_flows ");</comment>
    <expr_stmt><expr><name pos:line="6" pos:column="5">p<pos:position pos:line="6" pos:column="6"/></name> <operator pos:line="6" pos:column="7">+=<pos:position pos:line="6" pos:column="9"/></operator> <call><name pos:line="6" pos:column="10">strlen<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">name<pos:position pos:line="6" pos:column="21"/></name></expr></argument>)<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">tos_local_hit<pos:position pos:line="8" pos:column="22"/></name> <operator pos:line="8" pos:column="23">&gt;<pos:position pos:line="8" pos:column="27"/></operator><literal type="number" pos:line="8" pos:column="24">0<pos:position pos:line="8" pos:column="25"/></literal></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26"> <block pos:line="8" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">snprintf<pos:position pos:line="9" pos:column="17"/></name><argument_list pos:line="9" pos:column="17">(<argument><expr><name pos:line="9" pos:column="18">p<pos:position pos:line="9" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="21">15<pos:position pos:line="9" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="25">" local-hit=%2x"<pos:position pos:line="9" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="43">tos_local_hit<pos:position pos:line="9" pos:column="56"/></name></expr></argument>)<pos:position pos:line="9" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">p<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">+=<pos:position pos:line="10" pos:column="13"/></operator> <literal type="number" pos:line="10" pos:column="14">15<pos:position pos:line="10" pos:column="16"/></literal></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">tos_sibling_hit<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">&gt;<pos:position pos:line="13" pos:column="29"/></operator><literal type="number" pos:line="13" pos:column="26">0<pos:position pos:line="13" pos:column="27"/></literal></expr>)<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28"> <block pos:line="13" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">snprintf<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">p<pos:position pos:line="14" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="21">17<pos:position pos:line="14" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="25">" sibling-hit=%2x"<pos:position pos:line="14" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">tos_sibling_hit<pos:position pos:line="14" pos:column="60"/></name></expr></argument>)<pos:position pos:line="14" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">p<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">+=<pos:position pos:line="15" pos:column="13"/></operator> <literal type="number" pos:line="15" pos:column="14">17<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">tos_parent_hit<pos:position pos:line="17" pos:column="23"/></name> <operator pos:line="17" pos:column="24">&gt;<pos:position pos:line="17" pos:column="28"/></operator><literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27"> <block pos:line="17" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">snprintf<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">p<pos:position pos:line="18" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="21">16<pos:position pos:line="18" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="25">" parent-hit=%2x"<pos:position pos:line="18" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="44">tos_parent_hit<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">p<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">+=<pos:position pos:line="19" pos:column="13"/></operator> <literal type="number" pos:line="19" pos:column="14">16<pos:position pos:line="19" pos:column="16"/></literal></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">preserve_miss_tos<pos:position pos:line="21" pos:column="26"/></name> <operator pos:line="21" pos:column="27">!=<pos:position pos:line="21" pos:column="29"/></operator> <literal type="number" pos:line="21" pos:column="30">0<pos:position pos:line="21" pos:column="31"/></literal></expr>)<pos:position pos:line="21" pos:column="32"/></condition><then pos:line="21" pos:column="32"> <block pos:line="21" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">snprintf<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><name pos:line="22" pos:column="18">p<pos:position pos:line="22" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="21">22<pos:position pos:line="22" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="25">" disable-preserve-miss"<pos:position pos:line="22" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">p<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">+=<pos:position pos:line="23" pos:column="13"/></operator> <literal type="number" pos:line="23" pos:column="14">22<pos:position pos:line="23" pos:column="16"/></literal></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">preserve_miss_tos<pos:position pos:line="25" pos:column="26"/></name> <operator pos:line="25" pos:column="27">&amp;&amp;<pos:position pos:line="25" pos:column="37"/></operator> <name pos:line="25" pos:column="30">preserve_miss_tos_mask<pos:position pos:line="25" pos:column="52"/></name> <operator pos:line="25" pos:column="53">!=<pos:position pos:line="25" pos:column="55"/></operator> <literal type="number" pos:line="25" pos:column="56">0<pos:position pos:line="25" pos:column="57"/></literal></expr>)<pos:position pos:line="25" pos:column="58"/></condition><then pos:line="25" pos:column="58"> <block pos:line="25" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">snprintf<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><name pos:line="26" pos:column="18">p<pos:position pos:line="26" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="21">15<pos:position pos:line="26" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="25">" miss-mask=%2x"<pos:position pos:line="26" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="43">preserve_miss_tos_mask<pos:position pos:line="26" pos:column="65"/></name></expr></argument>)<pos:position pos:line="26" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">p<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">+=<pos:position pos:line="27" pos:column="13"/></operator> <literal type="number" pos:line="27" pos:column="14">15<pos:position pos:line="27" pos:column="16"/></literal></expr>;<pos:position pos:line="27" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">snprintf<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><name pos:line="29" pos:column="14">p<pos:position pos:line="29" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="17">1<pos:position pos:line="29" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="20">"\n"<pos:position pos:line="29" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>
<comment type="line" pos:line="30" pos:column="1">//    p += 1;</comment>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1471_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">String<pos:position pos:line="1" pos:column="7"/></name></type>
<name><name pos:line="2" pos:column="1">SBuf<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">toString<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">()<pos:position pos:line="2" pos:column="17"/></parameter_list> <specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">String<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">rv<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">rv<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">.<pos:position pos:line="5" pos:column="8"/></operator><name pos:line="5" pos:column="8">limitInit<pos:position pos:line="5" pos:column="17"/></name></name><argument_list pos:line="5" pos:column="17">(<argument><expr><call><name pos:line="5" pos:column="18">buf<pos:position pos:line="5" pos:column="21"/></name><argument_list pos:line="5" pos:column="21">()<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="25">length<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">()<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="6" pos:column="5">++<pos:position pos:line="6" pos:column="7"/></operator><name><name pos:line="6" pos:column="7">stats<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">.<pos:position pos:line="6" pos:column="13"/></operator><name pos:line="6" pos:column="13">copyOut<pos:position pos:line="6" pos:column="20"/></name></name></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">rv<pos:position pos:line="7" pos:column="14"/></name></expr>;<pos:position pos:line="7" pos:column="15"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

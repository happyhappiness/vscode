<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1865_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">neighbors_init<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">void<pos:position pos:line="2" pos:column="20"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">servent<pos:position pos:line="4" pos:column="19"/></name></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">sep<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">me<pos:position pos:line="5" pos:column="19"/></name> <init pos:line="5" pos:column="20">= <expr><call><name pos:line="5" pos:column="22">getMyHostname<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">()<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">CachePeer<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">thisPeer<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><name pos:line="6" pos:column="27">NULL<pos:position pos:line="6" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">CachePeer<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">next<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">neighborsRegisterWithCacheManager<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">()<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="41"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name><name pos:line="11" pos:column="9">Comm<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">::<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">IsConnOpen<pos:position pos:line="11" pos:column="25"/></name></name><argument_list pos:line="11" pos:column="25">(<argument><expr><name pos:line="11" pos:column="26">icpIncomingConn<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="43"/></condition><then pos:line="11" pos:column="43"> <block pos:line="11" pos:column="44">{

        <for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><expr><name pos:line="13" pos:column="14">thisPeer<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <name><name pos:line="13" pos:column="25">Config<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">.<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">peers<pos:position pos:line="13" pos:column="37"/></name></name></expr>;<pos:position pos:line="13" pos:column="38"/></init> <condition><expr><name pos:line="13" pos:column="39">thisPeer<pos:position pos:line="13" pos:column="47"/></name></expr>;<pos:position pos:line="13" pos:column="48"/></condition> <incr><expr><name pos:line="13" pos:column="49">thisPeer<pos:position pos:line="13" pos:column="57"/></name> <operator pos:line="13" pos:column="58">=<pos:position pos:line="13" pos:column="59"/></operator> <name pos:line="13" pos:column="60">next<pos:position pos:line="13" pos:column="64"/></name></expr></incr>)<pos:position pos:line="13" pos:column="65"/></control> <block pos:line="13" pos:column="66">{
            <expr_stmt><expr><name pos:line="14" pos:column="13">next<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <name><name pos:line="14" pos:column="20">thisPeer<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">-&gt;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="30">next<pos:position pos:line="14" pos:column="34"/></name></name></expr>;<pos:position pos:line="14" pos:column="35"/></expr_stmt>

            <if pos:line="16" pos:column="13">if <condition pos:line="16" pos:column="16">(<expr><literal type="number" pos:line="16" pos:column="17">0<pos:position pos:line="16" pos:column="18"/></literal> <operator pos:line="16" pos:column="19">!=<pos:position pos:line="16" pos:column="21"/></operator> <call><name pos:line="16" pos:column="22">strcmp<pos:position pos:line="16" pos:column="28"/></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name><name pos:line="16" pos:column="29">thisPeer<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">-&gt;<pos:position pos:line="16" pos:column="42"/></operator><name pos:line="16" pos:column="39">host<pos:position pos:line="16" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">me<pos:position pos:line="16" pos:column="47"/></name></expr></argument>)<pos:position pos:line="16" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="49"/></condition><then pos:line="16" pos:column="49">
                <block type="pseudo"><continue pos:line="17" pos:column="17">continue;<pos:position pos:line="17" pos:column="26"/></continue></block></then></if>

            <for pos:line="19" pos:column="13">for <control pos:line="19" pos:column="17">(<init><decl><type><name><name pos:line="19" pos:column="18">AnyP<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">::<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="24">PortCfg<pos:position pos:line="19" pos:column="31"/></name></name> <modifier pos:line="19" pos:column="32">*<pos:position pos:line="19" pos:column="33"/></modifier></type><name pos:line="19" pos:column="33">s<pos:position pos:line="19" pos:column="34"/></name> <init pos:line="19" pos:column="35">= <expr><name><name pos:line="19" pos:column="37">Config<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">.<pos:position pos:line="19" pos:column="44"/></operator><name pos:line="19" pos:column="44">Sockaddr<pos:position pos:line="19" pos:column="52"/></name><operator pos:line="19" pos:column="52">.<pos:position pos:line="19" pos:column="53"/></operator><name pos:line="19" pos:column="53">http<pos:position pos:line="19" pos:column="57"/></name></name></expr></init></decl>;<pos:position pos:line="19" pos:column="58"/></init> <condition><expr><name pos:line="19" pos:column="59">s<pos:position pos:line="19" pos:column="60"/></name></expr>;<pos:position pos:line="19" pos:column="61"/></condition> <incr><expr><name pos:line="19" pos:column="62">s<pos:position pos:line="19" pos:column="63"/></name> <operator pos:line="19" pos:column="64">=<pos:position pos:line="19" pos:column="65"/></operator> <name><name pos:line="19" pos:column="66">s<pos:position pos:line="19" pos:column="67"/></name><operator pos:line="19" pos:column="67">-&gt;<pos:position pos:line="19" pos:column="72"/></operator><name pos:line="19" pos:column="69">next<pos:position pos:line="19" pos:column="73"/></name></name></expr></incr>)<pos:position pos:line="19" pos:column="74"/></control> <block pos:line="19" pos:column="75">{
                <if pos:line="20" pos:column="17">if <condition pos:line="20" pos:column="20">(<expr><name><name pos:line="20" pos:column="21">thisPeer<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">http_port<pos:position pos:line="20" pos:column="40"/></name></name> <operator pos:line="20" pos:column="41">!=<pos:position pos:line="20" pos:column="43"/></operator> <call><name><name pos:line="20" pos:column="44">s<pos:position pos:line="20" pos:column="45"/></name><operator pos:line="20" pos:column="45">-&gt;<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="47">s<pos:position pos:line="20" pos:column="48"/></name><operator pos:line="20" pos:column="48">.<pos:position pos:line="20" pos:column="49"/></operator><name pos:line="20" pos:column="49">port<pos:position pos:line="20" pos:column="53"/></name></name><argument_list pos:line="20" pos:column="53">()<pos:position pos:line="20" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="56"/></condition><then pos:line="20" pos:column="56">
                    <block type="pseudo"><continue pos:line="21" pos:column="21">continue;<pos:position pos:line="21" pos:column="30"/></continue></block></then></if>

                <expr_stmt><expr><call><name pos:line="23" pos:column="17">debugs<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><literal type="number" pos:line="23" pos:column="24">15<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="28">DBG_IMPORTANT<pos:position pos:line="23" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="43">"WARNING: Peer looks like this host"<pos:position pos:line="23" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="81"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="25" pos:column="17">debugs<pos:position pos:line="25" pos:column="23"/></name><argument_list pos:line="25" pos:column="23">(<argument><expr><literal type="number" pos:line="25" pos:column="24">15<pos:position pos:line="25" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="28">DBG_IMPORTANT<pos:position pos:line="25" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="43">"         Ignoring "<pos:position pos:line="25" pos:column="63"/></literal> <operator pos:line="25" pos:column="64">&lt;&lt;<pos:position pos:line="25" pos:column="72"/></operator>
                       <call><name pos:line="26" pos:column="24">neighborTypeStr<pos:position pos:line="26" pos:column="39"/></name><argument_list pos:line="26" pos:column="39">(<argument><expr><name pos:line="26" pos:column="40">thisPeer<pos:position pos:line="26" pos:column="48"/></name></expr></argument>)<pos:position pos:line="26" pos:column="49"/></argument_list></call> <operator pos:line="26" pos:column="50">&lt;&lt;<pos:position pos:line="26" pos:column="58"/></operator> <literal type="string" pos:line="26" pos:column="53">" "<pos:position pos:line="26" pos:column="56"/></literal> <operator pos:line="26" pos:column="57">&lt;&lt;<pos:position pos:line="26" pos:column="65"/></operator> <name><name pos:line="26" pos:column="60">thisPeer<pos:position pos:line="26" pos:column="68"/></name><operator pos:line="26" pos:column="68">-&gt;<pos:position pos:line="26" pos:column="73"/></operator><name pos:line="26" pos:column="70">host<pos:position pos:line="26" pos:column="74"/></name></name> <operator pos:line="26" pos:column="75">&lt;&lt;<pos:position pos:line="26" pos:column="83"/></operator>
                       <literal type="string" pos:line="27" pos:column="24">"/"<pos:position pos:line="27" pos:column="27"/></literal> <operator pos:line="27" pos:column="28">&lt;&lt;<pos:position pos:line="27" pos:column="36"/></operator> <name><name pos:line="27" pos:column="31">thisPeer<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">-&gt;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="41">http_port<pos:position pos:line="27" pos:column="50"/></name></name> <operator pos:line="27" pos:column="51">&lt;&lt;<pos:position pos:line="27" pos:column="59"/></operator> <literal type="string" pos:line="27" pos:column="54">"/"<pos:position pos:line="27" pos:column="57"/></literal> <operator pos:line="27" pos:column="58">&lt;&lt;<pos:position pos:line="27" pos:column="66"/></operator>
                       <name><name pos:line="28" pos:column="24">thisPeer<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">-&gt;<pos:position pos:line="28" pos:column="37"/></operator><name pos:line="28" pos:column="34">icp<pos:position pos:line="28" pos:column="37"/></name><operator pos:line="28" pos:column="37">.<pos:position pos:line="28" pos:column="38"/></operator><name pos:line="28" pos:column="38">port<pos:position pos:line="28" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="44"/></expr_stmt>

                <expr_stmt><expr><call><name pos:line="30" pos:column="17">neighborRemove<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">thisPeer<pos:position pos:line="30" pos:column="40"/></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="31" pos:column="14"/></block></for>
        }<pos:position pos:line="32" pos:column="10"/></block></for>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">peerRefreshDNS<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><operator pos:line="35" pos:column="20">(<pos:position pos:line="35" pos:column="21"/></operator><name pos:line="35" pos:column="21">void<pos:position pos:line="35" pos:column="25"/></name> <operator pos:line="35" pos:column="26">*<pos:position pos:line="35" pos:column="27"/></operator><operator pos:line="35" pos:column="27">)<pos:position pos:line="35" pos:column="28"/></operator> <literal type="number" pos:line="35" pos:column="29">1<pos:position pos:line="35" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name pos:line="37" pos:column="5">sep<pos:position pos:line="37" pos:column="8"/></name> <operator pos:line="37" pos:column="9">=<pos:position pos:line="37" pos:column="10"/></operator> <call><name pos:line="37" pos:column="11">getservbyname<pos:position pos:line="37" pos:column="24"/></name><argument_list pos:line="37" pos:column="24">(<argument><expr><literal type="string" pos:line="37" pos:column="25">"echo"<pos:position pos:line="37" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="33">"udp"<pos:position pos:line="37" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name pos:line="38" pos:column="5">echo_port<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <ternary><condition><expr><name pos:line="38" pos:column="17">sep<pos:position pos:line="38" pos:column="20"/></name></expr> ?<pos:position pos:line="38" pos:column="22"/></condition><then pos:line="38" pos:column="22"> <expr><call><name pos:line="38" pos:column="23">ntohs<pos:position pos:line="38" pos:column="28"/></name><argument_list pos:line="38" pos:column="28">(<argument><expr><operator pos:line="38" pos:column="29">(<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="30">unsigned<pos:position pos:line="38" pos:column="38"/></name> <name pos:line="38" pos:column="39">short<pos:position pos:line="38" pos:column="44"/></name><operator pos:line="38" pos:column="44">)<pos:position pos:line="38" pos:column="45"/></operator> <name><name pos:line="38" pos:column="46">sep<pos:position pos:line="38" pos:column="49"/></name><operator pos:line="38" pos:column="49">-&gt;<pos:position pos:line="38" pos:column="54"/></operator><name pos:line="38" pos:column="51">s_port<pos:position pos:line="38" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr> <pos:position pos:line="38" pos:column="59"/></then><else pos:line="38" pos:column="59">: <expr><literal type="number" pos:line="38" pos:column="61">7<pos:position pos:line="38" pos:column="62"/></literal></expr></else></ternary></expr>;<pos:position pos:line="38" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><name pos:line="40" pos:column="5">first_ping<pos:position pos:line="40" pos:column="15"/></name> <operator pos:line="40" pos:column="16">=<pos:position pos:line="40" pos:column="17"/></operator> <name><name pos:line="40" pos:column="18">Config<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">.<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">peers<pos:position pos:line="40" pos:column="30"/></name></name></expr>;<pos:position pos:line="40" pos:column="31"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5998_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESICustomParser<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">parse<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">dataToParse<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">size_t<pos:position pos:line="2" pos:column="55"/></name> <specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier></type> <name pos:line="2" pos:column="62">lengthOfData<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="76">bool<pos:position pos:line="2" pos:column="80"/></name> <specifier pos:line="2" pos:column="81">const<pos:position pos:line="2" pos:column="86"/></specifier></type> <name pos:line="2" pos:column="87">endOfStream<pos:position pos:line="2" pos:column="98"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="99"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">86<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">9<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"ESICustomParser::parse: Appending data to internal buffer"<pos:position pos:line="4" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">content<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">.<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">append<pos:position pos:line="5" pos:column="19"/></name></name> <argument_list pos:line="5" pos:column="20">(<argument><expr><name pos:line="5" pos:column="21">dataToParse<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="34">lengthOfData<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">endOfStream<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22"> <block pos:line="7" pos:column="23">{
        <return pos:line="8" pos:column="9">return <expr><literal type="boolean" pos:line="8" pos:column="16">true<pos:position pos:line="8" pos:column="20"/></literal></expr>;<pos:position pos:line="8" pos:column="21"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">size_t<pos:position pos:line="11" pos:column="11"/></name></type> <name pos:line="11" pos:column="12">openESITags<pos:position pos:line="11" pos:column="23"/></name> <argument_list pos:line="11" pos:column="24">(<argument><expr><literal type="number" pos:line="11" pos:column="25">0<pos:position pos:line="11" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></decl>;<pos:position pos:line="11" pos:column="28"/></decl_stmt>
    <comment type="line" pos:line="12" pos:column="5">//erring on the safe side. Probably rawBuf would be ok too</comment>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <specifier pos:line="13" pos:column="10">const<pos:position pos:line="13" pos:column="15"/></specifier> <modifier pos:line="13" pos:column="16">*<pos:position pos:line="13" pos:column="17"/></modifier></type><name pos:line="13" pos:column="17">currentPos<pos:position pos:line="13" pos:column="27"/></name> <init pos:line="13" pos:column="28">= <expr><call><name><name pos:line="13" pos:column="30">content<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">.<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="38">termedBuf<pos:position pos:line="13" pos:column="47"/></name></name><argument_list pos:line="13" pos:column="47">()<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">size_t<pos:position pos:line="14" pos:column="11"/></name></type> <name pos:line="14" pos:column="12">remainingCount<pos:position pos:line="14" pos:column="26"/></name> <init pos:line="14" pos:column="27">= <expr><call><name><name pos:line="14" pos:column="29">content<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">size<pos:position pos:line="14" pos:column="41"/></name></name><argument_list pos:line="14" pos:column="41">()<pos:position pos:line="14" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <specifier pos:line="15" pos:column="10">const<pos:position pos:line="15" pos:column="15"/></specifier> <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type><name pos:line="15" pos:column="17">tag<pos:position pos:line="15" pos:column="20"/></name> <init pos:line="15" pos:column="21">= <expr><name pos:line="15" pos:column="23">NULL<pos:position pos:line="15" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="28"/></decl_stmt>

    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><operator pos:line="17" pos:column="12">(<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">tag<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <call><name pos:line="17" pos:column="19">findTag<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">currentPos<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="39">remainingCount<pos:position pos:line="17" pos:column="53"/></name></expr></argument>)<pos:position pos:line="17" pos:column="54"/></argument_list></call><operator pos:line="17" pos:column="54">)<pos:position pos:line="17" pos:column="55"/></operator></expr>)<pos:position pos:line="17" pos:column="56"/></condition> <block pos:line="17" pos:column="57">{
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">tag<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">-<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">currentPos<pos:position pos:line="18" pos:column="29"/></name></expr>)<pos:position pos:line="18" pos:column="30"/></condition><then pos:line="18" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="19" pos:column="13">theClient<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">parserDefault<pos:position pos:line="19" pos:column="37"/></name></name> <argument_list pos:line="19" pos:column="38">(<argument><expr><name pos:line="19" pos:column="39">currentPos<pos:position pos:line="19" pos:column="49"/></name></expr></argument>,<argument><expr><name pos:line="19" pos:column="50">tag<pos:position pos:line="19" pos:column="53"/></name> <operator pos:line="19" pos:column="54">-<pos:position pos:line="19" pos:column="55"/></operator> <name pos:line="19" pos:column="56">currentPos<pos:position pos:line="19" pos:column="66"/></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt></block></then></if>

        <switch pos:line="21" pos:column="9">switch <condition pos:line="21" pos:column="16">(<expr><name pos:line="21" pos:column="17">lastTag<pos:position pos:line="21" pos:column="24"/></name></expr>)<pos:position pos:line="21" pos:column="25"/></condition> <block pos:line="21" pos:column="26">{

        <case pos:line="23" pos:column="9">case <expr><name pos:line="23" pos:column="14">ESITAG<pos:position pos:line="23" pos:column="20"/></name></expr>:<pos:position pos:line="23" pos:column="21"/></case> <block pos:line="23" pos:column="22">{
            <expr_stmt><expr><operator pos:line="24" pos:column="13">++<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">openESITags<pos:position pos:line="24" pos:column="26"/></name></expr>;<pos:position pos:line="24" pos:column="27"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="25" pos:column="13">char<pos:position pos:line="25" pos:column="17"/></name> <modifier pos:line="25" pos:column="18">*<pos:position pos:line="25" pos:column="19"/></modifier></type><name pos:line="25" pos:column="19">tagEnd<pos:position pos:line="25" pos:column="25"/></name> <init pos:line="25" pos:column="26">= <expr><call><name pos:line="25" pos:column="28">strchr<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><cast type="const" pos:line="25" pos:column="35">const_cast<argument_list type="generic" pos:line="25" pos:column="45">&lt;<argument><expr><name pos:line="25" pos:column="46">char<pos:position pos:line="25" pos:column="50"/></name> <operator pos:line="25" pos:column="51">*<pos:position pos:line="25" pos:column="52"/></operator></expr></argument>&gt;<pos:position pos:line="25" pos:column="56"/></argument_list><argument_list pos:line="25" pos:column="53">(<argument><expr><name pos:line="25" pos:column="54">tag<pos:position pos:line="25" pos:column="57"/></name></expr></argument>)<pos:position pos:line="25" pos:column="58"/></argument_list></cast></expr></argument>, <argument><expr><literal type="char" pos:line="25" pos:column="60">'&gt;'<pos:position pos:line="25" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="65"/></decl_stmt>

            <if pos:line="27" pos:column="13">if <condition pos:line="27" pos:column="16">(<expr><operator pos:line="27" pos:column="17">!<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">tagEnd<pos:position pos:line="27" pos:column="24"/></name></expr>)<pos:position pos:line="27" pos:column="25"/></condition><then pos:line="27" pos:column="25"> <block pos:line="27" pos:column="26">{
                <expr_stmt><expr><name pos:line="28" pos:column="17">error<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <literal type="string" pos:line="28" pos:column="25">"Could not find end ('&gt;') of tag"<pos:position pos:line="28" pos:column="61"/></literal></expr>;<pos:position pos:line="28" pos:column="59"/></expr_stmt>
                <return pos:line="29" pos:column="17">return <expr><literal type="boolean" pos:line="29" pos:column="24">false<pos:position pos:line="29" pos:column="29"/></literal></expr>;<pos:position pos:line="29" pos:column="30"/></return>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if>

            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name pos:line="32" pos:column="17">tagEnd<pos:position pos:line="32" pos:column="23"/></name> <operator pos:line="32" pos:column="24">-<pos:position pos:line="32" pos:column="25"/></operator> <name pos:line="32" pos:column="26">tag<pos:position pos:line="32" pos:column="29"/></name> <operator pos:line="32" pos:column="30">&gt;<pos:position pos:line="32" pos:column="34"/></operator> <operator pos:line="32" pos:column="32">(<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="33">ssize_t<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">)<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="41">remainingCount<pos:position pos:line="32" pos:column="55"/></name></expr>)<pos:position pos:line="32" pos:column="56"/></condition><then pos:line="32" pos:column="56"> <block pos:line="32" pos:column="57">{
                <expr_stmt><expr><name pos:line="33" pos:column="17">error<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <literal type="string" pos:line="33" pos:column="25">"Tag ends beyond the parse buffer."<pos:position pos:line="33" pos:column="60"/></literal></expr>;<pos:position pos:line="33" pos:column="61"/></expr_stmt>
                <return pos:line="34" pos:column="17">return <expr><literal type="boolean" pos:line="34" pos:column="24">false<pos:position pos:line="34" pos:column="29"/></literal></expr>;<pos:position pos:line="34" pos:column="30"/></return>
            }<pos:position pos:line="35" pos:column="14"/></block></then></if>

            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><operator pos:line="37" pos:column="17">*<pos:position pos:line="37" pos:column="18"/></operator><operator pos:line="37" pos:column="18">(<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">tagEnd<pos:position pos:line="37" pos:column="25"/></name> <operator pos:line="37" pos:column="26">-<pos:position pos:line="37" pos:column="27"/></operator> <literal type="number" pos:line="37" pos:column="28">1<pos:position pos:line="37" pos:column="29"/></literal><operator pos:line="37" pos:column="29">)<pos:position pos:line="37" pos:column="30"/></operator> <operator pos:line="37" pos:column="31">==<pos:position pos:line="37" pos:column="33"/></operator> <literal type="char" pos:line="37" pos:column="34">'/'<pos:position pos:line="37" pos:column="37"/></literal></expr>)<pos:position pos:line="37" pos:column="38"/></condition><then pos:line="37" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="38" pos:column="17">--<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">openESITags<pos:position pos:line="38" pos:column="30"/></name></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt></block></then></if>

            <decl_stmt><decl><type><name pos:line="40" pos:column="13">char<pos:position pos:line="40" pos:column="17"/></name> <modifier pos:line="40" pos:column="18">*<pos:position pos:line="40" pos:column="19"/></modifier></type> <name pos:line="40" pos:column="20">endofName<pos:position pos:line="40" pos:column="29"/></name> <init pos:line="40" pos:column="30">= <expr><call><name pos:line="40" pos:column="32">strpbrk<pos:position pos:line="40" pos:column="39"/></name><argument_list pos:line="40" pos:column="39">(<argument><expr><cast type="const" pos:line="40" pos:column="40">const_cast<argument_list type="generic" pos:line="40" pos:column="50">&lt;<argument><expr><name pos:line="40" pos:column="51">char<pos:position pos:line="40" pos:column="55"/></name> <operator pos:line="40" pos:column="56">*<pos:position pos:line="40" pos:column="57"/></operator></expr></argument>&gt;<pos:position pos:line="40" pos:column="61"/></argument_list><argument_list pos:line="40" pos:column="58">(<argument><expr><name pos:line="40" pos:column="59">tag<pos:position pos:line="40" pos:column="62"/></name></expr></argument>)<pos:position pos:line="40" pos:column="63"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="40" pos:column="65">w_space<pos:position pos:line="40" pos:column="72"/></name></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="40" pos:column="74"/></decl_stmt>

            <if pos:line="42" pos:column="13">if <condition pos:line="42" pos:column="16">(<expr><name pos:line="42" pos:column="17">endofName<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">&gt;<pos:position pos:line="42" pos:column="31"/></operator> <name pos:line="42" pos:column="29">tagEnd<pos:position pos:line="42" pos:column="35"/></name></expr>)<pos:position pos:line="42" pos:column="36"/></condition><then pos:line="42" pos:column="36">
                <block type="pseudo"><expr_stmt><expr><name pos:line="43" pos:column="17">endofName<pos:position pos:line="43" pos:column="26"/></name> <operator pos:line="43" pos:column="27">=<pos:position pos:line="43" pos:column="28"/></operator> <cast type="const" pos:line="43" pos:column="29">const_cast<argument_list type="generic" pos:line="43" pos:column="39">&lt;<argument><expr><name pos:line="43" pos:column="40">char<pos:position pos:line="43" pos:column="44"/></name> <operator pos:line="43" pos:column="45">*<pos:position pos:line="43" pos:column="46"/></operator></expr></argument>&gt;<pos:position pos:line="43" pos:column="50"/></argument_list><argument_list pos:line="43" pos:column="47">(<argument><expr><name pos:line="43" pos:column="48">tagEnd<pos:position pos:line="43" pos:column="54"/></name></expr></argument>)<pos:position pos:line="43" pos:column="55"/></argument_list></cast></expr>;<pos:position pos:line="43" pos:column="56"/></expr_stmt></block></then></if>

            <expr_stmt><expr><operator pos:line="45" pos:column="13">*<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">endofName<pos:position pos:line="45" pos:column="23"/></name> <operator pos:line="45" pos:column="24">=<pos:position pos:line="45" pos:column="25"/></operator> <literal type="char" pos:line="45" pos:column="26">'\0'<pos:position pos:line="45" pos:column="30"/></literal></expr>;<pos:position pos:line="45" pos:column="31"/></expr_stmt>

            <expr_stmt><expr><operator pos:line="47" pos:column="13">*<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">tagEnd<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">=<pos:position pos:line="47" pos:column="22"/></operator> <literal type="char" pos:line="47" pos:column="23">'\0'<pos:position pos:line="47" pos:column="27"/></literal></expr>;<pos:position pos:line="47" pos:column="28"/></expr_stmt>

            <decl_stmt><decl><type><name><name pos:line="49" pos:column="13">Vector<pos:position pos:line="49" pos:column="19"/></name><argument_list type="generic" pos:line="49" pos:column="19">&lt;<argument><expr><name pos:line="49" pos:column="20">char<pos:position pos:line="49" pos:column="24"/></name> <modifier pos:line="49" pos:column="25">*<pos:position pos:line="49" pos:column="26"/></modifier></expr></argument>&gt;<pos:position pos:line="49" pos:column="30"/></argument_list></name></type><name pos:line="49" pos:column="27">attributes<pos:position pos:line="49" pos:column="37"/></name></decl>;<pos:position pos:line="49" pos:column="38"/></decl_stmt>

            <decl_stmt><decl><type><name pos:line="51" pos:column="13">char<pos:position pos:line="51" pos:column="17"/></name> <modifier pos:line="51" pos:column="18">*<pos:position pos:line="51" pos:column="19"/></modifier></type><name pos:line="51" pos:column="19">attribute<pos:position pos:line="51" pos:column="28"/></name> <init pos:line="51" pos:column="29">= <expr><cast type="const" pos:line="51" pos:column="31">const_cast<argument_list type="generic" pos:line="51" pos:column="41">&lt;<argument><expr><name pos:line="51" pos:column="42">char<pos:position pos:line="51" pos:column="46"/></name> <operator pos:line="51" pos:column="47">*<pos:position pos:line="51" pos:column="48"/></operator></expr></argument>&gt;<pos:position pos:line="51" pos:column="52"/></argument_list><argument_list pos:line="51" pos:column="49">(<argument><expr><name pos:line="51" pos:column="50">endofName<pos:position pos:line="51" pos:column="59"/></name> <operator pos:line="51" pos:column="60">+<pos:position pos:line="51" pos:column="61"/></operator> <literal type="number" pos:line="51" pos:column="62">1<pos:position pos:line="51" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="64"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="51" pos:column="65"/></decl_stmt>

            <while pos:line="53" pos:column="13">while <condition pos:line="53" pos:column="19">(<expr><name pos:line="53" pos:column="20">attribute<pos:position pos:line="53" pos:column="29"/></name> <operator pos:line="53" pos:column="30">&gt;<pos:position pos:line="53" pos:column="34"/></operator> <name pos:line="53" pos:column="32">tag<pos:position pos:line="53" pos:column="35"/></name> <operator pos:line="53" pos:column="36">&amp;&amp;<pos:position pos:line="53" pos:column="46"/></operator> <name pos:line="53" pos:column="39">attribute<pos:position pos:line="53" pos:column="48"/></name> <operator pos:line="53" pos:column="49">&lt;<pos:position pos:line="53" pos:column="53"/></operator> <name pos:line="53" pos:column="51">tagEnd<pos:position pos:line="53" pos:column="57"/></name></expr>)<pos:position pos:line="53" pos:column="58"/></condition> <block pos:line="53" pos:column="59">{
                <comment type="block" pos:line="54" pos:column="17">/* leading spaces */</comment>

                <while pos:line="56" pos:column="17">while <condition pos:line="56" pos:column="23">(<expr><name pos:line="56" pos:column="24">attribute<pos:position pos:line="56" pos:column="33"/></name> <operator pos:line="56" pos:column="34">&lt;<pos:position pos:line="56" pos:column="38"/></operator> <name pos:line="56" pos:column="36">tagEnd<pos:position pos:line="56" pos:column="42"/></name> <operator pos:line="56" pos:column="43">&amp;&amp;<pos:position pos:line="56" pos:column="53"/></operator> <operator pos:line="56" pos:column="46">(<pos:position pos:line="56" pos:column="47"/></operator><call><name pos:line="56" pos:column="47">xisspace<pos:position pos:line="56" pos:column="55"/></name><argument_list pos:line="56" pos:column="55">(<argument><expr><operator pos:line="56" pos:column="56">*<pos:position pos:line="56" pos:column="57"/></operator><name pos:line="56" pos:column="57">attribute<pos:position pos:line="56" pos:column="66"/></name></expr></argument>)<pos:position pos:line="56" pos:column="67"/></argument_list></call> <operator pos:line="56" pos:column="68">||<pos:position pos:line="56" pos:column="70"/></operator> <operator pos:line="56" pos:column="71">(<pos:position pos:line="56" pos:column="72"/></operator><operator pos:line="56" pos:column="72">*<pos:position pos:line="56" pos:column="73"/></operator><name pos:line="56" pos:column="73">attribute<pos:position pos:line="56" pos:column="82"/></name> <operator pos:line="56" pos:column="83">==<pos:position pos:line="56" pos:column="85"/></operator> <literal type="char" pos:line="56" pos:column="86">'/'<pos:position pos:line="56" pos:column="89"/></literal><operator pos:line="56" pos:column="89">)<pos:position pos:line="56" pos:column="90"/></operator><operator pos:line="56" pos:column="90">)<pos:position pos:line="56" pos:column="91"/></operator></expr>)<pos:position pos:line="56" pos:column="92"/></condition>
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="57" pos:column="21">++<pos:position pos:line="57" pos:column="23"/></operator><name pos:line="57" pos:column="23">attribute<pos:position pos:line="57" pos:column="32"/></name></expr>;<pos:position pos:line="57" pos:column="33"/></expr_stmt></block></while>

                <if pos:line="59" pos:column="17">if <condition pos:line="59" pos:column="20">(<expr><operator pos:line="59" pos:column="21">!<pos:position pos:line="59" pos:column="22"/></operator> <operator pos:line="59" pos:column="23">(<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="24">attribute<pos:position pos:line="59" pos:column="33"/></name> <operator pos:line="59" pos:column="34">&lt;<pos:position pos:line="59" pos:column="38"/></operator> <name pos:line="59" pos:column="36">tagEnd<pos:position pos:line="59" pos:column="42"/></name><operator pos:line="59" pos:column="42">)<pos:position pos:line="59" pos:column="43"/></operator></expr>)<pos:position pos:line="59" pos:column="44"/></condition><then pos:line="59" pos:column="44">
                    <block type="pseudo"><break pos:line="60" pos:column="21">break;<pos:position pos:line="60" pos:column="27"/></break></block></then></if>

                <comment type="block" pos:line="62" pos:column="17">/* attribute name */</comment>
                <expr_stmt><expr><call><name><name pos:line="63" pos:column="17">attributes<pos:position pos:line="63" pos:column="27"/></name><operator pos:line="63" pos:column="27">.<pos:position pos:line="63" pos:column="28"/></operator><name pos:line="63" pos:column="28">push_back<pos:position pos:line="63" pos:column="37"/></name></name><argument_list pos:line="63" pos:column="37">(<argument><expr><name pos:line="63" pos:column="38">attribute<pos:position pos:line="63" pos:column="47"/></name></expr></argument>)<pos:position pos:line="63" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="49"/></expr_stmt>

                <decl_stmt><decl><type><name pos:line="65" pos:column="17">char<pos:position pos:line="65" pos:column="21"/></name> <modifier pos:line="65" pos:column="22">*<pos:position pos:line="65" pos:column="23"/></modifier></type><name pos:line="65" pos:column="23">nextSpace<pos:position pos:line="65" pos:column="32"/></name> <init pos:line="65" pos:column="33">= <expr><call><name pos:line="65" pos:column="35">strpbrk<pos:position pos:line="65" pos:column="42"/></name><argument_list pos:line="65" pos:column="42">(<argument><expr><name pos:line="65" pos:column="43">attribute<pos:position pos:line="65" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="54">w_space<pos:position pos:line="65" pos:column="61"/></name></expr></argument>)<pos:position pos:line="65" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="65" pos:column="63"/></decl_stmt>

                <decl_stmt><decl><type><name pos:line="67" pos:column="17">char<pos:position pos:line="67" pos:column="21"/></name> <modifier pos:line="67" pos:column="22">*<pos:position pos:line="67" pos:column="23"/></modifier></type><name pos:line="67" pos:column="23">equals<pos:position pos:line="67" pos:column="29"/></name> <init pos:line="67" pos:column="30">= <expr><call><name pos:line="67" pos:column="32">strchr<pos:position pos:line="67" pos:column="38"/></name><argument_list pos:line="67" pos:column="38">(<argument><expr><name pos:line="67" pos:column="39">attribute<pos:position pos:line="67" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="67" pos:column="50">'='<pos:position pos:line="67" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="55"/></decl_stmt>

                <if pos:line="69" pos:column="17">if <condition pos:line="69" pos:column="20">(<expr><operator pos:line="69" pos:column="21">!<pos:position pos:line="69" pos:column="22"/></operator><name pos:line="69" pos:column="22">equals<pos:position pos:line="69" pos:column="28"/></name></expr>)<pos:position pos:line="69" pos:column="29"/></condition><then pos:line="69" pos:column="29"> <block pos:line="69" pos:column="30">{
                    <expr_stmt><expr><name pos:line="70" pos:column="21">error<pos:position pos:line="70" pos:column="26"/></name> <operator pos:line="70" pos:column="27">=<pos:position pos:line="70" pos:column="28"/></operator> <literal type="string" pos:line="70" pos:column="29">"Missing attribute value."<pos:position pos:line="70" pos:column="55"/></literal></expr>;<pos:position pos:line="70" pos:column="56"/></expr_stmt>
                    <return pos:line="71" pos:column="21">return <expr><literal type="boolean" pos:line="71" pos:column="28">false<pos:position pos:line="71" pos:column="33"/></literal></expr>;<pos:position pos:line="71" pos:column="34"/></return>
                }<pos:position pos:line="72" pos:column="18"/></block></then></if>

                <if pos:line="74" pos:column="17">if <condition pos:line="74" pos:column="20">(<expr><name pos:line="74" pos:column="21">nextSpace<pos:position pos:line="74" pos:column="30"/></name> <operator pos:line="74" pos:column="31">&amp;&amp;<pos:position pos:line="74" pos:column="41"/></operator> <name pos:line="74" pos:column="34">nextSpace<pos:position pos:line="74" pos:column="43"/></name> <operator pos:line="74" pos:column="44">&lt;<pos:position pos:line="74" pos:column="48"/></operator> <name pos:line="74" pos:column="46">equals<pos:position pos:line="74" pos:column="52"/></name></expr>)<pos:position pos:line="74" pos:column="53"/></condition><then pos:line="74" pos:column="53">
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="75" pos:column="21">*<pos:position pos:line="75" pos:column="22"/></operator><name pos:line="75" pos:column="22">nextSpace<pos:position pos:line="75" pos:column="31"/></name> <operator pos:line="75" pos:column="32">=<pos:position pos:line="75" pos:column="33"/></operator> <literal type="char" pos:line="75" pos:column="34">'\0'<pos:position pos:line="75" pos:column="38"/></literal></expr>;<pos:position pos:line="75" pos:column="39"/></expr_stmt></block></then>
                <else pos:line="76" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="77" pos:column="21">*<pos:position pos:line="77" pos:column="22"/></operator><name pos:line="77" pos:column="22">equals<pos:position pos:line="77" pos:column="28"/></name> <operator pos:line="77" pos:column="29">=<pos:position pos:line="77" pos:column="30"/></operator> <literal type="char" pos:line="77" pos:column="31">'\0'<pos:position pos:line="77" pos:column="35"/></literal></expr>;<pos:position pos:line="77" pos:column="36"/></expr_stmt></block></else></if>

                <expr_stmt><expr><operator pos:line="79" pos:column="17">++<pos:position pos:line="79" pos:column="19"/></operator><name pos:line="79" pos:column="19">equals<pos:position pos:line="79" pos:column="25"/></name></expr>;<pos:position pos:line="79" pos:column="26"/></expr_stmt>

                <while pos:line="81" pos:column="17">while <condition pos:line="81" pos:column="23">(<expr><name pos:line="81" pos:column="24">equals<pos:position pos:line="81" pos:column="30"/></name> <operator pos:line="81" pos:column="31">&lt;<pos:position pos:line="81" pos:column="35"/></operator> <name pos:line="81" pos:column="33">tagEnd<pos:position pos:line="81" pos:column="39"/></name> <operator pos:line="81" pos:column="40">&amp;&amp;<pos:position pos:line="81" pos:column="50"/></operator> <call><name pos:line="81" pos:column="43">xisspace<pos:position pos:line="81" pos:column="51"/></name><argument_list pos:line="81" pos:column="51">(<argument><expr><operator pos:line="81" pos:column="52">*<pos:position pos:line="81" pos:column="53"/></operator><name pos:line="81" pos:column="53">equals<pos:position pos:line="81" pos:column="59"/></name></expr></argument>)<pos:position pos:line="81" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="61"/></condition>
                    <block type="pseudo"><expr_stmt><expr><operator pos:line="82" pos:column="21">++<pos:position pos:line="82" pos:column="23"/></operator><name pos:line="82" pos:column="23">equals<pos:position pos:line="82" pos:column="29"/></name></expr>;<pos:position pos:line="82" pos:column="30"/></expr_stmt></block></while>

                <decl_stmt><decl><type><name pos:line="84" pos:column="17">char<pos:position pos:line="84" pos:column="21"/></name></type> <name pos:line="84" pos:column="22">sep<pos:position pos:line="84" pos:column="25"/></name> <init pos:line="84" pos:column="26">= <expr><operator pos:line="84" pos:column="28">*<pos:position pos:line="84" pos:column="29"/></operator><name pos:line="84" pos:column="29">equals<pos:position pos:line="84" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="84" pos:column="36"/></decl_stmt>

                <if pos:line="86" pos:column="17">if <condition pos:line="86" pos:column="20">(<expr><name pos:line="86" pos:column="21">sep<pos:position pos:line="86" pos:column="24"/></name> <operator pos:line="86" pos:column="25">!=<pos:position pos:line="86" pos:column="27"/></operator> <literal type="char" pos:line="86" pos:column="28">'\''<pos:position pos:line="86" pos:column="32"/></literal> <operator pos:line="86" pos:column="33">&amp;&amp;<pos:position pos:line="86" pos:column="43"/></operator> <name pos:line="86" pos:column="36">sep<pos:position pos:line="86" pos:column="39"/></name> <operator pos:line="86" pos:column="40">!=<pos:position pos:line="86" pos:column="42"/></operator> <literal type="char" pos:line="86" pos:column="43">'"'<pos:position pos:line="86" pos:column="46"/></literal></expr>)<pos:position pos:line="86" pos:column="47"/></condition><then pos:line="86" pos:column="47"> <block pos:line="86" pos:column="48">{
                    <expr_stmt><expr><name pos:line="87" pos:column="21">error<pos:position pos:line="87" pos:column="26"/></name> <operator pos:line="87" pos:column="27">=<pos:position pos:line="87" pos:column="28"/></operator> <literal type="string" pos:line="87" pos:column="29">"Unknown identifier ("<pos:position pos:line="87" pos:column="51"/></literal></expr>;<pos:position pos:line="87" pos:column="52"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="88" pos:column="21">error<pos:position pos:line="88" pos:column="26"/></name><operator pos:line="88" pos:column="26">.<pos:position pos:line="88" pos:column="27"/></operator><name pos:line="88" pos:column="27">append<pos:position pos:line="88" pos:column="33"/></name></name> <argument_list pos:line="88" pos:column="34">(<argument><expr><name pos:line="88" pos:column="35">sep<pos:position pos:line="88" pos:column="38"/></name></expr></argument>)<pos:position pos:line="88" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="40"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="89" pos:column="21">error<pos:position pos:line="89" pos:column="26"/></name><operator pos:line="89" pos:column="26">.<pos:position pos:line="89" pos:column="27"/></operator><name pos:line="89" pos:column="27">append<pos:position pos:line="89" pos:column="33"/></name></name> <argument_list pos:line="89" pos:column="34">(<argument><expr><literal type="string" pos:line="89" pos:column="35">")"<pos:position pos:line="89" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="40"/></expr_stmt>
                    <return pos:line="90" pos:column="21">return <expr><literal type="boolean" pos:line="90" pos:column="28">false<pos:position pos:line="90" pos:column="33"/></literal></expr>;<pos:position pos:line="90" pos:column="34"/></return>
                }<pos:position pos:line="91" pos:column="18"/></block></then></if>

                <decl_stmt><decl><type><name pos:line="93" pos:column="17">char<pos:position pos:line="93" pos:column="21"/></name> <modifier pos:line="93" pos:column="22">*<pos:position pos:line="93" pos:column="23"/></modifier></type><name pos:line="93" pos:column="23">value<pos:position pos:line="93" pos:column="28"/></name> <init pos:line="93" pos:column="29">= <expr><name pos:line="93" pos:column="31">equals<pos:position pos:line="93" pos:column="37"/></name> <operator pos:line="93" pos:column="38">+<pos:position pos:line="93" pos:column="39"/></operator> <literal type="number" pos:line="93" pos:column="40">1<pos:position pos:line="93" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="93" pos:column="42"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="94" pos:column="17">char<pos:position pos:line="94" pos:column="21"/></name> <modifier pos:line="94" pos:column="22">*<pos:position pos:line="94" pos:column="23"/></modifier></type><name pos:line="94" pos:column="23">end<pos:position pos:line="94" pos:column="26"/></name> <init pos:line="94" pos:column="27">= <expr><call><name pos:line="94" pos:column="29">strchr<pos:position pos:line="94" pos:column="35"/></name><argument_list pos:line="94" pos:column="35">(<argument><expr><name pos:line="94" pos:column="36">value<pos:position pos:line="94" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="43">sep<pos:position pos:line="94" pos:column="46"/></name></expr></argument>)<pos:position pos:line="94" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="94" pos:column="48"/></decl_stmt>

                <if pos:line="96" pos:column="17">if <condition pos:line="96" pos:column="20">(<expr><operator pos:line="96" pos:column="21">!<pos:position pos:line="96" pos:column="22"/></operator><name pos:line="96" pos:column="22">end<pos:position pos:line="96" pos:column="25"/></name></expr>)<pos:position pos:line="96" pos:column="26"/></condition><then pos:line="96" pos:column="26"> <block pos:line="96" pos:column="27">{
                    <expr_stmt><expr><name pos:line="97" pos:column="21">error<pos:position pos:line="97" pos:column="26"/></name> <operator pos:line="97" pos:column="27">=<pos:position pos:line="97" pos:column="28"/></operator> <literal type="string" pos:line="97" pos:column="29">"Missing attribute ending separator ("<pos:position pos:line="97" pos:column="67"/></literal></expr>;<pos:position pos:line="97" pos:column="68"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="98" pos:column="21">error<pos:position pos:line="98" pos:column="26"/></name><operator pos:line="98" pos:column="26">.<pos:position pos:line="98" pos:column="27"/></operator><name pos:line="98" pos:column="27">append<pos:position pos:line="98" pos:column="33"/></name></name><argument_list pos:line="98" pos:column="33">(<argument><expr><name pos:line="98" pos:column="34">sep<pos:position pos:line="98" pos:column="37"/></name></expr></argument>)<pos:position pos:line="98" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="39"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="99" pos:column="21">error<pos:position pos:line="99" pos:column="26"/></name><operator pos:line="99" pos:column="26">.<pos:position pos:line="99" pos:column="27"/></operator><name pos:line="99" pos:column="27">append<pos:position pos:line="99" pos:column="33"/></name></name><argument_list pos:line="99" pos:column="33">(<argument><expr><literal type="string" pos:line="99" pos:column="34">")"<pos:position pos:line="99" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="39"/></expr_stmt>
                    <return pos:line="100" pos:column="21">return <expr><literal type="boolean" pos:line="100" pos:column="28">false<pos:position pos:line="100" pos:column="33"/></literal></expr>;<pos:position pos:line="100" pos:column="34"/></return>
                }<pos:position pos:line="101" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name><name pos:line="102" pos:column="17">attributes<pos:position pos:line="102" pos:column="27"/></name><operator pos:line="102" pos:column="27">.<pos:position pos:line="102" pos:column="28"/></operator><name pos:line="102" pos:column="28">push_back<pos:position pos:line="102" pos:column="37"/></name></name><argument_list pos:line="102" pos:column="37">(<argument><expr><name pos:line="102" pos:column="38">value<pos:position pos:line="102" pos:column="43"/></name></expr></argument>)<pos:position pos:line="102" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="103" pos:column="17">*<pos:position pos:line="103" pos:column="18"/></operator><name pos:line="103" pos:column="18">end<pos:position pos:line="103" pos:column="21"/></name> <operator pos:line="103" pos:column="22">=<pos:position pos:line="103" pos:column="23"/></operator> <literal type="char" pos:line="103" pos:column="24">'\0'<pos:position pos:line="103" pos:column="28"/></literal></expr>;<pos:position pos:line="103" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><name pos:line="104" pos:column="17">attribute<pos:position pos:line="104" pos:column="26"/></name> <operator pos:line="104" pos:column="27">=<pos:position pos:line="104" pos:column="28"/></operator> <name pos:line="104" pos:column="29">end<pos:position pos:line="104" pos:column="32"/></name> <operator pos:line="104" pos:column="33">+<pos:position pos:line="104" pos:column="34"/></operator> <literal type="number" pos:line="104" pos:column="35">1<pos:position pos:line="104" pos:column="36"/></literal></expr>;<pos:position pos:line="104" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="105" pos:column="14"/></block></while>

            <expr_stmt><expr><call><name><name pos:line="107" pos:column="13">theClient<pos:position pos:line="107" pos:column="22"/></name><operator pos:line="107" pos:column="22">-&gt;<pos:position pos:line="107" pos:column="27"/></operator><name pos:line="107" pos:column="24">start<pos:position pos:line="107" pos:column="29"/></name></name> <argument_list pos:line="107" pos:column="30">(<argument><expr><name pos:line="107" pos:column="31">tag<pos:position pos:line="107" pos:column="34"/></name> <operator pos:line="107" pos:column="35">+<pos:position pos:line="107" pos:column="36"/></operator> <literal type="number" pos:line="107" pos:column="37">1<pos:position pos:line="107" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="107" pos:column="40">(<pos:position pos:line="107" pos:column="41"/></operator><specifier pos:line="107" pos:column="41">const<pos:position pos:line="107" pos:column="46"/></specifier> <name pos:line="107" pos:column="47">char<pos:position pos:line="107" pos:column="51"/></name> <operator pos:line="107" pos:column="52">*<pos:position pos:line="107" pos:column="53"/></operator><operator pos:line="107" pos:column="53">*<pos:position pos:line="107" pos:column="54"/></operator><operator pos:line="107" pos:column="54">)<pos:position pos:line="107" pos:column="55"/></operator><name><name pos:line="107" pos:column="55">attributes<pos:position pos:line="107" pos:column="65"/></name><operator pos:line="107" pos:column="65">.<pos:position pos:line="107" pos:column="66"/></operator><name pos:line="107" pos:column="66">items<pos:position pos:line="107" pos:column="71"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="107" pos:column="73">attributes<pos:position pos:line="107" pos:column="83"/></name><operator pos:line="107" pos:column="83">.<pos:position pos:line="107" pos:column="84"/></operator><name pos:line="107" pos:column="84">size<pos:position pos:line="107" pos:column="88"/></name></name><argument_list pos:line="107" pos:column="88">()<pos:position pos:line="107" pos:column="90"/></argument_list></call> <operator pos:line="107" pos:column="91">&gt;&gt;<pos:position pos:line="107" pos:column="96"/></operator> <literal type="number" pos:line="107" pos:column="94">1<pos:position pos:line="107" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="97"/></expr_stmt>
            <comment type="block" pos:line="108" pos:column="13">/* TODO: attributes */</comment>

            <if pos:line="110" pos:column="13">if <condition pos:line="110" pos:column="16">(<expr><operator pos:line="110" pos:column="17">*<pos:position pos:line="110" pos:column="18"/></operator><operator pos:line="110" pos:column="18">(<pos:position pos:line="110" pos:column="19"/></operator><name pos:line="110" pos:column="19">tagEnd<pos:position pos:line="110" pos:column="25"/></name> <operator pos:line="110" pos:column="26">-<pos:position pos:line="110" pos:column="27"/></operator> <literal type="number" pos:line="110" pos:column="28">1<pos:position pos:line="110" pos:column="29"/></literal><operator pos:line="110" pos:column="29">)<pos:position pos:line="110" pos:column="30"/></operator> <operator pos:line="110" pos:column="31">==<pos:position pos:line="110" pos:column="33"/></operator> <literal type="char" pos:line="110" pos:column="34">'/'<pos:position pos:line="110" pos:column="37"/></literal></expr>)<pos:position pos:line="110" pos:column="38"/></condition><then pos:line="110" pos:column="38">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="111" pos:column="17">theClient<pos:position pos:line="111" pos:column="26"/></name><operator pos:line="111" pos:column="26">-&gt;<pos:position pos:line="111" pos:column="31"/></operator><name pos:line="111" pos:column="28">end<pos:position pos:line="111" pos:column="31"/></name></name> <argument_list pos:line="111" pos:column="32">(<argument><expr><name pos:line="111" pos:column="33">tag<pos:position pos:line="111" pos:column="36"/></name> <operator pos:line="111" pos:column="37">+<pos:position pos:line="111" pos:column="38"/></operator> <literal type="number" pos:line="111" pos:column="39">1<pos:position pos:line="111" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="42"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name pos:line="113" pos:column="13">remainingCount<pos:position pos:line="113" pos:column="27"/></name> <operator pos:line="113" pos:column="28">-=<pos:position pos:line="113" pos:column="30"/></operator> <name pos:line="113" pos:column="31">tagEnd<pos:position pos:line="113" pos:column="37"/></name> <operator pos:line="113" pos:column="38">-<pos:position pos:line="113" pos:column="39"/></operator> <name pos:line="113" pos:column="40">currentPos<pos:position pos:line="113" pos:column="50"/></name> <operator pos:line="113" pos:column="51">+<pos:position pos:line="113" pos:column="52"/></operator> <literal type="number" pos:line="113" pos:column="53">1<pos:position pos:line="113" pos:column="54"/></literal></expr>;<pos:position pos:line="113" pos:column="55"/></expr_stmt>

            <expr_stmt><expr><name pos:line="115" pos:column="13">currentPos<pos:position pos:line="115" pos:column="23"/></name> <operator pos:line="115" pos:column="24">=<pos:position pos:line="115" pos:column="25"/></operator> <name pos:line="115" pos:column="26">tagEnd<pos:position pos:line="115" pos:column="32"/></name> <operator pos:line="115" pos:column="33">+<pos:position pos:line="115" pos:column="34"/></operator> <literal type="number" pos:line="115" pos:column="35">1<pos:position pos:line="115" pos:column="36"/></literal></expr>;<pos:position pos:line="115" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="116" pos:column="10"/></block>

        <break pos:line="118" pos:column="9">break;<pos:position pos:line="118" pos:column="15"/></break>

        <case pos:line="120" pos:column="9">case <expr><name pos:line="120" pos:column="14">ESIENDTAG<pos:position pos:line="120" pos:column="23"/></name></expr>:<pos:position pos:line="120" pos:column="24"/></case> <block pos:line="120" pos:column="25">{
            <if pos:line="121" pos:column="13">if <condition pos:line="121" pos:column="16">(<expr><operator pos:line="121" pos:column="17">!<pos:position pos:line="121" pos:column="18"/></operator><name pos:line="121" pos:column="18">openESITags<pos:position pos:line="121" pos:column="29"/></name></expr>)<pos:position pos:line="121" pos:column="30"/></condition><then pos:line="121" pos:column="30">
                <block type="pseudo"><return pos:line="122" pos:column="17">return <expr><literal type="boolean" pos:line="122" pos:column="24">false<pos:position pos:line="122" pos:column="29"/></literal></expr>;<pos:position pos:line="122" pos:column="30"/></return></block></then></if>

            <decl_stmt><decl><type><name pos:line="124" pos:column="13">char<pos:position pos:line="124" pos:column="17"/></name> <specifier pos:line="124" pos:column="18">const<pos:position pos:line="124" pos:column="23"/></specifier> <modifier pos:line="124" pos:column="24">*<pos:position pos:line="124" pos:column="25"/></modifier></type><name pos:line="124" pos:column="25">tagEnd<pos:position pos:line="124" pos:column="31"/></name> <init pos:line="124" pos:column="32">= <expr><call><name pos:line="124" pos:column="34">strchr<pos:position pos:line="124" pos:column="40"/></name><argument_list pos:line="124" pos:column="40">(<argument><expr><name pos:line="124" pos:column="41">tag<pos:position pos:line="124" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="124" pos:column="46">'&gt;'<pos:position pos:line="124" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="124" pos:column="51"/></decl_stmt>

            <if pos:line="126" pos:column="13">if <condition pos:line="126" pos:column="16">(<expr><operator pos:line="126" pos:column="17">!<pos:position pos:line="126" pos:column="18"/></operator><name pos:line="126" pos:column="18">tagEnd<pos:position pos:line="126" pos:column="24"/></name></expr>)<pos:position pos:line="126" pos:column="25"/></condition><then pos:line="126" pos:column="25">
                <block type="pseudo"><return pos:line="127" pos:column="17">return <expr><literal type="boolean" pos:line="127" pos:column="24">false<pos:position pos:line="127" pos:column="29"/></literal></expr>;<pos:position pos:line="127" pos:column="30"/></return></block></then></if>

            <if pos:line="129" pos:column="13">if <condition pos:line="129" pos:column="16">(<expr><name pos:line="129" pos:column="17">tagEnd<pos:position pos:line="129" pos:column="23"/></name> <operator pos:line="129" pos:column="24">-<pos:position pos:line="129" pos:column="25"/></operator> <name pos:line="129" pos:column="26">tag<pos:position pos:line="129" pos:column="29"/></name> <operator pos:line="129" pos:column="30">&gt;<pos:position pos:line="129" pos:column="34"/></operator> <operator pos:line="129" pos:column="32">(<pos:position pos:line="129" pos:column="33"/></operator><name pos:line="129" pos:column="33">ssize_t<pos:position pos:line="129" pos:column="40"/></name><operator pos:line="129" pos:column="40">)<pos:position pos:line="129" pos:column="41"/></operator><name pos:line="129" pos:column="41">remainingCount<pos:position pos:line="129" pos:column="55"/></name></expr>)<pos:position pos:line="129" pos:column="56"/></condition><then pos:line="129" pos:column="56">
                <block type="pseudo"><return pos:line="130" pos:column="17">return <expr><literal type="boolean" pos:line="130" pos:column="24">false<pos:position pos:line="130" pos:column="29"/></literal></expr>;<pos:position pos:line="130" pos:column="30"/></return></block></then></if>

            <decl_stmt><decl><type><name pos:line="132" pos:column="13">char<pos:position pos:line="132" pos:column="17"/></name> <modifier pos:line="132" pos:column="18">*<pos:position pos:line="132" pos:column="19"/></modifier></type> <name pos:line="132" pos:column="20">endofName<pos:position pos:line="132" pos:column="29"/></name> <init pos:line="132" pos:column="30">= <expr><call><name pos:line="132" pos:column="32">strpbrk<pos:position pos:line="132" pos:column="39"/></name><argument_list pos:line="132" pos:column="39">(<argument><expr><cast type="const" pos:line="132" pos:column="40">const_cast<argument_list type="generic" pos:line="132" pos:column="50">&lt;<argument><expr><name pos:line="132" pos:column="51">char<pos:position pos:line="132" pos:column="55"/></name> <operator pos:line="132" pos:column="56">*<pos:position pos:line="132" pos:column="57"/></operator></expr></argument>&gt;<pos:position pos:line="132" pos:column="61"/></argument_list><argument_list pos:line="132" pos:column="58">(<argument><expr><name pos:line="132" pos:column="59">tag<pos:position pos:line="132" pos:column="62"/></name></expr></argument>)<pos:position pos:line="132" pos:column="63"/></argument_list></cast></expr></argument>, <argument><expr><name pos:line="132" pos:column="65">w_space<pos:position pos:line="132" pos:column="72"/></name></expr></argument>)<pos:position pos:line="132" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="132" pos:column="74"/></decl_stmt>

            <if pos:line="134" pos:column="13">if <condition pos:line="134" pos:column="16">(<expr><name pos:line="134" pos:column="17">endofName<pos:position pos:line="134" pos:column="26"/></name> <operator pos:line="134" pos:column="27">&gt;<pos:position pos:line="134" pos:column="31"/></operator> <name pos:line="134" pos:column="29">tagEnd<pos:position pos:line="134" pos:column="35"/></name></expr>)<pos:position pos:line="134" pos:column="36"/></condition><then pos:line="134" pos:column="36">
                <block type="pseudo"><expr_stmt><expr><name pos:line="135" pos:column="17">endofName<pos:position pos:line="135" pos:column="26"/></name> <operator pos:line="135" pos:column="27">=<pos:position pos:line="135" pos:column="28"/></operator> <cast type="const" pos:line="135" pos:column="29">const_cast<argument_list type="generic" pos:line="135" pos:column="39">&lt;<argument><expr><name pos:line="135" pos:column="40">char<pos:position pos:line="135" pos:column="44"/></name> <operator pos:line="135" pos:column="45">*<pos:position pos:line="135" pos:column="46"/></operator></expr></argument>&gt;<pos:position pos:line="135" pos:column="50"/></argument_list><argument_list pos:line="135" pos:column="47">(<argument><expr><name pos:line="135" pos:column="48">tagEnd<pos:position pos:line="135" pos:column="54"/></name></expr></argument>)<pos:position pos:line="135" pos:column="55"/></argument_list></cast></expr>;<pos:position pos:line="135" pos:column="56"/></expr_stmt></block></then></if>

            <expr_stmt><expr><operator pos:line="137" pos:column="13">*<pos:position pos:line="137" pos:column="14"/></operator><name pos:line="137" pos:column="14">endofName<pos:position pos:line="137" pos:column="23"/></name> <operator pos:line="137" pos:column="24">=<pos:position pos:line="137" pos:column="25"/></operator> <literal type="char" pos:line="137" pos:column="26">'\0'<pos:position pos:line="137" pos:column="30"/></literal></expr>;<pos:position pos:line="137" pos:column="31"/></expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="139" pos:column="13">theClient<pos:position pos:line="139" pos:column="22"/></name><operator pos:line="139" pos:column="22">-&gt;<pos:position pos:line="139" pos:column="27"/></operator><name pos:line="139" pos:column="24">end<pos:position pos:line="139" pos:column="27"/></name></name> <argument_list pos:line="139" pos:column="28">(<argument><expr><name pos:line="139" pos:column="29">tag<pos:position pos:line="139" pos:column="32"/></name> <operator pos:line="139" pos:column="33">+<pos:position pos:line="139" pos:column="34"/></operator> <literal type="number" pos:line="139" pos:column="35">2<pos:position pos:line="139" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="139" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="38"/></expr_stmt>

            <expr_stmt><expr><operator pos:line="141" pos:column="13">--<pos:position pos:line="141" pos:column="15"/></operator><name pos:line="141" pos:column="15">openESITags<pos:position pos:line="141" pos:column="26"/></name></expr>;<pos:position pos:line="141" pos:column="27"/></expr_stmt>

            <expr_stmt><expr><name pos:line="143" pos:column="13">remainingCount<pos:position pos:line="143" pos:column="27"/></name> <operator pos:line="143" pos:column="28">-=<pos:position pos:line="143" pos:column="30"/></operator> <name pos:line="143" pos:column="31">tagEnd<pos:position pos:line="143" pos:column="37"/></name> <operator pos:line="143" pos:column="38">-<pos:position pos:line="143" pos:column="39"/></operator> <name pos:line="143" pos:column="40">currentPos<pos:position pos:line="143" pos:column="50"/></name> <operator pos:line="143" pos:column="51">+<pos:position pos:line="143" pos:column="52"/></operator> <literal type="number" pos:line="143" pos:column="53">1<pos:position pos:line="143" pos:column="54"/></literal></expr>;<pos:position pos:line="143" pos:column="55"/></expr_stmt>

            <expr_stmt><expr><name pos:line="145" pos:column="13">currentPos<pos:position pos:line="145" pos:column="23"/></name> <operator pos:line="145" pos:column="24">=<pos:position pos:line="145" pos:column="25"/></operator> <name pos:line="145" pos:column="26">tagEnd<pos:position pos:line="145" pos:column="32"/></name> <operator pos:line="145" pos:column="33">+<pos:position pos:line="145" pos:column="34"/></operator> <literal type="number" pos:line="145" pos:column="35">1<pos:position pos:line="145" pos:column="36"/></literal></expr>;<pos:position pos:line="145" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="146" pos:column="10"/></block>

        <break pos:line="148" pos:column="9">break;<pos:position pos:line="148" pos:column="15"/></break>

        <case pos:line="150" pos:column="9">case <expr><name pos:line="150" pos:column="14">ESICOMMENT<pos:position pos:line="150" pos:column="24"/></name></expr>:<pos:position pos:line="150" pos:column="25"/></case> <block pos:line="150" pos:column="26">{
            <comment type="block" pos:line="151" pos:column="13">/* Further optimisation potential:
             * 1) recognize end comments for esi and don't callback on
             * comments.
             * 2) provide the comment length to the caller.
             */</comment>
            <comment type="block" pos:line="156" pos:column="13">/* Comments must not be nested, without CDATA
             * and we don't support CDATA
             */</comment>
            <decl_stmt><decl><type><name pos:line="159" pos:column="13">char<pos:position pos:line="159" pos:column="17"/></name> <modifier pos:line="159" pos:column="18">*<pos:position pos:line="159" pos:column="19"/></modifier></type><name pos:line="159" pos:column="19">commentEnd<pos:position pos:line="159" pos:column="29"/></name> <init pos:line="159" pos:column="30">= <expr><call><name pos:line="159" pos:column="32">strstr<pos:position pos:line="159" pos:column="38"/></name> <argument_list pos:line="159" pos:column="39">(<argument><expr><cast type="const" pos:line="159" pos:column="40">const_cast<argument_list type="generic" pos:line="159" pos:column="50">&lt;<argument><expr><name pos:line="159" pos:column="51">char<pos:position pos:line="159" pos:column="55"/></name> <operator pos:line="159" pos:column="56">*<pos:position pos:line="159" pos:column="57"/></operator></expr></argument>&gt;<pos:position pos:line="159" pos:column="61"/></argument_list><argument_list pos:line="159" pos:column="58">(<argument><expr><name pos:line="159" pos:column="59">tag<pos:position pos:line="159" pos:column="62"/></name></expr></argument>)<pos:position pos:line="159" pos:column="63"/></argument_list></cast></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="65">"--&gt;"<pos:position pos:line="159" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="159" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="159" pos:column="72"/></decl_stmt>

            <if pos:line="161" pos:column="13">if <condition pos:line="161" pos:column="16">(<expr><operator pos:line="161" pos:column="17">!<pos:position pos:line="161" pos:column="18"/></operator><name pos:line="161" pos:column="18">commentEnd<pos:position pos:line="161" pos:column="28"/></name></expr>)<pos:position pos:line="161" pos:column="29"/></condition><then pos:line="161" pos:column="29"> <block pos:line="161" pos:column="30">{
                <expr_stmt><expr><name pos:line="162" pos:column="17">error<pos:position pos:line="162" pos:column="22"/></name> <operator pos:line="162" pos:column="23">=<pos:position pos:line="162" pos:column="24"/></operator> <literal type="string" pos:line="162" pos:column="25">"missing end of comment"<pos:position pos:line="162" pos:column="49"/></literal></expr>;<pos:position pos:line="162" pos:column="50"/></expr_stmt>
                <return pos:line="163" pos:column="17">return <expr><literal type="boolean" pos:line="163" pos:column="24">false<pos:position pos:line="163" pos:column="29"/></literal></expr>;<pos:position pos:line="163" pos:column="30"/></return>
            }<pos:position pos:line="164" pos:column="14"/></block></then></if>

            <if pos:line="166" pos:column="13">if <condition pos:line="166" pos:column="16">(<expr><name pos:line="166" pos:column="17">commentEnd<pos:position pos:line="166" pos:column="27"/></name> <operator pos:line="166" pos:column="28">-<pos:position pos:line="166" pos:column="29"/></operator> <name pos:line="166" pos:column="30">tag<pos:position pos:line="166" pos:column="33"/></name> <operator pos:line="166" pos:column="34">&gt;<pos:position pos:line="166" pos:column="38"/></operator> <operator pos:line="166" pos:column="36">(<pos:position pos:line="166" pos:column="37"/></operator><name pos:line="166" pos:column="37">ssize_t<pos:position pos:line="166" pos:column="44"/></name><operator pos:line="166" pos:column="44">)<pos:position pos:line="166" pos:column="45"/></operator><name pos:line="166" pos:column="45">remainingCount<pos:position pos:line="166" pos:column="59"/></name></expr>)<pos:position pos:line="166" pos:column="60"/></condition><then pos:line="166" pos:column="60"> <block pos:line="166" pos:column="61">{
                <expr_stmt><expr><name pos:line="167" pos:column="17">error<pos:position pos:line="167" pos:column="22"/></name> <operator pos:line="167" pos:column="23">=<pos:position pos:line="167" pos:column="24"/></operator> <literal type="string" pos:line="167" pos:column="25">"comment ends beyond parse buffer"<pos:position pos:line="167" pos:column="59"/></literal></expr>;<pos:position pos:line="167" pos:column="60"/></expr_stmt>
                <return pos:line="168" pos:column="17">return <expr><literal type="boolean" pos:line="168" pos:column="24">false<pos:position pos:line="168" pos:column="29"/></literal></expr>;<pos:position pos:line="168" pos:column="30"/></return>
            }<pos:position pos:line="169" pos:column="14"/></block></then></if>

            <expr_stmt><expr><operator pos:line="171" pos:column="13">*<pos:position pos:line="171" pos:column="14"/></operator><name pos:line="171" pos:column="14">commentEnd<pos:position pos:line="171" pos:column="24"/></name> <operator pos:line="171" pos:column="25">=<pos:position pos:line="171" pos:column="26"/></operator> <literal type="char" pos:line="171" pos:column="27">'\0'<pos:position pos:line="171" pos:column="31"/></literal></expr>;<pos:position pos:line="171" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="172" pos:column="13">theClient<pos:position pos:line="172" pos:column="22"/></name><operator pos:line="172" pos:column="22">-&gt;<pos:position pos:line="172" pos:column="27"/></operator><name pos:line="172" pos:column="24">parserComment<pos:position pos:line="172" pos:column="37"/></name></name> <argument_list pos:line="172" pos:column="38">(<argument><expr><name pos:line="172" pos:column="39">tag<pos:position pos:line="172" pos:column="42"/></name> <operator pos:line="172" pos:column="43">+<pos:position pos:line="172" pos:column="44"/></operator> <literal type="number" pos:line="172" pos:column="45">4<pos:position pos:line="172" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="173" pos:column="13">remainingCount<pos:position pos:line="173" pos:column="27"/></name> <operator pos:line="173" pos:column="28">-=<pos:position pos:line="173" pos:column="30"/></operator> <name pos:line="173" pos:column="31">commentEnd<pos:position pos:line="173" pos:column="41"/></name> <operator pos:line="173" pos:column="42">-<pos:position pos:line="173" pos:column="43"/></operator> <name pos:line="173" pos:column="44">currentPos<pos:position pos:line="173" pos:column="54"/></name> <operator pos:line="173" pos:column="55">+<pos:position pos:line="173" pos:column="56"/></operator> <literal type="number" pos:line="173" pos:column="57">3<pos:position pos:line="173" pos:column="58"/></literal></expr>;<pos:position pos:line="173" pos:column="59"/></expr_stmt>
            <expr_stmt><expr><name pos:line="174" pos:column="13">currentPos<pos:position pos:line="174" pos:column="23"/></name> <operator pos:line="174" pos:column="24">=<pos:position pos:line="174" pos:column="25"/></operator> <name pos:line="174" pos:column="26">commentEnd<pos:position pos:line="174" pos:column="36"/></name> <operator pos:line="174" pos:column="37">+<pos:position pos:line="174" pos:column="38"/></operator> <literal type="number" pos:line="174" pos:column="39">3<pos:position pos:line="174" pos:column="40"/></literal></expr>;<pos:position pos:line="174" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="175" pos:column="10"/></block>

        <break pos:line="177" pos:column="9">break;<pos:position pos:line="177" pos:column="15"/></break>
        <break pos:line="178" pos:column="9">break;<pos:position pos:line="178" pos:column="15"/></break>

        <default pos:line="180" pos:column="9">default:<pos:position pos:line="180" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="181" pos:column="13">fatal<pos:position pos:line="181" pos:column="18"/></name> <argument_list pos:line="181" pos:column="19">(<argument><expr><literal type="string" pos:line="181" pos:column="20">"unknown ESI tag type found"<pos:position pos:line="181" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="182" pos:column="10"/></block></switch><empty_stmt pos:line="182" pos:column="10">;<pos:position pos:line="182" pos:column="11"/></empty_stmt>

        <comment type="block" pos:line="184" pos:column="9">/*
         * Find next esi tag (open or closing) or comment
         * send tag, or full comment text
         * rinse
         */</comment>
    }<pos:position pos:line="189" pos:column="6"/></block></while>

    <if pos:line="191" pos:column="5">if <condition pos:line="191" pos:column="8">(<expr><name pos:line="191" pos:column="9">remainingCount<pos:position pos:line="191" pos:column="23"/></name></expr>)<pos:position pos:line="191" pos:column="24"/></condition><then pos:line="191" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="192" pos:column="9">theClient<pos:position pos:line="192" pos:column="18"/></name><operator pos:line="192" pos:column="18">-&gt;<pos:position pos:line="192" pos:column="23"/></operator><name pos:line="192" pos:column="20">parserDefault<pos:position pos:line="192" pos:column="33"/></name></name> <argument_list pos:line="192" pos:column="34">(<argument><expr><name pos:line="192" pos:column="35">currentPos<pos:position pos:line="192" pos:column="45"/></name></expr></argument>,<argument><expr><name pos:line="192" pos:column="46">remainingCount<pos:position pos:line="192" pos:column="60"/></name></expr></argument>)<pos:position pos:line="192" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="62"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="194" pos:column="5">debugs<pos:position pos:line="194" pos:column="11"/></name><argument_list pos:line="194" pos:column="11">(<argument><expr><literal type="number" pos:line="194" pos:column="12">86<pos:position pos:line="194" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="194" pos:column="16">5<pos:position pos:line="194" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="194" pos:column="19">"ESICustomParser::parse: Finished parsing, will return "<pos:position pos:line="194" pos:column="75"/></literal> <operator pos:line="194" pos:column="76">&lt;&lt;<pos:position pos:line="194" pos:column="84"/></operator> <operator pos:line="194" pos:column="79">!<pos:position pos:line="194" pos:column="80"/></operator><name pos:line="194" pos:column="80">openESITags<pos:position pos:line="194" pos:column="91"/></name></expr></argument>)<pos:position pos:line="194" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="93"/></expr_stmt>

    <if pos:line="196" pos:column="5">if <condition pos:line="196" pos:column="8">(<expr><name pos:line="196" pos:column="9">openESITags<pos:position pos:line="196" pos:column="20"/></name></expr>)<pos:position pos:line="196" pos:column="21"/></condition><then pos:line="196" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><name pos:line="197" pos:column="9">error<pos:position pos:line="197" pos:column="14"/></name> <operator pos:line="197" pos:column="15">=<pos:position pos:line="197" pos:column="16"/></operator> <literal type="string" pos:line="197" pos:column="17">"ESI Tags still open"<pos:position pos:line="197" pos:column="38"/></literal></expr>;<pos:position pos:line="197" pos:column="39"/></expr_stmt></block></then></if>

    <return pos:line="199" pos:column="5">return <expr><operator pos:line="199" pos:column="12">!<pos:position pos:line="199" pos:column="13"/></operator><name pos:line="199" pos:column="13">openESITags<pos:position pos:line="199" pos:column="24"/></name></expr>;<pos:position pos:line="199" pos:column="25"/></return>
}<pos:position pos:line="200" pos:column="2"/></block></function></unit>

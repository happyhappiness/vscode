<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_399_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">authenticate<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">int<pos:position pos:line="2" pos:column="17"/></name></type> <name pos:line="2" pos:column="18">socket_fd<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">char<pos:position pos:line="2" pos:column="39"/></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">username<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">passwd<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">AUTH_HDR<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">auth<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">short<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">total_length<pos:position pos:line="5" pos:column="32"/></name></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">u_char<pos:position pos:line="6" pos:column="11"/></name> <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier></type><name pos:line="6" pos:column="13">ptr<pos:position pos:line="6" pos:column="16"/></name></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">length<pos:position pos:line="7" pos:column="15"/></name></decl>;<pos:position pos:line="7" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">passbuf<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><name pos:line="8" pos:column="18">MAXPASS<pos:position pos:line="8" pos:column="25"/></name></expr>]<pos:position pos:line="8" pos:column="26"/></index></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">u_char<pos:position pos:line="9" pos:column="11"/></name></type> <name><name pos:line="9" pos:column="12">md5buf<pos:position pos:line="9" pos:column="18"/></name><index pos:line="9" pos:column="18">[<expr><literal type="number" pos:line="9" pos:column="19">256<pos:position pos:line="9" pos:column="22"/></literal></expr>]<pos:position pos:line="9" pos:column="23"/></index></name></decl>;<pos:position pos:line="9" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">secretlen<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">u_char<pos:position pos:line="11" pos:column="11"/></name></type> <name><name pos:line="11" pos:column="12">cbc<pos:position pos:line="11" pos:column="15"/></name><index pos:line="11" pos:column="15">[<expr><name pos:line="11" pos:column="16">AUTH_VECTOR_LEN<pos:position pos:line="11" pos:column="31"/></name></expr>]<pos:position pos:line="11" pos:column="32"/></index></name></decl>;<pos:position pos:line="11" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">i<pos:position pos:line="12" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="12" pos:column="12">j<pos:position pos:line="12" pos:column="13"/></name></decl>;<pos:position pos:line="12" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">u_int32_t<pos:position pos:line="13" pos:column="14"/></name></type> <name pos:line="13" pos:column="15">ui<pos:position pos:line="13" pos:column="17"/></name></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="14" pos:column="5">struct<pos:position pos:line="14" pos:column="11"/></name> <name pos:line="14" pos:column="12">sockaddr_in<pos:position pos:line="14" pos:column="23"/></name></name></type> <name pos:line="14" pos:column="24">saremote<pos:position pos:line="14" pos:column="32"/></name></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">fd_set<pos:position pos:line="15" pos:column="11"/></name></type> <name pos:line="15" pos:column="12">readfds<pos:position pos:line="15" pos:column="19"/></name></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">socklen_t<pos:position pos:line="16" pos:column="14"/></name></type> <name pos:line="16" pos:column="15">salen<pos:position pos:line="16" pos:column="20"/></name></decl>;<pos:position pos:line="16" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">retry<pos:position pos:line="17" pos:column="14"/></name> <init pos:line="17" pos:column="15">= <expr><name pos:line="17" pos:column="17">retries<pos:position pos:line="17" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="25"/></decl_stmt>

    <comment type="block" pos:line="19" pos:column="5">/*
     *    Build an authentication request
     */</comment>
    <expr_stmt><expr><name pos:line="22" pos:column="5">auth<pos:position pos:line="22" pos:column="9"/></name> <operator pos:line="22" pos:column="10">=<pos:position pos:line="22" pos:column="11"/></operator> <operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">AUTH_HDR<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">*<pos:position pos:line="22" pos:column="23"/></operator><operator pos:line="22" pos:column="23">)<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">send_buffer<pos:position pos:line="22" pos:column="36"/></name></expr>;<pos:position pos:line="22" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">auth<pos:position pos:line="23" pos:column="9"/></name><operator pos:line="23" pos:column="9">-&gt;<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="11">code<pos:position pos:line="23" pos:column="15"/></name></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <name pos:line="23" pos:column="18">PW_AUTHENTICATION_REQUEST<pos:position pos:line="23" pos:column="43"/></name></expr>;<pos:position pos:line="23" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">auth<pos:position pos:line="24" pos:column="9"/></name><operator pos:line="24" pos:column="9">-&gt;<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="11">id<pos:position pos:line="24" pos:column="13"/></name></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <operator pos:line="24" pos:column="16">++<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">request_id<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">random_vector<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><name pos:line="25" pos:column="19">vector<pos:position pos:line="25" pos:column="25"/></name></expr></argument>)<pos:position pos:line="25" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">memcpy<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name><name pos:line="26" pos:column="12">auth<pos:position pos:line="26" pos:column="16"/></name><operator pos:line="26" pos:column="16">-&gt;<pos:position pos:line="26" pos:column="21"/></operator><name pos:line="26" pos:column="18">vector<pos:position pos:line="26" pos:column="24"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="26">vector<pos:position pos:line="26" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="34">AUTH_VECTOR_LEN<pos:position pos:line="26" pos:column="49"/></name></expr></argument>)<pos:position pos:line="26" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><name pos:line="27" pos:column="5">total_length<pos:position pos:line="27" pos:column="17"/></name> <operator pos:line="27" pos:column="18">=<pos:position pos:line="27" pos:column="19"/></operator> <name pos:line="27" pos:column="20">AUTH_HDR_LEN<pos:position pos:line="27" pos:column="32"/></name></expr>;<pos:position pos:line="27" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="28" pos:column="5">ptr<pos:position pos:line="28" pos:column="8"/></name> <operator pos:line="28" pos:column="9">=<pos:position pos:line="28" pos:column="10"/></operator> <name><name pos:line="28" pos:column="11">auth<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">data<pos:position pos:line="28" pos:column="21"/></name></name></expr>;<pos:position pos:line="28" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="30" pos:column="5">/*
     *    User Name
     */</comment>
    <expr_stmt><expr><operator pos:line="33" pos:column="5">*<pos:position pos:line="33" pos:column="6"/></operator><name pos:line="33" pos:column="6">ptr<pos:position pos:line="33" pos:column="9"/></name><operator pos:line="33" pos:column="9">++<pos:position pos:line="33" pos:column="11"/></operator> <operator pos:line="33" pos:column="12">=<pos:position pos:line="33" pos:column="13"/></operator> <name pos:line="33" pos:column="14">PW_USER_NAME<pos:position pos:line="33" pos:column="26"/></name></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="34" pos:column="5">length<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <call><name pos:line="34" pos:column="14">strlen<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">username<pos:position pos:line="34" pos:column="29"/></name></expr></argument>)<pos:position pos:line="34" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">length<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">&gt;<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="18">MAXPWNAM<pos:position pos:line="35" pos:column="26"/></name></expr>)<pos:position pos:line="35" pos:column="27"/></condition><then pos:line="35" pos:column="27"> <block pos:line="35" pos:column="28">{
        <expr_stmt><expr><name pos:line="36" pos:column="9">length<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <name pos:line="36" pos:column="18">MAXPWNAM<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="38" pos:column="5">*<pos:position pos:line="38" pos:column="6"/></operator><name pos:line="38" pos:column="6">ptr<pos:position pos:line="38" pos:column="9"/></name><operator pos:line="38" pos:column="9">++<pos:position pos:line="38" pos:column="11"/></operator> <operator pos:line="38" pos:column="12">=<pos:position pos:line="38" pos:column="13"/></operator> <name pos:line="38" pos:column="14">length<pos:position pos:line="38" pos:column="20"/></name> <operator pos:line="38" pos:column="21">+<pos:position pos:line="38" pos:column="22"/></operator> <literal type="number" pos:line="38" pos:column="23">2<pos:position pos:line="38" pos:column="24"/></literal></expr>;<pos:position pos:line="38" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">memcpy<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><name pos:line="39" pos:column="12">ptr<pos:position pos:line="39" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="17">username<pos:position pos:line="39" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="27">length<pos:position pos:line="39" pos:column="33"/></name></expr></argument>)<pos:position pos:line="39" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="40" pos:column="5">ptr<pos:position pos:line="40" pos:column="8"/></name> <operator pos:line="40" pos:column="9">+=<pos:position pos:line="40" pos:column="11"/></operator> <name pos:line="40" pos:column="12">length<pos:position pos:line="40" pos:column="18"/></name></expr>;<pos:position pos:line="40" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="41" pos:column="5">total_length<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">+=<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="21">length<pos:position pos:line="41" pos:column="27"/></name> <operator pos:line="41" pos:column="28">+<pos:position pos:line="41" pos:column="29"/></operator> <literal type="number" pos:line="41" pos:column="30">2<pos:position pos:line="41" pos:column="31"/></literal></expr>;<pos:position pos:line="41" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="43" pos:column="5">/*
     *    Password
     */</comment>
    <expr_stmt><expr><name pos:line="46" pos:column="5">length<pos:position pos:line="46" pos:column="11"/></name> <operator pos:line="46" pos:column="12">=<pos:position pos:line="46" pos:column="13"/></operator> <call><name pos:line="46" pos:column="14">strlen<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">passwd<pos:position pos:line="46" pos:column="27"/></name></expr></argument>)<pos:position pos:line="46" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="29"/></expr_stmt>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">length<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">&gt;<pos:position pos:line="47" pos:column="20"/></operator> <name pos:line="47" pos:column="18">MAXPASS<pos:position pos:line="47" pos:column="25"/></name></expr>)<pos:position pos:line="47" pos:column="26"/></condition><then pos:line="47" pos:column="26"> <block pos:line="47" pos:column="27">{
        <expr_stmt><expr><name pos:line="48" pos:column="9">length<pos:position pos:line="48" pos:column="15"/></name> <operator pos:line="48" pos:column="16">=<pos:position pos:line="48" pos:column="17"/></operator> <name pos:line="48" pos:column="18">MAXPASS<pos:position pos:line="48" pos:column="25"/></name></expr>;<pos:position pos:line="48" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">memset<pos:position pos:line="50" pos:column="11"/></name><argument_list pos:line="50" pos:column="11">(<argument><expr><name pos:line="50" pos:column="12">passbuf<pos:position pos:line="50" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="21">0<pos:position pos:line="50" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="24">MAXPASS<pos:position pos:line="50" pos:column="31"/></name></expr></argument>)<pos:position pos:line="50" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="51" pos:column="5">memcpy<pos:position pos:line="51" pos:column="11"/></name><argument_list pos:line="51" pos:column="11">(<argument><expr><name pos:line="51" pos:column="12">passbuf<pos:position pos:line="51" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="21">passwd<pos:position pos:line="51" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="29">length<pos:position pos:line="51" pos:column="35"/></name></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="53" pos:column="5">/*
     * Length is rounded up to multiple of 16,
     * and the password is encoded in blocks of 16
     * with cipher block chaining
     */</comment>
    <expr_stmt><expr><name pos:line="58" pos:column="5">length<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <operator pos:line="58" pos:column="14">(<pos:position pos:line="58" pos:column="15"/></operator><operator pos:line="58" pos:column="15">(<pos:position pos:line="58" pos:column="16"/></operator><name pos:line="58" pos:column="16">length<pos:position pos:line="58" pos:column="22"/></name> <operator pos:line="58" pos:column="23">/<pos:position pos:line="58" pos:column="24"/></operator> <name pos:line="58" pos:column="25">AUTH_VECTOR_LEN<pos:position pos:line="58" pos:column="40"/></name><operator pos:line="58" pos:column="40">)<pos:position pos:line="58" pos:column="41"/></operator> <operator pos:line="58" pos:column="42">+<pos:position pos:line="58" pos:column="43"/></operator> <literal type="number" pos:line="58" pos:column="44">1<pos:position pos:line="58" pos:column="45"/></literal><operator pos:line="58" pos:column="45">)<pos:position pos:line="58" pos:column="46"/></operator> <operator pos:line="58" pos:column="47">*<pos:position pos:line="58" pos:column="48"/></operator> <name pos:line="58" pos:column="49">AUTH_VECTOR_LEN<pos:position pos:line="58" pos:column="64"/></name></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="60" pos:column="5">*<pos:position pos:line="60" pos:column="6"/></operator><name pos:line="60" pos:column="6">ptr<pos:position pos:line="60" pos:column="9"/></name><operator pos:line="60" pos:column="9">++<pos:position pos:line="60" pos:column="11"/></operator> <operator pos:line="60" pos:column="12">=<pos:position pos:line="60" pos:column="13"/></operator> <name pos:line="60" pos:column="14">PW_PASSWORD<pos:position pos:line="60" pos:column="25"/></name></expr>;<pos:position pos:line="60" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="61" pos:column="5">*<pos:position pos:line="61" pos:column="6"/></operator><name pos:line="61" pos:column="6">ptr<pos:position pos:line="61" pos:column="9"/></name><operator pos:line="61" pos:column="9">++<pos:position pos:line="61" pos:column="11"/></operator> <operator pos:line="61" pos:column="12">=<pos:position pos:line="61" pos:column="13"/></operator> <name pos:line="61" pos:column="14">length<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">+<pos:position pos:line="61" pos:column="22"/></operator> <literal type="number" pos:line="61" pos:column="23">2<pos:position pos:line="61" pos:column="24"/></literal></expr>;<pos:position pos:line="61" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><name pos:line="63" pos:column="5">secretlen<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <call><name pos:line="63" pos:column="17">strlen<pos:position pos:line="63" pos:column="23"/></name><argument_list pos:line="63" pos:column="23">(<argument><expr><name pos:line="63" pos:column="24">secretkey<pos:position pos:line="63" pos:column="33"/></name></expr></argument>)<pos:position pos:line="63" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="35"/></expr_stmt>
    <comment type="block" pos:line="64" pos:column="5">/* Set up the Cipher block chain */</comment>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">memcpy<pos:position pos:line="65" pos:column="11"/></name><argument_list pos:line="65" pos:column="11">(<argument><expr><name pos:line="65" pos:column="12">cbc<pos:position pos:line="65" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="17">auth<pos:position pos:line="65" pos:column="21"/></name><operator pos:line="65" pos:column="21">-&gt;<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="23">vector<pos:position pos:line="65" pos:column="29"/></name></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="31">AUTH_VECTOR_LEN<pos:position pos:line="65" pos:column="46"/></name></expr></argument>)<pos:position pos:line="65" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="48"/></expr_stmt>
    <for pos:line="66" pos:column="5">for <control pos:line="66" pos:column="9">(<init><expr><name pos:line="66" pos:column="10">j<pos:position pos:line="66" pos:column="11"/></name> <operator pos:line="66" pos:column="12">=<pos:position pos:line="66" pos:column="13"/></operator> <literal type="number" pos:line="66" pos:column="14">0<pos:position pos:line="66" pos:column="15"/></literal></expr>;<pos:position pos:line="66" pos:column="16"/></init> <condition><expr><name pos:line="66" pos:column="17">j<pos:position pos:line="66" pos:column="18"/></name> <operator pos:line="66" pos:column="19">&lt;<pos:position pos:line="66" pos:column="23"/></operator> <name pos:line="66" pos:column="21">length<pos:position pos:line="66" pos:column="27"/></name></expr>;<pos:position pos:line="66" pos:column="28"/></condition> <incr><expr><name pos:line="66" pos:column="29">j<pos:position pos:line="66" pos:column="30"/></name> <operator pos:line="66" pos:column="31">+=<pos:position pos:line="66" pos:column="33"/></operator> <name pos:line="66" pos:column="34">AUTH_VECTOR_LEN<pos:position pos:line="66" pos:column="49"/></name></expr></incr>)<pos:position pos:line="66" pos:column="50"/></control> <block pos:line="66" pos:column="51">{
        <comment type="block" pos:line="67" pos:column="9">/* Calculate the MD5 Digest */</comment>
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">strcpy<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><operator pos:line="68" pos:column="16">(<pos:position pos:line="68" pos:column="17"/></operator><name pos:line="68" pos:column="17">char<pos:position pos:line="68" pos:column="21"/></name> <operator pos:line="68" pos:column="22">*<pos:position pos:line="68" pos:column="23"/></operator><operator pos:line="68" pos:column="23">)<pos:position pos:line="68" pos:column="24"/></operator> <name pos:line="68" pos:column="25">md5buf<pos:position pos:line="68" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="33">secretkey<pos:position pos:line="68" pos:column="42"/></name></expr></argument>)<pos:position pos:line="68" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">memcpy<pos:position pos:line="69" pos:column="15"/></name><argument_list pos:line="69" pos:column="15">(<argument><expr><name pos:line="69" pos:column="16">md5buf<pos:position pos:line="69" pos:column="22"/></name> <operator pos:line="69" pos:column="23">+<pos:position pos:line="69" pos:column="24"/></operator> <name pos:line="69" pos:column="25">secretlen<pos:position pos:line="69" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="36">cbc<pos:position pos:line="69" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="41">AUTH_VECTOR_LEN<pos:position pos:line="69" pos:column="56"/></name></expr></argument>)<pos:position pos:line="69" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="70" pos:column="9">md5_calc<pos:position pos:line="70" pos:column="17"/></name><argument_list pos:line="70" pos:column="17">(<argument><expr><name pos:line="70" pos:column="18">cbc<pos:position pos:line="70" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="23">md5buf<pos:position pos:line="70" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="31">secretlen<pos:position pos:line="70" pos:column="40"/></name> <operator pos:line="70" pos:column="41">+<pos:position pos:line="70" pos:column="42"/></operator> <name pos:line="70" pos:column="43">AUTH_VECTOR_LEN<pos:position pos:line="70" pos:column="58"/></name></expr></argument>)<pos:position pos:line="70" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="60"/></expr_stmt>

        <comment type="block" pos:line="72" pos:column="9">/* Xor the password into the MD5 digest */</comment>
        <for pos:line="73" pos:column="9">for <control pos:line="73" pos:column="13">(<init><expr><name pos:line="73" pos:column="14">i<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">=<pos:position pos:line="73" pos:column="17"/></operator> <literal type="number" pos:line="73" pos:column="18">0<pos:position pos:line="73" pos:column="19"/></literal></expr>;<pos:position pos:line="73" pos:column="20"/></init> <condition><expr><name pos:line="73" pos:column="21">i<pos:position pos:line="73" pos:column="22"/></name> <operator pos:line="73" pos:column="23">&lt;<pos:position pos:line="73" pos:column="27"/></operator> <name pos:line="73" pos:column="25">AUTH_VECTOR_LEN<pos:position pos:line="73" pos:column="40"/></name></expr>;<pos:position pos:line="73" pos:column="41"/></condition> <incr><expr><name pos:line="73" pos:column="42">i<pos:position pos:line="73" pos:column="43"/></name><operator pos:line="73" pos:column="43">++<pos:position pos:line="73" pos:column="45"/></operator></expr></incr>)<pos:position pos:line="73" pos:column="46"/></control> <block pos:line="73" pos:column="47">{
            <expr_stmt><expr><operator pos:line="74" pos:column="13">*<pos:position pos:line="74" pos:column="14"/></operator><name pos:line="74" pos:column="14">ptr<pos:position pos:line="74" pos:column="17"/></name><operator pos:line="74" pos:column="17">++<pos:position pos:line="74" pos:column="19"/></operator> <operator pos:line="74" pos:column="20">=<pos:position pos:line="74" pos:column="21"/></operator> <operator pos:line="74" pos:column="22">(<pos:position pos:line="74" pos:column="23"/></operator><name><name pos:line="74" pos:column="23">cbc<pos:position pos:line="74" pos:column="26"/></name><index pos:line="74" pos:column="26">[<expr><name pos:line="74" pos:column="27">i<pos:position pos:line="74" pos:column="28"/></name></expr>]<pos:position pos:line="74" pos:column="29"/></index></name> <operator pos:line="74" pos:column="30">^=<pos:position pos:line="74" pos:column="32"/></operator> <name><name pos:line="74" pos:column="33">passbuf<pos:position pos:line="74" pos:column="40"/></name><index pos:line="74" pos:column="40">[<expr><name pos:line="74" pos:column="41">j<pos:position pos:line="74" pos:column="42"/></name> <operator pos:line="74" pos:column="43">+<pos:position pos:line="74" pos:column="44"/></operator> <name pos:line="74" pos:column="45">i<pos:position pos:line="74" pos:column="46"/></name></expr>]<pos:position pos:line="74" pos:column="47"/></index></name><operator pos:line="74" pos:column="47">)<pos:position pos:line="74" pos:column="48"/></operator></expr>;<pos:position pos:line="74" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="75" pos:column="10"/></block></for>
    }<pos:position pos:line="76" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="77" pos:column="5">total_length<pos:position pos:line="77" pos:column="17"/></name> <operator pos:line="77" pos:column="18">+=<pos:position pos:line="77" pos:column="20"/></operator> <name pos:line="77" pos:column="21">length<pos:position pos:line="77" pos:column="27"/></name> <operator pos:line="77" pos:column="28">+<pos:position pos:line="77" pos:column="29"/></operator> <literal type="number" pos:line="77" pos:column="30">2<pos:position pos:line="77" pos:column="31"/></literal></expr>;<pos:position pos:line="77" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="79" pos:column="5">*<pos:position pos:line="79" pos:column="6"/></operator><name pos:line="79" pos:column="6">ptr<pos:position pos:line="79" pos:column="9"/></name><operator pos:line="79" pos:column="9">++<pos:position pos:line="79" pos:column="11"/></operator> <operator pos:line="79" pos:column="12">=<pos:position pos:line="79" pos:column="13"/></operator> <name pos:line="79" pos:column="14">PW_NAS_PORT_ID<pos:position pos:line="79" pos:column="28"/></name></expr>;<pos:position pos:line="79" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="80" pos:column="5">*<pos:position pos:line="80" pos:column="6"/></operator><name pos:line="80" pos:column="6">ptr<pos:position pos:line="80" pos:column="9"/></name><operator pos:line="80" pos:column="9">++<pos:position pos:line="80" pos:column="11"/></operator> <operator pos:line="80" pos:column="12">=<pos:position pos:line="80" pos:column="13"/></operator> <literal type="number" pos:line="80" pos:column="14">6<pos:position pos:line="80" pos:column="15"/></literal></expr>;<pos:position pos:line="80" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><name pos:line="82" pos:column="5">ui<pos:position pos:line="82" pos:column="7"/></name> <operator pos:line="82" pos:column="8">=<pos:position pos:line="82" pos:column="9"/></operator> <call><name pos:line="82" pos:column="10">htonl<pos:position pos:line="82" pos:column="15"/></name><argument_list pos:line="82" pos:column="15">(<argument><expr><name pos:line="82" pos:column="16">nasport<pos:position pos:line="82" pos:column="23"/></name></expr></argument>)<pos:position pos:line="82" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="83" pos:column="5">memcpy<pos:position pos:line="83" pos:column="11"/></name><argument_list pos:line="83" pos:column="11">(<argument><expr><name pos:line="83" pos:column="12">ptr<pos:position pos:line="83" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="83" pos:column="17">&amp;<pos:position pos:line="83" pos:column="22"/></operator><name pos:line="83" pos:column="18">ui<pos:position pos:line="83" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="83" pos:column="22">4<pos:position pos:line="83" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="84" pos:column="5">ptr<pos:position pos:line="84" pos:column="8"/></name> <operator pos:line="84" pos:column="9">+=<pos:position pos:line="84" pos:column="11"/></operator> <literal type="number" pos:line="84" pos:column="12">4<pos:position pos:line="84" pos:column="13"/></literal></expr>;<pos:position pos:line="84" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="85" pos:column="5">total_length<pos:position pos:line="85" pos:column="17"/></name> <operator pos:line="85" pos:column="18">+=<pos:position pos:line="85" pos:column="20"/></operator> <literal type="number" pos:line="85" pos:column="21">6<pos:position pos:line="85" pos:column="22"/></literal></expr>;<pos:position pos:line="85" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="87" pos:column="5">*<pos:position pos:line="87" pos:column="6"/></operator><name pos:line="87" pos:column="6">ptr<pos:position pos:line="87" pos:column="9"/></name><operator pos:line="87" pos:column="9">++<pos:position pos:line="87" pos:column="11"/></operator> <operator pos:line="87" pos:column="12">=<pos:position pos:line="87" pos:column="13"/></operator> <name pos:line="87" pos:column="14">PW_NAS_PORT_TYPE<pos:position pos:line="87" pos:column="30"/></name></expr>;<pos:position pos:line="87" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="88" pos:column="5">*<pos:position pos:line="88" pos:column="6"/></operator><name pos:line="88" pos:column="6">ptr<pos:position pos:line="88" pos:column="9"/></name><operator pos:line="88" pos:column="9">++<pos:position pos:line="88" pos:column="11"/></operator> <operator pos:line="88" pos:column="12">=<pos:position pos:line="88" pos:column="13"/></operator> <literal type="number" pos:line="88" pos:column="14">6<pos:position pos:line="88" pos:column="15"/></literal></expr>;<pos:position pos:line="88" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><name pos:line="90" pos:column="5">ui<pos:position pos:line="90" pos:column="7"/></name> <operator pos:line="90" pos:column="8">=<pos:position pos:line="90" pos:column="9"/></operator> <call><name pos:line="90" pos:column="10">htonl<pos:position pos:line="90" pos:column="15"/></name><argument_list pos:line="90" pos:column="15">(<argument><expr><name pos:line="90" pos:column="16">nasporttype<pos:position pos:line="90" pos:column="27"/></name></expr></argument>)<pos:position pos:line="90" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="91" pos:column="5">memcpy<pos:position pos:line="91" pos:column="11"/></name><argument_list pos:line="91" pos:column="11">(<argument><expr><name pos:line="91" pos:column="12">ptr<pos:position pos:line="91" pos:column="15"/></name></expr></argument>, <argument><expr><operator pos:line="91" pos:column="17">&amp;<pos:position pos:line="91" pos:column="22"/></operator><name pos:line="91" pos:column="18">ui<pos:position pos:line="91" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="91" pos:column="22">4<pos:position pos:line="91" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name pos:line="92" pos:column="5">ptr<pos:position pos:line="92" pos:column="8"/></name> <operator pos:line="92" pos:column="9">+=<pos:position pos:line="92" pos:column="11"/></operator> <literal type="number" pos:line="92" pos:column="12">4<pos:position pos:line="92" pos:column="13"/></literal></expr>;<pos:position pos:line="92" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><name pos:line="93" pos:column="5">total_length<pos:position pos:line="93" pos:column="17"/></name> <operator pos:line="93" pos:column="18">+=<pos:position pos:line="93" pos:column="20"/></operator> <literal type="number" pos:line="93" pos:column="21">6<pos:position pos:line="93" pos:column="22"/></literal></expr>;<pos:position pos:line="93" pos:column="23"/></expr_stmt>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><operator pos:line="95" pos:column="9">*<pos:position pos:line="95" pos:column="10"/></operator><name pos:line="95" pos:column="10">identifier<pos:position pos:line="95" pos:column="20"/></name></expr>)<pos:position pos:line="95" pos:column="21"/></condition><then pos:line="95" pos:column="21"> <block pos:line="95" pos:column="22">{
        <decl_stmt><decl><type><name pos:line="96" pos:column="9">int<pos:position pos:line="96" pos:column="12"/></name></type> <name pos:line="96" pos:column="13">len<pos:position pos:line="96" pos:column="16"/></name> <init pos:line="96" pos:column="17">= <expr><call><name pos:line="96" pos:column="19">strlen<pos:position pos:line="96" pos:column="25"/></name><argument_list pos:line="96" pos:column="25">(<argument><expr><name pos:line="96" pos:column="26">identifier<pos:position pos:line="96" pos:column="36"/></name></expr></argument>)<pos:position pos:line="96" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="96" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><operator pos:line="97" pos:column="9">*<pos:position pos:line="97" pos:column="10"/></operator><name pos:line="97" pos:column="10">ptr<pos:position pos:line="97" pos:column="13"/></name><operator pos:line="97" pos:column="13">++<pos:position pos:line="97" pos:column="15"/></operator> <operator pos:line="97" pos:column="16">=<pos:position pos:line="97" pos:column="17"/></operator> <name pos:line="97" pos:column="18">PW_NAS_ID<pos:position pos:line="97" pos:column="27"/></name></expr>;<pos:position pos:line="97" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="98" pos:column="9">*<pos:position pos:line="98" pos:column="10"/></operator><name pos:line="98" pos:column="10">ptr<pos:position pos:line="98" pos:column="13"/></name><operator pos:line="98" pos:column="13">++<pos:position pos:line="98" pos:column="15"/></operator> <operator pos:line="98" pos:column="16">=<pos:position pos:line="98" pos:column="17"/></operator> <name pos:line="98" pos:column="18">len<pos:position pos:line="98" pos:column="21"/></name> <operator pos:line="98" pos:column="22">+<pos:position pos:line="98" pos:column="23"/></operator> <literal type="number" pos:line="98" pos:column="24">2<pos:position pos:line="98" pos:column="25"/></literal></expr>;<pos:position pos:line="98" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="99" pos:column="9">memcpy<pos:position pos:line="99" pos:column="15"/></name><argument_list pos:line="99" pos:column="15">(<argument><expr><name pos:line="99" pos:column="16">ptr<pos:position pos:line="99" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="21">identifier<pos:position pos:line="99" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="33">len<pos:position pos:line="99" pos:column="36"/></name></expr></argument>)<pos:position pos:line="99" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="100" pos:column="9">ptr<pos:position pos:line="100" pos:column="12"/></name> <operator pos:line="100" pos:column="13">+=<pos:position pos:line="100" pos:column="15"/></operator> <name pos:line="100" pos:column="16">len<pos:position pos:line="100" pos:column="19"/></name></expr>;<pos:position pos:line="100" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="101" pos:column="9">total_length<pos:position pos:line="101" pos:column="21"/></name> <operator pos:line="101" pos:column="22">+=<pos:position pos:line="101" pos:column="24"/></operator> <name pos:line="101" pos:column="25">len<pos:position pos:line="101" pos:column="28"/></name> <operator pos:line="101" pos:column="29">+<pos:position pos:line="101" pos:column="30"/></operator> <literal type="number" pos:line="101" pos:column="31">2<pos:position pos:line="101" pos:column="32"/></literal></expr>;<pos:position pos:line="101" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="102" pos:column="6"/></block></then> <else pos:line="102" pos:column="7">else <block pos:line="102" pos:column="12">{
        <expr_stmt><expr><operator pos:line="103" pos:column="9">*<pos:position pos:line="103" pos:column="10"/></operator><name pos:line="103" pos:column="10">ptr<pos:position pos:line="103" pos:column="13"/></name><operator pos:line="103" pos:column="13">++<pos:position pos:line="103" pos:column="15"/></operator> <operator pos:line="103" pos:column="16">=<pos:position pos:line="103" pos:column="17"/></operator> <name pos:line="103" pos:column="18">PW_NAS_IP_ADDRESS<pos:position pos:line="103" pos:column="35"/></name></expr>;<pos:position pos:line="103" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="104" pos:column="9">*<pos:position pos:line="104" pos:column="10"/></operator><name pos:line="104" pos:column="10">ptr<pos:position pos:line="104" pos:column="13"/></name><operator pos:line="104" pos:column="13">++<pos:position pos:line="104" pos:column="15"/></operator> <operator pos:line="104" pos:column="16">=<pos:position pos:line="104" pos:column="17"/></operator> <literal type="number" pos:line="104" pos:column="18">6<pos:position pos:line="104" pos:column="19"/></literal></expr>;<pos:position pos:line="104" pos:column="20"/></expr_stmt>

        <expr_stmt><expr><name pos:line="106" pos:column="9">ui<pos:position pos:line="106" pos:column="11"/></name> <operator pos:line="106" pos:column="12">=<pos:position pos:line="106" pos:column="13"/></operator> <call><name pos:line="106" pos:column="14">htonl<pos:position pos:line="106" pos:column="19"/></name><argument_list pos:line="106" pos:column="19">(<argument><expr><name pos:line="106" pos:column="20">nas_ipaddr<pos:position pos:line="106" pos:column="30"/></name></expr></argument>)<pos:position pos:line="106" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">memcpy<pos:position pos:line="107" pos:column="15"/></name><argument_list pos:line="107" pos:column="15">(<argument><expr><name pos:line="107" pos:column="16">ptr<pos:position pos:line="107" pos:column="19"/></name></expr></argument>, <argument><expr><operator pos:line="107" pos:column="21">&amp;<pos:position pos:line="107" pos:column="26"/></operator><name pos:line="107" pos:column="22">ui<pos:position pos:line="107" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="107" pos:column="26">4<pos:position pos:line="107" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="108" pos:column="9">ptr<pos:position pos:line="108" pos:column="12"/></name> <operator pos:line="108" pos:column="13">+=<pos:position pos:line="108" pos:column="15"/></operator> <literal type="number" pos:line="108" pos:column="16">4<pos:position pos:line="108" pos:column="17"/></literal></expr>;<pos:position pos:line="108" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name pos:line="109" pos:column="9">total_length<pos:position pos:line="109" pos:column="21"/></name> <operator pos:line="109" pos:column="22">+=<pos:position pos:line="109" pos:column="24"/></operator> <literal type="number" pos:line="109" pos:column="25">6<pos:position pos:line="109" pos:column="26"/></literal></expr>;<pos:position pos:line="109" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="110" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="112" pos:column="5">/* Klaus Weidner &lt;kw@w-m-p.com&gt; changed this
     * from htonl to htons. It might have caused
     * you trouble or not. That depends on the byte
     * order of your system.
     * The symptom was that the radius server
     * ignored the requests, because they had zero
     * length according to the data header.
     */</comment>
    <expr_stmt><expr><name><name pos:line="120" pos:column="5">auth<pos:position pos:line="120" pos:column="9"/></name><operator pos:line="120" pos:column="9">-&gt;<pos:position pos:line="120" pos:column="14"/></operator><name pos:line="120" pos:column="11">length<pos:position pos:line="120" pos:column="17"/></name></name> <operator pos:line="120" pos:column="18">=<pos:position pos:line="120" pos:column="19"/></operator> <call><name pos:line="120" pos:column="20">htons<pos:position pos:line="120" pos:column="25"/></name><argument_list pos:line="120" pos:column="25">(<argument><expr><name pos:line="120" pos:column="26">total_length<pos:position pos:line="120" pos:column="38"/></name></expr></argument>)<pos:position pos:line="120" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="40"/></expr_stmt>

    <while pos:line="122" pos:column="5">while <condition pos:line="122" pos:column="11">(<expr><name pos:line="122" pos:column="12">retry<pos:position pos:line="122" pos:column="17"/></name><operator pos:line="122" pos:column="17">--<pos:position pos:line="122" pos:column="19"/></operator></expr>)<pos:position pos:line="122" pos:column="20"/></condition> <block pos:line="122" pos:column="21">{
        <decl_stmt><decl><type><name pos:line="123" pos:column="9">int<pos:position pos:line="123" pos:column="12"/></name></type> <name pos:line="123" pos:column="13">time_spent<pos:position pos:line="123" pos:column="23"/></name></decl>;<pos:position pos:line="123" pos:column="24"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="124" pos:column="9">struct<pos:position pos:line="124" pos:column="15"/></name> <name pos:line="124" pos:column="16">timeval<pos:position pos:line="124" pos:column="23"/></name></name></type> <name pos:line="124" pos:column="24">sent<pos:position pos:line="124" pos:column="28"/></name></decl>;<pos:position pos:line="124" pos:column="29"/></decl_stmt>
        <comment type="block" pos:line="125" pos:column="9">/*
         *    Send the request we've built.
         */</comment>
        <expr_stmt><expr><call><name pos:line="128" pos:column="9">gettimeofday<pos:position pos:line="128" pos:column="21"/></name><argument_list pos:line="128" pos:column="21">(<argument><expr><operator pos:line="128" pos:column="22">&amp;<pos:position pos:line="128" pos:column="27"/></operator><name pos:line="128" pos:column="23">sent<pos:position pos:line="128" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="29">NULL<pos:position pos:line="128" pos:column="33"/></name></expr></argument>)<pos:position pos:line="128" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="129" pos:column="9">send<pos:position pos:line="129" pos:column="13"/></name><argument_list pos:line="129" pos:column="13">(<argument><expr><name pos:line="129" pos:column="14">socket_fd<pos:position pos:line="129" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="129" pos:column="25">(<pos:position pos:line="129" pos:column="26"/></operator><name pos:line="129" pos:column="26">char<pos:position pos:line="129" pos:column="30"/></name> <operator pos:line="129" pos:column="31">*<pos:position pos:line="129" pos:column="32"/></operator><operator pos:line="129" pos:column="32">)<pos:position pos:line="129" pos:column="33"/></operator> <name pos:line="129" pos:column="34">auth<pos:position pos:line="129" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="40">total_length<pos:position pos:line="129" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="54">0<pos:position pos:line="129" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="57"/></expr_stmt>
        <while pos:line="130" pos:column="9">while <condition pos:line="130" pos:column="15">(<expr><operator pos:line="130" pos:column="16">(<pos:position pos:line="130" pos:column="17"/></operator><name pos:line="130" pos:column="17">time_spent<pos:position pos:line="130" pos:column="27"/></name> <operator pos:line="130" pos:column="28">=<pos:position pos:line="130" pos:column="29"/></operator> <call><name pos:line="130" pos:column="30">time_since<pos:position pos:line="130" pos:column="40"/></name><argument_list pos:line="130" pos:column="40">(<argument><expr><operator pos:line="130" pos:column="41">&amp;<pos:position pos:line="130" pos:column="46"/></operator><name pos:line="130" pos:column="42">sent<pos:position pos:line="130" pos:column="46"/></name></expr></argument>)<pos:position pos:line="130" pos:column="47"/></argument_list></call><operator pos:line="130" pos:column="47">)<pos:position pos:line="130" pos:column="48"/></operator> <operator pos:line="130" pos:column="49">&lt;<pos:position pos:line="130" pos:column="53"/></operator> <literal type="number" pos:line="130" pos:column="51">1000000<pos:position pos:line="130" pos:column="58"/></literal></expr>)<pos:position pos:line="130" pos:column="59"/></condition> <block pos:line="130" pos:column="60">{
            <decl_stmt><decl><type><name><name pos:line="131" pos:column="13">struct<pos:position pos:line="131" pos:column="19"/></name> <name pos:line="131" pos:column="20">timeval<pos:position pos:line="131" pos:column="27"/></name></name></type> <name pos:line="131" pos:column="28">tv<pos:position pos:line="131" pos:column="30"/></name></decl>;<pos:position pos:line="131" pos:column="31"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="132" pos:column="13">int<pos:position pos:line="132" pos:column="16"/></name></type> <name pos:line="132" pos:column="17">rc<pos:position pos:line="132" pos:column="19"/></name></decl>, <decl><type ref="prev"/><name pos:line="132" pos:column="21">len<pos:position pos:line="132" pos:column="24"/></name></decl>;<pos:position pos:line="132" pos:column="25"/></decl_stmt>
            <if pos:line="133" pos:column="13">if <condition pos:line="133" pos:column="16">(<expr><operator pos:line="133" pos:column="17">!<pos:position pos:line="133" pos:column="18"/></operator><name pos:line="133" pos:column="18">time_spent<pos:position pos:line="133" pos:column="28"/></name></expr>)<pos:position pos:line="133" pos:column="29"/></condition><then pos:line="133" pos:column="29"> <block pos:line="133" pos:column="30">{
                <expr_stmt><expr><name><name pos:line="134" pos:column="17">tv<pos:position pos:line="134" pos:column="19"/></name><operator pos:line="134" pos:column="19">.<pos:position pos:line="134" pos:column="20"/></operator><name pos:line="134" pos:column="20">tv_sec<pos:position pos:line="134" pos:column="26"/></name></name> <operator pos:line="134" pos:column="27">=<pos:position pos:line="134" pos:column="28"/></operator> <literal type="number" pos:line="134" pos:column="29">1<pos:position pos:line="134" pos:column="30"/></literal></expr>;<pos:position pos:line="134" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="135" pos:column="17">tv<pos:position pos:line="135" pos:column="19"/></name><operator pos:line="135" pos:column="19">.<pos:position pos:line="135" pos:column="20"/></operator><name pos:line="135" pos:column="20">tv_usec<pos:position pos:line="135" pos:column="27"/></name></name> <operator pos:line="135" pos:column="28">=<pos:position pos:line="135" pos:column="29"/></operator> <literal type="number" pos:line="135" pos:column="30">0<pos:position pos:line="135" pos:column="31"/></literal></expr>;<pos:position pos:line="135" pos:column="32"/></expr_stmt>
            }<pos:position pos:line="136" pos:column="14"/></block></then> <else pos:line="136" pos:column="15">else <block pos:line="136" pos:column="20">{
                <expr_stmt><expr><name><name pos:line="137" pos:column="17">tv<pos:position pos:line="137" pos:column="19"/></name><operator pos:line="137" pos:column="19">.<pos:position pos:line="137" pos:column="20"/></operator><name pos:line="137" pos:column="20">tv_sec<pos:position pos:line="137" pos:column="26"/></name></name> <operator pos:line="137" pos:column="27">=<pos:position pos:line="137" pos:column="28"/></operator> <literal type="number" pos:line="137" pos:column="29">0<pos:position pos:line="137" pos:column="30"/></literal></expr>;<pos:position pos:line="137" pos:column="31"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="138" pos:column="17">tv<pos:position pos:line="138" pos:column="19"/></name><operator pos:line="138" pos:column="19">.<pos:position pos:line="138" pos:column="20"/></operator><name pos:line="138" pos:column="20">tv_usec<pos:position pos:line="138" pos:column="27"/></name></name> <operator pos:line="138" pos:column="28">=<pos:position pos:line="138" pos:column="29"/></operator> <literal type="number" pos:line="138" pos:column="30">1000000<pos:position pos:line="138" pos:column="37"/></literal> <operator pos:line="138" pos:column="38">-<pos:position pos:line="138" pos:column="39"/></operator> <name pos:line="138" pos:column="40">time_spent<pos:position pos:line="138" pos:column="50"/></name></expr>;<pos:position pos:line="138" pos:column="51"/></expr_stmt>
            }<pos:position pos:line="139" pos:column="14"/></block></else></if>
            <expr_stmt><expr><call><name pos:line="140" pos:column="13">FD_ZERO<pos:position pos:line="140" pos:column="20"/></name><argument_list pos:line="140" pos:column="20">(<argument><expr><operator pos:line="140" pos:column="21">&amp;<pos:position pos:line="140" pos:column="26"/></operator><name pos:line="140" pos:column="22">readfds<pos:position pos:line="140" pos:column="29"/></name></expr></argument>)<pos:position pos:line="140" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="141" pos:column="13">FD_SET<pos:position pos:line="141" pos:column="19"/></name><argument_list pos:line="141" pos:column="19">(<argument><expr><name pos:line="141" pos:column="20">socket_fd<pos:position pos:line="141" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="141" pos:column="31">&amp;<pos:position pos:line="141" pos:column="36"/></operator><name pos:line="141" pos:column="32">readfds<pos:position pos:line="141" pos:column="39"/></name></expr></argument>)<pos:position pos:line="141" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="41"/></expr_stmt>
            <if pos:line="142" pos:column="13">if <condition pos:line="142" pos:column="16">(<expr><call><name pos:line="142" pos:column="17">select<pos:position pos:line="142" pos:column="23"/></name><argument_list pos:line="142" pos:column="23">(<argument><expr><name pos:line="142" pos:column="24">socket_fd<pos:position pos:line="142" pos:column="33"/></name> <operator pos:line="142" pos:column="34">+<pos:position pos:line="142" pos:column="35"/></operator> <literal type="number" pos:line="142" pos:column="36">1<pos:position pos:line="142" pos:column="37"/></literal></expr></argument>, <argument><expr><operator pos:line="142" pos:column="39">&amp;<pos:position pos:line="142" pos:column="44"/></operator><name pos:line="142" pos:column="40">readfds<pos:position pos:line="142" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="49">NULL<pos:position pos:line="142" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="142" pos:column="55">NULL<pos:position pos:line="142" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="142" pos:column="61">&amp;<pos:position pos:line="142" pos:column="66"/></operator><name pos:line="142" pos:column="62">tv<pos:position pos:line="142" pos:column="64"/></name></expr></argument>)<pos:position pos:line="142" pos:column="65"/></argument_list></call> <operator pos:line="142" pos:column="66">==<pos:position pos:line="142" pos:column="68"/></operator> <literal type="number" pos:line="142" pos:column="69">0<pos:position pos:line="142" pos:column="70"/></literal></expr>)<pos:position pos:line="142" pos:column="71"/></condition><then pos:line="142" pos:column="71">	<comment type="block" pos:line="142" pos:column="73">/* Select timeout */</comment>
                <block type="pseudo"><break pos:line="143" pos:column="17">break;<pos:position pos:line="143" pos:column="23"/></break></block></then></if>
            <expr_stmt><expr><name pos:line="144" pos:column="13">salen<pos:position pos:line="144" pos:column="18"/></name> <operator pos:line="144" pos:column="19">=<pos:position pos:line="144" pos:column="20"/></operator> <sizeof pos:line="144" pos:column="21">sizeof<argument_list pos:line="144" pos:column="27">(<argument><expr><name pos:line="144" pos:column="28">saremote<pos:position pos:line="144" pos:column="36"/></name></expr></argument>)<pos:position pos:line="144" pos:column="37"/></argument_list></sizeof></expr>;<pos:position pos:line="144" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name pos:line="145" pos:column="13">len<pos:position pos:line="145" pos:column="16"/></name> <operator pos:line="145" pos:column="17">=<pos:position pos:line="145" pos:column="18"/></operator> <call><name pos:line="145" pos:column="19">recvfrom<pos:position pos:line="145" pos:column="27"/></name><argument_list pos:line="145" pos:column="27">(<argument><expr><name pos:line="145" pos:column="28">socket_fd<pos:position pos:line="145" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="145" pos:column="39">recv_buffer<pos:position pos:line="145" pos:column="50"/></name></expr></argument>, <argument><expr><sizeof pos:line="145" pos:column="52">sizeof<argument_list pos:line="145" pos:column="58">(<argument><expr><name pos:line="145" pos:column="59">i_recv_buffer<pos:position pos:line="145" pos:column="72"/></name></expr></argument>)<pos:position pos:line="145" pos:column="73"/></argument_list></sizeof></expr></argument>,
                           <argument><expr><literal type="number" pos:line="146" pos:column="28">0<pos:position pos:line="146" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="146" pos:column="31">(<pos:position pos:line="146" pos:column="32"/></operator>struct <name pos:line="146" pos:column="39">sockaddr<pos:position pos:line="146" pos:column="47"/></name> <operator pos:line="146" pos:column="48">*<pos:position pos:line="146" pos:column="49"/></operator><operator pos:line="146" pos:column="49">)<pos:position pos:line="146" pos:column="50"/></operator> <operator pos:line="146" pos:column="51">&amp;<pos:position pos:line="146" pos:column="56"/></operator><name pos:line="146" pos:column="52">saremote<pos:position pos:line="146" pos:column="60"/></name></expr></argument>, <argument><expr><operator pos:line="146" pos:column="62">&amp;<pos:position pos:line="146" pos:column="67"/></operator><name pos:line="146" pos:column="63">salen<pos:position pos:line="146" pos:column="68"/></name></expr></argument>)<pos:position pos:line="146" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="70"/></expr_stmt>

            <if pos:line="148" pos:column="13">if <condition pos:line="148" pos:column="16">(<expr><name pos:line="148" pos:column="17">len<pos:position pos:line="148" pos:column="20"/></name> <operator pos:line="148" pos:column="21">&lt;<pos:position pos:line="148" pos:column="25"/></operator> <literal type="number" pos:line="148" pos:column="23">0<pos:position pos:line="148" pos:column="24"/></literal></expr>)<pos:position pos:line="148" pos:column="25"/></condition><then pos:line="148" pos:column="25">
                <block type="pseudo"><continue pos:line="149" pos:column="17">continue;<pos:position pos:line="149" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><name pos:line="151" pos:column="13">rc<pos:position pos:line="151" pos:column="15"/></name> <operator pos:line="151" pos:column="16">=<pos:position pos:line="151" pos:column="17"/></operator> <call><name pos:line="151" pos:column="18">result_recv<pos:position pos:line="151" pos:column="29"/></name><argument_list pos:line="151" pos:column="29">(<argument><expr><name><name pos:line="151" pos:column="30">saremote<pos:position pos:line="151" pos:column="38"/></name><operator pos:line="151" pos:column="38">.<pos:position pos:line="151" pos:column="39"/></operator><name pos:line="151" pos:column="39">sin_addr<pos:position pos:line="151" pos:column="47"/></name><operator pos:line="151" pos:column="47">.<pos:position pos:line="151" pos:column="48"/></operator><name pos:line="151" pos:column="48">s_addr<pos:position pos:line="151" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="56">saremote<pos:position pos:line="151" pos:column="64"/></name><operator pos:line="151" pos:column="64">.<pos:position pos:line="151" pos:column="65"/></operator><name pos:line="151" pos:column="65">sin_port<pos:position pos:line="151" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="75">recv_buffer<pos:position pos:line="151" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="88">len<pos:position pos:line="151" pos:column="91"/></name></expr></argument>)<pos:position pos:line="151" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="93"/></expr_stmt>
            <if pos:line="152" pos:column="13">if <condition pos:line="152" pos:column="16">(<expr><name pos:line="152" pos:column="17">rc<pos:position pos:line="152" pos:column="19"/></name> <operator pos:line="152" pos:column="20">==<pos:position pos:line="152" pos:column="22"/></operator> <literal type="number" pos:line="152" pos:column="23">0<pos:position pos:line="152" pos:column="24"/></literal></expr>)<pos:position pos:line="152" pos:column="25"/></condition><then pos:line="152" pos:column="25">
                <block type="pseudo"><return pos:line="153" pos:column="17">return <expr><literal type="number" pos:line="153" pos:column="24">1<pos:position pos:line="153" pos:column="25"/></literal></expr>;<pos:position pos:line="153" pos:column="26"/></return></block></then></if>
            <if pos:line="154" pos:column="13">if <condition pos:line="154" pos:column="16">(<expr><name pos:line="154" pos:column="17">rc<pos:position pos:line="154" pos:column="19"/></name> <operator pos:line="154" pos:column="20">==<pos:position pos:line="154" pos:column="22"/></operator> <literal type="number" pos:line="154" pos:column="23">1<pos:position pos:line="154" pos:column="24"/></literal></expr>)<pos:position pos:line="154" pos:column="25"/></condition><then pos:line="154" pos:column="25">
                <block type="pseudo"><return pos:line="155" pos:column="17">return <expr><literal type="number" pos:line="155" pos:column="24">0<pos:position pos:line="155" pos:column="25"/></literal></expr>;<pos:position pos:line="155" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="156" pos:column="10"/></block></while>
    }<pos:position pos:line="157" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="159" pos:column="5">fprintf<pos:position pos:line="159" pos:column="12"/></name><argument_list pos:line="159" pos:column="12">(<argument><expr><name pos:line="159" pos:column="13">stderr<pos:position pos:line="159" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="159" pos:column="21">"%s: No response from RADIUS server\n"<pos:position pos:line="159" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="159" pos:column="61">progname<pos:position pos:line="159" pos:column="69"/></name></expr></argument>)<pos:position pos:line="159" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="71"/></expr_stmt>

    <return pos:line="161" pos:column="5">return <expr><literal type="number" pos:line="161" pos:column="12">0<pos:position pos:line="161" pos:column="13"/></literal></expr>;<pos:position pos:line="161" pos:column="14"/></return>
}<pos:position pos:line="162" pos:column="2"/></block></function></unit>

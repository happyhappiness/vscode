<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2226_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">finishingChunkedRequest<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">()<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">flags<pos:position pos:line="4" pos:column="14"/></name><operator pos:line="4" pos:column="14">.<pos:position pos:line="4" pos:column="15"/></operator><name pos:line="4" pos:column="15">sentLastChunk<pos:position pos:line="4" pos:column="28"/></name></name></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29"> <block pos:line="4" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">11<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">5<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">HERE<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">&lt;&lt;<pos:position pos:line="5" pos:column="36"/></operator> <literal type="string" pos:line="5" pos:column="31">"already sent last-chunk"<pos:position pos:line="5" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="58"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><literal type="boolean" pos:line="6" pos:column="16">false<pos:position pos:line="6" pos:column="21"/></literal></expr>;<pos:position pos:line="6" pos:column="22"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">Must<pos:position pos:line="9" pos:column="9"/></name><argument_list pos:line="9" pos:column="9">(<argument><expr><name pos:line="9" pos:column="10">receivedWholeRequestBody<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt> <comment type="line" pos:line="9" pos:column="37">// or we should not be sending last-chunk</comment>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">flags<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">sentLastChunk<pos:position pos:line="10" pos:column="24"/></name></name> <operator pos:line="10" pos:column="25">=<pos:position pos:line="10" pos:column="26"/></operator> <literal type="boolean" pos:line="10" pos:column="27">true<pos:position pos:line="10" pos:column="31"/></literal></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>

    <typedef pos:line="12" pos:column="5">typedef <type><name><name pos:line="12" pos:column="13">CommCbMemFunT<pos:position pos:line="12" pos:column="26"/></name><argument_list type="generic" pos:line="12" pos:column="26">&lt;<argument><expr><name pos:line="12" pos:column="27">HttpStateData<pos:position pos:line="12" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="42">CommIoCbParams<pos:position pos:line="12" pos:column="56"/></name></expr></argument>&gt;<pos:position pos:line="12" pos:column="60"/></argument_list></name></type> <name pos:line="12" pos:column="58">Dialer<pos:position pos:line="12" pos:column="64"/></name>;<pos:position pos:line="12" pos:column="65"/></typedef>
    <expr_stmt><expr><name pos:line="13" pos:column="5">requestSender<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <call><name pos:line="13" pos:column="21">JobCallback<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><literal type="number" pos:line="13" pos:column="33">11<pos:position pos:line="13" pos:column="35"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="13" pos:column="36">5<pos:position pos:line="13" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">Dialer<pos:position pos:line="13" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="47">this<pos:position pos:line="13" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="53">HttpStateData<pos:position pos:line="13" pos:column="66"/></name><operator pos:line="13" pos:column="66">::<pos:position pos:line="13" pos:column="68"/></operator><name pos:line="13" pos:column="68">wroteLast<pos:position pos:line="13" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">Comm<pos:position pos:line="14" pos:column="9"/></name><operator pos:line="14" pos:column="9">::<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">Write<pos:position pos:line="14" pos:column="16"/></name></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">serverConnection<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="35">"0\r\n\r\n"<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="48">5<pos:position pos:line="14" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="51">requestSender<pos:position pos:line="14" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="66">NULL<pos:position pos:line="14" pos:column="70"/></name></expr></argument>)<pos:position pos:line="14" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="72"/></expr_stmt>
    <return pos:line="15" pos:column="5">return <expr><literal type="boolean" pos:line="15" pos:column="12">true<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5093_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type> <name pos:line="1" pos:column="8">memAllocate<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">mem_type<pos:position pos:line="1" pos:column="28"/></name></type> <name pos:line="1" pos:column="29">type<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="34"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">// let's waste plenty of memory. This should cover any possible need</comment>
    <return pos:line="4" pos:column="5">return <expr><call><name pos:line="4" pos:column="12">xmalloc<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><literal type="number" pos:line="4" pos:column="20">64<pos:position pos:line="4" pos:column="22"/></literal><operator pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></operator><literal type="number" pos:line="4" pos:column="23">1024<pos:position pos:line="4" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="29"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

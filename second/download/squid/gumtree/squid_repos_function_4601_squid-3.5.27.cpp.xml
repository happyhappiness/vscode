<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4601_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">CertificateDb<pos:position pos:line="1" pos:column="24"/></name><operator pos:line="1" pos:column="24">::<pos:position pos:line="1" pos:column="26"/></operator><name pos:line="1" pos:column="26">addCertAndPrivateKey<pos:position pos:line="1" pos:column="46"/></name></name><parameter_list pos:line="1" pos:column="46">(<parameter><decl><type><name><name pos:line="1" pos:column="47">Ssl<pos:position pos:line="1" pos:column="50"/></name><operator pos:line="1" pos:column="50">::<pos:position pos:line="1" pos:column="52"/></operator><name pos:line="1" pos:column="52">X509_Pointer<pos:position pos:line="1" pos:column="64"/></name></name> <modifier pos:line="1" pos:column="65">&amp;<pos:position pos:line="1" pos:column="70"/></modifier></type> <name pos:line="1" pos:column="67">cert<pos:position pos:line="1" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="73">Ssl<pos:position pos:line="1" pos:column="76"/></name><operator pos:line="1" pos:column="76">::<pos:position pos:line="1" pos:column="78"/></operator><name pos:line="1" pos:column="78">EVP_PKEY_Pointer<pos:position pos:line="1" pos:column="94"/></name></name> <modifier pos:line="1" pos:column="95">&amp;<pos:position pos:line="1" pos:column="100"/></modifier></type> <name pos:line="1" pos:column="97">pkey<pos:position pos:line="1" pos:column="101"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="103">std<pos:position pos:line="1" pos:column="106"/></name><operator pos:line="1" pos:column="106">::<pos:position pos:line="1" pos:column="108"/></operator><name pos:line="1" pos:column="108">string<pos:position pos:line="1" pos:column="114"/></name></name> <specifier pos:line="1" pos:column="115">const<pos:position pos:line="1" pos:column="120"/></specifier> <modifier pos:line="1" pos:column="121">&amp;<pos:position pos:line="1" pos:column="126"/></modifier></type> <name pos:line="1" pos:column="123">useName<pos:position pos:line="1" pos:column="130"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="131"/></parameter_list> <block pos:line="1" pos:column="132">{
    <decl_stmt><decl><type><specifier pos:line="2" pos:column="5">const<pos:position pos:line="2" pos:column="10"/></specifier> <name pos:line="2" pos:column="11">Locker<pos:position pos:line="2" pos:column="17"/></name></type> <name pos:line="2" pos:column="18">locker<pos:position pos:line="2" pos:column="24"/></name><argument_list pos:line="2" pos:column="24">(<argument><expr><name pos:line="2" pos:column="25">dbLock<pos:position pos:line="2" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="33">Here<pos:position pos:line="2" pos:column="37"/></name></expr></argument>)<pos:position pos:line="2" pos:column="38"/></argument_list></decl>;<pos:position pos:line="2" pos:column="39"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">load<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">()<pos:position pos:line="3" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="12"/></expr_stmt>
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">db<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">||<pos:position pos:line="4" pos:column="15"/></operator> <operator pos:line="4" pos:column="16">!<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">cert<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">||<pos:position pos:line="4" pos:column="24"/></operator> <operator pos:line="4" pos:column="25">!<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">pkey<pos:position pos:line="4" pos:column="30"/></name></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">Row<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">row<pos:position pos:line="6" pos:column="12"/></name></decl>;<pos:position pos:line="6" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">ASN1_INTEGER<pos:position pos:line="7" pos:column="17"/></name> <modifier pos:line="7" pos:column="18">*<pos:position pos:line="7" pos:column="19"/></modifier></type> <name pos:line="7" pos:column="20">ai<pos:position pos:line="7" pos:column="22"/></name> <init pos:line="7" pos:column="23">= <expr><call><name pos:line="7" pos:column="25">X509_get_serialNumber<pos:position pos:line="7" pos:column="46"/></name><argument_list pos:line="7" pos:column="46">(<argument><expr><call><name><name pos:line="7" pos:column="47">cert<pos:position pos:line="7" pos:column="51"/></name><operator pos:line="7" pos:column="51">.<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="52">get<pos:position pos:line="7" pos:column="55"/></name></name><argument_list pos:line="7" pos:column="55">()<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">std<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">::<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">string<pos:position pos:line="8" pos:column="16"/></name></name></type> <name pos:line="8" pos:column="17">serial_string<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">Ssl<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">::<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">BIGNUM_Pointer<pos:position pos:line="9" pos:column="24"/></name></name></type> <name pos:line="9" pos:column="25">serial<pos:position pos:line="9" pos:column="31"/></name><argument_list pos:line="9" pos:column="31">(<argument><expr><call><name pos:line="9" pos:column="32">ASN1_INTEGER_to_BN<pos:position pos:line="9" pos:column="50"/></name><argument_list pos:line="9" pos:column="50">(<argument><expr><name pos:line="9" pos:column="51">ai<pos:position pos:line="9" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="55">NULL<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="61"/></argument_list></decl>;<pos:position pos:line="9" pos:column="62"/></decl_stmt>
    <block pos:line="10" pos:column="5">{
        <decl_stmt><decl><type><name><name pos:line="11" pos:column="9">TidyPointer<pos:position pos:line="11" pos:column="20"/></name><argument_list type="generic" pos:line="11" pos:column="20">&lt;<argument><expr><name pos:line="11" pos:column="21">char<pos:position pos:line="11" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="27">tidyFree<pos:position pos:line="11" pos:column="35"/></name></expr></argument>&gt;<pos:position pos:line="11" pos:column="39"/></argument_list></name></type> <name pos:line="11" pos:column="37">hex_bn<pos:position pos:line="11" pos:column="43"/></name><argument_list pos:line="11" pos:column="43">(<argument><expr><call><name pos:line="11" pos:column="44">BN_bn2hex<pos:position pos:line="11" pos:column="53"/></name><argument_list pos:line="11" pos:column="53">(<argument><expr><call><name><name pos:line="11" pos:column="54">serial<pos:position pos:line="11" pos:column="60"/></name><operator pos:line="11" pos:column="60">.<pos:position pos:line="11" pos:column="61"/></operator><name pos:line="11" pos:column="61">get<pos:position pos:line="11" pos:column="64"/></name></name><argument_list pos:line="11" pos:column="64">()<pos:position pos:line="11" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="68"/></argument_list></decl>;<pos:position pos:line="11" pos:column="69"/></decl_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">serial_string<pos:position pos:line="12" pos:column="22"/></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <call><name><name pos:line="12" pos:column="25">std<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">::<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">string<pos:position pos:line="12" pos:column="36"/></name></name><argument_list pos:line="12" pos:column="36">(<argument><expr><call><name><name pos:line="12" pos:column="37">hex_bn<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">.<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">get<pos:position pos:line="12" pos:column="47"/></name></name><argument_list pos:line="12" pos:column="47">()<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">row<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">.<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">setValue<pos:position pos:line="14" pos:column="17"/></name></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name pos:line="14" pos:column="18">cnlSerial<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><call><name><name pos:line="14" pos:column="29">serial_string<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">.<pos:position pos:line="14" pos:column="43"/></operator><name pos:line="14" pos:column="43">c_str<pos:position pos:line="14" pos:column="48"/></name></name><argument_list pos:line="14" pos:column="48">()<pos:position pos:line="14" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="52"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier><modifier pos:line="15" pos:column="11">*<pos:position pos:line="15" pos:column="12"/></modifier></type> <name pos:line="15" pos:column="13">rrow<pos:position pos:line="15" pos:column="17"/></name> <init pos:line="15" pos:column="18">= <expr><call><name pos:line="15" pos:column="20">TXT_DB_get_by_index<pos:position pos:line="15" pos:column="39"/></name><argument_list pos:line="15" pos:column="39">(<argument><expr><call><name><name pos:line="15" pos:column="40">db<pos:position pos:line="15" pos:column="42"/></name><operator pos:line="15" pos:column="42">.<pos:position pos:line="15" pos:column="43"/></operator><name pos:line="15" pos:column="43">get<pos:position pos:line="15" pos:column="46"/></name></name><argument_list pos:line="15" pos:column="46">()<pos:position pos:line="15" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">cnlSerial<pos:position pos:line="15" pos:column="59"/></name></expr></argument>, <argument><expr><call><name><name pos:line="15" pos:column="61">row<pos:position pos:line="15" pos:column="64"/></name><operator pos:line="15" pos:column="64">.<pos:position pos:line="15" pos:column="65"/></operator><name pos:line="15" pos:column="65">getRow<pos:position pos:line="15" pos:column="71"/></name></name><argument_list pos:line="15" pos:column="71">()<pos:position pos:line="15" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="75"/></decl_stmt>
    <comment type="line" pos:line="16" pos:column="5">// We are creating certificates with unique serial numbers. If the serial</comment>
    <comment type="line" pos:line="17" pos:column="5">// number is found in the database, the same certificate is already stored.</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">rrow<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">!=<pos:position pos:line="18" pos:column="16"/></operator> <name pos:line="18" pos:column="17">NULL<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22"> <block pos:line="18" pos:column="23">{
        <comment type="line" pos:line="19" pos:column="9">// TODO: check if the stored row is valid.</comment>
        <return pos:line="20" pos:column="9">return <expr><literal type="boolean" pos:line="20" pos:column="16">true<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <block pos:line="23" pos:column="5">{
        <decl_stmt><decl><type><name><name pos:line="24" pos:column="9">TidyPointer<pos:position pos:line="24" pos:column="20"/></name><argument_list type="generic" pos:line="24" pos:column="20">&lt;<argument><expr><name pos:line="24" pos:column="21">char<pos:position pos:line="24" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="27">tidyFree<pos:position pos:line="24" pos:column="35"/></name></expr></argument>&gt;<pos:position pos:line="24" pos:column="39"/></argument_list></name></type> <name pos:line="24" pos:column="37">subject<pos:position pos:line="24" pos:column="44"/></name><argument_list pos:line="24" pos:column="44">(<argument><expr><call><name pos:line="24" pos:column="45">X509_NAME_oneline<pos:position pos:line="24" pos:column="62"/></name><argument_list pos:line="24" pos:column="62">(<argument><expr><call><name pos:line="24" pos:column="63">X509_get_subject_name<pos:position pos:line="24" pos:column="84"/></name><argument_list pos:line="24" pos:column="84">(<argument><expr><call><name><name pos:line="24" pos:column="85">cert<pos:position pos:line="24" pos:column="89"/></name><operator pos:line="24" pos:column="89">.<pos:position pos:line="24" pos:column="90"/></operator><name pos:line="24" pos:column="90">get<pos:position pos:line="24" pos:column="93"/></name></name><argument_list pos:line="24" pos:column="93">()<pos:position pos:line="24" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="96"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="98">NULL<pos:position pos:line="24" pos:column="102"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="104">0<pos:position pos:line="24" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="106"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="107"/></argument_list></decl>;<pos:position pos:line="24" pos:column="108"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="25" pos:column="9">Ssl<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">::<pos:position pos:line="25" pos:column="14"/></operator><name pos:line="25" pos:column="14">X509_Pointer<pos:position pos:line="25" pos:column="26"/></name></name></type> <name pos:line="25" pos:column="27">findCert<pos:position pos:line="25" pos:column="35"/></name></decl>;<pos:position pos:line="25" pos:column="36"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="26" pos:column="9">Ssl<pos:position pos:line="26" pos:column="12"/></name><operator pos:line="26" pos:column="12">::<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">EVP_PKEY_Pointer<pos:position pos:line="26" pos:column="30"/></name></name></type> <name pos:line="26" pos:column="31">findPkey<pos:position pos:line="26" pos:column="39"/></name></decl>;<pos:position pos:line="26" pos:column="40"/></decl_stmt>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><call><name pos:line="27" pos:column="13">pure_find<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><ternary><condition><expr><call><name><name pos:line="27" pos:column="23">useName<pos:position pos:line="27" pos:column="30"/></name><operator pos:line="27" pos:column="30">.<pos:position pos:line="27" pos:column="31"/></operator><name pos:line="27" pos:column="31">empty<pos:position pos:line="27" pos:column="36"/></name></name><argument_list pos:line="27" pos:column="36">()<pos:position pos:line="27" pos:column="38"/></argument_list></call></expr> ?<pos:position pos:line="27" pos:column="40"/></condition><then pos:line="27" pos:column="40"> <expr><call><name><name pos:line="27" pos:column="41">subject<pos:position pos:line="27" pos:column="48"/></name><operator pos:line="27" pos:column="48">.<pos:position pos:line="27" pos:column="49"/></operator><name pos:line="27" pos:column="49">get<pos:position pos:line="27" pos:column="52"/></name></name><argument_list pos:line="27" pos:column="52">()<pos:position pos:line="27" pos:column="54"/></argument_list></call></expr> <pos:position pos:line="27" pos:column="55"/></then><else pos:line="27" pos:column="55">: <expr><name pos:line="27" pos:column="57">useName<pos:position pos:line="27" pos:column="64"/></name></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="27" pos:column="66">findCert<pos:position pos:line="27" pos:column="74"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="76">findPkey<pos:position pos:line="27" pos:column="84"/></name></expr></argument>)<pos:position pos:line="27" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="86"/></condition><then pos:line="27" pos:column="86"> <block pos:line="27" pos:column="87">{
            <comment type="line" pos:line="28" pos:column="13">// Replace with database certificate</comment>
            <expr_stmt><expr><call><name><name pos:line="29" pos:column="13">cert<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">reset<pos:position pos:line="29" pos:column="23"/></name></name><argument_list pos:line="29" pos:column="23">(<argument><expr><call><name><name pos:line="29" pos:column="24">findCert<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">.<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">release<pos:position pos:line="29" pos:column="40"/></name></name><argument_list pos:line="29" pos:column="40">()<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="30" pos:column="13">pkey<pos:position pos:line="30" pos:column="17"/></name><operator pos:line="30" pos:column="17">.<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">reset<pos:position pos:line="30" pos:column="23"/></name></name><argument_list pos:line="30" pos:column="23">(<argument><expr><call><name><name pos:line="30" pos:column="24">findPkey<pos:position pos:line="30" pos:column="32"/></name><operator pos:line="30" pos:column="32">.<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">release<pos:position pos:line="30" pos:column="40"/></name></name><argument_list pos:line="30" pos:column="40">()<pos:position pos:line="30" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>
            <return pos:line="31" pos:column="13">return <expr><literal type="boolean" pos:line="31" pos:column="20">true<pos:position pos:line="31" pos:column="24"/></literal></expr>;<pos:position pos:line="31" pos:column="25"/></return>
        }<pos:position pos:line="32" pos:column="10"/></block></then></if>
        <comment type="line" pos:line="33" pos:column="9">// pure_find may fail because the entry is expired, or because the</comment>
        <comment type="line" pos:line="34" pos:column="9">// certs file is corrupted. Remove any entry with given hostname</comment>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">deleteByHostname<pos:position pos:line="35" pos:column="25"/></name><argument_list pos:line="35" pos:column="25">(<argument><expr><ternary><condition><expr><call><name><name pos:line="35" pos:column="26">useName<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">.<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">empty<pos:position pos:line="35" pos:column="39"/></name></name><argument_list pos:line="35" pos:column="39">()<pos:position pos:line="35" pos:column="41"/></argument_list></call></expr> ?<pos:position pos:line="35" pos:column="43"/></condition><then pos:line="35" pos:column="43"> <expr><call><name><name pos:line="35" pos:column="44">subject<pos:position pos:line="35" pos:column="51"/></name><operator pos:line="35" pos:column="51">.<pos:position pos:line="35" pos:column="52"/></operator><name pos:line="35" pos:column="52">get<pos:position pos:line="35" pos:column="55"/></name></name><argument_list pos:line="35" pos:column="55">()<pos:position pos:line="35" pos:column="57"/></argument_list></call></expr> <pos:position pos:line="35" pos:column="58"/></then><else pos:line="35" pos:column="58">: <expr><name pos:line="35" pos:column="60">useName<pos:position pos:line="35" pos:column="67"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="35" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="69"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block>

    <comment type="line" pos:line="38" pos:column="5">// check db size while trying to minimize calls to size()</comment>
    <decl_stmt><decl><type><name pos:line="39" pos:column="5">size_t<pos:position pos:line="39" pos:column="11"/></name></type> <name pos:line="39" pos:column="12">dbSize<pos:position pos:line="39" pos:column="18"/></name> <init pos:line="39" pos:column="19">= <expr><call><name pos:line="39" pos:column="21">size<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">()<pos:position pos:line="39" pos:column="27"/></argument_list></call></expr></init></decl>;<pos:position pos:line="39" pos:column="28"/></decl_stmt>
    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">(<pos:position pos:line="40" pos:column="10"/></operator><name pos:line="40" pos:column="10">dbSize<pos:position pos:line="40" pos:column="16"/></name> <operator pos:line="40" pos:column="17">==<pos:position pos:line="40" pos:column="19"/></operator> <literal type="number" pos:line="40" pos:column="20">0<pos:position pos:line="40" pos:column="21"/></literal> <operator pos:line="40" pos:column="22">&amp;&amp;<pos:position pos:line="40" pos:column="32"/></operator> <call><name pos:line="40" pos:column="25">hasRows<pos:position pos:line="40" pos:column="32"/></name><argument_list pos:line="40" pos:column="32">()<pos:position pos:line="40" pos:column="34"/></argument_list></call><operator pos:line="40" pos:column="34">)<pos:position pos:line="40" pos:column="35"/></operator> <operator pos:line="40" pos:column="36">||<pos:position pos:line="40" pos:column="38"/></operator>
            <operator pos:line="41" pos:column="13">(<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">dbSize<pos:position pos:line="41" pos:column="20"/></name> <operator pos:line="41" pos:column="21">&gt;<pos:position pos:line="41" pos:column="25"/></operator> <literal type="number" pos:line="41" pos:column="23">0<pos:position pos:line="41" pos:column="24"/></literal> <operator pos:line="41" pos:column="25">&amp;&amp;<pos:position pos:line="41" pos:column="35"/></operator> <operator pos:line="41" pos:column="28">!<pos:position pos:line="41" pos:column="29"/></operator><call><name pos:line="41" pos:column="29">hasRows<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">()<pos:position pos:line="41" pos:column="38"/></argument_list></call><operator pos:line="41" pos:column="38">)<pos:position pos:line="41" pos:column="39"/></operator> <operator pos:line="41" pos:column="40">||<pos:position pos:line="41" pos:column="42"/></operator>
            <operator pos:line="42" pos:column="13">(<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">dbSize<pos:position pos:line="42" pos:column="20"/></name> <operator pos:line="42" pos:column="21">&gt;<pos:position pos:line="42" pos:column="25"/></operator>  <literal type="number" pos:line="42" pos:column="24">10<pos:position pos:line="42" pos:column="26"/></literal> <operator pos:line="42" pos:column="27">*<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="29">max_db_size<pos:position pos:line="42" pos:column="40"/></name><operator pos:line="42" pos:column="40">)<pos:position pos:line="42" pos:column="41"/></operator></expr>)<pos:position pos:line="42" pos:column="42"/></condition><then pos:line="42" pos:column="42"> <block pos:line="42" pos:column="43">{
        <comment type="line" pos:line="43" pos:column="9">// Invalid database size, rebuild</comment>
        <expr_stmt><expr><name pos:line="44" pos:column="9">dbSize<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <call><name pos:line="44" pos:column="18">rebuildSize<pos:position pos:line="44" pos:column="29"/></name><argument_list pos:line="44" pos:column="29">()<pos:position pos:line="44" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    <while pos:line="46" pos:column="5">while <condition pos:line="46" pos:column="11">(<expr><name pos:line="46" pos:column="12">dbSize<pos:position pos:line="46" pos:column="18"/></name> <operator pos:line="46" pos:column="19">&gt;<pos:position pos:line="46" pos:column="23"/></operator> <name pos:line="46" pos:column="21">max_db_size<pos:position pos:line="46" pos:column="32"/></name> <operator pos:line="46" pos:column="33">&amp;&amp;<pos:position pos:line="46" pos:column="43"/></operator> <call><name pos:line="46" pos:column="36">deleteInvalidCertificate<pos:position pos:line="46" pos:column="60"/></name><argument_list pos:line="46" pos:column="60">()<pos:position pos:line="46" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="63"/></condition> <block pos:line="46" pos:column="64">{
        <expr_stmt><expr><name pos:line="47" pos:column="9">dbSize<pos:position pos:line="47" pos:column="15"/></name> <operator pos:line="47" pos:column="16">=<pos:position pos:line="47" pos:column="17"/></operator> <call><name pos:line="47" pos:column="18">size<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">()<pos:position pos:line="47" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt> <comment type="line" pos:line="47" pos:column="26">// get the current database size</comment>
        <comment type="line" pos:line="48" pos:column="9">// and try to find another invalid certificate if needed</comment>
    }<pos:position pos:line="49" pos:column="6"/></block></while>
    <comment type="line" pos:line="50" pos:column="5">// there are no more invalid ones, but there must be valid certificates</comment>
    <while pos:line="51" pos:column="5">while <condition pos:line="51" pos:column="11">(<expr><name pos:line="51" pos:column="12">dbSize<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">&gt;<pos:position pos:line="51" pos:column="23"/></operator> <name pos:line="51" pos:column="21">max_db_size<pos:position pos:line="51" pos:column="32"/></name></expr>)<pos:position pos:line="51" pos:column="33"/></condition> <block pos:line="51" pos:column="34">{
        <if pos:line="52" pos:column="9">if <condition pos:line="52" pos:column="12">(<expr><operator pos:line="52" pos:column="13">!<pos:position pos:line="52" pos:column="14"/></operator><call><name pos:line="52" pos:column="14">deleteOldestCertificate<pos:position pos:line="52" pos:column="37"/></name><argument_list pos:line="52" pos:column="37">()<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="40"/></condition><then pos:line="52" pos:column="40"> <block pos:line="52" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">rebuildSize<pos:position pos:line="53" pos:column="24"/></name><argument_list pos:line="53" pos:column="24">()<pos:position pos:line="53" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="27"/></expr_stmt> <comment type="line" pos:line="53" pos:column="28">// No certificates in database.Update the size file.</comment>
            <expr_stmt><expr><call><name pos:line="54" pos:column="13">save<pos:position pos:line="54" pos:column="17"/></name><argument_list pos:line="54" pos:column="17">()<pos:position pos:line="54" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="20"/></expr_stmt> <comment type="line" pos:line="54" pos:column="21">// Some entries may have been removed. Update the index file.</comment>
            <return pos:line="55" pos:column="13">return <expr><literal type="boolean" pos:line="55" pos:column="20">false<pos:position pos:line="55" pos:column="25"/></literal></expr>;<pos:position pos:line="55" pos:column="26"/></return> <comment type="line" pos:line="55" pos:column="27">// errors prevented us from freeing enough space</comment>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="57" pos:column="9">dbSize<pos:position pos:line="57" pos:column="15"/></name> <operator pos:line="57" pos:column="16">=<pos:position pos:line="57" pos:column="17"/></operator> <call><name pos:line="57" pos:column="18">size<pos:position pos:line="57" pos:column="22"/></name><argument_list pos:line="57" pos:column="22">()<pos:position pos:line="57" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="25"/></expr_stmt> <comment type="line" pos:line="57" pos:column="26">// get the current database size</comment>
    }<pos:position pos:line="58" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name><name pos:line="60" pos:column="5">row<pos:position pos:line="60" pos:column="8"/></name><operator pos:line="60" pos:column="8">.<pos:position pos:line="60" pos:column="9"/></operator><name pos:line="60" pos:column="9">setValue<pos:position pos:line="60" pos:column="17"/></name></name><argument_list pos:line="60" pos:column="17">(<argument><expr><name pos:line="60" pos:column="18">cnlType<pos:position pos:line="60" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="27">"V"<pos:position pos:line="60" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="32"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="61" pos:column="5">ASN1_UTCTIME<pos:position pos:line="61" pos:column="17"/></name> <modifier pos:line="61" pos:column="18">*<pos:position pos:line="61" pos:column="19"/></modifier></type> <name pos:line="61" pos:column="20">tm<pos:position pos:line="61" pos:column="22"/></name> <init pos:line="61" pos:column="23">= <expr><call><name pos:line="61" pos:column="25">X509_get_notAfter<pos:position pos:line="61" pos:column="42"/></name><argument_list pos:line="61" pos:column="42">(<argument><expr><call><name><name pos:line="61" pos:column="43">cert<pos:position pos:line="61" pos:column="47"/></name><operator pos:line="61" pos:column="47">.<pos:position pos:line="61" pos:column="48"/></operator><name pos:line="61" pos:column="48">get<pos:position pos:line="61" pos:column="51"/></name></name><argument_list pos:line="61" pos:column="51">()<pos:position pos:line="61" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="61" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="61" pos:column="55"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="62" pos:column="5">row<pos:position pos:line="62" pos:column="8"/></name><operator pos:line="62" pos:column="8">.<pos:position pos:line="62" pos:column="9"/></operator><name pos:line="62" pos:column="9">setValue<pos:position pos:line="62" pos:column="17"/></name></name><argument_list pos:line="62" pos:column="17">(<argument><expr><name pos:line="62" pos:column="18">cnlExp_date<pos:position pos:line="62" pos:column="29"/></name></expr></argument>, <argument><expr><call><name><name pos:line="62" pos:column="31">std<pos:position pos:line="62" pos:column="34"/></name><operator pos:line="62" pos:column="34">::<pos:position pos:line="62" pos:column="36"/></operator><name pos:line="62" pos:column="36">string<pos:position pos:line="62" pos:column="42"/></name></name><argument_list pos:line="62" pos:column="42">(<argument><expr><cast type="reinterpret" pos:line="62" pos:column="43">reinterpret_cast<argument_list type="generic" pos:line="62" pos:column="59">&lt;<argument><expr><name pos:line="62" pos:column="60">char<pos:position pos:line="62" pos:column="64"/></name> <operator pos:line="62" pos:column="65">*<pos:position pos:line="62" pos:column="66"/></operator></expr></argument>&gt;<pos:position pos:line="62" pos:column="70"/></argument_list><argument_list pos:line="62" pos:column="67">(<argument><expr><name><name pos:line="62" pos:column="68">tm<pos:position pos:line="62" pos:column="70"/></name><operator pos:line="62" pos:column="70">-&gt;<pos:position pos:line="62" pos:column="75"/></operator><name pos:line="62" pos:column="72">data<pos:position pos:line="62" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="77"/></argument_list></cast></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="79">tm<pos:position pos:line="62" pos:column="81"/></name><operator pos:line="62" pos:column="81">-&gt;<pos:position pos:line="62" pos:column="86"/></operator><name pos:line="62" pos:column="83">length<pos:position pos:line="62" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="90"/></argument_list></call><operator pos:line="62" pos:column="90">.<pos:position pos:line="62" pos:column="91"/></operator><call><name pos:line="62" pos:column="91">c_str<pos:position pos:line="62" pos:column="96"/></name><argument_list pos:line="62" pos:column="96">()<pos:position pos:line="62" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="62" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="100"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="63" pos:column="5">row<pos:position pos:line="63" pos:column="8"/></name><operator pos:line="63" pos:column="8">.<pos:position pos:line="63" pos:column="9"/></operator><name pos:line="63" pos:column="9">setValue<pos:position pos:line="63" pos:column="17"/></name></name><argument_list pos:line="63" pos:column="17">(<argument><expr><name pos:line="63" pos:column="18">cnlFile<pos:position pos:line="63" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="63" pos:column="27">"unknown"<pos:position pos:line="63" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="38"/></expr_stmt>
    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><operator pos:line="64" pos:column="9">!<pos:position pos:line="64" pos:column="10"/></operator><call><name><name pos:line="64" pos:column="10">useName<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">.<pos:position pos:line="64" pos:column="18"/></operator><name pos:line="64" pos:column="18">empty<pos:position pos:line="64" pos:column="23"/></name></name><argument_list pos:line="64" pos:column="23">()<pos:position pos:line="64" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="26"/></condition><then pos:line="64" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="65" pos:column="9">row<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">.<pos:position pos:line="65" pos:column="13"/></operator><name pos:line="65" pos:column="13">setValue<pos:position pos:line="65" pos:column="21"/></name></name><argument_list pos:line="65" pos:column="21">(<argument><expr><name pos:line="65" pos:column="22">cnlName<pos:position pos:line="65" pos:column="29"/></name></expr></argument>, <argument><expr><call><name><name pos:line="65" pos:column="31">useName<pos:position pos:line="65" pos:column="38"/></name><operator pos:line="65" pos:column="38">.<pos:position pos:line="65" pos:column="39"/></operator><name pos:line="65" pos:column="39">c_str<pos:position pos:line="65" pos:column="44"/></name></name><argument_list pos:line="65" pos:column="44">()<pos:position pos:line="65" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="65" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="48"/></expr_stmt></block></then>
    <else pos:line="66" pos:column="5">else <block pos:line="66" pos:column="10">{
        <decl_stmt><decl><type><name><name pos:line="67" pos:column="9">TidyPointer<pos:position pos:line="67" pos:column="20"/></name><argument_list type="generic" pos:line="67" pos:column="20">&lt;<argument><expr><name pos:line="67" pos:column="21">char<pos:position pos:line="67" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="27">tidyFree<pos:position pos:line="67" pos:column="35"/></name></expr></argument>&gt;<pos:position pos:line="67" pos:column="39"/></argument_list></name></type> <name pos:line="67" pos:column="37">subject<pos:position pos:line="67" pos:column="44"/></name><argument_list pos:line="67" pos:column="44">(<argument><expr><call><name pos:line="67" pos:column="45">X509_NAME_oneline<pos:position pos:line="67" pos:column="62"/></name><argument_list pos:line="67" pos:column="62">(<argument><expr><call><name pos:line="67" pos:column="63">X509_get_subject_name<pos:position pos:line="67" pos:column="84"/></name><argument_list pos:line="67" pos:column="84">(<argument><expr><call><name><name pos:line="67" pos:column="85">cert<pos:position pos:line="67" pos:column="89"/></name><operator pos:line="67" pos:column="89">.<pos:position pos:line="67" pos:column="90"/></operator><name pos:line="67" pos:column="90">get<pos:position pos:line="67" pos:column="93"/></name></name><argument_list pos:line="67" pos:column="93">()<pos:position pos:line="67" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="96"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="67" pos:column="98">NULL<pos:position pos:line="67" pos:column="102"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="104">0<pos:position pos:line="67" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="106"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="107"/></argument_list></decl>;<pos:position pos:line="67" pos:column="108"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="68" pos:column="9">row<pos:position pos:line="68" pos:column="12"/></name><operator pos:line="68" pos:column="12">.<pos:position pos:line="68" pos:column="13"/></operator><name pos:line="68" pos:column="13">setValue<pos:position pos:line="68" pos:column="21"/></name></name><argument_list pos:line="68" pos:column="21">(<argument><expr><name pos:line="68" pos:column="22">cnlName<pos:position pos:line="68" pos:column="29"/></name></expr></argument>, <argument><expr><call><name><name pos:line="68" pos:column="31">subject<pos:position pos:line="68" pos:column="38"/></name><operator pos:line="68" pos:column="38">.<pos:position pos:line="68" pos:column="39"/></operator><name pos:line="68" pos:column="39">get<pos:position pos:line="68" pos:column="42"/></name></name><argument_list pos:line="68" pos:column="42">()<pos:position pos:line="68" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="69" pos:column="6"/></block></else></if>

    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><operator pos:line="71" pos:column="9">!<pos:position pos:line="71" pos:column="10"/></operator><call><name pos:line="71" pos:column="10">TXT_DB_insert<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><call><name><name pos:line="71" pos:column="24">db<pos:position pos:line="71" pos:column="26"/></name><operator pos:line="71" pos:column="26">.<pos:position pos:line="71" pos:column="27"/></operator><name pos:line="71" pos:column="27">get<pos:position pos:line="71" pos:column="30"/></name></name><argument_list pos:line="71" pos:column="30">()<pos:position pos:line="71" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="71" pos:column="34">row<pos:position pos:line="71" pos:column="37"/></name><operator pos:line="71" pos:column="37">.<pos:position pos:line="71" pos:column="38"/></operator><name pos:line="71" pos:column="38">getRow<pos:position pos:line="71" pos:column="44"/></name></name><argument_list pos:line="71" pos:column="44">()<pos:position pos:line="71" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="71" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="71" pos:column="48"/></condition><then pos:line="71" pos:column="48"> <block pos:line="71" pos:column="49">{
        <comment type="line" pos:line="72" pos:column="9">// failed to add index (???) but we may have already modified</comment>
        <comment type="line" pos:line="73" pos:column="9">// the database so save before exit</comment>
        <expr_stmt><expr><call><name pos:line="74" pos:column="9">save<pos:position pos:line="74" pos:column="13"/></name><argument_list pos:line="74" pos:column="13">()<pos:position pos:line="74" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="16"/></expr_stmt>
        <return pos:line="75" pos:column="9">return <expr><literal type="boolean" pos:line="75" pos:column="16">false<pos:position pos:line="75" pos:column="21"/></literal></expr>;<pos:position pos:line="75" pos:column="22"/></return>
    }<pos:position pos:line="76" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="77" pos:column="5">rrow<pos:position pos:line="77" pos:column="9"/></name> <operator pos:line="77" pos:column="10">=<pos:position pos:line="77" pos:column="11"/></operator> <call><name><name pos:line="77" pos:column="12">row<pos:position pos:line="77" pos:column="15"/></name><operator pos:line="77" pos:column="15">.<pos:position pos:line="77" pos:column="16"/></operator><name pos:line="77" pos:column="16">getRow<pos:position pos:line="77" pos:column="22"/></name></name><argument_list pos:line="77" pos:column="22">()<pos:position pos:line="77" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="78" pos:column="5">row<pos:position pos:line="78" pos:column="8"/></name><operator pos:line="78" pos:column="8">.<pos:position pos:line="78" pos:column="9"/></operator><name pos:line="78" pos:column="9">reset<pos:position pos:line="78" pos:column="14"/></name></name><argument_list pos:line="78" pos:column="14">()<pos:position pos:line="78" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="17"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="80" pos:column="5">std<pos:position pos:line="80" pos:column="8"/></name><operator pos:line="80" pos:column="8">::<pos:position pos:line="80" pos:column="10"/></operator><name pos:line="80" pos:column="10">string<pos:position pos:line="80" pos:column="16"/></name></name></type> <name pos:line="80" pos:column="17">filename<pos:position pos:line="80" pos:column="25"/></name><argument_list pos:line="80" pos:column="25">(<argument><expr><name pos:line="80" pos:column="26">cert_full<pos:position pos:line="80" pos:column="35"/></name> <operator pos:line="80" pos:column="36">+<pos:position pos:line="80" pos:column="37"/></operator> <literal type="string" pos:line="80" pos:column="38">"/"<pos:position pos:line="80" pos:column="41"/></literal> <operator pos:line="80" pos:column="42">+<pos:position pos:line="80" pos:column="43"/></operator> <name pos:line="80" pos:column="44">serial_string<pos:position pos:line="80" pos:column="57"/></name> <operator pos:line="80" pos:column="58">+<pos:position pos:line="80" pos:column="59"/></operator> <literal type="string" pos:line="80" pos:column="60">".pem"<pos:position pos:line="80" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="67"/></argument_list></decl>;<pos:position pos:line="80" pos:column="68"/></decl_stmt>
    <if pos:line="81" pos:column="5">if <condition pos:line="81" pos:column="8">(<expr><operator pos:line="81" pos:column="9">!<pos:position pos:line="81" pos:column="10"/></operator><call><name pos:line="81" pos:column="10">writeCertAndPrivateKeyToFile<pos:position pos:line="81" pos:column="38"/></name><argument_list pos:line="81" pos:column="38">(<argument><expr><name pos:line="81" pos:column="39">cert<pos:position pos:line="81" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="45">pkey<pos:position pos:line="81" pos:column="49"/></name></expr></argument>, <argument><expr><call><name><name pos:line="81" pos:column="51">filename<pos:position pos:line="81" pos:column="59"/></name><operator pos:line="81" pos:column="59">.<pos:position pos:line="81" pos:column="60"/></operator><name pos:line="81" pos:column="60">c_str<pos:position pos:line="81" pos:column="65"/></name></name><argument_list pos:line="81" pos:column="65">()<pos:position pos:line="81" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="81" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="81" pos:column="69"/></condition><then pos:line="81" pos:column="69"> <block pos:line="81" pos:column="70">{
        <comment type="line" pos:line="82" pos:column="9">//remove row from txt_db and save</comment>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">sq_TXT_DB_delete<pos:position pos:line="83" pos:column="25"/></name><argument_list pos:line="83" pos:column="25">(<argument><expr><call><name><name pos:line="83" pos:column="26">db<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">.<pos:position pos:line="83" pos:column="29"/></operator><name pos:line="83" pos:column="29">get<pos:position pos:line="83" pos:column="32"/></name></name><argument_list pos:line="83" pos:column="32">()<pos:position pos:line="83" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="83" pos:column="36">(<pos:position pos:line="83" pos:column="37"/></operator><specifier pos:line="83" pos:column="37">const<pos:position pos:line="83" pos:column="42"/></specifier> <name pos:line="83" pos:column="43">char<pos:position pos:line="83" pos:column="47"/></name> <operator pos:line="83" pos:column="48">*<pos:position pos:line="83" pos:column="49"/></operator><operator pos:line="83" pos:column="49">*<pos:position pos:line="83" pos:column="50"/></operator><operator pos:line="83" pos:column="50">)<pos:position pos:line="83" pos:column="51"/></operator><name pos:line="83" pos:column="51">rrow<pos:position pos:line="83" pos:column="55"/></name></expr></argument>)<pos:position pos:line="83" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="84" pos:column="9">save<pos:position pos:line="84" pos:column="13"/></name><argument_list pos:line="84" pos:column="13">()<pos:position pos:line="84" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="84" pos:column="16"/></expr_stmt>
        <return pos:line="85" pos:column="9">return <expr><literal type="boolean" pos:line="85" pos:column="16">false<pos:position pos:line="85" pos:column="21"/></literal></expr>;<pos:position pos:line="85" pos:column="22"/></return>
    }<pos:position pos:line="86" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="87" pos:column="5">addSize<pos:position pos:line="87" pos:column="12"/></name><argument_list pos:line="87" pos:column="12">(<argument><expr><name pos:line="87" pos:column="13">filename<pos:position pos:line="87" pos:column="21"/></name></expr></argument>)<pos:position pos:line="87" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="23"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="89" pos:column="5">save<pos:position pos:line="89" pos:column="9"/></name><argument_list pos:line="89" pos:column="9">()<pos:position pos:line="89" pos:column="11"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="12"/></expr_stmt>
    <return pos:line="90" pos:column="5">return <expr><literal type="boolean" pos:line="90" pos:column="12">true<pos:position pos:line="90" pos:column="16"/></literal></expr>;<pos:position pos:line="90" pos:column="17"/></return>
}<pos:position pos:line="91" pos:column="2"/></block></function></unit>

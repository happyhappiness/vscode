<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7489_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">ServerOptions<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">updateContextEecdh<pos:position pos:line="2" pos:column="44"/></name></name><parameter_list pos:line="2" pos:column="44">(<parameter><decl><type><name><name pos:line="2" pos:column="45">Security<pos:position pos:line="2" pos:column="53"/></name><operator pos:line="2" pos:column="53">::<pos:position pos:line="2" pos:column="55"/></operator><name pos:line="2" pos:column="55">ContextPointer<pos:position pos:line="2" pos:column="69"/></name></name> <modifier pos:line="2" pos:column="70">&amp;<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="71">ctx<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// set Elliptic Curve details into the server context</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name><name pos:line="5" pos:column="10">eecdhCurve<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">.<pos:position pos:line="5" pos:column="21"/></operator><name pos:line="5" pos:column="21">isEmpty<pos:position pos:line="5" pos:column="28"/></name></name><argument_list pos:line="5" pos:column="28">()<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="31"/></condition><then pos:line="5" pos:column="31"> <block pos:line="5" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">83<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">9<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"Setting Ephemeral ECDH curve to "<pos:position pos:line="6" pos:column="57"/></literal> <operator pos:line="6" pos:column="58">&lt;&lt;<pos:position pos:line="6" pos:column="66"/></operator> <name pos:line="6" pos:column="61">eecdhCurve<pos:position pos:line="6" pos:column="71"/></name> <operator pos:line="6" pos:column="72">&lt;&lt;<pos:position pos:line="6" pos:column="80"/></operator> <literal type="string" pos:line="6" pos:column="75">"."<pos:position pos:line="6" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="80"/></expr_stmt>

<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">USE_OPENSSL<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">&amp;&amp;<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="20">OPENSSL_VERSION_NUMBER<pos:position pos:line="8" pos:column="42"/></name> <operator pos:line="8" pos:column="43">&gt;=<pos:position pos:line="8" pos:column="48"/></operator> <literal type="number" pos:line="8" pos:column="46">0x0090800fL<pos:position pos:line="8" pos:column="57"/></literal> <operator pos:line="8" pos:column="58">&amp;&amp;<pos:position pos:line="8" pos:column="68"/></operator> <operator pos:line="8" pos:column="61">!<pos:position pos:line="8" pos:column="62"/></operator><call><name pos:line="8" pos:column="62">defined<pos:position pos:line="8" pos:column="69"/></name><argument_list pos:line="8" pos:column="69">(<argument><expr><name pos:line="8" pos:column="70">OPENSSL_NO_ECDH<pos:position pos:line="8" pos:column="85"/></name></expr></argument>)<pos:position pos:line="8" pos:column="86"/></argument_list></call></expr></cpp:if>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">nid<pos:position pos:line="9" pos:column="16"/></name> <init pos:line="9" pos:column="17">= <expr><call><name pos:line="9" pos:column="19">OBJ_sn2nid<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><call><name><name pos:line="9" pos:column="30">eecdhCurve<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">.<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">c_str<pos:position pos:line="9" pos:column="46"/></name></name><argument_list pos:line="9" pos:column="46">()<pos:position pos:line="9" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="50"/></decl_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">nid<pos:position pos:line="10" pos:column="17"/></name></expr>)<pos:position pos:line="10" pos:column="18"/></condition><then pos:line="10" pos:column="18"> <block pos:line="10" pos:column="19">{
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">debugs<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><literal type="number" pos:line="11" pos:column="20">83<pos:position pos:line="11" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="24">DBG_CRITICAL<pos:position pos:line="11" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="38">"ERROR: Unknown EECDH curve '"<pos:position pos:line="11" pos:column="68"/></literal> <operator pos:line="11" pos:column="69">&lt;&lt;<pos:position pos:line="11" pos:column="77"/></operator> <name pos:line="11" pos:column="72">eecdhCurve<pos:position pos:line="11" pos:column="82"/></name> <operator pos:line="11" pos:column="83">&lt;&lt;<pos:position pos:line="11" pos:column="91"/></operator> <literal type="string" pos:line="11" pos:column="86">"'"<pos:position pos:line="11" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="91"/></expr_stmt>
            <return pos:line="12" pos:column="13">return;<pos:position pos:line="12" pos:column="20"/></return>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name pos:line="15" pos:column="9">auto<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">ecdh<pos:position pos:line="15" pos:column="18"/></name> <init pos:line="15" pos:column="19">= <expr><call><name pos:line="15" pos:column="21">EC_KEY_new_by_curve_name<pos:position pos:line="15" pos:column="45"/></name><argument_list pos:line="15" pos:column="45">(<argument><expr><name pos:line="15" pos:column="46">nid<pos:position pos:line="15" pos:column="49"/></name></expr></argument>)<pos:position pos:line="15" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="51"/></decl_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">ecdh<pos:position pos:line="16" pos:column="18"/></name></expr>)<pos:position pos:line="16" pos:column="19"/></condition><then pos:line="16" pos:column="19"> <block pos:line="16" pos:column="20">{
            <decl_stmt><decl><type><specifier pos:line="17" pos:column="13">const<pos:position pos:line="17" pos:column="18"/></specifier> <specifier pos:line="17" pos:column="19">auto<pos:position pos:line="17" pos:column="23"/></specifier></type> <name pos:line="17" pos:column="24">x<pos:position pos:line="17" pos:column="25"/></name> <init pos:line="17" pos:column="26">= <expr><call><name pos:line="17" pos:column="28">ERR_get_error<pos:position pos:line="17" pos:column="41"/></name><argument_list pos:line="17" pos:column="41">()<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="44"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">debugs<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><literal type="number" pos:line="18" pos:column="20">83<pos:position pos:line="18" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="24">DBG_CRITICAL<pos:position pos:line="18" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="38">"ERROR: Unable to configure Ephemeral ECDH: "<pos:position pos:line="18" pos:column="83"/></literal> <operator pos:line="18" pos:column="84">&lt;&lt;<pos:position pos:line="18" pos:column="92"/></operator> <call><name><name pos:line="18" pos:column="87">Security<pos:position pos:line="18" pos:column="95"/></name><operator pos:line="18" pos:column="95">::<pos:position pos:line="18" pos:column="97"/></operator><name pos:line="18" pos:column="97">ErrorString<pos:position pos:line="18" pos:column="108"/></name></name><argument_list pos:line="18" pos:column="108">(<argument><expr><name pos:line="18" pos:column="109">x<pos:position pos:line="18" pos:column="110"/></name></expr></argument>)<pos:position pos:line="18" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="113"/></expr_stmt>
            <return pos:line="19" pos:column="13">return;<pos:position pos:line="19" pos:column="20"/></return>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>

        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><operator pos:line="22" pos:column="13">!<pos:position pos:line="22" pos:column="14"/></operator><call><name pos:line="22" pos:column="14">SSL_CTX_set_tmp_ecdh<pos:position pos:line="22" pos:column="34"/></name><argument_list pos:line="22" pos:column="34">(<argument><expr><call><name><name pos:line="22" pos:column="35">ctx<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">.<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">get<pos:position pos:line="22" pos:column="42"/></name></name><argument_list pos:line="22" pos:column="42">()<pos:position pos:line="22" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="22" pos:column="46">ecdh<pos:position pos:line="22" pos:column="50"/></name></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="52"/></condition><then pos:line="22" pos:column="52"> <block pos:line="22" pos:column="53">{
            <decl_stmt><decl><type><specifier pos:line="23" pos:column="13">const<pos:position pos:line="23" pos:column="18"/></specifier> <specifier pos:line="23" pos:column="19">auto<pos:position pos:line="23" pos:column="23"/></specifier></type> <name pos:line="23" pos:column="24">x<pos:position pos:line="23" pos:column="25"/></name> <init pos:line="23" pos:column="26">= <expr><call><name pos:line="23" pos:column="28">ERR_get_error<pos:position pos:line="23" pos:column="41"/></name><argument_list pos:line="23" pos:column="41">()<pos:position pos:line="23" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="44"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">debugs<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><literal type="number" pos:line="24" pos:column="20">83<pos:position pos:line="24" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="24">DBG_CRITICAL<pos:position pos:line="24" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="38">"ERROR: Unable to set Ephemeral ECDH: "<pos:position pos:line="24" pos:column="77"/></literal> <operator pos:line="24" pos:column="78">&lt;&lt;<pos:position pos:line="24" pos:column="86"/></operator> <call><name><name pos:line="24" pos:column="81">Security<pos:position pos:line="24" pos:column="89"/></name><operator pos:line="24" pos:column="89">::<pos:position pos:line="24" pos:column="91"/></operator><name pos:line="24" pos:column="91">ErrorString<pos:position pos:line="24" pos:column="102"/></name></name><argument_list pos:line="24" pos:column="102">(<argument><expr><name pos:line="24" pos:column="103">x<pos:position pos:line="24" pos:column="104"/></name></expr></argument>)<pos:position pos:line="24" pos:column="105"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="107"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">EC_KEY_free<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">ecdh<pos:position pos:line="26" pos:column="25"/></name></expr></argument>)<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>

<cpp:else pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">else<pos:position pos:line="28" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">debugs<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="number" pos:line="29" pos:column="16">83<pos:position pos:line="29" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="20">DBG_CRITICAL<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="34">"ERROR: EECDH is not available in this build."<pos:position pos:line="29" pos:column="80"/></literal> <operator pos:line="29" pos:column="81">&lt;&lt;<pos:position pos:line="29" pos:column="89"/></operator>
               <literal type="string" pos:line="30" pos:column="16">" Please link against OpenSSL&gt;=0.9.8 and ensure OPENSSL_NO_ECDH is not set."<pos:position pos:line="30" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="94"/></expr_stmt>
<cpp:endif pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">endif<pos:position pos:line="31" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="34" pos:column="5">// set DH parameters into the server context</comment>
<cpp:if pos:line="35" pos:column="1">#<cpp:directive pos:line="35" pos:column="2">if<pos:position pos:line="35" pos:column="4"/></cpp:directive> <expr><name pos:line="35" pos:column="5">USE_OPENSSL<pos:position pos:line="35" pos:column="16"/></name></expr></cpp:if>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">parsedDhParams<pos:position pos:line="36" pos:column="23"/></name></expr>)<pos:position pos:line="36" pos:column="24"/></condition><then pos:line="36" pos:column="24"> <block pos:line="36" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">SSL_CTX_set_tmp_dh<pos:position pos:line="37" pos:column="27"/></name><argument_list pos:line="37" pos:column="27">(<argument><expr><call><name><name pos:line="37" pos:column="28">ctx<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">.<pos:position pos:line="37" pos:column="32"/></operator><name pos:line="37" pos:column="32">get<pos:position pos:line="37" pos:column="35"/></name></name><argument_list pos:line="37" pos:column="35">()<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="37" pos:column="39">parsedDhParams<pos:position pos:line="37" pos:column="53"/></name><operator pos:line="37" pos:column="53">.<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="54">get<pos:position pos:line="37" pos:column="57"/></name></name><argument_list pos:line="37" pos:column="57">()<pos:position pos:line="37" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if>
<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6003_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">berDecodeLoginData<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(
    <parameter><decl><type><name><name pos:line="2" pos:column="5">struct<pos:position pos:line="2" pos:column="11"/></name> <name pos:line="2" pos:column="12">berval<pos:position pos:line="2" pos:column="18"/></name></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier></type><name pos:line="2" pos:column="20">replyBV<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">int<pos:position pos:line="3" pos:column="8"/></name>      <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">serverVersion<pos:position pos:line="3" pos:column="28"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name>   <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">retDataLen<pos:position pos:line="4" pos:column="25"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="5" pos:column="5">void<pos:position pos:line="5" pos:column="9"/></name>     <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">retData<pos:position pos:line="5" pos:column="22"/></name></decl></parameter> )<pos:position pos:line="5" pos:column="24"/></parameter_list>
<block pos:line="6" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">err<pos:position pos:line="7" pos:column="12"/></name> <init pos:line="7" pos:column="13">= <expr><literal type="number" pos:line="7" pos:column="15">0<pos:position pos:line="7" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">BerElement<pos:position pos:line="8" pos:column="15"/></name> <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier></type><name pos:line="8" pos:column="17">replyBer<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><name pos:line="8" pos:column="28">NULL<pos:position pos:line="8" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name>    <modifier pos:line="9" pos:column="13">*<pos:position pos:line="9" pos:column="14"/></modifier></type><name pos:line="9" pos:column="14">retOctStr<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><name pos:line="9" pos:column="26">NULL<pos:position pos:line="9" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">size_t<pos:position pos:line="10" pos:column="11"/></name></type>  <name pos:line="10" pos:column="13">retOctStrLen<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><literal type="number" pos:line="10" pos:column="28">0<pos:position pos:line="10" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">(<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">replyBer<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">=<pos:position pos:line="12" pos:column="20"/></operator> <call><name pos:line="12" pos:column="21">ber_init<pos:position pos:line="12" pos:column="29"/></name><argument_list pos:line="12" pos:column="29">(<argument><expr><name pos:line="12" pos:column="30">replyBV<pos:position pos:line="12" pos:column="37"/></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call><operator pos:line="12" pos:column="38">)<pos:position pos:line="12" pos:column="39"/></operator> <operator pos:line="12" pos:column="40">==<pos:position pos:line="12" pos:column="42"/></operator> <name pos:line="12" pos:column="43">NULL<pos:position pos:line="12" pos:column="47"/></name></expr>)<pos:position pos:line="12" pos:column="48"/></condition><then pos:line="12" pos:column="48"> <block pos:line="12" pos:column="49">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">err<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <name pos:line="13" pos:column="15">LDAP_OPERATIONS_ERROR<pos:position pos:line="13" pos:column="36"/></name></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <elseif pos:line="14" pos:column="7">else <if pos:line="14" pos:column="12">if <condition pos:line="14" pos:column="15">(<expr><name pos:line="14" pos:column="16">retData<pos:position pos:line="14" pos:column="23"/></name></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24"> <block pos:line="14" pos:column="25">{
        <expr_stmt><expr><name pos:line="15" pos:column="9">retOctStrLen<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <operator pos:line="15" pos:column="24">*<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">retDataLen<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">+<pos:position pos:line="15" pos:column="37"/></operator> <literal type="number" pos:line="15" pos:column="38">1<pos:position pos:line="15" pos:column="39"/></literal></expr>;<pos:position pos:line="15" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">retOctStr<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <operator pos:line="16" pos:column="21">(<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">char<pos:position pos:line="16" pos:column="26"/></name><operator pos:line="16" pos:column="26">*<pos:position pos:line="16" pos:column="27"/></operator><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator><call><name pos:line="16" pos:column="28">SMB_MALLOC_ARRAY<pos:position pos:line="16" pos:column="44"/></name><argument_list pos:line="16" pos:column="44">(<argument><expr><name pos:line="16" pos:column="45">char<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">retOctStrLen<pos:position pos:line="16" pos:column="63"/></name></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><operator pos:line="17" pos:column="13">!<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="14">retOctStr<pos:position pos:line="17" pos:column="23"/></name></expr>)<pos:position pos:line="17" pos:column="24"/></condition><then pos:line="17" pos:column="24"> <block pos:line="17" pos:column="25">{
            <expr_stmt><expr><name pos:line="18" pos:column="13">err<pos:position pos:line="18" pos:column="16"/></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <name pos:line="18" pos:column="19">LDAP_OPERATIONS_ERROR<pos:position pos:line="18" pos:column="40"/></name></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then> <elseif pos:line="19" pos:column="11">else <if pos:line="19" pos:column="16">if <condition pos:line="19" pos:column="19">(<expr><call><name pos:line="19" pos:column="20">ber_scanf<pos:position pos:line="19" pos:column="29"/></name><argument_list pos:line="19" pos:column="29">(<argument><expr><name pos:line="19" pos:column="30">replyBer<pos:position pos:line="19" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="40">"{iis}"<pos:position pos:line="19" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="49">serverVersion<pos:position pos:line="19" pos:column="62"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="64">&amp;<pos:position pos:line="19" pos:column="69"/></operator><name pos:line="19" pos:column="65">err<pos:position pos:line="19" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="70">retOctStr<pos:position pos:line="19" pos:column="79"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="81">&amp;<pos:position pos:line="19" pos:column="86"/></operator><name pos:line="19" pos:column="82">retOctStrLen<pos:position pos:line="19" pos:column="94"/></name></expr></argument>)<pos:position pos:line="19" pos:column="95"/></argument_list></call> <operator pos:line="19" pos:column="96">!=<pos:position pos:line="19" pos:column="98"/></operator> <name pos:line="19" pos:column="99">LBER_ERROR<pos:position pos:line="19" pos:column="109"/></name></expr>)<pos:position pos:line="19" pos:column="110"/></condition><then pos:line="19" pos:column="110"> <block pos:line="19" pos:column="111">{
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><operator pos:line="20" pos:column="17">*<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">retDataLen<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">&gt;=<pos:position pos:line="20" pos:column="34"/></operator> <name pos:line="20" pos:column="32">retOctStrLen<pos:position pos:line="20" pos:column="44"/></name></expr>)<pos:position pos:line="20" pos:column="45"/></condition><then pos:line="20" pos:column="45"> <block pos:line="20" pos:column="46">{
                <expr_stmt><expr><call><name pos:line="21" pos:column="17">memcpy<pos:position pos:line="21" pos:column="23"/></name><argument_list pos:line="21" pos:column="23">(<argument><expr><name pos:line="21" pos:column="24">retData<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="33">retOctStr<pos:position pos:line="21" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="44">retOctStrLen<pos:position pos:line="21" pos:column="56"/></name></expr></argument>)<pos:position pos:line="21" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="58"/></expr_stmt>
            }<pos:position pos:line="22" pos:column="14"/></block></then> <elseif pos:line="22" pos:column="15">else <if pos:line="22" pos:column="20">if <condition pos:line="22" pos:column="23">(<expr><operator pos:line="22" pos:column="24">!<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">err<pos:position pos:line="22" pos:column="28"/></name></expr>)<pos:position pos:line="22" pos:column="29"/></condition><then pos:line="22" pos:column="29"> <block pos:line="22" pos:column="30">{
                <expr_stmt><expr><name pos:line="23" pos:column="17">err<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">LDAP_NO_MEMORY<pos:position pos:line="23" pos:column="37"/></name></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="24" pos:column="14"/></block></then></if></elseif></if>

            <expr_stmt><expr><operator pos:line="26" pos:column="13">*<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">retDataLen<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <name pos:line="26" pos:column="27">retOctStrLen<pos:position pos:line="26" pos:column="39"/></name></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if></elseif> <elseif pos:line="27" pos:column="11">else <if pos:line="27" pos:column="16">if <condition pos:line="27" pos:column="19">(<expr><operator pos:line="27" pos:column="20">!<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">err<pos:position pos:line="27" pos:column="24"/></name></expr>)<pos:position pos:line="27" pos:column="25"/></condition><then pos:line="27" pos:column="25"> <block pos:line="27" pos:column="26">{
            <expr_stmt><expr><name pos:line="28" pos:column="13">err<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">=<pos:position pos:line="28" pos:column="18"/></operator> <name pos:line="28" pos:column="19">LDAP_DECODING_ERROR<pos:position pos:line="28" pos:column="38"/></name></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if></elseif> <else pos:line="30" pos:column="7">else <block pos:line="30" pos:column="12">{
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">ber_scanf<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">replyBer<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="33">"{ii}"<pos:position pos:line="31" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="41">serverVersion<pos:position pos:line="31" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="56">&amp;<pos:position pos:line="31" pos:column="61"/></operator><name pos:line="31" pos:column="57">err<pos:position pos:line="31" pos:column="60"/></name></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call> <operator pos:line="31" pos:column="62">==<pos:position pos:line="31" pos:column="64"/></operator> <name pos:line="31" pos:column="65">LBER_ERROR<pos:position pos:line="31" pos:column="75"/></name></expr>)<pos:position pos:line="31" pos:column="76"/></condition><then pos:line="31" pos:column="76"> <block pos:line="31" pos:column="77">{
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><operator pos:line="32" pos:column="17">!<pos:position pos:line="32" pos:column="18"/></operator><name pos:line="32" pos:column="18">err<pos:position pos:line="32" pos:column="21"/></name></expr>)<pos:position pos:line="32" pos:column="22"/></condition><then pos:line="32" pos:column="22"> <block pos:line="32" pos:column="23">{
                <expr_stmt><expr><name pos:line="33" pos:column="17">err<pos:position pos:line="33" pos:column="20"/></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name pos:line="33" pos:column="23">LDAP_DECODING_ERROR<pos:position pos:line="33" pos:column="42"/></name></expr>;<pos:position pos:line="33" pos:column="43"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>
        }<pos:position pos:line="35" pos:column="10"/></block></then></if>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">replyBer<pos:position pos:line="38" pos:column="17"/></name></expr>)<pos:position pos:line="38" pos:column="18"/></condition><then pos:line="38" pos:column="18"> <block pos:line="38" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">ber_free<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><name pos:line="39" pos:column="18">replyBer<pos:position pos:line="39" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="28">1<pos:position pos:line="39" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">retOctStr<pos:position pos:line="42" pos:column="18"/></name> <operator pos:line="42" pos:column="19">!=<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">NULL<pos:position pos:line="42" pos:column="26"/></name></expr>)<pos:position pos:line="42" pos:column="27"/></condition><then pos:line="42" pos:column="27"> <block pos:line="42" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">memset<pos:position pos:line="43" pos:column="15"/></name><argument_list pos:line="43" pos:column="15">(<argument><expr><name pos:line="43" pos:column="16">retOctStr<pos:position pos:line="43" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="27">0<pos:position pos:line="43" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="30">retOctStrLen<pos:position pos:line="43" pos:column="42"/></name></expr></argument>)<pos:position pos:line="43" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">free<pos:position pos:line="44" pos:column="13"/></name><argument_list pos:line="44" pos:column="13">(<argument><expr><name pos:line="44" pos:column="14">retOctStr<pos:position pos:line="44" pos:column="23"/></name></expr></argument>)<pos:position pos:line="44" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">err<pos:position pos:line="47" pos:column="15"/></name></expr>;<pos:position pos:line="47" pos:column="16"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

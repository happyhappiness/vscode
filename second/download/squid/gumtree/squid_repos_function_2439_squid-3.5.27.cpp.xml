<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2439_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HeaderManglers<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">dumpReplacement<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">StoreEntry<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type> <name pos:line="2" pos:column="46">entry<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier> <name pos:line="2" pos:column="59">char<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">name<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list> <specifier pos:line="2" pos:column="71">const<pos:position pos:line="2" pos:column="76"/></specifier>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></init> <condition><expr><name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <name pos:line="4" pos:column="25">HDR_ENUM_END<pos:position pos:line="4" pos:column="37"/></name></expr>;<pos:position pos:line="4" pos:column="38"/></condition> <incr><expr><operator pos:line="4" pos:column="39">++<pos:position pos:line="4" pos:column="41"/></operator><name pos:line="4" pos:column="41">i<pos:position pos:line="4" pos:column="42"/></name></expr></incr>)<pos:position pos:line="4" pos:column="43"/></control> <block pos:line="4" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">header_mangler_dump_replacement<pos:position pos:line="5" pos:column="40"/></name><argument_list pos:line="5" pos:column="40">(<argument><expr><name pos:line="5" pos:column="41">entry<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="48">name<pos:position pos:line="5" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="54">known<pos:position pos:line="5" pos:column="59"/></name><index pos:line="5" pos:column="59">[<expr><name pos:line="5" pos:column="60">i<pos:position pos:line="5" pos:column="61"/></name></expr>]<pos:position pos:line="5" pos:column="62"/></index></name></expr></argument>,
                                        <argument><expr><call><name pos:line="6" pos:column="41">httpHeaderNameById<pos:position pos:line="6" pos:column="59"/></name><argument_list pos:line="6" pos:column="59">(<argument><expr><name pos:line="6" pos:column="60">i<pos:position pos:line="6" pos:column="61"/></name></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="64"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></for>

    <typedef pos:line="9" pos:column="5">typedef <type><name><name pos:line="9" pos:column="13">ManglersByName<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">::<pos:position pos:line="9" pos:column="29"/></operator><name pos:line="9" pos:column="29">const_iterator<pos:position pos:line="9" pos:column="43"/></name></name></type> <name pos:line="9" pos:column="44">MBNCI<pos:position pos:line="9" pos:column="49"/></name>;<pos:position pos:line="9" pos:column="50"/></typedef>
    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><decl><type><name pos:line="10" pos:column="10">MBNCI<pos:position pos:line="10" pos:column="15"/></name></type> <name pos:line="10" pos:column="16">i<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><call><name><name pos:line="10" pos:column="20">custom<pos:position pos:line="10" pos:column="26"/></name><operator pos:line="10" pos:column="26">.<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="27">begin<pos:position pos:line="10" pos:column="32"/></name></name><argument_list pos:line="10" pos:column="32">()<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="35"/></init> <condition><expr><name pos:line="10" pos:column="36">i<pos:position pos:line="10" pos:column="37"/></name> <operator pos:line="10" pos:column="38">!=<pos:position pos:line="10" pos:column="40"/></operator> <call><name><name pos:line="10" pos:column="41">custom<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">.<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="48">end<pos:position pos:line="10" pos:column="51"/></name></name><argument_list pos:line="10" pos:column="51">()<pos:position pos:line="10" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="54"/></condition> <incr><expr><operator pos:line="10" pos:column="55">++<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="57">i<pos:position pos:line="10" pos:column="58"/></name></expr></incr>)<pos:position pos:line="10" pos:column="59"/></control> <block pos:line="10" pos:column="60">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">header_mangler_dump_replacement<pos:position pos:line="11" pos:column="40"/></name><argument_list pos:line="11" pos:column="40">(<argument><expr><name pos:line="11" pos:column="41">entry<pos:position pos:line="11" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="48">name<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="54">i<pos:position pos:line="11" pos:column="55"/></name><operator pos:line="11" pos:column="55">-&gt;<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="57">second<pos:position pos:line="11" pos:column="63"/></name></name></expr></argument>,
                                        <argument><expr><call><name><name pos:line="12" pos:column="41">i<pos:position pos:line="12" pos:column="42"/></name><operator pos:line="12" pos:column="42">-&gt;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="44">first<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">.<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="50">c_str<pos:position pos:line="12" pos:column="55"/></name></name><argument_list pos:line="12" pos:column="55">()<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">header_mangler_dump_replacement<pos:position pos:line="15" pos:column="36"/></name><argument_list pos:line="15" pos:column="36">(<argument><expr><name pos:line="15" pos:column="37">entry<pos:position pos:line="15" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="44">name<pos:position pos:line="15" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="50">all<pos:position pos:line="15" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="55">"All"<pos:position pos:line="15" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="62"/></expr_stmt>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7515_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">xprof_start<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">xprof_type<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">type<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">timer<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">hrtime_t<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">tt<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name pos:line="4" pos:column="19">get_tick<pos:position pos:line="4" pos:column="27"/></name><argument_list pos:line="4" pos:column="27">()<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">xprof_inited<pos:position pos:line="5" pos:column="22"/></name></expr>)<pos:position pos:line="5" pos:column="23"/></condition><then pos:line="5" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">xprof_InitLib<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">()<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="8" pos:column="5">/* If nested, stop current stack frame */</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">cstack_head<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&gt;<pos:position pos:line="9" pos:column="25"/></operator> <literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr>)<pos:position pos:line="9" pos:column="25"/></condition><then pos:line="9" pos:column="25"> <block pos:line="9" pos:column="26">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">cstack<pos:position pos:line="10" pos:column="15"/></name><index pos:line="10" pos:column="15">[<expr><name pos:line="10" pos:column="16">cstack_head<pos:position pos:line="10" pos:column="27"/></name> <operator pos:line="10" pos:column="28">-<pos:position pos:line="10" pos:column="29"/></operator> <literal type="number" pos:line="10" pos:column="30">1<pos:position pos:line="10" pos:column="31"/></literal></expr>]<pos:position pos:line="10" pos:column="32"/></index></name><operator pos:line="10" pos:column="32">.<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">accum<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">+=<pos:position pos:line="10" pos:column="41"/></operator> <call><name pos:line="10" pos:column="42">get_tick<pos:position pos:line="10" pos:column="50"/></name><argument_list pos:line="10" pos:column="50">()<pos:position pos:line="10" pos:column="52"/></argument_list></call> <operator pos:line="10" pos:column="53">-<pos:position pos:line="10" pos:column="54"/></operator> <name><name pos:line="10" pos:column="55">cstack<pos:position pos:line="10" pos:column="61"/></name><index pos:line="10" pos:column="61">[<expr><name pos:line="10" pos:column="62">cstack_head<pos:position pos:line="10" pos:column="73"/></name> <operator pos:line="10" pos:column="74">-<pos:position pos:line="10" pos:column="75"/></operator> <literal type="number" pos:line="10" pos:column="76">1<pos:position pos:line="10" pos:column="77"/></literal></expr>]<pos:position pos:line="10" pos:column="78"/></index></name><operator pos:line="10" pos:column="78">.<pos:position pos:line="10" pos:column="79"/></operator><name pos:line="10" pos:column="79">start<pos:position pos:line="10" pos:column="84"/></name></expr>;<pos:position pos:line="10" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">cstack<pos:position pos:line="11" pos:column="15"/></name><index pos:line="11" pos:column="15">[<expr><name pos:line="11" pos:column="16">cstack_head<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">-<pos:position pos:line="11" pos:column="29"/></operator> <literal type="number" pos:line="11" pos:column="30">1<pos:position pos:line="11" pos:column="31"/></literal></expr>]<pos:position pos:line="11" pos:column="32"/></index></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">start<pos:position pos:line="11" pos:column="38"/></name> <operator pos:line="11" pos:column="39">=<pos:position pos:line="11" pos:column="40"/></operator> <operator pos:line="11" pos:column="41">-<pos:position pos:line="11" pos:column="42"/></operator><literal type="number" pos:line="11" pos:column="42">1<pos:position pos:line="11" pos:column="43"/></literal></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="14" pos:column="5">/* Are we at the first level? If so; stop the unaccounted timer */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">cstack_head<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">==<pos:position pos:line="15" pos:column="23"/></operator> <literal type="number" pos:line="15" pos:column="24">0<pos:position pos:line="15" pos:column="25"/></literal></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <block pos:line="15" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">assert<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name><name pos:line="16" pos:column="16">xp_UNACCOUNTED<pos:position pos:line="16" pos:column="30"/></name><operator pos:line="16" pos:column="30">-&gt;<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="32">start<pos:position pos:line="16" pos:column="37"/></name></name> <operator pos:line="16" pos:column="38">!=<pos:position pos:line="16" pos:column="40"/></operator> <operator pos:line="16" pos:column="41">-<pos:position pos:line="16" pos:column="42"/></operator><literal type="number" pos:line="16" pos:column="42">1<pos:position pos:line="16" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">xp_UNACCOUNTED<pos:position pos:line="17" pos:column="23"/></name><operator pos:line="17" pos:column="23">-&gt;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="25">delta<pos:position pos:line="17" pos:column="30"/></name></name> <operator pos:line="17" pos:column="31">=<pos:position pos:line="17" pos:column="32"/></operator> <name pos:line="17" pos:column="33">tt<pos:position pos:line="17" pos:column="35"/></name> <operator pos:line="17" pos:column="36">-<pos:position pos:line="17" pos:column="37"/></operator> <name><name pos:line="17" pos:column="38">xp_UNACCOUNTED<pos:position pos:line="17" pos:column="52"/></name><operator pos:line="17" pos:column="52">-&gt;<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="54">start<pos:position pos:line="17" pos:column="59"/></name></name></expr>;<pos:position pos:line="17" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">xp_UNACCOUNTED<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">start<pos:position pos:line="18" pos:column="30"/></name></name> <operator pos:line="18" pos:column="31">=<pos:position pos:line="18" pos:column="32"/></operator> <operator pos:line="18" pos:column="33">-<pos:position pos:line="18" pos:column="34"/></operator><literal type="number" pos:line="18" pos:column="34">1<pos:position pos:line="18" pos:column="35"/></literal></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">xprof_update<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">xp_UNACCOUNTED<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="22" pos:column="5">/* Allocate new stack frame */</comment>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">cstack<pos:position pos:line="23" pos:column="11"/></name><index pos:line="23" pos:column="11">[<expr><name pos:line="23" pos:column="12">cstack_head<pos:position pos:line="23" pos:column="23"/></name></expr>]<pos:position pos:line="23" pos:column="24"/></index></name><operator pos:line="23" pos:column="24">.<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="25">start<pos:position pos:line="23" pos:column="30"/></name> <operator pos:line="23" pos:column="31">=<pos:position pos:line="23" pos:column="32"/></operator> <name pos:line="23" pos:column="33">tt<pos:position pos:line="23" pos:column="35"/></name></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">cstack<pos:position pos:line="24" pos:column="11"/></name><index pos:line="24" pos:column="11">[<expr><name pos:line="24" pos:column="12">cstack_head<pos:position pos:line="24" pos:column="23"/></name></expr>]<pos:position pos:line="24" pos:column="24"/></index></name><operator pos:line="24" pos:column="24">.<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">stop<pos:position pos:line="24" pos:column="29"/></name> <operator pos:line="24" pos:column="30">=<pos:position pos:line="24" pos:column="31"/></operator> <operator pos:line="24" pos:column="32">-<pos:position pos:line="24" pos:column="33"/></operator><literal type="number" pos:line="24" pos:column="33">1<pos:position pos:line="24" pos:column="34"/></literal></expr>;<pos:position pos:line="24" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">cstack<pos:position pos:line="25" pos:column="11"/></name><index pos:line="25" pos:column="11">[<expr><name pos:line="25" pos:column="12">cstack_head<pos:position pos:line="25" pos:column="23"/></name></expr>]<pos:position pos:line="25" pos:column="24"/></index></name><operator pos:line="25" pos:column="24">.<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">accum<pos:position pos:line="25" pos:column="30"/></name> <operator pos:line="25" pos:column="31">=<pos:position pos:line="25" pos:column="32"/></operator> <literal type="number" pos:line="25" pos:column="33">0<pos:position pos:line="25" pos:column="34"/></literal></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="26" pos:column="5">cstack<pos:position pos:line="26" pos:column="11"/></name><index pos:line="26" pos:column="11">[<expr><name pos:line="26" pos:column="12">cstack_head<pos:position pos:line="26" pos:column="23"/></name></expr>]<pos:position pos:line="26" pos:column="24"/></index></name><operator pos:line="26" pos:column="24">.<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="25">timer<pos:position pos:line="26" pos:column="30"/></name> <operator pos:line="26" pos:column="31">=<pos:position pos:line="26" pos:column="32"/></operator> <name pos:line="26" pos:column="33">type<pos:position pos:line="26" pos:column="37"/></name></expr>;<pos:position pos:line="26" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">cstack<pos:position pos:line="27" pos:column="11"/></name><index pos:line="27" pos:column="11">[<expr><name pos:line="27" pos:column="12">cstack_head<pos:position pos:line="27" pos:column="23"/></name></expr>]<pos:position pos:line="27" pos:column="24"/></index></name><operator pos:line="27" pos:column="24">.<pos:position pos:line="27" pos:column="25"/></operator><name pos:line="27" pos:column="25">name<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <name pos:line="27" pos:column="32">timer<pos:position pos:line="27" pos:column="37"/></name></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="28" pos:column="5">++<pos:position pos:line="28" pos:column="7"/></operator><name pos:line="28" pos:column="7">cstack_head<pos:position pos:line="28" pos:column="18"/></name></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">assert<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><name pos:line="29" pos:column="12">cstack_head<pos:position pos:line="29" pos:column="23"/></name> <operator pos:line="29" pos:column="24">&lt;<pos:position pos:line="29" pos:column="28"/></operator> <name pos:line="29" pos:column="26">MAXSTACKDEPTH<pos:position pos:line="29" pos:column="39"/></name></expr></argument>)<pos:position pos:line="29" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="41"/></expr_stmt>

}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

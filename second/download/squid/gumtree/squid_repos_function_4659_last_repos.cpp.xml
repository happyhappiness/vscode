<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4659_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Server<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">setReply<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">int<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">code<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">msg<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Http<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">::<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">StreamPointer<pos:position pos:line="4" pos:column="24"/></name></name></type> <name pos:line="4" pos:column="25">context<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><call><name><name pos:line="4" pos:column="35">pipeline<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">.<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">front<pos:position pos:line="4" pos:column="49"/></name></name><argument_list pos:line="4" pos:column="49">()<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ClientHttpRequest<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier><specifier pos:line="5" pos:column="24">const<pos:position pos:line="5" pos:column="29"/></specifier></type> <name pos:line="5" pos:column="30">http<pos:position pos:line="5" pos:column="34"/></name> <init pos:line="5" pos:column="35">= <expr><name><name pos:line="5" pos:column="37">context<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">-&gt;<pos:position pos:line="5" pos:column="49"/></operator><name pos:line="5" pos:column="46">http<pos:position pos:line="5" pos:column="50"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">http<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">!=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><call><name><name pos:line="7" pos:column="12">http<pos:position pos:line="7" pos:column="16"/></name><operator pos:line="7" pos:column="16">-&gt;<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="18">storeEntry<pos:position pos:line="7" pos:column="28"/></name></name><argument_list pos:line="7" pos:column="28">()<pos:position pos:line="7" pos:column="30"/></argument_list></call> <operator pos:line="7" pos:column="31">==<pos:position pos:line="7" pos:column="33"/></operator> <name pos:line="7" pos:column="34">NULL<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">HttpReply<pos:position pos:line="9" pos:column="14"/></name> <modifier pos:line="9" pos:column="15">*<pos:position pos:line="9" pos:column="16"/></modifier><specifier pos:line="9" pos:column="16">const<pos:position pos:line="9" pos:column="21"/></specifier></type> <name pos:line="9" pos:column="22">reply<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><call><name><name pos:line="9" pos:column="30">Ftp<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">::<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">HttpReplyWrapper<pos:position pos:line="9" pos:column="51"/></name></name><argument_list pos:line="9" pos:column="51">(<argument><expr><name pos:line="9" pos:column="52">code<pos:position pos:line="9" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="58">msg<pos:position pos:line="9" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="63">Http<pos:position pos:line="9" pos:column="67"/></name><operator pos:line="9" pos:column="67">::<pos:position pos:line="9" pos:column="69"/></operator><name pos:line="9" pos:column="69">scNoContent<pos:position pos:line="9" pos:column="80"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="82">0<pos:position pos:line="9" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="85"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">setLogUri<pos:position pos:line="11" pos:column="14"/></name><argument_list pos:line="11" pos:column="14">(<argument><expr><name pos:line="11" pos:column="15">http<pos:position pos:line="11" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="11" pos:column="21">urlCanonicalClean<pos:position pos:line="11" pos:column="38"/></name><argument_list pos:line="11" pos:column="38">(<argument><expr><name><name pos:line="11" pos:column="39">http<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">request<pos:position pos:line="11" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="55"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">clientStreamNode<pos:position pos:line="13" pos:column="21"/></name> <modifier pos:line="13" pos:column="22">*<pos:position pos:line="13" pos:column="23"/></modifier><specifier pos:line="13" pos:column="23">const<pos:position pos:line="13" pos:column="28"/></specifier></type> <name pos:line="13" pos:column="29">node<pos:position pos:line="13" pos:column="33"/></name> <init pos:line="13" pos:column="34">= <expr><call><name><name pos:line="13" pos:column="36">context<pos:position pos:line="13" pos:column="43"/></name><operator pos:line="13" pos:column="43">-&gt;<pos:position pos:line="13" pos:column="48"/></operator><name pos:line="13" pos:column="45">getClientReplyContext<pos:position pos:line="13" pos:column="66"/></name></name><argument_list pos:line="13" pos:column="66">()<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="69"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">clientReplyContext<pos:position pos:line="14" pos:column="23"/></name> <modifier pos:line="14" pos:column="24">*<pos:position pos:line="14" pos:column="25"/></modifier><specifier pos:line="14" pos:column="25">const<pos:position pos:line="14" pos:column="30"/></specifier></type> <name pos:line="14" pos:column="31">repContext<pos:position pos:line="14" pos:column="41"/></name> <init pos:line="14" pos:column="42">=
        <expr><cast type="dynamic" pos:line="15" pos:column="9">dynamic_cast<argument_list type="generic" pos:line="15" pos:column="21">&lt;<argument><expr><name pos:line="15" pos:column="22">clientReplyContext<pos:position pos:line="15" pos:column="40"/></name> <operator pos:line="15" pos:column="41">*<pos:position pos:line="15" pos:column="42"/></operator></expr></argument>&gt;<pos:position pos:line="15" pos:column="46"/></argument_list><argument_list pos:line="15" pos:column="43">(<argument><expr><call><name><name pos:line="15" pos:column="44">node<pos:position pos:line="15" pos:column="48"/></name><operator pos:line="15" pos:column="48">-&gt;<pos:position pos:line="15" pos:column="53"/></operator><name pos:line="15" pos:column="50">data<pos:position pos:line="15" pos:column="54"/></name><operator pos:line="15" pos:column="54">.<pos:position pos:line="15" pos:column="55"/></operator><name pos:line="15" pos:column="55">getRaw<pos:position pos:line="15" pos:column="61"/></name></name><argument_list pos:line="15" pos:column="61">()<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="15" pos:column="65"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">assert<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><name pos:line="16" pos:column="12">repContext<pos:position pos:line="16" pos:column="22"/></name> <operator pos:line="16" pos:column="23">!=<pos:position pos:line="16" pos:column="25"/></operator> <name pos:line="16" pos:column="26">NULL<pos:position pos:line="16" pos:column="30"/></name></expr></argument>)<pos:position pos:line="16" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="18" pos:column="5">RequestFlags<pos:position pos:line="18" pos:column="17"/></name></type> <name pos:line="18" pos:column="18">reqFlags<pos:position pos:line="18" pos:column="26"/></name></decl>;<pos:position pos:line="18" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">reqFlags<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">.<pos:position pos:line="19" pos:column="14"/></operator><name pos:line="19" pos:column="14">cachable<pos:position pos:line="19" pos:column="22"/></name></name> <operator pos:line="19" pos:column="23">=<pos:position pos:line="19" pos:column="24"/></operator> <literal type="boolean" pos:line="19" pos:column="25">false<pos:position pos:line="19" pos:column="30"/></literal></expr>;<pos:position pos:line="19" pos:column="31"/></expr_stmt> <comment type="line" pos:line="19" pos:column="32">// force releaseRequest() in storeCreateEntry()</comment>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">reqFlags<pos:position pos:line="20" pos:column="13"/></name><operator pos:line="20" pos:column="13">.<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">noCache<pos:position pos:line="20" pos:column="21"/></name></name> <operator pos:line="20" pos:column="22">=<pos:position pos:line="20" pos:column="23"/></operator> <literal type="boolean" pos:line="20" pos:column="24">true<pos:position pos:line="20" pos:column="28"/></literal></expr>;<pos:position pos:line="20" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="21" pos:column="5">repContext<pos:position pos:line="21" pos:column="15"/></name><operator pos:line="21" pos:column="15">-&gt;<pos:position pos:line="21" pos:column="20"/></operator><name pos:line="21" pos:column="17">createStoreEntry<pos:position pos:line="21" pos:column="33"/></name></name><argument_list pos:line="21" pos:column="33">(<argument><expr><name><name pos:line="21" pos:column="34">http<pos:position pos:line="21" pos:column="38"/></name><operator pos:line="21" pos:column="38">-&gt;<pos:position pos:line="21" pos:column="43"/></operator><name pos:line="21" pos:column="40">request<pos:position pos:line="21" pos:column="47"/></name><operator pos:line="21" pos:column="47">-&gt;<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="49">method<pos:position pos:line="21" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="57">reqFlags<pos:position pos:line="21" pos:column="65"/></name></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">http<pos:position pos:line="22" pos:column="9"/></name><operator pos:line="22" pos:column="9">-&gt;<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="11">storeEntry<pos:position pos:line="22" pos:column="21"/></name></name><argument_list pos:line="22" pos:column="21">()<pos:position pos:line="22" pos:column="23"/></argument_list></call><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><call><name pos:line="22" pos:column="25">replaceHttpReply<pos:position pos:line="22" pos:column="41"/></name><argument_list pos:line="22" pos:column="41">(<argument><expr><name pos:line="22" pos:column="42">reply<pos:position pos:line="22" pos:column="47"/></name></expr></argument>)<pos:position pos:line="22" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="49"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

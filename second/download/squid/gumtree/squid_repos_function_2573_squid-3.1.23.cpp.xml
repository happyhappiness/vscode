<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2573_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ftpReadList<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">FtpStateData<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type> <name pos:line="2" pos:column="28">ftpState<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">code<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name><name pos:line="4" pos:column="16">ftpState<pos:position pos:line="4" pos:column="24"/></name><operator pos:line="4" pos:column="24">-&gt;<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="26">ctrl<pos:position pos:line="4" pos:column="30"/></name><operator pos:line="4" pos:column="30">.<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">replycode<pos:position pos:line="4" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">9<pos:position pos:line="5" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="15">3<pos:position pos:line="5" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="18">HERE<pos:position pos:line="5" pos:column="22"/></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">code<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">==<pos:position pos:line="7" pos:column="16"/></operator> <literal type="number" pos:line="7" pos:column="17">125<pos:position pos:line="7" pos:column="20"/></literal> <operator pos:line="7" pos:column="21">||<pos:position pos:line="7" pos:column="23"/></operator> <operator pos:line="7" pos:column="24">(<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">code<pos:position pos:line="7" pos:column="29"/></name> <operator pos:line="7" pos:column="30">==<pos:position pos:line="7" pos:column="32"/></operator> <literal type="number" pos:line="7" pos:column="33">150<pos:position pos:line="7" pos:column="36"/></literal> <operator pos:line="7" pos:column="37">&amp;&amp;<pos:position pos:line="7" pos:column="47"/></operator> <name><name pos:line="7" pos:column="40">ftpState<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">-&gt;<pos:position pos:line="7" pos:column="53"/></operator><name pos:line="7" pos:column="50">data<pos:position pos:line="7" pos:column="54"/></name><operator pos:line="7" pos:column="54">.<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="55">host<pos:position pos:line="7" pos:column="59"/></name></name><operator pos:line="7" pos:column="59">)<pos:position pos:line="7" pos:column="60"/></operator></expr>)<pos:position pos:line="7" pos:column="61"/></condition><then pos:line="7" pos:column="61"> <block pos:line="7" pos:column="62">{
        <comment type="block" pos:line="8" pos:column="9">/* Begin data transfer */</comment>
        <comment type="block" pos:line="9" pos:column="9">/* XXX what about Config.Timeout.read? */</comment>
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">ftpState<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">maybeReadVirginBody<pos:position pos:line="10" pos:column="38"/></name></name><argument_list pos:line="10" pos:column="38">()<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">ftpState<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">-&gt;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="19">state<pos:position pos:line="11" pos:column="24"/></name></name> <operator pos:line="11" pos:column="25">=<pos:position pos:line="11" pos:column="26"/></operator> <name pos:line="11" pos:column="27">READING_DATA<pos:position pos:line="11" pos:column="39"/></name></expr>;<pos:position pos:line="11" pos:column="40"/></expr_stmt>
        <comment type="block" pos:line="12" pos:column="9">/*
         * Cancel the timeout on the Control socket and establish one
         * on the data socket
         */</comment>
        <decl_stmt><decl><type><name><name pos:line="16" pos:column="9">AsyncCall<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">::<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">Pointer<pos:position pos:line="16" pos:column="27"/></name></name></type> <name pos:line="16" pos:column="28">nullCall<pos:position pos:line="16" pos:column="36"/></name> <init pos:line="16" pos:column="37">= <expr><name pos:line="16" pos:column="39">NULL<pos:position pos:line="16" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="44"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">commSetTimeout<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name><name pos:line="17" pos:column="24">ftpState<pos:position pos:line="17" pos:column="32"/></name><operator pos:line="17" pos:column="32">-&gt;<pos:position pos:line="17" pos:column="37"/></operator><name pos:line="17" pos:column="34">ctrl<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">.<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">fd<pos:position pos:line="17" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="43">-<pos:position pos:line="17" pos:column="44"/></operator><literal type="number" pos:line="17" pos:column="44">1<pos:position pos:line="17" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="47">nullCall<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>
        <return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <elseif pos:line="19" pos:column="7">else <if pos:line="19" pos:column="12">if <condition pos:line="19" pos:column="15">(<expr><name pos:line="19" pos:column="16">code<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">==<pos:position pos:line="19" pos:column="23"/></operator> <literal type="number" pos:line="19" pos:column="24">150<pos:position pos:line="19" pos:column="27"/></literal></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28"> <block pos:line="19" pos:column="29">{
        <comment type="block" pos:line="20" pos:column="9">/* Accept data channel */</comment>
        <typedef pos:line="21" pos:column="9">typedef <type><name><name pos:line="21" pos:column="17">CommCbMemFunT<pos:position pos:line="21" pos:column="30"/></name><argument_list type="generic" pos:line="21" pos:column="30">&lt;<argument><expr><name pos:line="21" pos:column="31">FtpStateData<pos:position pos:line="21" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="45">CommAcceptCbParams<pos:position pos:line="21" pos:column="63"/></name></expr></argument>&gt;<pos:position pos:line="21" pos:column="67"/></argument_list></name></type> <name pos:line="21" pos:column="65">acceptDialer<pos:position pos:line="21" pos:column="77"/></name>;<pos:position pos:line="21" pos:column="78"/></typedef>
        <decl_stmt><decl><type><name><name pos:line="22" pos:column="9">AsyncCall<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">::<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="20">Pointer<pos:position pos:line="22" pos:column="27"/></name></name></type> <name pos:line="22" pos:column="28">acceptCall<pos:position pos:line="22" pos:column="38"/></name> <init pos:line="22" pos:column="39">= <expr><call><name pos:line="22" pos:column="41">JobCallback<pos:position pos:line="22" pos:column="52"/></name><argument_list pos:line="22" pos:column="52">(<argument><expr><literal type="number" pos:line="22" pos:column="53">11<pos:position pos:line="22" pos:column="55"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="57">5<pos:position pos:line="22" pos:column="58"/></literal></expr></argument>,
                                        <argument><expr><name pos:line="23" pos:column="41">acceptDialer<pos:position pos:line="23" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="55">ftpState<pos:position pos:line="23" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="65">FtpStateData<pos:position pos:line="23" pos:column="77"/></name><operator pos:line="23" pos:column="77">::<pos:position pos:line="23" pos:column="79"/></operator><name pos:line="23" pos:column="79">ftpAcceptDataConnection<pos:position pos:line="23" pos:column="102"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="103"/></argument_list></call></expr></init></decl>;<pos:position pos:line="23" pos:column="104"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="25" pos:column="9">comm_accept<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name><name pos:line="25" pos:column="21">ftpState<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">-&gt;<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="31">data<pos:position pos:line="25" pos:column="35"/></name><operator pos:line="25" pos:column="35">.<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="36">fd<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="40">acceptCall<pos:position pos:line="25" pos:column="50"/></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>
        <comment type="block" pos:line="26" pos:column="9">/*
         * Cancel the timeout on the Control socket and establish one
         * on the data socket
         */</comment>
        <decl_stmt><decl><type><name><name pos:line="30" pos:column="9">AsyncCall<pos:position pos:line="30" pos:column="18"/></name><operator pos:line="30" pos:column="18">::<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="20">Pointer<pos:position pos:line="30" pos:column="27"/></name></name></type> <name pos:line="30" pos:column="28">nullCall<pos:position pos:line="30" pos:column="36"/></name> <init pos:line="30" pos:column="37">= <expr><name pos:line="30" pos:column="39">NULL<pos:position pos:line="30" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="44"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">commSetTimeout<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><name><name pos:line="31" pos:column="24">ftpState<pos:position pos:line="31" pos:column="32"/></name><operator pos:line="31" pos:column="32">-&gt;<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="34">ctrl<pos:position pos:line="31" pos:column="38"/></name><operator pos:line="31" pos:column="38">.<pos:position pos:line="31" pos:column="39"/></operator><name pos:line="31" pos:column="39">fd<pos:position pos:line="31" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="43">-<pos:position pos:line="31" pos:column="44"/></operator><literal type="number" pos:line="31" pos:column="44">1<pos:position pos:line="31" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="47">nullCall<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="57"/></expr_stmt>

        <typedef pos:line="33" pos:column="9">typedef <type><name><name pos:line="33" pos:column="17">CommCbMemFunT<pos:position pos:line="33" pos:column="30"/></name><argument_list type="generic" pos:line="33" pos:column="30">&lt;<argument><expr><name pos:line="33" pos:column="31">FtpStateData<pos:position pos:line="33" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="45">CommTimeoutCbParams<pos:position pos:line="33" pos:column="64"/></name></expr></argument>&gt;<pos:position pos:line="33" pos:column="68"/></argument_list></name></type> <name pos:line="33" pos:column="66">TimeoutDialer<pos:position pos:line="33" pos:column="79"/></name>;<pos:position pos:line="33" pos:column="80"/></typedef>
        <decl_stmt><decl><type><name><name pos:line="34" pos:column="9">AsyncCall<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">::<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="20">Pointer<pos:position pos:line="34" pos:column="27"/></name></name></type> <name pos:line="34" pos:column="28">timeoutCall<pos:position pos:line="34" pos:column="39"/></name> <init pos:line="34" pos:column="40">=  <expr><call><name pos:line="34" pos:column="43">JobCallback<pos:position pos:line="34" pos:column="54"/></name><argument_list pos:line="34" pos:column="54">(<argument><expr><literal type="number" pos:line="34" pos:column="55">9<pos:position pos:line="34" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="58">5<pos:position pos:line="34" pos:column="59"/></literal></expr></argument>,
                                          <argument><expr><name pos:line="35" pos:column="43">TimeoutDialer<pos:position pos:line="35" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="58">ftpState<pos:position pos:line="35" pos:column="66"/></name></expr></argument>,<argument><expr><name><name pos:line="35" pos:column="67">FtpStateData<pos:position pos:line="35" pos:column="79"/></name><operator pos:line="35" pos:column="79">::<pos:position pos:line="35" pos:column="81"/></operator><name pos:line="35" pos:column="81">ftpTimeout<pos:position pos:line="35" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="92"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="93"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">commSetTimeout<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name><name pos:line="36" pos:column="24">ftpState<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">data<pos:position pos:line="36" pos:column="38"/></name><operator pos:line="36" pos:column="38">.<pos:position pos:line="36" pos:column="39"/></operator><name pos:line="36" pos:column="39">fd<pos:position pos:line="36" pos:column="41"/></name></name></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="43">Config<pos:position pos:line="36" pos:column="49"/></name><operator pos:line="36" pos:column="49">.<pos:position pos:line="36" pos:column="50"/></operator><name pos:line="36" pos:column="50">Timeout<pos:position pos:line="36" pos:column="57"/></name><operator pos:line="36" pos:column="57">.<pos:position pos:line="36" pos:column="58"/></operator><name pos:line="36" pos:column="58">read<pos:position pos:line="36" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="64">timeoutCall<pos:position pos:line="36" pos:column="75"/></name></expr></argument>)<pos:position pos:line="36" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="77"/></expr_stmt>
        <return pos:line="37" pos:column="9">return;<pos:position pos:line="37" pos:column="16"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></then></if></elseif> <elseif pos:line="38" pos:column="7">else <if pos:line="38" pos:column="12">if <condition pos:line="38" pos:column="15">(<expr><operator pos:line="38" pos:column="16">!<pos:position pos:line="38" pos:column="17"/></operator><name><name pos:line="38" pos:column="17">ftpState<pos:position pos:line="38" pos:column="25"/></name><operator pos:line="38" pos:column="25">-&gt;<pos:position pos:line="38" pos:column="30"/></operator><name pos:line="38" pos:column="27">flags<pos:position pos:line="38" pos:column="32"/></name><operator pos:line="38" pos:column="32">.<pos:position pos:line="38" pos:column="33"/></operator><name pos:line="38" pos:column="33">tried_nlst<pos:position pos:line="38" pos:column="43"/></name></name> <operator pos:line="38" pos:column="44">&amp;&amp;<pos:position pos:line="38" pos:column="54"/></operator> <name pos:line="38" pos:column="47">code<pos:position pos:line="38" pos:column="51"/></name> <operator pos:line="38" pos:column="52">&gt;<pos:position pos:line="38" pos:column="56"/></operator> <literal type="number" pos:line="38" pos:column="54">300<pos:position pos:line="38" pos:column="57"/></literal></expr>)<pos:position pos:line="38" pos:column="58"/></condition><then pos:line="38" pos:column="58"> <block pos:line="38" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">ftpSendNlst<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">ftpState<pos:position pos:line="39" pos:column="29"/></name></expr></argument>)<pos:position pos:line="39" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif> <else pos:line="40" pos:column="7">else <block pos:line="40" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">ftpFail<pos:position pos:line="41" pos:column="16"/></name><argument_list pos:line="41" pos:column="16">(<argument><expr><name pos:line="41" pos:column="17">ftpState<pos:position pos:line="41" pos:column="25"/></name></expr></argument>)<pos:position pos:line="41" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="27"/></expr_stmt>
        <return pos:line="42" pos:column="9">return;<pos:position pos:line="42" pos:column="16"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></else></if>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2467_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ipcache_addrs<pos:position pos:line="1" pos:column="14"/></name> <modifier pos:line="1" pos:column="15">*<pos:position pos:line="1" pos:column="16"/></modifier></type>
<name pos:line="2" pos:column="1">ipcacheCheckNumeric<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">name<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ip<pos:position pos:line="4" pos:column="7"/></name><operator pos:line="4" pos:column="7">::<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">Address<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">ip<pos:position pos:line="4" pos:column="19"/></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* check if it's already a IP address in text form. */</comment>

    <comment type="block" pos:line="7" pos:column="5">/* it may be IPv6-wrapped */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">name<pos:position pos:line="8" pos:column="13"/></name><index pos:line="8" pos:column="13">[<expr><literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>]<pos:position pos:line="8" pos:column="16"/></index></name> <operator pos:line="8" pos:column="17">==<pos:position pos:line="8" pos:column="19"/></operator> <literal type="char" pos:line="8" pos:column="20">'['<pos:position pos:line="8" pos:column="23"/></literal></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">char<pos:position pos:line="9" pos:column="13"/></name> <modifier pos:line="9" pos:column="14">*<pos:position pos:line="9" pos:column="15"/></modifier></type><name pos:line="9" pos:column="15">tmp<pos:position pos:line="9" pos:column="18"/></name> <init pos:line="9" pos:column="19">= <expr><call><name pos:line="9" pos:column="21">xstrdup<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><operator pos:line="9" pos:column="29">&amp;<pos:position pos:line="9" pos:column="34"/></operator><name><name pos:line="9" pos:column="30">name<pos:position pos:line="9" pos:column="34"/></name><index pos:line="9" pos:column="34">[<expr><literal type="number" pos:line="9" pos:column="35">1<pos:position pos:line="9" pos:column="36"/></literal></expr>]<pos:position pos:line="9" pos:column="37"/></index></name></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="39"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">tmp<pos:position pos:line="10" pos:column="12"/></name><index pos:line="10" pos:column="12">[<expr><call><name pos:line="10" pos:column="13">strlen<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">tmp<pos:position pos:line="10" pos:column="23"/></name></expr></argument>)<pos:position pos:line="10" pos:column="24"/></argument_list></call><operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>]<pos:position pos:line="10" pos:column="27"/></index></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <literal type="char" pos:line="10" pos:column="30">'\0'<pos:position pos:line="10" pos:column="34"/></literal></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><operator pos:line="11" pos:column="14">(<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">ip<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">tmp<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">)<pos:position pos:line="11" pos:column="24"/></operator></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{
            <expr_stmt><expr><operator pos:line="12" pos:column="13">delete<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">tmp<pos:position pos:line="12" pos:column="23"/></name></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
            <return pos:line="13" pos:column="13">return <expr><name pos:line="13" pos:column="20">NULL<pos:position pos:line="13" pos:column="24"/></name></expr>;<pos:position pos:line="13" pos:column="25"/></return>
        }<pos:position pos:line="14" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="15" pos:column="9">delete<pos:position pos:line="15" pos:column="15"/></operator> <name pos:line="15" pos:column="16">tmp<pos:position pos:line="15" pos:column="19"/></name></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then> <elseif pos:line="16" pos:column="7">else <if pos:line="16" pos:column="12">if <condition pos:line="16" pos:column="15">(<expr><operator pos:line="16" pos:column="16">!<pos:position pos:line="16" pos:column="17"/></operator><operator pos:line="16" pos:column="17">(<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">ip<pos:position pos:line="16" pos:column="20"/></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">name<pos:position pos:line="16" pos:column="27"/></name><operator pos:line="16" pos:column="27">)<pos:position pos:line="16" pos:column="28"/></operator></expr>)<pos:position pos:line="16" pos:column="29"/></condition><then pos:line="16" pos:column="29">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><name pos:line="17" pos:column="16">NULL<pos:position pos:line="17" pos:column="20"/></name></expr>;<pos:position pos:line="17" pos:column="21"/></return></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">14<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="16">4<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"ipcacheCheckNumeric: HIT_BYPASS for '"<pos:position pos:line="19" pos:column="58"/></literal> <operator pos:line="19" pos:column="59">&lt;&lt;<pos:position pos:line="19" pos:column="67"/></operator> <name pos:line="19" pos:column="62">name<pos:position pos:line="19" pos:column="66"/></name> <operator pos:line="19" pos:column="67">&lt;&lt;<pos:position pos:line="19" pos:column="75"/></operator> <literal type="string" pos:line="19" pos:column="70">"' == "<pos:position pos:line="19" pos:column="77"/></literal> <operator pos:line="19" pos:column="78">&lt;&lt;<pos:position pos:line="19" pos:column="86"/></operator> <name pos:line="19" pos:column="81">ip<pos:position pos:line="19" pos:column="83"/></name></expr></argument> )<pos:position pos:line="19" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="86"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="21" pos:column="5">static_addrs<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">.<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">count<pos:position pos:line="21" pos:column="23"/></name></name> <operator pos:line="21" pos:column="24">=<pos:position pos:line="21" pos:column="25"/></operator> <literal type="number" pos:line="21" pos:column="26">1<pos:position pos:line="21" pos:column="27"/></literal></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="23" pos:column="5">static_addrs<pos:position pos:line="23" pos:column="17"/></name><operator pos:line="23" pos:column="17">.<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">cur<pos:position pos:line="23" pos:column="21"/></name></name> <operator pos:line="23" pos:column="22">=<pos:position pos:line="23" pos:column="23"/></operator> <literal type="number" pos:line="23" pos:column="24">0<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="25" pos:column="5">static_addrs<pos:position pos:line="25" pos:column="17"/></name><operator pos:line="25" pos:column="17">.<pos:position pos:line="25" pos:column="18"/></operator><name pos:line="25" pos:column="18">in_addrs<pos:position pos:line="25" pos:column="26"/></name><index pos:line="25" pos:column="26">[<expr><literal type="number" pos:line="25" pos:column="27">0<pos:position pos:line="25" pos:column="28"/></literal></expr>]<pos:position pos:line="25" pos:column="29"/></index></name> <operator pos:line="25" pos:column="30">=<pos:position pos:line="25" pos:column="31"/></operator> <name pos:line="25" pos:column="32">ip<pos:position pos:line="25" pos:column="34"/></name></expr>;<pos:position pos:line="25" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">static_addrs<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">.<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">bad_mask<pos:position pos:line="27" pos:column="26"/></name><index pos:line="27" pos:column="26">[<expr><literal type="number" pos:line="27" pos:column="27">0<pos:position pos:line="27" pos:column="28"/></literal></expr>]<pos:position pos:line="27" pos:column="29"/></index></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <name pos:line="27" pos:column="32">FALSE<pos:position pos:line="27" pos:column="37"/></name></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">static_addrs<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">badcount<pos:position pos:line="29" pos:column="26"/></name></name> <operator pos:line="29" pos:column="27">=<pos:position pos:line="29" pos:column="28"/></operator> <literal type="number" pos:line="29" pos:column="29">0<pos:position pos:line="29" pos:column="30"/></literal></expr>;<pos:position pos:line="29" pos:column="31"/></expr_stmt>

    <return pos:line="31" pos:column="5">return <expr><operator pos:line="31" pos:column="12">&amp;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="13">static_addrs<pos:position pos:line="31" pos:column="25"/></name></expr>;<pos:position pos:line="31" pos:column="26"/></return>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

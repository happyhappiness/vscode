<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4841_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">SwapDir<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">maintain<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">()<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">47<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">3<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="18">HERE<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;&lt;<pos:position pos:line="4" pos:column="31"/></operator> <literal type="string" pos:line="4" pos:column="26">"cache_dir["<pos:position pos:line="4" pos:column="38"/></literal> <operator pos:line="4" pos:column="39">&lt;&lt;<pos:position pos:line="4" pos:column="47"/></operator> <name pos:line="4" pos:column="42">index<pos:position pos:line="4" pos:column="47"/></name> <operator pos:line="4" pos:column="48">&lt;&lt;<pos:position pos:line="4" pos:column="56"/></operator> <literal type="string" pos:line="4" pos:column="51">"] guards: "<pos:position pos:line="4" pos:column="63"/></literal> <operator pos:line="4" pos:column="64">&lt;&lt;<pos:position pos:line="4" pos:column="72"/></operator>
           <operator pos:line="5" pos:column="12">!<pos:position pos:line="5" pos:column="13"/></operator><name pos:line="5" pos:column="13">repl<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">&lt;&lt;<pos:position pos:line="5" pos:column="26"/></operator> <operator pos:line="5" pos:column="21">!<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">map<pos:position pos:line="5" pos:column="25"/></name> <operator pos:line="5" pos:column="26">&lt;&lt;<pos:position pos:line="5" pos:column="34"/></operator> <operator pos:line="5" pos:column="29">!<pos:position pos:line="5" pos:column="30"/></operator><call><name pos:line="5" pos:column="30">full<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">()<pos:position pos:line="5" pos:column="36"/></argument_list></call> <operator pos:line="5" pos:column="37">&lt;&lt;<pos:position pos:line="5" pos:column="45"/></operator> <name><name pos:line="5" pos:column="40">StoreController<pos:position pos:line="5" pos:column="55"/></name><operator pos:line="5" pos:column="55">::<pos:position pos:line="5" pos:column="57"/></operator><name pos:line="5" pos:column="57">store_dirs_rebuilding<pos:position pos:line="5" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="80"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">repl<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if> <comment type="line" pos:line="8" pos:column="17">// no means (cannot find a victim)</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">map<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14">
        <block type="pseudo"><return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return></block></then></if> <comment type="line" pos:line="11" pos:column="17">// no victims (yet)</comment>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><call><name pos:line="13" pos:column="10">full<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">()<pos:position pos:line="13" pos:column="16"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="17"/></condition><then pos:line="13" pos:column="17">
        <block type="pseudo"><return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return></block></then></if> <comment type="line" pos:line="14" pos:column="17">// no need (to find a victim)</comment>

    <comment type="line" pos:line="16" pos:column="5">// XXX: UFSSwapDir::maintain says we must quit during rebuild</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">StoreController<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">::<pos:position pos:line="17" pos:column="26"/></operator><name pos:line="17" pos:column="26">store_dirs_rebuilding<pos:position pos:line="17" pos:column="47"/></name></name></expr>)<pos:position pos:line="17" pos:column="48"/></condition><then pos:line="17" pos:column="48">
        <block type="pseudo"><return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debugs<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">47<pos:position pos:line="20" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="20" pos:column="15">3<pos:position pos:line="20" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="18">HERE<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;&lt;<pos:position pos:line="20" pos:column="31"/></operator> <literal type="string" pos:line="20" pos:column="26">"cache_dir["<pos:position pos:line="20" pos:column="38"/></literal> <operator pos:line="20" pos:column="39">&lt;&lt;<pos:position pos:line="20" pos:column="47"/></operator> <name pos:line="20" pos:column="42">index<pos:position pos:line="20" pos:column="47"/></name> <operator pos:line="20" pos:column="48">&lt;&lt;<pos:position pos:line="20" pos:column="56"/></operator> <literal type="string" pos:line="20" pos:column="51">"] state: "<pos:position pos:line="20" pos:column="62"/></literal> <operator pos:line="20" pos:column="63">&lt;&lt;<pos:position pos:line="20" pos:column="71"/></operator> <call><name><name pos:line="20" pos:column="66">map<pos:position pos:line="20" pos:column="69"/></name><operator pos:line="20" pos:column="69">-&gt;<pos:position pos:line="20" pos:column="74"/></operator><name pos:line="20" pos:column="71">full<pos:position pos:line="20" pos:column="75"/></name></name><argument_list pos:line="20" pos:column="75">()<pos:position pos:line="20" pos:column="77"/></argument_list></call> <operator pos:line="20" pos:column="78">&lt;&lt;<pos:position pos:line="20" pos:column="86"/></operator>
           <literal type="char" pos:line="21" pos:column="12">' '<pos:position pos:line="21" pos:column="15"/></literal> <operator pos:line="21" pos:column="16">&lt;&lt;<pos:position pos:line="21" pos:column="24"/></operator> <call><name pos:line="21" pos:column="19">currentSize<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">()<pos:position pos:line="21" pos:column="32"/></argument_list></call> <operator pos:line="21" pos:column="33">&lt;&lt;<pos:position pos:line="21" pos:column="41"/></operator> <literal type="string" pos:line="21" pos:column="36">" &lt; "<pos:position pos:line="21" pos:column="44"/></literal> <operator pos:line="21" pos:column="42">&lt;&lt;<pos:position pos:line="21" pos:column="50"/></operator> <call><name pos:line="21" pos:column="45">diskOffsetLimit<pos:position pos:line="21" pos:column="60"/></name><argument_list pos:line="21" pos:column="60">()<pos:position pos:line="21" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="64"/></expr_stmt>

    <comment type="line" pos:line="23" pos:column="5">// Hopefully, we find a removable entry much sooner (TODO: use time?)</comment>
    <decl_stmt><decl><type><specifier pos:line="24" pos:column="5">const<pos:position pos:line="24" pos:column="10"/></specifier> <name pos:line="24" pos:column="11">int<pos:position pos:line="24" pos:column="14"/></name></type> <name pos:line="24" pos:column="15">maxProbed<pos:position pos:line="24" pos:column="24"/></name> <init pos:line="24" pos:column="25">= <expr><literal type="number" pos:line="24" pos:column="27">10000<pos:position pos:line="24" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="24" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">RemovalPurgeWalker<pos:position pos:line="25" pos:column="23"/></name> <modifier pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></modifier></type><name pos:line="25" pos:column="25">walker<pos:position pos:line="25" pos:column="31"/></name> <init pos:line="25" pos:column="32">= <expr><call><name><name pos:line="25" pos:column="34">repl<pos:position pos:line="25" pos:column="38"/></name><operator pos:line="25" pos:column="38">-&gt;<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="40">PurgeInit<pos:position pos:line="25" pos:column="49"/></name></name><argument_list pos:line="25" pos:column="49">(<argument><expr><name pos:line="25" pos:column="50">repl<pos:position pos:line="25" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="56">maxProbed<pos:position pos:line="25" pos:column="65"/></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="67"/></decl_stmt>

    <comment type="line" pos:line="27" pos:column="5">// It really should not take that long, but this will stop "infinite" loops</comment>
    <decl_stmt><decl><type><specifier pos:line="28" pos:column="5">const<pos:position pos:line="28" pos:column="10"/></specifier> <name pos:line="28" pos:column="11">int<pos:position pos:line="28" pos:column="14"/></name></type> <name pos:line="28" pos:column="15">maxFreed<pos:position pos:line="28" pos:column="23"/></name> <init pos:line="28" pos:column="24">= <expr><literal type="number" pos:line="28" pos:column="26">1000<pos:position pos:line="28" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">int<pos:position pos:line="29" pos:column="8"/></name></type> <name pos:line="29" pos:column="9">freed<pos:position pos:line="29" pos:column="14"/></name> <init pos:line="29" pos:column="15">= <expr><literal type="number" pos:line="29" pos:column="17">0<pos:position pos:line="29" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="19"/></decl_stmt>
    <comment type="line" pos:line="30" pos:column="5">// TODO: should we purge more than needed to minimize overheads?</comment>
    <for pos:line="31" pos:column="5">for <control pos:line="31" pos:column="9">(<init pos:line="31" pos:column="10">;<pos:position pos:line="31" pos:column="11"/></init> <condition><expr><name pos:line="31" pos:column="12">freed<pos:position pos:line="31" pos:column="17"/></name> <operator pos:line="31" pos:column="18">&lt;<pos:position pos:line="31" pos:column="22"/></operator> <name pos:line="31" pos:column="20">maxFreed<pos:position pos:line="31" pos:column="28"/></name> <operator pos:line="31" pos:column="29">&amp;&amp;<pos:position pos:line="31" pos:column="39"/></operator> <call><name pos:line="31" pos:column="32">full<pos:position pos:line="31" pos:column="36"/></name><argument_list pos:line="31" pos:column="36">()<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></condition> <incr><expr><operator pos:line="31" pos:column="40">++<pos:position pos:line="31" pos:column="42"/></operator><name pos:line="31" pos:column="42">freed<pos:position pos:line="31" pos:column="47"/></name></expr></incr>)<pos:position pos:line="31" pos:column="48"/></control> <block pos:line="31" pos:column="49">{
        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<decl><type><name pos:line="32" pos:column="13">StoreEntry<pos:position pos:line="32" pos:column="23"/></name> <modifier pos:line="32" pos:column="24">*<pos:position pos:line="32" pos:column="25"/></modifier></type><name pos:line="32" pos:column="25">e<pos:position pos:line="32" pos:column="26"/></name> <init pos:line="32" pos:column="27">= <expr><call><name><name pos:line="32" pos:column="29">walker<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">Next<pos:position pos:line="32" pos:column="41"/></name></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">walker<pos:position pos:line="32" pos:column="48"/></name></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr></init></decl>)<pos:position pos:line="32" pos:column="50"/></condition><then pos:line="32" pos:column="50">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="33" pos:column="13">e<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">release<pos:position pos:line="33" pos:column="23"/></name></name><argument_list pos:line="33" pos:column="23">()<pos:position pos:line="33" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="26"/></expr_stmt></block></then> <comment type="line" pos:line="33" pos:column="27">// will call our unlink() method</comment>
        <else pos:line="34" pos:column="9">else
            <block type="pseudo"><break pos:line="35" pos:column="13">break;<pos:position pos:line="35" pos:column="19"/></break></block></else></if> <comment type="line" pos:line="35" pos:column="20">// no more objects</comment>
    }<pos:position pos:line="36" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">debugs<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><literal type="number" pos:line="38" pos:column="12">47<pos:position pos:line="38" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="38" pos:column="15">2<pos:position pos:line="38" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="18">HERE<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">&lt;&lt;<pos:position pos:line="38" pos:column="31"/></operator> <literal type="string" pos:line="38" pos:column="26">"Rock cache_dir["<pos:position pos:line="38" pos:column="43"/></literal> <operator pos:line="38" pos:column="44">&lt;&lt;<pos:position pos:line="38" pos:column="52"/></operator> <name pos:line="38" pos:column="47">index<pos:position pos:line="38" pos:column="52"/></name> <operator pos:line="38" pos:column="53">&lt;&lt;<pos:position pos:line="38" pos:column="61"/></operator> <literal type="string" pos:line="38" pos:column="56">"] freed "<pos:position pos:line="38" pos:column="66"/></literal> <operator pos:line="38" pos:column="67">&lt;&lt;<pos:position pos:line="38" pos:column="75"/></operator> <name pos:line="38" pos:column="70">freed<pos:position pos:line="38" pos:column="75"/></name> <operator pos:line="38" pos:column="76">&lt;&lt;<pos:position pos:line="38" pos:column="84"/></operator>
           <literal type="string" pos:line="39" pos:column="12">" scanned "<pos:position pos:line="39" pos:column="23"/></literal> <operator pos:line="39" pos:column="24">&lt;&lt;<pos:position pos:line="39" pos:column="32"/></operator> <name><name pos:line="39" pos:column="27">walker<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">-&gt;<pos:position pos:line="39" pos:column="38"/></operator><name pos:line="39" pos:column="35">scanned<pos:position pos:line="39" pos:column="42"/></name></name> <operator pos:line="39" pos:column="43">&lt;&lt;<pos:position pos:line="39" pos:column="51"/></operator> <literal type="char" pos:line="39" pos:column="46">'/'<pos:position pos:line="39" pos:column="49"/></literal> <operator pos:line="39" pos:column="50">&lt;&lt;<pos:position pos:line="39" pos:column="58"/></operator> <name><name pos:line="39" pos:column="53">walker<pos:position pos:line="39" pos:column="59"/></name><operator pos:line="39" pos:column="59">-&gt;<pos:position pos:line="39" pos:column="64"/></operator><name pos:line="39" pos:column="61">locked<pos:position pos:line="39" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="41" pos:column="5">walker<pos:position pos:line="41" pos:column="11"/></name><operator pos:line="41" pos:column="11">-&gt;<pos:position pos:line="41" pos:column="16"/></operator><name pos:line="41" pos:column="13">Done<pos:position pos:line="41" pos:column="17"/></name></name><argument_list pos:line="41" pos:column="17">(<argument><expr><name pos:line="41" pos:column="18">walker<pos:position pos:line="41" pos:column="24"/></name></expr></argument>)<pos:position pos:line="41" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><call><name pos:line="43" pos:column="9">full<pos:position pos:line="43" pos:column="13"/></name><argument_list pos:line="43" pos:column="13">()<pos:position pos:line="43" pos:column="15"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="16"/></condition><then pos:line="43" pos:column="16"> <block pos:line="43" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">debugs<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><literal type="number" pos:line="44" pos:column="16">47<pos:position pos:line="44" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="20">DBG_CRITICAL<pos:position pos:line="44" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="34">"ERROR: Rock cache_dir["<pos:position pos:line="44" pos:column="58"/></literal> <operator pos:line="44" pos:column="59">&lt;&lt;<pos:position pos:line="44" pos:column="67"/></operator> <name pos:line="44" pos:column="62">index<pos:position pos:line="44" pos:column="67"/></name> <operator pos:line="44" pos:column="68">&lt;&lt;<pos:position pos:line="44" pos:column="76"/></operator> <literal type="string" pos:line="44" pos:column="71">"] "<pos:position pos:line="44" pos:column="75"/></literal> <operator pos:line="44" pos:column="76">&lt;&lt;<pos:position pos:line="44" pos:column="84"/></operator>
               <literal type="string" pos:line="45" pos:column="16">"is still full after freeing "<pos:position pos:line="45" pos:column="46"/></literal> <operator pos:line="45" pos:column="47">&lt;&lt;<pos:position pos:line="45" pos:column="55"/></operator> <name pos:line="45" pos:column="50">freed<pos:position pos:line="45" pos:column="55"/></name> <operator pos:line="45" pos:column="56">&lt;&lt;<pos:position pos:line="45" pos:column="64"/></operator> <literal type="string" pos:line="45" pos:column="59">" entries. A bug?"<pos:position pos:line="45" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4581_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name><name pos:line="2" pos:column="1">CossSwapDir<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">storeCossMemPointerFromDiskOffset<pos:position pos:line="2" pos:column="47"/></name></name><parameter_list pos:line="2" pos:column="47">(<parameter><decl><type><name pos:line="2" pos:column="48">off_t<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">offset<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">CossMemBuf<pos:position pos:line="2" pos:column="72"/></name> <modifier pos:line="2" pos:column="73">*<pos:position pos:line="2" pos:column="74"/></modifier><modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type> <name pos:line="2" pos:column="76">mb<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="79"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CossMemBuf<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">t<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">dlink_node<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">m<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><expr><name pos:line="7" pos:column="10">m<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <name><name pos:line="7" pos:column="14">membufs<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">.<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">head<pos:position pos:line="7" pos:column="26"/></name></name></expr>;<pos:position pos:line="7" pos:column="27"/></init> <condition><expr><name pos:line="7" pos:column="28">m<pos:position pos:line="7" pos:column="29"/></name></expr>;<pos:position pos:line="7" pos:column="30"/></condition> <incr><expr><name pos:line="7" pos:column="31">m<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">=<pos:position pos:line="7" pos:column="34"/></operator> <name><name pos:line="7" pos:column="35">m<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">-&gt;<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="38">next<pos:position pos:line="7" pos:column="42"/></name></name></expr></incr>)<pos:position pos:line="7" pos:column="43"/></control> <block pos:line="7" pos:column="44">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">t<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">CossMemBuf<pos:position pos:line="8" pos:column="24"/></name> <operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><operator pos:line="8" pos:column="26">)<pos:position pos:line="8" pos:column="27"/></operator><name><name pos:line="8" pos:column="27">m<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">-&gt;<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="30">data<pos:position pos:line="8" pos:column="34"/></name></name></expr>;<pos:position pos:line="8" pos:column="35"/></expr_stmt>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">(<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">offset<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">&gt;=<pos:position pos:line="10" pos:column="26"/></operator> <name><name pos:line="10" pos:column="24">t<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">diskstart<pos:position pos:line="10" pos:column="36"/></name></name><operator pos:line="10" pos:column="36">)<pos:position pos:line="10" pos:column="37"/></operator> <operator pos:line="10" pos:column="38">&amp;&amp;<pos:position pos:line="10" pos:column="48"/></operator> <operator pos:line="10" pos:column="41">(<pos:position pos:line="10" pos:column="42"/></operator><name pos:line="10" pos:column="42">offset<pos:position pos:line="10" pos:column="48"/></name> <operator pos:line="10" pos:column="49">&lt;<pos:position pos:line="10" pos:column="53"/></operator> <name><name pos:line="10" pos:column="51">t<pos:position pos:line="10" pos:column="52"/></name><operator pos:line="10" pos:column="52">-&gt;<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="54">diskend<pos:position pos:line="10" pos:column="61"/></name></name><operator pos:line="10" pos:column="61">)<pos:position pos:line="10" pos:column="62"/></operator></expr>)<pos:position pos:line="10" pos:column="63"/></condition><then pos:line="10" pos:column="63"> <block pos:line="10" pos:column="64">{
            <if pos:line="11" pos:column="13">if <condition pos:line="11" pos:column="16">(<expr><name pos:line="11" pos:column="17">mb<pos:position pos:line="11" pos:column="19"/></name></expr>)<pos:position pos:line="11" pos:column="20"/></condition><then pos:line="11" pos:column="20">
                <block type="pseudo"><expr_stmt><expr><operator pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">mb<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">t<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt></block></then></if>

            <return pos:line="14" pos:column="13">return <expr><operator pos:line="14" pos:column="20">&amp;<pos:position pos:line="14" pos:column="25"/></operator><name><name pos:line="14" pos:column="21">t<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">buffer<pos:position pos:line="14" pos:column="30"/></name><index pos:line="14" pos:column="30">[<expr><name pos:line="14" pos:column="31">offset<pos:position pos:line="14" pos:column="37"/></name> <operator pos:line="14" pos:column="38">-<pos:position pos:line="14" pos:column="39"/></operator> <name><name pos:line="14" pos:column="40">t<pos:position pos:line="14" pos:column="41"/></name><operator pos:line="14" pos:column="41">-&gt;<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="43">diskstart<pos:position pos:line="14" pos:column="52"/></name></name></expr>]<pos:position pos:line="14" pos:column="53"/></index></name></expr>;<pos:position pos:line="14" pos:column="54"/></return>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></for>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">mb<pos:position pos:line="18" pos:column="11"/></name></expr>)<pos:position pos:line="18" pos:column="12"/></condition><then pos:line="18" pos:column="12">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">mb<pos:position pos:line="19" pos:column="12"/></name> <operator pos:line="19" pos:column="13">=<pos:position pos:line="19" pos:column="14"/></operator> <name pos:line="19" pos:column="15">NULL<pos:position pos:line="19" pos:column="19"/></name></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt></block></then></if>

    <return pos:line="21" pos:column="5">return <expr><name pos:line="21" pos:column="12">NULL<pos:position pos:line="21" pos:column="16"/></name></expr>;<pos:position pos:line="21" pos:column="17"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

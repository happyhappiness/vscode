<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_963_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">HttpMsg<pos:position pos:line="1" pos:column="13"/></name><operator pos:line="1" pos:column="13">::<pos:position pos:line="1" pos:column="15"/></operator><name pos:line="1" pos:column="15">packInto<pos:position pos:line="1" pos:column="23"/></name></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">Packer<pos:position pos:line="1" pos:column="30"/></name> <modifier pos:line="1" pos:column="31">*<pos:position pos:line="1" pos:column="32"/></modifier></type><name pos:line="1" pos:column="32">p<pos:position pos:line="1" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="35">bool<pos:position pos:line="1" pos:column="39"/></name></type> <name pos:line="1" pos:column="40">full_uri<pos:position pos:line="1" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="49"/></parameter_list> <specifier pos:line="1" pos:column="50">const<pos:position pos:line="1" pos:column="55"/></specifier>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">packFirstLineInto<pos:position pos:line="3" pos:column="22"/></name><argument_list pos:line="3" pos:column="22">(<argument><expr><name pos:line="3" pos:column="23">p<pos:position pos:line="3" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="3" pos:column="26">full_uri<pos:position pos:line="3" pos:column="34"/></name></expr></argument>)<pos:position pos:line="3" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">header<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">.<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">packInto<pos:position pos:line="4" pos:column="20"/></name></name><argument_list pos:line="4" pos:column="20">(<argument><expr><name pos:line="4" pos:column="21">p<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">packerAppend<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">p<pos:position pos:line="5" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="21">"\r\n"<pos:position pos:line="5" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="29">2<pos:position pos:line="5" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="32"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

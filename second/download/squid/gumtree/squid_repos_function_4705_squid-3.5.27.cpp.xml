<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4705_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLUserData<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">match<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">user<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">28<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">7<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"user is "<pos:position pos:line="4" pos:column="29"/></literal> <operator pos:line="4" pos:column="30">&lt;&lt;<pos:position pos:line="4" pos:column="38"/></operator> <name pos:line="4" pos:column="33">user<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">&lt;&lt;<pos:position pos:line="4" pos:column="46"/></operator> <literal type="string" pos:line="4" pos:column="41">", case_insensitive is "<pos:position pos:line="4" pos:column="65"/></literal> <operator pos:line="4" pos:column="66">&lt;&lt;<pos:position pos:line="4" pos:column="74"/></operator> <name><name pos:line="4" pos:column="69">flags<pos:position pos:line="4" pos:column="74"/></name><operator pos:line="4" pos:column="74">.<pos:position pos:line="4" pos:column="75"/></operator><name pos:line="4" pos:column="75">case_insensitive<pos:position pos:line="4" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="93"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">user<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name> <operator pos:line="6" pos:column="22">||<pos:position pos:line="6" pos:column="24"/></operator> <call><name pos:line="6" pos:column="25">strcmp<pos:position pos:line="6" pos:column="31"/></name><argument_list pos:line="6" pos:column="31">(<argument><expr><name pos:line="6" pos:column="32">user<pos:position pos:line="6" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="38">"-"<pos:position pos:line="6" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call> <operator pos:line="6" pos:column="43">==<pos:position pos:line="6" pos:column="45"/></operator> <literal type="number" pos:line="6" pos:column="46">0<pos:position pos:line="6" pos:column="47"/></literal></expr>)<pos:position pos:line="6" pos:column="48"/></condition><then pos:line="6" pos:column="48">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">flags<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">.<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">required<pos:position pos:line="9" pos:column="23"/></name></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24"> <block pos:line="9" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">28<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="20">7<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"aclMatchUser: user REQUIRED and auth-info present."<pos:position pos:line="10" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="77"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="14" pos:column="5">bool<pos:position pos:line="14" pos:column="9"/></name></type> <name pos:line="14" pos:column="10">result<pos:position pos:line="14" pos:column="16"/></name> <init pos:line="14" pos:column="17">= <expr><operator pos:line="14" pos:column="19">(<pos:position pos:line="14" pos:column="20"/></operator><call><name><name pos:line="14" pos:column="20">userDataNames<pos:position pos:line="14" pos:column="33"/></name><operator pos:line="14" pos:column="33">.<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="34">find<pos:position pos:line="14" pos:column="38"/></name></name><argument_list pos:line="14" pos:column="38">(<argument><expr><call><name pos:line="14" pos:column="39">SBuf<pos:position pos:line="14" pos:column="43"/></name><argument_list pos:line="14" pos:column="43">(<argument><expr><name pos:line="14" pos:column="44">user<pos:position pos:line="14" pos:column="48"/></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="50"/></argument_list></call> <operator pos:line="14" pos:column="51">!=<pos:position pos:line="14" pos:column="53"/></operator> <call><name><name pos:line="14" pos:column="54">userDataNames<pos:position pos:line="14" pos:column="67"/></name><operator pos:line="14" pos:column="67">.<pos:position pos:line="14" pos:column="68"/></operator><name pos:line="14" pos:column="68">end<pos:position pos:line="14" pos:column="71"/></name></name><argument_list pos:line="14" pos:column="71">()<pos:position pos:line="14" pos:column="73"/></argument_list></call><operator pos:line="14" pos:column="73">)<pos:position pos:line="14" pos:column="74"/></operator></expr></init></decl>;<pos:position pos:line="14" pos:column="75"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">28<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="16">7<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="19">"returning "<pos:position pos:line="15" pos:column="31"/></literal> <operator pos:line="15" pos:column="32">&lt;&lt;<pos:position pos:line="15" pos:column="40"/></operator> <name pos:line="15" pos:column="35">result<pos:position pos:line="15" pos:column="41"/></name></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">result<pos:position pos:line="16" pos:column="18"/></name></expr>;<pos:position pos:line="16" pos:column="19"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

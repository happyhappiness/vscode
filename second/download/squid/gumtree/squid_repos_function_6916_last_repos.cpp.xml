<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6916_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">set<pos:position pos:line="1" pos:column="9"/></name><parameter_list pos:line="1" pos:column="9">(<parameter><decl><type><specifier pos:line="1" pos:column="10">const<pos:position pos:line="1" pos:column="15"/></specifier> <name pos:line="1" pos:column="16">char<pos:position pos:line="1" pos:column="20"/></name> <modifier pos:line="1" pos:column="21">*<pos:position pos:line="1" pos:column="22"/></modifier></type><name pos:line="1" pos:column="22">src<pos:position pos:line="1" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="27">const<pos:position pos:line="1" pos:column="32"/></specifier> <name pos:line="1" pos:column="33">int<pos:position pos:line="1" pos:column="36"/></name></type> <name pos:line="1" pos:column="37">len<pos:position pos:line="1" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="41"/></parameter_list> <block pos:line="1" pos:column="42">{
        <if pos:line="2" pos:column="9">if <condition pos:line="2" pos:column="12">(<expr><name pos:line="2" pos:column="13">len<pos:position pos:line="2" pos:column="16"/></name> <operator pos:line="2" pos:column="17">&gt;<pos:position pos:line="2" pos:column="21"/></operator> <name pos:line="2" pos:column="19">SZ_EUI64_BUF<pos:position pos:line="2" pos:column="31"/></name></expr>)<pos:position pos:line="2" pos:column="32"/></condition><then pos:line="2" pos:column="32"> <block type="pseudo"><return pos:line="2" pos:column="33">return <expr><literal type="boolean" pos:line="2" pos:column="40">false<pos:position pos:line="2" pos:column="45"/></literal></expr>;<pos:position pos:line="2" pos:column="46"/></return></block></then></if>
        <if pos:line="3" pos:column="9">if <condition pos:line="3" pos:column="12">(<expr><name pos:line="3" pos:column="13">len<pos:position pos:line="3" pos:column="16"/></name> <operator pos:line="3" pos:column="17">&lt;<pos:position pos:line="3" pos:column="21"/></operator> <name pos:line="3" pos:column="19">SZ_EUI64_BUF<pos:position pos:line="3" pos:column="31"/></name></expr>)<pos:position pos:line="3" pos:column="32"/></condition><then pos:line="3" pos:column="32"> <block type="pseudo"><expr_stmt><expr><call><name pos:line="3" pos:column="33">clear<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">()<pos:position pos:line="3" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="41"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="4" pos:column="9">memcpy<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">eui<pos:position pos:line="4" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="21">src<pos:position pos:line="4" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="26">len<pos:position pos:line="4" pos:column="29"/></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="31"/></expr_stmt>
        <return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">true<pos:position pos:line="5" pos:column="20"/></literal></expr>;<pos:position pos:line="5" pos:column="21"/></return>
    }<pos:position pos:line="6" pos:column="6"/></block></function></unit>

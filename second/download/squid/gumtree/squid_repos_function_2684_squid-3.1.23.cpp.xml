<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2684_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">htcpInit<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">void<pos:position pos:line="2" pos:column="14"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="15"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">Config<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">Port<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">.<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">htcp<pos:position pos:line="4" pos:column="25"/></name></name> <operator pos:line="4" pos:column="26">&lt;=<pos:position pos:line="4" pos:column="31"/></operator> <literal type="number" pos:line="4" pos:column="29">0<pos:position pos:line="4" pos:column="30"/></literal></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31"> <block pos:line="4" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">31<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">1<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"HTCP Disabled."<pos:position pos:line="5" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="41"/></expr_stmt>
        <return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">IpAddress<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">incomingAddr<pos:position pos:line="9" pos:column="27"/></name> <init pos:line="9" pos:column="28">= <expr><name><name pos:line="9" pos:column="30">Config<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">.<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="37">Addrs<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">.<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="43">udp_incoming<pos:position pos:line="9" pos:column="55"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="56"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">incomingAddr<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">.<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">SetPort<pos:position pos:line="10" pos:column="25"/></name></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name><name pos:line="10" pos:column="26">Config<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">.<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">Port<pos:position pos:line="10" pos:column="37"/></name><operator pos:line="10" pos:column="37">.<pos:position pos:line="10" pos:column="38"/></operator><name pos:line="10" pos:column="38">htcp<pos:position pos:line="10" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="44"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name><name pos:line="12" pos:column="10">Ip<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">::<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">EnableIpv6<pos:position pos:line="12" pos:column="24"/></name></name> <operator pos:line="12" pos:column="25">&amp;&amp;<pos:position pos:line="12" pos:column="35"/></operator> <operator pos:line="12" pos:column="28">!<pos:position pos:line="12" pos:column="29"/></operator><call><name><name pos:line="12" pos:column="29">incomingAddr<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">.<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">SetIPv4<pos:position pos:line="12" pos:column="49"/></name></name><argument_list pos:line="12" pos:column="49">()<pos:position pos:line="12" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52"> <block pos:line="12" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">31<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">DBG_CRITICAL<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="34">"ERROR: IPv6 is disabled. "<pos:position pos:line="13" pos:column="61"/></literal> <operator pos:line="13" pos:column="62">&lt;&lt;<pos:position pos:line="13" pos:column="70"/></operator> <name pos:line="13" pos:column="65">incomingAddr<pos:position pos:line="13" pos:column="77"/></name> <operator pos:line="13" pos:column="78">&lt;&lt;<pos:position pos:line="13" pos:column="86"/></operator> <literal type="string" pos:line="13" pos:column="81">" is not an IPv4 address."<pos:position pos:line="13" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="109"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">fatal<pos:position pos:line="14" pos:column="14"/></name><argument_list pos:line="14" pos:column="14">(<argument><expr><literal type="string" pos:line="14" pos:column="15">"HTCP port cannot be opened."<pos:position pos:line="14" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="16" pos:column="5">/* split-stack for now requires default IPv4-only HTCP */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name><name pos:line="17" pos:column="9">Ip<pos:position pos:line="17" pos:column="11"/></name><operator pos:line="17" pos:column="11">::<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">EnableIpv6<pos:position pos:line="17" pos:column="23"/></name></name><operator pos:line="17" pos:column="23">&amp;<pos:position pos:line="17" pos:column="28"/></operator><name pos:line="17" pos:column="24">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="17" pos:column="47"/></name> <operator pos:line="17" pos:column="48">&amp;&amp;<pos:position pos:line="17" pos:column="58"/></operator> <call><name><name pos:line="17" pos:column="51">incomingAddr<pos:position pos:line="17" pos:column="63"/></name><operator pos:line="17" pos:column="63">.<pos:position pos:line="17" pos:column="64"/></operator><name pos:line="17" pos:column="64">IsAnyAddr<pos:position pos:line="17" pos:column="73"/></name></name><argument_list pos:line="17" pos:column="73">()<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="76"/></condition><then pos:line="17" pos:column="76"> <block pos:line="17" pos:column="77">{
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">incomingAddr<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">.<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">SetIPv4<pos:position pos:line="18" pos:column="29"/></name></name><argument_list pos:line="18" pos:column="29">()<pos:position pos:line="18" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">enter_suid<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">()<pos:position pos:line="21" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">htcpInSocket<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <call><name pos:line="22" pos:column="20">comm_open_listener<pos:position pos:line="22" pos:column="38"/></name><argument_list pos:line="22" pos:column="38">(<argument><expr><name pos:line="22" pos:column="39">SOCK_DGRAM<pos:position pos:line="22" pos:column="49"/></name></expr></argument>,
                                      <argument><expr><name pos:line="23" pos:column="39">IPPROTO_UDP<pos:position pos:line="23" pos:column="50"/></name></expr></argument>,
                                      <argument><expr><name pos:line="24" pos:column="39">incomingAddr<pos:position pos:line="24" pos:column="51"/></name></expr></argument>,
                                      <argument><expr><name pos:line="25" pos:column="39">COMM_NONBLOCKING<pos:position pos:line="25" pos:column="55"/></name></expr></argument>,
                                      <argument><expr><literal type="string" pos:line="26" pos:column="39">"HTCP Socket"<pos:position pos:line="26" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="27" pos:column="5">leave_suid<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">()<pos:position pos:line="27" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="18"/></expr_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">htcpInSocket<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">&lt;<pos:position pos:line="29" pos:column="26"/></operator> <literal type="number" pos:line="29" pos:column="24">0<pos:position pos:line="29" pos:column="25"/></literal></expr>)<pos:position pos:line="29" pos:column="26"/></condition><then pos:line="29" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="9">fatal<pos:position pos:line="30" pos:column="14"/></name><argument_list pos:line="30" pos:column="14">(<argument><expr><literal type="string" pos:line="30" pos:column="15">"Cannot open HTCP Socket"<pos:position pos:line="30" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="32" pos:column="5">commSetSelect<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">(<argument><expr><name pos:line="32" pos:column="19">htcpInSocket<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="33">COMM_SELECT_READ<pos:position pos:line="32" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="51">htcpRecv<pos:position pos:line="32" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="61">NULL<pos:position pos:line="32" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="67">0<pos:position pos:line="32" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">debugs<pos:position pos:line="34" pos:column="11"/></name><argument_list pos:line="34" pos:column="11">(<argument><expr><literal type="number" pos:line="34" pos:column="12">31<pos:position pos:line="34" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="16">1<pos:position pos:line="34" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="19">"Accepting HTCP messages on port "<pos:position pos:line="34" pos:column="53"/></literal> <operator pos:line="34" pos:column="54">&lt;&lt;<pos:position pos:line="34" pos:column="62"/></operator> <name><name pos:line="34" pos:column="57">Config<pos:position pos:line="34" pos:column="63"/></name><operator pos:line="34" pos:column="63">.<pos:position pos:line="34" pos:column="64"/></operator><name pos:line="34" pos:column="64">Port<pos:position pos:line="34" pos:column="68"/></name><operator pos:line="34" pos:column="68">.<pos:position pos:line="34" pos:column="69"/></operator><name pos:line="34" pos:column="69">htcp<pos:position pos:line="34" pos:column="73"/></name></name> <operator pos:line="34" pos:column="74">&lt;&lt;<pos:position pos:line="34" pos:column="82"/></operator> <literal type="string" pos:line="34" pos:column="77">", FD "<pos:position pos:line="34" pos:column="84"/></literal> <operator pos:line="34" pos:column="85">&lt;&lt;<pos:position pos:line="34" pos:column="93"/></operator> <name pos:line="34" pos:column="88">htcpInSocket<pos:position pos:line="34" pos:column="100"/></name> <operator pos:line="34" pos:column="101">&lt;&lt;<pos:position pos:line="34" pos:column="109"/></operator> <literal type="string" pos:line="34" pos:column="104">"."<pos:position pos:line="34" pos:column="107"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="109"/></expr_stmt>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><operator pos:line="36" pos:column="9">!<pos:position pos:line="36" pos:column="10"/></operator><call><name><name pos:line="36" pos:column="10">Config<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">.<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="17">Addrs<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">.<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="23">udp_outgoing<pos:position pos:line="36" pos:column="35"/></name><operator pos:line="36" pos:column="35">.<pos:position pos:line="36" pos:column="36"/></operator><name pos:line="36" pos:column="36">IsNoAddr<pos:position pos:line="36" pos:column="44"/></name></name><argument_list pos:line="36" pos:column="44">()<pos:position pos:line="36" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="47"/></condition><then pos:line="36" pos:column="47"> <block pos:line="36" pos:column="48">{
        <decl_stmt><decl><type><name pos:line="37" pos:column="9">IpAddress<pos:position pos:line="37" pos:column="18"/></name></type> <name pos:line="37" pos:column="19">outgoingAddr<pos:position pos:line="37" pos:column="31"/></name> <init pos:line="37" pos:column="32">= <expr><name><name pos:line="37" pos:column="34">Config<pos:position pos:line="37" pos:column="40"/></name><operator pos:line="37" pos:column="40">.<pos:position pos:line="37" pos:column="41"/></operator><name pos:line="37" pos:column="41">Addrs<pos:position pos:line="37" pos:column="46"/></name><operator pos:line="37" pos:column="46">.<pos:position pos:line="37" pos:column="47"/></operator><name pos:line="37" pos:column="47">udp_outgoing<pos:position pos:line="37" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="37" pos:column="60"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="38" pos:column="9">outgoingAddr<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">.<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">SetPort<pos:position pos:line="38" pos:column="29"/></name></name><argument_list pos:line="38" pos:column="29">(<argument><expr><name><name pos:line="38" pos:column="30">Config<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">.<pos:position pos:line="38" pos:column="37"/></operator><name pos:line="38" pos:column="37">Port<pos:position pos:line="38" pos:column="41"/></name><operator pos:line="38" pos:column="41">.<pos:position pos:line="38" pos:column="42"/></operator><name pos:line="38" pos:column="42">htcp<pos:position pos:line="38" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="48"/></expr_stmt>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name><name pos:line="40" pos:column="14">Ip<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">::<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">EnableIpv6<pos:position pos:line="40" pos:column="28"/></name></name> <operator pos:line="40" pos:column="29">&amp;&amp;<pos:position pos:line="40" pos:column="39"/></operator> <operator pos:line="40" pos:column="32">!<pos:position pos:line="40" pos:column="33"/></operator><call><name><name pos:line="40" pos:column="33">outgoingAddr<pos:position pos:line="40" pos:column="45"/></name><operator pos:line="40" pos:column="45">.<pos:position pos:line="40" pos:column="46"/></operator><name pos:line="40" pos:column="46">SetIPv4<pos:position pos:line="40" pos:column="53"/></name></name><argument_list pos:line="40" pos:column="53">()<pos:position pos:line="40" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="56"/></condition><then pos:line="40" pos:column="56"> <block pos:line="40" pos:column="57">{
            <expr_stmt><expr><call><name pos:line="41" pos:column="13">debugs<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><literal type="number" pos:line="41" pos:column="20">31<pos:position pos:line="41" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="24">DBG_CRITICAL<pos:position pos:line="41" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="38">"ERROR: IPv6 is disabled. "<pos:position pos:line="41" pos:column="65"/></literal> <operator pos:line="41" pos:column="66">&lt;&lt;<pos:position pos:line="41" pos:column="74"/></operator> <name pos:line="41" pos:column="69">outgoingAddr<pos:position pos:line="41" pos:column="81"/></name> <operator pos:line="41" pos:column="82">&lt;&lt;<pos:position pos:line="41" pos:column="90"/></operator> <literal type="string" pos:line="41" pos:column="85">" is not an IPv4 address."<pos:position pos:line="41" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="113"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">fatal<pos:position pos:line="42" pos:column="18"/></name><argument_list pos:line="42" pos:column="18">(<argument><expr><literal type="string" pos:line="42" pos:column="19">"HTCP port cannot be opened."<pos:position pos:line="42" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="44" pos:column="9">/* split-stack for now requires default IPv4-only HTCP */</comment>
        <if pos:line="45" pos:column="9">if <condition pos:line="45" pos:column="12">(<expr><name><name pos:line="45" pos:column="13">Ip<pos:position pos:line="45" pos:column="15"/></name><operator pos:line="45" pos:column="15">::<pos:position pos:line="45" pos:column="17"/></operator><name pos:line="45" pos:column="17">EnableIpv6<pos:position pos:line="45" pos:column="27"/></name></name><operator pos:line="45" pos:column="27">&amp;<pos:position pos:line="45" pos:column="32"/></operator><name pos:line="45" pos:column="28">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="45" pos:column="51"/></name> <operator pos:line="45" pos:column="52">&amp;&amp;<pos:position pos:line="45" pos:column="62"/></operator> <call><name><name pos:line="45" pos:column="55">outgoingAddr<pos:position pos:line="45" pos:column="67"/></name><operator pos:line="45" pos:column="67">.<pos:position pos:line="45" pos:column="68"/></operator><name pos:line="45" pos:column="68">IsAnyAddr<pos:position pos:line="45" pos:column="77"/></name></name><argument_list pos:line="45" pos:column="77">()<pos:position pos:line="45" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="45" pos:column="80"/></condition><then pos:line="45" pos:column="80"> <block pos:line="45" pos:column="81">{
            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">outgoingAddr<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">.<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="26">SetIPv4<pos:position pos:line="46" pos:column="33"/></name></name><argument_list pos:line="46" pos:column="33">()<pos:position pos:line="46" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="49" pos:column="9">enter_suid<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">()<pos:position pos:line="49" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">htcpOutSocket<pos:position pos:line="50" pos:column="22"/></name> <operator pos:line="50" pos:column="23">=<pos:position pos:line="50" pos:column="24"/></operator> <call><name pos:line="50" pos:column="25">comm_open_listener<pos:position pos:line="50" pos:column="43"/></name><argument_list pos:line="50" pos:column="43">(<argument><expr><name pos:line="50" pos:column="44">SOCK_DGRAM<pos:position pos:line="50" pos:column="54"/></name></expr></argument>,
                                           <argument><expr><name pos:line="51" pos:column="44">IPPROTO_UDP<pos:position pos:line="51" pos:column="55"/></name></expr></argument>,
                                           <argument><expr><name pos:line="52" pos:column="44">outgoingAddr<pos:position pos:line="52" pos:column="56"/></name></expr></argument>,
                                           <argument><expr><name pos:line="53" pos:column="44">COMM_NONBLOCKING<pos:position pos:line="53" pos:column="60"/></name></expr></argument>,
                                           <argument><expr><literal type="string" pos:line="54" pos:column="44">"Outgoing HTCP Socket"<pos:position pos:line="54" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">leave_suid<pos:position pos:line="55" pos:column="19"/></name><argument_list pos:line="55" pos:column="19">()<pos:position pos:line="55" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="22"/></expr_stmt>

        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">htcpOutSocket<pos:position pos:line="57" pos:column="26"/></name> <operator pos:line="57" pos:column="27">&lt;<pos:position pos:line="57" pos:column="31"/></operator> <literal type="number" pos:line="57" pos:column="29">0<pos:position pos:line="57" pos:column="30"/></literal></expr>)<pos:position pos:line="57" pos:column="31"/></condition><then pos:line="57" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="58" pos:column="13">fatal<pos:position pos:line="58" pos:column="18"/></name><argument_list pos:line="58" pos:column="18">(<argument><expr><literal type="string" pos:line="58" pos:column="19">"Cannot open Outgoing HTCP Socket"<pos:position pos:line="58" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="55"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="60" pos:column="9">commSetSelect<pos:position pos:line="60" pos:column="22"/></name><argument_list pos:line="60" pos:column="22">(<argument><expr><name pos:line="60" pos:column="23">htcpOutSocket<pos:position pos:line="60" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="38">COMM_SELECT_READ<pos:position pos:line="60" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="56">htcpRecv<pos:position pos:line="60" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="66">NULL<pos:position pos:line="60" pos:column="70"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="60" pos:column="72">0<pos:position pos:line="60" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="75"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="62" pos:column="9">debugs<pos:position pos:line="62" pos:column="15"/></name><argument_list pos:line="62" pos:column="15">(<argument><expr><literal type="number" pos:line="62" pos:column="16">31<pos:position pos:line="62" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="20">1<pos:position pos:line="62" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="23">"Outgoing HTCP messages on port "<pos:position pos:line="62" pos:column="56"/></literal> <operator pos:line="62" pos:column="57">&lt;&lt;<pos:position pos:line="62" pos:column="65"/></operator> <name><name pos:line="62" pos:column="60">Config<pos:position pos:line="62" pos:column="66"/></name><operator pos:line="62" pos:column="66">.<pos:position pos:line="62" pos:column="67"/></operator><name pos:line="62" pos:column="67">Port<pos:position pos:line="62" pos:column="71"/></name><operator pos:line="62" pos:column="71">.<pos:position pos:line="62" pos:column="72"/></operator><name pos:line="62" pos:column="72">htcp<pos:position pos:line="62" pos:column="76"/></name></name> <operator pos:line="62" pos:column="77">&lt;&lt;<pos:position pos:line="62" pos:column="85"/></operator> <literal type="string" pos:line="62" pos:column="80">", FD "<pos:position pos:line="62" pos:column="87"/></literal> <operator pos:line="62" pos:column="88">&lt;&lt;<pos:position pos:line="62" pos:column="96"/></operator> <name pos:line="62" pos:column="91">htcpOutSocket<pos:position pos:line="62" pos:column="104"/></name> <operator pos:line="62" pos:column="105">&lt;&lt;<pos:position pos:line="62" pos:column="113"/></operator> <literal type="string" pos:line="62" pos:column="108">"."<pos:position pos:line="62" pos:column="111"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="113"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="64" pos:column="9">fd_note<pos:position pos:line="64" pos:column="16"/></name><argument_list pos:line="64" pos:column="16">(<argument><expr><name pos:line="64" pos:column="17">htcpInSocket<pos:position pos:line="64" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="31">"Incoming HTCP socket"<pos:position pos:line="64" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="65" pos:column="6"/></block></then> <else pos:line="65" pos:column="7">else <block pos:line="65" pos:column="12">{
        <expr_stmt><expr><name pos:line="66" pos:column="9">htcpOutSocket<pos:position pos:line="66" pos:column="22"/></name> <operator pos:line="66" pos:column="23">=<pos:position pos:line="66" pos:column="24"/></operator> <name pos:line="66" pos:column="25">htcpInSocket<pos:position pos:line="66" pos:column="37"/></name></expr>;<pos:position pos:line="66" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></else></if>

    <if pos:line="69" pos:column="5">if <condition pos:line="69" pos:column="8">(<expr><operator pos:line="69" pos:column="9">!<pos:position pos:line="69" pos:column="10"/></operator><name pos:line="69" pos:column="10">htcpDetailPool<pos:position pos:line="69" pos:column="24"/></name></expr>)<pos:position pos:line="69" pos:column="25"/></condition><then pos:line="69" pos:column="25"> <block pos:line="69" pos:column="26">{
        <expr_stmt><expr><name pos:line="70" pos:column="9">htcpDetailPool<pos:position pos:line="70" pos:column="23"/></name> <operator pos:line="70" pos:column="24">=<pos:position pos:line="70" pos:column="25"/></operator> <call><name pos:line="70" pos:column="26">memPoolCreate<pos:position pos:line="70" pos:column="39"/></name><argument_list pos:line="70" pos:column="39">(<argument><expr><literal type="string" pos:line="70" pos:column="40">"htcpDetail"<pos:position pos:line="70" pos:column="52"/></literal></expr></argument>, <argument><expr><sizeof pos:line="70" pos:column="54">sizeof<argument_list pos:line="70" pos:column="60">(<argument><expr><name pos:line="70" pos:column="61">htcpDetail<pos:position pos:line="70" pos:column="71"/></name></expr></argument>)<pos:position pos:line="70" pos:column="72"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="70" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>
}<pos:position pos:line="72" pos:column="2"/></block></function></unit>

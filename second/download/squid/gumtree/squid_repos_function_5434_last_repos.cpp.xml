<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5434_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">memCheckInit<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">void<pos:position pos:line="2" pos:column="18"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="19"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">mem_type<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">t<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">MEM_NONE<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><operator pos:line="6" pos:column="12">++<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">t<pos:position pos:line="6" pos:column="15"/></name> <operator pos:line="6" pos:column="16">&lt;<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="18">MEM_MAX<pos:position pos:line="6" pos:column="25"/></name></expr>)<pos:position pos:line="6" pos:column="26"/></condition> <block pos:line="6" pos:column="27">{
        <comment type="block" pos:line="7" pos:column="9">/*
         * If you hit this assertion, then you forgot to add a
         * memDataInit() line for type 't'.
         */</comment>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">assert<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><call><name pos:line="11" pos:column="16">GetPool<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">t<pos:position pos:line="11" pos:column="25"/></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></while>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

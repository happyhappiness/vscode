<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4667_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Http<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">One<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">Server<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">start<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">()<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">ConnStateData<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">start<pos:position pos:line="4" pos:column="25"/></name></name><argument_list pos:line="4" pos:column="25">()<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>

<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_OPENSSL<pos:position pos:line="6" pos:column="16"/></name></expr></cpp:if>
    <comment type="line" pos:line="7" pos:column="5">// XXX: Until we create an HttpsServer class, use this hack to allow old</comment>
    <comment type="line" pos:line="8" pos:column="5">// client_side.cc code to manipulate ConnStateData object directly</comment>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">isHttpsServer<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">postHttpsAccept<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">()<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
<cpp:endif pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">endif<pos:position pos:line="13" pos:column="7"/></cpp:directive></cpp:endif>

    <typedef pos:line="15" pos:column="5">typedef <type><name><name pos:line="15" pos:column="13">CommCbMemFunT<pos:position pos:line="15" pos:column="26"/></name><argument_list type="generic" pos:line="15" pos:column="26">&lt;<argument><expr><name pos:line="15" pos:column="27">Server<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">CommTimeoutCbParams<pos:position pos:line="15" pos:column="54"/></name></expr></argument>&gt;<pos:position pos:line="15" pos:column="58"/></argument_list></name></type> <name pos:line="15" pos:column="56">TimeoutDialer<pos:position pos:line="15" pos:column="69"/></name>;<pos:position pos:line="15" pos:column="70"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">AsyncCall<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">::<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">Pointer<pos:position pos:line="16" pos:column="23"/></name></name></type> <name pos:line="16" pos:column="24">timeoutCall<pos:position pos:line="16" pos:column="35"/></name> <init pos:line="16" pos:column="36">=  <expr><call><name pos:line="16" pos:column="39">JobCallback<pos:position pos:line="16" pos:column="50"/></name><argument_list pos:line="16" pos:column="50">(<argument><expr><literal type="number" pos:line="16" pos:column="51">33<pos:position pos:line="16" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="55">5<pos:position pos:line="16" pos:column="56"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="17" pos:column="39">TimeoutDialer<pos:position pos:line="17" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">this<pos:position pos:line="17" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="60">Http1<pos:position pos:line="17" pos:column="65"/></name><operator pos:line="17" pos:column="65">::<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="67">Server<pos:position pos:line="17" pos:column="73"/></name><operator pos:line="17" pos:column="73">::<pos:position pos:line="17" pos:column="75"/></operator><name pos:line="17" pos:column="75">requestTimeout<pos:position pos:line="17" pos:column="89"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="90"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="91"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">commSetConnTimeout<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">clientConnection<pos:position pos:line="18" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="42">Config<pos:position pos:line="18" pos:column="48"/></name><operator pos:line="18" pos:column="48">.<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="49">Timeout<pos:position pos:line="18" pos:column="56"/></name><operator pos:line="18" pos:column="56">.<pos:position pos:line="18" pos:column="57"/></operator><name pos:line="18" pos:column="57">request_start_timeout<pos:position pos:line="18" pos:column="78"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="80">timeoutCall<pos:position pos:line="18" pos:column="91"/></name></expr></argument>)<pos:position pos:line="18" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="93"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">readSomeData<pos:position pos:line="19" pos:column="17"/></name><argument_list pos:line="19" pos:column="17">()<pos:position pos:line="19" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="20"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

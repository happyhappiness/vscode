<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4471_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SSL_CTX<pos:position pos:line="1" pos:column="8"/></name> <modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">generateSslContextUsingPkeyAndCertFromMemory<pos:position pos:line="2" pos:column="50"/></name></name><parameter_list pos:line="2" pos:column="50">(<parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type> <name pos:line="2" pos:column="64">data<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="70">AnyP<pos:position pos:line="2" pos:column="74"/></name><operator pos:line="2" pos:column="74">::<pos:position pos:line="2" pos:column="76"/></operator><name pos:line="2" pos:column="76">PortCfg<pos:position pos:line="2" pos:column="83"/></name></name> <modifier pos:line="2" pos:column="84">&amp;<pos:position pos:line="2" pos:column="89"/></modifier></type><name pos:line="2" pos:column="85">port<pos:position pos:line="2" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="90"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ssl<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">X509_Pointer<pos:position pos:line="4" pos:column="22"/></name></name></type> <name pos:line="4" pos:column="23">cert<pos:position pos:line="4" pos:column="27"/></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Ssl<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">::<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">EVP_PKEY_Pointer<pos:position pos:line="5" pos:column="26"/></name></name></type> <name pos:line="5" pos:column="27">pkey<pos:position pos:line="5" pos:column="31"/></name></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">readCertAndPrivateKeyFromMemory<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">(<argument><expr><name pos:line="6" pos:column="42">cert<pos:position pos:line="6" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="48">pkey<pos:position pos:line="6" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="54">data<pos:position pos:line="6" pos:column="58"/></name></expr></argument>)<pos:position pos:line="6" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="60"/></condition><then pos:line="6" pos:column="60">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></return></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">cert<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">||<pos:position pos:line="9" pos:column="17"/></operator> <operator pos:line="9" pos:column="18">!<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">pkey<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></return></block></then></if>

    <return pos:line="12" pos:column="5">return <expr><call><name pos:line="12" pos:column="12">createSSLContext<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">cert<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="35">pkey<pos:position pos:line="12" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="41">port<pos:position pos:line="12" pos:column="45"/></name></expr></argument>)<pos:position pos:line="12" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="47"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

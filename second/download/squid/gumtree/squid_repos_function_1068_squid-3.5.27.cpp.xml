<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1068_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_address<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name><name pos:line="2" pos:column="15">Ip<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">Address<pos:position pos:line="2" pos:column="26"/></name></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">addr<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">token<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><call><name><name pos:line="4" pos:column="19">ConfigParser<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">::<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">NextToken<pos:position pos:line="4" pos:column="42"/></name></name><argument_list pos:line="4" pos:column="42">()<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">token<pos:position pos:line="6" pos:column="15"/></name></expr>)<pos:position pos:line="6" pos:column="16"/></condition><then pos:line="6" pos:column="16"> <block pos:line="6" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">self_destruct<pos:position pos:line="7" pos:column="22"/></name><argument_list pos:line="7" pos:column="22">()<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
        <return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">strcmp<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">token<pos:position pos:line="11" pos:column="22"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="23">"any_addr"<pos:position pos:line="11" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="35"/></condition><then pos:line="11" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="12" pos:column="9">addr<pos:position pos:line="12" pos:column="13"/></name><operator pos:line="12" pos:column="13">-&gt;<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="15">setAnyAddr<pos:position pos:line="12" pos:column="25"/></name></name><argument_list pos:line="12" pos:column="25">()<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt></block></then>
    <elseif pos:line="13" pos:column="5">else <if pos:line="13" pos:column="10">if <condition pos:line="13" pos:column="13">( <expr><operator pos:line="13" pos:column="15">(<pos:position pos:line="13" pos:column="16"/></operator><operator pos:line="13" pos:column="16">!<pos:position pos:line="13" pos:column="17"/></operator><call><name pos:line="13" pos:column="17">strcmp<pos:position pos:line="13" pos:column="23"/></name><argument_list pos:line="13" pos:column="23">(<argument><expr><name pos:line="13" pos:column="24">token<pos:position pos:line="13" pos:column="29"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="13" pos:column="30">"no_addr"<pos:position pos:line="13" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="40"/></argument_list></call><operator pos:line="13" pos:column="40">)<pos:position pos:line="13" pos:column="41"/></operator> <operator pos:line="13" pos:column="42">||<pos:position pos:line="13" pos:column="44"/></operator> <operator pos:line="13" pos:column="45">(<pos:position pos:line="13" pos:column="46"/></operator><operator pos:line="13" pos:column="46">!<pos:position pos:line="13" pos:column="47"/></operator><call><name pos:line="13" pos:column="47">strcmp<pos:position pos:line="13" pos:column="53"/></name><argument_list pos:line="13" pos:column="53">(<argument><expr><name pos:line="13" pos:column="54">token<pos:position pos:line="13" pos:column="59"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="13" pos:column="60">"full_mask"<pos:position pos:line="13" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="72"/></argument_list></call><operator pos:line="13" pos:column="72">)<pos:position pos:line="13" pos:column="73"/></operator></expr> )<pos:position pos:line="13" pos:column="75"/></condition><then pos:line="13" pos:column="75">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="14" pos:column="9">addr<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">setNoAddr<pos:position pos:line="14" pos:column="24"/></name></name><argument_list pos:line="14" pos:column="24">()<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="15" pos:column="5">else <if pos:line="15" pos:column="10">if <condition pos:line="15" pos:column="13">( <expr><operator pos:line="15" pos:column="15">(<pos:position pos:line="15" pos:column="16"/></operator><operator pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">addr<pos:position pos:line="15" pos:column="21"/></name> <operator pos:line="15" pos:column="22">=<pos:position pos:line="15" pos:column="23"/></operator> <name pos:line="15" pos:column="24">token<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">)<pos:position pos:line="15" pos:column="30"/></operator></expr> )<pos:position pos:line="15" pos:column="32"/></condition><then pos:line="15" pos:column="32"> <comment type="line" pos:line="15" pos:column="33">// try parse numeric/IPA</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="16" pos:column="9">(<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">void<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">)<pos:position pos:line="16" pos:column="15"/></operator> <literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="17" pos:column="5">else <if pos:line="17" pos:column="10">if <condition pos:line="17" pos:column="13">(<expr><call><name><name pos:line="17" pos:column="14">addr<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">GetHostByName<pos:position pos:line="17" pos:column="33"/></name></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">token<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="41"/></condition><then pos:line="17" pos:column="41"> <comment type="line" pos:line="17" pos:column="42">// dont use ipcache</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">void<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">)<pos:position pos:line="18" pos:column="15"/></operator> <literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></expr_stmt></block></then></if></elseif>
    <else pos:line="19" pos:column="5">else <block pos:line="19" pos:column="10">{ <comment type="line" pos:line="19" pos:column="12">// not an IP and not a hostname</comment>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">3<pos:position pos:line="20" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="19">DBG_CRITICAL<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="33">"FATAL: invalid IP address or domain name '"<pos:position pos:line="20" pos:column="77"/></literal> <operator pos:line="20" pos:column="78">&lt;&lt;<pos:position pos:line="20" pos:column="86"/></operator> <name pos:line="20" pos:column="81">token<pos:position pos:line="20" pos:column="86"/></name> <operator pos:line="20" pos:column="87">&lt;&lt;<pos:position pos:line="20" pos:column="95"/></operator> <literal type="string" pos:line="20" pos:column="90">"'"<pos:position pos:line="20" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="95"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">self_destruct<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">()<pos:position pos:line="21" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

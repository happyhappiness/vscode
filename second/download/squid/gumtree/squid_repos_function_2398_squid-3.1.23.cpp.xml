<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2398_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">complete<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">entry<pos:position pos:line="4" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name><name pos:line="5" pos:column="12">entry<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="19">store_status<pos:position pos:line="5" pos:column="31"/></name></name> <operator pos:line="5" pos:column="32">==<pos:position pos:line="5" pos:column="34"/></operator> <name pos:line="5" pos:column="35">STORE_PENDING<pos:position pos:line="5" pos:column="48"/></name></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">17<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">3<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="19">HERE<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">&lt;&lt;<pos:position pos:line="6" pos:column="32"/></operator> <call><name><name pos:line="6" pos:column="27">e<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">-&gt;<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="30">url<pos:position pos:line="6" pos:column="33"/></name></name><argument_list pos:line="6" pos:column="33">()<pos:position pos:line="6" pos:column="35"/></argument_list></call> <operator pos:line="6" pos:column="36">&lt;&lt;<pos:position pos:line="6" pos:column="44"/></operator> <literal type="string" pos:line="6" pos:column="39">"\n\tstatus "<pos:position pos:line="6" pos:column="52"/></literal> <operator pos:line="6" pos:column="53">&lt;&lt;<pos:position pos:line="6" pos:column="61"/></operator> <call><name><name pos:line="6" pos:column="56">entry<pos:position pos:line="6" pos:column="61"/></name><operator pos:line="6" pos:column="61">-&gt;<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="63">getReply<pos:position pos:line="6" pos:column="71"/></name></name><argument_list pos:line="6" pos:column="71">()<pos:position pos:line="6" pos:column="73"/></argument_list></call><operator pos:line="6" pos:column="73">-&gt;<pos:position pos:line="6" pos:column="78"/></operator><name><name pos:line="6" pos:column="75">sline<pos:position pos:line="6" pos:column="80"/></name><operator pos:line="6" pos:column="80">.<pos:position pos:line="6" pos:column="81"/></operator><name pos:line="6" pos:column="81">status<pos:position pos:line="6" pos:column="87"/></name></name></expr></argument>  )<pos:position pos:line="6" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="91"/></expr_stmt>
<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">URL_CHECKSUM_DEBUG<pos:position pos:line="7" pos:column="23"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">entry<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">-&gt;<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="12">mem_obj<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">-&gt;<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="21">checkUrlChecksum<pos:position pos:line="9" pos:column="37"/></name></name><argument_list pos:line="9" pos:column="37">()<pos:position pos:line="9" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">logReplyStatus<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name pos:line="12" pos:column="20">n_tries<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><call><name><name pos:line="12" pos:column="29">entry<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">-&gt;<pos:position pos:line="12" pos:column="39"/></operator><name pos:line="12" pos:column="36">getReply<pos:position pos:line="12" pos:column="44"/></name></name><argument_list pos:line="12" pos:column="44">()<pos:position pos:line="12" pos:column="46"/></argument_list></call><operator pos:line="12" pos:column="46">-&gt;<pos:position pos:line="12" pos:column="51"/></operator><name><name pos:line="12" pos:column="48">sline<pos:position pos:line="12" pos:column="53"/></name><operator pos:line="12" pos:column="53">.<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="54">status<pos:position pos:line="12" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="62"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">reforward<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">()<pos:position pos:line="14" pos:column="20"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="21"/></condition><then pos:line="14" pos:column="21"> <block pos:line="14" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">17<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">3<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"fwdComplete: re-forwarding "<pos:position pos:line="15" pos:column="52"/></literal> <operator pos:line="15" pos:column="53">&lt;&lt;<pos:position pos:line="15" pos:column="61"/></operator> <call><name><name pos:line="15" pos:column="56">entry<pos:position pos:line="15" pos:column="61"/></name><operator pos:line="15" pos:column="61">-&gt;<pos:position pos:line="15" pos:column="66"/></operator><name pos:line="15" pos:column="63">getReply<pos:position pos:line="15" pos:column="71"/></name></name><argument_list pos:line="15" pos:column="71">()<pos:position pos:line="15" pos:column="73"/></argument_list></call><operator pos:line="15" pos:column="73">-&gt;<pos:position pos:line="15" pos:column="78"/></operator><name><name pos:line="15" pos:column="75">sline<pos:position pos:line="15" pos:column="80"/></name><operator pos:line="15" pos:column="80">.<pos:position pos:line="15" pos:column="81"/></operator><name pos:line="15" pos:column="81">status<pos:position pos:line="15" pos:column="87"/></name></name> <operator pos:line="15" pos:column="88">&lt;&lt;<pos:position pos:line="15" pos:column="96"/></operator> <literal type="string" pos:line="15" pos:column="91">" "<pos:position pos:line="15" pos:column="94"/></literal> <operator pos:line="15" pos:column="95">&lt;&lt;<pos:position pos:line="15" pos:column="103"/></operator> <call><name><name pos:line="15" pos:column="98">e<pos:position pos:line="15" pos:column="99"/></name><operator pos:line="15" pos:column="99">-&gt;<pos:position pos:line="15" pos:column="104"/></operator><name pos:line="15" pos:column="101">url<pos:position pos:line="15" pos:column="104"/></name></name><argument_list pos:line="15" pos:column="104">()<pos:position pos:line="15" pos:column="106"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="108"/></expr_stmt>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">server_fd<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">&gt;<pos:position pos:line="17" pos:column="27"/></operator> <operator pos:line="17" pos:column="25">-<pos:position pos:line="17" pos:column="26"/></operator><literal type="number" pos:line="17" pos:column="26">1<pos:position pos:line="17" pos:column="27"/></literal></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="13">unregister<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">server_fd<pos:position pos:line="18" pos:column="33"/></name></expr></argument>)<pos:position pos:line="18" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="35"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">e<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">reset<pos:position pos:line="20" pos:column="17"/></name></name><argument_list pos:line="20" pos:column="17">()<pos:position pos:line="20" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="22" pos:column="9">startComplete<pos:position pos:line="22" pos:column="22"/></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name pos:line="22" pos:column="23">servers<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then> <else pos:line="23" pos:column="7">else <block pos:line="23" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">17<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="20">3<pos:position pos:line="24" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="23">"fwdComplete: server FD "<pos:position pos:line="24" pos:column="48"/></literal> <operator pos:line="24" pos:column="49">&lt;&lt;<pos:position pos:line="24" pos:column="57"/></operator> <name pos:line="24" pos:column="52">server_fd<pos:position pos:line="24" pos:column="61"/></name> <operator pos:line="24" pos:column="62">&lt;&lt;<pos:position pos:line="24" pos:column="70"/></operator> <literal type="string" pos:line="24" pos:column="65">" not re-forwarding status "<pos:position pos:line="24" pos:column="93"/></literal> <operator pos:line="24" pos:column="94">&lt;&lt;<pos:position pos:line="24" pos:column="102"/></operator> <call><name><name pos:line="24" pos:column="97">entry<pos:position pos:line="24" pos:column="102"/></name><operator pos:line="24" pos:column="102">-&gt;<pos:position pos:line="24" pos:column="107"/></operator><name pos:line="24" pos:column="104">getReply<pos:position pos:line="24" pos:column="112"/></name></name><argument_list pos:line="24" pos:column="112">()<pos:position pos:line="24" pos:column="114"/></argument_list></call><operator pos:line="24" pos:column="114">-&gt;<pos:position pos:line="24" pos:column="119"/></operator><name><name pos:line="24" pos:column="116">sline<pos:position pos:line="24" pos:column="121"/></name><operator pos:line="24" pos:column="121">.<pos:position pos:line="24" pos:column="122"/></operator><name pos:line="24" pos:column="122">status<pos:position pos:line="24" pos:column="128"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="129"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="130"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">EBIT_CLR<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name><name pos:line="25" pos:column="18">entry<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">flags<pos:position pos:line="25" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="32">ENTRY_FWD_HDR_WAIT<pos:position pos:line="25" pos:column="50"/></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="26" pos:column="9">entry<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">complete<pos:position pos:line="26" pos:column="24"/></name></name><argument_list pos:line="26" pos:column="24">()<pos:position pos:line="26" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="27"/></expr_stmt>

        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">server_fd<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">&lt;<pos:position pos:line="28" pos:column="27"/></operator> <literal type="number" pos:line="28" pos:column="25">0<pos:position pos:line="28" pos:column="26"/></literal></expr>)<pos:position pos:line="28" pos:column="27"/></condition><then pos:line="28" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="13">completed<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">()<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="31" pos:column="9">self<pos:position pos:line="31" pos:column="13"/></name> <operator pos:line="31" pos:column="14">=<pos:position pos:line="31" pos:column="15"/></operator> <name pos:line="31" pos:column="16">NULL<pos:position pos:line="31" pos:column="20"/></name></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt> <comment type="line" pos:line="31" pos:column="22">// refcounted</comment>
    }<pos:position pos:line="32" pos:column="6"/></block></else></if>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

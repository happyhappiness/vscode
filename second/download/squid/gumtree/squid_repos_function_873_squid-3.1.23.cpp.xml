<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_873_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ConnectStateData<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">commRetryConnect<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">()<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">addrcount<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">&gt;<pos:position pos:line="4" pos:column="26"/></operator> <literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">addrcount<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">==<pos:position pos:line="6" pos:column="21"/></operator> <literal type="number" pos:line="6" pos:column="22">1<pos:position pos:line="6" pos:column="23"/></literal></expr>)<pos:position pos:line="6" pos:column="24"/></condition><then pos:line="6" pos:column="24"> <block pos:line="6" pos:column="25">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">tries<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">&gt;=<pos:position pos:line="7" pos:column="24"/></operator> <name><name pos:line="7" pos:column="22">Config<pos:position pos:line="7" pos:column="28"/></name><operator pos:line="7" pos:column="28">.<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="29">retry<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">.<pos:position pos:line="7" pos:column="35"/></operator><name pos:line="7" pos:column="35">maxtries<pos:position pos:line="7" pos:column="43"/></name></name></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44">
            <block type="pseudo"><return pos:line="8" pos:column="13">return <expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if>

        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">squid_curtime<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">-<pos:position pos:line="10" pos:column="28"/></operator> <name pos:line="10" pos:column="29">connstart<pos:position pos:line="10" pos:column="38"/></name> <operator pos:line="10" pos:column="39">&gt;<pos:position pos:line="10" pos:column="43"/></operator> <name><name pos:line="10" pos:column="41">Config<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">.<pos:position pos:line="10" pos:column="48"/></operator><name pos:line="10" pos:column="48">Timeout<pos:position pos:line="10" pos:column="55"/></name><operator pos:line="10" pos:column="55">.<pos:position pos:line="10" pos:column="56"/></operator><name pos:line="10" pos:column="56">connect<pos:position pos:line="10" pos:column="63"/></name></name></expr>)<pos:position pos:line="10" pos:column="64"/></condition><then pos:line="10" pos:column="64">
            <block type="pseudo"><return pos:line="11" pos:column="13">return <expr><literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <else pos:line="12" pos:column="7">else <block pos:line="12" pos:column="12">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">tries<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">&gt;<pos:position pos:line="13" pos:column="23"/></operator> <name pos:line="13" pos:column="21">addrcount<pos:position pos:line="13" pos:column="30"/></name></expr>)<pos:position pos:line="13" pos:column="31"/></condition><then pos:line="13" pos:column="31"> <block pos:line="13" pos:column="32">{
            <comment type="block" pos:line="14" pos:column="13">/* Flush bad address count in case we are
             * skipping over incompatible protocol
             */</comment>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">ipcacheMarkAllGood<pos:position pos:line="17" pos:column="31"/></name><argument_list pos:line="17" pos:column="31">(<argument><expr><name pos:line="17" pos:column="32">host<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
            <return pos:line="18" pos:column="13">return <expr><literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr>;<pos:position pos:line="18" pos:column="22"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>

    <return pos:line="22" pos:column="5">return <expr><call><name pos:line="22" pos:column="12">commResetFD<pos:position pos:line="22" pos:column="23"/></name><argument_list pos:line="22" pos:column="23">()<pos:position pos:line="22" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="26"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3512_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ACLFilledChecklist<pos:position pos:line="1" pos:column="19"/></name> <modifier pos:line="1" pos:column="20">*<pos:position pos:line="1" pos:column="21"/></modifier></type>
<name pos:line="2" pos:column="1">clientAclChecklistCreate<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">acl_access<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type> <name pos:line="2" pos:column="45">acl<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">ClientHttpRequest<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type> <name pos:line="2" pos:column="70">http<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ConnStateData<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type> <name pos:line="4" pos:column="21">conn<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name><name pos:line="4" pos:column="28">http<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">getConn<pos:position pos:line="4" pos:column="41"/></name></name><argument_list pos:line="4" pos:column="41">()<pos:position pos:line="4" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ACLFilledChecklist<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type><name pos:line="5" pos:column="25">ch<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><operator pos:line="5" pos:column="30">new<pos:position pos:line="5" pos:column="33"/></operator> <call><name pos:line="5" pos:column="34">ACLFilledChecklist<pos:position pos:line="5" pos:column="52"/></name><argument_list pos:line="5" pos:column="52">(<argument><expr><name pos:line="5" pos:column="53">acl<pos:position pos:line="5" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="58">http<pos:position pos:line="5" pos:column="62"/></name><operator pos:line="5" pos:column="62">-&gt;<pos:position pos:line="5" pos:column="67"/></operator><name pos:line="5" pos:column="64">request<pos:position pos:line="5" pos:column="71"/></name></name></expr></argument>,
            <argument><expr><ternary><condition><expr><call><name pos:line="6" pos:column="13">cbdataReferenceValid<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">conn<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call> <operator pos:line="6" pos:column="40">&amp;&amp;<pos:position pos:line="6" pos:column="50"/></operator> <name pos:line="6" pos:column="43">conn<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">!=<pos:position pos:line="6" pos:column="50"/></operator> <name pos:line="6" pos:column="51">NULL<pos:position pos:line="6" pos:column="55"/></name></expr> ?<pos:position pos:line="6" pos:column="57"/></condition><then pos:line="6" pos:column="57"> <expr><name><name pos:line="6" pos:column="58">conn<pos:position pos:line="6" pos:column="62"/></name><operator pos:line="6" pos:column="62">-&gt;<pos:position pos:line="6" pos:column="67"/></operator><name pos:line="6" pos:column="64">rfc931<pos:position pos:line="6" pos:column="70"/></name></name></expr> <pos:position pos:line="6" pos:column="71"/></then><else pos:line="6" pos:column="71">: <expr><name pos:line="6" pos:column="73">dash_str<pos:position pos:line="6" pos:column="81"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="6" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="83"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/*
     * hack for ident ACL. It needs to get full addresses, and a place to store
     * the ident result on persistent connections...
     */</comment>
    <comment type="block" pos:line="12" pos:column="5">/* connection oriented auth also needs these two lines for it's operation. */</comment>
    <comment type="block" pos:line="13" pos:column="5">/*
     * Internal requests do not have a connection reference, because: A) their
     * byte count may be transformed before being applied to an outbound
     * connection B) they are internal - any limiting on them should be done on
     * the server end.
     */</comment>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">conn<pos:position pos:line="20" pos:column="13"/></name> <operator pos:line="20" pos:column="14">!=<pos:position pos:line="20" pos:column="16"/></operator> <name pos:line="20" pos:column="17">NULL<pos:position pos:line="20" pos:column="21"/></name></expr>)<pos:position pos:line="20" pos:column="22"/></condition><then pos:line="20" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="21" pos:column="9">ch<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">conn<pos:position pos:line="21" pos:column="17"/></name></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name pos:line="21" pos:column="18">conn<pos:position pos:line="21" pos:column="22"/></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt></block></then></if>	<comment type="block" pos:line="21" pos:column="25">/* unreferenced in FilledCheckList.cc */</comment>

    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">ch<pos:position pos:line="23" pos:column="14"/></name></expr>;<pos:position pos:line="23" pos:column="15"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

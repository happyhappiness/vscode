<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5292_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSSwapDir<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">createSwapSubDirs<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">()<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">LOCAL_ARRAY<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">name<pos:position pos:line="4" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="29">MAXPATHLEN<pos:position pos:line="4" pos:column="39"/></name></expr></argument>)<pos:position pos:line="4" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="41"/></expr_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><decl><type><name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name pos:line="6" pos:column="21">i<pos:position pos:line="6" pos:column="22"/></name> <operator pos:line="6" pos:column="23">&lt;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="25">l1<pos:position pos:line="6" pos:column="27"/></name></expr>;<pos:position pos:line="6" pos:column="28"/></condition> <incr><expr><operator pos:line="6" pos:column="29">++<pos:position pos:line="6" pos:column="31"/></operator><name pos:line="6" pos:column="31">i<pos:position pos:line="6" pos:column="32"/></name></expr></incr>)<pos:position pos:line="6" pos:column="33"/></control> <block pos:line="6" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">snprintf<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name pos:line="7" pos:column="18">name<pos:position pos:line="7" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="24">MAXPATHLEN<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="36">"%s/%02X"<pos:position pos:line="7" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="47">path<pos:position pos:line="7" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="53">i<pos:position pos:line="7" pos:column="54"/></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="56"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="9" pos:column="9">int<pos:position pos:line="9" pos:column="12"/></name></type> <name pos:line="9" pos:column="13">should_exist<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">createDirectory<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">name<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="35">0<pos:position pos:line="11" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="38"/></condition><then pos:line="11" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="13">should_exist<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">=<pos:position pos:line="12" pos:column="27"/></operator> <literal type="number" pos:line="12" pos:column="28">0<pos:position pos:line="12" pos:column="29"/></literal></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt></block></then>
        <else pos:line="13" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="13">should_exist<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <literal type="number" pos:line="14" pos:column="28">1<pos:position pos:line="14" pos:column="29"/></literal></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">47<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="20">DBG_IMPORTANT<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="35">"Making directories in "<pos:position pos:line="16" pos:column="59"/></literal> <operator pos:line="16" pos:column="60">&lt;&lt;<pos:position pos:line="16" pos:column="68"/></operator> <name pos:line="16" pos:column="63">name<pos:position pos:line="16" pos:column="67"/></name></expr></argument>)<pos:position pos:line="16" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="69"/></expr_stmt>

        <for pos:line="18" pos:column="9">for <control pos:line="18" pos:column="13">(<init><decl><type><name pos:line="18" pos:column="14">int<pos:position pos:line="18" pos:column="17"/></name></type> <name pos:line="18" pos:column="18">k<pos:position pos:line="18" pos:column="19"/></name> <init pos:line="18" pos:column="20">= <expr><literal type="number" pos:line="18" pos:column="22">0<pos:position pos:line="18" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="24"/></init> <condition><expr><name pos:line="18" pos:column="25">k<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">&lt;<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="29">l2<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></condition> <incr><expr><operator pos:line="18" pos:column="33">++<pos:position pos:line="18" pos:column="35"/></operator><name pos:line="18" pos:column="35">k<pos:position pos:line="18" pos:column="36"/></name></expr></incr>)<pos:position pos:line="18" pos:column="37"/></control> <block pos:line="18" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="19" pos:column="13">snprintf<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">name<pos:position pos:line="19" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">MAXPATHLEN<pos:position pos:line="19" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="40">"%s/%02X/%02X"<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="56">path<pos:position pos:line="19" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="62">i<pos:position pos:line="19" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="65">k<pos:position pos:line="19" pos:column="66"/></name></expr></argument>)<pos:position pos:line="19" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">createDirectory<pos:position pos:line="20" pos:column="28"/></name><argument_list pos:line="20" pos:column="28">(<argument><expr><name pos:line="20" pos:column="29">name<pos:position pos:line="20" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="35">should_exist<pos:position pos:line="20" pos:column="47"/></name></expr></argument>)<pos:position pos:line="20" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="21" pos:column="10"/></block></for>
    }<pos:position pos:line="22" pos:column="6"/></block></for>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

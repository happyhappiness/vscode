<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4639_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name pos:line="1" pos:column="6">gotHello<pos:position pos:line="1" pos:column="14"/></name><parameter_list pos:line="1" pos:column="14">()<pos:position pos:line="1" pos:column="16"/></parameter_list> <block pos:line="1" pos:column="17">{ <return pos:line="1" pos:column="19">return <expr><operator pos:line="1" pos:column="26">(<pos:position pos:line="1" pos:column="27"/></operator><name pos:line="1" pos:column="27">helloState<pos:position pos:line="1" pos:column="37"/></name> <operator pos:line="1" pos:column="38">==<pos:position pos:line="1" pos:column="40"/></operator> <name pos:line="1" pos:column="41">atHelloReceived<pos:position pos:line="1" pos:column="56"/></name><operator pos:line="1" pos:column="56">)<pos:position pos:line="1" pos:column="57"/></operator></expr>;<pos:position pos:line="1" pos:column="58"/></return> }<pos:position pos:line="1" pos:column="60"/></block></function>
    <comment type="line" format="doxygen" pos:line="2" pos:column="5">/// Return the SSL features requested by SSL client</comment>
    <function><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name><name pos:line="3" pos:column="11">Bio<pos:position pos:line="3" pos:column="14"/></name><operator pos:line="3" pos:column="14">::<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="16">sslFeatures<pos:position pos:line="3" pos:column="27"/></name></name> <modifier pos:line="3" pos:column="28">&amp;<pos:position pos:line="3" pos:column="33"/></modifier></type><name pos:line="3" pos:column="29">getFeatures<pos:position pos:line="3" pos:column="40"/></name><parameter_list pos:line="3" pos:column="40">()<pos:position pos:line="3" pos:column="42"/></parameter_list> <specifier pos:line="3" pos:column="43">const<pos:position pos:line="3" pos:column="48"/></specifier> <block pos:line="3" pos:column="49">{<return pos:line="3" pos:column="50">return <expr><name pos:line="3" pos:column="57">features<pos:position pos:line="3" pos:column="65"/></name></expr>;<pos:position pos:line="3" pos:column="66"/></return>}<pos:position pos:line="3" pos:column="67"/></block></function>
    <comment type="line" format="doxygen" pos:line="4" pos:column="5">/// Prevents or allow writting on socket.</comment>
    <function><type><name pos:line="5" pos:column="5">void<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">hold<pos:position pos:line="5" pos:column="14"/></name><parameter_list pos:line="5" pos:column="14">(<parameter><decl><type><name pos:line="5" pos:column="15">bool<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">h<pos:position pos:line="5" pos:column="21"/></name></decl></parameter>)<pos:position pos:line="5" pos:column="22"/></parameter_list> <block pos:line="5" pos:column="23">{<expr_stmt><expr><name pos:line="5" pos:column="24">holdRead_<pos:position pos:line="5" pos:column="33"/></name> <operator pos:line="5" pos:column="34">=<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="36">holdWrite_<pos:position pos:line="5" pos:column="46"/></name> <operator pos:line="5" pos:column="47">=<pos:position pos:line="5" pos:column="48"/></operator> <name pos:line="5" pos:column="49">h<pos:position pos:line="5" pos:column="50"/></name></expr>;<pos:position pos:line="5" pos:column="51"/></expr_stmt>}<pos:position pos:line="5" pos:column="52"/></block></function>

<private pos:line="7" pos:column="1">private:
    <comment type="line" format="doxygen" pos:line="8" pos:column="5">/// True if the SSL state corresponds to a hello message</comment>
    <function_decl><type><name pos:line="9" pos:column="5">bool<pos:position pos:line="9" pos:column="9"/></name></type> <name pos:line="9" pos:column="10">isClientHello<pos:position pos:line="9" pos:column="23"/></name><parameter_list pos:line="9" pos:column="23">(<parameter><decl><type><name pos:line="9" pos:column="24">int<pos:position pos:line="9" pos:column="27"/></name></type> <name pos:line="9" pos:column="28">state<pos:position pos:line="9" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="9" pos:column="34"/></parameter_list>;<pos:position pos:line="9" pos:column="35"/></function_decl></private></unit>

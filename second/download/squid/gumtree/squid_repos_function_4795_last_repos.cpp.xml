<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4795_last_repos.cpp" pos:tabs="8"><function type="operator"><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <specifier pos:line="1" pos:column="8">inline<pos:position pos:line="1" pos:column="14"/></specifier>
<type><name><name pos:line="2" pos:column="1">std<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">ostream<pos:position pos:line="2" pos:column="13"/></name></name> <modifier pos:line="2" pos:column="14">&amp;<pos:position pos:line="2" pos:column="19"/></modifier></type>
<name pos:line="3" pos:column="1">operator <name pos:line="3" pos:column="10">&lt;&lt;<pos:position pos:line="3" pos:column="18"/></name></name><parameter_list pos:line="3" pos:column="12">(<parameter><decl><type><name><name pos:line="3" pos:column="13">std<pos:position pos:line="3" pos:column="16"/></name><operator pos:line="3" pos:column="16">::<pos:position pos:line="3" pos:column="18"/></operator><name pos:line="3" pos:column="18">ostream<pos:position pos:line="3" pos:column="25"/></name></name> <modifier pos:line="3" pos:column="26">&amp;<pos:position pos:line="3" pos:column="31"/></modifier></type><name pos:line="3" pos:column="27">os<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="3" pos:column="31">const<pos:position pos:line="3" pos:column="36"/></specifier> <name><name pos:line="3" pos:column="37">Parser<pos:position pos:line="3" pos:column="43"/></name><operator pos:line="3" pos:column="43">::<pos:position pos:line="3" pos:column="45"/></operator><name pos:line="3" pos:column="45">BinaryTokenizerContext<pos:position pos:line="3" pos:column="67"/></name></name> <modifier pos:line="3" pos:column="68">*<pos:position pos:line="3" pos:column="69"/></modifier></type><name pos:line="3" pos:column="69">context<pos:position pos:line="3" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="77"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">context<pos:position pos:line="5" pos:column="16"/></name></expr>)<pos:position pos:line="5" pos:column="17"/></condition><then pos:line="5" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="9">os<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">&lt;&lt;<pos:position pos:line="6" pos:column="20"/></operator> <name><name pos:line="6" pos:column="15">context<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">parent<pos:position pos:line="6" pos:column="30"/></name></name> <operator pos:line="6" pos:column="31">&lt;&lt;<pos:position pos:line="6" pos:column="39"/></operator> <name><name pos:line="6" pos:column="34">context<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">name<pos:position pos:line="6" pos:column="47"/></name></name></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt></block></then></if>
    <return pos:line="7" pos:column="5">return <expr><name pos:line="7" pos:column="12">os<pos:position pos:line="7" pos:column="14"/></name></expr>;<pos:position pos:line="7" pos:column="15"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

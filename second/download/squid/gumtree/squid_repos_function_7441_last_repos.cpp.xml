<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7441_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">HandshakeParser<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">isSslv2Record<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">(<parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">SBuf<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">&amp;<pos:position pos:line="2" pos:column="58"/></modifier></type><name pos:line="2" pos:column="54">raw<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="58"/></parameter_list> <specifier pos:line="2" pos:column="59">const<pos:position pos:line="2" pos:column="64"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Parser<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">::<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">BinaryTokenizer<pos:position pos:line="4" pos:column="28"/></name></name></type> <name pos:line="4" pos:column="29">tk<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><name pos:line="4" pos:column="32">raw<pos:position pos:line="4" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="4" pos:column="37">true<pos:position pos:line="4" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="42"/></argument_list></decl>;<pos:position pos:line="4" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">uint16_t<pos:position pos:line="5" pos:column="19"/></name></type> <name pos:line="5" pos:column="20">head<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name><name pos:line="5" pos:column="27">tk<pos:position pos:line="5" pos:column="29"/></name><operator pos:line="5" pos:column="29">.<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">uint16<pos:position pos:line="5" pos:column="36"/></name></name><argument_list pos:line="5" pos:column="36">(<argument><expr><literal type="string" pos:line="5" pos:column="37">"?v2Hello.msg_head"<pos:position pos:line="5" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">uint8_t<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">type<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><call><name><name pos:line="6" pos:column="26">tk<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">uint8<pos:position pos:line="6" pos:column="34"/></name></name><argument_list pos:line="6" pos:column="34">(<argument><expr><literal type="string" pos:line="6" pos:column="35">"?v2Hello.msg_type"<pos:position pos:line="6" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="56"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">uint16_t<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">length<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">head<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">&amp;<pos:position pos:line="7" pos:column="39"/></operator> <literal type="number" pos:line="7" pos:column="36">0x7FFF<pos:position pos:line="7" pos:column="42"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="43"/></decl_stmt>
    <return pos:line="8" pos:column="5">return <expr><operator pos:line="8" pos:column="12">(<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="13">head<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&amp;<pos:position pos:line="8" pos:column="23"/></operator> <literal type="number" pos:line="8" pos:column="20">0x8000<pos:position pos:line="8" pos:column="26"/></literal><operator pos:line="8" pos:column="26">)<pos:position pos:line="8" pos:column="27"/></operator> <operator pos:line="8" pos:column="28">&amp;&amp;<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="31">length<pos:position pos:line="8" pos:column="37"/></name> <operator pos:line="8" pos:column="38">&amp;&amp;<pos:position pos:line="8" pos:column="48"/></operator> <name pos:line="8" pos:column="41">type<pos:position pos:line="8" pos:column="45"/></name> <operator pos:line="8" pos:column="46">==<pos:position pos:line="8" pos:column="48"/></operator> <literal type="number" pos:line="8" pos:column="49">1<pos:position pos:line="8" pos:column="50"/></literal></expr>;<pos:position pos:line="8" pos:column="51"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2993_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">setAuth<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name><name pos:line="2" pos:column="30">Auth<pos:position pos:line="2" pos:column="34"/></name><operator pos:line="2" pos:column="34">::<pos:position pos:line="2" pos:column="36"/></operator><name pos:line="2" pos:column="36">UserRequest<pos:position pos:line="2" pos:column="47"/></name><operator pos:line="2" pos:column="47">::<pos:position pos:line="2" pos:column="49"/></operator><name pos:line="2" pos:column="49">Pointer<pos:position pos:line="2" pos:column="56"/></name></name> <modifier pos:line="2" pos:column="57">&amp;<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="58">aur<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier> <name pos:line="2" pos:column="69">char<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">by<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">auth_<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">==<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="18">NULL<pos:position pos:line="4" pos:column="22"/></name></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23"> <block pos:line="4" pos:column="24">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name pos:line="5" pos:column="13">aur<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">!=<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25"> <block pos:line="5" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="6" pos:column="13">debugs<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><literal type="number" pos:line="6" pos:column="20">33<pos:position pos:line="6" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="24">2<pos:position pos:line="6" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="27">"Adding connection-auth to "<pos:position pos:line="6" pos:column="55"/></literal> <operator pos:line="6" pos:column="56">&lt;&lt;<pos:position pos:line="6" pos:column="64"/></operator> <name pos:line="6" pos:column="59">clientConnection<pos:position pos:line="6" pos:column="75"/></name> <operator pos:line="6" pos:column="76">&lt;&lt;<pos:position pos:line="6" pos:column="84"/></operator> <literal type="string" pos:line="6" pos:column="79">" from "<pos:position pos:line="6" pos:column="87"/></literal> <operator pos:line="6" pos:column="88">&lt;&lt;<pos:position pos:line="6" pos:column="96"/></operator> <name pos:line="6" pos:column="91">by<pos:position pos:line="6" pos:column="93"/></name></expr></argument>)<pos:position pos:line="6" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="95"/></expr_stmt>
            <expr_stmt><expr><name pos:line="7" pos:column="13">auth_<pos:position pos:line="7" pos:column="18"/></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">aur<pos:position pos:line="7" pos:column="24"/></name></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="8" pos:column="10"/></block></then></if>
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="12" pos:column="5">// clobered with self-pointer</comment>
    <comment type="line" pos:line="13" pos:column="5">// NP: something nasty is going on in Squid, but harmless.</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">aur<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">==<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">auth_<pos:position pos:line="14" pos:column="21"/></name></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22"> <block pos:line="14" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">33<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">2<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="23">"WARNING: Ignoring duplicate connection-auth for "<pos:position pos:line="15" pos:column="73"/></literal> <operator pos:line="15" pos:column="74">&lt;&lt;<pos:position pos:line="15" pos:column="82"/></operator> <name pos:line="15" pos:column="77">clientConnection<pos:position pos:line="15" pos:column="93"/></name> <operator pos:line="15" pos:column="94">&lt;&lt;<pos:position pos:line="15" pos:column="102"/></operator> <literal type="string" pos:line="15" pos:column="97">" from "<pos:position pos:line="15" pos:column="105"/></literal> <operator pos:line="15" pos:column="106">&lt;&lt;<pos:position pos:line="15" pos:column="114"/></operator> <name pos:line="15" pos:column="109">by<pos:position pos:line="15" pos:column="111"/></name></expr></argument>)<pos:position pos:line="15" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="113"/></expr_stmt>
        <return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/*
     * Connection-auth relies on a single set of credentials being preserved
     * for all requests on a connection once they have been setup.
     * There are several things which need to happen to preserve security
     * when connection-auth credentials change unexpectedly or are unset.
     *
     * 1) auth helper released from any active state
     *
     * They can only be reserved by a handshake process which this
     * connection can now never complete.
     * This prevents helpers hanging when their connections close.
     *
     * 2) pinning is expected to be removed and server conn closed
     *
     * The upstream link is authenticated with the same credentials.
     * Expecting the same level of consistency we should have received.
     * This prevents upstream being faced with multiple or missing
     * credentials after authentication.
     * NP: un-pin is left to the cleanup in ConnStateData::swanSong()
     *     we just trigger that cleanup here via comm_reset_close() or
     *     ConnStateData::stopReceiving()
     *
     * 3) the connection needs to close.
     *
     * This prevents attackers injecting requests into a connection,
     * or gateways wrongly multiplexing users into a single connection.
     *
     * When credentials are missing closure needs to follow an auth
     * challenge for best recovery by the client.
     *
     * When credentials change there is nothing we can do but abort as
     * fast as possible. Sending TCP RST instead of an HTTP response
     * is the best-case action.
     */</comment>

    <comment type="line" pos:line="54" pos:column="5">// clobbered with nul-pointer</comment>
    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><name pos:line="55" pos:column="9">aur<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">==<pos:position pos:line="55" pos:column="15"/></operator> <name pos:line="55" pos:column="16">NULL<pos:position pos:line="55" pos:column="20"/></name></expr>)<pos:position pos:line="55" pos:column="21"/></condition><then pos:line="55" pos:column="21"> <block pos:line="55" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">debugs<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><literal type="number" pos:line="56" pos:column="16">33<pos:position pos:line="56" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="20">2<pos:position pos:line="56" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="23">"WARNING: Graceful closure on "<pos:position pos:line="56" pos:column="54"/></literal> <operator pos:line="56" pos:column="55">&lt;&lt;<pos:position pos:line="56" pos:column="63"/></operator> <name pos:line="56" pos:column="58">clientConnection<pos:position pos:line="56" pos:column="74"/></name> <operator pos:line="56" pos:column="75">&lt;&lt;<pos:position pos:line="56" pos:column="83"/></operator> <literal type="string" pos:line="56" pos:column="78">" due to connection-auth erase from "<pos:position pos:line="56" pos:column="115"/></literal> <operator pos:line="56" pos:column="116">&lt;&lt;<pos:position pos:line="56" pos:column="124"/></operator> <name pos:line="56" pos:column="119">by<pos:position pos:line="56" pos:column="121"/></name></expr></argument>)<pos:position pos:line="56" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="123"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="57" pos:column="9">auth_<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">-&gt;<pos:position pos:line="57" pos:column="19"/></operator><name pos:line="57" pos:column="16">releaseAuthServer<pos:position pos:line="57" pos:column="33"/></name></name><argument_list pos:line="57" pos:column="33">()<pos:position pos:line="57" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">auth_<pos:position pos:line="58" pos:column="14"/></name> <operator pos:line="58" pos:column="15">=<pos:position pos:line="58" pos:column="16"/></operator> <name pos:line="58" pos:column="17">NULL<pos:position pos:line="58" pos:column="21"/></name></expr>;<pos:position pos:line="58" pos:column="22"/></expr_stmt>
        <comment type="line" pos:line="59" pos:column="9">// XXX: need to test whether the connection re-auth challenge is sent. If not, how to trigger it from here.</comment>
        <comment type="line" pos:line="60" pos:column="9">// NP: the current situation seems to fix challenge loops in Safari without visible issues in others.</comment>
        <comment type="line" pos:line="61" pos:column="9">// we stop receiving more traffic but can leave the Job running to terminate after the error or challenge is delivered.</comment>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">stopReceiving<pos:position pos:line="62" pos:column="22"/></name><argument_list pos:line="62" pos:column="22">(<argument><expr><literal type="string" pos:line="62" pos:column="23">"connection-auth removed"<pos:position pos:line="62" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="50"/></expr_stmt>
        <return pos:line="63" pos:column="9">return;<pos:position pos:line="63" pos:column="16"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="66" pos:column="5">// clobbered with alternative credentials</comment>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">aur<pos:position pos:line="67" pos:column="12"/></name> <operator pos:line="67" pos:column="13">!=<pos:position pos:line="67" pos:column="15"/></operator> <name pos:line="67" pos:column="16">auth_<pos:position pos:line="67" pos:column="21"/></name></expr>)<pos:position pos:line="67" pos:column="22"/></condition><then pos:line="67" pos:column="22"> <block pos:line="67" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="68" pos:column="9">debugs<pos:position pos:line="68" pos:column="15"/></name><argument_list pos:line="68" pos:column="15">(<argument><expr><literal type="number" pos:line="68" pos:column="16">33<pos:position pos:line="68" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="68" pos:column="20">2<pos:position pos:line="68" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="68" pos:column="23">"ERROR: Closing "<pos:position pos:line="68" pos:column="40"/></literal> <operator pos:line="68" pos:column="41">&lt;&lt;<pos:position pos:line="68" pos:column="49"/></operator> <name pos:line="68" pos:column="44">clientConnection<pos:position pos:line="68" pos:column="60"/></name> <operator pos:line="68" pos:column="61">&lt;&lt;<pos:position pos:line="68" pos:column="69"/></operator> <literal type="string" pos:line="68" pos:column="64">" due to change of connection-auth from "<pos:position pos:line="68" pos:column="105"/></literal> <operator pos:line="68" pos:column="106">&lt;&lt;<pos:position pos:line="68" pos:column="114"/></operator> <name pos:line="68" pos:column="109">by<pos:position pos:line="68" pos:column="111"/></name></expr></argument>)<pos:position pos:line="68" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="113"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="69" pos:column="9">auth_<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">releaseAuthServer<pos:position pos:line="69" pos:column="33"/></name></name><argument_list pos:line="69" pos:column="33">()<pos:position pos:line="69" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="70" pos:column="9">auth_<pos:position pos:line="70" pos:column="14"/></name> <operator pos:line="70" pos:column="15">=<pos:position pos:line="70" pos:column="16"/></operator> <name pos:line="70" pos:column="17">NULL<pos:position pos:line="70" pos:column="21"/></name></expr>;<pos:position pos:line="70" pos:column="22"/></expr_stmt>
        <comment type="line" pos:line="71" pos:column="9">// this is a fatal type of problem.</comment>
        <comment type="line" pos:line="72" pos:column="9">// Close the connection immediately with TCP RST to abort all traffic flow</comment>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">comm_reset_close<pos:position pos:line="73" pos:column="25"/></name><argument_list pos:line="73" pos:column="25">(<argument><expr><name pos:line="73" pos:column="26">clientConnection<pos:position pos:line="73" pos:column="42"/></name></expr></argument>)<pos:position pos:line="73" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="44"/></expr_stmt>
        <return pos:line="74" pos:column="9">return;<pos:position pos:line="74" pos:column="16"/></return>
    }<pos:position pos:line="75" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="77" pos:column="5">/* NOT REACHABLE */</comment>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

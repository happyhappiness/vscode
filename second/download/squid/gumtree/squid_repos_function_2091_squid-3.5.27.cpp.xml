<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2091_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreHashIndex<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">smpAware<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">()<pos:position pos:line="2" pos:column="27"/></parameter_list> <specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">int<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">i<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></init> <condition><expr><name pos:line="4" pos:column="21">i<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">&lt;<pos:position pos:line="4" pos:column="27"/></operator> <name><name pos:line="4" pos:column="25">Config<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">.<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">cacheSwap<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">n_configured<pos:position pos:line="4" pos:column="54"/></name></name></expr>;<pos:position pos:line="4" pos:column="55"/></condition> <incr><expr><operator pos:line="4" pos:column="56">++<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="58">i<pos:position pos:line="4" pos:column="59"/></name></expr></incr>)<pos:position pos:line="4" pos:column="60"/></control> <block pos:line="4" pos:column="61">{
        <comment type="line" pos:line="5" pos:column="9">// A mix is not supported, but we conservatively check every</comment>
        <comment type="line" pos:line="6" pos:column="9">// dir because features like collapsed revalidation should</comment>
        <comment type="line" pos:line="7" pos:column="9">// currently be disabled if any dir is SMP-aware</comment>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">dir<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">i<pos:position pos:line="8" pos:column="18"/></name></expr></argument>)<pos:position pos:line="8" pos:column="19"/></argument_list></call><operator pos:line="8" pos:column="19">.<pos:position pos:line="8" pos:column="20"/></operator><call><name pos:line="8" pos:column="20">smpAware<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">()<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="31"/></condition><then pos:line="8" pos:column="31">
            <block type="pseudo"><return pos:line="9" pos:column="13">return <expr><literal type="boolean" pos:line="9" pos:column="20">true<pos:position pos:line="9" pos:column="24"/></literal></expr>;<pos:position pos:line="9" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></for>
    <return pos:line="11" pos:column="5">return <expr><literal type="boolean" pos:line="11" pos:column="12">false<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3919_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name>  <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type><name><name pos:line="1" pos:column="14">Ssl<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">ErrorDetail<pos:position pos:line="1" pos:column="30"/></name><operator pos:line="1" pos:column="30">::<pos:position pos:line="1" pos:column="32"/></operator><name pos:line="1" pos:column="32">subject<pos:position pos:line="1" pos:column="39"/></name></name><parameter_list pos:line="1" pos:column="39">()<pos:position pos:line="1" pos:column="41"/></parameter_list> <specifier pos:line="1" pos:column="42">const<pos:position pos:line="1" pos:column="47"/></specifier>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name><name pos:line="3" pos:column="9">broken_cert<pos:position pos:line="3" pos:column="20"/></name><operator pos:line="3" pos:column="20">.<pos:position pos:line="3" pos:column="21"/></operator><name pos:line="3" pos:column="21">get<pos:position pos:line="3" pos:column="24"/></name></name><argument_list pos:line="3" pos:column="24">()<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="27"/></condition><then pos:line="3" pos:column="27"> <block pos:line="3" pos:column="28">{
        <decl_stmt><decl><specifier pos:line="4" pos:column="9">static<pos:position pos:line="4" pos:column="15"/></specifier> <type><name pos:line="4" pos:column="16">char<pos:position pos:line="4" pos:column="20"/></name></type> <name><name pos:line="4" pos:column="21">tmpBuffer<pos:position pos:line="4" pos:column="30"/></name><index pos:line="4" pos:column="30">[<expr><literal type="number" pos:line="4" pos:column="31">256<pos:position pos:line="4" pos:column="34"/></literal></expr>]<pos:position pos:line="4" pos:column="35"/></index></name></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt> <comment type="line" pos:line="4" pos:column="37">// A temporary buffer</comment>
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">X509_NAME_oneline<pos:position pos:line="5" pos:column="30"/></name><argument_list pos:line="5" pos:column="30">(<argument><expr><call><name pos:line="5" pos:column="31">X509_get_subject_name<pos:position pos:line="5" pos:column="52"/></name><argument_list pos:line="5" pos:column="52">(<argument><expr><call><name><name pos:line="5" pos:column="53">broken_cert<pos:position pos:line="5" pos:column="64"/></name><operator pos:line="5" pos:column="64">.<pos:position pos:line="5" pos:column="65"/></operator><name pos:line="5" pos:column="65">get<pos:position pos:line="5" pos:column="68"/></name></name><argument_list pos:line="5" pos:column="68">()<pos:position pos:line="5" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="71"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="73">tmpBuffer<pos:position pos:line="5" pos:column="82"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="84">sizeof<argument_list pos:line="5" pos:column="90">(<argument><expr><name pos:line="5" pos:column="91">tmpBuffer<pos:position pos:line="5" pos:column="100"/></name></expr></argument>)<pos:position pos:line="5" pos:column="101"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="102"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="103"/></condition><then pos:line="5" pos:column="103">
            <block type="pseudo"><return pos:line="6" pos:column="13">return <expr><name pos:line="6" pos:column="20">tmpBuffer<pos:position pos:line="6" pos:column="29"/></name></expr>;<pos:position pos:line="6" pos:column="30"/></return></block></then></if>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
    <return pos:line="8" pos:column="5">return <expr><literal type="string" pos:line="8" pos:column="12">"[Not available]"<pos:position pos:line="8" pos:column="29"/></literal></expr>;<pos:position pos:line="8" pos:column="30"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3250_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CollapsedForwarding<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">Broadcast<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">(<parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">StoreEntry<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">&amp;<pos:position pos:line="2" pos:column="54"/></modifier></type><name pos:line="2" pos:column="50">e<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">queue<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">get<pos:position pos:line="4" pos:column="19"/></name></name><argument_list pos:line="4" pos:column="19">()<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name><name pos:line="7" pos:column="10">e<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">.<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">mem_obj<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">||<pos:position pos:line="7" pos:column="22"/></operator> <name><name pos:line="7" pos:column="23">e<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">.<pos:position pos:line="7" pos:column="25"/></operator><name pos:line="7" pos:column="25">mem_obj<pos:position pos:line="7" pos:column="32"/></name><operator pos:line="7" pos:column="32">-&gt;<pos:position pos:line="7" pos:column="37"/></operator><name pos:line="7" pos:column="34">xitTable<pos:position pos:line="7" pos:column="42"/></name><operator pos:line="7" pos:column="42">.<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">index<pos:position pos:line="7" pos:column="48"/></name></name> <operator pos:line="7" pos:column="49">&lt;<pos:position pos:line="7" pos:column="53"/></operator> <literal type="number" pos:line="7" pos:column="51">0<pos:position pos:line="7" pos:column="52"/></literal> <operator pos:line="7" pos:column="53">||<pos:position pos:line="7" pos:column="55"/></operator>
            <operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><call><name><name pos:line="8" pos:column="14">Store<pos:position pos:line="8" pos:column="19"/></name><operator pos:line="8" pos:column="19">::<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="21">Root<pos:position pos:line="8" pos:column="25"/></name></name><argument_list pos:line="8" pos:column="25">()<pos:position pos:line="8" pos:column="27"/></argument_list></call><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><call><name pos:line="8" pos:column="28">transientReaders<pos:position pos:line="8" pos:column="44"/></name><argument_list pos:line="8" pos:column="44">(<argument><expr><name pos:line="8" pos:column="45">e<pos:position pos:line="8" pos:column="46"/></name></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48"> <block pos:line="8" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">17<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">7<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"nobody reads "<pos:position pos:line="9" pos:column="38"/></literal> <operator pos:line="9" pos:column="39">&lt;&lt;<pos:position pos:line="9" pos:column="47"/></operator> <name pos:line="9" pos:column="42">e<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="45"/></expr_stmt>
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">CollapsedForwardingMsg<pos:position pos:line="13" pos:column="27"/></name></type> <name pos:line="13" pos:column="28">msg<pos:position pos:line="13" pos:column="31"/></name></decl>;<pos:position pos:line="13" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">msg<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">.<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">sender<pos:position pos:line="14" pos:column="15"/></name></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">KidIdentifier<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">msg<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">.<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">xitIndex<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <name><name pos:line="15" pos:column="20">e<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">.<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">mem_obj<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">xitTable<pos:position pos:line="15" pos:column="39"/></name><operator pos:line="15" pos:column="39">.<pos:position pos:line="15" pos:column="40"/></operator><name pos:line="15" pos:column="40">index<pos:position pos:line="15" pos:column="45"/></name></name></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">17<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="16">5<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="19">e<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">&lt;&lt;<pos:position pos:line="17" pos:column="29"/></operator> <literal type="string" pos:line="17" pos:column="24">" to "<pos:position pos:line="17" pos:column="30"/></literal> <operator pos:line="17" pos:column="31">&lt;&lt;<pos:position pos:line="17" pos:column="39"/></operator> <name><name pos:line="17" pos:column="34">Config<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">.<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">workers<pos:position pos:line="17" pos:column="48"/></name></name> <operator pos:line="17" pos:column="49">&lt;&lt;<pos:position pos:line="17" pos:column="57"/></operator> <literal type="string" pos:line="17" pos:column="52">"-1 workers"<pos:position pos:line="17" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>

    <comment type="line" pos:line="19" pos:column="5">// TODO: send only to workers who are waiting for data</comment>
    <for pos:line="20" pos:column="5">for <control pos:line="20" pos:column="9">(<init><decl><type><name pos:line="20" pos:column="10">int<pos:position pos:line="20" pos:column="13"/></name></type> <name pos:line="20" pos:column="14">workerId<pos:position pos:line="20" pos:column="22"/></name> <init pos:line="20" pos:column="23">= <expr><literal type="number" pos:line="20" pos:column="25">1<pos:position pos:line="20" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="27"/></init> <condition><expr><name pos:line="20" pos:column="28">workerId<pos:position pos:line="20" pos:column="36"/></name> <operator pos:line="20" pos:column="37">&lt;=<pos:position pos:line="20" pos:column="42"/></operator> <name><name pos:line="20" pos:column="40">Config<pos:position pos:line="20" pos:column="46"/></name><operator pos:line="20" pos:column="46">.<pos:position pos:line="20" pos:column="47"/></operator><name pos:line="20" pos:column="47">workers<pos:position pos:line="20" pos:column="54"/></name></name></expr>;<pos:position pos:line="20" pos:column="55"/></condition> <incr><expr><operator pos:line="20" pos:column="56">++<pos:position pos:line="20" pos:column="58"/></operator><name pos:line="20" pos:column="58">workerId<pos:position pos:line="20" pos:column="66"/></name></expr></incr>)<pos:position pos:line="20" pos:column="67"/></control> <block pos:line="20" pos:column="68">{
        <try pos:line="21" pos:column="9">try <block pos:line="21" pos:column="13">{
            <if pos:line="22" pos:column="13">if <condition pos:line="22" pos:column="16">(<expr><name pos:line="22" pos:column="17">workerId<pos:position pos:line="22" pos:column="25"/></name> <operator pos:line="22" pos:column="26">!=<pos:position pos:line="22" pos:column="28"/></operator> <name pos:line="22" pos:column="29">KidIdentifier<pos:position pos:line="22" pos:column="42"/></name> <operator pos:line="22" pos:column="43">&amp;&amp;<pos:position pos:line="22" pos:column="53"/></operator> <call><name><name pos:line="22" pos:column="46">queue<pos:position pos:line="22" pos:column="51"/></name><operator pos:line="22" pos:column="51">-&gt;<pos:position pos:line="22" pos:column="56"/></operator><name pos:line="22" pos:column="53">push<pos:position pos:line="22" pos:column="57"/></name></name><argument_list pos:line="22" pos:column="57">(<argument><expr><name pos:line="22" pos:column="58">workerId<pos:position pos:line="22" pos:column="66"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="68">msg<pos:position pos:line="22" pos:column="71"/></name></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="73"/></condition><then pos:line="22" pos:column="73">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="17">Notify<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">workerId<pos:position pos:line="23" pos:column="32"/></name></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt></block></then></if>
        }<pos:position pos:line="24" pos:column="10"/></block> <catch pos:line="24" pos:column="11">catch <parameter_list pos:line="24" pos:column="17">(<parameter><decl><type><specifier pos:line="24" pos:column="18">const<pos:position pos:line="24" pos:column="23"/></specifier> <name><name pos:line="24" pos:column="24">Queue<pos:position pos:line="24" pos:column="29"/></name><operator pos:line="24" pos:column="29">::<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="31">Full<pos:position pos:line="24" pos:column="35"/></name></name> <modifier pos:line="24" pos:column="36">&amp;<pos:position pos:line="24" pos:column="41"/></modifier></type></decl></parameter>)<pos:position pos:line="24" pos:column="38"/></parameter_list> <block pos:line="24" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">debugs<pos:position pos:line="25" pos:column="19"/></name><argument_list pos:line="25" pos:column="19">(<argument><expr><literal type="number" pos:line="25" pos:column="20">17<pos:position pos:line="25" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="24">DBG_IMPORTANT<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="39">"ERROR: Collapsed forwarding "<pos:position pos:line="25" pos:column="69"/></literal> <operator pos:line="25" pos:column="70">&lt;&lt;<pos:position pos:line="25" pos:column="78"/></operator>
                   <literal type="string" pos:line="26" pos:column="20">"queue overflow for kid"<pos:position pos:line="26" pos:column="44"/></literal> <operator pos:line="26" pos:column="45">&lt;&lt;<pos:position pos:line="26" pos:column="53"/></operator> <name pos:line="26" pos:column="48">workerId<pos:position pos:line="26" pos:column="56"/></name> <operator pos:line="26" pos:column="57">&lt;&lt;<pos:position pos:line="26" pos:column="65"/></operator>
                   <literal type="string" pos:line="27" pos:column="20">" at "<pos:position pos:line="27" pos:column="26"/></literal> <operator pos:line="27" pos:column="27">&lt;&lt;<pos:position pos:line="27" pos:column="35"/></operator> <call><name><name pos:line="27" pos:column="30">queue<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">-&gt;<pos:position pos:line="27" pos:column="40"/></operator><name pos:line="27" pos:column="37">outSize<pos:position pos:line="27" pos:column="44"/></name></name><argument_list pos:line="27" pos:column="44">(<argument><expr><name pos:line="27" pos:column="45">workerId<pos:position pos:line="27" pos:column="53"/></name></expr></argument>)<pos:position pos:line="27" pos:column="54"/></argument_list></call> <operator pos:line="27" pos:column="55">&lt;&lt;<pos:position pos:line="27" pos:column="63"/></operator> <literal type="string" pos:line="27" pos:column="58">" items"<pos:position pos:line="27" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="68"/></expr_stmt>
            <comment type="line" pos:line="28" pos:column="13">// TODO: grow queue size</comment>
        }<pos:position pos:line="29" pos:column="10"/></block></catch></try>
    }<pos:position pos:line="30" pos:column="6"/></block></for>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

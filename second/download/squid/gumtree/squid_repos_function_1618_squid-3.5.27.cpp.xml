<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1618_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SwapDir<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">canLog<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">StoreEntry<pos:position pos:line="2" pos:column="27"/></name> <specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <modifier pos:line="2" pos:column="34">&amp;<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="35">e<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">e<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">.<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">swap_filen<pos:position pos:line="4" pos:column="21"/></name></name> <operator pos:line="4" pos:column="22">&lt;<pos:position pos:line="4" pos:column="26"/></operator> <literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">e<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">.<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="11">swap_status<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">!=<pos:position pos:line="7" pos:column="25"/></operator> <name pos:line="7" pos:column="26">SWAPOUT_DONE<pos:position pos:line="7" pos:column="38"/></name></expr>)<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="boolean" pos:line="8" pos:column="16">false<pos:position pos:line="8" pos:column="21"/></literal></expr>;<pos:position pos:line="8" pos:column="22"/></return></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">e<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">.<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">swap_file_sz<pos:position pos:line="10" pos:column="23"/></name></name> <operator pos:line="10" pos:column="24">&lt;=<pos:position pos:line="10" pos:column="29"/></operator> <literal type="number" pos:line="10" pos:column="27">0<pos:position pos:line="10" pos:column="28"/></literal></expr>)<pos:position pos:line="10" pos:column="29"/></condition><then pos:line="10" pos:column="29">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">EBIT_TEST<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name><name pos:line="13" pos:column="19">e<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">.<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">flags<pos:position pos:line="13" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">RELEASE_REQUEST<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><literal type="boolean" pos:line="14" pos:column="16">false<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></return></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">EBIT_TEST<pos:position pos:line="16" pos:column="18"/></name><argument_list pos:line="16" pos:column="18">(<argument><expr><name><name pos:line="16" pos:column="19">e<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">.<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">flags<pos:position pos:line="16" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="28">KEY_PRIVATE<pos:position pos:line="16" pos:column="39"/></name></expr></argument>)<pos:position pos:line="16" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="41"/></condition><then pos:line="16" pos:column="41">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><literal type="boolean" pos:line="17" pos:column="16">false<pos:position pos:line="17" pos:column="21"/></literal></expr>;<pos:position pos:line="17" pos:column="22"/></return></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">EBIT_TEST<pos:position pos:line="19" pos:column="18"/></name><argument_list pos:line="19" pos:column="18">(<argument><expr><name><name pos:line="19" pos:column="19">e<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">flags<pos:position pos:line="19" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="28">ENTRY_SPECIAL<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="43"/></condition><then pos:line="19" pos:column="43">
        <block type="pseudo"><return pos:line="20" pos:column="9">return <expr><literal type="boolean" pos:line="20" pos:column="16">false<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></return></block></then></if>

    <return pos:line="22" pos:column="5">return <expr><literal type="boolean" pos:line="22" pos:column="12">true<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

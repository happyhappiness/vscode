<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4167_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ServiceRep<pos:position pos:line="1" pos:column="34"/></name><operator pos:line="1" pos:column="34">::<pos:position pos:line="1" pos:column="36"/></operator><name pos:line="1" pos:column="36">busyCheckpoint<pos:position pos:line="1" pos:column="50"/></name></name><parameter_list pos:line="1" pos:column="50">()<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><call><name><name pos:line="3" pos:column="9">theNotificationWaiters<pos:position pos:line="3" pos:column="31"/></name><operator pos:line="3" pos:column="31">.<pos:position pos:line="3" pos:column="32"/></operator><name pos:line="3" pos:column="32">empty<pos:position pos:line="3" pos:column="37"/></name></name><argument_list pos:line="3" pos:column="37">()<pos:position pos:line="3" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="3" pos:column="40"/></condition><then pos:line="3" pos:column="40"> <comment type="line" pos:line="3" pos:column="41">// nobody is waiting for a slot</comment>
        <block type="pseudo"><return pos:line="4" pos:column="9">return;<pos:position pos:line="4" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">freed<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="number" pos:line="6" pos:column="17">0<pos:position pos:line="6" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">available<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><call><name pos:line="7" pos:column="21">availableConnections<pos:position pos:line="7" pos:column="41"/></name><argument_list pos:line="7" pos:column="41">()<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">available<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&lt;<pos:position pos:line="9" pos:column="23"/></operator> <literal type="number" pos:line="9" pos:column="21">0<pos:position pos:line="9" pos:column="22"/></literal></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
        <comment type="line" pos:line="10" pos:column="9">// It is possible to have waiters when no limit on connections exist in</comment>
        <comment type="line" pos:line="11" pos:column="9">// case of reconfigure or because new Options received.</comment>
        <comment type="line" pos:line="12" pos:column="9">// In this case, notify all waiting transactions.</comment>
        <expr_stmt><expr><name pos:line="13" pos:column="9">freed<pos:position pos:line="13" pos:column="14"/></name>  <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name><name pos:line="13" pos:column="18">theNotificationWaiters<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">.<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">size<pos:position pos:line="13" pos:column="45"/></name></name><argument_list pos:line="13" pos:column="45">()<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <else pos:line="14" pos:column="7">else <block pos:line="14" pos:column="12">{
        <comment type="line" pos:line="15" pos:column="9">// avoid notifying more waiters than there will be available slots</comment>
        <decl_stmt><decl><type><specifier pos:line="16" pos:column="9">const<pos:position pos:line="16" pos:column="14"/></specifier> <name pos:line="16" pos:column="15">int<pos:position pos:line="16" pos:column="18"/></name></type> <name pos:line="16" pos:column="19">notifiedWaiters<pos:position pos:line="16" pos:column="34"/></name> <init pos:line="16" pos:column="35">= <expr><name pos:line="16" pos:column="37">theAllWaiters<pos:position pos:line="16" pos:column="50"/></name> <operator pos:line="16" pos:column="51">-<pos:position pos:line="16" pos:column="52"/></operator> <call><name><name pos:line="16" pos:column="53">theNotificationWaiters<pos:position pos:line="16" pos:column="75"/></name><operator pos:line="16" pos:column="75">.<pos:position pos:line="16" pos:column="76"/></operator><name pos:line="16" pos:column="76">size<pos:position pos:line="16" pos:column="80"/></name></name><argument_list pos:line="16" pos:column="80">()<pos:position pos:line="16" pos:column="82"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="83"/></decl_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">freed<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">available<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">-<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">notifiedWaiters<pos:position pos:line="17" pos:column="44"/></name></expr>;<pos:position pos:line="17" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">debugs<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><literal type="number" pos:line="20" pos:column="12">93<pos:position pos:line="20" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="20" pos:column="15">7<pos:position pos:line="20" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="18">HERE<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&lt;&lt;<pos:position pos:line="20" pos:column="31"/></operator> <literal type="string" pos:line="20" pos:column="26">"Available connections: "<pos:position pos:line="20" pos:column="51"/></literal> <operator pos:line="20" pos:column="52">&lt;&lt;<pos:position pos:line="20" pos:column="60"/></operator> <name pos:line="20" pos:column="55">available<pos:position pos:line="20" pos:column="64"/></name> <operator pos:line="20" pos:column="65">&lt;&lt;<pos:position pos:line="20" pos:column="73"/></operator>
           <literal type="string" pos:line="21" pos:column="12">" freed slots: "<pos:position pos:line="21" pos:column="28"/></literal> <operator pos:line="21" pos:column="29">&lt;&lt;<pos:position pos:line="21" pos:column="37"/></operator> <name pos:line="21" pos:column="32">freed<pos:position pos:line="21" pos:column="37"/></name> <operator pos:line="21" pos:column="38">&lt;&lt;<pos:position pos:line="21" pos:column="46"/></operator>
           <literal type="string" pos:line="22" pos:column="12">" waiting in queue: "<pos:position pos:line="22" pos:column="33"/></literal> <operator pos:line="22" pos:column="34">&lt;&lt;<pos:position pos:line="22" pos:column="42"/></operator> <call><name><name pos:line="22" pos:column="37">theNotificationWaiters<pos:position pos:line="22" pos:column="59"/></name><operator pos:line="22" pos:column="59">.<pos:position pos:line="22" pos:column="60"/></operator><name pos:line="22" pos:column="60">size<pos:position pos:line="22" pos:column="64"/></name></name><argument_list pos:line="22" pos:column="64">()<pos:position pos:line="22" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt>

    <while pos:line="24" pos:column="5">while <condition pos:line="24" pos:column="11">(<expr><name pos:line="24" pos:column="12">freed<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">&gt;<pos:position pos:line="24" pos:column="22"/></operator> <literal type="number" pos:line="24" pos:column="20">0<pos:position pos:line="24" pos:column="21"/></literal> <operator pos:line="24" pos:column="22">&amp;&amp;<pos:position pos:line="24" pos:column="32"/></operator> <operator pos:line="24" pos:column="25">!<pos:position pos:line="24" pos:column="26"/></operator><call><name><name pos:line="24" pos:column="26">theNotificationWaiters<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">.<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="49">empty<pos:position pos:line="24" pos:column="54"/></name></name><argument_list pos:line="24" pos:column="54">()<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="57"/></condition> <block pos:line="24" pos:column="58">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">Client<pos:position pos:line="25" pos:column="15"/></name></type> <name pos:line="25" pos:column="16">i<pos:position pos:line="25" pos:column="17"/></name> <init pos:line="25" pos:column="18">= <expr><call><name><name pos:line="25" pos:column="20">theNotificationWaiters<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">.<pos:position pos:line="25" pos:column="43"/></operator><name pos:line="25" pos:column="43">front<pos:position pos:line="25" pos:column="48"/></name></name><argument_list pos:line="25" pos:column="48">()<pos:position pos:line="25" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="51"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="26" pos:column="9">theNotificationWaiters<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">.<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="32">pop_front<pos:position pos:line="26" pos:column="41"/></name></name><argument_list pos:line="26" pos:column="41">()<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">ScheduleCallHere<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name><name pos:line="27" pos:column="26">i<pos:position pos:line="27" pos:column="27"/></name><operator pos:line="27" pos:column="27">.<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">callback<pos:position pos:line="27" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">i<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">.<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">callback<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">NULL<pos:position pos:line="28" pos:column="26"/></name></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="29" pos:column="9">--<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">freed<pos:position pos:line="29" pos:column="16"/></name></expr>;<pos:position pos:line="29" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></while>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

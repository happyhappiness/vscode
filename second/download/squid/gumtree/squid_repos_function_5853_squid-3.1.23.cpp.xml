<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5853_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">heap_print_inorder<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">heap<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type> <name pos:line="2" pos:column="27">hp<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">int<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">id<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <while pos:line="4" pos:column="5">while <condition pos:line="4" pos:column="11">(<expr><name pos:line="4" pos:column="12">id<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">&lt;<pos:position pos:line="4" pos:column="19"/></operator> <name><name pos:line="4" pos:column="17">hp<pos:position pos:line="4" pos:column="19"/></name><operator pos:line="4" pos:column="19">-&gt;<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="21">last<pos:position pos:line="4" pos:column="25"/></name></name></expr>)<pos:position pos:line="4" pos:column="26"/></condition> <block pos:line="4" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">printf<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="string" pos:line="5" pos:column="16">"%d\tKey = %.04f\n"<pos:position pos:line="5" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="37">id<pos:position pos:line="5" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="41">hp<pos:position pos:line="5" pos:column="43"/></name><operator pos:line="5" pos:column="43">-&gt;<pos:position pos:line="5" pos:column="48"/></operator><name pos:line="5" pos:column="45">nodes<pos:position pos:line="5" pos:column="50"/></name><index pos:line="5" pos:column="50">[<expr><name pos:line="5" pos:column="51">id<pos:position pos:line="5" pos:column="53"/></name></expr>]<pos:position pos:line="5" pos:column="54"/></index></name><operator pos:line="5" pos:column="54">-&gt;<pos:position pos:line="5" pos:column="59"/></operator><name pos:line="5" pos:column="56">key<pos:position pos:line="5" pos:column="59"/></name></expr></argument>)<pos:position pos:line="5" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><name pos:line="6" pos:column="9">id<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">++<pos:position pos:line="6" pos:column="13"/></operator></expr>;<pos:position pos:line="6" pos:column="14"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></while>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

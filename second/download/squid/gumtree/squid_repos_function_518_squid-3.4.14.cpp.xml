<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_518_squid-3.4.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">struct<pos:position pos:line="1" pos:column="7"/></name> <name pos:line="1" pos:column="8">snmp_pdu<pos:position pos:line="1" pos:column="16"/></name></name> <modifier pos:line="1" pos:column="17">*<pos:position pos:line="1" pos:column="18"/></modifier></type>
<name pos:line="2" pos:column="1">snmp_pdu_create<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">command<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list> <block pos:line="2" pos:column="30">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">struct<pos:position pos:line="3" pos:column="11"/></name> <name pos:line="3" pos:column="12">snmp_pdu<pos:position pos:line="3" pos:column="20"/></name></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">pdu<pos:position pos:line="3" pos:column="25"/></name></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>

<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">DEBUG_PDU<pos:position pos:line="5" pos:column="14"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">snmplib_debug<pos:position pos:line="6" pos:column="18"/></name><argument_list pos:line="6" pos:column="18">(<argument><expr><literal type="number" pos:line="6" pos:column="19">8<pos:position pos:line="6" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="22">"PDU:  Creating\n"<pos:position pos:line="6" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name pos:line="9" pos:column="5">pdu<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <operator pos:line="9" pos:column="11">(<pos:position pos:line="9" pos:column="12"/></operator>struct <name pos:line="9" pos:column="19">snmp_pdu<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">*<pos:position pos:line="9" pos:column="29"/></operator><operator pos:line="9" pos:column="29">)<pos:position pos:line="9" pos:column="30"/></operator> <call><name pos:line="9" pos:column="31">xmalloc<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">(<argument><expr><sizeof pos:line="9" pos:column="39">sizeof<argument_list pos:line="9" pos:column="45">(<argument><expr pos:line="9" pos:column="46">struct <name pos:line="9" pos:column="53">snmp_pdu<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="64"/></expr_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">pdu<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">==<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>)<pos:position pos:line="10" pos:column="21"/></condition><then pos:line="10" pos:column="21"> <block pos:line="10" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">snmp_set_api_error<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">SNMPERR_OS_ERR<pos:position pos:line="11" pos:column="42"/></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><operator pos:line="12" pos:column="16">(<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="17">NULL<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">)<pos:position pos:line="12" pos:column="22"/></operator></expr>;<pos:position pos:line="12" pos:column="23"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">memset<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><operator pos:line="14" pos:column="12">(<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">char<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">*<pos:position pos:line="14" pos:column="19"/></operator><operator pos:line="14" pos:column="19">)<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">pdu<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="14" pos:column="26">'\0'<pos:position pos:line="14" pos:column="30"/></literal></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="32">sizeof<argument_list pos:line="14" pos:column="38">(<argument><expr pos:line="14" pos:column="39">struct <name pos:line="14" pos:column="46">snmp_pdu<pos:position pos:line="14" pos:column="54"/></name></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="16" pos:column="5">pdu<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">-&gt;<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="10">command<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <name pos:line="16" pos:column="20">command<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">pdu<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">-&gt;<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="10">errstat<pos:position pos:line="17" pos:column="17"/></name></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <name pos:line="17" pos:column="20">SNMP_DEFAULT_ERRSTAT<pos:position pos:line="17" pos:column="40"/></name></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">pdu<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">-&gt;<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="10">errindex<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name pos:line="18" pos:column="21">SNMP_DEFAULT_ERRINDEX<pos:position pos:line="18" pos:column="42"/></name></expr>;<pos:position pos:line="18" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">pdu<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">-&gt;<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="10">address<pos:position pos:line="19" pos:column="17"/></name><operator pos:line="19" pos:column="17">.<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">sin_addr<pos:position pos:line="19" pos:column="26"/></name><operator pos:line="19" pos:column="26">.<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="27">s_addr<pos:position pos:line="19" pos:column="33"/></name></name> <operator pos:line="19" pos:column="34">=<pos:position pos:line="19" pos:column="35"/></operator> <name pos:line="19" pos:column="36">SNMP_DEFAULT_ADDRESS<pos:position pos:line="19" pos:column="56"/></name></expr>;<pos:position pos:line="19" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">pdu<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">-&gt;<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="10">enterprise<pos:position pos:line="20" pos:column="20"/></name></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">NULL<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">pdu<pos:position pos:line="21" pos:column="8"/></name><operator pos:line="21" pos:column="8">-&gt;<pos:position pos:line="21" pos:column="13"/></operator><name pos:line="21" pos:column="10">enterprise_length<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <literal type="number" pos:line="21" pos:column="30">0<pos:position pos:line="21" pos:column="31"/></literal></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">pdu<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">-&gt;<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="10">variables<pos:position pos:line="22" pos:column="19"/></name></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">NULL<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>

<cpp:if pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">if<pos:position pos:line="24" pos:column="4"/></cpp:directive> <expr><name pos:line="24" pos:column="5">DEBUG_PDU<pos:position pos:line="24" pos:column="14"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">snmplib_debug<pos:position pos:line="25" pos:column="18"/></name><argument_list pos:line="25" pos:column="18">(<argument><expr><literal type="number" pos:line="25" pos:column="19">8<pos:position pos:line="25" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="22">"PDU:  Created %x\n"<pos:position pos:line="25" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="44">(<pos:position pos:line="25" pos:column="45"/></operator><name pos:line="25" pos:column="45">unsigned<pos:position pos:line="25" pos:column="53"/></name> <name pos:line="25" pos:column="54">int<pos:position pos:line="25" pos:column="57"/></name><operator pos:line="25" pos:column="57">)<pos:position pos:line="25" pos:column="58"/></operator> <name pos:line="25" pos:column="59">pdu<pos:position pos:line="25" pos:column="62"/></name></expr></argument>)<pos:position pos:line="25" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="64"/></expr_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><name pos:line="28" pos:column="13">pdu<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">)<pos:position pos:line="28" pos:column="17"/></operator></expr>;<pos:position pos:line="28" pos:column="18"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_159_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type><name pos:line="1" pos:column="7">gethost_name<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name pos:line="1" pos:column="20">void<pos:position pos:line="1" pos:column="24"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="25"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name></type>      <name><name pos:line="3" pos:column="15">hostname<pos:position pos:line="3" pos:column="23"/></name><index pos:line="3" pos:column="23">[<expr><call><name pos:line="3" pos:column="24">sysconf<pos:position pos:line="3" pos:column="31"/></name><argument_list pos:line="3" pos:column="31">(<argument><expr><name pos:line="3" pos:column="32">_SC_HOST_NAME_MAX<pos:position pos:line="3" pos:column="49"/></name></expr></argument>)<pos:position pos:line="3" pos:column="50"/></argument_list></call></expr>]<pos:position pos:line="3" pos:column="51"/></index></name></decl>;<pos:position pos:line="3" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">addrinfo<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">hres<pos:position pos:line="4" pos:column="26"/></name><init pos:line="4" pos:column="26">=<expr><name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>, <modifier pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></modifier><decl><type ref="prev"/><name pos:line="4" pos:column="34">hres_list<pos:position pos:line="4" pos:column="43"/></name></decl>;<pos:position pos:line="4" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">rc<pos:position pos:line="5" pos:column="11"/></name></decl>,<decl><type ref="prev"/><name pos:line="5" pos:column="12">count<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>

    <expr_stmt><expr><name pos:line="7" pos:column="5">rc<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">gethostname<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">hostname<pos:position pos:line="7" pos:column="30"/></name></expr></argument>,<argument><expr><call><name pos:line="7" pos:column="31">sysconf<pos:position pos:line="7" pos:column="38"/></name><argument_list pos:line="7" pos:column="38">(<argument><expr><name pos:line="7" pos:column="39">_SC_HOST_NAME_MAX<pos:position pos:line="7" pos:column="56"/></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="59"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">rc<pos:position pos:line="8" pos:column="11"/></name></expr>)<pos:position pos:line="8" pos:column="12"/></condition><then pos:line="8" pos:column="12"> <block pos:line="8" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">fprintf<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">stderr<pos:position pos:line="9" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="25">"%s| %s: ERROR: resolving hostname '%s' failed\n"<pos:position pos:line="9" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="76">LogTime<pos:position pos:line="9" pos:column="83"/></name><argument_list pos:line="9" pos:column="83">()<pos:position pos:line="9" pos:column="85"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="9" pos:column="87">PROGRAM<pos:position pos:line="9" pos:column="94"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="96">hostname<pos:position pos:line="9" pos:column="104"/></name></expr></argument>)<pos:position pos:line="9" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="106"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="12" pos:column="5">rc<pos:position pos:line="12" pos:column="7"/></name> <operator pos:line="12" pos:column="8">=<pos:position pos:line="12" pos:column="9"/></operator> <call><name pos:line="12" pos:column="10">xgetaddrinfo<pos:position pos:line="12" pos:column="22"/></name><argument_list pos:line="12" pos:column="22">(<argument><expr><name pos:line="12" pos:column="23">hostname<pos:position pos:line="12" pos:column="31"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="32">NULL<pos:position pos:line="12" pos:column="36"/></name></expr></argument>,<argument><expr><name pos:line="12" pos:column="37">NULL<pos:position pos:line="12" pos:column="41"/></name></expr></argument>,<argument><expr><operator pos:line="12" pos:column="42">&amp;<pos:position pos:line="12" pos:column="47"/></operator><name pos:line="12" pos:column="43">hres<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">rc<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">!=<pos:position pos:line="13" pos:column="14"/></operator> <literal type="number" pos:line="13" pos:column="15">0<pos:position pos:line="13" pos:column="16"/></literal></expr>)<pos:position pos:line="13" pos:column="17"/></condition><then pos:line="13" pos:column="17"> <block pos:line="13" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">fprintf<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">stderr<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="25">"%s| %s: ERROR: resolving hostname with getaddrinfo: %s failed\n"<pos:position pos:line="14" pos:column="90"/></literal></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="92">LogTime<pos:position pos:line="14" pos:column="99"/></name><argument_list pos:line="14" pos:column="99">()<pos:position pos:line="14" pos:column="101"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="14" pos:column="103">PROGRAM<pos:position pos:line="14" pos:column="110"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="112">xgai_strerror<pos:position pos:line="14" pos:column="125"/></name><argument_list pos:line="14" pos:column="125">(<argument><expr><name pos:line="14" pos:column="126">rc<pos:position pos:line="14" pos:column="128"/></name></expr></argument>)<pos:position pos:line="14" pos:column="129"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="130"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="131"/></expr_stmt>
        <return pos:line="15" pos:column="9">return <expr><name pos:line="15" pos:column="16">NULL<pos:position pos:line="15" pos:column="20"/></name></expr>;<pos:position pos:line="15" pos:column="21"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="17" pos:column="5">hres_list<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">=<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">hres<pos:position pos:line="17" pos:column="19"/></name></expr>;<pos:position pos:line="17" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><name pos:line="18" pos:column="5">count<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">=<pos:position pos:line="18" pos:column="11"/></operator><literal type="number" pos:line="18" pos:column="11">0<pos:position pos:line="18" pos:column="12"/></literal></expr>;<pos:position pos:line="18" pos:column="13"/></expr_stmt>
    <while pos:line="19" pos:column="5">while <condition pos:line="19" pos:column="11">(<expr><name pos:line="19" pos:column="12">hres_list<pos:position pos:line="19" pos:column="21"/></name></expr>)<pos:position pos:line="19" pos:column="22"/></condition> <block pos:line="19" pos:column="23">{
        <expr_stmt><expr><name pos:line="20" pos:column="9">count<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">++<pos:position pos:line="20" pos:column="16"/></operator></expr>;<pos:position pos:line="20" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">hres_list<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator><name><name pos:line="21" pos:column="19">hres_list<pos:position pos:line="21" pos:column="28"/></name><operator pos:line="21" pos:column="28">-&gt;<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="30">ai_next<pos:position pos:line="21" pos:column="37"/></name></name></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></while>
    <expr_stmt><expr><name pos:line="23" pos:column="5">rc<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">xgetnameinfo<pos:position pos:line="23" pos:column="22"/></name> <argument_list pos:line="23" pos:column="23">(<argument><expr><name><name pos:line="23" pos:column="24">hres<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">-&gt;<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="30">ai_addr<pos:position pos:line="23" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="39">hres<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">-&gt;<pos:position pos:line="23" pos:column="48"/></operator><name pos:line="23" pos:column="45">ai_addrlen<pos:position pos:line="23" pos:column="55"/></name></name></expr></argument>,<argument><expr><name pos:line="23" pos:column="56">hostname<pos:position pos:line="23" pos:column="64"/></name></expr></argument>, <argument><expr><sizeof pos:line="23" pos:column="66">sizeof <argument_list pos:line="23" pos:column="73">(<argument><expr><name pos:line="23" pos:column="74">hostname<pos:position pos:line="23" pos:column="82"/></name></expr></argument>)<pos:position pos:line="23" pos:column="83"/></argument_list></sizeof></expr></argument>, <argument><expr><name pos:line="23" pos:column="85">NULL<pos:position pos:line="23" pos:column="89"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="91">0<pos:position pos:line="23" pos:column="92"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="94">0<pos:position pos:line="23" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="97"/></expr_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">rc<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">!=<pos:position pos:line="24" pos:column="14"/></operator> <literal type="number" pos:line="24" pos:column="15">0<pos:position pos:line="24" pos:column="16"/></literal></expr>)<pos:position pos:line="24" pos:column="17"/></condition><then pos:line="24" pos:column="17"> <block pos:line="24" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">fprintf<pos:position pos:line="25" pos:column="16"/></name><argument_list pos:line="25" pos:column="16">(<argument><expr><name pos:line="25" pos:column="17">stderr<pos:position pos:line="25" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="25">"%s| %s: ERROR: resolving ip address with getnameinfo: %s failed\n"<pos:position pos:line="25" pos:column="92"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="94">LogTime<pos:position pos:line="25" pos:column="101"/></name><argument_list pos:line="25" pos:column="101">()<pos:position pos:line="25" pos:column="103"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="105">PROGRAM<pos:position pos:line="25" pos:column="112"/></name></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="114">xgai_strerror<pos:position pos:line="25" pos:column="127"/></name><argument_list pos:line="25" pos:column="127">(<argument><expr><name pos:line="25" pos:column="128">rc<pos:position pos:line="25" pos:column="130"/></name></expr></argument>)<pos:position pos:line="25" pos:column="131"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="132"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="133"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">xfreeaddrinfo<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><name pos:line="26" pos:column="23">hres<pos:position pos:line="26" pos:column="27"/></name></expr></argument>)<pos:position pos:line="26" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr> ;<pos:position pos:line="27" pos:column="22"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">xfreeaddrinfo<pos:position pos:line="30" pos:column="18"/></name><argument_list pos:line="30" pos:column="18">(<argument><expr><name pos:line="30" pos:column="19">hres<pos:position pos:line="30" pos:column="23"/></name></expr></argument>)<pos:position pos:line="30" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">hostname<pos:position pos:line="31" pos:column="13"/></name><index pos:line="31" pos:column="13">[<expr><call><name pos:line="31" pos:column="14">sysconf<pos:position pos:line="31" pos:column="21"/></name><argument_list pos:line="31" pos:column="21">(<argument><expr><name pos:line="31" pos:column="22">_SC_HOST_NAME_MAX<pos:position pos:line="31" pos:column="39"/></name></expr></argument>)<pos:position pos:line="31" pos:column="40"/></argument_list></call><operator pos:line="31" pos:column="40">-<pos:position pos:line="31" pos:column="41"/></operator><literal type="number" pos:line="31" pos:column="41">1<pos:position pos:line="31" pos:column="42"/></literal></expr>]<pos:position pos:line="31" pos:column="43"/></index></name><operator pos:line="31" pos:column="43">=<pos:position pos:line="31" pos:column="44"/></operator><literal type="char" pos:line="31" pos:column="44">'\0'<pos:position pos:line="31" pos:column="48"/></literal></expr>;<pos:position pos:line="31" pos:column="49"/></expr_stmt>
    <return pos:line="32" pos:column="5">return<expr><operator pos:line="32" pos:column="11">(<pos:position pos:line="32" pos:column="12"/></operator><call><name pos:line="32" pos:column="12">xstrdup<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><name pos:line="32" pos:column="20">hostname<pos:position pos:line="32" pos:column="28"/></name></expr></argument>)<pos:position pos:line="32" pos:column="29"/></argument_list></call><operator pos:line="32" pos:column="29">)<pos:position pos:line="32" pos:column="30"/></operator></expr>;<pos:position pos:line="32" pos:column="31"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_168_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">BinarySplit<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">void<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">In_Obj<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">size_t<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">In_Sz<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">char<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">chr<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">void<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">Out_Obj<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">size_t<pos:position pos:line="2" pos:column="72"/></name></type> <name pos:line="2" pos:column="73">Out_Sz<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// check tolerances</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">In_Obj<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">)<pos:position pos:line="5" pos:column="25"/></operator> <operator pos:line="5" pos:column="26">||<pos:position pos:line="5" pos:column="28"/></operator> <operator pos:line="5" pos:column="29">(<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">Out_Obj<pos:position pos:line="5" pos:column="37"/></name> <operator pos:line="5" pos:column="38">==<pos:position pos:line="5" pos:column="40"/></operator> <name pos:line="5" pos:column="41">NULL<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">)<pos:position pos:line="5" pos:column="46"/></operator></expr>)<pos:position pos:line="5" pos:column="47"/></condition><then pos:line="5" pos:column="47">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><operator pos:line="6" pos:column="17">-<pos:position pos:line="6" pos:column="18"/></operator><literal type="number" pos:line="6" pos:column="18">1<pos:position pos:line="6" pos:column="19"/></literal><operator pos:line="6" pos:column="19">)<pos:position pos:line="6" pos:column="20"/></operator></expr>;<pos:position pos:line="6" pos:column="21"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">in<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><cast type="static" pos:line="8" pos:column="16">static_cast<argument_list type="generic" pos:line="8" pos:column="27">&lt;<argument><expr><name pos:line="8" pos:column="28">char<pos:position pos:line="8" pos:column="32"/></name><operator pos:line="8" pos:column="32">*<pos:position pos:line="8" pos:column="33"/></operator></expr></argument>&gt;<pos:position pos:line="8" pos:column="37"/></argument_list><argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">In_Obj<pos:position pos:line="8" pos:column="41"/></name></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="8" pos:column="43"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">out<pos:position pos:line="9" pos:column="14"/></name> <init pos:line="9" pos:column="15">= <expr><cast type="static" pos:line="9" pos:column="17">static_cast<argument_list type="generic" pos:line="9" pos:column="28">&lt;<argument><expr><name pos:line="9" pos:column="29">char<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">*<pos:position pos:line="9" pos:column="34"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="38"/></argument_list><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">Out_Obj<pos:position pos:line="9" pos:column="43"/></name></expr></argument>)<pos:position pos:line="9" pos:column="44"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>

    <comment type="line" pos:line="11" pos:column="5">// find the char delimiter position...</comment>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">p<pos:position pos:line="12" pos:column="12"/></name> <init pos:line="12" pos:column="13">= <expr><cast type="static" pos:line="12" pos:column="15">static_cast<argument_list type="generic" pos:line="12" pos:column="26">&lt;<argument><expr><name pos:line="12" pos:column="27">char<pos:position pos:line="12" pos:column="31"/></name><operator pos:line="12" pos:column="31">*<pos:position pos:line="12" pos:column="32"/></operator></expr></argument>&gt;<pos:position pos:line="12" pos:column="36"/></argument_list><argument_list pos:line="12" pos:column="33">(<argument><expr><name pos:line="12" pos:column="34">In_Obj<pos:position pos:line="12" pos:column="40"/></name></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="12" pos:column="42"/></decl_stmt>
    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">p<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">!=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">chr<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">&amp;&amp;<pos:position pos:line="13" pos:column="32"/></operator> <operator pos:line="13" pos:column="25">(<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">in<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">+<pos:position pos:line="13" pos:column="29"/></operator><name pos:line="13" pos:column="29">In_Sz<pos:position pos:line="13" pos:column="34"/></name><operator pos:line="13" pos:column="34">)<pos:position pos:line="13" pos:column="35"/></operator> <operator pos:line="13" pos:column="36">&gt;<pos:position pos:line="13" pos:column="40"/></operator> <name pos:line="13" pos:column="38">p<pos:position pos:line="13" pos:column="39"/></name></expr>)<pos:position pos:line="13" pos:column="40"/></condition> <block pos:line="13" pos:column="41">{
        <expr_stmt><expr><operator pos:line="14" pos:column="9">++<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="11">p<pos:position pos:line="14" pos:column="12"/></name></expr>;<pos:position pos:line="14" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></while>

    <decl_stmt><decl><type><name pos:line="17" pos:column="5">size_t<pos:position pos:line="17" pos:column="11"/></name></type> <name pos:line="17" pos:column="12">i<pos:position pos:line="17" pos:column="13"/></name> <init pos:line="17" pos:column="14">= <expr><operator pos:line="17" pos:column="16">(<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">p<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">in<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">)<pos:position pos:line="17" pos:column="22"/></operator></expr></init></decl>;<pos:position pos:line="17" pos:column="23"/></decl_stmt>

    <comment type="line" pos:line="19" pos:column="5">// token to big for the output buffer</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">i<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">&gt;<pos:position pos:line="20" pos:column="15"/></operator> <name pos:line="20" pos:column="13">Out_Sz<pos:position pos:line="20" pos:column="19"/></name></expr>)<pos:position pos:line="20" pos:column="20"/></condition><then pos:line="20" pos:column="20">
        <block type="pseudo"><return pos:line="21" pos:column="9">return <expr><operator pos:line="21" pos:column="16">(<pos:position pos:line="21" pos:column="17"/></operator><operator pos:line="21" pos:column="17">-<pos:position pos:line="21" pos:column="18"/></operator><literal type="number" pos:line="21" pos:column="18">2<pos:position pos:line="21" pos:column="19"/></literal><operator pos:line="21" pos:column="19">)<pos:position pos:line="21" pos:column="20"/></operator></expr>;<pos:position pos:line="21" pos:column="21"/></return></block></then></if>

    <comment type="line" pos:line="23" pos:column="5">// wipe the unused Out_Obj area</comment>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">memset<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">out<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">+<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">i<pos:position pos:line="24" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="19">0<pos:position pos:line="24" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="22">Out_Sz<pos:position pos:line="24" pos:column="28"/></name><operator pos:line="24" pos:column="28">-<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="29">i<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
    <comment type="line" pos:line="25" pos:column="5">// copy token from In_Obj to Out_Obj</comment>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">memcpy<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><name pos:line="26" pos:column="12">Out_Obj<pos:position pos:line="26" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="21">In_Obj<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="29">i<pos:position pos:line="26" pos:column="30"/></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>

    <comment type="line" pos:line="28" pos:column="5">// omit the delimiter</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">*<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">p<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">==<pos:position pos:line="29" pos:column="14"/></operator> <name pos:line="29" pos:column="15">chr<pos:position pos:line="29" pos:column="18"/></name></expr>)<pos:position pos:line="29" pos:column="19"/></condition><then pos:line="29" pos:column="19"> <block pos:line="29" pos:column="20">{
        <expr_stmt><expr><operator pos:line="30" pos:column="9">++<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">p<pos:position pos:line="30" pos:column="12"/></name></expr>;<pos:position pos:line="30" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="31" pos:column="9">++<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">i<pos:position pos:line="31" pos:column="12"/></name></expr>;<pos:position pos:line="31" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="32" pos:column="6"/></block></then> <else pos:line="32" pos:column="7">else <block pos:line="32" pos:column="12">{
        <comment type="line" pos:line="33" pos:column="9">// chr not found</comment>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">memset<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">In_Obj<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="24">0<pos:position pos:line="34" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="27">In_Sz<pos:position pos:line="34" pos:column="32"/></name></expr></argument>)<pos:position pos:line="34" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="34"/></expr_stmt>
<comment type="line" pos:line="35" pos:column="1">//        return (-3);</comment>
<comment type="line" pos:line="36" pos:column="1">// Returning &lt;0 breaks current code for last object</comment>
        <return pos:line="37" pos:column="9">return <expr><operator pos:line="37" pos:column="16">(<pos:position pos:line="37" pos:column="17"/></operator><name pos:line="37" pos:column="17">i<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">)<pos:position pos:line="37" pos:column="19"/></operator></expr>;<pos:position pos:line="37" pos:column="20"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></else></if>

    <comment type="line" pos:line="40" pos:column="5">// move the unused In_Obj forward</comment>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">memmove<pos:position pos:line="41" pos:column="12"/></name><argument_list pos:line="41" pos:column="12">(<argument><expr><name pos:line="41" pos:column="13">In_Obj<pos:position pos:line="41" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="21">p<pos:position pos:line="41" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="24">In_Sz<pos:position pos:line="41" pos:column="29"/></name><operator pos:line="41" pos:column="29">-<pos:position pos:line="41" pos:column="30"/></operator><name pos:line="41" pos:column="30">i<pos:position pos:line="41" pos:column="31"/></name></expr></argument>)<pos:position pos:line="41" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="33"/></expr_stmt>
    <comment type="line" pos:line="42" pos:column="5">// wipe the end of In_Obj</comment>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">memset<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><name pos:line="43" pos:column="12">in<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">+<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">In_Sz<pos:position pos:line="43" pos:column="20"/></name><operator pos:line="43" pos:column="20">-<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="21">i<pos:position pos:line="43" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="24">0<pos:position pos:line="43" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="27">i<pos:position pos:line="43" pos:column="28"/></name></expr></argument>)<pos:position pos:line="43" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
    <return pos:line="44" pos:column="5">return <expr><operator pos:line="44" pos:column="12">(<pos:position pos:line="44" pos:column="13"/></operator><name pos:line="44" pos:column="13">i<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-<pos:position pos:line="44" pos:column="15"/></operator><literal type="number" pos:line="44" pos:column="15">1<pos:position pos:line="44" pos:column="16"/></literal><operator pos:line="44" pos:column="16">)<pos:position pos:line="44" pos:column="17"/></operator></expr>;<pos:position pos:line="44" pos:column="18"/></return>
}<pos:position pos:line="45" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5777_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">pstrcpy<pos:position pos:line="2" pos:column="8"/></name><parameter_list pos:line="2" pos:column="8">( <parameter><decl><type><name pos:line="2" pos:column="10">char<pos:position pos:line="2" pos:column="14"/></name> <modifier pos:line="2" pos:column="15">*<pos:position pos:line="2" pos:column="16"/></modifier></type><name pos:line="2" pos:column="16">src<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">dst<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">dst<pos:position pos:line="4" pos:column="12"/></name></expr>)<pos:position pos:line="4" pos:column="13"/></condition><then pos:line="4" pos:column="13"> <block pos:line="4" pos:column="14">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name pos:line="5" pos:column="13">strlen<pos:position pos:line="5" pos:column="19"/></name><argument_list pos:line="5" pos:column="19">(<argument><expr><name pos:line="5" pos:column="20">dst<pos:position pos:line="5" pos:column="23"/></name></expr></argument>)<pos:position pos:line="5" pos:column="24"/></argument_list></call><operator pos:line="5" pos:column="24">&gt;<pos:position pos:line="5" pos:column="28"/></operator><name pos:line="5" pos:column="25">MAX_PAC_GROUP_SIZE<pos:position pos:line="5" pos:column="43"/></name></expr>)<pos:position pos:line="5" pos:column="44"/></condition><then pos:line="5" pos:column="44">
            <block type="pseudo"><return pos:line="6" pos:column="13">return <expr><name pos:line="6" pos:column="20">NULL<pos:position pos:line="6" pos:column="24"/></name></expr>;<pos:position pos:line="6" pos:column="25"/></return></block></then>
        <else pos:line="7" pos:column="9">else
            <block type="pseudo"><return pos:line="8" pos:column="13">return <expr><call><name pos:line="8" pos:column="20">strcpy<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">src<pos:position pos:line="8" pos:column="30"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="31">dst<pos:position pos:line="8" pos:column="34"/></name></expr></argument>)<pos:position pos:line="8" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="36"/></return></block></else></if>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">src<pos:position pos:line="10" pos:column="19"/></name></expr>;<pos:position pos:line="10" pos:column="20"/></return></block></else></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

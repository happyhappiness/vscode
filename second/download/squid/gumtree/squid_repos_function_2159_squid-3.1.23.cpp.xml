<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2159_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">commSetSelect<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">int<pos:position pos:line="2" pos:column="18"/></name></type> <name pos:line="2" pos:column="19">fd<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="23">unsigned<pos:position pos:line="2" pos:column="31"/></name> <name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">type<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">PF<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type> <name pos:line="2" pos:column="47">handler<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>,
              <parameter><decl><type><name pos:line="3" pos:column="15">void<pos:position pos:line="3" pos:column="19"/></name> <modifier pos:line="3" pos:column="20">*<pos:position pos:line="3" pos:column="21"/></modifier></type><name pos:line="3" pos:column="21">client_data<pos:position pos:line="3" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="34">time_t<pos:position pos:line="3" pos:column="40"/></name></type> <name pos:line="3" pos:column="41">timeout<pos:position pos:line="3" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="49"/></parameter_list>
<block pos:line="4" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">fde<pos:position pos:line="5" pos:column="8"/></name> <modifier pos:line="5" pos:column="9">*<pos:position pos:line="5" pos:column="10"/></modifier></type><name pos:line="5" pos:column="10">F<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><operator pos:line="5" pos:column="14">&amp;<pos:position pos:line="5" pos:column="19"/></operator><name><name pos:line="5" pos:column="15">fd_table<pos:position pos:line="5" pos:column="23"/></name><index pos:line="5" pos:column="23">[<expr><name pos:line="5" pos:column="24">fd<pos:position pos:line="5" pos:column="26"/></name></expr>]<pos:position pos:line="5" pos:column="27"/></index></name></expr></init></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">epoll_ctl_type<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><literal type="number" pos:line="6" pos:column="26">0<pos:position pos:line="6" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">epoll_event<pos:position pos:line="8" pos:column="23"/></name></name></type> <name pos:line="8" pos:column="24">ev<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">fd<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&gt;=<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">5<pos:position pos:line="10" pos:column="13"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="10" pos:column="15">DEBUG_EPOLL<pos:position pos:line="10" pos:column="26"/></name></expr> ?<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <expr><literal type="number" pos:line="10" pos:column="29">0<pos:position pos:line="10" pos:column="30"/></literal></expr> <pos:position pos:line="10" pos:column="31"/></then><else pos:line="10" pos:column="31">: <expr><literal type="number" pos:line="10" pos:column="33">8<pos:position pos:line="10" pos:column="34"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="36">"commSetSelect(FD "<pos:position pos:line="10" pos:column="55"/></literal> <operator pos:line="10" pos:column="56">&lt;&lt;<pos:position pos:line="10" pos:column="64"/></operator> <name pos:line="10" pos:column="59">fd<pos:position pos:line="10" pos:column="61"/></name> <operator pos:line="10" pos:column="62">&lt;&lt;<pos:position pos:line="10" pos:column="70"/></operator> <literal type="string" pos:line="10" pos:column="65">",type="<pos:position pos:line="10" pos:column="73"/></literal> <operator pos:line="10" pos:column="74">&lt;&lt;<pos:position pos:line="10" pos:column="82"/></operator> <name pos:line="10" pos:column="77">type<pos:position pos:line="10" pos:column="81"/></name> <operator pos:line="10" pos:column="82">&lt;&lt;<pos:position pos:line="10" pos:column="90"/></operator>
           <literal type="string" pos:line="11" pos:column="12">",handler="<pos:position pos:line="11" pos:column="23"/></literal> <operator pos:line="11" pos:column="24">&lt;&lt;<pos:position pos:line="11" pos:column="32"/></operator> <name pos:line="11" pos:column="27">handler<pos:position pos:line="11" pos:column="34"/></name> <operator pos:line="11" pos:column="35">&lt;&lt;<pos:position pos:line="11" pos:column="43"/></operator> <literal type="string" pos:line="11" pos:column="38">",client_data="<pos:position pos:line="11" pos:column="53"/></literal> <operator pos:line="11" pos:column="54">&lt;&lt;<pos:position pos:line="11" pos:column="62"/></operator> <name pos:line="11" pos:column="57">client_data<pos:position pos:line="11" pos:column="68"/></name> <operator pos:line="11" pos:column="69">&lt;&lt;<pos:position pos:line="11" pos:column="77"/></operator>
           <literal type="string" pos:line="12" pos:column="12">",timeout="<pos:position pos:line="12" pos:column="23"/></literal> <operator pos:line="12" pos:column="24">&lt;&lt;<pos:position pos:line="12" pos:column="32"/></operator> <name pos:line="12" pos:column="27">timeout<pos:position pos:line="12" pos:column="34"/></name> <operator pos:line="12" pos:column="35">&lt;&lt;<pos:position pos:line="12" pos:column="43"/></operator> <literal type="string" pos:line="12" pos:column="38">")"<pos:position pos:line="12" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="43"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">RUNNING_ON_VALGRIND<pos:position pos:line="14" pos:column="28"/></name></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29"> <block pos:line="14" pos:column="30">{
        <comment type="block" pos:line="15" pos:column="9">/* Keep valgrind happy.. complains about uninitialized bytes otherwise */</comment>
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">memset<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><operator pos:line="16" pos:column="16">&amp;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="17">ev<pos:position pos:line="16" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="21">0<pos:position pos:line="16" pos:column="22"/></literal></expr></argument>, <argument><expr><sizeof pos:line="16" pos:column="24">sizeof<argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">ev<pos:position pos:line="16" pos:column="33"/></name></expr></argument>)<pos:position pos:line="16" pos:column="34"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="16" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">ev<pos:position pos:line="18" pos:column="7"/></name><operator pos:line="18" pos:column="7">.<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">events<pos:position pos:line="18" pos:column="14"/></name></name> <operator pos:line="18" pos:column="15">=<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="17">0<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">ev<pos:position pos:line="19" pos:column="7"/></name><operator pos:line="19" pos:column="7">.<pos:position pos:line="19" pos:column="8"/></operator><name pos:line="19" pos:column="8">data<pos:position pos:line="19" pos:column="12"/></name><operator pos:line="19" pos:column="12">.<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">fd<pos:position pos:line="19" pos:column="15"/></name></name> <operator pos:line="19" pos:column="16">=<pos:position pos:line="19" pos:column="17"/></operator> <name pos:line="19" pos:column="18">fd<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name><name pos:line="21" pos:column="10">F<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">flags<pos:position pos:line="21" pos:column="18"/></name><operator pos:line="21" pos:column="18">.<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">open<pos:position pos:line="21" pos:column="23"/></name></name></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24"> <block pos:line="21" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">epoll_ctl<pos:position pos:line="22" pos:column="18"/></name><argument_list pos:line="22" pos:column="18">(<argument><expr><name pos:line="22" pos:column="19">kdpfd<pos:position pos:line="22" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="26">EPOLL_CTL_DEL<pos:position pos:line="22" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="41">fd<pos:position pos:line="22" pos:column="43"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="45">&amp;<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="46">ev<pos:position pos:line="22" pos:column="48"/></name></expr></argument>)<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="50"/></expr_stmt>
        <return pos:line="23" pos:column="9">return;<pos:position pos:line="23" pos:column="16"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="26" pos:column="5">// If read is an interest</comment>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><name pos:line="28" pos:column="9">type<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">&amp;<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="16">COMM_SELECT_READ<pos:position pos:line="28" pos:column="32"/></name></expr>)<pos:position pos:line="28" pos:column="33"/></condition><then pos:line="28" pos:column="33"> <block pos:line="28" pos:column="34">{
        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><name pos:line="29" pos:column="13">handler<pos:position pos:line="29" pos:column="20"/></name></expr>)<pos:position pos:line="29" pos:column="21"/></condition><then pos:line="29" pos:column="21"> <block pos:line="29" pos:column="22">{
            <comment type="line" pos:line="30" pos:column="13">// Hack to keep the events flowing if there is data immediately ready</comment>
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><name><name pos:line="31" pos:column="17">F<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">-&gt;<pos:position pos:line="31" pos:column="23"/></operator><name pos:line="31" pos:column="20">flags<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">.<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="26">read_pending<pos:position pos:line="31" pos:column="38"/></name></name></expr>)<pos:position pos:line="31" pos:column="39"/></condition><then pos:line="31" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="32" pos:column="17">ev<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">.<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">events<pos:position pos:line="32" pos:column="26"/></name></name> <operator pos:line="32" pos:column="27">|=<pos:position pos:line="32" pos:column="29"/></operator> <name pos:line="32" pos:column="30">EPOLLOUT<pos:position pos:line="32" pos:column="38"/></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">ev<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">.<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">events<pos:position pos:line="33" pos:column="22"/></name></name> <operator pos:line="33" pos:column="23">|=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">EPOLLIN<pos:position pos:line="33" pos:column="33"/></name></expr>;<pos:position pos:line="33" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="36" pos:column="9">F<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">read_handler<pos:position pos:line="36" pos:column="24"/></name></name> <operator pos:line="36" pos:column="25">=<pos:position pos:line="36" pos:column="26"/></operator> <name pos:line="36" pos:column="27">handler<pos:position pos:line="36" pos:column="34"/></name></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="38" pos:column="9">F<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">read_data<pos:position pos:line="38" pos:column="21"/></name></name> <operator pos:line="38" pos:column="22">=<pos:position pos:line="38" pos:column="23"/></operator> <name pos:line="38" pos:column="24">client_data<pos:position pos:line="38" pos:column="35"/></name></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>

        <comment type="line" pos:line="40" pos:column="9">// Otherwise, use previously stored value</comment>
    }<pos:position pos:line="41" pos:column="6"/></block></then> <elseif pos:line="41" pos:column="7">else <if pos:line="41" pos:column="12">if <condition pos:line="41" pos:column="15">(<expr><name><name pos:line="41" pos:column="16">F<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">epoll_state<pos:position pos:line="41" pos:column="30"/></name></name> <operator pos:line="41" pos:column="31">&amp;<pos:position pos:line="41" pos:column="36"/></operator> <name pos:line="41" pos:column="33">EPOLLIN<pos:position pos:line="41" pos:column="40"/></name></expr>)<pos:position pos:line="41" pos:column="41"/></condition><then pos:line="41" pos:column="41"> <block pos:line="41" pos:column="42">{
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">ev<pos:position pos:line="42" pos:column="11"/></name><operator pos:line="42" pos:column="11">.<pos:position pos:line="42" pos:column="12"/></operator><name pos:line="42" pos:column="12">events<pos:position pos:line="42" pos:column="18"/></name></name> <operator pos:line="42" pos:column="19">|=<pos:position pos:line="42" pos:column="21"/></operator> <name pos:line="42" pos:column="22">EPOLLIN<pos:position pos:line="42" pos:column="29"/></name></expr>;<pos:position pos:line="42" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if></elseif></if>

    <comment type="line" pos:line="45" pos:column="5">// If write is an interest</comment>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><name pos:line="46" pos:column="9">type<pos:position pos:line="46" pos:column="13"/></name> <operator pos:line="46" pos:column="14">&amp;<pos:position pos:line="46" pos:column="19"/></operator> <name pos:line="46" pos:column="16">COMM_SELECT_WRITE<pos:position pos:line="46" pos:column="33"/></name></expr>)<pos:position pos:line="46" pos:column="34"/></condition><then pos:line="46" pos:column="34"> <block pos:line="46" pos:column="35">{
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><name pos:line="47" pos:column="13">handler<pos:position pos:line="47" pos:column="20"/></name></expr>)<pos:position pos:line="47" pos:column="21"/></condition><then pos:line="47" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="48" pos:column="13">ev<pos:position pos:line="48" pos:column="15"/></name><operator pos:line="48" pos:column="15">.<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="16">events<pos:position pos:line="48" pos:column="22"/></name></name> <operator pos:line="48" pos:column="23">|=<pos:position pos:line="48" pos:column="25"/></operator> <name pos:line="48" pos:column="26">EPOLLOUT<pos:position pos:line="48" pos:column="34"/></name></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="50" pos:column="9">F<pos:position pos:line="50" pos:column="10"/></name><operator pos:line="50" pos:column="10">-&gt;<pos:position pos:line="50" pos:column="15"/></operator><name pos:line="50" pos:column="12">write_handler<pos:position pos:line="50" pos:column="25"/></name></name> <operator pos:line="50" pos:column="26">=<pos:position pos:line="50" pos:column="27"/></operator> <name pos:line="50" pos:column="28">handler<pos:position pos:line="50" pos:column="35"/></name></expr>;<pos:position pos:line="50" pos:column="36"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="52" pos:column="9">F<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">write_data<pos:position pos:line="52" pos:column="22"/></name></name> <operator pos:line="52" pos:column="23">=<pos:position pos:line="52" pos:column="24"/></operator> <name pos:line="52" pos:column="25">client_data<pos:position pos:line="52" pos:column="36"/></name></expr>;<pos:position pos:line="52" pos:column="37"/></expr_stmt>

        <comment type="line" pos:line="54" pos:column="9">// Otherwise, use previously stored value</comment>
    }<pos:position pos:line="55" pos:column="6"/></block></then> <elseif pos:line="55" pos:column="7">else <if pos:line="55" pos:column="12">if <condition pos:line="55" pos:column="15">(<expr><name><name pos:line="55" pos:column="16">F<pos:position pos:line="55" pos:column="17"/></name><operator pos:line="55" pos:column="17">-&gt;<pos:position pos:line="55" pos:column="22"/></operator><name pos:line="55" pos:column="19">epoll_state<pos:position pos:line="55" pos:column="30"/></name></name> <operator pos:line="55" pos:column="31">&amp;<pos:position pos:line="55" pos:column="36"/></operator> <name pos:line="55" pos:column="33">EPOLLOUT<pos:position pos:line="55" pos:column="41"/></name></expr>)<pos:position pos:line="55" pos:column="42"/></condition><then pos:line="55" pos:column="42"> <block pos:line="55" pos:column="43">{
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">ev<pos:position pos:line="56" pos:column="11"/></name><operator pos:line="56" pos:column="11">.<pos:position pos:line="56" pos:column="12"/></operator><name pos:line="56" pos:column="12">events<pos:position pos:line="56" pos:column="18"/></name></name> <operator pos:line="56" pos:column="19">|=<pos:position pos:line="56" pos:column="21"/></operator> <name pos:line="56" pos:column="22">EPOLLOUT<pos:position pos:line="56" pos:column="30"/></name></expr>;<pos:position pos:line="56" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name><name pos:line="59" pos:column="9">ev<pos:position pos:line="59" pos:column="11"/></name><operator pos:line="59" pos:column="11">.<pos:position pos:line="59" pos:column="12"/></operator><name pos:line="59" pos:column="12">events<pos:position pos:line="59" pos:column="18"/></name></name></expr>)<pos:position pos:line="59" pos:column="19"/></condition><then pos:line="59" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="60" pos:column="9">ev<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">.<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="12">events<pos:position pos:line="60" pos:column="18"/></name></name> <operator pos:line="60" pos:column="19">|=<pos:position pos:line="60" pos:column="21"/></operator> <name pos:line="60" pos:column="22">EPOLLHUP<pos:position pos:line="60" pos:column="30"/></name> <operator pos:line="60" pos:column="31">|<pos:position pos:line="60" pos:column="32"/></operator> <name pos:line="60" pos:column="33">EPOLLERR<pos:position pos:line="60" pos:column="41"/></name></expr>;<pos:position pos:line="60" pos:column="42"/></expr_stmt></block></then></if>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name><name pos:line="62" pos:column="9">ev<pos:position pos:line="62" pos:column="11"/></name><operator pos:line="62" pos:column="11">.<pos:position pos:line="62" pos:column="12"/></operator><name pos:line="62" pos:column="12">events<pos:position pos:line="62" pos:column="18"/></name></name> <operator pos:line="62" pos:column="19">!=<pos:position pos:line="62" pos:column="21"/></operator> <name><name pos:line="62" pos:column="22">F<pos:position pos:line="62" pos:column="23"/></name><operator pos:line="62" pos:column="23">-&gt;<pos:position pos:line="62" pos:column="28"/></operator><name pos:line="62" pos:column="25">epoll_state<pos:position pos:line="62" pos:column="36"/></name></name></expr>)<pos:position pos:line="62" pos:column="37"/></condition><then pos:line="62" pos:column="37"> <block pos:line="62" pos:column="38">{
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name><name pos:line="63" pos:column="13">F<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">epoll_state<pos:position pos:line="63" pos:column="27"/></name></name></expr>)<pos:position pos:line="63" pos:column="28"/></condition><then pos:line="63" pos:column="28"> <comment type="line" pos:line="63" pos:column="29">// already monitoring something.</comment>
            <block type="pseudo"><expr_stmt><expr><name pos:line="64" pos:column="13">epoll_ctl_type<pos:position pos:line="64" pos:column="27"/></name> <operator pos:line="64" pos:column="28">=<pos:position pos:line="64" pos:column="29"/></operator> <ternary><condition><expr><name><name pos:line="64" pos:column="30">ev<pos:position pos:line="64" pos:column="32"/></name><operator pos:line="64" pos:column="32">.<pos:position pos:line="64" pos:column="33"/></operator><name pos:line="64" pos:column="33">events<pos:position pos:line="64" pos:column="39"/></name></name></expr> ?<pos:position pos:line="64" pos:column="41"/></condition><then pos:line="64" pos:column="41"> <expr><name pos:line="64" pos:column="42">EPOLL_CTL_MOD<pos:position pos:line="64" pos:column="55"/></name></expr> <pos:position pos:line="64" pos:column="56"/></then><else pos:line="64" pos:column="56">: <expr><name pos:line="64" pos:column="58">EPOLL_CTL_DEL<pos:position pos:line="64" pos:column="71"/></name></expr></else></ternary></expr>;<pos:position pos:line="64" pos:column="72"/></expr_stmt></block></then>
        <else pos:line="65" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="66" pos:column="13">epoll_ctl_type<pos:position pos:line="66" pos:column="27"/></name> <operator pos:line="66" pos:column="28">=<pos:position pos:line="66" pos:column="29"/></operator> <name pos:line="66" pos:column="30">EPOLL_CTL_ADD<pos:position pos:line="66" pos:column="43"/></name></expr>;<pos:position pos:line="66" pos:column="44"/></expr_stmt></block></else></if>

        <expr_stmt><expr><name><name pos:line="68" pos:column="9">F<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">-&gt;<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="12">epoll_state<pos:position pos:line="68" pos:column="23"/></name></name> <operator pos:line="68" pos:column="24">=<pos:position pos:line="68" pos:column="25"/></operator> <name><name pos:line="68" pos:column="26">ev<pos:position pos:line="68" pos:column="28"/></name><operator pos:line="68" pos:column="28">.<pos:position pos:line="68" pos:column="29"/></operator><name pos:line="68" pos:column="29">events<pos:position pos:line="68" pos:column="35"/></name></name></expr>;<pos:position pos:line="68" pos:column="36"/></expr_stmt>

        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><call><name pos:line="70" pos:column="13">epoll_ctl<pos:position pos:line="70" pos:column="22"/></name><argument_list pos:line="70" pos:column="22">(<argument><expr><name pos:line="70" pos:column="23">kdpfd<pos:position pos:line="70" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="30">epoll_ctl_type<pos:position pos:line="70" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="46">fd<pos:position pos:line="70" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="70" pos:column="50">&amp;<pos:position pos:line="70" pos:column="55"/></operator><name pos:line="70" pos:column="51">ev<pos:position pos:line="70" pos:column="53"/></name></expr></argument>)<pos:position pos:line="70" pos:column="54"/></argument_list></call> <operator pos:line="70" pos:column="55">&lt;<pos:position pos:line="70" pos:column="59"/></operator> <literal type="number" pos:line="70" pos:column="57">0<pos:position pos:line="70" pos:column="58"/></literal></expr>)<pos:position pos:line="70" pos:column="59"/></condition><then pos:line="70" pos:column="59"> <block pos:line="70" pos:column="60">{
            <expr_stmt><expr><call><name pos:line="71" pos:column="13">debugs<pos:position pos:line="71" pos:column="19"/></name><argument_list pos:line="71" pos:column="19">(<argument><expr><literal type="number" pos:line="71" pos:column="20">5<pos:position pos:line="71" pos:column="21"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="71" pos:column="23">DEBUG_EPOLL<pos:position pos:line="71" pos:column="34"/></name></expr> ?<pos:position pos:line="71" pos:column="36"/></condition><then pos:line="71" pos:column="36"> <expr><literal type="number" pos:line="71" pos:column="37">0<pos:position pos:line="71" pos:column="38"/></literal></expr> <pos:position pos:line="71" pos:column="39"/></then><else pos:line="71" pos:column="39">: <expr><literal type="number" pos:line="71" pos:column="41">8<pos:position pos:line="71" pos:column="42"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="44">"commSetSelect: epoll_ctl(,"<pos:position pos:line="71" pos:column="72"/></literal> <operator pos:line="71" pos:column="73">&lt;&lt;<pos:position pos:line="71" pos:column="81"/></operator> <call><name pos:line="71" pos:column="76">epolltype_atoi<pos:position pos:line="71" pos:column="90"/></name><argument_list pos:line="71" pos:column="90">(<argument><expr><name pos:line="71" pos:column="91">epoll_ctl_type<pos:position pos:line="71" pos:column="105"/></name></expr></argument>)<pos:position pos:line="71" pos:column="106"/></argument_list></call> <operator pos:line="71" pos:column="107">&lt;&lt;<pos:position pos:line="71" pos:column="115"/></operator>
                   <literal type="string" pos:line="72" pos:column="20">",,): failed on FD "<pos:position pos:line="72" pos:column="40"/></literal> <operator pos:line="72" pos:column="41">&lt;&lt;<pos:position pos:line="72" pos:column="49"/></operator> <name pos:line="72" pos:column="44">fd<pos:position pos:line="72" pos:column="46"/></name> <operator pos:line="72" pos:column="47">&lt;&lt;<pos:position pos:line="72" pos:column="55"/></operator> <literal type="string" pos:line="72" pos:column="50">": "<pos:position pos:line="72" pos:column="54"/></literal> <operator pos:line="72" pos:column="55">&lt;&lt;<pos:position pos:line="72" pos:column="63"/></operator> <call><name pos:line="72" pos:column="58">xstrerror<pos:position pos:line="72" pos:column="67"/></name><argument_list pos:line="72" pos:column="67">()<pos:position pos:line="72" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="72" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="71"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></then></if>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>

    <if pos:line="76" pos:column="5">if <condition pos:line="76" pos:column="8">(<expr><name pos:line="76" pos:column="9">timeout<pos:position pos:line="76" pos:column="16"/></name></expr>)<pos:position pos:line="76" pos:column="17"/></condition><then pos:line="76" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="77" pos:column="9">F<pos:position pos:line="77" pos:column="10"/></name><operator pos:line="77" pos:column="10">-&gt;<pos:position pos:line="77" pos:column="15"/></operator><name pos:line="77" pos:column="12">timeout<pos:position pos:line="77" pos:column="19"/></name></name> <operator pos:line="77" pos:column="20">=<pos:position pos:line="77" pos:column="21"/></operator> <name pos:line="77" pos:column="22">squid_curtime<pos:position pos:line="77" pos:column="35"/></name> <operator pos:line="77" pos:column="36">+<pos:position pos:line="77" pos:column="37"/></operator> <name pos:line="77" pos:column="38">timeout<pos:position pos:line="77" pos:column="45"/></name></expr>;<pos:position pos:line="77" pos:column="46"/></expr_stmt></block></then></if>
}<pos:position pos:line="78" pos:column="2"/></block></function></unit>

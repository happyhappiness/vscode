<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6973_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">StoreMap<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">purgeOne<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">()<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// Hopefully, we find a removable entry much sooner (TODO: use time?).</comment>
    <comment type="line" pos:line="5" pos:column="5">// The min() will protect us from division by zero inside the loop.</comment>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">int<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">searchLimit<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><call><name pos:line="6" pos:column="29">min<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">(<argument><expr><literal type="number" pos:line="6" pos:column="33">10000<pos:position pos:line="6" pos:column="38"/></literal></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="40">entryLimit<pos:position pos:line="6" pos:column="50"/></name><argument_list pos:line="6" pos:column="50">()<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">tries<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><literal type="number" pos:line="7" pos:column="17">0<pos:position pos:line="7" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="19"/></decl_stmt>
    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init pos:line="8" pos:column="10">;<pos:position pos:line="8" pos:column="11"/></init> <condition><expr><name pos:line="8" pos:column="12">tries<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">&lt;<pos:position pos:line="8" pos:column="22"/></operator> <name pos:line="8" pos:column="20">searchLimit<pos:position pos:line="8" pos:column="31"/></name></expr>;<pos:position pos:line="8" pos:column="32"/></condition> <incr><expr><operator pos:line="8" pos:column="33">++<pos:position pos:line="8" pos:column="35"/></operator><name pos:line="8" pos:column="35">tries<pos:position pos:line="8" pos:column="40"/></name></expr></incr>)<pos:position pos:line="8" pos:column="41"/></control> <block pos:line="8" pos:column="42">{
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">sfileno<pos:position pos:line="9" pos:column="22"/></name></type> <name pos:line="9" pos:column="23">fileno<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><cast type="static" pos:line="9" pos:column="32">static_cast<argument_list type="generic" pos:line="9" pos:column="43">&lt;<argument><expr><name pos:line="9" pos:column="44">sfileno<pos:position pos:line="9" pos:column="51"/></name></expr></argument>&gt;<pos:position pos:line="9" pos:column="55"/></argument_list><argument_list pos:line="9" pos:column="52">(<argument><expr><operator pos:line="9" pos:column="53">++<pos:position pos:line="9" pos:column="55"/></operator><name><name pos:line="9" pos:column="55">anchors<pos:position pos:line="9" pos:column="62"/></name><operator pos:line="9" pos:column="62">-&gt;<pos:position pos:line="9" pos:column="67"/></operator><name pos:line="9" pos:column="64">victim<pos:position pos:line="9" pos:column="70"/></name></name> <operator pos:line="9" pos:column="71">%<pos:position pos:line="9" pos:column="72"/></operator> <call><name pos:line="9" pos:column="73">entryLimit<pos:position pos:line="9" pos:column="83"/></name><argument_list pos:line="9" pos:column="83">()<pos:position pos:line="9" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="86"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="9" pos:column="87"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">Anchor<pos:position pos:line="10" pos:column="15"/></name> <modifier pos:line="10" pos:column="16">&amp;<pos:position pos:line="10" pos:column="21"/></modifier></type><name pos:line="10" pos:column="17">s<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><call><name pos:line="10" pos:column="21">anchorAt<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">fileno<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="38"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name><name pos:line="11" pos:column="13">s<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">lock<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">.<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">lockExclusive<pos:position pos:line="11" pos:column="33"/></name></name><argument_list pos:line="11" pos:column="33">()<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="36"/></condition><then pos:line="11" pos:column="36"> <block pos:line="11" pos:column="37">{
            <comment type="line" pos:line="12" pos:column="13">// the caller wants a free slice; empty anchor is not enough</comment>
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><operator pos:line="13" pos:column="17">!<pos:position pos:line="13" pos:column="18"/></operator><call><name><name pos:line="13" pos:column="18">s<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">.<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">empty<pos:position pos:line="13" pos:column="25"/></name></name><argument_list pos:line="13" pos:column="25">()<pos:position pos:line="13" pos:column="27"/></argument_list></call> <operator pos:line="13" pos:column="28">&amp;&amp;<pos:position pos:line="13" pos:column="38"/></operator> <name><name pos:line="13" pos:column="31">s<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">.<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="33">start<pos:position pos:line="13" pos:column="38"/></name></name> <operator pos:line="13" pos:column="39">&gt;=<pos:position pos:line="13" pos:column="44"/></operator> <literal type="number" pos:line="13" pos:column="42">0<pos:position pos:line="13" pos:column="43"/></literal></expr>)<pos:position pos:line="13" pos:column="44"/></condition><then pos:line="13" pos:column="44"> <block pos:line="13" pos:column="45">{
                <comment type="line" pos:line="14" pos:column="17">// this entry may be marked for deletion, and that is OK</comment>
                <expr_stmt><expr><call><name pos:line="15" pos:column="17">freeChain<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">fileno<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="35">s<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="15" pos:column="38">false<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="16" pos:column="17">debugs<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">(<argument><expr><literal type="number" pos:line="16" pos:column="24">54<pos:position pos:line="16" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="28">5<pos:position pos:line="16" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="31">"purged entry "<pos:position pos:line="16" pos:column="46"/></literal> <operator pos:line="16" pos:column="47">&lt;&lt;<pos:position pos:line="16" pos:column="55"/></operator> <name pos:line="16" pos:column="50">fileno<pos:position pos:line="16" pos:column="56"/></name> <operator pos:line="16" pos:column="57">&lt;&lt;<pos:position pos:line="16" pos:column="65"/></operator> <literal type="string" pos:line="16" pos:column="60">" from "<pos:position pos:line="16" pos:column="68"/></literal> <operator pos:line="16" pos:column="69">&lt;&lt;<pos:position pos:line="16" pos:column="77"/></operator> <name pos:line="16" pos:column="72">path<pos:position pos:line="16" pos:column="76"/></name></expr></argument>)<pos:position pos:line="16" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="78"/></expr_stmt>
                <return pos:line="17" pos:column="17">return <expr><literal type="boolean" pos:line="17" pos:column="24">true<pos:position pos:line="17" pos:column="28"/></literal></expr>;<pos:position pos:line="17" pos:column="29"/></return>
            }<pos:position pos:line="18" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">s<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">.<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">lock<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">.<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">unlockExclusive<pos:position pos:line="19" pos:column="35"/></name></name><argument_list pos:line="19" pos:column="35">()<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">debugs<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="number" pos:line="22" pos:column="12">54<pos:position pos:line="22" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="16">5<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="19">"no entries to purge from "<pos:position pos:line="22" pos:column="46"/></literal> <operator pos:line="22" pos:column="47">&lt;&lt;<pos:position pos:line="22" pos:column="55"/></operator> <name pos:line="22" pos:column="50">path<pos:position pos:line="22" pos:column="54"/></name> <operator pos:line="22" pos:column="55">&lt;&lt;<pos:position pos:line="22" pos:column="63"/></operator> <literal type="string" pos:line="22" pos:column="58">"; tried: "<pos:position pos:line="22" pos:column="69"/></literal> <operator pos:line="22" pos:column="70">&lt;&lt;<pos:position pos:line="22" pos:column="78"/></operator> <name pos:line="22" pos:column="73">tries<pos:position pos:line="22" pos:column="78"/></name></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="80"/></expr_stmt>
    <return pos:line="23" pos:column="5">return <expr><literal type="boolean" pos:line="23" pos:column="12">false<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

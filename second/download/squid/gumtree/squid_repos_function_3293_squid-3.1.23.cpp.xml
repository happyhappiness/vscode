<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3293_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">examine_select<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">fd_set<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">readfds<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">fd_set<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type> <name pos:line="2" pos:column="43">writefds<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">fd<pos:position pos:line="4" pos:column="11"/></name> <init pos:line="4" pos:column="12">= <expr><literal type="number" pos:line="4" pos:column="14">0<pos:position pos:line="4" pos:column="15"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">fd_set<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">read_x<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">fd_set<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">write_x<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">timeval<pos:position pos:line="8" pos:column="19"/></name></name></type> <name pos:line="8" pos:column="20">tv<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">AsyncCall<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">::<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">Pointer<pos:position pos:line="9" pos:column="23"/></name></name></type> <name pos:line="9" pos:column="24">ch<pos:position pos:line="9" pos:column="26"/></name> <init pos:line="9" pos:column="27">= <expr><name pos:line="9" pos:column="29">NULL<pos:position pos:line="9" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">fde<pos:position pos:line="10" pos:column="8"/></name> <modifier pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></modifier></type><name pos:line="10" pos:column="10">F<pos:position pos:line="10" pos:column="11"/></name> <init pos:line="10" pos:column="12">= <expr><name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">struct<pos:position pos:line="12" pos:column="11"/></name> <name pos:line="12" pos:column="12">stat<pos:position pos:line="12" pos:column="16"/></name></name></type> <name pos:line="12" pos:column="17">sb<pos:position pos:line="12" pos:column="19"/></name></decl>;<pos:position pos:line="12" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">5<pos:position pos:line="13" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="15">0<pos:position pos:line="13" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="18">"examine_select: Examining open file descriptors..."<pos:position pos:line="13" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>

    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init><expr><name pos:line="15" pos:column="10">fd<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <literal type="number" pos:line="15" pos:column="15">0<pos:position pos:line="15" pos:column="16"/></literal></expr>;<pos:position pos:line="15" pos:column="17"/></init> <condition><expr><name pos:line="15" pos:column="18">fd<pos:position pos:line="15" pos:column="20"/></name> <operator pos:line="15" pos:column="21">&lt;<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="23">Squid_MaxFD<pos:position pos:line="15" pos:column="34"/></name></expr>;<pos:position pos:line="15" pos:column="35"/></condition> <incr><expr><name pos:line="15" pos:column="36">fd<pos:position pos:line="15" pos:column="38"/></name><operator pos:line="15" pos:column="38">++<pos:position pos:line="15" pos:column="40"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="41"/></control> <block pos:line="15" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">FD_ZERO<pos:position pos:line="16" pos:column="16"/></name><argument_list pos:line="16" pos:column="16">(<argument><expr><operator pos:line="16" pos:column="17">&amp;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="18">read_x<pos:position pos:line="16" pos:column="24"/></name></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">FD_ZERO<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><operator pos:line="17" pos:column="17">&amp;<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="18">write_x<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">tv<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">.<pos:position pos:line="18" pos:column="12"/></operator><name pos:line="18" pos:column="12">tv_sec<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <name><name pos:line="18" pos:column="21">tv<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">.<pos:position pos:line="18" pos:column="24"/></operator><name pos:line="18" pos:column="24">tv_usec<pos:position pos:line="18" pos:column="31"/></name></name> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <literal type="number" pos:line="18" pos:column="34">0<pos:position pos:line="18" pos:column="35"/></literal></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">__WSAFDIsSet<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name><name pos:line="20" pos:column="26">fd_table<pos:position pos:line="20" pos:column="34"/></name><index pos:line="20" pos:column="34">[<expr><name pos:line="20" pos:column="35">fd<pos:position pos:line="20" pos:column="37"/></name></expr>]<pos:position pos:line="20" pos:column="38"/></index></name><operator pos:line="20" pos:column="38">.<pos:position pos:line="20" pos:column="39"/></operator><name><name pos:line="20" pos:column="39">win32<pos:position pos:line="20" pos:column="44"/></name><operator pos:line="20" pos:column="44">.<pos:position pos:line="20" pos:column="45"/></operator><name pos:line="20" pos:column="45">handle<pos:position pos:line="20" pos:column="51"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">readfds<pos:position pos:line="20" pos:column="60"/></name></expr></argument>)<pos:position pos:line="20" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="62"/></condition><then pos:line="20" pos:column="62">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="13">FD_SET<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><name pos:line="21" pos:column="20">fd<pos:position pos:line="21" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="24">&amp;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="25">read_x<pos:position pos:line="21" pos:column="31"/></name></expr></argument>)<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt></block></then>
        <elseif pos:line="22" pos:column="9">else <if pos:line="22" pos:column="14">if <condition pos:line="22" pos:column="17">(<expr><call><name pos:line="22" pos:column="18">__WSAFDIsSet<pos:position pos:line="22" pos:column="30"/></name><argument_list pos:line="22" pos:column="30">(<argument><expr><name><name pos:line="22" pos:column="31">fd_table<pos:position pos:line="22" pos:column="39"/></name><index pos:line="22" pos:column="39">[<expr><name pos:line="22" pos:column="40">fd<pos:position pos:line="22" pos:column="42"/></name></expr>]<pos:position pos:line="22" pos:column="43"/></index></name><operator pos:line="22" pos:column="43">.<pos:position pos:line="22" pos:column="44"/></operator><name><name pos:line="22" pos:column="44">win32<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">.<pos:position pos:line="22" pos:column="50"/></operator><name pos:line="22" pos:column="50">handle<pos:position pos:line="22" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="58">writefds<pos:position pos:line="22" pos:column="66"/></name></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="68"/></condition><then pos:line="22" pos:column="68">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="13">FD_SET<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">fd<pos:position pos:line="23" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="23" pos:column="24">&amp;<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="25">write_x<pos:position pos:line="23" pos:column="32"/></name></expr></argument>)<pos:position pos:line="23" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="34"/></expr_stmt></block></then></if></elseif>
        <else pos:line="24" pos:column="9">else
            <block type="pseudo"><continue pos:line="25" pos:column="13">continue;<pos:position pos:line="25" pos:column="22"/></continue></block></else></if>

        <expr_stmt><expr><name><name pos:line="27" pos:column="9">statCounter<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">.<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">syscalls<pos:position pos:line="27" pos:column="29"/></name><operator pos:line="27" pos:column="29">.<pos:position pos:line="27" pos:column="30"/></operator><name pos:line="27" pos:column="30">selects<pos:position pos:line="27" pos:column="37"/></name></name><operator pos:line="27" pos:column="37">++<pos:position pos:line="27" pos:column="39"/></operator></expr>;<pos:position pos:line="27" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">errno<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <literal type="number" pos:line="28" pos:column="17">0<pos:position pos:line="28" pos:column="18"/></literal></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>

        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><call><name pos:line="30" pos:column="14">fstat<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">fd<pos:position pos:line="30" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="24">&amp;<pos:position pos:line="30" pos:column="29"/></operator><name pos:line="30" pos:column="25">sb<pos:position pos:line="30" pos:column="27"/></name></expr></argument>)<pos:position pos:line="30" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="29"/></condition><then pos:line="30" pos:column="29"> <block pos:line="30" pos:column="30">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">debugs<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><literal type="number" pos:line="31" pos:column="20">5<pos:position pos:line="31" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="23">5<pos:position pos:line="31" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="26">"FD "<pos:position pos:line="31" pos:column="31"/></literal> <operator pos:line="31" pos:column="32">&lt;&lt;<pos:position pos:line="31" pos:column="40"/></operator> <name pos:line="31" pos:column="35">fd<pos:position pos:line="31" pos:column="37"/></name> <operator pos:line="31" pos:column="38">&lt;&lt;<pos:position pos:line="31" pos:column="46"/></operator> <literal type="string" pos:line="31" pos:column="41">" is valid."<pos:position pos:line="31" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="55"/></expr_stmt>
            <continue pos:line="32" pos:column="13">continue;<pos:position pos:line="32" pos:column="22"/></continue>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="35" pos:column="9">F<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <operator pos:line="35" pos:column="13">&amp;<pos:position pos:line="35" pos:column="18"/></operator><name><name pos:line="35" pos:column="14">fd_table<pos:position pos:line="35" pos:column="22"/></name><index pos:line="35" pos:column="22">[<expr><name pos:line="35" pos:column="23">fd<pos:position pos:line="35" pos:column="25"/></name></expr>]<pos:position pos:line="35" pos:column="26"/></index></name></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">debugs<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="number" pos:line="36" pos:column="16">5<pos:position pos:line="36" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="19">0<pos:position pos:line="36" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="22">"FD "<pos:position pos:line="36" pos:column="27"/></literal> <operator pos:line="36" pos:column="28">&lt;&lt;<pos:position pos:line="36" pos:column="36"/></operator> <name pos:line="36" pos:column="31">fd<pos:position pos:line="36" pos:column="33"/></name> <operator pos:line="36" pos:column="34">&lt;&lt;<pos:position pos:line="36" pos:column="42"/></operator> <literal type="string" pos:line="36" pos:column="37">": "<pos:position pos:line="36" pos:column="41"/></literal> <operator pos:line="36" pos:column="42">&lt;&lt;<pos:position pos:line="36" pos:column="50"/></operator> <call><name pos:line="36" pos:column="45">xstrerror<pos:position pos:line="36" pos:column="54"/></name><argument_list pos:line="36" pos:column="54">()<pos:position pos:line="36" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">debugs<pos:position pos:line="37" pos:column="15"/></name><argument_list pos:line="37" pos:column="15">(<argument><expr><literal type="number" pos:line="37" pos:column="16">5<pos:position pos:line="37" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="19">0<pos:position pos:line="37" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="22">"WARNING: FD "<pos:position pos:line="37" pos:column="36"/></literal> <operator pos:line="37" pos:column="37">&lt;&lt;<pos:position pos:line="37" pos:column="45"/></operator> <name pos:line="37" pos:column="40">fd<pos:position pos:line="37" pos:column="42"/></name> <operator pos:line="37" pos:column="43">&lt;&lt;<pos:position pos:line="37" pos:column="51"/></operator> <literal type="string" pos:line="37" pos:column="46">" has handlers, but it's invalid."<pos:position pos:line="37" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="38" pos:column="9">debugs<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><literal type="number" pos:line="38" pos:column="16">5<pos:position pos:line="38" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="19">0<pos:position pos:line="38" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="22">"FD "<pos:position pos:line="38" pos:column="27"/></literal> <operator pos:line="38" pos:column="28">&lt;&lt;<pos:position pos:line="38" pos:column="36"/></operator> <name pos:line="38" pos:column="31">fd<pos:position pos:line="38" pos:column="33"/></name> <operator pos:line="38" pos:column="34">&lt;&lt;<pos:position pos:line="38" pos:column="42"/></operator> <literal type="string" pos:line="38" pos:column="37">" is a "<pos:position pos:line="38" pos:column="45"/></literal> <operator pos:line="38" pos:column="46">&lt;&lt;<pos:position pos:line="38" pos:column="54"/></operator> <name><name pos:line="38" pos:column="49">fdTypeStr<pos:position pos:line="38" pos:column="58"/></name><index pos:line="38" pos:column="58">[<expr><name><name pos:line="38" pos:column="59">F<pos:position pos:line="38" pos:column="60"/></name><operator pos:line="38" pos:column="60">-&gt;<pos:position pos:line="38" pos:column="65"/></operator><name pos:line="38" pos:column="62">type<pos:position pos:line="38" pos:column="66"/></name></name></expr>]<pos:position pos:line="38" pos:column="67"/></index></name> <operator pos:line="38" pos:column="68">&lt;&lt;<pos:position pos:line="38" pos:column="76"/></operator> <literal type="string" pos:line="38" pos:column="71">" called '"<pos:position pos:line="38" pos:column="82"/></literal> <operator pos:line="38" pos:column="83">&lt;&lt;<pos:position pos:line="38" pos:column="91"/></operator> <name><name pos:line="38" pos:column="86">F<pos:position pos:line="38" pos:column="87"/></name><operator pos:line="38" pos:column="87">-&gt;<pos:position pos:line="38" pos:column="92"/></operator><name pos:line="38" pos:column="89">desc<pos:position pos:line="38" pos:column="93"/></name></name> <operator pos:line="38" pos:column="94">&lt;&lt;<pos:position pos:line="38" pos:column="102"/></operator> <literal type="string" pos:line="38" pos:column="97">"'"<pos:position pos:line="38" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="102"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">debugs<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><literal type="number" pos:line="39" pos:column="16">5<pos:position pos:line="39" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="19">0<pos:position pos:line="39" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="22">"tmout:"<pos:position pos:line="39" pos:column="30"/></literal> <operator pos:line="39" pos:column="31">&lt;&lt;<pos:position pos:line="39" pos:column="39"/></operator> <name><name pos:line="39" pos:column="34">F<pos:position pos:line="39" pos:column="35"/></name><operator pos:line="39" pos:column="35">-&gt;<pos:position pos:line="39" pos:column="40"/></operator><name pos:line="39" pos:column="37">timeoutHandler<pos:position pos:line="39" pos:column="51"/></name></name> <operator pos:line="39" pos:column="52">&lt;&lt;<pos:position pos:line="39" pos:column="60"/></operator> <literal type="string" pos:line="39" pos:column="55">" read:"<pos:position pos:line="39" pos:column="63"/></literal> <operator pos:line="39" pos:column="64">&lt;&lt;<pos:position pos:line="39" pos:column="72"/></operator> <name><name pos:line="39" pos:column="67">F<pos:position pos:line="39" pos:column="68"/></name><operator pos:line="39" pos:column="68">-&gt;<pos:position pos:line="39" pos:column="73"/></operator><name pos:line="39" pos:column="70">read_handler<pos:position pos:line="39" pos:column="82"/></name></name> <operator pos:line="39" pos:column="83">&lt;&lt;<pos:position pos:line="39" pos:column="91"/></operator> <literal type="string" pos:line="39" pos:column="86">" write:"<pos:position pos:line="39" pos:column="95"/></literal> <operator pos:line="39" pos:column="96">&lt;&lt;<pos:position pos:line="39" pos:column="104"/></operator> <name><name pos:line="39" pos:column="99">F<pos:position pos:line="39" pos:column="100"/></name><operator pos:line="39" pos:column="100">-&gt;<pos:position pos:line="39" pos:column="105"/></operator><name pos:line="39" pos:column="102">write_handler<pos:position pos:line="39" pos:column="115"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="117"/></expr_stmt>

        <for pos:line="41" pos:column="9">for <control pos:line="41" pos:column="13">(<init><expr><name pos:line="41" pos:column="14">ch<pos:position pos:line="41" pos:column="16"/></name> <operator pos:line="41" pos:column="17">=<pos:position pos:line="41" pos:column="18"/></operator> <name><name pos:line="41" pos:column="19">F<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">-&gt;<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="22">closeHandler<pos:position pos:line="41" pos:column="34"/></name></name></expr>;<pos:position pos:line="41" pos:column="35"/></init> <condition><expr><name pos:line="41" pos:column="36">ch<pos:position pos:line="41" pos:column="38"/></name> <operator pos:line="41" pos:column="39">!=<pos:position pos:line="41" pos:column="41"/></operator> <name pos:line="41" pos:column="42">NULL<pos:position pos:line="41" pos:column="46"/></name></expr>;<pos:position pos:line="41" pos:column="47"/></condition> <incr><expr><name pos:line="41" pos:column="48">ch<pos:position pos:line="41" pos:column="50"/></name> <operator pos:line="41" pos:column="51">=<pos:position pos:line="41" pos:column="52"/></operator> <call><name><name pos:line="41" pos:column="53">ch<pos:position pos:line="41" pos:column="55"/></name><operator pos:line="41" pos:column="55">-&gt;<pos:position pos:line="41" pos:column="60"/></operator><name pos:line="41" pos:column="57">Next<pos:position pos:line="41" pos:column="61"/></name></name><argument_list pos:line="41" pos:column="61">()<pos:position pos:line="41" pos:column="63"/></argument_list></call></expr></incr>)<pos:position pos:line="41" pos:column="64"/></control>
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="13">debugs<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><literal type="number" pos:line="42" pos:column="20">5<pos:position pos:line="42" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="23">0<pos:position pos:line="42" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="26">" close handler: "<pos:position pos:line="42" pos:column="44"/></literal> <operator pos:line="42" pos:column="45">&lt;&lt;<pos:position pos:line="42" pos:column="53"/></operator> <name pos:line="42" pos:column="48">ch<pos:position pos:line="42" pos:column="50"/></name></expr></argument>)<pos:position pos:line="42" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="52"/></expr_stmt></block></for>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">F<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">-&gt;<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="16">closeHandler<pos:position pos:line="44" pos:column="28"/></name></name> <operator pos:line="44" pos:column="29">!=<pos:position pos:line="44" pos:column="31"/></operator> <name pos:line="44" pos:column="32">NULL<pos:position pos:line="44" pos:column="36"/></name></expr>)<pos:position pos:line="44" pos:column="37"/></condition><then pos:line="44" pos:column="37"> <block pos:line="44" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">commCallCloseHandlers<pos:position pos:line="45" pos:column="34"/></name><argument_list pos:line="45" pos:column="34">(<argument><expr><name pos:line="45" pos:column="35">fd<pos:position pos:line="45" pos:column="37"/></name></expr></argument>)<pos:position pos:line="45" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="46" pos:column="10"/></block></then> <elseif pos:line="46" pos:column="11">else <if pos:line="46" pos:column="16">if <condition pos:line="46" pos:column="19">(<expr><name><name pos:line="46" pos:column="20">F<pos:position pos:line="46" pos:column="21"/></name><operator pos:line="46" pos:column="21">-&gt;<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="23">timeoutHandler<pos:position pos:line="46" pos:column="37"/></name></name> <operator pos:line="46" pos:column="38">!=<pos:position pos:line="46" pos:column="40"/></operator> <name pos:line="46" pos:column="41">NULL<pos:position pos:line="46" pos:column="45"/></name></expr>)<pos:position pos:line="46" pos:column="46"/></condition><then pos:line="46" pos:column="46"> <block pos:line="46" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="47" pos:column="13">debugs<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><literal type="number" pos:line="47" pos:column="20">5<pos:position pos:line="47" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="23">0<pos:position pos:line="47" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="26">"examine_select: Calling Timeout Handler"<pos:position pos:line="47" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">ScheduleCallHere<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name><name pos:line="48" pos:column="30">F<pos:position pos:line="48" pos:column="31"/></name><operator pos:line="48" pos:column="31">-&gt;<pos:position pos:line="48" pos:column="36"/></operator><name pos:line="48" pos:column="33">timeoutHandler<pos:position pos:line="48" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><name><name pos:line="51" pos:column="9">F<pos:position pos:line="51" pos:column="10"/></name><operator pos:line="51" pos:column="10">-&gt;<pos:position pos:line="51" pos:column="15"/></operator><name pos:line="51" pos:column="12">closeHandler<pos:position pos:line="51" pos:column="24"/></name></name> <operator pos:line="51" pos:column="25">=<pos:position pos:line="51" pos:column="26"/></operator> <name pos:line="51" pos:column="27">NULL<pos:position pos:line="51" pos:column="31"/></name></expr>;<pos:position pos:line="51" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">F<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">-&gt;<pos:position pos:line="52" pos:column="15"/></operator><name pos:line="52" pos:column="12">timeoutHandler<pos:position pos:line="52" pos:column="26"/></name></name> <operator pos:line="52" pos:column="27">=<pos:position pos:line="52" pos:column="28"/></operator> <name pos:line="52" pos:column="29">NULL<pos:position pos:line="52" pos:column="33"/></name></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="53" pos:column="9">F<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">read_handler<pos:position pos:line="53" pos:column="24"/></name></name> <operator pos:line="53" pos:column="25">=<pos:position pos:line="53" pos:column="26"/></operator> <name pos:line="53" pos:column="27">NULL<pos:position pos:line="53" pos:column="31"/></name></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">F<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">write_handler<pos:position pos:line="54" pos:column="25"/></name></name> <operator pos:line="54" pos:column="26">=<pos:position pos:line="54" pos:column="27"/></operator> <name pos:line="54" pos:column="28">NULL<pos:position pos:line="54" pos:column="32"/></name></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">FD_CLR<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><name pos:line="55" pos:column="16">fd<pos:position pos:line="55" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="20">readfds<pos:position pos:line="55" pos:column="27"/></name></expr></argument>)<pos:position pos:line="55" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">FD_CLR<pos:position pos:line="56" pos:column="15"/></name><argument_list pos:line="56" pos:column="15">(<argument><expr><name pos:line="56" pos:column="16">fd<pos:position pos:line="56" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="20">writefds<pos:position pos:line="56" pos:column="28"/></name></expr></argument>)<pos:position pos:line="56" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></for>

    <return pos:line="59" pos:column="5">return <expr><literal type="number" pos:line="59" pos:column="12">0<pos:position pos:line="59" pos:column="13"/></literal></expr>;<pos:position pos:line="59" pos:column="14"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

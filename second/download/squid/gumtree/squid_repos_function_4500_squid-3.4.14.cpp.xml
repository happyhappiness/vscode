<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4500_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">aclDestroyAcls<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">ACL<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier><modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type> <name pos:line="2" pos:column="23">head<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><operator pos:line="4" pos:column="5">*<pos:position pos:line="4" pos:column="6"/></operator><name pos:line="4" pos:column="6">head<pos:position pos:line="4" pos:column="10"/></name> <operator pos:line="4" pos:column="11">=<pos:position pos:line="4" pos:column="12"/></operator> <name pos:line="4" pos:column="13">NULL<pos:position pos:line="4" pos:column="17"/></name></expr>;<pos:position pos:line="4" pos:column="18"/></expr_stmt> <comment type="line" pos:line="4" pos:column="19">// Config.aclList</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<decl><type><name pos:line="5" pos:column="9">AclSet<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">acls<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">RegisteredAcls<pos:position pos:line="5" pos:column="38"/></name></expr></init></decl>)<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39"> <block pos:line="5" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">28<pos:position pos:line="6" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="20">8<pos:position pos:line="6" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="23">"deleting all "<pos:position pos:line="6" pos:column="38"/></literal> <operator pos:line="6" pos:column="39">&lt;&lt;<pos:position pos:line="6" pos:column="47"/></operator> <call><name><name pos:line="6" pos:column="42">acls<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">-&gt;<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="48">size<pos:position pos:line="6" pos:column="52"/></name></name><argument_list pos:line="6" pos:column="52">()<pos:position pos:line="6" pos:column="54"/></argument_list></call> <operator pos:line="6" pos:column="55">&lt;&lt;<pos:position pos:line="6" pos:column="63"/></operator> <literal type="string" pos:line="6" pos:column="58">" ACLs"<pos:position pos:line="6" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="67"/></expr_stmt>
        <while pos:line="7" pos:column="9">while <condition pos:line="7" pos:column="15">(<expr><operator pos:line="7" pos:column="16">!<pos:position pos:line="7" pos:column="17"/></operator><call><name><name pos:line="7" pos:column="17">acls<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">-&gt;<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="23">empty<pos:position pos:line="7" pos:column="28"/></name></name><argument_list pos:line="7" pos:column="28">()<pos:position pos:line="7" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="31"/></condition> <block pos:line="7" pos:column="32">{
            <decl_stmt><decl><type><name pos:line="8" pos:column="13">ACL<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier></type><name pos:line="8" pos:column="18">acl<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><operator pos:line="8" pos:column="24">*<pos:position pos:line="8" pos:column="25"/></operator><call><name><name pos:line="8" pos:column="25">acls<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">begin<pos:position pos:line="8" pos:column="36"/></name></name><argument_list pos:line="8" pos:column="36">()<pos:position pos:line="8" pos:column="38"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="39"/></decl_stmt>
            <comment type="line" pos:line="9" pos:column="13">// We use centralized deletion (this function) so ~ACL should not</comment>
            <comment type="line" pos:line="10" pos:column="13">// delete other ACLs, but we still deregister first to prevent any</comment>
            <comment type="line" pos:line="11" pos:column="13">// accesses to the being-deleted ACL via RegisteredAcls.</comment>
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">assert<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><name><name pos:line="12" pos:column="20">acl<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">registered<pos:position pos:line="12" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt> <comment type="line" pos:line="12" pos:column="38">// make sure we are making progress</comment>
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">aclDeregister<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">acl<pos:position pos:line="13" pos:column="30"/></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="14" pos:column="13">delete<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">acl<pos:position pos:line="14" pos:column="23"/></name></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></while>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

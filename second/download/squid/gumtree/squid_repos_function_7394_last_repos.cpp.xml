<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7394_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Security<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">CertErrors<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">*<pos:position pos:line="1" pos:column="23"/></modifier></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">PeerConnector<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">sslCrtvdCheckForErrors<pos:position pos:line="2" pos:column="48"/></name></name><parameter_list pos:line="2" pos:column="48">(<parameter><decl><type><name><name pos:line="2" pos:column="49">Ssl<pos:position pos:line="2" pos:column="52"/></name><operator pos:line="2" pos:column="52">::<pos:position pos:line="2" pos:column="54"/></operator><name pos:line="2" pos:column="54">CertValidationResponse<pos:position pos:line="2" pos:column="76"/></name></name> <specifier pos:line="2" pos:column="77">const<pos:position pos:line="2" pos:column="82"/></specifier> <modifier pos:line="2" pos:column="83">&amp;<pos:position pos:line="2" pos:column="88"/></modifier></type><name pos:line="2" pos:column="84">resp<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="90">Ssl<pos:position pos:line="2" pos:column="93"/></name><operator pos:line="2" pos:column="93">::<pos:position pos:line="2" pos:column="95"/></operator><name pos:line="2" pos:column="95">ErrorDetail<pos:position pos:line="2" pos:column="106"/></name></name> <modifier pos:line="2" pos:column="107">*<pos:position pos:line="2" pos:column="108"/></modifier><modifier pos:line="2" pos:column="108">&amp;<pos:position pos:line="2" pos:column="113"/></modifier></type> <name pos:line="2" pos:column="110">errDetails<pos:position pos:line="2" pos:column="120"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="121"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ACLFilledChecklist<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">check<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><name pos:line="4" pos:column="33">NULL<pos:position pos:line="4" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<decl><type><name pos:line="5" pos:column="9">acl_access<pos:position pos:line="5" pos:column="19"/></name> <modifier pos:line="5" pos:column="20">*<pos:position pos:line="5" pos:column="21"/></modifier></type><name pos:line="5" pos:column="21">acl<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><name><operator pos:line="5" pos:column="27">::<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">Config<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">.<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="36">ssl_client<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">.<pos:position pos:line="5" pos:column="47"/></operator><name pos:line="5" pos:column="47">cert_error<pos:position pos:line="5" pos:column="57"/></name></name></expr></init></decl>)<pos:position pos:line="5" pos:column="58"/></condition><then pos:line="5" pos:column="58"> <block pos:line="5" pos:column="59">{
        <expr_stmt><expr><name pos:line="6" pos:column="9">check<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <operator pos:line="6" pos:column="17">new<pos:position pos:line="6" pos:column="20"/></operator> <call><name pos:line="6" pos:column="21">ACLFilledChecklist<pos:position pos:line="6" pos:column="39"/></name><argument_list pos:line="6" pos:column="39">(<argument><expr><name pos:line="6" pos:column="40">acl<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><call><name><name pos:line="6" pos:column="45">request<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">.<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="53">getRaw<pos:position pos:line="6" pos:column="59"/></name></name><argument_list pos:line="6" pos:column="59">()<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="63">dash_str<pos:position pos:line="6" pos:column="71"/></name></expr></argument>)<pos:position pos:line="6" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="73"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">check<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">al<pos:position pos:line="7" pos:column="18"/></name></name> <operator pos:line="7" pos:column="19">=<pos:position pos:line="7" pos:column="20"/></operator> <name pos:line="7" pos:column="21">al<pos:position pos:line="7" pos:column="23"/></name></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">Security<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">::<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">CertErrors<pos:position pos:line="10" pos:column="25"/></name></name> <modifier pos:line="10" pos:column="26">*<pos:position pos:line="10" pos:column="27"/></modifier></type><name pos:line="10" pos:column="27">errs<pos:position pos:line="10" pos:column="31"/></name> <init pos:line="10" pos:column="32">= <expr><literal type="null" pos:line="10" pos:column="34">nullptr<pos:position pos:line="10" pos:column="41"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">Security<pos:position pos:line="11" pos:column="13"/></name><operator pos:line="11" pos:column="13">::<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">SessionPointer<pos:position pos:line="11" pos:column="29"/></name></name></type> <name pos:line="11" pos:column="30">session<pos:position pos:line="11" pos:column="37"/></name><argument_list pos:line="11" pos:column="37">(<argument><expr><name><name pos:line="11" pos:column="38">fd_table<pos:position pos:line="11" pos:column="46"/></name><index pos:line="11" pos:column="46">[<expr><call><name pos:line="11" pos:column="47">serverConnection<pos:position pos:line="11" pos:column="63"/></name><argument_list pos:line="11" pos:column="63">()<pos:position pos:line="11" pos:column="65"/></argument_list></call><operator pos:line="11" pos:column="65">-&gt;<pos:position pos:line="11" pos:column="70"/></operator><name pos:line="11" pos:column="67">fd<pos:position pos:line="11" pos:column="69"/></name></expr>]<pos:position pos:line="11" pos:column="70"/></index></name><operator pos:line="11" pos:column="70">.<pos:position pos:line="11" pos:column="71"/></operator><name pos:line="11" pos:column="71">ssl<pos:position pos:line="11" pos:column="74"/></name></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></decl>;<pos:position pos:line="11" pos:column="76"/></decl_stmt>
    <typedef pos:line="12" pos:column="5">typedef <type><name><name pos:line="12" pos:column="13">Ssl<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">::<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">CertValidationResponse<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">::<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="42">RecvdErrors<pos:position pos:line="12" pos:column="53"/></name><operator pos:line="12" pos:column="53">::<pos:position pos:line="12" pos:column="55"/></operator><name pos:line="12" pos:column="55">const_iterator<pos:position pos:line="12" pos:column="69"/></name></name></type> <name pos:line="12" pos:column="70">SVCRECI<pos:position pos:line="12" pos:column="77"/></name>;<pos:position pos:line="12" pos:column="78"/></typedef>
    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><decl><type><name pos:line="13" pos:column="10">SVCRECI<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">i<pos:position pos:line="13" pos:column="19"/></name> <init pos:line="13" pos:column="20">= <expr><call><name><name pos:line="13" pos:column="22">resp<pos:position pos:line="13" pos:column="26"/></name><operator pos:line="13" pos:column="26">.<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="27">errors<pos:position pos:line="13" pos:column="33"/></name><operator pos:line="13" pos:column="33">.<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="34">begin<pos:position pos:line="13" pos:column="39"/></name></name><argument_list pos:line="13" pos:column="39">()<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="42"/></init> <condition><expr><name pos:line="13" pos:column="43">i<pos:position pos:line="13" pos:column="44"/></name> <operator pos:line="13" pos:column="45">!=<pos:position pos:line="13" pos:column="47"/></operator> <call><name><name pos:line="13" pos:column="48">resp<pos:position pos:line="13" pos:column="52"/></name><operator pos:line="13" pos:column="52">.<pos:position pos:line="13" pos:column="53"/></operator><name pos:line="13" pos:column="53">errors<pos:position pos:line="13" pos:column="59"/></name><operator pos:line="13" pos:column="59">.<pos:position pos:line="13" pos:column="60"/></operator><name pos:line="13" pos:column="60">end<pos:position pos:line="13" pos:column="63"/></name></name><argument_list pos:line="13" pos:column="63">()<pos:position pos:line="13" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="66"/></condition> <incr><expr><operator pos:line="13" pos:column="67">++<pos:position pos:line="13" pos:column="69"/></operator><name pos:line="13" pos:column="69">i<pos:position pos:line="13" pos:column="70"/></name></expr></incr>)<pos:position pos:line="13" pos:column="71"/></control> <block pos:line="13" pos:column="72">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">83<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">7<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="23">"Error item: "<pos:position pos:line="14" pos:column="37"/></literal> <operator pos:line="14" pos:column="38">&lt;&lt;<pos:position pos:line="14" pos:column="46"/></operator> <name><name pos:line="14" pos:column="41">i<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">-&gt;<pos:position pos:line="14" pos:column="47"/></operator><name pos:line="14" pos:column="44">error_no<pos:position pos:line="14" pos:column="52"/></name></name> <operator pos:line="14" pos:column="53">&lt;&lt;<pos:position pos:line="14" pos:column="61"/></operator> <literal type="string" pos:line="14" pos:column="56">" "<pos:position pos:line="14" pos:column="59"/></literal> <operator pos:line="14" pos:column="60">&lt;&lt;<pos:position pos:line="14" pos:column="68"/></operator> <name><name pos:line="14" pos:column="63">i<pos:position pos:line="14" pos:column="64"/></name><operator pos:line="14" pos:column="64">-&gt;<pos:position pos:line="14" pos:column="69"/></operator><name pos:line="14" pos:column="66">error_reason<pos:position pos:line="14" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="80"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="16" pos:column="9">assert<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name><name pos:line="16" pos:column="16">i<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">error_no<pos:position pos:line="16" pos:column="27"/></name></name> <operator pos:line="16" pos:column="28">!=<pos:position pos:line="16" pos:column="30"/></operator> <name pos:line="16" pos:column="31">SSL_ERROR_NONE<pos:position pos:line="16" pos:column="45"/></name></expr></argument>)<pos:position pos:line="16" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">!<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">errDetails<pos:position pos:line="18" pos:column="24"/></name></expr>)<pos:position pos:line="18" pos:column="25"/></condition><then pos:line="18" pos:column="25"> <block pos:line="18" pos:column="26">{
            <decl_stmt><decl><type><name pos:line="19" pos:column="13">bool<pos:position pos:line="19" pos:column="17"/></name></type> <name pos:line="19" pos:column="18">allowed<pos:position pos:line="19" pos:column="25"/></name> <init pos:line="19" pos:column="26">= <expr><literal type="boolean" pos:line="19" pos:column="28">false<pos:position pos:line="19" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>
            <if pos:line="20" pos:column="13">if <condition pos:line="20" pos:column="16">(<expr><name pos:line="20" pos:column="17">check<pos:position pos:line="20" pos:column="22"/></name></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23"> <block pos:line="20" pos:column="24">{
                <expr_stmt><expr><name><name pos:line="21" pos:column="17">check<pos:position pos:line="21" pos:column="22"/></name><operator pos:line="21" pos:column="22">-&gt;<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="24">sslErrors<pos:position pos:line="21" pos:column="33"/></name></name> <operator pos:line="21" pos:column="34">=<pos:position pos:line="21" pos:column="35"/></operator> <operator pos:line="21" pos:column="36">new<pos:position pos:line="21" pos:column="39"/></operator> <call><name><name pos:line="21" pos:column="40">Security<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">::<pos:position pos:line="21" pos:column="50"/></operator><name pos:line="21" pos:column="50">CertErrors<pos:position pos:line="21" pos:column="60"/></name></name><argument_list pos:line="21" pos:column="60">(<argument><expr><call><name><name pos:line="21" pos:column="61">Security<pos:position pos:line="21" pos:column="69"/></name><operator pos:line="21" pos:column="69">::<pos:position pos:line="21" pos:column="71"/></operator><name pos:line="21" pos:column="71">CertError<pos:position pos:line="21" pos:column="80"/></name></name><argument_list pos:line="21" pos:column="80">(<argument><expr><name><name pos:line="21" pos:column="81">i<pos:position pos:line="21" pos:column="82"/></name><operator pos:line="21" pos:column="82">-&gt;<pos:position pos:line="21" pos:column="87"/></operator><name pos:line="21" pos:column="84">error_no<pos:position pos:line="21" pos:column="92"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="94">i<pos:position pos:line="21" pos:column="95"/></name><operator pos:line="21" pos:column="95">-&gt;<pos:position pos:line="21" pos:column="100"/></operator><name pos:line="21" pos:column="97">cert<pos:position pos:line="21" pos:column="101"/></name></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="103">i<pos:position pos:line="21" pos:column="104"/></name><operator pos:line="21" pos:column="104">-&gt;<pos:position pos:line="21" pos:column="109"/></operator><name pos:line="21" pos:column="106">error_depth<pos:position pos:line="21" pos:column="117"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="118"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="120"/></expr_stmt>
                <if pos:line="22" pos:column="17">if <condition pos:line="22" pos:column="20">(<expr><call><name><name pos:line="22" pos:column="21">check<pos:position pos:line="22" pos:column="26"/></name><operator pos:line="22" pos:column="26">-&gt;<pos:position pos:line="22" pos:column="31"/></operator><name pos:line="22" pos:column="28">fastCheck<pos:position pos:line="22" pos:column="37"/></name></name><argument_list pos:line="22" pos:column="37">()<pos:position pos:line="22" pos:column="39"/></argument_list></call><operator pos:line="22" pos:column="39">.<pos:position pos:line="22" pos:column="40"/></operator><call><name pos:line="22" pos:column="40">allowed<pos:position pos:line="22" pos:column="47"/></name><argument_list pos:line="22" pos:column="47">()<pos:position pos:line="22" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="50"/></condition><then pos:line="22" pos:column="50">
                    <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="21">allowed<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <literal type="boolean" pos:line="23" pos:column="31">true<pos:position pos:line="23" pos:column="35"/></literal></expr>;<pos:position pos:line="23" pos:column="36"/></expr_stmt></block></then></if>
            }<pos:position pos:line="24" pos:column="14"/></block></then></if>
            <comment type="line" pos:line="25" pos:column="13">// else the Config.ssl_client.cert_error access list is not defined</comment>
            <comment type="line" pos:line="26" pos:column="13">// and the first error will cause the error page</comment>

            <if pos:line="28" pos:column="13">if <condition pos:line="28" pos:column="16">(<expr><name pos:line="28" pos:column="17">allowed<pos:position pos:line="28" pos:column="24"/></name></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25"> <block pos:line="28" pos:column="26">{
                <expr_stmt><expr><call><name pos:line="29" pos:column="17">debugs<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><literal type="number" pos:line="29" pos:column="24">83<pos:position pos:line="29" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="28">3<pos:position pos:line="29" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="31">"bypassing SSL error "<pos:position pos:line="29" pos:column="53"/></literal> <operator pos:line="29" pos:column="54">&lt;&lt;<pos:position pos:line="29" pos:column="62"/></operator> <name><name pos:line="29" pos:column="57">i<pos:position pos:line="29" pos:column="58"/></name><operator pos:line="29" pos:column="58">-&gt;<pos:position pos:line="29" pos:column="63"/></operator><name pos:line="29" pos:column="60">error_no<pos:position pos:line="29" pos:column="68"/></name></name> <operator pos:line="29" pos:column="69">&lt;&lt;<pos:position pos:line="29" pos:column="77"/></operator> <literal type="string" pos:line="29" pos:column="72">" in "<pos:position pos:line="29" pos:column="78"/></literal> <operator pos:line="29" pos:column="79">&lt;&lt;<pos:position pos:line="29" pos:column="87"/></operator> <literal type="string" pos:line="29" pos:column="82">"buffer"<pos:position pos:line="29" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="92"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then> <else pos:line="30" pos:column="15">else <block pos:line="30" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="31" pos:column="17">debugs<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">(<argument><expr><literal type="number" pos:line="31" pos:column="24">83<pos:position pos:line="31" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="28">5<pos:position pos:line="31" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="31">"confirming SSL error "<pos:position pos:line="31" pos:column="54"/></literal> <operator pos:line="31" pos:column="55">&lt;&lt;<pos:position pos:line="31" pos:column="63"/></operator> <name><name pos:line="31" pos:column="58">i<pos:position pos:line="31" pos:column="59"/></name><operator pos:line="31" pos:column="59">-&gt;<pos:position pos:line="31" pos:column="64"/></operator><name pos:line="31" pos:column="61">error_no<pos:position pos:line="31" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="71"/></expr_stmt>
                <decl_stmt><decl><type><name pos:line="32" pos:column="17">X509<pos:position pos:line="32" pos:column="21"/></name> <modifier pos:line="32" pos:column="22">*<pos:position pos:line="32" pos:column="23"/></modifier></type><name pos:line="32" pos:column="23">brokenCert<pos:position pos:line="32" pos:column="33"/></name> <init pos:line="32" pos:column="34">= <expr><call><name><name pos:line="32" pos:column="36">i<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">-&gt;<pos:position pos:line="32" pos:column="42"/></operator><name pos:line="32" pos:column="39">cert<pos:position pos:line="32" pos:column="43"/></name><operator pos:line="32" pos:column="43">.<pos:position pos:line="32" pos:column="44"/></operator><name pos:line="32" pos:column="44">get<pos:position pos:line="32" pos:column="47"/></name></name><argument_list pos:line="32" pos:column="47">()<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="32" pos:column="50"/></decl_stmt>
                <decl_stmt><decl><type><name><name pos:line="33" pos:column="17">Security<pos:position pos:line="33" pos:column="25"/></name><operator pos:line="33" pos:column="25">::<pos:position pos:line="33" pos:column="27"/></operator><name pos:line="33" pos:column="27">CertPointer<pos:position pos:line="33" pos:column="38"/></name></name></type> <name pos:line="33" pos:column="39">peerCert<pos:position pos:line="33" pos:column="47"/></name><argument_list pos:line="33" pos:column="47">(<argument><expr><call><name pos:line="33" pos:column="48">SSL_get_peer_certificate<pos:position pos:line="33" pos:column="72"/></name><argument_list pos:line="33" pos:column="72">(<argument><expr><call><name><name pos:line="33" pos:column="73">session<pos:position pos:line="33" pos:column="80"/></name><operator pos:line="33" pos:column="80">.<pos:position pos:line="33" pos:column="81"/></operator><name pos:line="33" pos:column="81">get<pos:position pos:line="33" pos:column="84"/></name></name><argument_list pos:line="33" pos:column="84">()<pos:position pos:line="33" pos:column="86"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="88"/></argument_list></decl>;<pos:position pos:line="33" pos:column="89"/></decl_stmt>
                <decl_stmt><decl><type><specifier pos:line="34" pos:column="17">const<pos:position pos:line="34" pos:column="22"/></specifier> <name pos:line="34" pos:column="23">char<pos:position pos:line="34" pos:column="27"/></name> <modifier pos:line="34" pos:column="28">*<pos:position pos:line="34" pos:column="29"/></modifier></type><name pos:line="34" pos:column="29">aReason<pos:position pos:line="34" pos:column="36"/></name> <init pos:line="34" pos:column="37">= <expr><ternary><condition><expr><call><name><name pos:line="34" pos:column="39">i<pos:position pos:line="34" pos:column="40"/></name><operator pos:line="34" pos:column="40">-&gt;<pos:position pos:line="34" pos:column="45"/></operator><name pos:line="34" pos:column="42">error_reason<pos:position pos:line="34" pos:column="54"/></name><operator pos:line="34" pos:column="54">.<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="55">empty<pos:position pos:line="34" pos:column="60"/></name></name><argument_list pos:line="34" pos:column="60">()<pos:position pos:line="34" pos:column="62"/></argument_list></call></expr> ?<pos:position pos:line="34" pos:column="64"/></condition><then pos:line="34" pos:column="64"> <expr><name pos:line="34" pos:column="65">NULL<pos:position pos:line="34" pos:column="69"/></name></expr> <pos:position pos:line="34" pos:column="70"/></then><else pos:line="34" pos:column="70">: <expr><call><name><name pos:line="34" pos:column="72">i<pos:position pos:line="34" pos:column="73"/></name><operator pos:line="34" pos:column="73">-&gt;<pos:position pos:line="34" pos:column="78"/></operator><name pos:line="34" pos:column="75">error_reason<pos:position pos:line="34" pos:column="87"/></name><operator pos:line="34" pos:column="87">.<pos:position pos:line="34" pos:column="88"/></operator><name pos:line="34" pos:column="88">c_str<pos:position pos:line="34" pos:column="93"/></name></name><argument_list pos:line="34" pos:column="93">()<pos:position pos:line="34" pos:column="95"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="34" pos:column="96"/></decl_stmt>
                <expr_stmt><expr><name pos:line="35" pos:column="17">errDetails<pos:position pos:line="35" pos:column="27"/></name> <operator pos:line="35" pos:column="28">=<pos:position pos:line="35" pos:column="29"/></operator> <operator pos:line="35" pos:column="30">new<pos:position pos:line="35" pos:column="33"/></operator> <call><name><name pos:line="35" pos:column="34">Ssl<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">::<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">ErrorDetail<pos:position pos:line="35" pos:column="50"/></name></name><argument_list pos:line="35" pos:column="50">(<argument><expr><name><name pos:line="35" pos:column="51">i<pos:position pos:line="35" pos:column="52"/></name><operator pos:line="35" pos:column="52">-&gt;<pos:position pos:line="35" pos:column="57"/></operator><name pos:line="35" pos:column="54">error_no<pos:position pos:line="35" pos:column="62"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="35" pos:column="64">peerCert<pos:position pos:line="35" pos:column="72"/></name><operator pos:line="35" pos:column="72">.<pos:position pos:line="35" pos:column="73"/></operator><name pos:line="35" pos:column="73">get<pos:position pos:line="35" pos:column="76"/></name></name><argument_list pos:line="35" pos:column="76">()<pos:position pos:line="35" pos:column="78"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="35" pos:column="80">brokenCert<pos:position pos:line="35" pos:column="90"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="92">aReason<pos:position pos:line="35" pos:column="99"/></name></expr></argument>)<pos:position pos:line="35" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="101"/></expr_stmt>
            }<pos:position pos:line="36" pos:column="14"/></block></else></if>
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><name pos:line="37" pos:column="17">check<pos:position pos:line="37" pos:column="22"/></name></expr>)<pos:position pos:line="37" pos:column="23"/></condition><then pos:line="37" pos:column="23"> <block pos:line="37" pos:column="24">{
                <expr_stmt><expr><operator pos:line="38" pos:column="17">delete<pos:position pos:line="38" pos:column="23"/></operator> <name><name pos:line="38" pos:column="24">check<pos:position pos:line="38" pos:column="29"/></name><operator pos:line="38" pos:column="29">-&gt;<pos:position pos:line="38" pos:column="34"/></operator><name pos:line="38" pos:column="31">sslErrors<pos:position pos:line="38" pos:column="40"/></name></name></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="39" pos:column="17">check<pos:position pos:line="39" pos:column="22"/></name><operator pos:line="39" pos:column="22">-&gt;<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="24">sslErrors<pos:position pos:line="39" pos:column="33"/></name></name> <operator pos:line="39" pos:column="34">=<pos:position pos:line="39" pos:column="35"/></operator> <name pos:line="39" pos:column="36">NULL<pos:position pos:line="39" pos:column="40"/></name></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="40" pos:column="14"/></block></then></if>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>

        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><operator pos:line="43" pos:column="13">!<pos:position pos:line="43" pos:column="14"/></operator><name pos:line="43" pos:column="14">errs<pos:position pos:line="43" pos:column="18"/></name></expr>)<pos:position pos:line="43" pos:column="19"/></condition><then pos:line="43" pos:column="19">
            <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="13">errs<pos:position pos:line="44" pos:column="17"/></name> <operator pos:line="44" pos:column="18">=<pos:position pos:line="44" pos:column="19"/></operator> <operator pos:line="44" pos:column="20">new<pos:position pos:line="44" pos:column="23"/></operator> <call><name><name pos:line="44" pos:column="24">Security<pos:position pos:line="44" pos:column="32"/></name><operator pos:line="44" pos:column="32">::<pos:position pos:line="44" pos:column="34"/></operator><name pos:line="44" pos:column="34">CertErrors<pos:position pos:line="44" pos:column="44"/></name></name><argument_list pos:line="44" pos:column="44">(<argument><expr><call><name><name pos:line="44" pos:column="45">Security<pos:position pos:line="44" pos:column="53"/></name><operator pos:line="44" pos:column="53">::<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="55">CertError<pos:position pos:line="44" pos:column="64"/></name></name><argument_list pos:line="44" pos:column="64">(<argument><expr><name><name pos:line="44" pos:column="65">i<pos:position pos:line="44" pos:column="66"/></name><operator pos:line="44" pos:column="66">-&gt;<pos:position pos:line="44" pos:column="71"/></operator><name pos:line="44" pos:column="68">error_no<pos:position pos:line="44" pos:column="76"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="78">i<pos:position pos:line="44" pos:column="79"/></name><operator pos:line="44" pos:column="79">-&gt;<pos:position pos:line="44" pos:column="84"/></operator><name pos:line="44" pos:column="81">cert<pos:position pos:line="44" pos:column="85"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="87">i<pos:position pos:line="44" pos:column="88"/></name><operator pos:line="44" pos:column="88">-&gt;<pos:position pos:line="44" pos:column="93"/></operator><name pos:line="44" pos:column="90">error_depth<pos:position pos:line="44" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="102"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="104"/></expr_stmt></block></then>
        <else pos:line="45" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="46" pos:column="13">errs<pos:position pos:line="46" pos:column="17"/></name><operator pos:line="46" pos:column="17">-&gt;<pos:position pos:line="46" pos:column="22"/></operator><name pos:line="46" pos:column="19">push_back_unique<pos:position pos:line="46" pos:column="35"/></name></name><argument_list pos:line="46" pos:column="35">(<argument><expr><call><name><name pos:line="46" pos:column="36">Security<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">::<pos:position pos:line="46" pos:column="46"/></operator><name pos:line="46" pos:column="46">CertError<pos:position pos:line="46" pos:column="55"/></name></name><argument_list pos:line="46" pos:column="55">(<argument><expr><name><name pos:line="46" pos:column="56">i<pos:position pos:line="46" pos:column="57"/></name><operator pos:line="46" pos:column="57">-&gt;<pos:position pos:line="46" pos:column="62"/></operator><name pos:line="46" pos:column="59">error_no<pos:position pos:line="46" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="69">i<pos:position pos:line="46" pos:column="70"/></name><operator pos:line="46" pos:column="70">-&gt;<pos:position pos:line="46" pos:column="75"/></operator><name pos:line="46" pos:column="72">cert<pos:position pos:line="46" pos:column="76"/></name></name></expr></argument>, <argument><expr><name><name pos:line="46" pos:column="78">i<pos:position pos:line="46" pos:column="79"/></name><operator pos:line="46" pos:column="79">-&gt;<pos:position pos:line="46" pos:column="84"/></operator><name pos:line="46" pos:column="81">error_depth<pos:position pos:line="46" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="95"/></expr_stmt></block></else></if>
    }<pos:position pos:line="47" pos:column="6"/></block></for>
    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><name pos:line="48" pos:column="9">check<pos:position pos:line="48" pos:column="14"/></name></expr>)<pos:position pos:line="48" pos:column="15"/></condition><then pos:line="48" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="49" pos:column="9">delete<pos:position pos:line="49" pos:column="15"/></operator> <name pos:line="49" pos:column="16">check<pos:position pos:line="49" pos:column="21"/></name></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt></block></then></if>

    <return pos:line="51" pos:column="5">return <expr><name pos:line="51" pos:column="12">errs<pos:position pos:line="51" pos:column="16"/></name></expr>;<pos:position pos:line="51" pos:column="17"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4524_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">PeerConnector<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">sslCrtvdHandleReply<pos:position pos:line="2" pos:column="40"/></name></name><parameter_list pos:line="2" pos:column="40">(<parameter><decl><type><name><name pos:line="2" pos:column="41">Ssl<pos:position pos:line="2" pos:column="44"/></name><operator pos:line="2" pos:column="44">::<pos:position pos:line="2" pos:column="46"/></operator><name pos:line="2" pos:column="46">CertValidationResponse<pos:position pos:line="2" pos:column="68"/></name><operator pos:line="2" pos:column="68">::<pos:position pos:line="2" pos:column="70"/></operator><name pos:line="2" pos:column="70">Pointer<pos:position pos:line="2" pos:column="77"/></name></name></type> <name pos:line="2" pos:column="78">validationResponse<pos:position pos:line="2" pos:column="96"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="97"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">validationResponse<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">!=<pos:position pos:line="4" pos:column="31"/></operator> <name pos:line="4" pos:column="32">NULL<pos:position pos:line="4" pos:column="36"/></name></expr></argument>)<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="38"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">Ssl<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">::<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">ErrorDetail<pos:position pos:line="6" pos:column="21"/></name></name> <modifier pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></modifier></type><name pos:line="6" pos:column="23">errDetails<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name pos:line="6" pos:column="36">NULL<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">bool<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">validatorFailed<pos:position pos:line="7" pos:column="25"/></name> <init pos:line="7" pos:column="26">= <expr><literal type="boolean" pos:line="7" pos:column="28">false<pos:position pos:line="7" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="34"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name><name pos:line="8" pos:column="10">Comm<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">::<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">IsConnOpen<pos:position pos:line="8" pos:column="26"/></name></name><argument_list pos:line="8" pos:column="26">(<argument><expr><call><name pos:line="8" pos:column="27">serverConnection<pos:position pos:line="8" pos:column="43"/></name><argument_list pos:line="8" pos:column="43">()<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47"> <block pos:line="8" pos:column="48">{
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">83<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="12" pos:column="15">5<pos:position pos:line="12" pos:column="16"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="12" pos:column="18">request<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">GetHost<pos:position pos:line="12" pos:column="34"/></name></name><argument_list pos:line="12" pos:column="34">()<pos:position pos:line="12" pos:column="36"/></argument_list></call> <operator pos:line="12" pos:column="37">&lt;&lt;<pos:position pos:line="12" pos:column="45"/></operator> <literal type="string" pos:line="12" pos:column="40">" cert validation result: "<pos:position pos:line="12" pos:column="67"/></literal> <operator pos:line="12" pos:column="68">&lt;&lt;<pos:position pos:line="12" pos:column="76"/></operator> <name><name pos:line="12" pos:column="71">validationResponse<pos:position pos:line="12" pos:column="89"/></name><operator pos:line="12" pos:column="89">-&gt;<pos:position pos:line="12" pos:column="94"/></operator><name pos:line="12" pos:column="91">resultCode<pos:position pos:line="12" pos:column="101"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="103"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name><name pos:line="14" pos:column="9">validationResponse<pos:position pos:line="14" pos:column="27"/></name><operator pos:line="14" pos:column="27">-&gt;<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="29">resultCode<pos:position pos:line="14" pos:column="39"/></name></name> <operator pos:line="14" pos:column="40">==<pos:position pos:line="14" pos:column="42"/></operator> <name><operator pos:line="14" pos:column="43">::<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="45">Helper<pos:position pos:line="14" pos:column="51"/></name><operator pos:line="14" pos:column="51">::<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="53">Error<pos:position pos:line="14" pos:column="58"/></name></name></expr>)<pos:position pos:line="14" pos:column="59"/></condition><then pos:line="14" pos:column="59"> <block pos:line="14" pos:column="60">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<decl><type><name><name pos:line="15" pos:column="13">Ssl<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">::<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">CertErrors<pos:position pos:line="15" pos:column="28"/></name></name> <modifier pos:line="15" pos:column="29">*<pos:position pos:line="15" pos:column="30"/></modifier></type><name pos:line="15" pos:column="30">errs<pos:position pos:line="15" pos:column="34"/></name> <init pos:line="15" pos:column="35">= <expr><call><name pos:line="15" pos:column="37">sslCrtvdCheckForErrors<pos:position pos:line="15" pos:column="59"/></name><argument_list pos:line="15" pos:column="59">(<argument><expr><operator pos:line="15" pos:column="60">*<pos:position pos:line="15" pos:column="61"/></operator><name pos:line="15" pos:column="61">validationResponse<pos:position pos:line="15" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="81">errDetails<pos:position pos:line="15" pos:column="91"/></name></expr></argument>)<pos:position pos:line="15" pos:column="92"/></argument_list></call></expr></init></decl>)<pos:position pos:line="15" pos:column="93"/></condition><then pos:line="15" pos:column="93"> <block pos:line="15" pos:column="94">{
            <decl_stmt><decl><type><name pos:line="16" pos:column="13">SSL<pos:position pos:line="16" pos:column="16"/></name> <modifier pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></modifier></type><name pos:line="16" pos:column="18">ssl<pos:position pos:line="16" pos:column="21"/></name> <init pos:line="16" pos:column="22">= <expr><name><name pos:line="16" pos:column="24">fd_table<pos:position pos:line="16" pos:column="32"/></name><index pos:line="16" pos:column="32">[<expr><call><name pos:line="16" pos:column="33">serverConnection<pos:position pos:line="16" pos:column="49"/></name><argument_list pos:line="16" pos:column="49">()<pos:position pos:line="16" pos:column="51"/></argument_list></call><operator pos:line="16" pos:column="51">-&gt;<pos:position pos:line="16" pos:column="56"/></operator><name pos:line="16" pos:column="53">fd<pos:position pos:line="16" pos:column="55"/></name></expr>]<pos:position pos:line="16" pos:column="56"/></index></name><operator pos:line="16" pos:column="56">.<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="57">ssl<pos:position pos:line="16" pos:column="60"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="61"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="17" pos:column="13">Ssl<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">::<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">CertErrors<pos:position pos:line="17" pos:column="28"/></name></name> <modifier pos:line="17" pos:column="29">*<pos:position pos:line="17" pos:column="30"/></modifier></type><name pos:line="17" pos:column="30">oldErrs<pos:position pos:line="17" pos:column="37"/></name> <init pos:line="17" pos:column="38">= <expr><cast type="static" pos:line="17" pos:column="40">static_cast<argument_list type="generic" pos:line="17" pos:column="51">&lt;<argument><expr><name><name pos:line="17" pos:column="52">Ssl<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">::<pos:position pos:line="17" pos:column="57"/></operator><name pos:line="17" pos:column="57">CertErrors<pos:position pos:line="17" pos:column="67"/></name></name><operator pos:line="17" pos:column="67">*<pos:position pos:line="17" pos:column="68"/></operator></expr></argument>&gt;<pos:position pos:line="17" pos:column="72"/></argument_list><argument_list pos:line="17" pos:column="69">(<argument><expr><call><name pos:line="17" pos:column="70">SSL_get_ex_data<pos:position pos:line="17" pos:column="85"/></name><argument_list pos:line="17" pos:column="85">(<argument><expr><name pos:line="17" pos:column="86">ssl<pos:position pos:line="17" pos:column="89"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="91">ssl_ex_index_ssl_errors<pos:position pos:line="17" pos:column="114"/></name></expr></argument>)<pos:position pos:line="17" pos:column="115"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="116"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="17" pos:column="117"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="18" pos:column="13">SSL_set_ex_data<pos:position pos:line="18" pos:column="28"/></name><argument_list pos:line="18" pos:column="28">(<argument><expr><name pos:line="18" pos:column="29">ssl<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="34">ssl_ex_index_ssl_errors<pos:position pos:line="18" pos:column="57"/></name></expr></argument>,  <argument><expr><operator pos:line="18" pos:column="60">(<pos:position pos:line="18" pos:column="61"/></operator><name pos:line="18" pos:column="61">void<pos:position pos:line="18" pos:column="65"/></name> <operator pos:line="18" pos:column="66">*<pos:position pos:line="18" pos:column="67"/></operator><operator pos:line="18" pos:column="67">)<pos:position pos:line="18" pos:column="68"/></operator><name pos:line="18" pos:column="68">errs<pos:position pos:line="18" pos:column="72"/></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="19" pos:column="13">delete<pos:position pos:line="19" pos:column="19"/></operator> <name pos:line="19" pos:column="20">oldErrs<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then> <elseif pos:line="21" pos:column="7">else <if pos:line="21" pos:column="12">if <condition pos:line="21" pos:column="15">(<expr><name><name pos:line="21" pos:column="16">validationResponse<pos:position pos:line="21" pos:column="34"/></name><operator pos:line="21" pos:column="34">-&gt;<pos:position pos:line="21" pos:column="39"/></operator><name pos:line="21" pos:column="36">resultCode<pos:position pos:line="21" pos:column="46"/></name></name> <operator pos:line="21" pos:column="47">!=<pos:position pos:line="21" pos:column="49"/></operator> <name><operator pos:line="21" pos:column="50">::<pos:position pos:line="21" pos:column="52"/></operator><name pos:line="21" pos:column="52">Helper<pos:position pos:line="21" pos:column="58"/></name><operator pos:line="21" pos:column="58">::<pos:position pos:line="21" pos:column="60"/></operator><name pos:line="21" pos:column="60">Okay<pos:position pos:line="21" pos:column="64"/></name></name></expr>)<pos:position pos:line="21" pos:column="65"/></condition><then pos:line="21" pos:column="65">
        <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="9">validatorFailed<pos:position pos:line="22" pos:column="24"/></name> <operator pos:line="22" pos:column="25">=<pos:position pos:line="22" pos:column="26"/></operator> <literal type="boolean" pos:line="22" pos:column="27">true<pos:position pos:line="22" pos:column="31"/></literal></expr>;<pos:position pos:line="22" pos:column="32"/></expr_stmt></block></then></if></elseif></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">errDetails<pos:position pos:line="24" pos:column="20"/></name> <operator pos:line="24" pos:column="21">&amp;&amp;<pos:position pos:line="24" pos:column="31"/></operator> <operator pos:line="24" pos:column="24">!<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">validatorFailed<pos:position pos:line="24" pos:column="40"/></name></expr>)<pos:position pos:line="24" pos:column="41"/></condition><then pos:line="24" pos:column="41"> <block pos:line="24" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">serverCertificateVerified<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">()<pos:position pos:line="25" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="37"/></expr_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">splice<pos:position pos:line="26" pos:column="19"/></name></expr>)<pos:position pos:line="26" pos:column="20"/></condition><then pos:line="26" pos:column="20">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="13">switchToTunnel<pos:position pos:line="27" pos:column="27"/></name><argument_list pos:line="27" pos:column="27">(<argument><expr><call><name><name pos:line="27" pos:column="28">request<pos:position pos:line="27" pos:column="35"/></name><operator pos:line="27" pos:column="35">.<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="36">getRaw<pos:position pos:line="27" pos:column="42"/></name></name><argument_list pos:line="27" pos:column="42">()<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="46">clientConn<pos:position pos:line="27" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="58">serverConn<pos:position pos:line="27" pos:column="68"/></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt></block></then>
        <else pos:line="28" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="29" pos:column="13">callBack<pos:position pos:line="29" pos:column="21"/></name><argument_list pos:line="29" pos:column="21">()<pos:position pos:line="29" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="24"/></expr_stmt></block></else></if>
        <return pos:line="30" pos:column="9">return;<pos:position pos:line="30" pos:column="16"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="33" pos:column="5">ErrorState<pos:position pos:line="33" pos:column="15"/></name> <modifier pos:line="33" pos:column="16">*<pos:position pos:line="33" pos:column="17"/></modifier></type><name pos:line="33" pos:column="17">anErr<pos:position pos:line="33" pos:column="22"/></name> <init pos:line="33" pos:column="23">= <expr><name pos:line="33" pos:column="25">NULL<pos:position pos:line="33" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="33" pos:column="30"/></decl_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">validatorFailed<pos:position pos:line="34" pos:column="24"/></name></expr>)<pos:position pos:line="34" pos:column="25"/></condition><then pos:line="34" pos:column="25"> <block pos:line="34" pos:column="26">{
        <expr_stmt><expr><name pos:line="35" pos:column="9">anErr<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <operator pos:line="35" pos:column="17">new<pos:position pos:line="35" pos:column="20"/></operator> <call><name pos:line="35" pos:column="21">ErrorState<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">(<argument><expr><name pos:line="35" pos:column="32">ERR_GATEWAY_FAILURE<pos:position pos:line="35" pos:column="51"/></name></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="53">Http<pos:position pos:line="35" pos:column="57"/></name><operator pos:line="35" pos:column="57">::<pos:position pos:line="35" pos:column="59"/></operator><name pos:line="35" pos:column="59">scInternalServerError<pos:position pos:line="35" pos:column="80"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="35" pos:column="82">request<pos:position pos:line="35" pos:column="89"/></name><operator pos:line="35" pos:column="89">.<pos:position pos:line="35" pos:column="90"/></operator><name pos:line="35" pos:column="90">getRaw<pos:position pos:line="35" pos:column="96"/></name></name><argument_list pos:line="35" pos:column="96">()<pos:position pos:line="35" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="100"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then>  <else pos:line="36" pos:column="8">else <block pos:line="36" pos:column="13">{
        <expr_stmt><expr><name pos:line="37" pos:column="9">anErr<pos:position pos:line="37" pos:column="14"/></name> <operator pos:line="37" pos:column="15">=<pos:position pos:line="37" pos:column="16"/></operator>  <operator pos:line="37" pos:column="18">new<pos:position pos:line="37" pos:column="21"/></operator> <call><name pos:line="37" pos:column="22">ErrorState<pos:position pos:line="37" pos:column="32"/></name><argument_list pos:line="37" pos:column="32">(<argument><expr><name pos:line="37" pos:column="33">ERR_SECURE_CONNECT_FAIL<pos:position pos:line="37" pos:column="56"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="58">Http<pos:position pos:line="37" pos:column="62"/></name><operator pos:line="37" pos:column="62">::<pos:position pos:line="37" pos:column="64"/></operator><name pos:line="37" pos:column="64">scServiceUnavailable<pos:position pos:line="37" pos:column="84"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="37" pos:column="86">request<pos:position pos:line="37" pos:column="93"/></name><operator pos:line="37" pos:column="93">.<pos:position pos:line="37" pos:column="94"/></operator><name pos:line="37" pos:column="94">getRaw<pos:position pos:line="37" pos:column="100"/></name></name><argument_list pos:line="37" pos:column="100">()<pos:position pos:line="37" pos:column="102"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="104"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">anErr<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">detail<pos:position pos:line="38" pos:column="22"/></name></name> <operator pos:line="38" pos:column="23">=<pos:position pos:line="38" pos:column="24"/></operator> <name pos:line="38" pos:column="25">errDetails<pos:position pos:line="38" pos:column="35"/></name></expr>;<pos:position pos:line="38" pos:column="36"/></expr_stmt>
        <comment type="block" pos:line="39" pos:column="9">/*anErr-&gt;xerrno= Should preserved*/</comment>
    }<pos:position pos:line="40" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">bail<pos:position pos:line="42" pos:column="9"/></name><argument_list pos:line="42" pos:column="9">(<argument><expr><name pos:line="42" pos:column="10">anErr<pos:position pos:line="42" pos:column="15"/></name></expr></argument>)<pos:position pos:line="42" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="17"/></expr_stmt>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><call><name pos:line="43" pos:column="9">serverConnection<pos:position pos:line="43" pos:column="25"/></name><argument_list pos:line="43" pos:column="25">()<pos:position pos:line="43" pos:column="27"/></argument_list></call><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><call><name pos:line="43" pos:column="29">getPeer<pos:position pos:line="43" pos:column="36"/></name><argument_list pos:line="43" pos:column="36">()<pos:position pos:line="43" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="39"/></condition><then pos:line="43" pos:column="39"> <block pos:line="43" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">peerConnectFailed<pos:position pos:line="44" pos:column="26"/></name><argument_list pos:line="44" pos:column="26">(<argument><expr><call><name pos:line="44" pos:column="27">serverConnection<pos:position pos:line="44" pos:column="43"/></name><argument_list pos:line="44" pos:column="43">()<pos:position pos:line="44" pos:column="45"/></argument_list></call><operator pos:line="44" pos:column="45">-&gt;<pos:position pos:line="44" pos:column="50"/></operator><call><name pos:line="44" pos:column="47">getPeer<pos:position pos:line="44" pos:column="54"/></name><argument_list pos:line="44" pos:column="54">()<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="44" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="46" pos:column="5">serverConn<pos:position pos:line="46" pos:column="15"/></name><operator pos:line="46" pos:column="15">-&gt;<pos:position pos:line="46" pos:column="20"/></operator><name pos:line="46" pos:column="17">close<pos:position pos:line="46" pos:column="22"/></name></name><argument_list pos:line="46" pos:column="22">()<pos:position pos:line="46" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="25"/></expr_stmt>
    <return pos:line="47" pos:column="5">return;<pos:position pos:line="47" pos:column="12"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

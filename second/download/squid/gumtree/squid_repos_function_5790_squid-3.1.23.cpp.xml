<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5790_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">MemImplementingAllocator<pos:position pos:line="1" pos:column="25"/></name> <modifier pos:line="1" pos:column="26">*<pos:position pos:line="1" pos:column="27"/></modifier></type>
<name><name pos:line="2" pos:column="1">MemPools<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">create<pos:position pos:line="2" pos:column="17"/></name></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">label<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">size_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">obj_size<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><operator pos:line="4" pos:column="5">++<pos:position pos:line="4" pos:column="7"/></operator><name pos:line="4" pos:column="7">poolCount<pos:position pos:line="4" pos:column="16"/></name></expr>;<pos:position pos:line="4" pos:column="17"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">defaultIsChunked<pos:position pos:line="5" pos:column="25"/></name></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
        <block type="pseudo"><return pos:line="6" pos:column="9">return <expr><operator pos:line="6" pos:column="16">new<pos:position pos:line="6" pos:column="19"/></operator> <call><name pos:line="6" pos:column="20">MemPoolChunked<pos:position pos:line="6" pos:column="34"/></name> <argument_list pos:line="6" pos:column="35">(<argument><expr><name pos:line="6" pos:column="36">label<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="43">obj_size<pos:position pos:line="6" pos:column="51"/></name></expr></argument>)<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="53"/></return></block></then>
    <else pos:line="7" pos:column="5">else
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><operator pos:line="8" pos:column="16">new<pos:position pos:line="8" pos:column="19"/></operator> <call><name pos:line="8" pos:column="20">MemPoolMalloc<pos:position pos:line="8" pos:column="33"/></name> <argument_list pos:line="8" pos:column="34">(<argument><expr><name pos:line="8" pos:column="35">label<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">obj_size<pos:position pos:line="8" pos:column="50"/></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></return></block></else></if>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

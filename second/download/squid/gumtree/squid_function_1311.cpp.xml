<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1311.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">ClientHttpRequest<pos:position pos:line="1" pos:column="18"/></name> <modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">buildFakeRequest<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name><name pos:line="2" pos:column="33">Http<pos:position pos:line="2" pos:column="37"/></name><operator pos:line="2" pos:column="37">::<pos:position pos:line="2" pos:column="39"/></operator><name pos:line="2" pos:column="39">MethodType<pos:position pos:line="2" pos:column="49"/></name></name> <specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier></type> <name pos:line="2" pos:column="56">method<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">SBuf<pos:position pos:line="2" pos:column="68"/></name> <modifier pos:line="2" pos:column="69">&amp;<pos:position pos:line="2" pos:column="74"/></modifier></type><name pos:line="2" pos:column="70">useHost<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="79">unsigned<pos:position pos:line="2" pos:column="87"/></name> <name pos:line="2" pos:column="88">short<pos:position pos:line="2" pos:column="93"/></name></type> <name pos:line="2" pos:column="94">usePort<pos:position pos:line="2" pos:column="101"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="103">const<pos:position pos:line="2" pos:column="108"/></specifier> <name pos:line="2" pos:column="109">SBuf<pos:position pos:line="2" pos:column="113"/></name> <modifier pos:line="2" pos:column="114">&amp;<pos:position pos:line="2" pos:column="119"/></modifier></type><name pos:line="2" pos:column="115">payload<pos:position pos:line="2" pos:column="122"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="123"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ClientHttpRequest<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">http<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><operator pos:line="4" pos:column="31">new<pos:position pos:line="4" pos:column="34"/></operator> <call><name pos:line="4" pos:column="35">ClientHttpRequest<pos:position pos:line="4" pos:column="52"/></name><argument_list pos:line="4" pos:column="52">(<argument><expr><name pos:line="4" pos:column="53">this<pos:position pos:line="4" pos:column="57"/></name></expr></argument>)<pos:position pos:line="4" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Http<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">::<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">Stream<pos:position pos:line="5" pos:column="17"/></name></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">stream<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><operator pos:line="5" pos:column="28">new<pos:position pos:line="5" pos:column="31"/></operator> <call><name><name pos:line="5" pos:column="32">Http<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">::<pos:position pos:line="5" pos:column="38"/></operator><name pos:line="5" pos:column="38">Stream<pos:position pos:line="5" pos:column="44"/></name></name><argument_list pos:line="5" pos:column="44">(<argument><expr><name pos:line="5" pos:column="45">clientConnection<pos:position pos:line="5" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="63">http<pos:position pos:line="5" pos:column="67"/></name></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="69"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">StoreIOBuffer<pos:position pos:line="7" pos:column="18"/></name></type> <name pos:line="7" pos:column="19">tempBuffer<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">tempBuffer<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">.<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">data<pos:position pos:line="8" pos:column="20"/></name></name> <operator pos:line="8" pos:column="21">=<pos:position pos:line="8" pos:column="22"/></operator> <name><name pos:line="8" pos:column="23">stream<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">reqbuf<pos:position pos:line="8" pos:column="37"/></name></name></expr>;<pos:position pos:line="8" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">tempBuffer<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">length<pos:position pos:line="9" pos:column="22"/></name></name> <operator pos:line="9" pos:column="23">=<pos:position pos:line="9" pos:column="24"/></operator> <name pos:line="9" pos:column="25">HTTP_REQBUF_SZ<pos:position pos:line="9" pos:column="39"/></name></expr>;<pos:position pos:line="9" pos:column="40"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">ClientStreamData<pos:position pos:line="11" pos:column="21"/></name></type> <name pos:line="11" pos:column="22">newServer<pos:position pos:line="11" pos:column="31"/></name> <init pos:line="11" pos:column="32">= <expr><operator pos:line="11" pos:column="34">new<pos:position pos:line="11" pos:column="37"/></operator> <call><name pos:line="11" pos:column="38">clientReplyContext<pos:position pos:line="11" pos:column="56"/></name><argument_list pos:line="11" pos:column="56">(<argument><expr><name pos:line="11" pos:column="57">http<pos:position pos:line="11" pos:column="61"/></name></expr></argument>)<pos:position pos:line="11" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">ClientStreamData<pos:position pos:line="12" pos:column="21"/></name></type> <name pos:line="12" pos:column="22">newClient<pos:position pos:line="12" pos:column="31"/></name> <init pos:line="12" pos:column="32">= <expr><name pos:line="12" pos:column="34">stream<pos:position pos:line="12" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="41"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">clientStreamInit<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><operator pos:line="13" pos:column="22">&amp;<pos:position pos:line="13" pos:column="27"/></operator><name><name pos:line="13" pos:column="23">http<pos:position pos:line="13" pos:column="27"/></name><operator pos:line="13" pos:column="27">-&gt;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="29">client_stream<pos:position pos:line="13" pos:column="42"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="44">clientGetMoreData<pos:position pos:line="13" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="63">clientReplyDetach<pos:position pos:line="13" pos:column="80"/></name></expr></argument>,
                     <argument><expr><name pos:line="14" pos:column="22">clientReplyStatus<pos:position pos:line="14" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="41">newServer<pos:position pos:line="14" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="52">clientSocketRecipient<pos:position pos:line="14" pos:column="73"/></name></expr></argument>,
                     <argument><expr><name pos:line="15" pos:column="22">clientSocketDetach<pos:position pos:line="15" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="42">newClient<pos:position pos:line="15" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="53">tempBuffer<pos:position pos:line="15" pos:column="63"/></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="65"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="17" pos:column="5">http<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">-&gt;<pos:position pos:line="17" pos:column="14"/></operator><name pos:line="17" pos:column="11">uri<pos:position pos:line="17" pos:column="14"/></name></name> <operator pos:line="17" pos:column="15">=<pos:position pos:line="17" pos:column="16"/></operator> <call><name pos:line="17" pos:column="17">SBufToCstring<pos:position pos:line="17" pos:column="30"/></name><argument_list pos:line="17" pos:column="30">(<argument><expr><name pos:line="17" pos:column="31">useHost<pos:position pos:line="17" pos:column="38"/></name></expr></argument>)<pos:position pos:line="17" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">stream<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">flags<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">.<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">parsed_ok<pos:position pos:line="18" pos:column="28"/></name></name> <operator pos:line="18" pos:column="29">=<pos:position pos:line="18" pos:column="30"/></operator> <literal type="number" pos:line="18" pos:column="31">1<pos:position pos:line="18" pos:column="32"/></literal></expr>;<pos:position pos:line="18" pos:column="33"/></expr_stmt> <comment type="line" pos:line="18" pos:column="34">// Do we need it?</comment>
    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">stream<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">-&gt;<pos:position pos:line="19" pos:column="16"/></operator><name pos:line="19" pos:column="13">mayUseConnection<pos:position pos:line="19" pos:column="29"/></name></name><argument_list pos:line="19" pos:column="29">(<argument><expr><literal type="boolean" pos:line="19" pos:column="30">true<pos:position pos:line="19" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="21" pos:column="5">AsyncCall<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">::<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">Pointer<pos:position pos:line="21" pos:column="23"/></name></name></type> <name pos:line="21" pos:column="24">timeoutCall<pos:position pos:line="21" pos:column="35"/></name> <init pos:line="21" pos:column="36">= <expr><call><name pos:line="21" pos:column="38">commCbCall<pos:position pos:line="21" pos:column="48"/></name><argument_list pos:line="21" pos:column="48">(<argument><expr><literal type="number" pos:line="21" pos:column="49">5<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="52">4<pos:position pos:line="21" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="55">"clientLifetimeTimeout"<pos:position pos:line="21" pos:column="78"/></literal></expr></argument>,
                                     <argument><expr><call><name pos:line="22" pos:column="38">CommTimeoutCbPtrFun<pos:position pos:line="22" pos:column="57"/></name><argument_list pos:line="22" pos:column="57">(<argument><expr><name pos:line="22" pos:column="58">clientLifetimeTimeout<pos:position pos:line="22" pos:column="79"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="81">stream<pos:position pos:line="22" pos:column="87"/></name><operator pos:line="22" pos:column="87">-&gt;<pos:position pos:line="22" pos:column="92"/></operator><name pos:line="22" pos:column="89">http<pos:position pos:line="22" pos:column="93"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="94"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="95"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="96"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">commSetConnTimeout<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name pos:line="23" pos:column="24">clientConnection<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="42">Config<pos:position pos:line="23" pos:column="48"/></name><operator pos:line="23" pos:column="48">.<pos:position pos:line="23" pos:column="49"/></operator><name pos:line="23" pos:column="49">Timeout<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">.<pos:position pos:line="23" pos:column="57"/></operator><name pos:line="23" pos:column="57">lifetime<pos:position pos:line="23" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="67">timeoutCall<pos:position pos:line="23" pos:column="78"/></name></expr></argument>)<pos:position pos:line="23" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="80"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="25" pos:column="5">stream<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">-&gt;<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="13">registerWithConn<pos:position pos:line="25" pos:column="29"/></name></name><argument_list pos:line="25" pos:column="29">()<pos:position pos:line="25" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="32"/></expr_stmt>

    <comment type="line" pos:line="27" pos:column="5">// Setup Http::Request object. Maybe should be replaced by a call to (modified)</comment>
    <comment type="line" pos:line="28" pos:column="5">// clientProcessRequest</comment>
    <decl_stmt><decl><type><name><name pos:line="29" pos:column="5">HttpRequest<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">::<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">Pointer<pos:position pos:line="29" pos:column="25"/></name></name></type> <name pos:line="29" pos:column="26">request<pos:position pos:line="29" pos:column="33"/></name> <init pos:line="29" pos:column="34">= <expr><operator pos:line="29" pos:column="36">new<pos:position pos:line="29" pos:column="39"/></operator> <call><name pos:line="29" pos:column="40">HttpRequest<pos:position pos:line="29" pos:column="51"/></name><argument_list pos:line="29" pos:column="51">()<pos:position pos:line="29" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="54"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="30" pos:column="5">AnyP<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">::<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="11">ProtocolType<pos:position pos:line="30" pos:column="23"/></name></name></type> <name pos:line="30" pos:column="24">proto<pos:position pos:line="30" pos:column="29"/></name> <init pos:line="30" pos:column="30">= <expr><ternary><condition><expr><operator pos:line="30" pos:column="32">(<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">method<pos:position pos:line="30" pos:column="39"/></name> <operator pos:line="30" pos:column="40">==<pos:position pos:line="30" pos:column="42"/></operator> <name><name pos:line="30" pos:column="43">Http<pos:position pos:line="30" pos:column="47"/></name><operator pos:line="30" pos:column="47">::<pos:position pos:line="30" pos:column="49"/></operator><name pos:line="30" pos:column="49">METHOD_NONE<pos:position pos:line="30" pos:column="60"/></name></name><operator pos:line="30" pos:column="60">)<pos:position pos:line="30" pos:column="61"/></operator></expr> ?<pos:position pos:line="30" pos:column="63"/></condition><then pos:line="30" pos:column="63"> <expr><name><name pos:line="30" pos:column="64">AnyP<pos:position pos:line="30" pos:column="68"/></name><operator pos:line="30" pos:column="68">::<pos:position pos:line="30" pos:column="70"/></operator><name pos:line="30" pos:column="70">PROTO_AUTHORITY_FORM<pos:position pos:line="30" pos:column="90"/></name></name></expr> <pos:position pos:line="30" pos:column="91"/></then><else pos:line="30" pos:column="91">: <expr><name><name pos:line="30" pos:column="93">AnyP<pos:position pos:line="30" pos:column="97"/></name><operator pos:line="30" pos:column="97">::<pos:position pos:line="30" pos:column="99"/></operator><name pos:line="30" pos:column="99">PROTO_HTTP<pos:position pos:line="30" pos:column="109"/></name></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="30" pos:column="110"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">request<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">-&gt;<pos:position pos:line="31" pos:column="17"/></operator><name pos:line="31" pos:column="14">url<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">setScheme<pos:position pos:line="31" pos:column="27"/></name></name><argument_list pos:line="31" pos:column="27">(<argument><expr><name pos:line="31" pos:column="28">proto<pos:position pos:line="31" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="null" pos:line="31" pos:column="35">nullptr<pos:position pos:line="31" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">request<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">method<pos:position pos:line="32" pos:column="20"/></name></name> <operator pos:line="32" pos:column="21">=<pos:position pos:line="32" pos:column="22"/></operator> <name pos:line="32" pos:column="23">method<pos:position pos:line="32" pos:column="29"/></name></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="33" pos:column="5">request<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">-&gt;<pos:position pos:line="33" pos:column="17"/></operator><name pos:line="33" pos:column="14">url<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">.<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">host<pos:position pos:line="33" pos:column="22"/></name></name><argument_list pos:line="33" pos:column="22">(<argument><expr><call><name><name pos:line="33" pos:column="23">useHost<pos:position pos:line="33" pos:column="30"/></name><operator pos:line="33" pos:column="30">.<pos:position pos:line="33" pos:column="31"/></operator><name pos:line="33" pos:column="31">c_str<pos:position pos:line="33" pos:column="36"/></name></name><argument_list pos:line="33" pos:column="36">()<pos:position pos:line="33" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="34" pos:column="5">request<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">url<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">.<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">port<pos:position pos:line="34" pos:column="22"/></name></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">usePort<pos:position pos:line="34" pos:column="30"/></name></expr></argument>)<pos:position pos:line="34" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">http<pos:position pos:line="35" pos:column="9"/></name><operator pos:line="35" pos:column="9">-&gt;<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="11">request<pos:position pos:line="35" pos:column="18"/></name></name> <operator pos:line="35" pos:column="19">=<pos:position pos:line="35" pos:column="20"/></operator> <call><name><name pos:line="35" pos:column="21">request<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">getRaw<pos:position pos:line="35" pos:column="35"/></name></name><argument_list pos:line="35" pos:column="35">()<pos:position pos:line="35" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">HTTPMSGLOCK<pos:position pos:line="36" pos:column="16"/></name><argument_list pos:line="36" pos:column="16">(<argument><expr><name><name pos:line="36" pos:column="17">http<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">-&gt;<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="23">request<pos:position pos:line="36" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">request<pos:position pos:line="38" pos:column="12"/></name><operator pos:line="38" pos:column="12">-&gt;<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="14">clientConnectionManager<pos:position pos:line="38" pos:column="37"/></name></name> <operator pos:line="38" pos:column="38">=<pos:position pos:line="38" pos:column="39"/></operator> <name pos:line="38" pos:column="40">this<pos:position pos:line="38" pos:column="44"/></name></expr>;<pos:position pos:line="38" pos:column="45"/></expr_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">proto<pos:position pos:line="40" pos:column="14"/></name> <operator pos:line="40" pos:column="15">==<pos:position pos:line="40" pos:column="17"/></operator> <name><name pos:line="40" pos:column="18">AnyP<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">::<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">PROTO_HTTP<pos:position pos:line="40" pos:column="34"/></name></name></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="41" pos:column="9">request<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">header<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">.<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">putStr<pos:position pos:line="41" pos:column="31"/></name></name><argument_list pos:line="41" pos:column="31">(<argument><expr><name><name pos:line="41" pos:column="32">Http<pos:position pos:line="41" pos:column="36"/></name><operator pos:line="41" pos:column="36">::<pos:position pos:line="41" pos:column="38"/></operator><name pos:line="41" pos:column="38">HOST<pos:position pos:line="41" pos:column="42"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="41" pos:column="44">useHost<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">.<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="52">c_str<pos:position pos:line="41" pos:column="57"/></name></name><argument_list pos:line="41" pos:column="57">()<pos:position pos:line="41" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="61"/></expr_stmt></block></then></if>
    <expr_stmt><expr><name><name pos:line="42" pos:column="5">request<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">flags<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">.<pos:position pos:line="42" pos:column="20"/></operator><name pos:line="42" pos:column="20">intercepted<pos:position pos:line="42" pos:column="31"/></name></name> <operator pos:line="42" pos:column="32">=<pos:position pos:line="42" pos:column="33"/></operator> <operator pos:line="42" pos:column="34">(<pos:position pos:line="42" pos:column="35"/></operator><operator pos:line="42" pos:column="35">(<pos:position pos:line="42" pos:column="36"/></operator><name><name pos:line="42" pos:column="36">clientConnection<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">-&gt;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="54">flags<pos:position pos:line="42" pos:column="59"/></name></name> <operator pos:line="42" pos:column="60">&amp;<pos:position pos:line="42" pos:column="65"/></operator> <name pos:line="42" pos:column="62">COMM_INTERCEPTION<pos:position pos:line="42" pos:column="79"/></name><operator pos:line="42" pos:column="79">)<pos:position pos:line="42" pos:column="80"/></operator> <operator pos:line="42" pos:column="81">!=<pos:position pos:line="42" pos:column="83"/></operator> <literal type="number" pos:line="42" pos:column="84">0<pos:position pos:line="42" pos:column="85"/></literal><operator pos:line="42" pos:column="85">)<pos:position pos:line="42" pos:column="86"/></operator></expr>;<pos:position pos:line="42" pos:column="87"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="43" pos:column="5">request<pos:position pos:line="43" pos:column="12"/></name><operator pos:line="43" pos:column="12">-&gt;<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="14">flags<pos:position pos:line="43" pos:column="19"/></name><operator pos:line="43" pos:column="19">.<pos:position pos:line="43" pos:column="20"/></operator><name pos:line="43" pos:column="20">interceptTproxy<pos:position pos:line="43" pos:column="35"/></name></name> <operator pos:line="43" pos:column="36">=<pos:position pos:line="43" pos:column="37"/></operator> <operator pos:line="43" pos:column="38">(<pos:position pos:line="43" pos:column="39"/></operator><operator pos:line="43" pos:column="39">(<pos:position pos:line="43" pos:column="40"/></operator><name><name pos:line="43" pos:column="40">clientConnection<pos:position pos:line="43" pos:column="56"/></name><operator pos:line="43" pos:column="56">-&gt;<pos:position pos:line="43" pos:column="61"/></operator><name pos:line="43" pos:column="58">flags<pos:position pos:line="43" pos:column="63"/></name></name> <operator pos:line="43" pos:column="64">&amp;<pos:position pos:line="43" pos:column="69"/></operator> <name pos:line="43" pos:column="66">COMM_TRANSPARENT<pos:position pos:line="43" pos:column="82"/></name><operator pos:line="43" pos:column="82">)<pos:position pos:line="43" pos:column="83"/></operator> <operator pos:line="43" pos:column="84">!=<pos:position pos:line="43" pos:column="86"/></operator> <literal type="number" pos:line="43" pos:column="87">0<pos:position pos:line="43" pos:column="88"/></literal> <operator pos:line="43" pos:column="89">)<pos:position pos:line="43" pos:column="90"/></operator></expr>;<pos:position pos:line="43" pos:column="91"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">request<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">sources<pos:position pos:line="44" pos:column="21"/></name></name> <operator pos:line="44" pos:column="22">|=<pos:position pos:line="44" pos:column="24"/></operator> <operator pos:line="44" pos:column="25">(<pos:position pos:line="44" pos:column="26"/></operator><ternary><condition><expr><operator pos:line="44" pos:column="26">(<pos:position pos:line="44" pos:column="27"/></operator><call><name pos:line="44" pos:column="27">switchedToHttps<pos:position pos:line="44" pos:column="42"/></name><argument_list pos:line="44" pos:column="42">()<pos:position pos:line="44" pos:column="44"/></argument_list></call> <operator pos:line="44" pos:column="45">||<pos:position pos:line="44" pos:column="47"/></operator> <name><name pos:line="44" pos:column="48">port<pos:position pos:line="44" pos:column="52"/></name><operator pos:line="44" pos:column="52">-&gt;<pos:position pos:line="44" pos:column="57"/></operator><name pos:line="44" pos:column="54">transport<pos:position pos:line="44" pos:column="63"/></name><operator pos:line="44" pos:column="63">.<pos:position pos:line="44" pos:column="64"/></operator><name pos:line="44" pos:column="64">protocol<pos:position pos:line="44" pos:column="72"/></name></name> <operator pos:line="44" pos:column="73">==<pos:position pos:line="44" pos:column="75"/></operator> <name><name pos:line="44" pos:column="76">AnyP<pos:position pos:line="44" pos:column="80"/></name><operator pos:line="44" pos:column="80">::<pos:position pos:line="44" pos:column="82"/></operator><name pos:line="44" pos:column="82">PROTO_HTTPS<pos:position pos:line="44" pos:column="93"/></name></name><operator pos:line="44" pos:column="93">)<pos:position pos:line="44" pos:column="94"/></operator></expr> ?<pos:position pos:line="44" pos:column="96"/></condition><then pos:line="44" pos:column="96"> <expr><name><name pos:line="44" pos:column="97">HttpMsg<pos:position pos:line="44" pos:column="104"/></name><operator pos:line="44" pos:column="104">::<pos:position pos:line="44" pos:column="106"/></operator><name pos:line="44" pos:column="106">srcHttps<pos:position pos:line="44" pos:column="114"/></name></name></expr> <pos:position pos:line="44" pos:column="115"/></then><else pos:line="44" pos:column="115">: <expr><name><name pos:line="44" pos:column="117">HttpMsg<pos:position pos:line="44" pos:column="124"/></name><operator pos:line="44" pos:column="124">::<pos:position pos:line="44" pos:column="126"/></operator><name pos:line="44" pos:column="126">srcHttp<pos:position pos:line="44" pos:column="133"/></name></name></expr></else></ternary><operator pos:line="44" pos:column="133">)<pos:position pos:line="44" pos:column="134"/></operator></expr>;<pos:position pos:line="44" pos:column="135"/></expr_stmt>
<cpp:if pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">if<pos:position pos:line="45" pos:column="4"/></cpp:directive> <expr><name pos:line="45" pos:column="5">USE_AUTH<pos:position pos:line="45" pos:column="13"/></name></expr></cpp:if>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">getAuth<pos:position pos:line="46" pos:column="16"/></name><argument_list pos:line="46" pos:column="16">()<pos:position pos:line="46" pos:column="18"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="19"/></condition><then pos:line="46" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="9">request<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">auth_user_request<pos:position pos:line="47" pos:column="35"/></name></name> <operator pos:line="47" pos:column="36">=<pos:position pos:line="47" pos:column="37"/></operator> <call><name pos:line="47" pos:column="38">getAuth<pos:position pos:line="47" pos:column="45"/></name><argument_list pos:line="47" pos:column="45">()<pos:position pos:line="47" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt></block></then></if>
<cpp:endif pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">endif<pos:position pos:line="48" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">request<pos:position pos:line="49" pos:column="12"/></name><operator pos:line="49" pos:column="12">-&gt;<pos:position pos:line="49" pos:column="17"/></operator><name pos:line="49" pos:column="14">client_addr<pos:position pos:line="49" pos:column="25"/></name></name> <operator pos:line="49" pos:column="26">=<pos:position pos:line="49" pos:column="27"/></operator> <name><name pos:line="49" pos:column="28">clientConnection<pos:position pos:line="49" pos:column="44"/></name><operator pos:line="49" pos:column="44">-&gt;<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="46">remote<pos:position pos:line="49" pos:column="52"/></name></name></expr>;<pos:position pos:line="49" pos:column="53"/></expr_stmt>
<cpp:if pos:line="50" pos:column="1">#<cpp:directive pos:line="50" pos:column="2">if<pos:position pos:line="50" pos:column="4"/></cpp:directive> <expr><name pos:line="50" pos:column="5">FOLLOW_X_FORWARDED_FOR<pos:position pos:line="50" pos:column="27"/></name></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">request<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">-&gt;<pos:position pos:line="51" pos:column="17"/></operator><name pos:line="51" pos:column="14">indirect_client_addr<pos:position pos:line="51" pos:column="34"/></name></name> <operator pos:line="51" pos:column="35">=<pos:position pos:line="51" pos:column="36"/></operator> <name><name pos:line="51" pos:column="37">clientConnection<pos:position pos:line="51" pos:column="53"/></name><operator pos:line="51" pos:column="53">-&gt;<pos:position pos:line="51" pos:column="58"/></operator><name pos:line="51" pos:column="55">remote<pos:position pos:line="51" pos:column="61"/></name></name></expr>;<pos:position pos:line="51" pos:column="62"/></expr_stmt>
<cpp:endif pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">endif<pos:position pos:line="52" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="52" pos:column="8">/* FOLLOW_X_FORWARDED_FOR */</comment>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">request<pos:position pos:line="53" pos:column="12"/></name><operator pos:line="53" pos:column="12">-&gt;<pos:position pos:line="53" pos:column="17"/></operator><name pos:line="53" pos:column="14">my_addr<pos:position pos:line="53" pos:column="21"/></name></name> <operator pos:line="53" pos:column="22">=<pos:position pos:line="53" pos:column="23"/></operator> <name><name pos:line="53" pos:column="24">clientConnection<pos:position pos:line="53" pos:column="40"/></name><operator pos:line="53" pos:column="40">-&gt;<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="42">local<pos:position pos:line="53" pos:column="47"/></name></name></expr>;<pos:position pos:line="53" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="54" pos:column="5">request<pos:position pos:line="54" pos:column="12"/></name><operator pos:line="54" pos:column="12">-&gt;<pos:position pos:line="54" pos:column="17"/></operator><name pos:line="54" pos:column="14">myportname<pos:position pos:line="54" pos:column="24"/></name></name> <operator pos:line="54" pos:column="25">=<pos:position pos:line="54" pos:column="26"/></operator> <name><name pos:line="54" pos:column="27">port<pos:position pos:line="54" pos:column="31"/></name><operator pos:line="54" pos:column="31">-&gt;<pos:position pos:line="54" pos:column="36"/></operator><name pos:line="54" pos:column="33">name<pos:position pos:line="54" pos:column="37"/></name></name></expr>;<pos:position pos:line="54" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name pos:line="56" pos:column="5">inBuf<pos:position pos:line="56" pos:column="10"/></name> <operator pos:line="56" pos:column="11">=<pos:position pos:line="56" pos:column="12"/></operator> <name pos:line="56" pos:column="13">payload<pos:position pos:line="56" pos:column="20"/></name></expr>;<pos:position pos:line="56" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="57" pos:column="5">flags<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">.<pos:position pos:line="57" pos:column="11"/></operator><name pos:line="57" pos:column="11">readMore<pos:position pos:line="57" pos:column="19"/></name></name> <operator pos:line="57" pos:column="20">=<pos:position pos:line="57" pos:column="21"/></operator> <literal type="boolean" pos:line="57" pos:column="22">false<pos:position pos:line="57" pos:column="27"/></literal></expr>;<pos:position pos:line="57" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="59" pos:column="5">setLogUri<pos:position pos:line="59" pos:column="14"/></name><argument_list pos:line="59" pos:column="14">(<argument><expr><name pos:line="59" pos:column="15">http<pos:position pos:line="59" pos:column="19"/></name></expr></argument>, <argument><expr><call><name pos:line="59" pos:column="21">urlCanonicalClean<pos:position pos:line="59" pos:column="38"/></name><argument_list pos:line="59" pos:column="38">(<argument><expr><call><name><name pos:line="59" pos:column="39">request<pos:position pos:line="59" pos:column="46"/></name><operator pos:line="59" pos:column="46">.<pos:position pos:line="59" pos:column="47"/></operator><name pos:line="59" pos:column="47">getRaw<pos:position pos:line="59" pos:column="53"/></name></name><argument_list pos:line="59" pos:column="53">()<pos:position pos:line="59" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="58"/></expr_stmt>
    <return pos:line="60" pos:column="5">return <expr><name pos:line="60" pos:column="12">http<pos:position pos:line="60" pos:column="16"/></name></expr>;<pos:position pos:line="60" pos:column="17"/></return>
}<pos:position pos:line="61" pos:column="2"/></block></function></unit>

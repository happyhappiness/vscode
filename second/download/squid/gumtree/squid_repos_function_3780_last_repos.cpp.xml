<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3780_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">generateFakeSslCertificate<pos:position pos:line="1" pos:column="39"/></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name><name pos:line="1" pos:column="40">Security<pos:position pos:line="1" pos:column="48"/></name><operator pos:line="1" pos:column="48">::<pos:position pos:line="1" pos:column="50"/></operator><name pos:line="1" pos:column="50">CertPointer<pos:position pos:line="1" pos:column="61"/></name></name> <modifier pos:line="1" pos:column="62">&amp;<pos:position pos:line="1" pos:column="67"/></modifier></type> <name pos:line="1" pos:column="64">certToStore<pos:position pos:line="1" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="77">Ssl<pos:position pos:line="1" pos:column="80"/></name><operator pos:line="1" pos:column="80">::<pos:position pos:line="1" pos:column="82"/></operator><name pos:line="1" pos:column="82">EVP_PKEY_Pointer<pos:position pos:line="1" pos:column="98"/></name></name> <modifier pos:line="1" pos:column="99">&amp;<pos:position pos:line="1" pos:column="104"/></modifier></type> <name pos:line="1" pos:column="101">pkeyToStore<pos:position pos:line="1" pos:column="112"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="1" pos:column="114">Ssl<pos:position pos:line="1" pos:column="117"/></name><operator pos:line="1" pos:column="117">::<pos:position pos:line="1" pos:column="119"/></operator><name pos:line="1" pos:column="119">CertificateProperties<pos:position pos:line="1" pos:column="140"/></name></name> <specifier pos:line="1" pos:column="141">const<pos:position pos:line="1" pos:column="146"/></specifier> <modifier pos:line="1" pos:column="147">&amp;<pos:position pos:line="1" pos:column="152"/></modifier></type><name pos:line="1" pos:column="148">properties<pos:position pos:line="1" pos:column="158"/></name></decl></parameter>,  <parameter><decl><type><name><name pos:line="1" pos:column="161">Ssl<pos:position pos:line="1" pos:column="164"/></name><operator pos:line="1" pos:column="164">::<pos:position pos:line="1" pos:column="166"/></operator><name pos:line="1" pos:column="166">BIGNUM_Pointer<pos:position pos:line="1" pos:column="180"/></name></name> <specifier pos:line="1" pos:column="181">const<pos:position pos:line="1" pos:column="186"/></specifier> <modifier pos:line="1" pos:column="187">&amp;<pos:position pos:line="1" pos:column="192"/></modifier></type><name pos:line="1" pos:column="188">serial<pos:position pos:line="1" pos:column="194"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="195"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="3" pos:column="5">Ssl<pos:position pos:line="3" pos:column="8"/></name><operator pos:line="3" pos:column="8">::<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">EVP_PKEY_Pointer<pos:position pos:line="3" pos:column="26"/></name></name></type> <name pos:line="3" pos:column="27">pkey<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
    <comment type="line" pos:line="4" pos:column="5">// Use signing certificates private key as generated certificate private key</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name><name pos:line="5" pos:column="9">properties<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">signWithPkey<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">.<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="33">get<pos:position pos:line="5" pos:column="36"/></name></name><argument_list pos:line="5" pos:column="36">()<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="6" pos:column="9">pkey<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">.<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">resetAndLock<pos:position pos:line="6" pos:column="26"/></name></name><argument_list pos:line="6" pos:column="26">(<argument><expr><call><name><name pos:line="6" pos:column="27">properties<pos:position pos:line="6" pos:column="37"/></name><operator pos:line="6" pos:column="37">.<pos:position pos:line="6" pos:column="38"/></operator><name pos:line="6" pos:column="38">signWithPkey<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">.<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="51">get<pos:position pos:line="6" pos:column="54"/></name></name><argument_list pos:line="6" pos:column="54">()<pos:position pos:line="6" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="58"/></expr_stmt></block></then>
    <else pos:line="7" pos:column="5">else <comment type="line" pos:line="7" pos:column="10">// if not exist generate one</comment>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="8" pos:column="9">pkey<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">.<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">resetWithoutLocking<pos:position pos:line="8" pos:column="33"/></name></name><argument_list pos:line="8" pos:column="33">(<argument><expr><call><name><name pos:line="8" pos:column="34">Ssl<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">::<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">createSslPrivateKey<pos:position pos:line="8" pos:column="58"/></name></name><argument_list pos:line="8" pos:column="58">()<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt></block></else></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">pkey<pos:position pos:line="10" pos:column="14"/></name></expr>)<pos:position pos:line="10" pos:column="15"/></condition><then pos:line="10" pos:column="15">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="boolean" pos:line="11" pos:column="16">false<pos:position pos:line="11" pos:column="21"/></literal></expr>;<pos:position pos:line="11" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">Security<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">::<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">CertPointer<pos:position pos:line="13" pos:column="26"/></name></name></type> <name pos:line="13" pos:column="27">cert<pos:position pos:line="13" pos:column="31"/></name><argument_list pos:line="13" pos:column="31">(<argument><expr><call><name pos:line="13" pos:column="32">X509_new<pos:position pos:line="13" pos:column="40"/></name><argument_list pos:line="13" pos:column="40">()<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></decl>;<pos:position pos:line="13" pos:column="44"/></decl_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">cert<pos:position pos:line="14" pos:column="14"/></name></expr>)<pos:position pos:line="14" pos:column="15"/></condition><then pos:line="14" pos:column="15">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><literal type="boolean" pos:line="15" pos:column="16">false<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></return></block></then></if>

    <comment type="line" pos:line="17" pos:column="5">// Set pub key and serial given by the caller</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><call><name pos:line="18" pos:column="10">X509_set_pubkey<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><call><name><name pos:line="18" pos:column="26">cert<pos:position pos:line="18" pos:column="30"/></name><operator pos:line="18" pos:column="30">.<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">get<pos:position pos:line="18" pos:column="34"/></name></name><argument_list pos:line="18" pos:column="34">()<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="18" pos:column="38">pkey<pos:position pos:line="18" pos:column="42"/></name><operator pos:line="18" pos:column="42">.<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">get<pos:position pos:line="18" pos:column="46"/></name></name><argument_list pos:line="18" pos:column="46">()<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="50"/></condition><then pos:line="18" pos:column="50">
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><literal type="boolean" pos:line="19" pos:column="16">false<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></return></block></then></if>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><operator pos:line="20" pos:column="9">!<pos:position pos:line="20" pos:column="10"/></operator><call><name pos:line="20" pos:column="10">setSerialNumber<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><call><name pos:line="20" pos:column="26">X509_get_serialNumber<pos:position pos:line="20" pos:column="47"/></name><argument_list pos:line="20" pos:column="47">(<argument><expr><call><name><name pos:line="20" pos:column="48">cert<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">.<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="53">get<pos:position pos:line="20" pos:column="56"/></name></name><argument_list pos:line="20" pos:column="56">()<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="20" pos:column="61">serial<pos:position pos:line="20" pos:column="67"/></name><operator pos:line="20" pos:column="67">.<pos:position pos:line="20" pos:column="68"/></operator><name pos:line="20" pos:column="68">get<pos:position pos:line="20" pos:column="71"/></name></name><argument_list pos:line="20" pos:column="71">()<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="75"/></condition><then pos:line="20" pos:column="75">
        <block type="pseudo"><return pos:line="21" pos:column="9">return <expr><literal type="boolean" pos:line="21" pos:column="16">false<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></return></block></then></if>

    <comment type="line" pos:line="23" pos:column="5">// Fill the certificate with the required properties</comment>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><call><name pos:line="24" pos:column="10">buildCertificate<pos:position pos:line="24" pos:column="26"/></name><argument_list pos:line="24" pos:column="26">(<argument><expr><name pos:line="24" pos:column="27">cert<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="33">properties<pos:position pos:line="24" pos:column="43"/></name></expr></argument>)<pos:position pos:line="24" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="45"/></condition><then pos:line="24" pos:column="45">
        <block type="pseudo"><return pos:line="25" pos:column="9">return <expr><literal type="boolean" pos:line="25" pos:column="16">false<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">ret<pos:position pos:line="27" pos:column="12"/></name> <init pos:line="27" pos:column="13">= <expr><literal type="number" pos:line="27" pos:column="15">0<pos:position pos:line="27" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="27" pos:column="17"/></decl_stmt>
    <comment type="line" pos:line="28" pos:column="5">// Set issuer name, from CA or our subject name for self signed cert</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name><name pos:line="29" pos:column="9">properties<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">.<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">signAlgorithm<pos:position pos:line="29" pos:column="33"/></name></name> <operator pos:line="29" pos:column="34">!=<pos:position pos:line="29" pos:column="36"/></operator> <name><name pos:line="29" pos:column="37">Ssl<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">::<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">algSignSelf<pos:position pos:line="29" pos:column="53"/></name></name> <operator pos:line="29" pos:column="54">&amp;&amp;<pos:position pos:line="29" pos:column="64"/></operator> <call><name><name pos:line="29" pos:column="57">properties<pos:position pos:line="29" pos:column="67"/></name><operator pos:line="29" pos:column="67">.<pos:position pos:line="29" pos:column="68"/></operator><name pos:line="29" pos:column="68">signWithX509<pos:position pos:line="29" pos:column="80"/></name><operator pos:line="29" pos:column="80">.<pos:position pos:line="29" pos:column="81"/></operator><name pos:line="29" pos:column="81">get<pos:position pos:line="29" pos:column="84"/></name></name><argument_list pos:line="29" pos:column="84">()<pos:position pos:line="29" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="87"/></condition><then pos:line="29" pos:column="87">
        <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="9">ret<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <call><name pos:line="30" pos:column="15">X509_set_issuer_name<pos:position pos:line="30" pos:column="35"/></name><argument_list pos:line="30" pos:column="35">(<argument><expr><call><name><name pos:line="30" pos:column="36">cert<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">.<pos:position pos:line="30" pos:column="41"/></operator><name pos:line="30" pos:column="41">get<pos:position pos:line="30" pos:column="44"/></name></name><argument_list pos:line="30" pos:column="44">()<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="48">X509_get_subject_name<pos:position pos:line="30" pos:column="69"/></name><argument_list pos:line="30" pos:column="69">(<argument><expr><call><name><name pos:line="30" pos:column="70">properties<pos:position pos:line="30" pos:column="80"/></name><operator pos:line="30" pos:column="80">.<pos:position pos:line="30" pos:column="81"/></operator><name pos:line="30" pos:column="81">signWithX509<pos:position pos:line="30" pos:column="93"/></name><operator pos:line="30" pos:column="93">.<pos:position pos:line="30" pos:column="94"/></operator><name pos:line="30" pos:column="94">get<pos:position pos:line="30" pos:column="97"/></name></name><argument_list pos:line="30" pos:column="97">()<pos:position pos:line="30" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="102"/></expr_stmt></block></then>
    <else pos:line="31" pos:column="5">else <comment type="line" pos:line="31" pos:column="10">// Self signed certificate, set issuer to self</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="32" pos:column="9">ret<pos:position pos:line="32" pos:column="12"/></name> <operator pos:line="32" pos:column="13">=<pos:position pos:line="32" pos:column="14"/></operator> <call><name pos:line="32" pos:column="15">X509_set_issuer_name<pos:position pos:line="32" pos:column="35"/></name><argument_list pos:line="32" pos:column="35">(<argument><expr><call><name><name pos:line="32" pos:column="36">cert<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">.<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="41">get<pos:position pos:line="32" pos:column="44"/></name></name><argument_list pos:line="32" pos:column="44">()<pos:position pos:line="32" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="32" pos:column="48">X509_get_subject_name<pos:position pos:line="32" pos:column="69"/></name><argument_list pos:line="32" pos:column="69">(<argument><expr><call><name><name pos:line="32" pos:column="70">cert<pos:position pos:line="32" pos:column="74"/></name><operator pos:line="32" pos:column="74">.<pos:position pos:line="32" pos:column="75"/></operator><name pos:line="32" pos:column="75">get<pos:position pos:line="32" pos:column="78"/></name></name><argument_list pos:line="32" pos:column="78">()<pos:position pos:line="32" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="32" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="83"/></expr_stmt></block></else></if>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">!<pos:position pos:line="33" pos:column="10"/></operator><name pos:line="33" pos:column="10">ret<pos:position pos:line="33" pos:column="13"/></name></expr>)<pos:position pos:line="33" pos:column="14"/></condition><then pos:line="33" pos:column="14">
        <block type="pseudo"><return pos:line="34" pos:column="9">return <expr><literal type="boolean" pos:line="34" pos:column="16">false<pos:position pos:line="34" pos:column="21"/></literal></expr>;<pos:position pos:line="34" pos:column="22"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="36" pos:column="5">const<pos:position pos:line="36" pos:column="10"/></specifier>  <name pos:line="36" pos:column="12">EVP_MD<pos:position pos:line="36" pos:column="18"/></name> <modifier pos:line="36" pos:column="19">*<pos:position pos:line="36" pos:column="20"/></modifier></type><name pos:line="36" pos:column="20">hash<pos:position pos:line="36" pos:column="24"/></name> <init pos:line="36" pos:column="25">= <expr><ternary><condition><expr><name><name pos:line="36" pos:column="27">properties<pos:position pos:line="36" pos:column="37"/></name><operator pos:line="36" pos:column="37">.<pos:position pos:line="36" pos:column="38"/></operator><name pos:line="36" pos:column="38">signHash<pos:position pos:line="36" pos:column="46"/></name></name></expr> ?<pos:position pos:line="36" pos:column="48"/></condition><then pos:line="36" pos:column="48"> <expr><name><name pos:line="36" pos:column="49">properties<pos:position pos:line="36" pos:column="59"/></name><operator pos:line="36" pos:column="59">.<pos:position pos:line="36" pos:column="60"/></operator><name pos:line="36" pos:column="60">signHash<pos:position pos:line="36" pos:column="68"/></name></name></expr> <pos:position pos:line="36" pos:column="69"/></then><else pos:line="36" pos:column="69">: <expr><call><name pos:line="36" pos:column="71">EVP_get_digestbyname<pos:position pos:line="36" pos:column="91"/></name><argument_list pos:line="36" pos:column="91">(<argument><expr><name pos:line="36" pos:column="92">SQUID_SSL_SIGN_HASH_IF_NONE<pos:position pos:line="36" pos:column="119"/></name></expr></argument>)<pos:position pos:line="36" pos:column="120"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="36" pos:column="121"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">assert<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><name pos:line="37" pos:column="12">hash<pos:position pos:line="37" pos:column="16"/></name></expr></argument>)<pos:position pos:line="37" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="18"/></expr_stmt>
    <comment type="block" pos:line="38" pos:column="5">/*Now sign the request */</comment>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">properties<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">.<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">signAlgorithm<pos:position pos:line="39" pos:column="33"/></name></name> <operator pos:line="39" pos:column="34">!=<pos:position pos:line="39" pos:column="36"/></operator> <name><name pos:line="39" pos:column="37">Ssl<pos:position pos:line="39" pos:column="40"/></name><operator pos:line="39" pos:column="40">::<pos:position pos:line="39" pos:column="42"/></operator><name pos:line="39" pos:column="42">algSignSelf<pos:position pos:line="39" pos:column="53"/></name></name> <operator pos:line="39" pos:column="54">&amp;&amp;<pos:position pos:line="39" pos:column="64"/></operator> <call><name><name pos:line="39" pos:column="57">properties<pos:position pos:line="39" pos:column="67"/></name><operator pos:line="39" pos:column="67">.<pos:position pos:line="39" pos:column="68"/></operator><name pos:line="39" pos:column="68">signWithPkey<pos:position pos:line="39" pos:column="80"/></name><operator pos:line="39" pos:column="80">.<pos:position pos:line="39" pos:column="81"/></operator><name pos:line="39" pos:column="81">get<pos:position pos:line="39" pos:column="84"/></name></name><argument_list pos:line="39" pos:column="84">()<pos:position pos:line="39" pos:column="86"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="87"/></condition><then pos:line="39" pos:column="87">
        <block type="pseudo"><expr_stmt><expr><name pos:line="40" pos:column="9">ret<pos:position pos:line="40" pos:column="12"/></name> <operator pos:line="40" pos:column="13">=<pos:position pos:line="40" pos:column="14"/></operator> <call><name pos:line="40" pos:column="15">X509_sign<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><call><name><name pos:line="40" pos:column="25">cert<pos:position pos:line="40" pos:column="29"/></name><operator pos:line="40" pos:column="29">.<pos:position pos:line="40" pos:column="30"/></operator><name pos:line="40" pos:column="30">get<pos:position pos:line="40" pos:column="33"/></name></name><argument_list pos:line="40" pos:column="33">()<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="40" pos:column="37">properties<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">.<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="48">signWithPkey<pos:position pos:line="40" pos:column="60"/></name><operator pos:line="40" pos:column="60">.<pos:position pos:line="40" pos:column="61"/></operator><name pos:line="40" pos:column="61">get<pos:position pos:line="40" pos:column="64"/></name></name><argument_list pos:line="40" pos:column="64">()<pos:position pos:line="40" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="40" pos:column="68">hash<pos:position pos:line="40" pos:column="72"/></name></expr></argument>)<pos:position pos:line="40" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="74"/></expr_stmt></block></then>
    <else pos:line="41" pos:column="5">else <comment type="line" pos:line="41" pos:column="10">//else sign with self key (self signed request)</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="9">ret<pos:position pos:line="42" pos:column="12"/></name> <operator pos:line="42" pos:column="13">=<pos:position pos:line="42" pos:column="14"/></operator> <call><name pos:line="42" pos:column="15">X509_sign<pos:position pos:line="42" pos:column="24"/></name><argument_list pos:line="42" pos:column="24">(<argument><expr><call><name><name pos:line="42" pos:column="25">cert<pos:position pos:line="42" pos:column="29"/></name><operator pos:line="42" pos:column="29">.<pos:position pos:line="42" pos:column="30"/></operator><name pos:line="42" pos:column="30">get<pos:position pos:line="42" pos:column="33"/></name></name><argument_list pos:line="42" pos:column="33">()<pos:position pos:line="42" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="42" pos:column="37">pkey<pos:position pos:line="42" pos:column="41"/></name><operator pos:line="42" pos:column="41">.<pos:position pos:line="42" pos:column="42"/></operator><name pos:line="42" pos:column="42">get<pos:position pos:line="42" pos:column="45"/></name></name><argument_list pos:line="42" pos:column="45">()<pos:position pos:line="42" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="42" pos:column="49">hash<pos:position pos:line="42" pos:column="53"/></name></expr></argument>)<pos:position pos:line="42" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="55"/></expr_stmt></block></else></if>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><operator pos:line="44" pos:column="9">!<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">ret<pos:position pos:line="44" pos:column="13"/></name></expr>)<pos:position pos:line="44" pos:column="14"/></condition><then pos:line="44" pos:column="14">
        <block type="pseudo"><return pos:line="45" pos:column="9">return <expr><literal type="boolean" pos:line="45" pos:column="16">false<pos:position pos:line="45" pos:column="21"/></literal></expr>;<pos:position pos:line="45" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="47" pos:column="5">certToStore<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">=<pos:position pos:line="47" pos:column="18"/></operator> <call><name><name pos:line="47" pos:column="19">std<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">::<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="24">move<pos:position pos:line="47" pos:column="28"/></name></name><argument_list pos:line="47" pos:column="28">(<argument><expr><name pos:line="47" pos:column="29">cert<pos:position pos:line="47" pos:column="33"/></name></expr></argument>)<pos:position pos:line="47" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><name pos:line="48" pos:column="5">pkeyToStore<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <call><name><name pos:line="48" pos:column="19">std<pos:position pos:line="48" pos:column="22"/></name><operator pos:line="48" pos:column="22">::<pos:position pos:line="48" pos:column="24"/></operator><name pos:line="48" pos:column="24">move<pos:position pos:line="48" pos:column="28"/></name></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name pos:line="48" pos:column="29">pkey<pos:position pos:line="48" pos:column="33"/></name></expr></argument>)<pos:position pos:line="48" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="35"/></expr_stmt>
    <return pos:line="49" pos:column="5">return <expr><literal type="boolean" pos:line="49" pos:column="12">true<pos:position pos:line="49" pos:column="16"/></literal></expr>;<pos:position pos:line="49" pos:column="17"/></return>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

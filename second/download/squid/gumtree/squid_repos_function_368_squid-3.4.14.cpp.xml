<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_368_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">process_options<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">argc<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name><name pos:line="2" pos:column="33">argv<pos:position pos:line="2" pos:column="37"/></name><index pos:line="2" pos:column="37">[]<pos:position pos:line="2" pos:column="39"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">opt<pos:position pos:line="4" pos:column="12"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="14">had_error<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><literal type="number" pos:line="4" pos:column="26">0<pos:position pos:line="4" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">opterr<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>;<pos:position pos:line="6" pos:column="16"/></expr_stmt>
    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><operator pos:line="7" pos:column="12">-<pos:position pos:line="7" pos:column="13"/></operator><literal type="number" pos:line="7" pos:column="13">1<pos:position pos:line="7" pos:column="14"/></literal> <operator pos:line="7" pos:column="15">!=<pos:position pos:line="7" pos:column="17"/></operator> <operator pos:line="7" pos:column="18">(<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">opt<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">=<pos:position pos:line="7" pos:column="24"/></operator> <call><name pos:line="7" pos:column="25">getopt<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">argc<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">argv<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="44">"hdvS"<pos:position pos:line="7" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="51"/></argument_list></call><operator pos:line="7" pos:column="51">)<pos:position pos:line="7" pos:column="52"/></operator></expr>)<pos:position pos:line="7" pos:column="53"/></condition> <block pos:line="7" pos:column="54">{
        <switch pos:line="8" pos:column="9">switch <condition pos:line="8" pos:column="16">(<expr><name pos:line="8" pos:column="17">opt<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition> <block pos:line="8" pos:column="22">{
        <case pos:line="9" pos:column="9">case <expr><literal type="char" pos:line="9" pos:column="14">'d'<pos:position pos:line="9" pos:column="17"/></literal></expr>:<pos:position pos:line="9" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="10" pos:column="13">debug_enabled<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">=<pos:position pos:line="10" pos:column="28"/></operator> <literal type="number" pos:line="10" pos:column="29">1<pos:position pos:line="10" pos:column="30"/></literal></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
            <break pos:line="11" pos:column="13">break;<pos:position pos:line="11" pos:column="19"/></break>
        <case pos:line="12" pos:column="9">case <expr><literal type="char" pos:line="12" pos:column="14">'v'<pos:position pos:line="12" pos:column="17"/></literal></expr>:<pos:position pos:line="12" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="13" pos:column="13">debug_enabled<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">=<pos:position pos:line="13" pos:column="28"/></operator> <literal type="number" pos:line="13" pos:column="29">1<pos:position pos:line="13" pos:column="30"/></literal></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="14" pos:column="13">NTLM_packet_debug_enabled<pos:position pos:line="14" pos:column="38"/></name> <operator pos:line="14" pos:column="39">=<pos:position pos:line="14" pos:column="40"/></operator> <literal type="number" pos:line="14" pos:column="41">1<pos:position pos:line="14" pos:column="42"/></literal></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
            <break pos:line="15" pos:column="13">break;<pos:position pos:line="15" pos:column="19"/></break>
        <case pos:line="16" pos:column="9">case <expr><literal type="char" pos:line="16" pos:column="14">'S'<pos:position pos:line="16" pos:column="17"/></literal></expr>:<pos:position pos:line="16" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="17" pos:column="13">strip_domain_enabled<pos:position pos:line="17" pos:column="33"/></name> <operator pos:line="17" pos:column="34">=<pos:position pos:line="17" pos:column="35"/></operator> <literal type="number" pos:line="17" pos:column="36">1<pos:position pos:line="17" pos:column="37"/></literal></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
            <break pos:line="18" pos:column="13">break;<pos:position pos:line="18" pos:column="19"/></break>
        <case pos:line="19" pos:column="9">case <expr><literal type="char" pos:line="19" pos:column="14">'h'<pos:position pos:line="19" pos:column="17"/></literal></expr>:<pos:position pos:line="19" pos:column="18"/></case>
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">usage<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">()<pos:position pos:line="20" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">exit<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><literal type="number" pos:line="21" pos:column="18">0<pos:position pos:line="21" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
        <case pos:line="22" pos:column="9">case <expr><literal type="char" pos:line="22" pos:column="14">'?'<pos:position pos:line="22" pos:column="17"/></literal></expr>:<pos:position pos:line="22" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="23" pos:column="13">opt<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <name pos:line="23" pos:column="19">optopt<pos:position pos:line="23" pos:column="25"/></name></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
            <comment type="block" pos:line="24" pos:column="13">/* fall thru to default */</comment>
        <default pos:line="25" pos:column="9">default:<pos:position pos:line="25" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">fprintf<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">stderr<pos:position pos:line="26" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="29">"unknown option: -%c. Exiting\n"<pos:position pos:line="26" pos:column="61"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="63">opt<pos:position pos:line="26" pos:column="66"/></name></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">usage<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">()<pos:position pos:line="27" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
            <expr_stmt><expr><name pos:line="28" pos:column="13">had_error<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <literal type="number" pos:line="28" pos:column="25">1<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></switch>
    }<pos:position pos:line="30" pos:column="6"/></block></while>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name pos:line="31" pos:column="9">had_error<pos:position pos:line="31" pos:column="18"/></name></expr>)<pos:position pos:line="31" pos:column="19"/></condition><then pos:line="31" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="9">exit<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt></block></then></if>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2895_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">clientReplyContext<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">setReplyToReply<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><name pos:line="2" pos:column="37">HttpReply<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">futureReply<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">futureReply<pos:position pos:line="4" pos:column="21"/></name></expr></argument>)<pos:position pos:line="4" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">http<pos:position pos:line="5" pos:column="9"/></name><operator pos:line="5" pos:column="9">-&gt;<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="11">al<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">http<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">code<pos:position pos:line="5" pos:column="24"/></name></name> <operator pos:line="5" pos:column="25">=<pos:position pos:line="5" pos:column="26"/></operator> <call><name><name pos:line="5" pos:column="27">futureReply<pos:position pos:line="5" pos:column="38"/></name><operator pos:line="5" pos:column="38">-&gt;<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="40">sline<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">.<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">status<pos:position pos:line="5" pos:column="52"/></name></name><argument_list pos:line="5" pos:column="52">()<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="55"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">HttpRequestMethod<pos:position pos:line="7" pos:column="22"/></name></type> <name pos:line="7" pos:column="23">method<pos:position pos:line="7" pos:column="29"/></name></decl>;<pos:position pos:line="7" pos:column="30"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">http<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">request<pos:position pos:line="8" pos:column="22"/></name></name></expr>)<pos:position pos:line="8" pos:column="23"/></condition><then pos:line="8" pos:column="23"> <block pos:line="8" pos:column="24">{ <comment type="line" pos:line="8" pos:column="26">// nil on responses to unparsable requests</comment>
        <expr_stmt><expr><call><name><name pos:line="9" pos:column="9">http<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">request<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">-&gt;<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="24">ignoreRange<pos:position pos:line="9" pos:column="35"/></name></name><argument_list pos:line="9" pos:column="35">(<argument><expr><literal type="string" pos:line="9" pos:column="36">"responding with a Squid-generated reply"<pos:position pos:line="9" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">method<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name><name pos:line="10" pos:column="18">http<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">request<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">-&gt;<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="33">method<pos:position pos:line="10" pos:column="39"/></name></name></expr>;<pos:position pos:line="10" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">createStoreEntry<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">method<pos:position pos:line="13" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="30">RequestFlags<pos:position pos:line="13" pos:column="42"/></name><argument_list pos:line="13" pos:column="42">()<pos:position pos:line="13" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">http<pos:position pos:line="15" pos:column="9"/></name><operator pos:line="15" pos:column="9">-&gt;<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="11">storeEntry<pos:position pos:line="15" pos:column="21"/></name></name><argument_list pos:line="15" pos:column="21">()<pos:position pos:line="15" pos:column="23"/></argument_list></call><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><call><name pos:line="15" pos:column="25">storeErrorResponse<pos:position pos:line="15" pos:column="43"/></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">futureReply<pos:position pos:line="15" pos:column="55"/></name></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="57"/></expr_stmt>
    <comment type="block" pos:line="16" pos:column="5">/* Now the caller reads to get futureReply */</comment>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4303_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLStringData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">parse<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <while pos:line="4" pos:column="5">while <condition pos:line="4" pos:column="11">(<decl><type><specifier pos:line="4" pos:column="12">const<pos:position pos:line="4" pos:column="17"/></specifier> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">t<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><call><name><name pos:line="4" pos:column="28">ConfigParser<pos:position pos:line="4" pos:column="40"/></name><operator pos:line="4" pos:column="40">::<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">strtokFile<pos:position pos:line="4" pos:column="52"/></name></name><argument_list pos:line="4" pos:column="52">()<pos:position pos:line="4" pos:column="54"/></argument_list></call></expr></init></decl>)<pos:position pos:line="4" pos:column="55"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="5" pos:column="9">stringValues<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">.<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">insert<pos:position pos:line="5" pos:column="28"/></name></name><argument_list pos:line="5" pos:column="28">(<argument><expr><call><name pos:line="5" pos:column="29">SBuf<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">t<pos:position pos:line="5" pos:column="35"/></name></expr></argument>)<pos:position pos:line="5" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt></block></while>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

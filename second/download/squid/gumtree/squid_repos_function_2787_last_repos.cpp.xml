<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2787_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">AnyP<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">ProtocolType<pos:position pos:line="1" pos:column="19"/></name></name></type>
<name pos:line="2" pos:column="1">urlParseProtocol<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">b<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// make e point to the ':' character</comment>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">e<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">b<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">+<pos:position pos:line="5" pos:column="24"/></operator> <call><name pos:line="5" pos:column="25">strcspn<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">b<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="36">":"<pos:position pos:line="5" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">len<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><name pos:line="6" pos:column="15">e<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">-<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">b<pos:position pos:line="6" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* test common stuff first */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">strncasecmp<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">b<pos:position pos:line="10" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="24">"http"<pos:position pos:line="10" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="32">len<pos:position pos:line="10" pos:column="35"/></name></expr></argument>)<pos:position pos:line="10" pos:column="36"/></argument_list></call> <operator pos:line="10" pos:column="37">==<pos:position pos:line="10" pos:column="39"/></operator> <literal type="number" pos:line="10" pos:column="40">0<pos:position pos:line="10" pos:column="41"/></literal></expr>)<pos:position pos:line="10" pos:column="42"/></condition><then pos:line="10" pos:column="42">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name><name pos:line="11" pos:column="16">AnyP<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">::<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">PROTO_HTTP<pos:position pos:line="11" pos:column="32"/></name></name></expr>;<pos:position pos:line="11" pos:column="33"/></return></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">strncasecmp<pos:position pos:line="13" pos:column="20"/></name><argument_list pos:line="13" pos:column="20">(<argument><expr><name pos:line="13" pos:column="21">b<pos:position pos:line="13" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="24">"ftp"<pos:position pos:line="13" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">len<pos:position pos:line="13" pos:column="34"/></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call> <operator pos:line="13" pos:column="36">==<pos:position pos:line="13" pos:column="38"/></operator> <literal type="number" pos:line="13" pos:column="39">0<pos:position pos:line="13" pos:column="40"/></literal></expr>)<pos:position pos:line="13" pos:column="41"/></condition><then pos:line="13" pos:column="41">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><name><name pos:line="14" pos:column="16">AnyP<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">::<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">PROTO_FTP<pos:position pos:line="14" pos:column="31"/></name></name></expr>;<pos:position pos:line="14" pos:column="32"/></return></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">strncasecmp<pos:position pos:line="16" pos:column="20"/></name><argument_list pos:line="16" pos:column="20">(<argument><expr><name pos:line="16" pos:column="21">b<pos:position pos:line="16" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="24">"https"<pos:position pos:line="16" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">len<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call> <operator pos:line="16" pos:column="38">==<pos:position pos:line="16" pos:column="40"/></operator> <literal type="number" pos:line="16" pos:column="41">0<pos:position pos:line="16" pos:column="42"/></literal></expr>)<pos:position pos:line="16" pos:column="43"/></condition><then pos:line="16" pos:column="43">
        <block type="pseudo"><return pos:line="17" pos:column="9">return <expr><name><name pos:line="17" pos:column="16">AnyP<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">::<pos:position pos:line="17" pos:column="22"/></operator><name pos:line="17" pos:column="22">PROTO_HTTPS<pos:position pos:line="17" pos:column="33"/></name></name></expr>;<pos:position pos:line="17" pos:column="34"/></return></block></then></if>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">strncasecmp<pos:position pos:line="19" pos:column="20"/></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">b<pos:position pos:line="19" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="24">"file"<pos:position pos:line="19" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="32">len<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call> <operator pos:line="19" pos:column="37">==<pos:position pos:line="19" pos:column="39"/></operator> <literal type="number" pos:line="19" pos:column="40">0<pos:position pos:line="19" pos:column="41"/></literal></expr>)<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42">
        <block type="pseudo"><return pos:line="20" pos:column="9">return <expr><name><name pos:line="20" pos:column="16">AnyP<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">::<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">PROTO_FTP<pos:position pos:line="20" pos:column="31"/></name></name></expr>;<pos:position pos:line="20" pos:column="32"/></return></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">strncasecmp<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">b<pos:position pos:line="22" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="24">"coap"<pos:position pos:line="22" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="32">len<pos:position pos:line="22" pos:column="35"/></name></expr></argument>)<pos:position pos:line="22" pos:column="36"/></argument_list></call> <operator pos:line="22" pos:column="37">==<pos:position pos:line="22" pos:column="39"/></operator> <literal type="number" pos:line="22" pos:column="40">0<pos:position pos:line="22" pos:column="41"/></literal></expr>)<pos:position pos:line="22" pos:column="42"/></condition><then pos:line="22" pos:column="42">
        <block type="pseudo"><return pos:line="23" pos:column="9">return <expr><name><name pos:line="23" pos:column="16">AnyP<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">::<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">PROTO_COAP<pos:position pos:line="23" pos:column="32"/></name></name></expr>;<pos:position pos:line="23" pos:column="33"/></return></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">strncasecmp<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name pos:line="25" pos:column="21">b<pos:position pos:line="25" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="24">"coaps"<pos:position pos:line="25" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="33">len<pos:position pos:line="25" pos:column="36"/></name></expr></argument>)<pos:position pos:line="25" pos:column="37"/></argument_list></call> <operator pos:line="25" pos:column="38">==<pos:position pos:line="25" pos:column="40"/></operator> <literal type="number" pos:line="25" pos:column="41">0<pos:position pos:line="25" pos:column="42"/></literal></expr>)<pos:position pos:line="25" pos:column="43"/></condition><then pos:line="25" pos:column="43">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><name><name pos:line="26" pos:column="16">AnyP<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">::<pos:position pos:line="26" pos:column="22"/></operator><name pos:line="26" pos:column="22">PROTO_COAPS<pos:position pos:line="26" pos:column="33"/></name></name></expr>;<pos:position pos:line="26" pos:column="34"/></return></block></then></if>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">strncasecmp<pos:position pos:line="28" pos:column="20"/></name><argument_list pos:line="28" pos:column="20">(<argument><expr><name pos:line="28" pos:column="21">b<pos:position pos:line="28" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="24">"gopher"<pos:position pos:line="28" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">len<pos:position pos:line="28" pos:column="37"/></name></expr></argument>)<pos:position pos:line="28" pos:column="38"/></argument_list></call> <operator pos:line="28" pos:column="39">==<pos:position pos:line="28" pos:column="41"/></operator> <literal type="number" pos:line="28" pos:column="42">0<pos:position pos:line="28" pos:column="43"/></literal></expr>)<pos:position pos:line="28" pos:column="44"/></condition><then pos:line="28" pos:column="44">
        <block type="pseudo"><return pos:line="29" pos:column="9">return <expr><name><name pos:line="29" pos:column="16">AnyP<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">::<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">PROTO_GOPHER<pos:position pos:line="29" pos:column="34"/></name></name></expr>;<pos:position pos:line="29" pos:column="35"/></return></block></then></if>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><call><name pos:line="31" pos:column="9">strncasecmp<pos:position pos:line="31" pos:column="20"/></name><argument_list pos:line="31" pos:column="20">(<argument><expr><name pos:line="31" pos:column="21">b<pos:position pos:line="31" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="24">"wais"<pos:position pos:line="31" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="32">len<pos:position pos:line="31" pos:column="35"/></name></expr></argument>)<pos:position pos:line="31" pos:column="36"/></argument_list></call> <operator pos:line="31" pos:column="37">==<pos:position pos:line="31" pos:column="39"/></operator> <literal type="number" pos:line="31" pos:column="40">0<pos:position pos:line="31" pos:column="41"/></literal></expr>)<pos:position pos:line="31" pos:column="42"/></condition><then pos:line="31" pos:column="42">
        <block type="pseudo"><return pos:line="32" pos:column="9">return <expr><name><name pos:line="32" pos:column="16">AnyP<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">::<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">PROTO_WAIS<pos:position pos:line="32" pos:column="32"/></name></name></expr>;<pos:position pos:line="32" pos:column="33"/></return></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><call><name pos:line="34" pos:column="9">strncasecmp<pos:position pos:line="34" pos:column="20"/></name><argument_list pos:line="34" pos:column="20">(<argument><expr><name pos:line="34" pos:column="21">b<pos:position pos:line="34" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="24">"cache_object"<pos:position pos:line="34" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="40">len<pos:position pos:line="34" pos:column="43"/></name></expr></argument>)<pos:position pos:line="34" pos:column="44"/></argument_list></call> <operator pos:line="34" pos:column="45">==<pos:position pos:line="34" pos:column="47"/></operator> <literal type="number" pos:line="34" pos:column="48">0<pos:position pos:line="34" pos:column="49"/></literal></expr>)<pos:position pos:line="34" pos:column="50"/></condition><then pos:line="34" pos:column="50">
        <block type="pseudo"><return pos:line="35" pos:column="9">return <expr><name><name pos:line="35" pos:column="16">AnyP<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">::<pos:position pos:line="35" pos:column="22"/></operator><name pos:line="35" pos:column="22">PROTO_CACHE_OBJECT<pos:position pos:line="35" pos:column="40"/></name></name></expr>;<pos:position pos:line="35" pos:column="41"/></return></block></then></if>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><call><name pos:line="37" pos:column="9">strncasecmp<pos:position pos:line="37" pos:column="20"/></name><argument_list pos:line="37" pos:column="20">(<argument><expr><name pos:line="37" pos:column="21">b<pos:position pos:line="37" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="24">"urn"<pos:position pos:line="37" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="31">len<pos:position pos:line="37" pos:column="34"/></name></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call> <operator pos:line="37" pos:column="36">==<pos:position pos:line="37" pos:column="38"/></operator> <literal type="number" pos:line="37" pos:column="39">0<pos:position pos:line="37" pos:column="40"/></literal></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41">
        <block type="pseudo"><return pos:line="38" pos:column="9">return <expr><name><name pos:line="38" pos:column="16">AnyP<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">::<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">PROTO_URN<pos:position pos:line="38" pos:column="31"/></name></name></expr>;<pos:position pos:line="38" pos:column="32"/></return></block></then></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><call><name pos:line="40" pos:column="9">strncasecmp<pos:position pos:line="40" pos:column="20"/></name><argument_list pos:line="40" pos:column="20">(<argument><expr><name pos:line="40" pos:column="21">b<pos:position pos:line="40" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="24">"whois"<pos:position pos:line="40" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="33">len<pos:position pos:line="40" pos:column="36"/></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call> <operator pos:line="40" pos:column="38">==<pos:position pos:line="40" pos:column="40"/></operator> <literal type="number" pos:line="40" pos:column="41">0<pos:position pos:line="40" pos:column="42"/></literal></expr>)<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43">
        <block type="pseudo"><return pos:line="41" pos:column="9">return <expr><name><name pos:line="41" pos:column="16">AnyP<pos:position pos:line="41" pos:column="20"/></name><operator pos:line="41" pos:column="20">::<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="22">PROTO_WHOIS<pos:position pos:line="41" pos:column="33"/></name></name></expr>;<pos:position pos:line="41" pos:column="34"/></return></block></then></if>

    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">len<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">&gt;<pos:position pos:line="43" pos:column="17"/></operator> <literal type="number" pos:line="43" pos:column="15">0<pos:position pos:line="43" pos:column="16"/></literal></expr>)<pos:position pos:line="43" pos:column="17"/></condition><then pos:line="43" pos:column="17">
        <block type="pseudo"><return pos:line="44" pos:column="9">return <expr><name><name pos:line="44" pos:column="16">AnyP<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">::<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="22">PROTO_UNKNOWN<pos:position pos:line="44" pos:column="35"/></name></name></expr>;<pos:position pos:line="44" pos:column="36"/></return></block></then></if>

    <return pos:line="46" pos:column="5">return <expr><name><name pos:line="46" pos:column="12">AnyP<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">::<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">PROTO_NONE<pos:position pos:line="46" pos:column="28"/></name></name></expr>;<pos:position pos:line="46" pos:column="29"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

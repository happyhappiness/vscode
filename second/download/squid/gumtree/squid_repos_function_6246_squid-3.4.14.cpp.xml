<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6246_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">username_quote<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="28">header<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">c<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">buf<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">buf_cursor<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">header<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">NULL<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24"> <block pos:line="9" pos:column="25">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">buf<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <cast type="static" pos:line="10" pos:column="15">static_cast<argument_list type="generic" pos:line="10" pos:column="26">&lt;<argument><expr><name pos:line="10" pos:column="27">char<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">*<pos:position pos:line="10" pos:column="33"/></operator></expr></argument>&gt;<pos:position pos:line="10" pos:column="37"/></argument_list><argument_list pos:line="10" pos:column="34">(<argument><expr><call><name pos:line="10" pos:column="35">xcalloc<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><literal type="number" pos:line="10" pos:column="43">1<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="46">1<pos:position pos:line="10" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></cast></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">buf<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <literal type="char" pos:line="11" pos:column="16">'\0'<pos:position pos:line="11" pos:column="20"/></literal></expr>;<pos:position pos:line="11" pos:column="21"/></expr_stmt>
        <return pos:line="12" pos:column="9">return <expr><name pos:line="12" pos:column="16">buf<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="15" pos:column="5">buf<pos:position pos:line="15" pos:column="8"/></name> <operator pos:line="15" pos:column="9">=<pos:position pos:line="15" pos:column="10"/></operator> <cast type="static" pos:line="15" pos:column="11">static_cast<argument_list type="generic" pos:line="15" pos:column="22">&lt;<argument><expr><name pos:line="15" pos:column="23">char<pos:position pos:line="15" pos:column="27"/></name> <operator pos:line="15" pos:column="28">*<pos:position pos:line="15" pos:column="29"/></operator></expr></argument>&gt;<pos:position pos:line="15" pos:column="33"/></argument_list><argument_list pos:line="15" pos:column="30">(<argument><expr><call><name pos:line="15" pos:column="31">xcalloc<pos:position pos:line="15" pos:column="38"/></name><argument_list pos:line="15" pos:column="38">(<argument><expr><literal type="number" pos:line="15" pos:column="39">1<pos:position pos:line="15" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="15" pos:column="42">(<pos:position pos:line="15" pos:column="43"/></operator><call><name pos:line="15" pos:column="43">strlen<pos:position pos:line="15" pos:column="49"/></name><argument_list pos:line="15" pos:column="49">(<argument><expr><name pos:line="15" pos:column="50">header<pos:position pos:line="15" pos:column="56"/></name></expr></argument>)<pos:position pos:line="15" pos:column="57"/></argument_list></call> <operator pos:line="15" pos:column="58">*<pos:position pos:line="15" pos:column="59"/></operator> <literal type="number" pos:line="15" pos:column="60">3<pos:position pos:line="15" pos:column="61"/></literal><operator pos:line="15" pos:column="61">)<pos:position pos:line="15" pos:column="62"/></operator> <operator pos:line="15" pos:column="63">+<pos:position pos:line="15" pos:column="64"/></operator> <literal type="number" pos:line="15" pos:column="65">1<pos:position pos:line="15" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="67"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="68"/></argument_list></cast></expr>;<pos:position pos:line="15" pos:column="69"/></expr_stmt>
    <expr_stmt><expr><name pos:line="16" pos:column="5">buf_cursor<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <name pos:line="16" pos:column="18">buf<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
    <comment type="block" pos:line="17" pos:column="5">/*
     * We escape: space \x00-\x1F and space (0x40) and \x7F-\xFF
     * to prevent garbage in the logs. CR and LF are also there just in case.
     */</comment>

    <while pos:line="22" pos:column="5">while <condition pos:line="22" pos:column="11">(<expr><operator pos:line="22" pos:column="12">(<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="13">c<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <operator pos:line="22" pos:column="17">*<pos:position pos:line="22" pos:column="18"/></operator><operator pos:line="22" pos:column="18">(<pos:position pos:line="22" pos:column="19"/></operator><specifier pos:line="22" pos:column="19">const<pos:position pos:line="22" pos:column="24"/></specifier> <name pos:line="22" pos:column="25">unsigned<pos:position pos:line="22" pos:column="33"/></name> <name pos:line="22" pos:column="34">char<pos:position pos:line="22" pos:column="38"/></name> <operator pos:line="22" pos:column="39">*<pos:position pos:line="22" pos:column="40"/></operator><operator pos:line="22" pos:column="40">)<pos:position pos:line="22" pos:column="41"/></operator> <name pos:line="22" pos:column="42">header<pos:position pos:line="22" pos:column="48"/></name><operator pos:line="22" pos:column="48">++<pos:position pos:line="22" pos:column="50"/></operator><operator pos:line="22" pos:column="50">)<pos:position pos:line="22" pos:column="51"/></operator> <operator pos:line="22" pos:column="52">!=<pos:position pos:line="22" pos:column="54"/></operator> <literal type="char" pos:line="22" pos:column="55">'\0'<pos:position pos:line="22" pos:column="59"/></literal></expr>)<pos:position pos:line="22" pos:column="60"/></condition> <block pos:line="22" pos:column="61">{
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">c<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">==<pos:position pos:line="23" pos:column="17"/></operator> <literal type="char" pos:line="23" pos:column="18">'\r'<pos:position pos:line="23" pos:column="22"/></literal></expr>)<pos:position pos:line="23" pos:column="23"/></condition><then pos:line="23" pos:column="23"> <block pos:line="23" pos:column="24">{
            <expr_stmt><expr><operator pos:line="24" pos:column="13">*<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">buf_cursor<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">=<pos:position pos:line="24" pos:column="26"/></operator> <literal type="char" pos:line="24" pos:column="27">'\\'<pos:position pos:line="24" pos:column="31"/></literal></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="25" pos:column="13">++<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">buf_cursor<pos:position pos:line="25" pos:column="25"/></name></expr>;<pos:position pos:line="25" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="26" pos:column="13">*<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">buf_cursor<pos:position pos:line="26" pos:column="24"/></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <literal type="char" pos:line="26" pos:column="27">'r'<pos:position pos:line="26" pos:column="30"/></literal></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="27" pos:column="13">++<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="15">buf_cursor<pos:position pos:line="27" pos:column="25"/></name></expr>;<pos:position pos:line="27" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then> <elseif pos:line="28" pos:column="11">else <if pos:line="28" pos:column="16">if <condition pos:line="28" pos:column="19">(<expr><name pos:line="28" pos:column="20">c<pos:position pos:line="28" pos:column="21"/></name> <operator pos:line="28" pos:column="22">==<pos:position pos:line="28" pos:column="24"/></operator> <literal type="char" pos:line="28" pos:column="25">'\n'<pos:position pos:line="28" pos:column="29"/></literal></expr>)<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30"> <block pos:line="28" pos:column="31">{
            <expr_stmt><expr><operator pos:line="29" pos:column="13">*<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">buf_cursor<pos:position pos:line="29" pos:column="24"/></name> <operator pos:line="29" pos:column="25">=<pos:position pos:line="29" pos:column="26"/></operator> <literal type="char" pos:line="29" pos:column="27">'\\'<pos:position pos:line="29" pos:column="31"/></literal></expr>;<pos:position pos:line="29" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="30" pos:column="13">++<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">buf_cursor<pos:position pos:line="30" pos:column="25"/></name></expr>;<pos:position pos:line="30" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="31" pos:column="13">*<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">buf_cursor<pos:position pos:line="31" pos:column="24"/></name> <operator pos:line="31" pos:column="25">=<pos:position pos:line="31" pos:column="26"/></operator> <literal type="char" pos:line="31" pos:column="27">'n'<pos:position pos:line="31" pos:column="30"/></literal></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="32" pos:column="13">++<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="15">buf_cursor<pos:position pos:line="32" pos:column="25"/></name></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if></elseif> <elseif pos:line="33" pos:column="11">else <if pos:line="33" pos:column="16">if <condition pos:line="33" pos:column="19">(<expr><name pos:line="33" pos:column="20">c<pos:position pos:line="33" pos:column="21"/></name> <operator pos:line="33" pos:column="22">&lt;=<pos:position pos:line="33" pos:column="27"/></operator> <literal type="number" pos:line="33" pos:column="25">0x1F<pos:position pos:line="33" pos:column="29"/></literal>
                   <operator pos:line="34" pos:column="20">||<pos:position pos:line="34" pos:column="22"/></operator> <name pos:line="34" pos:column="23">c<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">&gt;=<pos:position pos:line="34" pos:column="30"/></operator> <literal type="number" pos:line="34" pos:column="28">0x7F<pos:position pos:line="34" pos:column="32"/></literal>
                   <operator pos:line="35" pos:column="20">||<pos:position pos:line="35" pos:column="22"/></operator> <name pos:line="35" pos:column="23">c<pos:position pos:line="35" pos:column="24"/></name> <operator pos:line="35" pos:column="25">==<pos:position pos:line="35" pos:column="27"/></operator> <literal type="char" pos:line="35" pos:column="28">'%'<pos:position pos:line="35" pos:column="31"/></literal>
                   <operator pos:line="36" pos:column="20">||<pos:position pos:line="36" pos:column="22"/></operator> <name pos:line="36" pos:column="23">c<pos:position pos:line="36" pos:column="24"/></name> <operator pos:line="36" pos:column="25">==<pos:position pos:line="36" pos:column="27"/></operator> <literal type="char" pos:line="36" pos:column="28">' '<pos:position pos:line="36" pos:column="31"/></literal></expr>)<pos:position pos:line="36" pos:column="32"/></condition><then pos:line="36" pos:column="32"> <block pos:line="36" pos:column="33">{
            <expr_stmt><expr><operator pos:line="37" pos:column="13">*<pos:position pos:line="37" pos:column="14"/></operator><name pos:line="37" pos:column="14">buf_cursor<pos:position pos:line="37" pos:column="24"/></name> <operator pos:line="37" pos:column="25">=<pos:position pos:line="37" pos:column="26"/></operator> <literal type="char" pos:line="37" pos:column="27">'%'<pos:position pos:line="37" pos:column="30"/></literal></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="38" pos:column="13">++<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="15">buf_cursor<pos:position pos:line="38" pos:column="25"/></name></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name pos:line="39" pos:column="13">i<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <name pos:line="39" pos:column="17">c<pos:position pos:line="39" pos:column="18"/></name> <operator pos:line="39" pos:column="19">*<pos:position pos:line="39" pos:column="20"/></operator> <literal type="number" pos:line="39" pos:column="21">2<pos:position pos:line="39" pos:column="22"/></literal></expr>;<pos:position pos:line="39" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="40" pos:column="13">*<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">buf_cursor<pos:position pos:line="40" pos:column="24"/></name> <operator pos:line="40" pos:column="25">=<pos:position pos:line="40" pos:column="26"/></operator> <name><name pos:line="40" pos:column="27">c2x<pos:position pos:line="40" pos:column="30"/></name><index pos:line="40" pos:column="30">[<expr><name pos:line="40" pos:column="31">i<pos:position pos:line="40" pos:column="32"/></name></expr>]<pos:position pos:line="40" pos:column="33"/></index></name></expr>;<pos:position pos:line="40" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="41" pos:column="13">++<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">buf_cursor<pos:position pos:line="41" pos:column="25"/></name></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="42" pos:column="13">*<pos:position pos:line="42" pos:column="14"/></operator><name pos:line="42" pos:column="14">buf_cursor<pos:position pos:line="42" pos:column="24"/></name> <operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator> <name><name pos:line="42" pos:column="27">c2x<pos:position pos:line="42" pos:column="30"/></name><index pos:line="42" pos:column="30">[<expr><name pos:line="42" pos:column="31">i<pos:position pos:line="42" pos:column="32"/></name> <operator pos:line="42" pos:column="33">+<pos:position pos:line="42" pos:column="34"/></operator> <literal type="number" pos:line="42" pos:column="35">1<pos:position pos:line="42" pos:column="36"/></literal></expr>]<pos:position pos:line="42" pos:column="37"/></index></name></expr>;<pos:position pos:line="42" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="43" pos:column="13">++<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="15">buf_cursor<pos:position pos:line="43" pos:column="25"/></name></expr>;<pos:position pos:line="43" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if></elseif> <else pos:line="44" pos:column="11">else <block pos:line="44" pos:column="16">{
            <expr_stmt><expr><operator pos:line="45" pos:column="13">*<pos:position pos:line="45" pos:column="14"/></operator><name pos:line="45" pos:column="14">buf_cursor<pos:position pos:line="45" pos:column="24"/></name> <operator pos:line="45" pos:column="25">=<pos:position pos:line="45" pos:column="26"/></operator> <operator pos:line="45" pos:column="27">(<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="28">char<pos:position pos:line="45" pos:column="32"/></name><operator pos:line="45" pos:column="32">)<pos:position pos:line="45" pos:column="33"/></operator> <name pos:line="45" pos:column="34">c<pos:position pos:line="45" pos:column="35"/></name></expr>;<pos:position pos:line="45" pos:column="36"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="46" pos:column="13">++<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="15">buf_cursor<pos:position pos:line="46" pos:column="25"/></name></expr>;<pos:position pos:line="46" pos:column="26"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></else></if>
    }<pos:position pos:line="48" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="50" pos:column="5">*<pos:position pos:line="50" pos:column="6"/></operator><name pos:line="50" pos:column="6">buf_cursor<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <literal type="char" pos:line="50" pos:column="19">'\0'<pos:position pos:line="50" pos:column="23"/></literal></expr>;<pos:position pos:line="50" pos:column="24"/></expr_stmt>
    <return pos:line="51" pos:column="5">return <expr><name pos:line="51" pos:column="12">buf<pos:position pos:line="51" pos:column="15"/></name></expr>;<pos:position pos:line="51" pos:column="16"/></return>
}<pos:position pos:line="52" pos:column="2"/></block></function></unit>

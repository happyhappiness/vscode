<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5054_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">HeaderUpdater<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">readMore<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">char<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">why<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">47<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">7<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"from "<pos:position pos:line="4" pos:column="26"/></literal> <operator pos:line="4" pos:column="27">&lt;&lt;<pos:position pos:line="4" pos:column="35"/></operator> <name pos:line="4" pos:column="30">bytesRead<pos:position pos:line="4" pos:column="39"/></name> <operator pos:line="4" pos:column="40">&lt;&lt;<pos:position pos:line="4" pos:column="48"/></operator> <literal type="string" pos:line="4" pos:column="43">" because "<pos:position pos:line="4" pos:column="54"/></literal> <operator pos:line="4" pos:column="55">&lt;&lt;<pos:position pos:line="4" pos:column="63"/></operator> <name pos:line="4" pos:column="58">why<pos:position pos:line="4" pos:column="61"/></name></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">reader<pos:position pos:line="5" pos:column="16"/></name></expr></argument>)<pos:position pos:line="5" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">readerBuffer<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">.<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">clear<pos:position pos:line="6" pos:column="23"/></name></name><argument_list pos:line="6" pos:column="23">()<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">storeRead<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">(<argument><expr><name pos:line="7" pos:column="15">reader<pos:position pos:line="7" pos:column="21"/></name></expr></argument>,
              <argument><expr><call><name><name pos:line="8" pos:column="15">readerBuffer<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">rawSpace<pos:position pos:line="8" pos:column="36"/></name></name><argument_list pos:line="8" pos:column="36">(<argument><expr><name><name pos:line="8" pos:column="37">store<pos:position pos:line="8" pos:column="42"/></name><operator pos:line="8" pos:column="42">-&gt;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="44">slotSize<pos:position pos:line="8" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr></argument>,
              <argument><expr><name><name pos:line="9" pos:column="15">store<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">slotSize<pos:position pos:line="9" pos:column="30"/></name></name></expr></argument>,
              <argument><expr><name pos:line="10" pos:column="15">bytesRead<pos:position pos:line="10" pos:column="24"/></name></expr></argument>,
              <argument><expr><operator pos:line="11" pos:column="15">&amp;<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="16">NoteRead<pos:position pos:line="11" pos:column="24"/></name></expr></argument>,
              <argument><expr><name pos:line="12" pos:column="15">this<pos:position pos:line="12" pos:column="19"/></name></expr></argument>)<pos:position pos:line="12" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="21"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

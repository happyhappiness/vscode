<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_133_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Transport<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">InitTls<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_GNUTLS<pos:position pos:line="4" pos:column="15"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugVerbose<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><literal type="number" pos:line="5" pos:column="18">3<pos:position pos:line="5" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="21">"Initializing TLS library..."<pos:position pos:line="5" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="52"/></expr_stmt>
    <comment type="line" pos:line="6" pos:column="5">// NP: gnutls init is re-entrant and lock-counted with deinit but not thread safe.</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">gnutls_global_init<pos:position pos:line="7" pos:column="27"/></name><argument_list pos:line="7" pos:column="27">()<pos:position pos:line="7" pos:column="29"/></argument_list></call> <operator pos:line="7" pos:column="30">!=<pos:position pos:line="7" pos:column="32"/></operator> <name pos:line="7" pos:column="33">GNUTLS_E_SUCCESS<pos:position pos:line="7" pos:column="49"/></name></expr>)<pos:position pos:line="7" pos:column="50"/></condition><then pos:line="7" pos:column="50"> <block pos:line="7" pos:column="51">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">int<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">xerrno<pos:position pos:line="8" pos:column="19"/></name> <init pos:line="8" pos:column="20">= <expr><name pos:line="8" pos:column="22">errno<pos:position pos:line="8" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">std<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">::<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">cerr<pos:position pos:line="9" pos:column="18"/></name></name> <operator pos:line="9" pos:column="19">&lt;&lt;<pos:position pos:line="9" pos:column="27"/></operator> <literal type="string" pos:line="9" pos:column="22">"FATAL ERROR: TLS Initialize failed: "<pos:position pos:line="9" pos:column="60"/></literal> <operator pos:line="9" pos:column="61">&lt;&lt;<pos:position pos:line="9" pos:column="69"/></operator> <call><name pos:line="9" pos:column="64">xstrerr<pos:position pos:line="9" pos:column="71"/></name><argument_list pos:line="9" pos:column="71">(<argument><expr><name pos:line="9" pos:column="72">xerrno<pos:position pos:line="9" pos:column="78"/></name></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call> <operator pos:line="9" pos:column="80">&lt;&lt;<pos:position pos:line="9" pos:column="88"/></operator> <name><name pos:line="9" pos:column="83">std<pos:position pos:line="9" pos:column="86"/></name><operator pos:line="9" pos:column="86">::<pos:position pos:line="9" pos:column="88"/></operator><name pos:line="9" pos:column="88">endl<pos:position pos:line="9" pos:column="92"/></name></name></expr>;<pos:position pos:line="9" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">exit<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">(<argument><expr><literal type="number" pos:line="10" pos:column="14">1<pos:position pos:line="10" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="13" pos:column="5">Config<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">.<pos:position pos:line="13" pos:column="12"/></operator><name pos:line="13" pos:column="12">tlsEnabled<pos:position pos:line="13" pos:column="22"/></name></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <literal type="boolean" pos:line="13" pos:column="25">true<pos:position pos:line="13" pos:column="29"/></literal></expr>;<pos:position pos:line="13" pos:column="30"/></expr_stmt>

<cpp:if pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">if<pos:position pos:line="15" pos:column="4"/></cpp:directive> <expr><name pos:line="15" pos:column="5">USE_GNUTLS<pos:position pos:line="15" pos:column="15"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">gnutls_global_set_log_function<pos:position pos:line="16" pos:column="35"/></name><argument_list pos:line="16" pos:column="35">(<argument><expr><operator pos:line="16" pos:column="36">&amp;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="37">gnutlsDebugHandler<pos:position pos:line="16" pos:column="55"/></name></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">gnutls_global_set_log_level<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name><name pos:line="17" pos:column="33">scParams<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">.<pos:position pos:line="17" pos:column="42"/></operator><name pos:line="17" pos:column="42">verbosityLevel<pos:position pos:line="17" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="58"/></expr_stmt>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="line" pos:line="20" pos:column="5">// Initialize for anonymous TLS</comment>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">gnutls_anon_allocate_client_credentials<pos:position pos:line="21" pos:column="44"/></name><argument_list pos:line="21" pos:column="44">(<argument><expr><operator pos:line="21" pos:column="45">&amp;<pos:position pos:line="21" pos:column="50"/></operator><name><name pos:line="21" pos:column="46">Config<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">.<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="53">anonCredentials<pos:position pos:line="21" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="70"/></expr_stmt>

    <comment type="line" pos:line="23" pos:column="5">// Initialize for X.509 certificate exchange</comment>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">gnutls_certificate_allocate_credentials<pos:position pos:line="24" pos:column="44"/></name><argument_list pos:line="24" pos:column="44">(<argument><expr><operator pos:line="24" pos:column="45">&amp;<pos:position pos:line="24" pos:column="50"/></operator><name><name pos:line="24" pos:column="46">Config<pos:position pos:line="24" pos:column="52"/></name><operator pos:line="24" pos:column="52">.<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="53">certCredentials<pos:position pos:line="24" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="70"/></expr_stmt>
    <for pos:line="25" pos:column="5">for <control pos:line="25" pos:column="9">(<init><decl><type><name><name pos:line="25" pos:column="10">std<pos:position pos:line="25" pos:column="13"/></name><operator pos:line="25" pos:column="13">::<pos:position pos:line="25" pos:column="15"/></operator><name><name pos:line="25" pos:column="15">list<pos:position pos:line="25" pos:column="19"/></name><argument_list type="generic" pos:line="25" pos:column="19">&lt;<argument><expr><name><name pos:line="25" pos:column="20">std<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">::<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">string<pos:position pos:line="25" pos:column="31"/></name></name></expr></argument>&gt;<pos:position pos:line="25" pos:column="35"/></argument_list></name><operator pos:line="25" pos:column="32">::<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="34">const_iterator<pos:position pos:line="25" pos:column="48"/></name></name></type> <name pos:line="25" pos:column="49">i<pos:position pos:line="25" pos:column="50"/></name> <init pos:line="25" pos:column="51">= <expr><call><name><name pos:line="25" pos:column="53">Config<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">.<pos:position pos:line="25" pos:column="60"/></operator><name pos:line="25" pos:column="60">caFiles<pos:position pos:line="25" pos:column="67"/></name><operator pos:line="25" pos:column="67">.<pos:position pos:line="25" pos:column="68"/></operator><name pos:line="25" pos:column="68">begin<pos:position pos:line="25" pos:column="73"/></name></name><argument_list pos:line="25" pos:column="73">()<pos:position pos:line="25" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="76"/></init> <condition><expr><name pos:line="25" pos:column="77">i<pos:position pos:line="25" pos:column="78"/></name> <operator pos:line="25" pos:column="79">!=<pos:position pos:line="25" pos:column="81"/></operator> <call><name><name pos:line="25" pos:column="82">Config<pos:position pos:line="25" pos:column="88"/></name><operator pos:line="25" pos:column="88">.<pos:position pos:line="25" pos:column="89"/></operator><name pos:line="25" pos:column="89">caFiles<pos:position pos:line="25" pos:column="96"/></name><operator pos:line="25" pos:column="96">.<pos:position pos:line="25" pos:column="97"/></operator><name pos:line="25" pos:column="97">end<pos:position pos:line="25" pos:column="100"/></name></name><argument_list pos:line="25" pos:column="100">()<pos:position pos:line="25" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="103"/></condition> <incr><expr><operator pos:line="25" pos:column="104">++<pos:position pos:line="25" pos:column="106"/></operator><name pos:line="25" pos:column="106">i<pos:position pos:line="25" pos:column="107"/></name></expr></incr>)<pos:position pos:line="25" pos:column="108"/></control> <block pos:line="25" pos:column="109">{
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">int<pos:position pos:line="26" pos:column="12"/></name></type> <name pos:line="26" pos:column="13">x<pos:position pos:line="26" pos:column="14"/></name> <init pos:line="26" pos:column="15">= <expr><call><name pos:line="26" pos:column="17">gnutls_certificate_set_x509_trust_file<pos:position pos:line="26" pos:column="55"/></name><argument_list pos:line="26" pos:column="55">(<argument><expr><name><name pos:line="26" pos:column="56">Config<pos:position pos:line="26" pos:column="62"/></name><operator pos:line="26" pos:column="62">.<pos:position pos:line="26" pos:column="63"/></operator><name pos:line="26" pos:column="63">certCredentials<pos:position pos:line="26" pos:column="78"/></name></name></expr></argument>, <argument><expr><call><name><operator pos:line="26" pos:column="80">(<pos:position pos:line="26" pos:column="81"/></operator><operator pos:line="26" pos:column="81">*<pos:position pos:line="26" pos:column="82"/></operator><name pos:line="26" pos:column="82">i<pos:position pos:line="26" pos:column="83"/></name><operator pos:line="26" pos:column="83">)<pos:position pos:line="26" pos:column="84"/></operator><operator pos:line="26" pos:column="84">.<pos:position pos:line="26" pos:column="85"/></operator><name pos:line="26" pos:column="85">c_str<pos:position pos:line="26" pos:column="90"/></name></name><argument_list pos:line="26" pos:column="90">()<pos:position pos:line="26" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="94">GNUTLS_X509_FMT_PEM<pos:position pos:line="26" pos:column="113"/></name></expr></argument>)<pos:position pos:line="26" pos:column="114"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="115"/></decl_stmt>
        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">x<pos:position pos:line="27" pos:column="14"/></name> <operator pos:line="27" pos:column="15">&lt;<pos:position pos:line="27" pos:column="19"/></operator> <literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19"> <block pos:line="27" pos:column="20">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">debugVerbose<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><literal type="number" pos:line="28" pos:column="26">3<pos:position pos:line="28" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="29">"WARNING: Failed to load Certificate Authorities from "<pos:position pos:line="28" pos:column="84"/></literal> <operator pos:line="28" pos:column="85">&lt;&lt;<pos:position pos:line="28" pos:column="93"/></operator> <operator pos:line="28" pos:column="88">*<pos:position pos:line="28" pos:column="89"/></operator><name pos:line="28" pos:column="89">i<pos:position pos:line="28" pos:column="90"/></name></expr></argument>)<pos:position pos:line="28" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="92"/></expr_stmt>
        }<pos:position pos:line="29" pos:column="10"/></block></then> <else pos:line="29" pos:column="11">else <block pos:line="29" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="30" pos:column="13">debugVerbose<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><literal type="number" pos:line="30" pos:column="26">3<pos:position pos:line="30" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="29">"Loaded "<pos:position pos:line="30" pos:column="38"/></literal> <operator pos:line="30" pos:column="39">&lt;&lt;<pos:position pos:line="30" pos:column="47"/></operator> <name pos:line="30" pos:column="42">x<pos:position pos:line="30" pos:column="43"/></name> <operator pos:line="30" pos:column="44">&lt;&lt;<pos:position pos:line="30" pos:column="52"/></operator> <literal type="string" pos:line="30" pos:column="47">" Certificate Authorities from "<pos:position pos:line="30" pos:column="79"/></literal> <operator pos:line="30" pos:column="80">&lt;&lt;<pos:position pos:line="30" pos:column="88"/></operator> <operator pos:line="30" pos:column="83">*<pos:position pos:line="30" pos:column="84"/></operator><name pos:line="30" pos:column="84">i<pos:position pos:line="30" pos:column="85"/></name></expr></argument>)<pos:position pos:line="30" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="87"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></else></if>
    }<pos:position pos:line="32" pos:column="6"/></block></for>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">gnutls_certificate_set_verify_function<pos:position pos:line="33" pos:column="43"/></name><argument_list pos:line="33" pos:column="43">(<argument><expr><name><name pos:line="33" pos:column="44">Config<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">.<pos:position pos:line="33" pos:column="51"/></operator><name pos:line="33" pos:column="51">certCredentials<pos:position pos:line="33" pos:column="66"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="68">verifyTlsCertificate<pos:position pos:line="33" pos:column="88"/></name></expr></argument>)<pos:position pos:line="33" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="90"/></expr_stmt>

    <for pos:line="35" pos:column="5">for <control pos:line="35" pos:column="9">(<init><decl><type><name><name pos:line="35" pos:column="10">std<pos:position pos:line="35" pos:column="13"/></name><operator pos:line="35" pos:column="13">::<pos:position pos:line="35" pos:column="15"/></operator><name><name pos:line="35" pos:column="15">list<pos:position pos:line="35" pos:column="19"/></name><argument_list type="generic" pos:line="35" pos:column="19">&lt;<argument><expr><name><name pos:line="35" pos:column="20">std<pos:position pos:line="35" pos:column="23"/></name><operator pos:line="35" pos:column="23">::<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="25">string<pos:position pos:line="35" pos:column="31"/></name></name></expr></argument>&gt;<pos:position pos:line="35" pos:column="35"/></argument_list></name><operator pos:line="35" pos:column="32">::<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="34">const_iterator<pos:position pos:line="35" pos:column="48"/></name></name></type> <name pos:line="35" pos:column="49">i<pos:position pos:line="35" pos:column="50"/></name> <init pos:line="35" pos:column="51">= <expr><call><name><name pos:line="35" pos:column="53">Config<pos:position pos:line="35" pos:column="59"/></name><operator pos:line="35" pos:column="59">.<pos:position pos:line="35" pos:column="60"/></operator><name pos:line="35" pos:column="60">certFiles<pos:position pos:line="35" pos:column="69"/></name><operator pos:line="35" pos:column="69">.<pos:position pos:line="35" pos:column="70"/></operator><name pos:line="35" pos:column="70">begin<pos:position pos:line="35" pos:column="75"/></name></name><argument_list pos:line="35" pos:column="75">()<pos:position pos:line="35" pos:column="77"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="78"/></init> <condition><expr><name pos:line="35" pos:column="79">i<pos:position pos:line="35" pos:column="80"/></name> <operator pos:line="35" pos:column="81">!=<pos:position pos:line="35" pos:column="83"/></operator> <call><name><name pos:line="35" pos:column="84">Config<pos:position pos:line="35" pos:column="90"/></name><operator pos:line="35" pos:column="90">.<pos:position pos:line="35" pos:column="91"/></operator><name pos:line="35" pos:column="91">certFiles<pos:position pos:line="35" pos:column="100"/></name><operator pos:line="35" pos:column="100">.<pos:position pos:line="35" pos:column="101"/></operator><name pos:line="35" pos:column="101">end<pos:position pos:line="35" pos:column="104"/></name></name><argument_list pos:line="35" pos:column="104">()<pos:position pos:line="35" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="107"/></condition> <incr><expr><operator pos:line="35" pos:column="108">++<pos:position pos:line="35" pos:column="110"/></operator><name pos:line="35" pos:column="110">i<pos:position pos:line="35" pos:column="111"/></name></expr></incr>)<pos:position pos:line="35" pos:column="112"/></control> <block pos:line="35" pos:column="113">{
        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><call><name pos:line="36" pos:column="13">gnutls_certificate_set_x509_key_file<pos:position pos:line="36" pos:column="49"/></name><argument_list pos:line="36" pos:column="49">(<argument><expr><name><name pos:line="36" pos:column="50">Transport<pos:position pos:line="36" pos:column="59"/></name><operator pos:line="36" pos:column="59">::<pos:position pos:line="36" pos:column="61"/></operator><name pos:line="36" pos:column="61">Config<pos:position pos:line="36" pos:column="67"/></name><operator pos:line="36" pos:column="67">.<pos:position pos:line="36" pos:column="68"/></operator><name pos:line="36" pos:column="68">certCredentials<pos:position pos:line="36" pos:column="83"/></name></name></expr></argument>, <argument><expr><call><name><operator pos:line="36" pos:column="85">(<pos:position pos:line="36" pos:column="86"/></operator><operator pos:line="36" pos:column="86">*<pos:position pos:line="36" pos:column="87"/></operator><name pos:line="36" pos:column="87">i<pos:position pos:line="36" pos:column="88"/></name><operator pos:line="36" pos:column="88">)<pos:position pos:line="36" pos:column="89"/></operator><operator pos:line="36" pos:column="89">.<pos:position pos:line="36" pos:column="90"/></operator><name pos:line="36" pos:column="90">c_str<pos:position pos:line="36" pos:column="95"/></name></name><argument_list pos:line="36" pos:column="95">()<pos:position pos:line="36" pos:column="97"/></argument_list></call></expr></argument>, <argument><expr><call><name><operator pos:line="36" pos:column="99">(<pos:position pos:line="36" pos:column="100"/></operator><operator pos:line="36" pos:column="100">*<pos:position pos:line="36" pos:column="101"/></operator><name pos:line="36" pos:column="101">i<pos:position pos:line="36" pos:column="102"/></name><operator pos:line="36" pos:column="102">)<pos:position pos:line="36" pos:column="103"/></operator><operator pos:line="36" pos:column="103">.<pos:position pos:line="36" pos:column="104"/></operator><name pos:line="36" pos:column="104">c_str<pos:position pos:line="36" pos:column="109"/></name></name><argument_list pos:line="36" pos:column="109">()<pos:position pos:line="36" pos:column="111"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="113">GNUTLS_X509_FMT_PEM<pos:position pos:line="36" pos:column="132"/></name></expr></argument>)<pos:position pos:line="36" pos:column="133"/></argument_list></call> <operator pos:line="36" pos:column="134">!=<pos:position pos:line="36" pos:column="136"/></operator> <name pos:line="36" pos:column="137">GNUTLS_E_SUCCESS<pos:position pos:line="36" pos:column="153"/></name></expr>)<pos:position pos:line="36" pos:column="154"/></condition><then pos:line="36" pos:column="154"> <block pos:line="36" pos:column="155">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">debugVerbose<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><literal type="number" pos:line="37" pos:column="26">3<pos:position pos:line="37" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="29">"WARNING: Failed to load Certificate from "<pos:position pos:line="37" pos:column="72"/></literal> <operator pos:line="37" pos:column="73">&lt;&lt;<pos:position pos:line="37" pos:column="81"/></operator> <operator pos:line="37" pos:column="76">*<pos:position pos:line="37" pos:column="77"/></operator><name pos:line="37" pos:column="77">i<pos:position pos:line="37" pos:column="78"/></name></expr></argument>)<pos:position pos:line="37" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then> <else pos:line="38" pos:column="11">else <block pos:line="38" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">debugVerbose<pos:position pos:line="39" pos:column="25"/></name><argument_list pos:line="39" pos:column="25">(<argument><expr><literal type="number" pos:line="39" pos:column="26">3<pos:position pos:line="39" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="29">"Loaded Certificate from "<pos:position pos:line="39" pos:column="55"/></literal> <operator pos:line="39" pos:column="56">&lt;&lt;<pos:position pos:line="39" pos:column="64"/></operator> <operator pos:line="39" pos:column="59">*<pos:position pos:line="39" pos:column="60"/></operator><name pos:line="39" pos:column="60">i<pos:position pos:line="39" pos:column="61"/></name></expr></argument>)<pos:position pos:line="39" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="63"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></else></if>
    }<pos:position pos:line="41" pos:column="6"/></block></for>

<cpp:else pos:line="43" pos:column="1">#<cpp:directive pos:line="43" pos:column="2">else<pos:position pos:line="43" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><name><name pos:line="44" pos:column="5">std<pos:position pos:line="44" pos:column="8"/></name><operator pos:line="44" pos:column="8">::<pos:position pos:line="44" pos:column="10"/></operator><name pos:line="44" pos:column="10">cerr<pos:position pos:line="44" pos:column="14"/></name></name> <operator pos:line="44" pos:column="15">&lt;&lt;<pos:position pos:line="44" pos:column="23"/></operator> <literal type="string" pos:line="44" pos:column="18">"ERROR: TLS support not available."<pos:position pos:line="44" pos:column="53"/></literal> <operator pos:line="44" pos:column="54">&lt;&lt;<pos:position pos:line="44" pos:column="62"/></operator> <name><name pos:line="44" pos:column="57">std<pos:position pos:line="44" pos:column="60"/></name><operator pos:line="44" pos:column="60">::<pos:position pos:line="44" pos:column="62"/></operator><name pos:line="44" pos:column="62">endl<pos:position pos:line="44" pos:column="66"/></name></name></expr>;<pos:position pos:line="44" pos:column="67"/></expr_stmt>
<cpp:endif pos:line="45" pos:column="1">#<cpp:directive pos:line="45" pos:column="2">endif<pos:position pos:line="45" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

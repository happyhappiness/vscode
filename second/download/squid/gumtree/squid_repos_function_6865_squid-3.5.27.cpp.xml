<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6865_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Kid<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">start<pos:position pos:line="1" pos:column="16"/></name></name><parameter_list pos:line="1" pos:column="16">(<parameter><decl><type><name pos:line="1" pos:column="17">pid_t<pos:position pos:line="1" pos:column="22"/></name></type> <name pos:line="1" pos:column="23">cpid<pos:position pos:line="1" pos:column="27"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="28"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">assert<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><operator pos:line="3" pos:column="12">!<pos:position pos:line="3" pos:column="13"/></operator><call><name pos:line="3" pos:column="13">running<pos:position pos:line="3" pos:column="20"/></name><argument_list pos:line="3" pos:column="20">()<pos:position pos:line="3" pos:column="22"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">cpid<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">&gt;<pos:position pos:line="4" pos:column="21"/></operator> <literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">isRunning<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <literal type="boolean" pos:line="6" pos:column="17">true<pos:position pos:line="6" pos:column="21"/></literal></expr>;<pos:position pos:line="6" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">pid<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <name pos:line="7" pos:column="11">cpid<pos:position pos:line="7" pos:column="15"/></name></expr>;<pos:position pos:line="7" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">time<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><operator pos:line="8" pos:column="10">&amp;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="11">startTime<pos:position pos:line="8" pos:column="20"/></name></expr></argument>)<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

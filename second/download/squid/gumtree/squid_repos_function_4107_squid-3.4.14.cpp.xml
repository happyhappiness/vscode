<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4107_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">SizedEstimate<pos:position pos:line="1" pos:column="37"/></name><operator pos:line="1" pos:column="37">::<pos:position pos:line="1" pos:column="39"/></operator><name pos:line="1" pos:column="39">expect<pos:position pos:line="1" pos:column="45"/></name></name><parameter_list pos:line="1" pos:column="45">(<parameter><decl><type><name pos:line="1" pos:column="46">int64_t<pos:position pos:line="1" pos:column="53"/></name></type> <name pos:line="1" pos:column="54">aSize<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><name pos:line="3" pos:column="5">theData<pos:position pos:line="3" pos:column="12"/></name> <operator pos:line="3" pos:column="13">=<pos:position pos:line="3" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="3" pos:column="15">(<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="16">aSize<pos:position pos:line="3" pos:column="21"/></name> <operator pos:line="3" pos:column="22">&gt;=<pos:position pos:line="3" pos:column="27"/></operator> <literal type="number" pos:line="3" pos:column="25">0<pos:position pos:line="3" pos:column="26"/></literal><operator pos:line="3" pos:column="26">)<pos:position pos:line="3" pos:column="27"/></operator></expr> ?<pos:position pos:line="3" pos:column="29"/></condition><then pos:line="3" pos:column="29"> <expr><name pos:line="3" pos:column="30">aSize<pos:position pos:line="3" pos:column="35"/></name></expr> <pos:position pos:line="3" pos:column="36"/></then><else pos:line="3" pos:column="36">: <expr><operator pos:line="3" pos:column="38">(<pos:position pos:line="3" pos:column="39"/></operator><name pos:line="3" pos:column="39">int64_t<pos:position pos:line="3" pos:column="46"/></name><operator pos:line="3" pos:column="46">)<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="47">dtUnknown<pos:position pos:line="3" pos:column="56"/></name></expr></else></ternary></expr>;<pos:position pos:line="3" pos:column="57"/></expr_stmt>
}<pos:position pos:line="4" pos:column="2"/></block></function></unit>

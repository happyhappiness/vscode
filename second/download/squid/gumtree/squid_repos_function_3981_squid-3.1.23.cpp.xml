<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3981_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Xaction<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">openConnection<pos:position pos:line="1" pos:column="47"/></name></name><parameter_list pos:line="1" pos:column="47">()<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">IpAddress<pos:position pos:line="3" pos:column="14"/></name></type> <name pos:line="3" pos:column="15">client_addr<pos:position pos:line="3" pos:column="26"/></name></decl>;<pos:position pos:line="3" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">connection<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&lt;<pos:position pos:line="5" pos:column="25"/></operator> <literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name><name pos:line="7" pos:column="11">Adaptation<pos:position pos:line="7" pos:column="21"/></name><operator pos:line="7" pos:column="21">::<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="23">Service<pos:position pos:line="7" pos:column="30"/></name></name> <modifier pos:line="7" pos:column="31">&amp;<pos:position pos:line="7" pos:column="36"/></modifier></type><name pos:line="7" pos:column="32">s<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><call><name pos:line="7" pos:column="36">service<pos:position pos:line="7" pos:column="43"/></name><argument_list pos:line="7" pos:column="43">()<pos:position pos:line="7" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="46"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name><name pos:line="9" pos:column="10">TheConfig<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">.<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">reuse_connections<pos:position pos:line="9" pos:column="37"/></name></name></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="10" pos:column="9">disableRetries<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">()<pos:position pos:line="10" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt></block></then></if> <comment type="line" pos:line="10" pos:column="27">// this will also safely drain pconn pool</comment>

    <comment type="line" pos:line="12" pos:column="5">// TODO: check whether NULL domain is appropriate here</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">connection<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <call><name><name pos:line="13" pos:column="18">icapPconnPool<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">pop<pos:position pos:line="13" pos:column="36"/></name></name><argument_list pos:line="13" pos:column="36">(<argument><expr><call><name><name pos:line="13" pos:column="37">s<pos:position pos:line="13" pos:column="38"/></name><operator pos:line="13" pos:column="38">.<pos:position pos:line="13" pos:column="39"/></operator><name pos:line="13" pos:column="39">cfg<pos:position pos:line="13" pos:column="42"/></name></name><argument_list pos:line="13" pos:column="42">()<pos:position pos:line="13" pos:column="44"/></argument_list></call><operator pos:line="13" pos:column="44">.<pos:position pos:line="13" pos:column="45"/></operator><call><name><name pos:line="13" pos:column="45">host<pos:position pos:line="13" pos:column="49"/></name><operator pos:line="13" pos:column="49">.<pos:position pos:line="13" pos:column="50"/></operator><name pos:line="13" pos:column="50">termedBuf<pos:position pos:line="13" pos:column="59"/></name></name><argument_list pos:line="13" pos:column="59">()<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="13" pos:column="63">s<pos:position pos:line="13" pos:column="64"/></name><operator pos:line="13" pos:column="64">.<pos:position pos:line="13" pos:column="65"/></operator><name pos:line="13" pos:column="65">cfg<pos:position pos:line="13" pos:column="68"/></name></name><argument_list pos:line="13" pos:column="68">()<pos:position pos:line="13" pos:column="70"/></argument_list></call><operator pos:line="13" pos:column="70">.<pos:position pos:line="13" pos:column="71"/></operator><name pos:line="13" pos:column="71">port<pos:position pos:line="13" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="77">NULL<pos:position pos:line="13" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="83">client_addr<pos:position pos:line="13" pos:column="94"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="96">isRetriable<pos:position pos:line="13" pos:column="107"/></name></expr></argument>)<pos:position pos:line="13" pos:column="108"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="109"/></expr_stmt>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">connection<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">&gt;=<pos:position pos:line="14" pos:column="25"/></operator> <literal type="number" pos:line="14" pos:column="23">0<pos:position pos:line="14" pos:column="24"/></literal></expr>)<pos:position pos:line="14" pos:column="25"/></condition><then pos:line="14" pos:column="25"> <block pos:line="14" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">93<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="15" pos:column="19">3<pos:position pos:line="15" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="22">HERE<pos:position pos:line="15" pos:column="26"/></name> <operator pos:line="15" pos:column="27">&lt;&lt;<pos:position pos:line="15" pos:column="35"/></operator> <literal type="string" pos:line="15" pos:column="30">"reused pconn FD "<pos:position pos:line="15" pos:column="48"/></literal> <operator pos:line="15" pos:column="49">&lt;&lt;<pos:position pos:line="15" pos:column="57"/></operator> <name pos:line="15" pos:column="52">connection<pos:position pos:line="15" pos:column="62"/></name></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>

        <comment type="line" pos:line="17" pos:column="9">// fake the connect callback</comment>
        <comment type="line" pos:line="18" pos:column="9">// TODO: can we sync call Adaptation::Icap::Xaction::noteCommConnected here instead?</comment>
        <typedef pos:line="19" pos:column="9">typedef <type><name><name pos:line="19" pos:column="17">CommCbMemFunT<pos:position pos:line="19" pos:column="30"/></name><argument_list type="generic" pos:line="19" pos:column="30">&lt;<argument><expr><name><name pos:line="19" pos:column="31">Adaptation<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">::<pos:position pos:line="19" pos:column="43"/></operator><name pos:line="19" pos:column="43">Icap<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">::<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="49">Xaction<pos:position pos:line="19" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="58">CommConnectCbParams<pos:position pos:line="19" pos:column="77"/></name></expr></argument>&gt;<pos:position pos:line="19" pos:column="81"/></argument_list></name></type> <name pos:line="19" pos:column="79">Dialer<pos:position pos:line="19" pos:column="85"/></name>;<pos:position pos:line="19" pos:column="86"/></typedef>
        <decl_stmt><decl><type><name><name pos:line="20" pos:column="9">CbcPointer<pos:position pos:line="20" pos:column="19"/></name><argument_list type="generic" pos:line="20" pos:column="19">&lt;<argument><expr><name pos:line="20" pos:column="20">Xaction<pos:position pos:line="20" pos:column="27"/></name></expr></argument>&gt;<pos:position pos:line="20" pos:column="31"/></argument_list></name></type> <name pos:line="20" pos:column="29">self<pos:position pos:line="20" pos:column="33"/></name><argument_list pos:line="20" pos:column="33">(<argument><expr><name pos:line="20" pos:column="34">this<pos:position pos:line="20" pos:column="38"/></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></decl>;<pos:position pos:line="20" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">Dialer<pos:position pos:line="21" pos:column="15"/></name></type> <name pos:line="21" pos:column="16">dialer<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">self<pos:position pos:line="21" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="21" pos:column="29">&amp;<pos:position pos:line="21" pos:column="34"/></operator><name><name pos:line="21" pos:column="30">Adaptation<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">::<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="42">Icap<pos:position pos:line="21" pos:column="46"/></name><operator pos:line="21" pos:column="46">::<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="48">Xaction<pos:position pos:line="21" pos:column="55"/></name><operator pos:line="21" pos:column="55">::<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="57">noteCommConnected<pos:position pos:line="21" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="75"/></argument_list></decl>;<pos:position pos:line="21" pos:column="76"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">dialer<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">params<pos:position pos:line="22" pos:column="22"/></name><operator pos:line="22" pos:column="22">.<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="23">fd<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="28">connection<pos:position pos:line="22" pos:column="38"/></name></expr>;<pos:position pos:line="22" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="23" pos:column="9">dialer<pos:position pos:line="23" pos:column="15"/></name><operator pos:line="23" pos:column="15">.<pos:position pos:line="23" pos:column="16"/></operator><name pos:line="23" pos:column="16">params<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">.<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">flag<pos:position pos:line="23" pos:column="27"/></name></name> <operator pos:line="23" pos:column="28">=<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="30">COMM_OK<pos:position pos:line="23" pos:column="37"/></name></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt>
        <comment type="line" pos:line="24" pos:column="9">// fake other parameters by copying from the existing connection</comment>
        <expr_stmt><expr><name pos:line="25" pos:column="9">connector<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <call><name pos:line="25" pos:column="21">asyncCall<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><literal type="number" pos:line="25" pos:column="31">93<pos:position pos:line="25" pos:column="33"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="25" pos:column="34">3<pos:position pos:line="25" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="37">"Adaptation::Icap::Xaction::noteCommConnected"<pos:position pos:line="25" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="85">dialer<pos:position pos:line="25" pos:column="91"/></name></expr></argument>)<pos:position pos:line="25" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">ScheduleCallHere<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">connector<pos:position pos:line="26" pos:column="35"/></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>
        <return pos:line="27" pos:column="9">return;<pos:position pos:line="27" pos:column="16"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">disableRetries<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">()<pos:position pos:line="30" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="22"/></expr_stmt> <comment type="line" pos:line="30" pos:column="23">// we only retry pconn failures</comment>

    <decl_stmt><decl><type><name pos:line="32" pos:column="5">IpAddress<pos:position pos:line="32" pos:column="14"/></name></type> <name pos:line="32" pos:column="15">outgoing<pos:position pos:line="32" pos:column="23"/></name></decl>;<pos:position pos:line="32" pos:column="24"/></decl_stmt>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><operator pos:line="33" pos:column="9">!<pos:position pos:line="33" pos:column="10"/></operator><name><name pos:line="33" pos:column="10">Ip<pos:position pos:line="33" pos:column="12"/></name><operator pos:line="33" pos:column="12">::<pos:position pos:line="33" pos:column="14"/></operator><name pos:line="33" pos:column="14">EnableIpv6<pos:position pos:line="33" pos:column="24"/></name></name> <operator pos:line="33" pos:column="25">&amp;&amp;<pos:position pos:line="33" pos:column="35"/></operator> <operator pos:line="33" pos:column="28">!<pos:position pos:line="33" pos:column="29"/></operator><call><name><name pos:line="33" pos:column="29">outgoing<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">.<pos:position pos:line="33" pos:column="38"/></operator><name pos:line="33" pos:column="38">SetIPv4<pos:position pos:line="33" pos:column="45"/></name></name><argument_list pos:line="33" pos:column="45">()<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="48"/></condition><then pos:line="33" pos:column="48"> <block pos:line="33" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">debugs<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="number" pos:line="34" pos:column="16">31<pos:position pos:line="34" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="20">DBG_CRITICAL<pos:position pos:line="34" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="34">"ERROR: IPv6 is disabled. "<pos:position pos:line="34" pos:column="61"/></literal> <operator pos:line="34" pos:column="62">&lt;&lt;<pos:position pos:line="34" pos:column="70"/></operator> <name pos:line="34" pos:column="65">outgoing<pos:position pos:line="34" pos:column="73"/></name> <operator pos:line="34" pos:column="74">&lt;&lt;<pos:position pos:line="34" pos:column="82"/></operator> <literal type="string" pos:line="34" pos:column="77">" is not an IPv4 address."<pos:position pos:line="34" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="105"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">dieOnConnectionFailure<pos:position pos:line="35" pos:column="31"/></name><argument_list pos:line="35" pos:column="31">()<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt> <comment type="line" pos:line="35" pos:column="35">// throws</comment>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="37" pos:column="5">/* split-stack for now requires default IPv4-only socket */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">Ip<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">::<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">EnableIpv6<pos:position pos:line="38" pos:column="23"/></name></name><operator pos:line="38" pos:column="23">&amp;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="24">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="38" pos:column="47"/></name> <operator pos:line="38" pos:column="48">&amp;&amp;<pos:position pos:line="38" pos:column="58"/></operator> <call><name><name pos:line="38" pos:column="51">outgoing<pos:position pos:line="38" pos:column="59"/></name><operator pos:line="38" pos:column="59">.<pos:position pos:line="38" pos:column="60"/></operator><name pos:line="38" pos:column="60">IsAnyAddr<pos:position pos:line="38" pos:column="69"/></name></name><argument_list pos:line="38" pos:column="69">()<pos:position pos:line="38" pos:column="71"/></argument_list></call> <operator pos:line="38" pos:column="72">&amp;&amp;<pos:position pos:line="38" pos:column="82"/></operator> <operator pos:line="38" pos:column="75">!<pos:position pos:line="38" pos:column="76"/></operator><call><name><name pos:line="38" pos:column="76">s<pos:position pos:line="38" pos:column="77"/></name><operator pos:line="38" pos:column="77">.<pos:position pos:line="38" pos:column="78"/></operator><name pos:line="38" pos:column="78">cfg<pos:position pos:line="38" pos:column="81"/></name></name><argument_list pos:line="38" pos:column="81">()<pos:position pos:line="38" pos:column="83"/></argument_list></call><operator pos:line="38" pos:column="83">.<pos:position pos:line="38" pos:column="84"/></operator><name pos:line="38" pos:column="84">ipv6<pos:position pos:line="38" pos:column="88"/></name></expr>)<pos:position pos:line="38" pos:column="89"/></condition><then pos:line="38" pos:column="89"> <block pos:line="38" pos:column="90">{
        <expr_stmt><expr><call><name><name pos:line="39" pos:column="9">outgoing<pos:position pos:line="39" pos:column="17"/></name><operator pos:line="39" pos:column="17">.<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">SetIPv4<pos:position pos:line="39" pos:column="25"/></name></name><argument_list pos:line="39" pos:column="25">()<pos:position pos:line="39" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="42" pos:column="5">connection<pos:position pos:line="42" pos:column="15"/></name> <operator pos:line="42" pos:column="16">=<pos:position pos:line="42" pos:column="17"/></operator> <call><name pos:line="42" pos:column="18">comm_open<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name pos:line="42" pos:column="28">SOCK_STREAM<pos:position pos:line="42" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="41">0<pos:position pos:line="42" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="44">outgoing<pos:position pos:line="42" pos:column="52"/></name></expr></argument>,
                           <argument><expr><name pos:line="43" pos:column="28">COMM_NONBLOCKING<pos:position pos:line="43" pos:column="44"/></name></expr></argument>, <argument><expr><call><name><name pos:line="43" pos:column="46">s<pos:position pos:line="43" pos:column="47"/></name><operator pos:line="43" pos:column="47">.<pos:position pos:line="43" pos:column="48"/></operator><name pos:line="43" pos:column="48">cfg<pos:position pos:line="43" pos:column="51"/></name></name><argument_list pos:line="43" pos:column="51">()<pos:position pos:line="43" pos:column="53"/></argument_list></call><operator pos:line="43" pos:column="53">.<pos:position pos:line="43" pos:column="54"/></operator><call><name><name pos:line="43" pos:column="54">uri<pos:position pos:line="43" pos:column="57"/></name><operator pos:line="43" pos:column="57">.<pos:position pos:line="43" pos:column="58"/></operator><name pos:line="43" pos:column="58">termedBuf<pos:position pos:line="43" pos:column="67"/></name></name><argument_list pos:line="43" pos:column="67">()<pos:position pos:line="43" pos:column="69"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="71"/></expr_stmt>

    <if pos:line="45" pos:column="5">if <condition pos:line="45" pos:column="8">(<expr><name pos:line="45" pos:column="9">connection<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">&lt;<pos:position pos:line="45" pos:column="24"/></operator> <literal type="number" pos:line="45" pos:column="22">0<pos:position pos:line="45" pos:column="23"/></literal></expr>)<pos:position pos:line="45" pos:column="24"/></condition><then pos:line="45" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="46" pos:column="9">dieOnConnectionFailure<pos:position pos:line="46" pos:column="31"/></name><argument_list pos:line="46" pos:column="31">()<pos:position pos:line="46" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt></block></then></if> <comment type="line" pos:line="46" pos:column="35">// throws</comment>

    <expr_stmt><expr><call><name pos:line="48" pos:column="5">debugs<pos:position pos:line="48" pos:column="11"/></name><argument_list pos:line="48" pos:column="11">(<argument><expr><literal type="number" pos:line="48" pos:column="12">93<pos:position pos:line="48" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="48" pos:column="15">3<pos:position pos:line="48" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="48" pos:column="18">typeName<pos:position pos:line="48" pos:column="26"/></name> <operator pos:line="48" pos:column="27">&lt;&lt;<pos:position pos:line="48" pos:column="35"/></operator> <literal type="string" pos:line="48" pos:column="30">" opens connection to "<pos:position pos:line="48" pos:column="53"/></literal> <operator pos:line="48" pos:column="54">&lt;&lt;<pos:position pos:line="48" pos:column="62"/></operator> <call><name><name pos:line="48" pos:column="57">s<pos:position pos:line="48" pos:column="58"/></name><operator pos:line="48" pos:column="58">.<pos:position pos:line="48" pos:column="59"/></operator><name pos:line="48" pos:column="59">cfg<pos:position pos:line="48" pos:column="62"/></name></name><argument_list pos:line="48" pos:column="62">()<pos:position pos:line="48" pos:column="64"/></argument_list></call><operator pos:line="48" pos:column="64">.<pos:position pos:line="48" pos:column="65"/></operator><name pos:line="48" pos:column="65">host<pos:position pos:line="48" pos:column="69"/></name> <operator pos:line="48" pos:column="70">&lt;&lt;<pos:position pos:line="48" pos:column="78"/></operator> <literal type="string" pos:line="48" pos:column="73">":"<pos:position pos:line="48" pos:column="76"/></literal> <operator pos:line="48" pos:column="77">&lt;&lt;<pos:position pos:line="48" pos:column="85"/></operator> <call><name><name pos:line="48" pos:column="80">s<pos:position pos:line="48" pos:column="81"/></name><operator pos:line="48" pos:column="81">.<pos:position pos:line="48" pos:column="82"/></operator><name pos:line="48" pos:column="82">cfg<pos:position pos:line="48" pos:column="85"/></name></name><argument_list pos:line="48" pos:column="85">()<pos:position pos:line="48" pos:column="87"/></argument_list></call><operator pos:line="48" pos:column="87">.<pos:position pos:line="48" pos:column="88"/></operator><name pos:line="48" pos:column="88">port<pos:position pos:line="48" pos:column="92"/></name></expr></argument>)<pos:position pos:line="48" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="94"/></expr_stmt>

    <comment type="line" pos:line="50" pos:column="5">// TODO: service bypass status may differ from that of a transaction</comment>
    <typedef pos:line="51" pos:column="5">typedef <type><name><name pos:line="51" pos:column="13">CommCbMemFunT<pos:position pos:line="51" pos:column="26"/></name><argument_list type="generic" pos:line="51" pos:column="26">&lt;<argument><expr><name><name pos:line="51" pos:column="27">Adaptation<pos:position pos:line="51" pos:column="37"/></name><operator pos:line="51" pos:column="37">::<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="39">Icap<pos:position pos:line="51" pos:column="43"/></name><operator pos:line="51" pos:column="43">::<pos:position pos:line="51" pos:column="45"/></operator><name pos:line="51" pos:column="45">Xaction<pos:position pos:line="51" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="54">CommTimeoutCbParams<pos:position pos:line="51" pos:column="73"/></name></expr></argument>&gt;<pos:position pos:line="51" pos:column="77"/></argument_list></name></type> <name pos:line="51" pos:column="75">TimeoutDialer<pos:position pos:line="51" pos:column="88"/></name>;<pos:position pos:line="51" pos:column="89"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="52" pos:column="5">AsyncCall<pos:position pos:line="52" pos:column="14"/></name><operator pos:line="52" pos:column="14">::<pos:position pos:line="52" pos:column="16"/></operator><name pos:line="52" pos:column="16">Pointer<pos:position pos:line="52" pos:column="23"/></name></name></type> <name pos:line="52" pos:column="24">timeoutCall<pos:position pos:line="52" pos:column="35"/></name> <init pos:line="52" pos:column="36">= <expr><call><name pos:line="52" pos:column="38">JobCallback<pos:position pos:line="52" pos:column="49"/></name><argument_list pos:line="52" pos:column="49">(<argument><expr><literal type="number" pos:line="52" pos:column="50">93<pos:position pos:line="52" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="54">5<pos:position pos:line="52" pos:column="55"/></literal></expr></argument>,
                                     <argument><expr><name pos:line="53" pos:column="38">TimeoutDialer<pos:position pos:line="53" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="53">this<pos:position pos:line="53" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="53" pos:column="59">Adaptation<pos:position pos:line="53" pos:column="69"/></name><operator pos:line="53" pos:column="69">::<pos:position pos:line="53" pos:column="71"/></operator><name pos:line="53" pos:column="71">Icap<pos:position pos:line="53" pos:column="75"/></name><operator pos:line="53" pos:column="75">::<pos:position pos:line="53" pos:column="77"/></operator><name pos:line="53" pos:column="77">Xaction<pos:position pos:line="53" pos:column="84"/></name><operator pos:line="53" pos:column="84">::<pos:position pos:line="53" pos:column="86"/></operator><name pos:line="53" pos:column="86">noteCommTimedout<pos:position pos:line="53" pos:column="102"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="103"/></argument_list></call></expr></init></decl>;<pos:position pos:line="53" pos:column="104"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="54" pos:column="5">commSetTimeout<pos:position pos:line="54" pos:column="19"/></name><argument_list pos:line="54" pos:column="19">(<argument><expr><name pos:line="54" pos:column="20">connection<pos:position pos:line="54" pos:column="30"/></name></expr></argument>, <argument><expr><call><name><name pos:line="54" pos:column="32">TheConfig<pos:position pos:line="54" pos:column="41"/></name><operator pos:line="54" pos:column="41">.<pos:position pos:line="54" pos:column="42"/></operator><name pos:line="54" pos:column="42">connect_timeout<pos:position pos:line="54" pos:column="57"/></name></name><argument_list pos:line="54" pos:column="57">(
                       <argument><expr><call><name pos:line="55" pos:column="24">service<pos:position pos:line="55" pos:column="31"/></name><argument_list pos:line="55" pos:column="31">()<pos:position pos:line="55" pos:column="33"/></argument_list></call><operator pos:line="55" pos:column="33">.<pos:position pos:line="55" pos:column="34"/></operator><call><name pos:line="55" pos:column="34">cfg<pos:position pos:line="55" pos:column="37"/></name><argument_list pos:line="55" pos:column="37">()<pos:position pos:line="55" pos:column="39"/></argument_list></call><operator pos:line="55" pos:column="39">.<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="40">bypass<pos:position pos:line="55" pos:column="46"/></name></expr></argument>)<pos:position pos:line="55" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="55" pos:column="49">timeoutCall<pos:position pos:line="55" pos:column="60"/></name></expr></argument>)<pos:position pos:line="55" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="62"/></expr_stmt>

    <typedef pos:line="57" pos:column="5">typedef <type><name><name pos:line="57" pos:column="13">CommCbMemFunT<pos:position pos:line="57" pos:column="26"/></name><argument_list type="generic" pos:line="57" pos:column="26">&lt;<argument><expr><name><name pos:line="57" pos:column="27">Adaptation<pos:position pos:line="57" pos:column="37"/></name><operator pos:line="57" pos:column="37">::<pos:position pos:line="57" pos:column="39"/></operator><name pos:line="57" pos:column="39">Icap<pos:position pos:line="57" pos:column="43"/></name><operator pos:line="57" pos:column="43">::<pos:position pos:line="57" pos:column="45"/></operator><name pos:line="57" pos:column="45">Xaction<pos:position pos:line="57" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="54">CommCloseCbParams<pos:position pos:line="57" pos:column="71"/></name></expr></argument>&gt;<pos:position pos:line="57" pos:column="75"/></argument_list></name></type> <name pos:line="57" pos:column="73">CloseDialer<pos:position pos:line="57" pos:column="84"/></name>;<pos:position pos:line="57" pos:column="85"/></typedef>
    <expr_stmt><expr><name pos:line="58" pos:column="5">closer<pos:position pos:line="58" pos:column="11"/></name> <operator pos:line="58" pos:column="12">=<pos:position pos:line="58" pos:column="13"/></operator> <call><name pos:line="58" pos:column="14">JobCallback<pos:position pos:line="58" pos:column="25"/></name><argument_list pos:line="58" pos:column="25">(<argument><expr><literal type="number" pos:line="58" pos:column="26">93<pos:position pos:line="58" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="30">5<pos:position pos:line="58" pos:column="31"/></literal></expr></argument>,
                         <argument><expr><name pos:line="59" pos:column="26">CloseDialer<pos:position pos:line="59" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="39">this<pos:position pos:line="59" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="59" pos:column="45">Adaptation<pos:position pos:line="59" pos:column="55"/></name><operator pos:line="59" pos:column="55">::<pos:position pos:line="59" pos:column="57"/></operator><name pos:line="59" pos:column="57">Icap<pos:position pos:line="59" pos:column="61"/></name><operator pos:line="59" pos:column="61">::<pos:position pos:line="59" pos:column="63"/></operator><name pos:line="59" pos:column="63">Xaction<pos:position pos:line="59" pos:column="70"/></name><operator pos:line="59" pos:column="70">::<pos:position pos:line="59" pos:column="72"/></operator><name pos:line="59" pos:column="72">noteCommClosed<pos:position pos:line="59" pos:column="86"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="88"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">comm_add_close_handler<pos:position pos:line="60" pos:column="27"/></name><argument_list pos:line="60" pos:column="27">(<argument><expr><name pos:line="60" pos:column="28">connection<pos:position pos:line="60" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="40">closer<pos:position pos:line="60" pos:column="46"/></name></expr></argument>)<pos:position pos:line="60" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="48"/></expr_stmt>

    <typedef pos:line="62" pos:column="5">typedef <type><name><name pos:line="62" pos:column="13">CommCbMemFunT<pos:position pos:line="62" pos:column="26"/></name><argument_list type="generic" pos:line="62" pos:column="26">&lt;<argument><expr><name><name pos:line="62" pos:column="27">Adaptation<pos:position pos:line="62" pos:column="37"/></name><operator pos:line="62" pos:column="37">::<pos:position pos:line="62" pos:column="39"/></operator><name pos:line="62" pos:column="39">Icap<pos:position pos:line="62" pos:column="43"/></name><operator pos:line="62" pos:column="43">::<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="45">Xaction<pos:position pos:line="62" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="54">CommConnectCbParams<pos:position pos:line="62" pos:column="73"/></name></expr></argument>&gt;<pos:position pos:line="62" pos:column="77"/></argument_list></name></type> <name pos:line="62" pos:column="75">ConnectDialer<pos:position pos:line="62" pos:column="88"/></name>;<pos:position pos:line="62" pos:column="89"/></typedef>
    <expr_stmt><expr><name pos:line="63" pos:column="5">connector<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <call><name pos:line="63" pos:column="17">JobCallback<pos:position pos:line="63" pos:column="28"/></name><argument_list pos:line="63" pos:column="28">(<argument><expr><literal type="number" pos:line="63" pos:column="29">93<pos:position pos:line="63" pos:column="31"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="63" pos:column="32">3<pos:position pos:line="63" pos:column="33"/></literal></expr></argument>,
                            <argument><expr><name pos:line="64" pos:column="29">ConnectDialer<pos:position pos:line="64" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="44">this<pos:position pos:line="64" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="50">Adaptation<pos:position pos:line="64" pos:column="60"/></name><operator pos:line="64" pos:column="60">::<pos:position pos:line="64" pos:column="62"/></operator><name pos:line="64" pos:column="62">Icap<pos:position pos:line="64" pos:column="66"/></name><operator pos:line="64" pos:column="66">::<pos:position pos:line="64" pos:column="68"/></operator><name pos:line="64" pos:column="68">Xaction<pos:position pos:line="64" pos:column="75"/></name><operator pos:line="64" pos:column="75">::<pos:position pos:line="64" pos:column="77"/></operator><name pos:line="64" pos:column="77">noteCommConnected<pos:position pos:line="64" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="96"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="65" pos:column="5">commConnectStart<pos:position pos:line="65" pos:column="21"/></name><argument_list pos:line="65" pos:column="21">(<argument><expr><name pos:line="65" pos:column="22">connection<pos:position pos:line="65" pos:column="32"/></name></expr></argument>, <argument><expr><call><name><name pos:line="65" pos:column="34">s<pos:position pos:line="65" pos:column="35"/></name><operator pos:line="65" pos:column="35">.<pos:position pos:line="65" pos:column="36"/></operator><name pos:line="65" pos:column="36">cfg<pos:position pos:line="65" pos:column="39"/></name></name><argument_list pos:line="65" pos:column="39">()<pos:position pos:line="65" pos:column="41"/></argument_list></call><operator pos:line="65" pos:column="41">.<pos:position pos:line="65" pos:column="42"/></operator><call><name><name pos:line="65" pos:column="42">host<pos:position pos:line="65" pos:column="46"/></name><operator pos:line="65" pos:column="46">.<pos:position pos:line="65" pos:column="47"/></operator><name pos:line="65" pos:column="47">termedBuf<pos:position pos:line="65" pos:column="56"/></name></name><argument_list pos:line="65" pos:column="56">()<pos:position pos:line="65" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="65" pos:column="60">s<pos:position pos:line="65" pos:column="61"/></name><operator pos:line="65" pos:column="61">.<pos:position pos:line="65" pos:column="62"/></operator><name pos:line="65" pos:column="62">cfg<pos:position pos:line="65" pos:column="65"/></name></name><argument_list pos:line="65" pos:column="65">()<pos:position pos:line="65" pos:column="67"/></argument_list></call><operator pos:line="65" pos:column="67">.<pos:position pos:line="65" pos:column="68"/></operator><name pos:line="65" pos:column="68">port<pos:position pos:line="65" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="65" pos:column="74">connector<pos:position pos:line="65" pos:column="83"/></name></expr></argument>)<pos:position pos:line="65" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="85"/></expr_stmt>
}<pos:position pos:line="66" pos:column="2"/></block></function></unit>

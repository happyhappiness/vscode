<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4112_squid-3.1.23.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Ssl<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">ssl_error_t<pos:position pos:line="1" pos:column="17"/></name></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">parseErrorString<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">name<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">name<pos:position pos:line="4" pos:column="16"/></name></expr></argument>)<pos:position pos:line="4" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="18"/></expr_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><decl><type><name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">i<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></init> <condition><expr><name><name pos:line="6" pos:column="21">TheSslDetailMap<pos:position pos:line="6" pos:column="36"/></name><index pos:line="6" pos:column="36">[<expr><name pos:line="6" pos:column="37">i<pos:position pos:line="6" pos:column="38"/></name></expr>]<pos:position pos:line="6" pos:column="39"/></index></name><operator pos:line="6" pos:column="39">.<pos:position pos:line="6" pos:column="40"/></operator><name pos:line="6" pos:column="40">name<pos:position pos:line="6" pos:column="44"/></name></expr>;<pos:position pos:line="6" pos:column="45"/></condition> <incr><expr><operator pos:line="6" pos:column="46">++<pos:position pos:line="6" pos:column="48"/></operator><name pos:line="6" pos:column="48">i<pos:position pos:line="6" pos:column="49"/></name></expr></incr>)<pos:position pos:line="6" pos:column="50"/></control> <block pos:line="6" pos:column="51">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><call><name pos:line="7" pos:column="13">strcmp<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">name<pos:position pos:line="7" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="26">TheSslDetailMap<pos:position pos:line="7" pos:column="41"/></name><index pos:line="7" pos:column="41">[<expr><name pos:line="7" pos:column="42">i<pos:position pos:line="7" pos:column="43"/></name></expr>]<pos:position pos:line="7" pos:column="44"/></index></name><operator pos:line="7" pos:column="44">.<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="45">name<pos:position pos:line="7" pos:column="49"/></name></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call> <operator pos:line="7" pos:column="51">==<pos:position pos:line="7" pos:column="53"/></operator> <literal type="number" pos:line="7" pos:column="54">0<pos:position pos:line="7" pos:column="55"/></literal></expr>)<pos:position pos:line="7" pos:column="56"/></condition><then pos:line="7" pos:column="56">
            <block type="pseudo"><return pos:line="8" pos:column="13">return <expr><name><name pos:line="8" pos:column="20">TheSslDetailMap<pos:position pos:line="8" pos:column="35"/></name><index pos:line="8" pos:column="35">[<expr><name pos:line="8" pos:column="36">i<pos:position pos:line="8" pos:column="37"/></name></expr>]<pos:position pos:line="8" pos:column="38"/></index></name><operator pos:line="8" pos:column="38">.<pos:position pos:line="8" pos:column="39"/></operator><name pos:line="8" pos:column="39">value<pos:position pos:line="8" pos:column="44"/></name></expr>;<pos:position pos:line="8" pos:column="45"/></return></block></then></if>
    }<pos:position pos:line="9" pos:column="6"/></block></for>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">xisdigit<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><operator pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">name<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25"> <block pos:line="11" pos:column="26">{
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">long<pos:position pos:line="12" pos:column="19"/></name> <name pos:line="12" pos:column="20">int<pos:position pos:line="12" pos:column="23"/></name></type> <name pos:line="12" pos:column="24">value<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><call><name pos:line="12" pos:column="32">strtol<pos:position pos:line="12" pos:column="38"/></name><argument_list pos:line="12" pos:column="38">(<argument><expr><name pos:line="12" pos:column="39">name<pos:position pos:line="12" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="45">NULL<pos:position pos:line="12" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="51">0<pos:position pos:line="12" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="54"/></decl_stmt>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">SQUID_SSL_ERROR_MIN<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">&lt;=<pos:position pos:line="13" pos:column="38"/></operator> <name pos:line="13" pos:column="36">value<pos:position pos:line="13" pos:column="41"/></name> <operator pos:line="13" pos:column="42">&amp;&amp;<pos:position pos:line="13" pos:column="52"/></operator> <name pos:line="13" pos:column="45">value<pos:position pos:line="13" pos:column="50"/></name> <operator pos:line="13" pos:column="51">&lt;=<pos:position pos:line="13" pos:column="56"/></operator> <name pos:line="13" pos:column="54">SQUID_SSL_ERROR_MAX<pos:position pos:line="13" pos:column="73"/></name></expr>)<pos:position pos:line="13" pos:column="74"/></condition><then pos:line="13" pos:column="74">
            <block type="pseudo"><return pos:line="14" pos:column="13">return <expr><name pos:line="14" pos:column="20">value<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></return></block></then></if>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">fatalf<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="string" pos:line="15" pos:column="16">"Too small or too bug SSL error code '%s'"<pos:position pos:line="15" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="60">name<pos:position pos:line="15" pos:column="64"/></name></expr></argument>)<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">fatalf<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="string" pos:line="18" pos:column="12">"Unknown SSL error name '%s'"<pos:position pos:line="18" pos:column="41"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="43">name<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="49"/></expr_stmt>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">SSL_ERROR_SSL<pos:position pos:line="19" pos:column="25"/></name></expr>;<pos:position pos:line="19" pos:column="26"/></return> <comment type="line" pos:line="19" pos:column="27">// not reached</comment>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

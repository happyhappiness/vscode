<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6230_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIInclude<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">subRequestDone<pos:position pos:line="2" pos:column="27"/></name></name> <parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name><name pos:line="2" pos:column="29">ESIStreamContext<pos:position pos:line="2" pos:column="45"/></name><operator pos:line="2" pos:column="45">::<pos:position pos:line="2" pos:column="47"/></operator><name pos:line="2" pos:column="47">Pointer<pos:position pos:line="2" pos:column="54"/></name></name></type> <name pos:line="2" pos:column="55">stream<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">bool<pos:position pos:line="2" pos:column="67"/></name></type> <name pos:line="2" pos:column="68">success<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">this<pos:position pos:line="4" pos:column="17"/></name></expr></argument>)<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="19"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">dataNeeded<pos:position pos:line="6" pos:column="20"/></name><argument_list pos:line="6" pos:column="20">()<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">stream<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <name pos:line="9" pos:column="19">src<pos:position pos:line="9" pos:column="22"/></name></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23"> <block pos:line="9" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">86<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="20">3<pos:position pos:line="10" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="23">"ESIInclude::subRequestDone: "<pos:position pos:line="10" pos:column="53"/></literal> <operator pos:line="10" pos:column="54">&lt;&lt;<pos:position pos:line="10" pos:column="62"/></operator> <name pos:line="10" pos:column="57">srcurl<pos:position pos:line="10" pos:column="63"/></name></expr></argument>)<pos:position pos:line="10" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="65"/></expr_stmt>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">success<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21"> <block pos:line="12" pos:column="22">{
            <comment type="block" pos:line="13" pos:column="13">/* copy the lead segment */</comment>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">debugs<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><literal type="number" pos:line="14" pos:column="20">86<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="24">3<pos:position pos:line="14" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="27">"ESIIncludeSubRequestDone: Src OK - include PASSED."<pos:position pos:line="14" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="81"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">assert<pos:position pos:line="15" pos:column="19"/></name> <argument_list pos:line="15" pos:column="20">(<argument><expr><operator pos:line="15" pos:column="21">!<pos:position pos:line="15" pos:column="22"/></operator><call><name><name pos:line="15" pos:column="22">srccontent<pos:position pos:line="15" pos:column="32"/></name><operator pos:line="15" pos:column="32">.<pos:position pos:line="15" pos:column="33"/></operator><name pos:line="15" pos:column="33">getRaw<pos:position pos:line="15" pos:column="39"/></name></name><argument_list pos:line="15" pos:column="39">()<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="16" pos:column="13">ESISegment<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">::<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">ListTransfer<pos:position pos:line="16" pos:column="37"/></name></name> <argument_list pos:line="16" pos:column="38">(<argument><expr><name><name pos:line="16" pos:column="39">stream<pos:position pos:line="16" pos:column="45"/></name><operator pos:line="16" pos:column="45">-&gt;<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="47">localbuffer<pos:position pos:line="16" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="60">srccontent<pos:position pos:line="16" pos:column="70"/></name></expr></argument>)<pos:position pos:line="16" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="72"/></expr_stmt>
            <comment type="block" pos:line="17" pos:column="13">/* we're done! */</comment>
            <expr_stmt><expr><name><name pos:line="18" pos:column="13">flags<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">.<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">finished<pos:position pos:line="18" pos:column="27"/></name></name> <operator pos:line="18" pos:column="28">=<pos:position pos:line="18" pos:column="29"/></operator> <literal type="number" pos:line="18" pos:column="30">1<pos:position pos:line="18" pos:column="31"/></literal></expr>;<pos:position pos:line="18" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then> <else pos:line="19" pos:column="11">else <block pos:line="19" pos:column="16">{
            <comment type="block" pos:line="20" pos:column="13">/* Fail if there is no alt being retrieved */</comment>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">debugs<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="number" pos:line="21" pos:column="20">86<pos:position pos:line="21" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="24">3<pos:position pos:line="21" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="27">"ESIIncludeSubRequestDone: Src FAILED"<pos:position pos:line="21" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="67"/></expr_stmt>

            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><operator pos:line="23" pos:column="17">!<pos:position pos:line="23" pos:column="18"/></operator><operator pos:line="23" pos:column="18">(<pos:position pos:line="23" pos:column="19"/></operator><call><name><name pos:line="23" pos:column="19">alt<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">.<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">getRaw<pos:position pos:line="23" pos:column="29"/></name></name><argument_list pos:line="23" pos:column="29">()<pos:position pos:line="23" pos:column="31"/></argument_list></call> <operator pos:line="23" pos:column="32">||<pos:position pos:line="23" pos:column="34"/></operator> <call><name><name pos:line="23" pos:column="35">altcontent<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">.<pos:position pos:line="23" pos:column="46"/></operator><name pos:line="23" pos:column="46">getRaw<pos:position pos:line="23" pos:column="52"/></name></name><argument_list pos:line="23" pos:column="52">()<pos:position pos:line="23" pos:column="54"/></argument_list></call><operator pos:line="23" pos:column="54">)<pos:position pos:line="23" pos:column="55"/></operator></expr>)<pos:position pos:line="23" pos:column="56"/></condition><then pos:line="23" pos:column="56"> <block pos:line="23" pos:column="57">{
                <expr_stmt><expr><call><name pos:line="24" pos:column="17">debugs<pos:position pos:line="24" pos:column="23"/></name><argument_list pos:line="24" pos:column="23">(<argument><expr><literal type="number" pos:line="24" pos:column="24">86<pos:position pos:line="24" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="28">3<pos:position pos:line="24" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="31">"ESIIncludeSubRequestDone: Include FAILED - No ALT"<pos:position pos:line="24" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="84"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="25" pos:column="17">flags<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">.<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="23">failed<pos:position pos:line="25" pos:column="29"/></name></name> <operator pos:line="25" pos:column="30">=<pos:position pos:line="25" pos:column="31"/></operator> <literal type="number" pos:line="25" pos:column="32">1<pos:position pos:line="25" pos:column="33"/></literal></expr>;<pos:position pos:line="25" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="26" pos:column="14"/></block></then> <elseif pos:line="26" pos:column="15">else <if pos:line="26" pos:column="20">if <condition pos:line="26" pos:column="23">(<expr><call><name><name pos:line="26" pos:column="24">altcontent<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">.<pos:position pos:line="26" pos:column="35"/></operator><name pos:line="26" pos:column="35">getRaw<pos:position pos:line="26" pos:column="41"/></name></name><argument_list pos:line="26" pos:column="41">()<pos:position pos:line="26" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="44"/></condition><then pos:line="26" pos:column="44"> <block pos:line="26" pos:column="45">{
                <expr_stmt><expr><call><name pos:line="27" pos:column="17">debugs<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><literal type="number" pos:line="27" pos:column="24">86<pos:position pos:line="27" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="28">3<pos:position pos:line="27" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="31">"ESIIncludeSubRequestDone: Include PASSED - ALT already Complete"<pos:position pos:line="27" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="98"/></expr_stmt>
                <comment type="block" pos:line="28" pos:column="17">/* ALT was already retrieved, we are done */</comment>
                <expr_stmt><expr><name><name pos:line="29" pos:column="17">flags<pos:position pos:line="29" pos:column="22"/></name><operator pos:line="29" pos:column="22">.<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="23">finished<pos:position pos:line="29" pos:column="31"/></name></name> <operator pos:line="29" pos:column="32">=<pos:position pos:line="29" pos:column="33"/></operator> <literal type="number" pos:line="29" pos:column="34">1<pos:position pos:line="29" pos:column="35"/></literal></expr>;<pos:position pos:line="29" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="30" pos:column="14"/></block></then></if></elseif></if>
        }<pos:position pos:line="31" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="33" pos:column="9">src<pos:position pos:line="33" pos:column="12"/></name> <operator pos:line="33" pos:column="13">=<pos:position pos:line="33" pos:column="14"/></operator> <name pos:line="33" pos:column="15">NULL<pos:position pos:line="33" pos:column="19"/></name></expr>;<pos:position pos:line="33" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></then> <elseif pos:line="34" pos:column="7">else <if pos:line="34" pos:column="12">if <condition pos:line="34" pos:column="15">(<expr><name pos:line="34" pos:column="16">stream<pos:position pos:line="34" pos:column="22"/></name> <operator pos:line="34" pos:column="23">==<pos:position pos:line="34" pos:column="25"/></operator> <name pos:line="34" pos:column="26">alt<pos:position pos:line="34" pos:column="29"/></name></expr>)<pos:position pos:line="34" pos:column="30"/></condition><then pos:line="34" pos:column="30"> <block pos:line="34" pos:column="31">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">debugs<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><literal type="number" pos:line="35" pos:column="16">86<pos:position pos:line="35" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="20">3<pos:position pos:line="35" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="23">"ESIInclude::subRequestDone: "<pos:position pos:line="35" pos:column="53"/></literal> <operator pos:line="35" pos:column="54">&lt;&lt;<pos:position pos:line="35" pos:column="62"/></operator> <name pos:line="35" pos:column="57">alturl<pos:position pos:line="35" pos:column="63"/></name></expr></argument>)<pos:position pos:line="35" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="65"/></expr_stmt>

        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><name pos:line="37" pos:column="13">success<pos:position pos:line="37" pos:column="20"/></name></expr>)<pos:position pos:line="37" pos:column="21"/></condition><then pos:line="37" pos:column="21"> <block pos:line="37" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">debugs<pos:position pos:line="38" pos:column="19"/></name><argument_list pos:line="38" pos:column="19">(<argument><expr><literal type="number" pos:line="38" pos:column="20">86<pos:position pos:line="38" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="24">3<pos:position pos:line="38" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="27">"ESIIncludeSubRequestDone: ALT OK."<pos:position pos:line="38" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="64"/></expr_stmt>
            <comment type="block" pos:line="39" pos:column="13">/* copy the lead segment */</comment>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">assert<pos:position pos:line="40" pos:column="19"/></name> <argument_list pos:line="40" pos:column="20">(<argument><expr><operator pos:line="40" pos:column="21">!<pos:position pos:line="40" pos:column="22"/></operator><call><name><name pos:line="40" pos:column="22">altcontent<pos:position pos:line="40" pos:column="32"/></name><operator pos:line="40" pos:column="32">.<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="33">getRaw<pos:position pos:line="40" pos:column="39"/></name></name><argument_list pos:line="40" pos:column="39">()<pos:position pos:line="40" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="41" pos:column="13">ESISegment<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">::<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">ListTransfer<pos:position pos:line="41" pos:column="37"/></name></name> <argument_list pos:line="41" pos:column="38">(<argument><expr><name><name pos:line="41" pos:column="39">stream<pos:position pos:line="41" pos:column="45"/></name><operator pos:line="41" pos:column="45">-&gt;<pos:position pos:line="41" pos:column="50"/></operator><name pos:line="41" pos:column="47">localbuffer<pos:position pos:line="41" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="60">altcontent<pos:position pos:line="41" pos:column="70"/></name></expr></argument>)<pos:position pos:line="41" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="72"/></expr_stmt>
            <comment type="block" pos:line="42" pos:column="13">/* we're done! */</comment>

            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><operator pos:line="44" pos:column="17">!<pos:position pos:line="44" pos:column="18"/></operator><operator pos:line="44" pos:column="18">(<pos:position pos:line="44" pos:column="19"/></operator><call><name><name pos:line="44" pos:column="19">src<pos:position pos:line="44" pos:column="22"/></name><operator pos:line="44" pos:column="22">.<pos:position pos:line="44" pos:column="23"/></operator><name pos:line="44" pos:column="23">getRaw<pos:position pos:line="44" pos:column="29"/></name></name><argument_list pos:line="44" pos:column="29">()<pos:position pos:line="44" pos:column="31"/></argument_list></call> <operator pos:line="44" pos:column="32">||<pos:position pos:line="44" pos:column="34"/></operator> <call><name><name pos:line="44" pos:column="35">srccontent<pos:position pos:line="44" pos:column="45"/></name><operator pos:line="44" pos:column="45">.<pos:position pos:line="44" pos:column="46"/></operator><name pos:line="44" pos:column="46">getRaw<pos:position pos:line="44" pos:column="52"/></name></name><argument_list pos:line="44" pos:column="52">()<pos:position pos:line="44" pos:column="54"/></argument_list></call><operator pos:line="44" pos:column="54">)<pos:position pos:line="44" pos:column="55"/></operator></expr>)<pos:position pos:line="44" pos:column="56"/></condition><then pos:line="44" pos:column="56"> <block pos:line="44" pos:column="57">{
                <comment type="block" pos:line="45" pos:column="17">/* src already failed, kick ESI processor */</comment>
                <expr_stmt><expr><call><name pos:line="46" pos:column="17">debugs<pos:position pos:line="46" pos:column="23"/></name><argument_list pos:line="46" pos:column="23">(<argument><expr><literal type="number" pos:line="46" pos:column="24">86<pos:position pos:line="46" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="28">3<pos:position pos:line="46" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="31">"ESIIncludeSubRequestDone: Include PASSED - SRC already failed."<pos:position pos:line="46" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="97"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="47" pos:column="17">flags<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">.<pos:position pos:line="47" pos:column="23"/></operator><name pos:line="47" pos:column="23">finished<pos:position pos:line="47" pos:column="31"/></name></name> <operator pos:line="47" pos:column="32">=<pos:position pos:line="47" pos:column="33"/></operator> <literal type="number" pos:line="47" pos:column="34">1<pos:position pos:line="47" pos:column="35"/></literal></expr>;<pos:position pos:line="47" pos:column="36"/></expr_stmt>
            }<pos:position pos:line="48" pos:column="14"/></block></then></if>
        }<pos:position pos:line="49" pos:column="10"/></block></then> <else pos:line="49" pos:column="11">else <block pos:line="49" pos:column="16">{
            <if pos:line="50" pos:column="13">if <condition pos:line="50" pos:column="16">(<expr><operator pos:line="50" pos:column="17">!<pos:position pos:line="50" pos:column="18"/></operator><operator pos:line="50" pos:column="18">(<pos:position pos:line="50" pos:column="19"/></operator><call><name><name pos:line="50" pos:column="19">src<pos:position pos:line="50" pos:column="22"/></name><operator pos:line="50" pos:column="22">.<pos:position pos:line="50" pos:column="23"/></operator><name pos:line="50" pos:column="23">getRaw<pos:position pos:line="50" pos:column="29"/></name></name><argument_list pos:line="50" pos:column="29">()<pos:position pos:line="50" pos:column="31"/></argument_list></call> <operator pos:line="50" pos:column="32">||<pos:position pos:line="50" pos:column="34"/></operator> <call><name><name pos:line="50" pos:column="35">srccontent<pos:position pos:line="50" pos:column="45"/></name><operator pos:line="50" pos:column="45">.<pos:position pos:line="50" pos:column="46"/></operator><name pos:line="50" pos:column="46">getRaw<pos:position pos:line="50" pos:column="52"/></name></name><argument_list pos:line="50" pos:column="52">()<pos:position pos:line="50" pos:column="54"/></argument_list></call><operator pos:line="50" pos:column="54">)<pos:position pos:line="50" pos:column="55"/></operator></expr>)<pos:position pos:line="50" pos:column="56"/></condition><then pos:line="50" pos:column="56"> <block pos:line="50" pos:column="57">{
                <expr_stmt><expr><call><name pos:line="51" pos:column="17">debugs<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><literal type="number" pos:line="51" pos:column="24">86<pos:position pos:line="51" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="28">3<pos:position pos:line="51" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="31">"ESIIncludeSubRequestDone: ALT FAILED, Include FAILED - SRC already failed"<pos:position pos:line="51" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="51" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="108"/></expr_stmt>
                <comment type="block" pos:line="52" pos:column="17">/* src already failed */</comment>
                <expr_stmt><expr><name><name pos:line="53" pos:column="17">flags<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">.<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="23">failed<pos:position pos:line="53" pos:column="29"/></name></name> <operator pos:line="53" pos:column="30">=<pos:position pos:line="53" pos:column="31"/></operator> <literal type="number" pos:line="53" pos:column="32">1<pos:position pos:line="53" pos:column="33"/></literal></expr>;<pos:position pos:line="53" pos:column="34"/></expr_stmt>
            }<pos:position pos:line="54" pos:column="14"/></block></then></if>
        }<pos:position pos:line="55" pos:column="10"/></block></else></if>

        <expr_stmt><expr><name pos:line="57" pos:column="9">alt<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">=<pos:position pos:line="57" pos:column="14"/></operator> <name pos:line="57" pos:column="15">NULL<pos:position pos:line="57" pos:column="19"/></name></expr>;<pos:position pos:line="57" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="58" pos:column="6"/></block></then></if></elseif> <else pos:line="58" pos:column="7">else <block pos:line="58" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">fatal<pos:position pos:line="59" pos:column="14"/></name> <argument_list pos:line="59" pos:column="15">(<argument><expr><literal type="string" pos:line="59" pos:column="16">"ESIIncludeSubRequestDone: non-owned stream found!\n"<pos:position pos:line="59" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="71"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></else></if>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name><name pos:line="62" pos:column="9">flags<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">.<pos:position pos:line="62" pos:column="15"/></operator><name pos:line="62" pos:column="15">finished<pos:position pos:line="62" pos:column="23"/></name></name> <operator pos:line="62" pos:column="24">||<pos:position pos:line="62" pos:column="26"/></operator> <name><name pos:line="62" pos:column="27">flags<pos:position pos:line="62" pos:column="32"/></name><operator pos:line="62" pos:column="32">.<pos:position pos:line="62" pos:column="33"/></operator><name pos:line="62" pos:column="33">failed<pos:position pos:line="62" pos:column="39"/></name></name></expr>)<pos:position pos:line="62" pos:column="40"/></condition><then pos:line="62" pos:column="40"> <block pos:line="62" pos:column="41">{
        <comment type="block" pos:line="63" pos:column="9">/* Kick ESI Processor */</comment>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">debugs<pos:position pos:line="64" pos:column="15"/></name> <argument_list pos:line="64" pos:column="16">(<argument><expr><literal type="number" pos:line="64" pos:column="17">86<pos:position pos:line="64" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="21">5<pos:position pos:line="64" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="24">"ESIInclude "<pos:position pos:line="64" pos:column="37"/></literal> <operator pos:line="64" pos:column="38">&lt;&lt;<pos:position pos:line="64" pos:column="46"/></operator> <name pos:line="64" pos:column="41">this<pos:position pos:line="64" pos:column="45"/></name> <operator pos:line="64" pos:column="46">&lt;&lt;<pos:position pos:line="64" pos:column="54"/></operator>
                <literal type="string" pos:line="65" pos:column="17">" SubRequest "<pos:position pos:line="65" pos:column="31"/></literal> <operator pos:line="65" pos:column="32">&lt;&lt;<pos:position pos:line="65" pos:column="40"/></operator> <call><name><name pos:line="65" pos:column="35">stream<pos:position pos:line="65" pos:column="41"/></name><operator pos:line="65" pos:column="41">.<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="42">getRaw<pos:position pos:line="65" pos:column="48"/></name></name><argument_list pos:line="65" pos:column="48">()<pos:position pos:line="65" pos:column="50"/></argument_list></call> <operator pos:line="65" pos:column="51">&lt;&lt;<pos:position pos:line="65" pos:column="59"/></operator>
                <literal type="string" pos:line="66" pos:column="17">" completed, kicking processor , status "<pos:position pos:line="66" pos:column="58"/></literal> <operator pos:line="66" pos:column="59">&lt;&lt;<pos:position pos:line="66" pos:column="67"/></operator>
                <operator pos:line="67" pos:column="17">(<pos:position pos:line="67" pos:column="18"/></operator><ternary><condition><expr><name><name pos:line="67" pos:column="18">flags<pos:position pos:line="67" pos:column="23"/></name><operator pos:line="67" pos:column="23">.<pos:position pos:line="67" pos:column="24"/></operator><name pos:line="67" pos:column="24">finished<pos:position pos:line="67" pos:column="32"/></name></name></expr> ?<pos:position pos:line="67" pos:column="34"/></condition><then pos:line="67" pos:column="34"> <expr><literal type="string" pos:line="67" pos:column="35">"OK"<pos:position pos:line="67" pos:column="39"/></literal></expr> <pos:position pos:line="67" pos:column="40"/></then><else pos:line="67" pos:column="40">: <expr><literal type="string" pos:line="67" pos:column="42">"FAILED"<pos:position pos:line="67" pos:column="50"/></literal></expr></else></ternary><operator pos:line="67" pos:column="50">)<pos:position pos:line="67" pos:column="51"/></operator></expr></argument>)<pos:position pos:line="67" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="53"/></expr_stmt>
        <comment type="block" pos:line="68" pos:column="9">/* There is a race condition - and we have no reproducible test case -
         * during a subrequest the parent will get set to NULL, which is not
         * meant to be possible. Rather than killing squid, we let it leak
         * memory but complain in the log.
         *
         * Someone wanting to debug this could well start by running squid with
         * a hardware breakpoint set to this location.
         * Its probably due to parent being set to null - by a call to
         * 'this.finish' while the subrequest is still not completed.
         */</comment>
        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><call><name><name pos:line="78" pos:column="13">parent<pos:position pos:line="78" pos:column="19"/></name><operator pos:line="78" pos:column="19">.<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="20">getRaw<pos:position pos:line="78" pos:column="26"/></name></name><argument_list pos:line="78" pos:column="26">()<pos:position pos:line="78" pos:column="28"/></argument_list></call> <operator pos:line="78" pos:column="29">==<pos:position pos:line="78" pos:column="31"/></operator> <name pos:line="78" pos:column="32">NULL<pos:position pos:line="78" pos:column="36"/></name></expr>)<pos:position pos:line="78" pos:column="37"/></condition><then pos:line="78" pos:column="37"> <block pos:line="78" pos:column="38">{
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">debugs<pos:position pos:line="79" pos:column="19"/></name> <argument_list pos:line="79" pos:column="20">(<argument><expr><literal type="number" pos:line="79" pos:column="21">86<pos:position pos:line="79" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="79" pos:column="25">0<pos:position pos:line="79" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="28">"ESIInclude::subRequestDone: Sub request completed "<pos:position pos:line="79" pos:column="80"/></literal>
                    <literal type="string" pos:line="80" pos:column="21">"after finish() called and parent unlinked. Unable to "<pos:position pos:line="80" pos:column="76"/></literal>
                    <literal type="string" pos:line="81" pos:column="21">"continue handling the request, and may be memory leaking. "<pos:position pos:line="81" pos:column="81"/></literal>
                    <literal type="string" pos:line="82" pos:column="21">"See http://www.squid-cache.org/bugs/show_bug.cgi?id=951 - we "<pos:position pos:line="82" pos:column="84"/></literal>
                    <literal type="string" pos:line="83" pos:column="21">"are looking for a reproducible test case. This will require "<pos:position pos:line="83" pos:column="83"/></literal>
                    <literal type="string" pos:line="84" pos:column="21">"an ESI template with includes, probably with alt-options, "<pos:position pos:line="84" pos:column="81"/></literal>
                    <literal type="string" pos:line="85" pos:column="21">"and we're likely to need traffic dumps to allow us to "<pos:position pos:line="85" pos:column="77"/></literal>
                    <literal type="string" pos:line="86" pos:column="21">"reconstruct the exact tcp handling sequences to trigger this "<pos:position pos:line="86" pos:column="84"/></literal>
                    <literal type="string" pos:line="87" pos:column="21">"rather elusive bug."<pos:position pos:line="87" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="87" pos:column="44"/></expr_stmt>
            <return pos:line="88" pos:column="13">return;<pos:position pos:line="88" pos:column="20"/></return>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">assert<pos:position pos:line="90" pos:column="15"/></name> <argument_list pos:line="90" pos:column="16">(<argument><expr><call><name><name pos:line="90" pos:column="17">parent<pos:position pos:line="90" pos:column="23"/></name><operator pos:line="90" pos:column="23">.<pos:position pos:line="90" pos:column="24"/></operator><name pos:line="90" pos:column="24">getRaw<pos:position pos:line="90" pos:column="30"/></name></name><argument_list pos:line="90" pos:column="30">()<pos:position pos:line="90" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="90" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="34"/></expr_stmt>

        <if pos:line="92" pos:column="9">if <condition pos:line="92" pos:column="12">(<expr><operator pos:line="92" pos:column="13">!<pos:position pos:line="92" pos:column="14"/></operator><name><name pos:line="92" pos:column="14">flags<pos:position pos:line="92" pos:column="19"/></name><operator pos:line="92" pos:column="19">.<pos:position pos:line="92" pos:column="20"/></operator><name pos:line="92" pos:column="20">failed<pos:position pos:line="92" pos:column="26"/></name></name></expr>)<pos:position pos:line="92" pos:column="27"/></condition><then pos:line="92" pos:column="27"> <block pos:line="92" pos:column="28">{
            <expr_stmt><expr><name pos:line="93" pos:column="13">sent<pos:position pos:line="93" pos:column="17"/></name> <operator pos:line="93" pos:column="18">=<pos:position pos:line="93" pos:column="19"/></operator> <literal type="boolean" pos:line="93" pos:column="20">true<pos:position pos:line="93" pos:column="24"/></literal></expr>;<pos:position pos:line="93" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="94" pos:column="13">parent<pos:position pos:line="94" pos:column="19"/></name><operator pos:line="94" pos:column="19">-&gt;<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="21">provideData<pos:position pos:line="94" pos:column="32"/></name></name> <argument_list pos:line="94" pos:column="33">(<argument><expr><ternary><condition><expr><call><name><name pos:line="94" pos:column="34">srccontent<pos:position pos:line="94" pos:column="44"/></name><operator pos:line="94" pos:column="44">.<pos:position pos:line="94" pos:column="45"/></operator><name pos:line="94" pos:column="45">getRaw<pos:position pos:line="94" pos:column="51"/></name></name><argument_list pos:line="94" pos:column="51">()<pos:position pos:line="94" pos:column="53"/></argument_list></call></expr> ?<pos:position pos:line="94" pos:column="55"/></condition><then pos:line="94" pos:column="55"> <expr><name pos:line="94" pos:column="56">srccontent<pos:position pos:line="94" pos:column="66"/></name></expr></then><else pos:line="94" pos:column="66">:<expr><name pos:line="94" pos:column="67">altcontent<pos:position pos:line="94" pos:column="77"/></name></expr></else></ternary></expr></argument>,<argument><expr><name pos:line="94" pos:column="78">this<pos:position pos:line="94" pos:column="82"/></name></expr></argument>)<pos:position pos:line="94" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="84"/></expr_stmt>

            <if pos:line="96" pos:column="13">if <condition pos:line="96" pos:column="16">(<expr><call><name><name pos:line="96" pos:column="17">srccontent<pos:position pos:line="96" pos:column="27"/></name><operator pos:line="96" pos:column="27">.<pos:position pos:line="96" pos:column="28"/></operator><name pos:line="96" pos:column="28">getRaw<pos:position pos:line="96" pos:column="34"/></name></name><argument_list pos:line="96" pos:column="34">()<pos:position pos:line="96" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="96" pos:column="37"/></condition><then pos:line="96" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><name pos:line="97" pos:column="17">srccontent<pos:position pos:line="97" pos:column="27"/></name> <operator pos:line="97" pos:column="28">=<pos:position pos:line="97" pos:column="29"/></operator> <name pos:line="97" pos:column="30">NULL<pos:position pos:line="97" pos:column="34"/></name></expr>;<pos:position pos:line="97" pos:column="35"/></expr_stmt></block></then>
            <else pos:line="98" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="17">altcontent<pos:position pos:line="99" pos:column="27"/></name> <operator pos:line="99" pos:column="28">=<pos:position pos:line="99" pos:column="29"/></operator> <name pos:line="99" pos:column="30">NULL<pos:position pos:line="99" pos:column="34"/></name></expr>;<pos:position pos:line="99" pos:column="35"/></expr_stmt></block></else></if>
        }<pos:position pos:line="100" pos:column="10"/></block></then> <elseif pos:line="100" pos:column="11">else <if pos:line="100" pos:column="16">if <condition pos:line="100" pos:column="19">(<expr><name><name pos:line="100" pos:column="20">flags<pos:position pos:line="100" pos:column="25"/></name><operator pos:line="100" pos:column="25">.<pos:position pos:line="100" pos:column="26"/></operator><name pos:line="100" pos:column="26">onerrorcontinue<pos:position pos:line="100" pos:column="41"/></name></name></expr>)<pos:position pos:line="100" pos:column="42"/></condition><then pos:line="100" pos:column="42"> <block pos:line="100" pos:column="43">{
            <comment type="block" pos:line="101" pos:column="13">/* render nothing but inform of completion */</comment>

            <if pos:line="103" pos:column="13">if <condition pos:line="103" pos:column="16">(<expr><operator pos:line="103" pos:column="17">!<pos:position pos:line="103" pos:column="18"/></operator><name pos:line="103" pos:column="18">sent<pos:position pos:line="103" pos:column="22"/></name></expr>)<pos:position pos:line="103" pos:column="23"/></condition><then pos:line="103" pos:column="23"> <block pos:line="103" pos:column="24">{
                <expr_stmt><expr><name pos:line="104" pos:column="17">sent<pos:position pos:line="104" pos:column="21"/></name> <operator pos:line="104" pos:column="22">=<pos:position pos:line="104" pos:column="23"/></operator> <literal type="boolean" pos:line="104" pos:column="24">true<pos:position pos:line="104" pos:column="28"/></literal></expr>;<pos:position pos:line="104" pos:column="29"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="105" pos:column="17">parent<pos:position pos:line="105" pos:column="23"/></name><operator pos:line="105" pos:column="23">-&gt;<pos:position pos:line="105" pos:column="28"/></operator><name pos:line="105" pos:column="25">provideData<pos:position pos:line="105" pos:column="36"/></name></name> <argument_list pos:line="105" pos:column="37">(<argument><expr><operator pos:line="105" pos:column="38">new<pos:position pos:line="105" pos:column="41"/></operator> <name pos:line="105" pos:column="42">ESISegment<pos:position pos:line="105" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="54">this<pos:position pos:line="105" pos:column="58"/></name></expr></argument>)<pos:position pos:line="105" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="60"/></expr_stmt>
            }<pos:position pos:line="106" pos:column="14"/></block></then> <else pos:line="106" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="107" pos:column="17">assert<pos:position pos:line="107" pos:column="23"/></name> <argument_list pos:line="107" pos:column="24">(<argument><expr><literal type="number" pos:line="107" pos:column="25">0<pos:position pos:line="107" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="107" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="28"/></expr_stmt></block></else></if>
        }<pos:position pos:line="108" pos:column="10"/></block></then></if></elseif> <else pos:line="108" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="109" pos:column="13">parent<pos:position pos:line="109" pos:column="19"/></name><operator pos:line="109" pos:column="19">-&gt;<pos:position pos:line="109" pos:column="24"/></operator><name pos:line="109" pos:column="21">fail<pos:position pos:line="109" pos:column="25"/></name></name><argument_list pos:line="109" pos:column="25">(<argument><expr><name pos:line="109" pos:column="26">this<pos:position pos:line="109" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="32">"esi:include could not be completed."<pos:position pos:line="109" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="71"/></expr_stmt></block></else></if>
    }<pos:position pos:line="110" pos:column="6"/></block></then></if>
}<pos:position pos:line="111" pos:column="2"/></block></function></unit>

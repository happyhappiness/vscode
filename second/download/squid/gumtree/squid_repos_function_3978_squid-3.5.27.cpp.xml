<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3978_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Config<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">FreeAccess<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <while pos:line="4" pos:column="5">while <condition pos:line="4" pos:column="11">(<expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><call><name pos:line="4" pos:column="13">AllRules<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">()<pos:position pos:line="4" pos:column="23"/></argument_list></call><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><call><name pos:line="4" pos:column="24">empty<pos:position pos:line="4" pos:column="29"/></name><argument_list pos:line="4" pos:column="29">()<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="32"/></condition> <block pos:line="4" pos:column="33">{
        <expr_stmt><expr><operator pos:line="5" pos:column="9">delete<pos:position pos:line="5" pos:column="15"/></operator> <call><name pos:line="5" pos:column="16">AllRules<pos:position pos:line="5" pos:column="24"/></name><argument_list pos:line="5" pos:column="24">()<pos:position pos:line="5" pos:column="26"/></argument_list></call><operator pos:line="5" pos:column="26">.<pos:position pos:line="5" pos:column="27"/></operator><call><name pos:line="5" pos:column="27">back<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">()<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">AllRules<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">()<pos:position pos:line="6" pos:column="19"/></argument_list></call><operator pos:line="6" pos:column="19">.<pos:position pos:line="6" pos:column="20"/></operator><call><name pos:line="6" pos:column="20">pop_back<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">()<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></while>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

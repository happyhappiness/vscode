<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4968_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">SwapDir<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">updateHeaders<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">StoreEntry<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">updatedE<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">map<pos:position pos:line="4" pos:column="13"/></name></expr>)<pos:position pos:line="4" pos:column="14"/></condition><then pos:line="4" pos:column="14">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">Ipc<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">::<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">StoreMapUpdate<pos:position pos:line="7" pos:column="24"/></name></name></type> <name pos:line="7" pos:column="25">update<pos:position pos:line="7" pos:column="31"/></name><argument_list pos:line="7" pos:column="31">(<argument><expr><name pos:line="7" pos:column="32">updatedE<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name><name pos:line="8" pos:column="10">map<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">openForUpdating<pos:position pos:line="8" pos:column="30"/></name></name><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">update<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="39">updatedE<pos:position pos:line="8" pos:column="47"/></name><operator pos:line="8" pos:column="47">-&gt;<pos:position pos:line="8" pos:column="52"/></operator><name pos:line="8" pos:column="49">swap_filen<pos:position pos:line="8" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="61"/></condition><then pos:line="8" pos:column="61">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <try pos:line="11" pos:column="5">try <block pos:line="11" pos:column="9">{
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">AsyncJob<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">::<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">Start<pos:position pos:line="12" pos:column="24"/></name></name><argument_list pos:line="12" pos:column="24">(<argument><expr><operator pos:line="12" pos:column="25">new<pos:position pos:line="12" pos:column="28"/></operator> <call><name pos:line="12" pos:column="29">HeaderUpdater<pos:position pos:line="12" pos:column="42"/></name><argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">this<pos:position pos:line="12" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="49">update<pos:position pos:line="12" pos:column="55"/></name></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block> <catch pos:line="13" pos:column="7">catch <parameter_list pos:line="13" pos:column="13">(<parameter><decl><type><specifier pos:line="13" pos:column="14">const<pos:position pos:line="13" pos:column="19"/></specifier> <name><name pos:line="13" pos:column="20">std<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">::<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="25">exception<pos:position pos:line="13" pos:column="34"/></name></name> <modifier pos:line="13" pos:column="35">&amp;<pos:position pos:line="13" pos:column="40"/></modifier></type><name pos:line="13" pos:column="36">ex<pos:position pos:line="13" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="13" pos:column="39"/></parameter_list> <block pos:line="13" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">20<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">2<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="23">"error starting to update entry "<pos:position pos:line="14" pos:column="56"/></literal> <operator pos:line="14" pos:column="57">&lt;&lt;<pos:position pos:line="14" pos:column="65"/></operator> <operator pos:line="14" pos:column="60">*<pos:position pos:line="14" pos:column="61"/></operator><name pos:line="14" pos:column="61">updatedE<pos:position pos:line="14" pos:column="69"/></name> <operator pos:line="14" pos:column="70">&lt;&lt;<pos:position pos:line="14" pos:column="78"/></operator> <literal type="string" pos:line="14" pos:column="73">": "<pos:position pos:line="14" pos:column="77"/></literal> <operator pos:line="14" pos:column="78">&lt;&lt;<pos:position pos:line="14" pos:column="86"/></operator> <call><name><name pos:line="14" pos:column="81">ex<pos:position pos:line="14" pos:column="83"/></name><operator pos:line="14" pos:column="83">.<pos:position pos:line="14" pos:column="84"/></operator><name pos:line="14" pos:column="84">what<pos:position pos:line="14" pos:column="88"/></name></name><argument_list pos:line="14" pos:column="88">()<pos:position pos:line="14" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="92"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="15" pos:column="9">map<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">-&gt;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="14">abortUpdating<pos:position pos:line="15" pos:column="27"/></name></name><argument_list pos:line="15" pos:column="27">(<argument><expr><name pos:line="15" pos:column="28">update<pos:position pos:line="15" pos:column="34"/></name></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></catch></try>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

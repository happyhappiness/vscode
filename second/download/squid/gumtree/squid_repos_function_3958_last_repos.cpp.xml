<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3958_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">PeekingPeerConnector<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">handleServerCertificate<pos:position pos:line="2" pos:column="51"/></name></name><parameter_list pos:line="2" pos:column="51">()<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">serverCertificateHandled<pos:position pos:line="4" pos:column="33"/></name></expr>)<pos:position pos:line="4" pos:column="34"/></condition><then pos:line="4" pos:column="34">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<decl><type><name pos:line="7" pos:column="9">ConnStateData<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">csd<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><call><name><name pos:line="7" pos:column="30">request<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">clientConnectionManager<pos:position pos:line="7" pos:column="62"/></name><operator pos:line="7" pos:column="62">.<pos:position pos:line="7" pos:column="63"/></operator><name pos:line="7" pos:column="63">valid<pos:position pos:line="7" pos:column="68"/></name></name><argument_list pos:line="7" pos:column="68">()<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr></init></decl>)<pos:position pos:line="7" pos:column="71"/></condition><then pos:line="7" pos:column="71"> <block pos:line="7" pos:column="72">{
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">int<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">fd<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><call><name pos:line="8" pos:column="24">serverConnection<pos:position pos:line="8" pos:column="40"/></name><argument_list pos:line="8" pos:column="40">()<pos:position pos:line="8" pos:column="42"/></argument_list></call><operator pos:line="8" pos:column="42">-&gt;<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="44">fd<pos:position pos:line="8" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="9" pos:column="9">Security<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">::<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">SessionPointer<pos:position pos:line="9" pos:column="33"/></name></name></type> <name pos:line="9" pos:column="34">session<pos:position pos:line="9" pos:column="41"/></name><argument_list pos:line="9" pos:column="41">(<argument><expr><name><name pos:line="9" pos:column="42">fd_table<pos:position pos:line="9" pos:column="50"/></name><index pos:line="9" pos:column="50">[<expr><name pos:line="9" pos:column="51">fd<pos:position pos:line="9" pos:column="53"/></name></expr>]<pos:position pos:line="9" pos:column="54"/></index></name><operator pos:line="9" pos:column="54">.<pos:position pos:line="9" pos:column="55"/></operator><name pos:line="9" pos:column="55">ssl<pos:position pos:line="9" pos:column="58"/></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></decl>;<pos:position pos:line="9" pos:column="60"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="10" pos:column="9">Security<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">::<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">CertPointer<pos:position pos:line="10" pos:column="30"/></name></name></type> <name pos:line="10" pos:column="31">serverCert<pos:position pos:line="10" pos:column="41"/></name><argument_list pos:line="10" pos:column="41">(<argument><expr><call><name pos:line="10" pos:column="42">SSL_get_peer_certificate<pos:position pos:line="10" pos:column="66"/></name><argument_list pos:line="10" pos:column="66">(<argument><expr><call><name><name pos:line="10" pos:column="67">session<pos:position pos:line="10" pos:column="74"/></name><operator pos:line="10" pos:column="74">.<pos:position pos:line="10" pos:column="75"/></operator><name pos:line="10" pos:column="75">get<pos:position pos:line="10" pos:column="78"/></name></name><argument_list pos:line="10" pos:column="78">()<pos:position pos:line="10" pos:column="80"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="82"/></argument_list></decl>;<pos:position pos:line="10" pos:column="83"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><operator pos:line="11" pos:column="13">!<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">serverCert<pos:position pos:line="11" pos:column="24"/></name></expr>)<pos:position pos:line="11" pos:column="25"/></condition><then pos:line="11" pos:column="25">
            <block type="pseudo"><return pos:line="12" pos:column="13">return;<pos:position pos:line="12" pos:column="20"/></return></block></then></if>

        <expr_stmt><expr><name pos:line="14" pos:column="9">serverCertificateHandled<pos:position pos:line="14" pos:column="33"/></name> <operator pos:line="14" pos:column="34">=<pos:position pos:line="14" pos:column="35"/></operator> <literal type="boolean" pos:line="14" pos:column="36">true<pos:position pos:line="14" pos:column="40"/></literal></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>

        <comment type="line" pos:line="16" pos:column="9">// remember the server certificate for later use</comment>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<decl><type><name><name pos:line="17" pos:column="13">Ssl<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">::<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">ServerBump<pos:position pos:line="17" pos:column="28"/></name></name> <modifier pos:line="17" pos:column="29">*<pos:position pos:line="17" pos:column="30"/></modifier></type><name pos:line="17" pos:column="30">serverBump<pos:position pos:line="17" pos:column="40"/></name> <init pos:line="17" pos:column="41">= <expr><call><name><name pos:line="17" pos:column="43">csd<pos:position pos:line="17" pos:column="46"/></name><operator pos:line="17" pos:column="46">-&gt;<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="48">serverBump<pos:position pos:line="17" pos:column="58"/></name></name><argument_list pos:line="17" pos:column="58">()<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr></init></decl>)<pos:position pos:line="17" pos:column="61"/></condition><then pos:line="17" pos:column="61"> <block pos:line="17" pos:column="62">{
            <expr_stmt><expr><name><name pos:line="18" pos:column="13">serverBump<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">serverCert<pos:position pos:line="18" pos:column="35"/></name></name> <operator pos:line="18" pos:column="36">=<pos:position pos:line="18" pos:column="37"/></operator> <call><name><name pos:line="18" pos:column="38">std<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">::<pos:position pos:line="18" pos:column="43"/></operator><name pos:line="18" pos:column="43">move<pos:position pos:line="18" pos:column="47"/></name></name><argument_list pos:line="18" pos:column="47">(<argument><expr><name pos:line="18" pos:column="48">serverCert<pos:position pos:line="18" pos:column="58"/></name></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

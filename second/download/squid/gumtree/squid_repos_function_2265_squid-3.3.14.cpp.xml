<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2265_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">httpHeaderCalcMask<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">HttpHeaderMask<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">mask<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">http_hdr_type<pos:position pos:line="2" pos:column="56"/></name></type> <name><name pos:line="2" pos:column="57">http_hdr_type_enums<pos:position pos:line="2" pos:column="76"/></name><index pos:line="2" pos:column="76">[]<pos:position pos:line="2" pos:column="78"/></index></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="80">size_t<pos:position pos:line="2" pos:column="86"/></name></type> <name pos:line="2" pos:column="87">count<pos:position pos:line="2" pos:column="92"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="93"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">i<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">int<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type> <name pos:line="5" pos:column="17">enums<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><operator pos:line="5" pos:column="25">(<pos:position pos:line="5" pos:column="26"/></operator><specifier pos:line="5" pos:column="26">const<pos:position pos:line="5" pos:column="31"/></specifier> <name pos:line="5" pos:column="32">int<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">*<pos:position pos:line="5" pos:column="37"/></operator><operator pos:line="5" pos:column="37">)<pos:position pos:line="5" pos:column="38"/></operator> <name pos:line="5" pos:column="39">http_hdr_type_enums<pos:position pos:line="5" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="59"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">mask<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">&amp;&amp;<pos:position pos:line="6" pos:column="27"/></operator> <name pos:line="6" pos:column="20">enums<pos:position pos:line="6" pos:column="25"/></name></expr></argument>)<pos:position pos:line="6" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">count<pos:position pos:line="7" pos:column="17"/></name> <operator pos:line="7" pos:column="18">&lt;<pos:position pos:line="7" pos:column="22"/></operator> <sizeof pos:line="7" pos:column="20">sizeof<argument_list pos:line="7" pos:column="26">(<argument><expr><operator pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">mask<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></sizeof> <operator pos:line="7" pos:column="34">*<pos:position pos:line="7" pos:column="35"/></operator> <literal type="number" pos:line="7" pos:column="36">8<pos:position pos:line="7" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>	<comment type="block" pos:line="7" pos:column="41">/* check for overflow */</comment>

    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><expr><name pos:line="9" pos:column="10">i<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></init> <condition><expr><name pos:line="9" pos:column="17">i<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&lt;<pos:position pos:line="9" pos:column="23"/></operator> <name pos:line="9" pos:column="21">count<pos:position pos:line="9" pos:column="26"/></name></expr>;<pos:position pos:line="9" pos:column="27"/></condition> <incr><expr><operator pos:line="9" pos:column="28">++<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">i<pos:position pos:line="9" pos:column="31"/></name></expr></incr>)<pos:position pos:line="9" pos:column="32"/></control> <block pos:line="9" pos:column="33">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">assert<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><operator pos:line="10" pos:column="16">!<pos:position pos:line="10" pos:column="17"/></operator><call><name pos:line="10" pos:column="17">CBIT_TEST<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><operator pos:line="10" pos:column="27">*<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">mask<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="34">enums<pos:position pos:line="10" pos:column="39"/></name><index pos:line="10" pos:column="39">[<expr><name pos:line="10" pos:column="40">i<pos:position pos:line="10" pos:column="41"/></name></expr>]<pos:position pos:line="10" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt>	<comment type="block" pos:line="10" pos:column="49">/* check for duplicates */</comment>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">CBIT_SET<pos:position pos:line="11" pos:column="17"/></name><argument_list pos:line="11" pos:column="17">(<argument><expr><operator pos:line="11" pos:column="18">*<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">mask<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="25">enums<pos:position pos:line="11" pos:column="30"/></name><index pos:line="11" pos:column="30">[<expr><name pos:line="11" pos:column="31">i<pos:position pos:line="11" pos:column="32"/></name></expr>]<pos:position pos:line="11" pos:column="33"/></index></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></for>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

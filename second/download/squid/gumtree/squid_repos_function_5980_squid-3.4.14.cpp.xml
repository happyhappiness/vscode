<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5980_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Snmp<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Pdu<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">pack<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name><name pos:line="2" pos:column="17">Ipc<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">TypedMsgHdr<pos:position pos:line="2" pos:column="33"/></name></name><modifier pos:line="2" pos:column="33">&amp;<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="35">msg<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list> <specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">msg<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">.<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">putPod<pos:position pos:line="4" pos:column="15"/></name></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">command<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">msg<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">.<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">putPod<pos:position pos:line="5" pos:column="15"/></name></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">address<pos:position pos:line="5" pos:column="23"/></name></expr></argument>)<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">msg<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">.<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">putPod<pos:position pos:line="6" pos:column="15"/></name></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">reqid<pos:position pos:line="6" pos:column="21"/></name></expr></argument>)<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">msg<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">.<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">putPod<pos:position pos:line="7" pos:column="15"/></name></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">errstat<pos:position pos:line="7" pos:column="23"/></name></expr></argument>)<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">msg<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">.<pos:position pos:line="8" pos:column="9"/></operator><name pos:line="8" pos:column="9">putPod<pos:position pos:line="8" pos:column="15"/></name></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">errindex<pos:position pos:line="8" pos:column="24"/></name></expr></argument>)<pos:position pos:line="8" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">msg<pos:position pos:line="9" pos:column="8"/></name><operator pos:line="9" pos:column="8">.<pos:position pos:line="9" pos:column="9"/></operator><name pos:line="9" pos:column="9">putPod<pos:position pos:line="9" pos:column="15"/></name></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">non_repeaters<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="10" pos:column="5">msg<pos:position pos:line="10" pos:column="8"/></name><operator pos:line="10" pos:column="8">.<pos:position pos:line="10" pos:column="9"/></operator><name pos:line="10" pos:column="9">putPod<pos:position pos:line="10" pos:column="15"/></name></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">max_repetitions<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">msg<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">.<pos:position pos:line="11" pos:column="9"/></operator><name pos:line="11" pos:column="9">putInt<pos:position pos:line="11" pos:column="15"/></name></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name pos:line="11" pos:column="16">enterprise_length<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">enterprise_length<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">&gt;<pos:position pos:line="12" pos:column="31"/></operator> <literal type="number" pos:line="12" pos:column="29">0<pos:position pos:line="12" pos:column="30"/></literal></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31"> <block pos:line="12" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">Must<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">enterprise<pos:position pos:line="13" pos:column="24"/></name> <operator pos:line="13" pos:column="25">!=<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">NULL<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="14" pos:column="9">msg<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">.<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">putFixed<pos:position pos:line="14" pos:column="21"/></name></name><argument_list pos:line="14" pos:column="21">(<argument><expr><name pos:line="14" pos:column="22">enterprise<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">enterprise_length<pos:position pos:line="14" pos:column="51"/></name> <operator pos:line="14" pos:column="52">*<pos:position pos:line="14" pos:column="53"/></operator> <sizeof pos:line="14" pos:column="54">sizeof<argument_list pos:line="14" pos:column="60">(<argument><expr><name pos:line="14" pos:column="61">oid<pos:position pos:line="14" pos:column="64"/></name></expr></argument>)<pos:position pos:line="14" pos:column="65"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="67"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="16" pos:column="5">msg<pos:position pos:line="16" pos:column="8"/></name><operator pos:line="16" pos:column="8">.<pos:position pos:line="16" pos:column="9"/></operator><name pos:line="16" pos:column="9">putPod<pos:position pos:line="16" pos:column="15"/></name></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">agent_addr<pos:position pos:line="16" pos:column="26"/></name></expr></argument>)<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">msg<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">.<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">putPod<pos:position pos:line="17" pos:column="15"/></name></name><argument_list pos:line="17" pos:column="15">(<argument><expr><name pos:line="17" pos:column="16">trap_type<pos:position pos:line="17" pos:column="25"/></name></expr></argument>)<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">msg<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">.<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">putPod<pos:position pos:line="18" pos:column="15"/></name></name><argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">specific_type<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">msg<pos:position pos:line="19" pos:column="8"/></name><operator pos:line="19" pos:column="8">.<pos:position pos:line="19" pos:column="9"/></operator><name pos:line="19" pos:column="9">putPod<pos:position pos:line="19" pos:column="15"/></name></name><argument_list pos:line="19" pos:column="15">(<argument><expr><name pos:line="19" pos:column="16">time<pos:position pos:line="19" pos:column="20"/></name></expr></argument>)<pos:position pos:line="19" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="20" pos:column="5">msg<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">.<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">putInt<pos:position pos:line="20" pos:column="15"/></name></name><argument_list pos:line="20" pos:column="15">(<argument><expr><call><name pos:line="20" pos:column="16">varCount<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">()<pos:position pos:line="20" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init><decl><type><name pos:line="21" pos:column="10">variable_list<pos:position pos:line="21" pos:column="23"/></name><modifier pos:line="21" pos:column="23">*<pos:position pos:line="21" pos:column="24"/></modifier></type> <name pos:line="21" pos:column="25">var<pos:position pos:line="21" pos:column="28"/></name> <init pos:line="21" pos:column="29">= <expr><name pos:line="21" pos:column="31">variables<pos:position pos:line="21" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="21" pos:column="41"/></init> <condition><expr><name pos:line="21" pos:column="42">var<pos:position pos:line="21" pos:column="45"/></name> <operator pos:line="21" pos:column="46">!=<pos:position pos:line="21" pos:column="48"/></operator> <name pos:line="21" pos:column="49">NULL<pos:position pos:line="21" pos:column="53"/></name></expr>;<pos:position pos:line="21" pos:column="54"/></condition> <incr><expr><name pos:line="21" pos:column="55">var<pos:position pos:line="21" pos:column="58"/></name> <operator pos:line="21" pos:column="59">=<pos:position pos:line="21" pos:column="60"/></operator> <name><name pos:line="21" pos:column="61">var<pos:position pos:line="21" pos:column="64"/></name><operator pos:line="21" pos:column="64">-&gt;<pos:position pos:line="21" pos:column="69"/></operator><name pos:line="21" pos:column="66">next_variable<pos:position pos:line="21" pos:column="79"/></name></name></expr></incr>)<pos:position pos:line="21" pos:column="80"/></control>
        <block type="pseudo"><expr_stmt><expr><cast type="static" pos:line="22" pos:column="9">static_cast<argument_list type="generic" pos:line="22" pos:column="20">&lt;<argument><expr><name pos:line="22" pos:column="21">Var<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></operator></expr></argument>&gt;<pos:position pos:line="22" pos:column="29"/></argument_list><argument_list pos:line="22" pos:column="26">(<argument><expr><name pos:line="22" pos:column="27">var<pos:position pos:line="22" pos:column="30"/></name></expr></argument>)<pos:position pos:line="22" pos:column="31"/></argument_list></cast><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><call><name pos:line="22" pos:column="33">pack<pos:position pos:line="22" pos:column="37"/></name><argument_list pos:line="22" pos:column="37">(<argument><expr><name pos:line="22" pos:column="38">msg<pos:position pos:line="22" pos:column="41"/></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt></block></for>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

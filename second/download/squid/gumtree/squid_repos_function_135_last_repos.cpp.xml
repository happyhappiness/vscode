<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_135_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">loadTlsParameters<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">err<pos:position pos:line="4" pos:column="20"/></name> <init pos:line="4" pos:column="21">= <expr><name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">x<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">x<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <call><name pos:line="6" pos:column="14">gnutls_priority_set_direct<pos:position pos:line="6" pos:column="40"/></name><argument_list pos:line="6" pos:column="40">(<argument><expr><name><name pos:line="6" pos:column="41">Transport<pos:position pos:line="6" pos:column="50"/></name><operator pos:line="6" pos:column="50">::<pos:position pos:line="6" pos:column="52"/></operator><name pos:line="6" pos:column="52">Config<pos:position pos:line="6" pos:column="58"/></name><operator pos:line="6" pos:column="58">.<pos:position pos:line="6" pos:column="59"/></operator><name pos:line="6" pos:column="59">session<pos:position pos:line="6" pos:column="66"/></name></name></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="68">Transport<pos:position pos:line="6" pos:column="77"/></name><operator pos:line="6" pos:column="77">::<pos:position pos:line="6" pos:column="79"/></operator><name pos:line="6" pos:column="79">Config<pos:position pos:line="6" pos:column="85"/></name><operator pos:line="6" pos:column="85">.<pos:position pos:line="6" pos:column="86"/></operator><name pos:line="6" pos:column="86">params<pos:position pos:line="6" pos:column="92"/></name></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="94">&amp;<pos:position pos:line="6" pos:column="99"/></operator><name pos:line="6" pos:column="95">err<pos:position pos:line="6" pos:column="98"/></name></expr></argument>)<pos:position pos:line="6" pos:column="99"/></argument_list></call><operator pos:line="6" pos:column="99">)<pos:position pos:line="6" pos:column="100"/></operator> <operator pos:line="6" pos:column="101">!=<pos:position pos:line="6" pos:column="103"/></operator> <name pos:line="6" pos:column="104">GNUTLS_E_SUCCESS<pos:position pos:line="6" pos:column="120"/></name></expr>)<pos:position pos:line="6" pos:column="121"/></condition><then pos:line="6" pos:column="121"> <block pos:line="6" pos:column="122">{
        <if pos:line="7" pos:column="9">if <condition pos:line="7" pos:column="12">(<expr><name pos:line="7" pos:column="13">x<pos:position pos:line="7" pos:column="14"/></name> <operator pos:line="7" pos:column="15">==<pos:position pos:line="7" pos:column="17"/></operator> <name pos:line="7" pos:column="18">GNUTLS_E_INVALID_REQUEST<pos:position pos:line="7" pos:column="42"/></name></expr>)<pos:position pos:line="7" pos:column="43"/></condition><then pos:line="7" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="8" pos:column="13">std<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">::<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">cerr<pos:position pos:line="8" pos:column="22"/></name></name> <operator pos:line="8" pos:column="23">&lt;&lt;<pos:position pos:line="8" pos:column="31"/></operator> <literal type="string" pos:line="8" pos:column="26">"ERROR: Syntax error at: "<pos:position pos:line="8" pos:column="52"/></literal> <operator pos:line="8" pos:column="53">&lt;&lt;<pos:position pos:line="8" pos:column="61"/></operator> <name pos:line="8" pos:column="56">err<pos:position pos:line="8" pos:column="59"/></name> <operator pos:line="8" pos:column="60">&lt;&lt;<pos:position pos:line="8" pos:column="68"/></operator> <name><name pos:line="8" pos:column="63">std<pos:position pos:line="8" pos:column="66"/></name><operator pos:line="8" pos:column="66">::<pos:position pos:line="8" pos:column="68"/></operator><name pos:line="8" pos:column="68">endl<pos:position pos:line="8" pos:column="72"/></name></name></expr>;<pos:position pos:line="8" pos:column="73"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">gnutls_perror<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">x<pos:position pos:line="9" pos:column="24"/></name></expr></argument>)<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
        <return pos:line="10" pos:column="9">return <expr><literal type="boolean" pos:line="10" pos:column="16">false<pos:position pos:line="10" pos:column="21"/></literal></expr>;<pos:position pos:line="10" pos:column="22"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <return pos:line="12" pos:column="5">return <expr><literal type="boolean" pos:line="12" pos:column="12">true<pos:position pos:line="12" pos:column="16"/></literal></expr>;<pos:position pos:line="12" pos:column="17"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2746_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">TunnelStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">informUserOfPeerError<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">(<parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">errMsg<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="60">const<pos:position pos:line="2" pos:column="65"/></specifier> <name pos:line="2" pos:column="66">size_t<pos:position pos:line="2" pos:column="72"/></name></type> <name pos:line="2" pos:column="73">sz<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">server<pos:position pos:line="4" pos:column="11"/></name><operator pos:line="4" pos:column="11">.<pos:position pos:line="4" pos:column="12"/></operator><name pos:line="4" pos:column="12">len<pos:position pos:line="4" pos:column="15"/></name></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr>;<pos:position pos:line="4" pos:column="20"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">logTag_ptr<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="7" pos:column="9">*<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">logTag_ptr<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">=<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">LOG_TCP_TUNNEL<pos:position pos:line="7" pos:column="37"/></name></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">clientExpectsConnectResponse<pos:position pos:line="9" pos:column="38"/></name><argument_list pos:line="9" pos:column="38">()<pos:position pos:line="9" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="41"/></condition><then pos:line="9" pos:column="41"> <block pos:line="9" pos:column="42">{
        <comment type="line" pos:line="10" pos:column="9">// closing the connection is the best we can do here</comment>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">50<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="23">server<pos:position pos:line="11" pos:column="29"/></name><operator pos:line="11" pos:column="29">.<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">conn<pos:position pos:line="11" pos:column="34"/></name></name> <operator pos:line="11" pos:column="35">&lt;&lt;<pos:position pos:line="11" pos:column="43"/></operator> <literal type="string" pos:line="11" pos:column="38">" closing on error: "<pos:position pos:line="11" pos:column="59"/></literal> <operator pos:line="11" pos:column="60">&lt;&lt;<pos:position pos:line="11" pos:column="68"/></operator> <name pos:line="11" pos:column="63">errMsg<pos:position pos:line="11" pos:column="69"/></name></expr></argument>)<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="71"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">server<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">conn<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">close<pos:position pos:line="12" pos:column="27"/></name></name><argument_list pos:line="12" pos:column="27">()<pos:position pos:line="12" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="30"/></expr_stmt>
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="16" pos:column="5">// if we have no reply suitable to relay, use 502 Bad Gateway</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">sz<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">||<pos:position pos:line="17" pos:column="15"/></operator> <name pos:line="17" pos:column="16">sz<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">&gt;<pos:position pos:line="17" pos:column="23"/></operator> <cast type="static" pos:line="17" pos:column="21">static_cast<argument_list type="generic" pos:line="17" pos:column="32">&lt;<argument><expr><name pos:line="17" pos:column="33">size_t<pos:position pos:line="17" pos:column="39"/></name></expr></argument>&gt;<pos:position pos:line="17" pos:column="43"/></argument_list><argument_list pos:line="17" pos:column="40">(<argument><expr><call><name><name pos:line="17" pos:column="41">connectRespBuf<pos:position pos:line="17" pos:column="55"/></name><operator pos:line="17" pos:column="55">-&gt;<pos:position pos:line="17" pos:column="60"/></operator><name pos:line="17" pos:column="57">contentSize<pos:position pos:line="17" pos:column="68"/></name></name><argument_list pos:line="17" pos:column="68">()<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="71"/></argument_list></cast></expr>)<pos:position pos:line="17" pos:column="72"/></condition><then pos:line="17" pos:column="72"> <block pos:line="17" pos:column="73">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">ErrorState<pos:position pos:line="18" pos:column="19"/></name> <modifier pos:line="18" pos:column="20">*<pos:position pos:line="18" pos:column="21"/></modifier></type><name pos:line="18" pos:column="21">err<pos:position pos:line="18" pos:column="24"/></name> <init pos:line="18" pos:column="25">= <expr><operator pos:line="18" pos:column="27">new<pos:position pos:line="18" pos:column="30"/></operator> <call><name pos:line="18" pos:column="31">ErrorState<pos:position pos:line="18" pos:column="41"/></name><argument_list pos:line="18" pos:column="41">(<argument><expr><name pos:line="18" pos:column="42">ERR_CONNECT_FAIL<pos:position pos:line="18" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="60">Http<pos:position pos:line="18" pos:column="64"/></name><operator pos:line="18" pos:column="64">::<pos:position pos:line="18" pos:column="66"/></operator><name pos:line="18" pos:column="66">scBadGateway<pos:position pos:line="18" pos:column="78"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="18" pos:column="80">request<pos:position pos:line="18" pos:column="87"/></name><operator pos:line="18" pos:column="87">.<pos:position pos:line="18" pos:column="88"/></operator><name pos:line="18" pos:column="88">getRaw<pos:position pos:line="18" pos:column="94"/></name></name><argument_list pos:line="18" pos:column="94">()<pos:position pos:line="18" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="97"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="98"/></decl_stmt>
        <expr_stmt><expr><operator pos:line="19" pos:column="9">*<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">status_ptr<pos:position pos:line="19" pos:column="20"/></name> <operator pos:line="19" pos:column="21">=<pos:position pos:line="19" pos:column="22"/></operator> <name><name pos:line="19" pos:column="23">Http<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">::<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">scBadGateway<pos:position pos:line="19" pos:column="41"/></name></name></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">err<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">callback<pos:position pos:line="20" pos:column="22"/></name></name> <operator pos:line="20" pos:column="23">=<pos:position pos:line="20" pos:column="24"/></operator> <name pos:line="20" pos:column="25">tunnelErrorComplete<pos:position pos:line="20" pos:column="44"/></name></expr>;<pos:position pos:line="20" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">err<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">callback_data<pos:position pos:line="21" pos:column="27"/></name></name> <operator pos:line="21" pos:column="28">=<pos:position pos:line="21" pos:column="29"/></operator> <name pos:line="21" pos:column="30">this<pos:position pos:line="21" pos:column="34"/></name></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">errorSend<pos:position pos:line="22" pos:column="18"/></name><argument_list pos:line="22" pos:column="18">(<argument><expr><call><name><name pos:line="22" pos:column="19">http<pos:position pos:line="22" pos:column="23"/></name><operator pos:line="22" pos:column="23">-&gt;<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="25">getConn<pos:position pos:line="22" pos:column="32"/></name></name><argument_list pos:line="22" pos:column="32">()<pos:position pos:line="22" pos:column="34"/></argument_list></call><operator pos:line="22" pos:column="34">-&gt;<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="36">clientConnection<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">err<pos:position pos:line="22" pos:column="57"/></name></expr></argument>)<pos:position pos:line="22" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="59"/></expr_stmt>
        <return pos:line="23" pos:column="9">return;<pos:position pos:line="23" pos:column="16"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="26" pos:column="5">// if we need to send back the server response. write its headers to the client</comment>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">server<pos:position pos:line="27" pos:column="11"/></name><operator pos:line="27" pos:column="11">.<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="12">len<pos:position pos:line="27" pos:column="15"/></name></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">sz<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">memcpy<pos:position pos:line="28" pos:column="11"/></name><argument_list pos:line="28" pos:column="11">(<argument><expr><name><name pos:line="28" pos:column="12">server<pos:position pos:line="28" pos:column="18"/></name><operator pos:line="28" pos:column="18">.<pos:position pos:line="28" pos:column="19"/></operator><name pos:line="28" pos:column="19">buf<pos:position pos:line="28" pos:column="22"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="28" pos:column="24">connectRespBuf<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">-&gt;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="40">content<pos:position pos:line="28" pos:column="47"/></name></name><argument_list pos:line="28" pos:column="47">()<pos:position pos:line="28" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="51">server<pos:position pos:line="28" pos:column="57"/></name><operator pos:line="28" pos:column="57">.<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="58">len<pos:position pos:line="28" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="28" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="63"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">copy<pos:position pos:line="29" pos:column="9"/></name><argument_list pos:line="29" pos:column="9">(<argument><expr><name><name pos:line="29" pos:column="10">server<pos:position pos:line="29" pos:column="16"/></name><operator pos:line="29" pos:column="16">.<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">len<pos:position pos:line="29" pos:column="20"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="22">server<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="30">client<pos:position pos:line="29" pos:column="36"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="38">TunnelStateData<pos:position pos:line="29" pos:column="53"/></name><operator pos:line="29" pos:column="53">::<pos:position pos:line="29" pos:column="55"/></operator><name pos:line="29" pos:column="55">WriteClientDone<pos:position pos:line="29" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="72"/></expr_stmt>
    <comment type="line" pos:line="30" pos:column="5">// then close the server FD to prevent any relayed keep-alive causing CVE-2015-5400</comment>
    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">server<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">.<pos:position pos:line="31" pos:column="12"/></operator><name pos:line="31" pos:column="12">closeIfOpen<pos:position pos:line="31" pos:column="23"/></name></name><argument_list pos:line="31" pos:column="23">()<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

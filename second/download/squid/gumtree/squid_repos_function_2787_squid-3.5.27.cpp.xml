<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2787_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHeader<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">clean<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">()<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">owner<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">&gt;<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="20">hoNone<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&amp;&amp;<pos:position pos:line="5" pos:column="37"/></operator> <name pos:line="5" pos:column="30">owner<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">&lt;<pos:position pos:line="5" pos:column="40"/></operator> <name pos:line="5" pos:column="38">hoEnd<pos:position pos:line="5" pos:column="43"/></name></expr></argument>)<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">55<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">7<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"cleaning hdr: "<pos:position pos:line="6" pos:column="35"/></literal> <operator pos:line="6" pos:column="36">&lt;&lt;<pos:position pos:line="6" pos:column="44"/></operator> <name pos:line="6" pos:column="39">this<pos:position pos:line="6" pos:column="43"/></name> <operator pos:line="6" pos:column="44">&lt;&lt;<pos:position pos:line="6" pos:column="52"/></operator> <literal type="string" pos:line="6" pos:column="47">" owner: "<pos:position pos:line="6" pos:column="57"/></literal> <operator pos:line="6" pos:column="58">&lt;&lt;<pos:position pos:line="6" pos:column="66"/></operator> <name pos:line="6" pos:column="61">owner<pos:position pos:line="6" pos:column="66"/></name></expr></argument>)<pos:position pos:line="6" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="68"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">PROF_start<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">HttpHeaderClean<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">owner<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">&lt;=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="18">hoReply<pos:position pos:line="10" pos:column="25"/></name></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26"> <block pos:line="10" pos:column="27">{
        <comment type="block" pos:line="11" pos:column="9">/*
         * An unfortunate bug.  The entries array is initialized
         * such that count is set to zero.  httpHeaderClean() seems to
         * be called both when 'hdr' is created, and destroyed.  Thus,
         * we accumulate a large number of zero counts for 'hdr' before
         * it is ever used.  Can't think of a good way to fix it, except
         * adding a state variable that indicates whether or not 'hdr'
         * has been used.  As a hack, just never count zero-sized header
         * arrays.
         */</comment>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><call><name><name pos:line="21" pos:column="14">entries<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">.<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="22">empty<pos:position pos:line="21" pos:column="27"/></name></name><argument_list pos:line="21" pos:column="27">()<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="30"/></condition><then pos:line="21" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="22" pos:column="13">HttpHeaderStats<pos:position pos:line="22" pos:column="28"/></name><index pos:line="22" pos:column="28">[<expr><name pos:line="22" pos:column="29">owner<pos:position pos:line="22" pos:column="34"/></name></expr>]<pos:position pos:line="22" pos:column="35"/></index></name><operator pos:line="22" pos:column="35">.<pos:position pos:line="22" pos:column="36"/></operator><call><name><name pos:line="22" pos:column="36">hdrUCountDistr<pos:position pos:line="22" pos:column="50"/></name><operator pos:line="22" pos:column="50">.<pos:position pos:line="22" pos:column="51"/></operator><name pos:line="22" pos:column="51">count<pos:position pos:line="22" pos:column="56"/></name></name><argument_list pos:line="22" pos:column="56">(<argument><expr><call><name><name pos:line="22" pos:column="57">entries<pos:position pos:line="22" pos:column="64"/></name><operator pos:line="22" pos:column="64">.<pos:position pos:line="22" pos:column="65"/></operator><name pos:line="22" pos:column="65">size<pos:position pos:line="22" pos:column="69"/></name></name><argument_list pos:line="22" pos:column="69">()<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="73"/></expr_stmt></block></then></if>

        <expr_stmt><expr><operator pos:line="24" pos:column="9">++<pos:position pos:line="24" pos:column="11"/></operator> <name><name pos:line="24" pos:column="12">HttpHeaderStats<pos:position pos:line="24" pos:column="27"/></name><index pos:line="24" pos:column="27">[<expr><name pos:line="24" pos:column="28">owner<pos:position pos:line="24" pos:column="33"/></name></expr>]<pos:position pos:line="24" pos:column="34"/></index></name><operator pos:line="24" pos:column="34">.<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="35">destroyedCount<pos:position pos:line="24" pos:column="49"/></name></expr>;<pos:position pos:line="24" pos:column="50"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="26" pos:column="9">HttpHeaderStats<pos:position pos:line="26" pos:column="24"/></name><index pos:line="26" pos:column="24">[<expr><name pos:line="26" pos:column="25">owner<pos:position pos:line="26" pos:column="30"/></name></expr>]<pos:position pos:line="26" pos:column="31"/></index></name><operator pos:line="26" pos:column="31">.<pos:position pos:line="26" pos:column="32"/></operator><name pos:line="26" pos:column="32">busyDestroyedCount<pos:position pos:line="26" pos:column="50"/></name> <operator pos:line="26" pos:column="51">+=<pos:position pos:line="26" pos:column="53"/></operator> <call><name><name pos:line="26" pos:column="54">entries<pos:position pos:line="26" pos:column="61"/></name><operator pos:line="26" pos:column="61">.<pos:position pos:line="26" pos:column="62"/></operator><name pos:line="26" pos:column="62">size<pos:position pos:line="26" pos:column="66"/></name></name><argument_list pos:line="26" pos:column="66">()<pos:position pos:line="26" pos:column="68"/></argument_list></call> <operator pos:line="26" pos:column="69">&gt;<pos:position pos:line="26" pos:column="73"/></operator> <literal type="number" pos:line="26" pos:column="71">0<pos:position pos:line="26" pos:column="72"/></literal></expr>;<pos:position pos:line="26" pos:column="73"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if> <comment type="line" pos:line="27" pos:column="7">// if (owner &lt;= hoReply)</comment>

    <for pos:line="29" pos:column="5">for <control pos:line="29" pos:column="9">(<init><decl><type><name><name pos:line="29" pos:column="10">std<pos:position pos:line="29" pos:column="13"/></name><operator pos:line="29" pos:column="13">::<pos:position pos:line="29" pos:column="15"/></operator><name><name pos:line="29" pos:column="15">vector<pos:position pos:line="29" pos:column="21"/></name><argument_list type="generic" pos:line="29" pos:column="21">&lt;<argument><expr><name pos:line="29" pos:column="22">HttpHeaderEntry<pos:position pos:line="29" pos:column="37"/></name> <operator pos:line="29" pos:column="38">*<pos:position pos:line="29" pos:column="39"/></operator></expr></argument>&gt;<pos:position pos:line="29" pos:column="43"/></argument_list></name><operator pos:line="29" pos:column="40">::<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">iterator<pos:position pos:line="29" pos:column="50"/></name></name></type> <name pos:line="29" pos:column="51">i<pos:position pos:line="29" pos:column="52"/></name> <init pos:line="29" pos:column="53">= <expr><call><name><name pos:line="29" pos:column="55">entries<pos:position pos:line="29" pos:column="62"/></name><operator pos:line="29" pos:column="62">.<pos:position pos:line="29" pos:column="63"/></operator><name pos:line="29" pos:column="63">begin<pos:position pos:line="29" pos:column="68"/></name></name><argument_list pos:line="29" pos:column="68">()<pos:position pos:line="29" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="71"/></init> <condition><expr><name pos:line="29" pos:column="72">i<pos:position pos:line="29" pos:column="73"/></name> <operator pos:line="29" pos:column="74">!=<pos:position pos:line="29" pos:column="76"/></operator> <call><name><name pos:line="29" pos:column="77">entries<pos:position pos:line="29" pos:column="84"/></name><operator pos:line="29" pos:column="84">.<pos:position pos:line="29" pos:column="85"/></operator><name pos:line="29" pos:column="85">end<pos:position pos:line="29" pos:column="88"/></name></name><argument_list pos:line="29" pos:column="88">()<pos:position pos:line="29" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="91"/></condition> <incr><expr><operator pos:line="29" pos:column="92">++<pos:position pos:line="29" pos:column="94"/></operator><name pos:line="29" pos:column="94">i<pos:position pos:line="29" pos:column="95"/></name></expr></incr>)<pos:position pos:line="29" pos:column="96"/></control> <block pos:line="29" pos:column="97">{
        <decl_stmt><decl><type><name pos:line="30" pos:column="9">HttpHeaderEntry<pos:position pos:line="30" pos:column="24"/></name> <modifier pos:line="30" pos:column="25">*<pos:position pos:line="30" pos:column="26"/></modifier></type><name pos:line="30" pos:column="26">e<pos:position pos:line="30" pos:column="27"/></name> <init pos:line="30" pos:column="28">= <expr><operator pos:line="30" pos:column="30">*<pos:position pos:line="30" pos:column="31"/></operator><name pos:line="30" pos:column="31">i<pos:position pos:line="30" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="30" pos:column="33"/></decl_stmt>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">e<pos:position pos:line="31" pos:column="14"/></name> <operator pos:line="31" pos:column="15">==<pos:position pos:line="31" pos:column="17"/></operator> <name pos:line="31" pos:column="18">NULL<pos:position pos:line="31" pos:column="22"/></name></expr>)<pos:position pos:line="31" pos:column="23"/></condition><then pos:line="31" pos:column="23">
            <block type="pseudo"><continue pos:line="32" pos:column="13">continue;<pos:position pos:line="32" pos:column="22"/></continue></block></then></if>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name><name pos:line="33" pos:column="13">e<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">id<pos:position pos:line="33" pos:column="18"/></name></name> <operator pos:line="33" pos:column="19">&lt;<pos:position pos:line="33" pos:column="23"/></operator> <literal type="number" pos:line="33" pos:column="21">0<pos:position pos:line="33" pos:column="22"/></literal> <operator pos:line="33" pos:column="23">||<pos:position pos:line="33" pos:column="25"/></operator> <name><name pos:line="33" pos:column="26">e<pos:position pos:line="33" pos:column="27"/></name><operator pos:line="33" pos:column="27">-&gt;<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="29">id<pos:position pos:line="33" pos:column="31"/></name></name> <operator pos:line="33" pos:column="32">&gt;=<pos:position pos:line="33" pos:column="37"/></operator> <name pos:line="33" pos:column="35">HDR_ENUM_END<pos:position pos:line="33" pos:column="47"/></name></expr>)<pos:position pos:line="33" pos:column="48"/></condition><then pos:line="33" pos:column="48"> <block pos:line="33" pos:column="49">{
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">debugs<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">(<argument><expr><literal type="number" pos:line="34" pos:column="20">55<pos:position pos:line="34" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="24">DBG_CRITICAL<pos:position pos:line="34" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="38">"BUG: invalid entry ("<pos:position pos:line="34" pos:column="60"/></literal> <operator pos:line="34" pos:column="61">&lt;&lt;<pos:position pos:line="34" pos:column="69"/></operator> <name><name pos:line="34" pos:column="64">e<pos:position pos:line="34" pos:column="65"/></name><operator pos:line="34" pos:column="65">-&gt;<pos:position pos:line="34" pos:column="70"/></operator><name pos:line="34" pos:column="67">id<pos:position pos:line="34" pos:column="69"/></name></name> <operator pos:line="34" pos:column="70">&lt;&lt;<pos:position pos:line="34" pos:column="78"/></operator> <literal type="string" pos:line="34" pos:column="73">"). Ignored."<pos:position pos:line="34" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="88"/></expr_stmt>
        }<pos:position pos:line="35" pos:column="10"/></block></then> <else pos:line="35" pos:column="11">else <block pos:line="35" pos:column="16">{
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name pos:line="36" pos:column="17">owner<pos:position pos:line="36" pos:column="22"/></name> <operator pos:line="36" pos:column="23">&lt;=<pos:position pos:line="36" pos:column="28"/></operator> <name pos:line="36" pos:column="26">hoReply<pos:position pos:line="36" pos:column="33"/></name></expr>)<pos:position pos:line="36" pos:column="34"/></condition><then pos:line="36" pos:column="34">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="37" pos:column="17">HttpHeaderStats<pos:position pos:line="37" pos:column="32"/></name><index pos:line="37" pos:column="32">[<expr><name pos:line="37" pos:column="33">owner<pos:position pos:line="37" pos:column="38"/></name></expr>]<pos:position pos:line="37" pos:column="39"/></index></name><operator pos:line="37" pos:column="39">.<pos:position pos:line="37" pos:column="40"/></operator><call><name><name pos:line="37" pos:column="40">fieldTypeDistr<pos:position pos:line="37" pos:column="54"/></name><operator pos:line="37" pos:column="54">.<pos:position pos:line="37" pos:column="55"/></operator><name pos:line="37" pos:column="55">count<pos:position pos:line="37" pos:column="60"/></name></name><argument_list pos:line="37" pos:column="60">(<argument><expr><name><name pos:line="37" pos:column="61">e<pos:position pos:line="37" pos:column="62"/></name><operator pos:line="37" pos:column="62">-&gt;<pos:position pos:line="37" pos:column="67"/></operator><name pos:line="37" pos:column="64">id<pos:position pos:line="37" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt></block></then></if>
            <expr_stmt><expr><operator pos:line="38" pos:column="13">delete<pos:position pos:line="38" pos:column="19"/></operator> <name pos:line="38" pos:column="20">e<pos:position pos:line="38" pos:column="21"/></name></expr>;<pos:position pos:line="38" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></else></if>
    }<pos:position pos:line="40" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name><name pos:line="42" pos:column="5">entries<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">.<pos:position pos:line="42" pos:column="13"/></operator><name pos:line="42" pos:column="13">clear<pos:position pos:line="42" pos:column="18"/></name></name><argument_list pos:line="42" pos:column="18">()<pos:position pos:line="42" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">httpHeaderMaskInit<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><operator pos:line="43" pos:column="24">&amp;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="25">mask<pos:position pos:line="43" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="31">0<pos:position pos:line="43" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="44" pos:column="5">len<pos:position pos:line="44" pos:column="8"/></name> <operator pos:line="44" pos:column="9">=<pos:position pos:line="44" pos:column="10"/></operator> <literal type="number" pos:line="44" pos:column="11">0<pos:position pos:line="44" pos:column="12"/></literal></expr>;<pos:position pos:line="44" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="45" pos:column="5">conflictingContentLength_<pos:position pos:line="45" pos:column="30"/></name> <operator pos:line="45" pos:column="31">=<pos:position pos:line="45" pos:column="32"/></operator> <literal type="boolean" pos:line="45" pos:column="33">false<pos:position pos:line="45" pos:column="38"/></literal></expr>;<pos:position pos:line="45" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="46" pos:column="5">PROF_stop<pos:position pos:line="46" pos:column="14"/></name><argument_list pos:line="46" pos:column="14">(<argument><expr><name pos:line="46" pos:column="15">HttpHeaderClean<pos:position pos:line="46" pos:column="30"/></name></expr></argument>)<pos:position pos:line="46" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="32"/></expr_stmt>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

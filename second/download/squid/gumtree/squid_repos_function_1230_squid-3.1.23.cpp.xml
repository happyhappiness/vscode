<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1230_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">StoreMeta<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name><name pos:line="2" pos:column="1">StoreMeta<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">Factory<pos:position pos:line="2" pos:column="19"/></name></name> <parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">type<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">size_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">len<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">void<pos:position pos:line="2" pos:column="48"/></name> <specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">value<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">validType<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><name pos:line="4" pos:column="20">type<pos:position pos:line="4" pos:column="24"/></name></expr></argument>)<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr>;<pos:position pos:line="5" pos:column="21"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">StoreMeta<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">result<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

    <switch pos:line="9" pos:column="5">switch <condition pos:line="9" pos:column="12">(<expr><name pos:line="9" pos:column="13">type<pos:position pos:line="9" pos:column="17"/></name></expr>)<pos:position pos:line="9" pos:column="18"/></condition> <block pos:line="9" pos:column="19">{

    <case pos:line="11" pos:column="5">case <expr><name pos:line="11" pos:column="10">STORE_META_KEY<pos:position pos:line="11" pos:column="24"/></name></expr>:<pos:position pos:line="11" pos:column="25"/></case>
        <expr_stmt><expr><name pos:line="12" pos:column="9">result<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <operator pos:line="12" pos:column="18">new<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">StoreMetaMD5<pos:position pos:line="12" pos:column="34"/></name></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
        <break pos:line="13" pos:column="9">break;<pos:position pos:line="13" pos:column="15"/></break>

    <case pos:line="15" pos:column="5">case <expr><name pos:line="15" pos:column="10">STORE_META_URL<pos:position pos:line="15" pos:column="24"/></name></expr>:<pos:position pos:line="15" pos:column="25"/></case>
        <expr_stmt><expr><name pos:line="16" pos:column="9">result<pos:position pos:line="16" pos:column="15"/></name> <operator pos:line="16" pos:column="16">=<pos:position pos:line="16" pos:column="17"/></operator> <operator pos:line="16" pos:column="18">new<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">StoreMetaURL<pos:position pos:line="16" pos:column="34"/></name></expr>;<pos:position pos:line="16" pos:column="35"/></expr_stmt>
        <break pos:line="17" pos:column="9">break;<pos:position pos:line="17" pos:column="15"/></break>

    <case pos:line="19" pos:column="5">case <expr><name pos:line="19" pos:column="10">STORE_META_STD<pos:position pos:line="19" pos:column="24"/></name></expr>:<pos:position pos:line="19" pos:column="25"/></case>
        <expr_stmt><expr><name pos:line="20" pos:column="9">result<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <operator pos:line="20" pos:column="18">new<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">StoreMetaSTD<pos:position pos:line="20" pos:column="34"/></name></expr>;<pos:position pos:line="20" pos:column="35"/></expr_stmt>
        <break pos:line="21" pos:column="9">break;<pos:position pos:line="21" pos:column="15"/></break>

    <case pos:line="23" pos:column="5">case <expr><name pos:line="23" pos:column="10">STORE_META_STD_LFS<pos:position pos:line="23" pos:column="28"/></name></expr>:<pos:position pos:line="23" pos:column="29"/></case>
        <expr_stmt><expr><name pos:line="24" pos:column="9">result<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <operator pos:line="24" pos:column="18">new<pos:position pos:line="24" pos:column="21"/></operator> <name pos:line="24" pos:column="22">StoreMetaSTDLFS<pos:position pos:line="24" pos:column="37"/></name></expr>;<pos:position pos:line="24" pos:column="38"/></expr_stmt>
        <break pos:line="25" pos:column="9">break;<pos:position pos:line="25" pos:column="15"/></break>

    <case pos:line="27" pos:column="5">case <expr><name pos:line="27" pos:column="10">STORE_META_OBJSIZE<pos:position pos:line="27" pos:column="28"/></name></expr>:<pos:position pos:line="27" pos:column="29"/></case>
        <expr_stmt><expr><name pos:line="28" pos:column="9">result<pos:position pos:line="28" pos:column="15"/></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <operator pos:line="28" pos:column="18">new<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">StoreMetaObjSize<pos:position pos:line="28" pos:column="38"/></name></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt>
        <break pos:line="29" pos:column="9">break;<pos:position pos:line="29" pos:column="15"/></break>

    <case pos:line="31" pos:column="5">case <expr><name pos:line="31" pos:column="10">STORE_META_VARY_HEADERS<pos:position pos:line="31" pos:column="33"/></name></expr>:<pos:position pos:line="31" pos:column="34"/></case>
        <expr_stmt><expr><name pos:line="32" pos:column="9">result<pos:position pos:line="32" pos:column="15"/></name> <operator pos:line="32" pos:column="16">=<pos:position pos:line="32" pos:column="17"/></operator> <operator pos:line="32" pos:column="18">new<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">StoreMetaVary<pos:position pos:line="32" pos:column="35"/></name></expr>;<pos:position pos:line="32" pos:column="36"/></expr_stmt>
        <break pos:line="33" pos:column="9">break;<pos:position pos:line="33" pos:column="15"/></break>

    <default pos:line="35" pos:column="5">default:<pos:position pos:line="35" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">debugs<pos:position pos:line="36" pos:column="15"/></name><argument_list pos:line="36" pos:column="15">(<argument><expr><literal type="number" pos:line="36" pos:column="16">20<pos:position pos:line="36" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="20">0<pos:position pos:line="36" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="23">"Attempt to create unknown concrete StoreMeta"<pos:position pos:line="36" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="71"/></expr_stmt>
        <return pos:line="37" pos:column="9">return <expr><name pos:line="37" pos:column="16">NULL<pos:position pos:line="37" pos:column="20"/></name></expr>;<pos:position pos:line="37" pos:column="21"/></return>
    }<pos:position pos:line="38" pos:column="6"/></block></switch>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><operator pos:line="40" pos:column="9">!<pos:position pos:line="40" pos:column="10"/></operator><call><name><name pos:line="40" pos:column="10">result<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">validLength<pos:position pos:line="40" pos:column="29"/></name></name><argument_list pos:line="40" pos:column="29">(<argument><expr><name pos:line="40" pos:column="30">len<pos:position pos:line="40" pos:column="33"/></name></expr></argument>)<pos:position pos:line="40" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="35"/></condition><then pos:line="40" pos:column="35"> <block pos:line="40" pos:column="36">{
        <expr_stmt><expr><operator pos:line="41" pos:column="9">delete<pos:position pos:line="41" pos:column="15"/></operator> <name pos:line="41" pos:column="16">result<pos:position pos:line="41" pos:column="22"/></name></expr>;<pos:position pos:line="41" pos:column="23"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><name pos:line="42" pos:column="16">NULL<pos:position pos:line="42" pos:column="20"/></name></expr>;<pos:position pos:line="42" pos:column="21"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="45" pos:column="5">result<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">length<pos:position pos:line="45" pos:column="19"/></name></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <name pos:line="45" pos:column="22">len<pos:position pos:line="45" pos:column="25"/></name></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="46" pos:column="5">result<pos:position pos:line="46" pos:column="11"/></name><operator pos:line="46" pos:column="11">-&gt;<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="13">value<pos:position pos:line="46" pos:column="18"/></name></name> <operator pos:line="46" pos:column="19">=<pos:position pos:line="46" pos:column="20"/></operator> <call><name pos:line="46" pos:column="21">xmalloc<pos:position pos:line="46" pos:column="28"/></name><argument_list pos:line="46" pos:column="28">(<argument><expr><name pos:line="46" pos:column="29">len<pos:position pos:line="46" pos:column="32"/></name></expr></argument>)<pos:position pos:line="46" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">xmemcpy<pos:position pos:line="47" pos:column="12"/></name><argument_list pos:line="47" pos:column="12">(<argument><expr><name><name pos:line="47" pos:column="13">result<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">value<pos:position pos:line="47" pos:column="26"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="28">value<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">len<pos:position pos:line="47" pos:column="38"/></name></expr></argument>)<pos:position pos:line="47" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="40"/></expr_stmt>
    <return pos:line="48" pos:column="5">return <expr><name pos:line="48" pos:column="12">result<pos:position pos:line="48" pos:column="18"/></name></expr>;<pos:position pos:line="48" pos:column="19"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

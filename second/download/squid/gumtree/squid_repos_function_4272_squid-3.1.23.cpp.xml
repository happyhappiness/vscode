<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4272_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">acl_ip_data<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name><name pos:line="2" pos:column="1">acl_ip_data<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">FactoryParse<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">t<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">LOCAL_ARRAY<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">addr1<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="30">256<pos:position pos:line="4" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">LOCAL_ARRAY<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">addr2<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="30">256<pos:position pos:line="5" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">LOCAL_ARRAY<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">mask<pos:position pos:line="6" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="29">256<pos:position pos:line="6" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">acl_ip_data<pos:position pos:line="7" pos:column="16"/></name> <modifier pos:line="7" pos:column="17">*<pos:position pos:line="7" pos:column="18"/></modifier></type><name pos:line="7" pos:column="18">r<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">acl_ip_data<pos:position pos:line="8" pos:column="16"/></name> <modifier pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></modifier><modifier pos:line="8" pos:column="18">*<pos:position pos:line="8" pos:column="19"/></modifier></type><name pos:line="8" pos:column="19">Q<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><name pos:line="8" pos:column="23">NULL<pos:position pos:line="8" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">IpAddress<pos:position pos:line="9" pos:column="14"/></name></type> <name pos:line="9" pos:column="15">temp<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">c<pos:position pos:line="10" pos:column="11"/></name></decl>;<pos:position pos:line="10" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">unsigned<pos:position pos:line="11" pos:column="13"/></name> <name pos:line="11" pos:column="14">int<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">changed<pos:position pos:line="11" pos:column="25"/></name></decl>;<pos:position pos:line="11" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">acl_ip_data<pos:position pos:line="12" pos:column="16"/></name> <modifier pos:line="12" pos:column="17">*<pos:position pos:line="12" pos:column="18"/></modifier></type><name pos:line="12" pos:column="18">q<pos:position pos:line="12" pos:column="19"/></name> <init pos:line="12" pos:column="20">= <expr><operator pos:line="12" pos:column="22">new<pos:position pos:line="12" pos:column="25"/></operator> <name pos:line="12" pos:column="26">acl_ip_data<pos:position pos:line="12" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">iptype<pos:position pos:line="13" pos:column="15"/></name> <init pos:line="13" pos:column="16">= <expr><name pos:line="13" pos:column="18">AF_UNSPEC<pos:position pos:line="13" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">28<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="16">5<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="19">"aclIpParseIpData: "<pos:position pos:line="15" pos:column="39"/></literal> <operator pos:line="15" pos:column="40">&lt;&lt;<pos:position pos:line="15" pos:column="48"/></operator> <name pos:line="15" pos:column="43">t<pos:position pos:line="15" pos:column="44"/></name></expr></argument>)<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* Special ACL RHS "all" matches entire Internet */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">strcasecmp<pos:position pos:line="18" pos:column="19"/></name><argument_list pos:line="18" pos:column="19">(<argument><expr><name pos:line="18" pos:column="20">t<pos:position pos:line="18" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="23">"all"<pos:position pos:line="18" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="29"/></argument_list></call> <operator pos:line="18" pos:column="30">==<pos:position pos:line="18" pos:column="32"/></operator> <literal type="number" pos:line="18" pos:column="33">0<pos:position pos:line="18" pos:column="34"/></literal></expr>)<pos:position pos:line="18" pos:column="35"/></condition><then pos:line="18" pos:column="35"> <block pos:line="18" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">28<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="20">9<pos:position pos:line="19" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="23">"aclIpParseIpData: magic 'all' found."<pos:position pos:line="19" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">q<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">addr1<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">.<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">SetAnyAddr<pos:position pos:line="20" pos:column="28"/></name></name><argument_list pos:line="20" pos:column="28">()<pos:position pos:line="20" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="21" pos:column="9">q<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">addr2<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">.<pos:position pos:line="21" pos:column="18"/></operator><name pos:line="21" pos:column="18">SetEmpty<pos:position pos:line="21" pos:column="26"/></name></name><argument_list pos:line="21" pos:column="26">()<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">q<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">mask<pos:position pos:line="22" pos:column="16"/></name><operator pos:line="22" pos:column="16">.<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">SetAnyAddr<pos:position pos:line="22" pos:column="27"/></name></name><argument_list pos:line="22" pos:column="27">()<pos:position pos:line="22" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="30"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">q<pos:position pos:line="23" pos:column="17"/></name></expr>;<pos:position pos:line="23" pos:column="18"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* Detect some old broken strings equivalent to 'all'.
     * treat them nicely. But be loud until its fixed.  */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name pos:line="28" pos:column="9">strcasecmp<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><name pos:line="28" pos:column="20">t<pos:position pos:line="28" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="23">"0/0"<pos:position pos:line="28" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="29"/></argument_list></call> <operator pos:line="28" pos:column="30">==<pos:position pos:line="28" pos:column="32"/></operator> <literal type="number" pos:line="28" pos:column="33">0<pos:position pos:line="28" pos:column="34"/></literal> <operator pos:line="28" pos:column="35">||<pos:position pos:line="28" pos:column="37"/></operator> <call><name pos:line="28" pos:column="38">strcasecmp<pos:position pos:line="28" pos:column="48"/></name><argument_list pos:line="28" pos:column="48">(<argument><expr><name pos:line="28" pos:column="49">t<pos:position pos:line="28" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="52">"0.0.0.0/0"<pos:position pos:line="28" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="64"/></argument_list></call> <operator pos:line="28" pos:column="65">==<pos:position pos:line="28" pos:column="67"/></operator> <literal type="number" pos:line="28" pos:column="68">0<pos:position pos:line="28" pos:column="69"/></literal> <operator pos:line="28" pos:column="70">||<pos:position pos:line="28" pos:column="72"/></operator> <call><name pos:line="28" pos:column="73">strcasecmp<pos:position pos:line="28" pos:column="83"/></name><argument_list pos:line="28" pos:column="83">(<argument><expr><name pos:line="28" pos:column="84">t<pos:position pos:line="28" pos:column="85"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="87">"0.0.0.0/0.0.0.0"<pos:position pos:line="28" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="105"/></argument_list></call> <operator pos:line="28" pos:column="106">==<pos:position pos:line="28" pos:column="108"/></operator> <literal type="number" pos:line="28" pos:column="109">0<pos:position pos:line="28" pos:column="110"/></literal> <operator pos:line="28" pos:column="111">||<pos:position pos:line="28" pos:column="113"/></operator>
            <call><name pos:line="29" pos:column="13">strcasecmp<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name pos:line="29" pos:column="24">t<pos:position pos:line="29" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="27">"0.0.0.0-255.255.255.255"<pos:position pos:line="29" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="53"/></argument_list></call> <operator pos:line="29" pos:column="54">==<pos:position pos:line="29" pos:column="56"/></operator> <literal type="number" pos:line="29" pos:column="57">0<pos:position pos:line="29" pos:column="58"/></literal> <operator pos:line="29" pos:column="59">||<pos:position pos:line="29" pos:column="61"/></operator> <call><name pos:line="29" pos:column="62">strcasecmp<pos:position pos:line="29" pos:column="72"/></name><argument_list pos:line="29" pos:column="72">(<argument><expr><name pos:line="29" pos:column="73">t<pos:position pos:line="29" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="76">"0.0.0.0-0.0.0.0/0"<pos:position pos:line="29" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="96"/></argument_list></call> <operator pos:line="29" pos:column="97">==<pos:position pos:line="29" pos:column="99"/></operator> <literal type="number" pos:line="29" pos:column="100">0<pos:position pos:line="29" pos:column="101"/></literal></expr>)<pos:position pos:line="29" pos:column="102"/></condition><then pos:line="29" pos:column="102"> <block pos:line="29" pos:column="103">{

        <expr_stmt><expr><call><name pos:line="31" pos:column="9">debugs<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">28<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>,<argument><expr><name pos:line="31" pos:column="19">DBG_CRITICAL<pos:position pos:line="31" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="33">"ERROR: '"<pos:position pos:line="31" pos:column="43"/></literal> <operator pos:line="31" pos:column="44">&lt;&lt;<pos:position pos:line="31" pos:column="52"/></operator> <name pos:line="31" pos:column="47">t<pos:position pos:line="31" pos:column="48"/></name> <operator pos:line="31" pos:column="49">&lt;&lt;<pos:position pos:line="31" pos:column="57"/></operator> <literal type="string" pos:line="31" pos:column="52">"' needs to be replaced by the term 'all'."<pos:position pos:line="31" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="97"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">debugs<pos:position pos:line="32" pos:column="15"/></name><argument_list pos:line="32" pos:column="15">(<argument><expr><literal type="number" pos:line="32" pos:column="16">28<pos:position pos:line="32" pos:column="18"/></literal></expr></argument>,<argument><expr><name pos:line="32" pos:column="19">DBG_CRITICAL<pos:position pos:line="32" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="32" pos:column="33">"SECURITY NOTICE: Overriding config setting. Using 'all' instead."<pos:position pos:line="32" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="101"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="33" pos:column="9">q<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">addr1<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">.<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">SetAnyAddr<pos:position pos:line="33" pos:column="28"/></name></name><argument_list pos:line="33" pos:column="28">()<pos:position pos:line="33" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="34" pos:column="9">q<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">addr2<pos:position pos:line="34" pos:column="17"/></name><operator pos:line="34" pos:column="17">.<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">SetEmpty<pos:position pos:line="34" pos:column="26"/></name></name><argument_list pos:line="34" pos:column="26">()<pos:position pos:line="34" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="35" pos:column="9">q<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">mask<pos:position pos:line="35" pos:column="16"/></name><operator pos:line="35" pos:column="16">.<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="17">SetAnyAddr<pos:position pos:line="35" pos:column="27"/></name></name><argument_list pos:line="35" pos:column="27">()<pos:position pos:line="35" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="30"/></expr_stmt>
        <return pos:line="36" pos:column="9">return <expr><name pos:line="36" pos:column="16">q<pos:position pos:line="36" pos:column="17"/></name></expr>;<pos:position pos:line="36" pos:column="18"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="39" pos:column="5">/* Special ACL RHS "ipv4" matches IPv4 Internet
     * A nod to IANA; we include the entire class space in case
     * they manage to find a way to recover and use it */</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><call><name pos:line="42" pos:column="9">strcasecmp<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><name pos:line="42" pos:column="20">t<pos:position pos:line="42" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="23">"ipv4"<pos:position pos:line="42" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="30"/></argument_list></call> <operator pos:line="42" pos:column="31">==<pos:position pos:line="42" pos:column="33"/></operator> <literal type="number" pos:line="42" pos:column="34">0<pos:position pos:line="42" pos:column="35"/></literal></expr>)<pos:position pos:line="42" pos:column="36"/></condition><then pos:line="42" pos:column="36"> <block pos:line="42" pos:column="37">{
        <expr_stmt><expr><call><name><name pos:line="43" pos:column="9">q<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">mask<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">.<pos:position pos:line="43" pos:column="17"/></operator><name pos:line="43" pos:column="17">SetNoAddr<pos:position pos:line="43" pos:column="26"/></name></name><argument_list pos:line="43" pos:column="26">()<pos:position pos:line="43" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="44" pos:column="9">q<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">mask<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">.<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="17">ApplyMask<pos:position pos:line="44" pos:column="26"/></name></name><argument_list pos:line="44" pos:column="26">(<argument><expr><literal type="number" pos:line="44" pos:column="27">0<pos:position pos:line="44" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="30">AF_INET<pos:position pos:line="44" pos:column="37"/></name></expr></argument>)<pos:position pos:line="44" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="39"/></expr_stmt>
        <return pos:line="45" pos:column="9">return <expr><name pos:line="45" pos:column="16">q<pos:position pos:line="45" pos:column="17"/></name></expr>;<pos:position pos:line="45" pos:column="18"/></return>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="48" pos:column="5">/* Special ACL RHS "ipv6" matches IPv6-Unicast Internet */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><call><name pos:line="49" pos:column="9">strcasecmp<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><name pos:line="49" pos:column="20">t<pos:position pos:line="49" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="23">"ipv6"<pos:position pos:line="49" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="30"/></argument_list></call> <operator pos:line="49" pos:column="31">==<pos:position pos:line="49" pos:column="33"/></operator> <literal type="number" pos:line="49" pos:column="34">0<pos:position pos:line="49" pos:column="35"/></literal></expr>)<pos:position pos:line="49" pos:column="36"/></condition><then pos:line="49" pos:column="36"> <block pos:line="49" pos:column="37">{
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">debugs<pos:position pos:line="50" pos:column="15"/></name><argument_list pos:line="50" pos:column="15">(<argument><expr><literal type="number" pos:line="50" pos:column="16">28<pos:position pos:line="50" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="20">9<pos:position pos:line="50" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="23">"aclIpParseIpData: magic 'ipv6' found."<pos:position pos:line="50" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">r<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <name pos:line="51" pos:column="13">q<pos:position pos:line="51" pos:column="14"/></name></expr>;<pos:position pos:line="51" pos:column="15"/></expr_stmt> <comment type="line" pos:line="51" pos:column="16">// save head of the list for result.</comment>

        <comment type="block" pos:line="53" pos:column="9">/* 0000::/4 is a mix of localhost and obsolete IPv4-mapping space. Not valid outside this host. */</comment>

        <comment type="block" pos:line="55" pos:column="9">/* Future global unicast space: 1000::/4 */</comment>
        <expr_stmt><expr><name><name pos:line="56" pos:column="9">q<pos:position pos:line="56" pos:column="10"/></name><operator pos:line="56" pos:column="10">-&gt;<pos:position pos:line="56" pos:column="15"/></operator><name pos:line="56" pos:column="12">addr1<pos:position pos:line="56" pos:column="17"/></name></name> <operator pos:line="56" pos:column="18">=<pos:position pos:line="56" pos:column="19"/></operator> <literal type="string" pos:line="56" pos:column="20">"1000::"<pos:position pos:line="56" pos:column="28"/></literal></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="57" pos:column="9">q<pos:position pos:line="57" pos:column="10"/></name><operator pos:line="57" pos:column="10">-&gt;<pos:position pos:line="57" pos:column="15"/></operator><name pos:line="57" pos:column="12">mask<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">.<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="17">SetNoAddr<pos:position pos:line="57" pos:column="26"/></name></name><argument_list pos:line="57" pos:column="26">()<pos:position pos:line="57" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="58" pos:column="9">q<pos:position pos:line="58" pos:column="10"/></name><operator pos:line="58" pos:column="10">-&gt;<pos:position pos:line="58" pos:column="15"/></operator><name pos:line="58" pos:column="12">mask<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">.<pos:position pos:line="58" pos:column="17"/></operator><name pos:line="58" pos:column="17">ApplyMask<pos:position pos:line="58" pos:column="26"/></name></name><argument_list pos:line="58" pos:column="26">(<argument><expr><literal type="number" pos:line="58" pos:column="27">4<pos:position pos:line="58" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="30">AF_INET6<pos:position pos:line="58" pos:column="38"/></name></expr></argument>)<pos:position pos:line="58" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="40"/></expr_stmt>

        <comment type="block" pos:line="60" pos:column="9">/* Current global unicast space: 2000::/4 = (2000::/4 - 3000::/4) */</comment>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">q<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">-&gt;<pos:position pos:line="61" pos:column="15"/></operator><name pos:line="61" pos:column="12">next<pos:position pos:line="61" pos:column="16"/></name></name> <operator pos:line="61" pos:column="17">=<pos:position pos:line="61" pos:column="18"/></operator> <operator pos:line="61" pos:column="19">new<pos:position pos:line="61" pos:column="22"/></operator> <name pos:line="61" pos:column="23">acl_ip_data<pos:position pos:line="61" pos:column="34"/></name></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="62" pos:column="9">q<pos:position pos:line="62" pos:column="10"/></name> <operator pos:line="62" pos:column="11">=<pos:position pos:line="62" pos:column="12"/></operator> <name><name pos:line="62" pos:column="13">q<pos:position pos:line="62" pos:column="14"/></name><operator pos:line="62" pos:column="14">-&gt;<pos:position pos:line="62" pos:column="19"/></operator><name pos:line="62" pos:column="16">next<pos:position pos:line="62" pos:column="20"/></name></name></expr>;<pos:position pos:line="62" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">q<pos:position pos:line="63" pos:column="10"/></name><operator pos:line="63" pos:column="10">-&gt;<pos:position pos:line="63" pos:column="15"/></operator><name pos:line="63" pos:column="12">addr1<pos:position pos:line="63" pos:column="17"/></name></name> <operator pos:line="63" pos:column="18">=<pos:position pos:line="63" pos:column="19"/></operator> <literal type="string" pos:line="63" pos:column="20">"2000::"<pos:position pos:line="63" pos:column="28"/></literal></expr>;<pos:position pos:line="63" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="64" pos:column="9">q<pos:position pos:line="64" pos:column="10"/></name><operator pos:line="64" pos:column="10">-&gt;<pos:position pos:line="64" pos:column="15"/></operator><name pos:line="64" pos:column="12">mask<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">.<pos:position pos:line="64" pos:column="17"/></operator><name pos:line="64" pos:column="17">SetNoAddr<pos:position pos:line="64" pos:column="26"/></name></name><argument_list pos:line="64" pos:column="26">()<pos:position pos:line="64" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="65" pos:column="9">q<pos:position pos:line="65" pos:column="10"/></name><operator pos:line="65" pos:column="10">-&gt;<pos:position pos:line="65" pos:column="15"/></operator><name pos:line="65" pos:column="12">mask<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">.<pos:position pos:line="65" pos:column="17"/></operator><name pos:line="65" pos:column="17">ApplyMask<pos:position pos:line="65" pos:column="26"/></name></name><argument_list pos:line="65" pos:column="26">(<argument><expr><literal type="number" pos:line="65" pos:column="27">3<pos:position pos:line="65" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="65" pos:column="30">AF_INET6<pos:position pos:line="65" pos:column="38"/></name></expr></argument>)<pos:position pos:line="65" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="40"/></expr_stmt>

        <comment type="block" pos:line="67" pos:column="9">/* Future global unicast space: 4000::/2 = (4000::/4 - 7000::/4) */</comment>
        <expr_stmt><expr><name><name pos:line="68" pos:column="9">q<pos:position pos:line="68" pos:column="10"/></name><operator pos:line="68" pos:column="10">-&gt;<pos:position pos:line="68" pos:column="15"/></operator><name pos:line="68" pos:column="12">next<pos:position pos:line="68" pos:column="16"/></name></name> <operator pos:line="68" pos:column="17">=<pos:position pos:line="68" pos:column="18"/></operator> <operator pos:line="68" pos:column="19">new<pos:position pos:line="68" pos:column="22"/></operator> <name pos:line="68" pos:column="23">acl_ip_data<pos:position pos:line="68" pos:column="34"/></name></expr>;<pos:position pos:line="68" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="69" pos:column="9">q<pos:position pos:line="69" pos:column="10"/></name> <operator pos:line="69" pos:column="11">=<pos:position pos:line="69" pos:column="12"/></operator> <name><name pos:line="69" pos:column="13">q<pos:position pos:line="69" pos:column="14"/></name><operator pos:line="69" pos:column="14">-&gt;<pos:position pos:line="69" pos:column="19"/></operator><name pos:line="69" pos:column="16">next<pos:position pos:line="69" pos:column="20"/></name></name></expr>;<pos:position pos:line="69" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="70" pos:column="9">q<pos:position pos:line="70" pos:column="10"/></name><operator pos:line="70" pos:column="10">-&gt;<pos:position pos:line="70" pos:column="15"/></operator><name pos:line="70" pos:column="12">addr1<pos:position pos:line="70" pos:column="17"/></name></name> <operator pos:line="70" pos:column="18">=<pos:position pos:line="70" pos:column="19"/></operator> <literal type="string" pos:line="70" pos:column="20">"4000::"<pos:position pos:line="70" pos:column="28"/></literal></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="71" pos:column="9">q<pos:position pos:line="71" pos:column="10"/></name><operator pos:line="71" pos:column="10">-&gt;<pos:position pos:line="71" pos:column="15"/></operator><name pos:line="71" pos:column="12">mask<pos:position pos:line="71" pos:column="16"/></name><operator pos:line="71" pos:column="16">.<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="17">SetNoAddr<pos:position pos:line="71" pos:column="26"/></name></name><argument_list pos:line="71" pos:column="26">()<pos:position pos:line="71" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="72" pos:column="9">q<pos:position pos:line="72" pos:column="10"/></name><operator pos:line="72" pos:column="10">-&gt;<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="12">mask<pos:position pos:line="72" pos:column="16"/></name><operator pos:line="72" pos:column="16">.<pos:position pos:line="72" pos:column="17"/></operator><name pos:line="72" pos:column="17">ApplyMask<pos:position pos:line="72" pos:column="26"/></name></name><argument_list pos:line="72" pos:column="26">(<argument><expr><literal type="number" pos:line="72" pos:column="27">2<pos:position pos:line="72" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="72" pos:column="30">AF_INET6<pos:position pos:line="72" pos:column="38"/></name></expr></argument>)<pos:position pos:line="72" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="72" pos:column="40"/></expr_stmt>

        <comment type="block" pos:line="74" pos:column="9">/* Future global unicast space: 8000::/2 = (8000::/4 - B000::/4) */</comment>
        <expr_stmt><expr><name><name pos:line="75" pos:column="9">q<pos:position pos:line="75" pos:column="10"/></name><operator pos:line="75" pos:column="10">-&gt;<pos:position pos:line="75" pos:column="15"/></operator><name pos:line="75" pos:column="12">next<pos:position pos:line="75" pos:column="16"/></name></name> <operator pos:line="75" pos:column="17">=<pos:position pos:line="75" pos:column="18"/></operator> <operator pos:line="75" pos:column="19">new<pos:position pos:line="75" pos:column="22"/></operator> <name pos:line="75" pos:column="23">acl_ip_data<pos:position pos:line="75" pos:column="34"/></name></expr>;<pos:position pos:line="75" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="76" pos:column="9">q<pos:position pos:line="76" pos:column="10"/></name> <operator pos:line="76" pos:column="11">=<pos:position pos:line="76" pos:column="12"/></operator> <name><name pos:line="76" pos:column="13">q<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">-&gt;<pos:position pos:line="76" pos:column="19"/></operator><name pos:line="76" pos:column="16">next<pos:position pos:line="76" pos:column="20"/></name></name></expr>;<pos:position pos:line="76" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">q<pos:position pos:line="77" pos:column="10"/></name><operator pos:line="77" pos:column="10">-&gt;<pos:position pos:line="77" pos:column="15"/></operator><name pos:line="77" pos:column="12">addr1<pos:position pos:line="77" pos:column="17"/></name></name> <operator pos:line="77" pos:column="18">=<pos:position pos:line="77" pos:column="19"/></operator> <literal type="string" pos:line="77" pos:column="20">"8000::"<pos:position pos:line="77" pos:column="28"/></literal></expr>;<pos:position pos:line="77" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="78" pos:column="9">q<pos:position pos:line="78" pos:column="10"/></name><operator pos:line="78" pos:column="10">-&gt;<pos:position pos:line="78" pos:column="15"/></operator><name pos:line="78" pos:column="12">mask<pos:position pos:line="78" pos:column="16"/></name><operator pos:line="78" pos:column="16">.<pos:position pos:line="78" pos:column="17"/></operator><name pos:line="78" pos:column="17">SetNoAddr<pos:position pos:line="78" pos:column="26"/></name></name><argument_list pos:line="78" pos:column="26">()<pos:position pos:line="78" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="79" pos:column="9">q<pos:position pos:line="79" pos:column="10"/></name><operator pos:line="79" pos:column="10">-&gt;<pos:position pos:line="79" pos:column="15"/></operator><name pos:line="79" pos:column="12">mask<pos:position pos:line="79" pos:column="16"/></name><operator pos:line="79" pos:column="16">.<pos:position pos:line="79" pos:column="17"/></operator><name pos:line="79" pos:column="17">ApplyMask<pos:position pos:line="79" pos:column="26"/></name></name><argument_list pos:line="79" pos:column="26">(<argument><expr><literal type="number" pos:line="79" pos:column="27">2<pos:position pos:line="79" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="30">AF_INET6<pos:position pos:line="79" pos:column="38"/></name></expr></argument>)<pos:position pos:line="79" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="40"/></expr_stmt>

        <comment type="block" pos:line="81" pos:column="9">/* Future global unicast space: C000::/3 = (C000::/4 - D000::/4) */</comment>
        <expr_stmt><expr><name><name pos:line="82" pos:column="9">q<pos:position pos:line="82" pos:column="10"/></name><operator pos:line="82" pos:column="10">-&gt;<pos:position pos:line="82" pos:column="15"/></operator><name pos:line="82" pos:column="12">next<pos:position pos:line="82" pos:column="16"/></name></name> <operator pos:line="82" pos:column="17">=<pos:position pos:line="82" pos:column="18"/></operator> <operator pos:line="82" pos:column="19">new<pos:position pos:line="82" pos:column="22"/></operator> <name pos:line="82" pos:column="23">acl_ip_data<pos:position pos:line="82" pos:column="34"/></name></expr>;<pos:position pos:line="82" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="83" pos:column="9">q<pos:position pos:line="83" pos:column="10"/></name> <operator pos:line="83" pos:column="11">=<pos:position pos:line="83" pos:column="12"/></operator> <name><name pos:line="83" pos:column="13">q<pos:position pos:line="83" pos:column="14"/></name><operator pos:line="83" pos:column="14">-&gt;<pos:position pos:line="83" pos:column="19"/></operator><name pos:line="83" pos:column="16">next<pos:position pos:line="83" pos:column="20"/></name></name></expr>;<pos:position pos:line="83" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="84" pos:column="9">q<pos:position pos:line="84" pos:column="10"/></name><operator pos:line="84" pos:column="10">-&gt;<pos:position pos:line="84" pos:column="15"/></operator><name pos:line="84" pos:column="12">addr1<pos:position pos:line="84" pos:column="17"/></name></name> <operator pos:line="84" pos:column="18">=<pos:position pos:line="84" pos:column="19"/></operator> <literal type="string" pos:line="84" pos:column="20">"C000::"<pos:position pos:line="84" pos:column="28"/></literal></expr>;<pos:position pos:line="84" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="85" pos:column="9">q<pos:position pos:line="85" pos:column="10"/></name><operator pos:line="85" pos:column="10">-&gt;<pos:position pos:line="85" pos:column="15"/></operator><name pos:line="85" pos:column="12">mask<pos:position pos:line="85" pos:column="16"/></name><operator pos:line="85" pos:column="16">.<pos:position pos:line="85" pos:column="17"/></operator><name pos:line="85" pos:column="17">SetNoAddr<pos:position pos:line="85" pos:column="26"/></name></name><argument_list pos:line="85" pos:column="26">()<pos:position pos:line="85" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="86" pos:column="9">q<pos:position pos:line="86" pos:column="10"/></name><operator pos:line="86" pos:column="10">-&gt;<pos:position pos:line="86" pos:column="15"/></operator><name pos:line="86" pos:column="12">mask<pos:position pos:line="86" pos:column="16"/></name><operator pos:line="86" pos:column="16">.<pos:position pos:line="86" pos:column="17"/></operator><name pos:line="86" pos:column="17">ApplyMask<pos:position pos:line="86" pos:column="26"/></name></name><argument_list pos:line="86" pos:column="26">(<argument><expr><literal type="number" pos:line="86" pos:column="27">3<pos:position pos:line="86" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="30">AF_INET6<pos:position pos:line="86" pos:column="38"/></name></expr></argument>)<pos:position pos:line="86" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="40"/></expr_stmt>

        <comment type="block" pos:line="88" pos:column="9">/* Future global unicast space: E000::/4 */</comment>
        <expr_stmt><expr><name><name pos:line="89" pos:column="9">q<pos:position pos:line="89" pos:column="10"/></name><operator pos:line="89" pos:column="10">-&gt;<pos:position pos:line="89" pos:column="15"/></operator><name pos:line="89" pos:column="12">next<pos:position pos:line="89" pos:column="16"/></name></name> <operator pos:line="89" pos:column="17">=<pos:position pos:line="89" pos:column="18"/></operator> <operator pos:line="89" pos:column="19">new<pos:position pos:line="89" pos:column="22"/></operator> <name pos:line="89" pos:column="23">acl_ip_data<pos:position pos:line="89" pos:column="34"/></name></expr>;<pos:position pos:line="89" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="90" pos:column="9">q<pos:position pos:line="90" pos:column="10"/></name> <operator pos:line="90" pos:column="11">=<pos:position pos:line="90" pos:column="12"/></operator> <name><name pos:line="90" pos:column="13">q<pos:position pos:line="90" pos:column="14"/></name><operator pos:line="90" pos:column="14">-&gt;<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="16">next<pos:position pos:line="90" pos:column="20"/></name></name></expr>;<pos:position pos:line="90" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="91" pos:column="9">q<pos:position pos:line="91" pos:column="10"/></name><operator pos:line="91" pos:column="10">-&gt;<pos:position pos:line="91" pos:column="15"/></operator><name pos:line="91" pos:column="12">addr1<pos:position pos:line="91" pos:column="17"/></name></name> <operator pos:line="91" pos:column="18">=<pos:position pos:line="91" pos:column="19"/></operator> <literal type="string" pos:line="91" pos:column="20">"E000::"<pos:position pos:line="91" pos:column="28"/></literal></expr>;<pos:position pos:line="91" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="92" pos:column="9">q<pos:position pos:line="92" pos:column="10"/></name><operator pos:line="92" pos:column="10">-&gt;<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="12">mask<pos:position pos:line="92" pos:column="16"/></name><operator pos:line="92" pos:column="16">.<pos:position pos:line="92" pos:column="17"/></operator><name pos:line="92" pos:column="17">SetNoAddr<pos:position pos:line="92" pos:column="26"/></name></name><argument_list pos:line="92" pos:column="26">()<pos:position pos:line="92" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="93" pos:column="9">q<pos:position pos:line="93" pos:column="10"/></name><operator pos:line="93" pos:column="10">-&gt;<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="12">mask<pos:position pos:line="93" pos:column="16"/></name><operator pos:line="93" pos:column="16">.<pos:position pos:line="93" pos:column="17"/></operator><name pos:line="93" pos:column="17">ApplyMask<pos:position pos:line="93" pos:column="26"/></name></name><argument_list pos:line="93" pos:column="26">(<argument><expr><literal type="number" pos:line="93" pos:column="27">4<pos:position pos:line="93" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="93" pos:column="30">AF_INET6<pos:position pos:line="93" pos:column="38"/></name></expr></argument>)<pos:position pos:line="93" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="40"/></expr_stmt>

        <comment type="block" pos:line="95" pos:column="9">/* F000::/4 is mostly reserved non-unicast. With some exceptions ... */</comment>

        <comment type="block" pos:line="97" pos:column="9">/* RFC 4193 Unique-Local unicast space: FC00::/7 */</comment>
        <expr_stmt><expr><name><name pos:line="98" pos:column="9">q<pos:position pos:line="98" pos:column="10"/></name><operator pos:line="98" pos:column="10">-&gt;<pos:position pos:line="98" pos:column="15"/></operator><name pos:line="98" pos:column="12">next<pos:position pos:line="98" pos:column="16"/></name></name> <operator pos:line="98" pos:column="17">=<pos:position pos:line="98" pos:column="18"/></operator> <operator pos:line="98" pos:column="19">new<pos:position pos:line="98" pos:column="22"/></operator> <name pos:line="98" pos:column="23">acl_ip_data<pos:position pos:line="98" pos:column="34"/></name></expr>;<pos:position pos:line="98" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="99" pos:column="9">q<pos:position pos:line="99" pos:column="10"/></name> <operator pos:line="99" pos:column="11">=<pos:position pos:line="99" pos:column="12"/></operator> <name><name pos:line="99" pos:column="13">q<pos:position pos:line="99" pos:column="14"/></name><operator pos:line="99" pos:column="14">-&gt;<pos:position pos:line="99" pos:column="19"/></operator><name pos:line="99" pos:column="16">next<pos:position pos:line="99" pos:column="20"/></name></name></expr>;<pos:position pos:line="99" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="100" pos:column="9">q<pos:position pos:line="100" pos:column="10"/></name><operator pos:line="100" pos:column="10">-&gt;<pos:position pos:line="100" pos:column="15"/></operator><name pos:line="100" pos:column="12">addr1<pos:position pos:line="100" pos:column="17"/></name></name> <operator pos:line="100" pos:column="18">=<pos:position pos:line="100" pos:column="19"/></operator> <literal type="string" pos:line="100" pos:column="20">"FC00::"<pos:position pos:line="100" pos:column="28"/></literal></expr>;<pos:position pos:line="100" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="101" pos:column="9">q<pos:position pos:line="101" pos:column="10"/></name><operator pos:line="101" pos:column="10">-&gt;<pos:position pos:line="101" pos:column="15"/></operator><name pos:line="101" pos:column="12">mask<pos:position pos:line="101" pos:column="16"/></name><operator pos:line="101" pos:column="16">.<pos:position pos:line="101" pos:column="17"/></operator><name pos:line="101" pos:column="17">SetNoAddr<pos:position pos:line="101" pos:column="26"/></name></name><argument_list pos:line="101" pos:column="26">()<pos:position pos:line="101" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="102" pos:column="9">q<pos:position pos:line="102" pos:column="10"/></name><operator pos:line="102" pos:column="10">-&gt;<pos:position pos:line="102" pos:column="15"/></operator><name pos:line="102" pos:column="12">mask<pos:position pos:line="102" pos:column="16"/></name><operator pos:line="102" pos:column="16">.<pos:position pos:line="102" pos:column="17"/></operator><name pos:line="102" pos:column="17">ApplyMask<pos:position pos:line="102" pos:column="26"/></name></name><argument_list pos:line="102" pos:column="26">(<argument><expr><literal type="number" pos:line="102" pos:column="27">7<pos:position pos:line="102" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="102" pos:column="30">AF_INET6<pos:position pos:line="102" pos:column="38"/></name></expr></argument>)<pos:position pos:line="102" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="40"/></expr_stmt>

        <comment type="block" pos:line="104" pos:column="9">/* Link-Local unicast space: FE80::/10 */</comment>
        <expr_stmt><expr><name><name pos:line="105" pos:column="9">q<pos:position pos:line="105" pos:column="10"/></name><operator pos:line="105" pos:column="10">-&gt;<pos:position pos:line="105" pos:column="15"/></operator><name pos:line="105" pos:column="12">next<pos:position pos:line="105" pos:column="16"/></name></name> <operator pos:line="105" pos:column="17">=<pos:position pos:line="105" pos:column="18"/></operator> <operator pos:line="105" pos:column="19">new<pos:position pos:line="105" pos:column="22"/></operator> <name pos:line="105" pos:column="23">acl_ip_data<pos:position pos:line="105" pos:column="34"/></name></expr>;<pos:position pos:line="105" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name pos:line="106" pos:column="9">q<pos:position pos:line="106" pos:column="10"/></name> <operator pos:line="106" pos:column="11">=<pos:position pos:line="106" pos:column="12"/></operator> <name><name pos:line="106" pos:column="13">q<pos:position pos:line="106" pos:column="14"/></name><operator pos:line="106" pos:column="14">-&gt;<pos:position pos:line="106" pos:column="19"/></operator><name pos:line="106" pos:column="16">next<pos:position pos:line="106" pos:column="20"/></name></name></expr>;<pos:position pos:line="106" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="107" pos:column="9">q<pos:position pos:line="107" pos:column="10"/></name><operator pos:line="107" pos:column="10">-&gt;<pos:position pos:line="107" pos:column="15"/></operator><name pos:line="107" pos:column="12">addr1<pos:position pos:line="107" pos:column="17"/></name></name> <operator pos:line="107" pos:column="18">=<pos:position pos:line="107" pos:column="19"/></operator> <literal type="string" pos:line="107" pos:column="20">"FE80::"<pos:position pos:line="107" pos:column="28"/></literal></expr>;<pos:position pos:line="107" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="108" pos:column="9">q<pos:position pos:line="108" pos:column="10"/></name><operator pos:line="108" pos:column="10">-&gt;<pos:position pos:line="108" pos:column="15"/></operator><name pos:line="108" pos:column="12">mask<pos:position pos:line="108" pos:column="16"/></name><operator pos:line="108" pos:column="16">.<pos:position pos:line="108" pos:column="17"/></operator><name pos:line="108" pos:column="17">SetNoAddr<pos:position pos:line="108" pos:column="26"/></name></name><argument_list pos:line="108" pos:column="26">()<pos:position pos:line="108" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="109" pos:column="9">q<pos:position pos:line="109" pos:column="10"/></name><operator pos:line="109" pos:column="10">-&gt;<pos:position pos:line="109" pos:column="15"/></operator><name pos:line="109" pos:column="12">mask<pos:position pos:line="109" pos:column="16"/></name><operator pos:line="109" pos:column="16">.<pos:position pos:line="109" pos:column="17"/></operator><name pos:line="109" pos:column="17">ApplyMask<pos:position pos:line="109" pos:column="26"/></name></name><argument_list pos:line="109" pos:column="26">(<argument><expr><literal type="number" pos:line="109" pos:column="27">10<pos:position pos:line="109" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="109" pos:column="31">AF_INET6<pos:position pos:line="109" pos:column="39"/></name></expr></argument>)<pos:position pos:line="109" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="41"/></expr_stmt>

        <return pos:line="111" pos:column="9">return <expr><name pos:line="111" pos:column="16">r<pos:position pos:line="111" pos:column="17"/></name></expr>;<pos:position pos:line="111" pos:column="18"/></return>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>

<comment type="line" pos:line="114" pos:column="1">// IPv4</comment>
    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><call><name pos:line="115" pos:column="9">sscanf<pos:position pos:line="115" pos:column="15"/></name><argument_list pos:line="115" pos:column="15">(<argument><expr><name pos:line="115" pos:column="16">t<pos:position pos:line="115" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="19">SCAN_ACL1_4<pos:position pos:line="115" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="32">addr1<pos:position pos:line="115" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="39">addr2<pos:position pos:line="115" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="46">mask<pos:position pos:line="115" pos:column="50"/></name></expr></argument>)<pos:position pos:line="115" pos:column="51"/></argument_list></call> <operator pos:line="115" pos:column="52">==<pos:position pos:line="115" pos:column="54"/></operator> <literal type="number" pos:line="115" pos:column="55">3<pos:position pos:line="115" pos:column="56"/></literal></expr>)<pos:position pos:line="115" pos:column="57"/></condition><then pos:line="115" pos:column="57"> <block pos:line="115" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="116" pos:column="9">debugs<pos:position pos:line="116" pos:column="15"/></name><argument_list pos:line="116" pos:column="15">(<argument><expr><literal type="number" pos:line="116" pos:column="16">28<pos:position pos:line="116" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="116" pos:column="20">9<pos:position pos:line="116" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="116" pos:column="23">"aclIpParseIpData: '"<pos:position pos:line="116" pos:column="44"/></literal> <operator pos:line="116" pos:column="45">&lt;&lt;<pos:position pos:line="116" pos:column="53"/></operator> <name pos:line="116" pos:column="48">t<pos:position pos:line="116" pos:column="49"/></name> <operator pos:line="116" pos:column="50">&lt;&lt;<pos:position pos:line="116" pos:column="58"/></operator> <literal type="string" pos:line="116" pos:column="53">"' matched: SCAN1-v4: "<pos:position pos:line="116" pos:column="76"/></literal> <operator pos:line="116" pos:column="77">&lt;&lt;<pos:position pos:line="116" pos:column="85"/></operator> <name pos:line="116" pos:column="80">SCAN_ACL1_4<pos:position pos:line="116" pos:column="91"/></name></expr></argument>)<pos:position pos:line="116" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><name pos:line="117" pos:column="9">iptype<pos:position pos:line="117" pos:column="15"/></name><operator pos:line="117" pos:column="15">=<pos:position pos:line="117" pos:column="16"/></operator><name pos:line="117" pos:column="16">AF_INET<pos:position pos:line="117" pos:column="23"/></name></expr>;<pos:position pos:line="117" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="118" pos:column="6"/></block></then> <elseif pos:line="118" pos:column="7">else <if pos:line="118" pos:column="12">if <condition pos:line="118" pos:column="15">(<expr><call><name pos:line="118" pos:column="16">sscanf<pos:position pos:line="118" pos:column="22"/></name><argument_list pos:line="118" pos:column="22">(<argument><expr><name pos:line="118" pos:column="23">t<pos:position pos:line="118" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="26">SCAN_ACL2_4<pos:position pos:line="118" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="39">addr1<pos:position pos:line="118" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="46">addr2<pos:position pos:line="118" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="118" pos:column="53">&amp;<pos:position pos:line="118" pos:column="58"/></operator><name pos:line="118" pos:column="54">c<pos:position pos:line="118" pos:column="55"/></name></expr></argument>)<pos:position pos:line="118" pos:column="56"/></argument_list></call> <operator pos:line="118" pos:column="57">&gt;=<pos:position pos:line="118" pos:column="62"/></operator> <literal type="number" pos:line="118" pos:column="60">2<pos:position pos:line="118" pos:column="61"/></literal></expr>)<pos:position pos:line="118" pos:column="62"/></condition><then pos:line="118" pos:column="62"> <block pos:line="118" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">debugs<pos:position pos:line="119" pos:column="15"/></name><argument_list pos:line="119" pos:column="15">(<argument><expr><literal type="number" pos:line="119" pos:column="16">28<pos:position pos:line="119" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="20">9<pos:position pos:line="119" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="23">"aclIpParseIpData: '"<pos:position pos:line="119" pos:column="44"/></literal> <operator pos:line="119" pos:column="45">&lt;&lt;<pos:position pos:line="119" pos:column="53"/></operator> <name pos:line="119" pos:column="48">t<pos:position pos:line="119" pos:column="49"/></name> <operator pos:line="119" pos:column="50">&lt;&lt;<pos:position pos:line="119" pos:column="58"/></operator> <literal type="string" pos:line="119" pos:column="53">"' matched: SCAN2-v4: "<pos:position pos:line="119" pos:column="76"/></literal> <operator pos:line="119" pos:column="77">&lt;&lt;<pos:position pos:line="119" pos:column="85"/></operator> <name pos:line="119" pos:column="80">SCAN_ACL2_4<pos:position pos:line="119" pos:column="91"/></name></expr></argument>)<pos:position pos:line="119" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="120" pos:column="9">mask<pos:position pos:line="120" pos:column="13"/></name><index pos:line="120" pos:column="13">[<expr><literal type="number" pos:line="120" pos:column="14">0<pos:position pos:line="120" pos:column="15"/></literal></expr>]<pos:position pos:line="120" pos:column="16"/></index></name> <operator pos:line="120" pos:column="17">=<pos:position pos:line="120" pos:column="18"/></operator> <literal type="char" pos:line="120" pos:column="19">'\0'<pos:position pos:line="120" pos:column="23"/></literal></expr>;<pos:position pos:line="120" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="121" pos:column="9">iptype<pos:position pos:line="121" pos:column="15"/></name><operator pos:line="121" pos:column="15">=<pos:position pos:line="121" pos:column="16"/></operator><name pos:line="121" pos:column="16">AF_INET<pos:position pos:line="121" pos:column="23"/></name></expr>;<pos:position pos:line="121" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="122" pos:column="6"/></block></then></if></elseif> <elseif pos:line="122" pos:column="7">else <if pos:line="122" pos:column="12">if <condition pos:line="122" pos:column="15">(<expr><call><name pos:line="122" pos:column="16">sscanf<pos:position pos:line="122" pos:column="22"/></name><argument_list pos:line="122" pos:column="22">(<argument><expr><name pos:line="122" pos:column="23">t<pos:position pos:line="122" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="26">SCAN_ACL3_4<pos:position pos:line="122" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="39">addr1<pos:position pos:line="122" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="46">mask<pos:position pos:line="122" pos:column="50"/></name></expr></argument>)<pos:position pos:line="122" pos:column="51"/></argument_list></call> <operator pos:line="122" pos:column="52">==<pos:position pos:line="122" pos:column="54"/></operator> <literal type="number" pos:line="122" pos:column="55">2<pos:position pos:line="122" pos:column="56"/></literal></expr>)<pos:position pos:line="122" pos:column="57"/></condition><then pos:line="122" pos:column="57"> <block pos:line="122" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="123" pos:column="9">debugs<pos:position pos:line="123" pos:column="15"/></name><argument_list pos:line="123" pos:column="15">(<argument><expr><literal type="number" pos:line="123" pos:column="16">28<pos:position pos:line="123" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="20">9<pos:position pos:line="123" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="23">"aclIpParseIpData: '"<pos:position pos:line="123" pos:column="44"/></literal> <operator pos:line="123" pos:column="45">&lt;&lt;<pos:position pos:line="123" pos:column="53"/></operator> <name pos:line="123" pos:column="48">t<pos:position pos:line="123" pos:column="49"/></name> <operator pos:line="123" pos:column="50">&lt;&lt;<pos:position pos:line="123" pos:column="58"/></operator> <literal type="string" pos:line="123" pos:column="53">"' matched: SCAN3-v4: "<pos:position pos:line="123" pos:column="76"/></literal> <operator pos:line="123" pos:column="77">&lt;&lt;<pos:position pos:line="123" pos:column="85"/></operator> <name pos:line="123" pos:column="80">SCAN_ACL3_4<pos:position pos:line="123" pos:column="91"/></name></expr></argument>)<pos:position pos:line="123" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="124" pos:column="9">addr2<pos:position pos:line="124" pos:column="14"/></name><index pos:line="124" pos:column="14">[<expr><literal type="number" pos:line="124" pos:column="15">0<pos:position pos:line="124" pos:column="16"/></literal></expr>]<pos:position pos:line="124" pos:column="17"/></index></name> <operator pos:line="124" pos:column="18">=<pos:position pos:line="124" pos:column="19"/></operator> <literal type="char" pos:line="124" pos:column="20">'\0'<pos:position pos:line="124" pos:column="24"/></literal></expr>;<pos:position pos:line="124" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="125" pos:column="9">iptype<pos:position pos:line="125" pos:column="15"/></name><operator pos:line="125" pos:column="15">=<pos:position pos:line="125" pos:column="16"/></operator><name pos:line="125" pos:column="16">AF_INET<pos:position pos:line="125" pos:column="23"/></name></expr>;<pos:position pos:line="125" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="126" pos:column="6"/></block></then></if></elseif> <elseif pos:line="126" pos:column="7">else <if pos:line="126" pos:column="12">if <condition pos:line="126" pos:column="15">(<expr><call><name pos:line="126" pos:column="16">sscanf<pos:position pos:line="126" pos:column="22"/></name><argument_list pos:line="126" pos:column="22">(<argument><expr><name pos:line="126" pos:column="23">t<pos:position pos:line="126" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="26">SCAN_ACL4_4<pos:position pos:line="126" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="126" pos:column="39">addr1<pos:position pos:line="126" pos:column="44"/></name></expr></argument>,<argument><expr><operator pos:line="126" pos:column="45">&amp;<pos:position pos:line="126" pos:column="50"/></operator><name pos:line="126" pos:column="46">c<pos:position pos:line="126" pos:column="47"/></name></expr></argument>)<pos:position pos:line="126" pos:column="48"/></argument_list></call> <operator pos:line="126" pos:column="49">==<pos:position pos:line="126" pos:column="51"/></operator> <literal type="number" pos:line="126" pos:column="52">2<pos:position pos:line="126" pos:column="53"/></literal></expr>)<pos:position pos:line="126" pos:column="54"/></condition><then pos:line="126" pos:column="54"> <block pos:line="126" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">debugs<pos:position pos:line="127" pos:column="15"/></name><argument_list pos:line="127" pos:column="15">(<argument><expr><literal type="number" pos:line="127" pos:column="16">28<pos:position pos:line="127" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="127" pos:column="20">9<pos:position pos:line="127" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="127" pos:column="23">"aclIpParseIpData: '"<pos:position pos:line="127" pos:column="44"/></literal> <operator pos:line="127" pos:column="45">&lt;&lt;<pos:position pos:line="127" pos:column="53"/></operator> <name pos:line="127" pos:column="48">t<pos:position pos:line="127" pos:column="49"/></name> <operator pos:line="127" pos:column="50">&lt;&lt;<pos:position pos:line="127" pos:column="58"/></operator> <literal type="string" pos:line="127" pos:column="53">"' matched: SCAN4-v4: "<pos:position pos:line="127" pos:column="76"/></literal> <operator pos:line="127" pos:column="77">&lt;&lt;<pos:position pos:line="127" pos:column="85"/></operator> <name pos:line="127" pos:column="80">SCAN_ACL4_4<pos:position pos:line="127" pos:column="91"/></name></expr></argument>)<pos:position pos:line="127" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="128" pos:column="9">addr2<pos:position pos:line="128" pos:column="14"/></name><index pos:line="128" pos:column="14">[<expr><literal type="number" pos:line="128" pos:column="15">0<pos:position pos:line="128" pos:column="16"/></literal></expr>]<pos:position pos:line="128" pos:column="17"/></index></name> <operator pos:line="128" pos:column="18">=<pos:position pos:line="128" pos:column="19"/></operator> <literal type="char" pos:line="128" pos:column="20">'\0'<pos:position pos:line="128" pos:column="24"/></literal></expr>;<pos:position pos:line="128" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="129" pos:column="9">mask<pos:position pos:line="129" pos:column="13"/></name><index pos:line="129" pos:column="13">[<expr><literal type="number" pos:line="129" pos:column="14">0<pos:position pos:line="129" pos:column="15"/></literal></expr>]<pos:position pos:line="129" pos:column="16"/></index></name> <operator pos:line="129" pos:column="17">=<pos:position pos:line="129" pos:column="18"/></operator> <literal type="char" pos:line="129" pos:column="19">'\0'<pos:position pos:line="129" pos:column="23"/></literal></expr>;<pos:position pos:line="129" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="130" pos:column="9">iptype<pos:position pos:line="130" pos:column="15"/></name><operator pos:line="130" pos:column="15">=<pos:position pos:line="130" pos:column="16"/></operator><name pos:line="130" pos:column="16">AF_INET<pos:position pos:line="130" pos:column="23"/></name></expr>;<pos:position pos:line="130" pos:column="24"/></expr_stmt>

<comment type="line" pos:line="132" pos:column="1">// IPv6</comment>
    }<pos:position pos:line="133" pos:column="6"/></block></then></if></elseif> <elseif pos:line="133" pos:column="7">else <if pos:line="133" pos:column="12">if <condition pos:line="133" pos:column="15">(<expr><call><name pos:line="133" pos:column="16">sscanf<pos:position pos:line="133" pos:column="22"/></name><argument_list pos:line="133" pos:column="22">(<argument><expr><name pos:line="133" pos:column="23">t<pos:position pos:line="133" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="26">SCAN_ACL1_6<pos:position pos:line="133" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="39">addr1<pos:position pos:line="133" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="46">addr2<pos:position pos:line="133" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="53">mask<pos:position pos:line="133" pos:column="57"/></name></expr></argument>)<pos:position pos:line="133" pos:column="58"/></argument_list></call> <operator pos:line="133" pos:column="59">==<pos:position pos:line="133" pos:column="61"/></operator> <literal type="number" pos:line="133" pos:column="62">3<pos:position pos:line="133" pos:column="63"/></literal></expr>)<pos:position pos:line="133" pos:column="64"/></condition><then pos:line="133" pos:column="64"> <block pos:line="133" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="134" pos:column="9">debugs<pos:position pos:line="134" pos:column="15"/></name><argument_list pos:line="134" pos:column="15">(<argument><expr><literal type="number" pos:line="134" pos:column="16">28<pos:position pos:line="134" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="134" pos:column="20">9<pos:position pos:line="134" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="23">"aclIpParseIpData: '"<pos:position pos:line="134" pos:column="44"/></literal> <operator pos:line="134" pos:column="45">&lt;&lt;<pos:position pos:line="134" pos:column="53"/></operator> <name pos:line="134" pos:column="48">t<pos:position pos:line="134" pos:column="49"/></name> <operator pos:line="134" pos:column="50">&lt;&lt;<pos:position pos:line="134" pos:column="58"/></operator> <literal type="string" pos:line="134" pos:column="53">"' matched: SCAN1-v6: "<pos:position pos:line="134" pos:column="76"/></literal> <operator pos:line="134" pos:column="77">&lt;&lt;<pos:position pos:line="134" pos:column="85"/></operator> <name pos:line="134" pos:column="80">SCAN_ACL1_6<pos:position pos:line="134" pos:column="91"/></name></expr></argument>)<pos:position pos:line="134" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><name pos:line="135" pos:column="9">iptype<pos:position pos:line="135" pos:column="15"/></name><operator pos:line="135" pos:column="15">=<pos:position pos:line="135" pos:column="16"/></operator><name pos:line="135" pos:column="16">AF_INET6<pos:position pos:line="135" pos:column="24"/></name></expr>;<pos:position pos:line="135" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="136" pos:column="6"/></block></then></if></elseif> <elseif pos:line="136" pos:column="7">else <if pos:line="136" pos:column="12">if <condition pos:line="136" pos:column="15">(<expr><call><name pos:line="136" pos:column="16">sscanf<pos:position pos:line="136" pos:column="22"/></name><argument_list pos:line="136" pos:column="22">(<argument><expr><name pos:line="136" pos:column="23">t<pos:position pos:line="136" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="26">SCAN_ACL2_6<pos:position pos:line="136" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="39">addr1<pos:position pos:line="136" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="136" pos:column="46">addr2<pos:position pos:line="136" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="136" pos:column="53">&amp;<pos:position pos:line="136" pos:column="58"/></operator><name pos:line="136" pos:column="54">c<pos:position pos:line="136" pos:column="55"/></name></expr></argument>)<pos:position pos:line="136" pos:column="56"/></argument_list></call> <operator pos:line="136" pos:column="57">&gt;=<pos:position pos:line="136" pos:column="62"/></operator> <literal type="number" pos:line="136" pos:column="60">2<pos:position pos:line="136" pos:column="61"/></literal></expr>)<pos:position pos:line="136" pos:column="62"/></condition><then pos:line="136" pos:column="62"> <block pos:line="136" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="137" pos:column="9">debugs<pos:position pos:line="137" pos:column="15"/></name><argument_list pos:line="137" pos:column="15">(<argument><expr><literal type="number" pos:line="137" pos:column="16">28<pos:position pos:line="137" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="137" pos:column="20">9<pos:position pos:line="137" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="137" pos:column="23">"aclIpParseIpData: '"<pos:position pos:line="137" pos:column="44"/></literal> <operator pos:line="137" pos:column="45">&lt;&lt;<pos:position pos:line="137" pos:column="53"/></operator> <name pos:line="137" pos:column="48">t<pos:position pos:line="137" pos:column="49"/></name> <operator pos:line="137" pos:column="50">&lt;&lt;<pos:position pos:line="137" pos:column="58"/></operator> <literal type="string" pos:line="137" pos:column="53">"' matched: SCAN2-v6: "<pos:position pos:line="137" pos:column="76"/></literal> <operator pos:line="137" pos:column="77">&lt;&lt;<pos:position pos:line="137" pos:column="85"/></operator> <name pos:line="137" pos:column="80">SCAN_ACL2_6<pos:position pos:line="137" pos:column="91"/></name></expr></argument>)<pos:position pos:line="137" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="138" pos:column="9">mask<pos:position pos:line="138" pos:column="13"/></name><index pos:line="138" pos:column="13">[<expr><literal type="number" pos:line="138" pos:column="14">0<pos:position pos:line="138" pos:column="15"/></literal></expr>]<pos:position pos:line="138" pos:column="16"/></index></name> <operator pos:line="138" pos:column="17">=<pos:position pos:line="138" pos:column="18"/></operator> <literal type="char" pos:line="138" pos:column="19">'\0'<pos:position pos:line="138" pos:column="23"/></literal></expr>;<pos:position pos:line="138" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="139" pos:column="9">iptype<pos:position pos:line="139" pos:column="15"/></name><operator pos:line="139" pos:column="15">=<pos:position pos:line="139" pos:column="16"/></operator><name pos:line="139" pos:column="16">AF_INET6<pos:position pos:line="139" pos:column="24"/></name></expr>;<pos:position pos:line="139" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="140" pos:column="6"/></block></then></if></elseif> <elseif pos:line="140" pos:column="7">else <if pos:line="140" pos:column="12">if <condition pos:line="140" pos:column="15">(<expr><call><name pos:line="140" pos:column="16">sscanf<pos:position pos:line="140" pos:column="22"/></name><argument_list pos:line="140" pos:column="22">(<argument><expr><name pos:line="140" pos:column="23">t<pos:position pos:line="140" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="26">SCAN_ACL3_6<pos:position pos:line="140" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="39">addr1<pos:position pos:line="140" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="140" pos:column="46">mask<pos:position pos:line="140" pos:column="50"/></name></expr></argument>)<pos:position pos:line="140" pos:column="51"/></argument_list></call> <operator pos:line="140" pos:column="52">==<pos:position pos:line="140" pos:column="54"/></operator> <literal type="number" pos:line="140" pos:column="55">2<pos:position pos:line="140" pos:column="56"/></literal></expr>)<pos:position pos:line="140" pos:column="57"/></condition><then pos:line="140" pos:column="57"> <block pos:line="140" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="141" pos:column="9">debugs<pos:position pos:line="141" pos:column="15"/></name><argument_list pos:line="141" pos:column="15">(<argument><expr><literal type="number" pos:line="141" pos:column="16">28<pos:position pos:line="141" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="20">9<pos:position pos:line="141" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="23">"aclIpParseIpData: '"<pos:position pos:line="141" pos:column="44"/></literal> <operator pos:line="141" pos:column="45">&lt;&lt;<pos:position pos:line="141" pos:column="53"/></operator> <name pos:line="141" pos:column="48">t<pos:position pos:line="141" pos:column="49"/></name> <operator pos:line="141" pos:column="50">&lt;&lt;<pos:position pos:line="141" pos:column="58"/></operator> <literal type="string" pos:line="141" pos:column="53">"' matched: SCAN3-v6: "<pos:position pos:line="141" pos:column="76"/></literal> <operator pos:line="141" pos:column="77">&lt;&lt;<pos:position pos:line="141" pos:column="85"/></operator> <name pos:line="141" pos:column="80">SCAN_ACL3_6<pos:position pos:line="141" pos:column="91"/></name></expr></argument>)<pos:position pos:line="141" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="142" pos:column="9">addr2<pos:position pos:line="142" pos:column="14"/></name><index pos:line="142" pos:column="14">[<expr><literal type="number" pos:line="142" pos:column="15">0<pos:position pos:line="142" pos:column="16"/></literal></expr>]<pos:position pos:line="142" pos:column="17"/></index></name> <operator pos:line="142" pos:column="18">=<pos:position pos:line="142" pos:column="19"/></operator> <literal type="char" pos:line="142" pos:column="20">'\0'<pos:position pos:line="142" pos:column="24"/></literal></expr>;<pos:position pos:line="142" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="143" pos:column="9">iptype<pos:position pos:line="143" pos:column="15"/></name><operator pos:line="143" pos:column="15">=<pos:position pos:line="143" pos:column="16"/></operator><name pos:line="143" pos:column="16">AF_INET6<pos:position pos:line="143" pos:column="24"/></name></expr>;<pos:position pos:line="143" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="144" pos:column="6"/></block></then></if></elseif> <elseif pos:line="144" pos:column="7">else <if pos:line="144" pos:column="12">if <condition pos:line="144" pos:column="15">(<expr><call><name pos:line="144" pos:column="16">sscanf<pos:position pos:line="144" pos:column="22"/></name><argument_list pos:line="144" pos:column="22">(<argument><expr><name pos:line="144" pos:column="23">t<pos:position pos:line="144" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="26">SCAN_ACL4_6<pos:position pos:line="144" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="39">addr1<pos:position pos:line="144" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="144" pos:column="46">mask<pos:position pos:line="144" pos:column="50"/></name></expr></argument>)<pos:position pos:line="144" pos:column="51"/></argument_list></call> <operator pos:line="144" pos:column="52">==<pos:position pos:line="144" pos:column="54"/></operator> <literal type="number" pos:line="144" pos:column="55">2<pos:position pos:line="144" pos:column="56"/></literal></expr>)<pos:position pos:line="144" pos:column="57"/></condition><then pos:line="144" pos:column="57"> <block pos:line="144" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="145" pos:column="9">debugs<pos:position pos:line="145" pos:column="15"/></name><argument_list pos:line="145" pos:column="15">(<argument><expr><literal type="number" pos:line="145" pos:column="16">28<pos:position pos:line="145" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="145" pos:column="20">9<pos:position pos:line="145" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="145" pos:column="23">"aclIpParseIpData: '"<pos:position pos:line="145" pos:column="44"/></literal> <operator pos:line="145" pos:column="45">&lt;&lt;<pos:position pos:line="145" pos:column="53"/></operator> <name pos:line="145" pos:column="48">t<pos:position pos:line="145" pos:column="49"/></name> <operator pos:line="145" pos:column="50">&lt;&lt;<pos:position pos:line="145" pos:column="58"/></operator> <literal type="string" pos:line="145" pos:column="53">"' matched: SCAN4-v6: "<pos:position pos:line="145" pos:column="76"/></literal> <operator pos:line="145" pos:column="77">&lt;&lt;<pos:position pos:line="145" pos:column="85"/></operator> <name pos:line="145" pos:column="80">SCAN_ACL4_6<pos:position pos:line="145" pos:column="91"/></name></expr></argument>)<pos:position pos:line="145" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="146" pos:column="9">addr2<pos:position pos:line="146" pos:column="14"/></name><index pos:line="146" pos:column="14">[<expr><literal type="number" pos:line="146" pos:column="15">0<pos:position pos:line="146" pos:column="16"/></literal></expr>]<pos:position pos:line="146" pos:column="17"/></index></name> <operator pos:line="146" pos:column="18">=<pos:position pos:line="146" pos:column="19"/></operator> <literal type="char" pos:line="146" pos:column="20">'\0'<pos:position pos:line="146" pos:column="24"/></literal></expr>;<pos:position pos:line="146" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="147" pos:column="9">iptype<pos:position pos:line="147" pos:column="15"/></name><operator pos:line="147" pos:column="15">=<pos:position pos:line="147" pos:column="16"/></operator><name pos:line="147" pos:column="16">AF_INET6<pos:position pos:line="147" pos:column="24"/></name></expr>;<pos:position pos:line="147" pos:column="25"/></expr_stmt>

<comment type="line" pos:line="149" pos:column="1">// Neither</comment>
    }<pos:position pos:line="150" pos:column="6"/></block></then></if></elseif> <elseif pos:line="150" pos:column="7">else <if pos:line="150" pos:column="12">if <condition pos:line="150" pos:column="15">(<expr><call><name pos:line="150" pos:column="16">sscanf<pos:position pos:line="150" pos:column="22"/></name><argument_list pos:line="150" pos:column="22">(<argument><expr><name pos:line="150" pos:column="23">t<pos:position pos:line="150" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="26">"%[^/]/%s"<pos:position pos:line="150" pos:column="36"/></literal></expr></argument>, <argument><expr><name pos:line="150" pos:column="38">addr1<pos:position pos:line="150" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="150" pos:column="45">mask<pos:position pos:line="150" pos:column="49"/></name></expr></argument>)<pos:position pos:line="150" pos:column="50"/></argument_list></call> <operator pos:line="150" pos:column="51">==<pos:position pos:line="150" pos:column="53"/></operator> <literal type="number" pos:line="150" pos:column="54">2<pos:position pos:line="150" pos:column="55"/></literal></expr>)<pos:position pos:line="150" pos:column="56"/></condition><then pos:line="150" pos:column="56"> <block pos:line="150" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="151" pos:column="9">debugs<pos:position pos:line="151" pos:column="15"/></name><argument_list pos:line="151" pos:column="15">(<argument><expr><literal type="number" pos:line="151" pos:column="16">28<pos:position pos:line="151" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="151" pos:column="20">9<pos:position pos:line="151" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="151" pos:column="23">"aclIpParseIpData: '"<pos:position pos:line="151" pos:column="44"/></literal> <operator pos:line="151" pos:column="45">&lt;&lt;<pos:position pos:line="151" pos:column="53"/></operator> <name pos:line="151" pos:column="48">t<pos:position pos:line="151" pos:column="49"/></name> <operator pos:line="151" pos:column="50">&lt;&lt;<pos:position pos:line="151" pos:column="58"/></operator> <literal type="string" pos:line="151" pos:column="53">"' matched: non-IP pattern: %[^/]/%s"<pos:position pos:line="151" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="92"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="152" pos:column="9">addr2<pos:position pos:line="152" pos:column="14"/></name><index pos:line="152" pos:column="14">[<expr><literal type="number" pos:line="152" pos:column="15">0<pos:position pos:line="152" pos:column="16"/></literal></expr>]<pos:position pos:line="152" pos:column="17"/></index></name> <operator pos:line="152" pos:column="18">=<pos:position pos:line="152" pos:column="19"/></operator> <literal type="char" pos:line="152" pos:column="20">'\0'<pos:position pos:line="152" pos:column="24"/></literal></expr>;<pos:position pos:line="152" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="153" pos:column="6"/></block></then></if></elseif> <elseif pos:line="153" pos:column="7">else <if pos:line="153" pos:column="12">if <condition pos:line="153" pos:column="15">(<expr><call><name pos:line="153" pos:column="16">sscanf<pos:position pos:line="153" pos:column="22"/></name><argument_list pos:line="153" pos:column="22">(<argument><expr><name pos:line="153" pos:column="23">t<pos:position pos:line="153" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="26">"%s"<pos:position pos:line="153" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="32">addr1<pos:position pos:line="153" pos:column="37"/></name></expr></argument>)<pos:position pos:line="153" pos:column="38"/></argument_list></call> <operator pos:line="153" pos:column="39">==<pos:position pos:line="153" pos:column="41"/></operator> <literal type="number" pos:line="153" pos:column="42">1<pos:position pos:line="153" pos:column="43"/></literal></expr>)<pos:position pos:line="153" pos:column="44"/></condition><then pos:line="153" pos:column="44"> <block pos:line="153" pos:column="45">{
        <comment type="block" pos:line="154" pos:column="9">/*
         * Note, must use plain xgetaddrinfo() here because at startup
         * ipcache hasn't been initialized
         * TODO: offload this to one of the IpAddress lookups.
         */</comment>

        <expr_stmt><expr><call><name pos:line="160" pos:column="9">debugs<pos:position pos:line="160" pos:column="15"/></name><argument_list pos:line="160" pos:column="15">(<argument><expr><literal type="number" pos:line="160" pos:column="16">28<pos:position pos:line="160" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="160" pos:column="20">5<pos:position pos:line="160" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="160" pos:column="23">"aclIpParseIpData: Lookup Host/IP "<pos:position pos:line="160" pos:column="58"/></literal> <operator pos:line="160" pos:column="59">&lt;&lt;<pos:position pos:line="160" pos:column="67"/></operator> <name pos:line="160" pos:column="62">addr1<pos:position pos:line="160" pos:column="67"/></name></expr></argument>)<pos:position pos:line="160" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="69"/></expr_stmt>
        <decl_stmt><decl><type><name><name pos:line="161" pos:column="9">struct<pos:position pos:line="161" pos:column="15"/></name> <name pos:line="161" pos:column="16">addrinfo<pos:position pos:line="161" pos:column="24"/></name></name> <modifier pos:line="161" pos:column="25">*<pos:position pos:line="161" pos:column="26"/></modifier></type><name pos:line="161" pos:column="26">hp<pos:position pos:line="161" pos:column="28"/></name> <init pos:line="161" pos:column="29">= <expr><name pos:line="161" pos:column="31">NULL<pos:position pos:line="161" pos:column="35"/></name></expr></init></decl>, <modifier pos:line="161" pos:column="37">*<pos:position pos:line="161" pos:column="38"/></modifier><decl><type ref="prev"/><name pos:line="161" pos:column="38">x<pos:position pos:line="161" pos:column="39"/></name> <init pos:line="161" pos:column="40">= <expr><name pos:line="161" pos:column="42">NULL<pos:position pos:line="161" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="161" pos:column="47"/></decl_stmt>
        <decl_stmt><decl><type><name><name pos:line="162" pos:column="9">struct<pos:position pos:line="162" pos:column="15"/></name> <name pos:line="162" pos:column="16">addrinfo<pos:position pos:line="162" pos:column="24"/></name></name></type> <name pos:line="162" pos:column="25">hints<pos:position pos:line="162" pos:column="30"/></name></decl>;<pos:position pos:line="162" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="163" pos:column="9">IpAddress<pos:position pos:line="163" pos:column="18"/></name> <modifier pos:line="163" pos:column="19">*<pos:position pos:line="163" pos:column="20"/></modifier></type><name pos:line="163" pos:column="20">prev_addr<pos:position pos:line="163" pos:column="29"/></name> <init pos:line="163" pos:column="30">= <expr><name pos:line="163" pos:column="32">NULL<pos:position pos:line="163" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="163" pos:column="37"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="165" pos:column="9">memset<pos:position pos:line="165" pos:column="15"/></name><argument_list pos:line="165" pos:column="15">(<argument><expr><operator pos:line="165" pos:column="16">&amp;<pos:position pos:line="165" pos:column="21"/></operator><name pos:line="165" pos:column="17">hints<pos:position pos:line="165" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="165" pos:column="24">0<pos:position pos:line="165" pos:column="25"/></literal></expr></argument>, <argument><expr><sizeof pos:line="165" pos:column="27">sizeof<argument_list pos:line="165" pos:column="33">(<argument><expr pos:line="165" pos:column="34">struct <name pos:line="165" pos:column="41">addrinfo<pos:position pos:line="165" pos:column="49"/></name></expr></argument>)<pos:position pos:line="165" pos:column="50"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="165" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="52"/></expr_stmt>

        <if pos:line="167" pos:column="9">if <condition pos:line="167" pos:column="12">( <expr><name pos:line="167" pos:column="14">iptype<pos:position pos:line="167" pos:column="20"/></name> <operator pos:line="167" pos:column="21">!=<pos:position pos:line="167" pos:column="23"/></operator> <name pos:line="167" pos:column="24">AF_UNSPEC<pos:position pos:line="167" pos:column="33"/></name></expr> )<pos:position pos:line="167" pos:column="35"/></condition><then pos:line="167" pos:column="35"> <block pos:line="167" pos:column="36">{
            <expr_stmt><expr><name><name pos:line="168" pos:column="13">hints<pos:position pos:line="168" pos:column="18"/></name><operator pos:line="168" pos:column="18">.<pos:position pos:line="168" pos:column="19"/></operator><name pos:line="168" pos:column="19">ai_flags<pos:position pos:line="168" pos:column="27"/></name></name> <operator pos:line="168" pos:column="28">|=<pos:position pos:line="168" pos:column="30"/></operator> <name pos:line="168" pos:column="31">AI_NUMERICHOST<pos:position pos:line="168" pos:column="45"/></name></expr>;<pos:position pos:line="168" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="169" pos:column="10"/></block></then></if>

<cpp:if pos:line="171" pos:column="1">#<cpp:directive pos:line="171" pos:column="2">if<pos:position pos:line="171" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="171" pos:column="5">0<pos:position pos:line="171" pos:column="6"/></literal></expr></cpp:if>
        if (Ip::EnableIpv6&amp;IPV6_SPECIAL_V4MAPPING)
            hints.ai_flags |= AI_V4MAPPED | AI_ALL;
<cpp:endif pos:line="174" pos:column="1">#<cpp:directive pos:line="174" pos:column="2">endif<pos:position pos:line="174" pos:column="7"/></cpp:directive></cpp:endif>

        <decl_stmt><decl><type><name pos:line="176" pos:column="9">int<pos:position pos:line="176" pos:column="12"/></name></type> <name pos:line="176" pos:column="13">errcode<pos:position pos:line="176" pos:column="20"/></name> <init pos:line="176" pos:column="21">= <expr><call><name pos:line="176" pos:column="23">xgetaddrinfo<pos:position pos:line="176" pos:column="35"/></name><argument_list pos:line="176" pos:column="35">(<argument><expr><name pos:line="176" pos:column="36">addr1<pos:position pos:line="176" pos:column="41"/></name></expr></argument>,<argument><expr><name pos:line="176" pos:column="42">NULL<pos:position pos:line="176" pos:column="46"/></name></expr></argument>,<argument><expr><operator pos:line="176" pos:column="47">&amp;<pos:position pos:line="176" pos:column="52"/></operator><name pos:line="176" pos:column="48">hints<pos:position pos:line="176" pos:column="53"/></name></expr></argument>,<argument><expr><operator pos:line="176" pos:column="54">&amp;<pos:position pos:line="176" pos:column="59"/></operator><name pos:line="176" pos:column="55">hp<pos:position pos:line="176" pos:column="57"/></name></expr></argument>)<pos:position pos:line="176" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="176" pos:column="59"/></decl_stmt>
        <if pos:line="177" pos:column="9">if <condition pos:line="177" pos:column="12">(<expr><name pos:line="177" pos:column="13">hp<pos:position pos:line="177" pos:column="15"/></name> <operator pos:line="177" pos:column="16">==<pos:position pos:line="177" pos:column="18"/></operator> <name pos:line="177" pos:column="19">NULL<pos:position pos:line="177" pos:column="23"/></name></expr>)<pos:position pos:line="177" pos:column="24"/></condition><then pos:line="177" pos:column="24"> <block pos:line="177" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="178" pos:column="13">debugs<pos:position pos:line="178" pos:column="19"/></name><argument_list pos:line="178" pos:column="19">(<argument><expr><literal type="number" pos:line="178" pos:column="20">28<pos:position pos:line="178" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="178" pos:column="24">0<pos:position pos:line="178" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="178" pos:column="27">"aclIpParseIpData: Bad host/IP: '"<pos:position pos:line="178" pos:column="61"/></literal> <operator pos:line="178" pos:column="62">&lt;&lt;<pos:position pos:line="178" pos:column="70"/></operator> <name pos:line="178" pos:column="65">addr1<pos:position pos:line="178" pos:column="70"/></name> <operator pos:line="178" pos:column="71">&lt;&lt;<pos:position pos:line="178" pos:column="79"/></operator>
                   <literal type="string" pos:line="179" pos:column="20">"' in '"<pos:position pos:line="179" pos:column="28"/></literal> <operator pos:line="179" pos:column="29">&lt;&lt;<pos:position pos:line="179" pos:column="37"/></operator> <name pos:line="179" pos:column="32">t<pos:position pos:line="179" pos:column="33"/></name> <operator pos:line="179" pos:column="34">&lt;&lt;<pos:position pos:line="179" pos:column="42"/></operator> <literal type="string" pos:line="179" pos:column="37">"', flags="<pos:position pos:line="179" pos:column="48"/></literal> <operator pos:line="179" pos:column="49">&lt;&lt;<pos:position pos:line="179" pos:column="57"/></operator> <name><name pos:line="179" pos:column="52">hints<pos:position pos:line="179" pos:column="57"/></name><operator pos:line="179" pos:column="57">.<pos:position pos:line="179" pos:column="58"/></operator><name pos:line="179" pos:column="58">ai_flags<pos:position pos:line="179" pos:column="66"/></name></name> <operator pos:line="179" pos:column="67">&lt;&lt;<pos:position pos:line="179" pos:column="75"/></operator>
                   <literal type="string" pos:line="180" pos:column="20">" : ("<pos:position pos:line="180" pos:column="26"/></literal> <operator pos:line="180" pos:column="27">&lt;&lt;<pos:position pos:line="180" pos:column="35"/></operator> <name pos:line="180" pos:column="30">errcode<pos:position pos:line="180" pos:column="37"/></name> <operator pos:line="180" pos:column="38">&lt;&lt;<pos:position pos:line="180" pos:column="46"/></operator> <literal type="string" pos:line="180" pos:column="41">") "<pos:position pos:line="180" pos:column="45"/></literal> <operator pos:line="180" pos:column="46">&lt;&lt;<pos:position pos:line="180" pos:column="54"/></operator> <call><name pos:line="180" pos:column="49">xgai_strerror<pos:position pos:line="180" pos:column="62"/></name><argument_list pos:line="180" pos:column="62">(<argument><expr><name pos:line="180" pos:column="63">errcode<pos:position pos:line="180" pos:column="70"/></name></expr></argument>)<pos:position pos:line="180" pos:column="71"/></argument_list></call></expr></argument> )<pos:position pos:line="180" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="180" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="181" pos:column="13">self_destruct<pos:position pos:line="181" pos:column="26"/></name><argument_list pos:line="181" pos:column="26">()<pos:position pos:line="181" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="29"/></expr_stmt>
            <return pos:line="182" pos:column="13">return <expr><name pos:line="182" pos:column="20">NULL<pos:position pos:line="182" pos:column="24"/></name></expr>;<pos:position pos:line="182" pos:column="25"/></return>
        }<pos:position pos:line="183" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="185" pos:column="9">Q<pos:position pos:line="185" pos:column="10"/></name> <operator pos:line="185" pos:column="11">=<pos:position pos:line="185" pos:column="12"/></operator> <operator pos:line="185" pos:column="13">&amp;<pos:position pos:line="185" pos:column="18"/></operator><name pos:line="185" pos:column="14">q<pos:position pos:line="185" pos:column="15"/></name></expr>;<pos:position pos:line="185" pos:column="16"/></expr_stmt>

        <for pos:line="187" pos:column="9">for <control pos:line="187" pos:column="13">(<init><expr><name pos:line="187" pos:column="14">x<pos:position pos:line="187" pos:column="15"/></name> <operator pos:line="187" pos:column="16">=<pos:position pos:line="187" pos:column="17"/></operator> <name pos:line="187" pos:column="18">hp<pos:position pos:line="187" pos:column="20"/></name></expr>;<pos:position pos:line="187" pos:column="21"/></init> <condition><expr><name pos:line="187" pos:column="22">x<pos:position pos:line="187" pos:column="23"/></name> <operator pos:line="187" pos:column="24">!=<pos:position pos:line="187" pos:column="26"/></operator> <name pos:line="187" pos:column="27">NULL<pos:position pos:line="187" pos:column="31"/></name></expr>;<pos:position pos:line="187" pos:column="32"/></condition><incr/>)<pos:position pos:line="187" pos:column="33"/></control> <block pos:line="187" pos:column="34">{
            <if pos:line="188" pos:column="13">if <condition pos:line="188" pos:column="16">(<expr><operator pos:line="188" pos:column="17">(<pos:position pos:line="188" pos:column="18"/></operator><name pos:line="188" pos:column="18">r<pos:position pos:line="188" pos:column="19"/></name> <operator pos:line="188" pos:column="20">=<pos:position pos:line="188" pos:column="21"/></operator> <operator pos:line="188" pos:column="22">*<pos:position pos:line="188" pos:column="23"/></operator><name pos:line="188" pos:column="23">Q<pos:position pos:line="188" pos:column="24"/></name><operator pos:line="188" pos:column="24">)<pos:position pos:line="188" pos:column="25"/></operator> <operator pos:line="188" pos:column="26">==<pos:position pos:line="188" pos:column="28"/></operator> <name pos:line="188" pos:column="29">NULL<pos:position pos:line="188" pos:column="33"/></name></expr>)<pos:position pos:line="188" pos:column="34"/></condition><then pos:line="188" pos:column="34">
                <block type="pseudo"><expr_stmt><expr><name pos:line="189" pos:column="17">r<pos:position pos:line="189" pos:column="18"/></name> <operator pos:line="189" pos:column="19">=<pos:position pos:line="189" pos:column="20"/></operator> <operator pos:line="189" pos:column="21">*<pos:position pos:line="189" pos:column="22"/></operator><name pos:line="189" pos:column="22">Q<pos:position pos:line="189" pos:column="23"/></name> <operator pos:line="189" pos:column="24">=<pos:position pos:line="189" pos:column="25"/></operator> <operator pos:line="189" pos:column="26">new<pos:position pos:line="189" pos:column="29"/></operator> <name pos:line="189" pos:column="30">acl_ip_data<pos:position pos:line="189" pos:column="41"/></name></expr>;<pos:position pos:line="189" pos:column="42"/></expr_stmt></block></then></if>

            <comment type="block" pos:line="191" pos:column="13">/* getaddrinfo given a host has a nasty tendency to return duplicate addr's */</comment>
            <comment type="block" pos:line="192" pos:column="13">/* BUT sorted fortunately, so we can drop most of them easily */</comment>
            <expr_stmt><expr><name><name pos:line="193" pos:column="13">r<pos:position pos:line="193" pos:column="14"/></name><operator pos:line="193" pos:column="14">-&gt;<pos:position pos:line="193" pos:column="19"/></operator><name pos:line="193" pos:column="16">addr1<pos:position pos:line="193" pos:column="21"/></name></name> <operator pos:line="193" pos:column="22">=<pos:position pos:line="193" pos:column="23"/></operator> <operator pos:line="193" pos:column="24">*<pos:position pos:line="193" pos:column="25"/></operator><name pos:line="193" pos:column="25">x<pos:position pos:line="193" pos:column="26"/></name></expr>;<pos:position pos:line="193" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><name pos:line="194" pos:column="13">x<pos:position pos:line="194" pos:column="14"/></name> <operator pos:line="194" pos:column="15">=<pos:position pos:line="194" pos:column="16"/></operator> <name><name pos:line="194" pos:column="17">x<pos:position pos:line="194" pos:column="18"/></name><operator pos:line="194" pos:column="18">-&gt;<pos:position pos:line="194" pos:column="23"/></operator><name pos:line="194" pos:column="20">ai_next<pos:position pos:line="194" pos:column="27"/></name></name></expr>;<pos:position pos:line="194" pos:column="28"/></expr_stmt>
            <if pos:line="195" pos:column="13">if <condition pos:line="195" pos:column="16">( <expr><name pos:line="195" pos:column="18">prev_addr<pos:position pos:line="195" pos:column="27"/></name> <operator pos:line="195" pos:column="28">&amp;&amp;<pos:position pos:line="195" pos:column="38"/></operator> <name><name pos:line="195" pos:column="31">r<pos:position pos:line="195" pos:column="32"/></name><operator pos:line="195" pos:column="32">-&gt;<pos:position pos:line="195" pos:column="37"/></operator><name pos:line="195" pos:column="34">addr1<pos:position pos:line="195" pos:column="39"/></name></name> <operator pos:line="195" pos:column="40">==<pos:position pos:line="195" pos:column="42"/></operator> <operator pos:line="195" pos:column="43">*<pos:position pos:line="195" pos:column="44"/></operator><name pos:line="195" pos:column="44">prev_addr<pos:position pos:line="195" pos:column="53"/></name></expr>)<pos:position pos:line="195" pos:column="54"/></condition><then pos:line="195" pos:column="54"> <block pos:line="195" pos:column="55">{
                <expr_stmt><expr><call><name pos:line="196" pos:column="17">debugs<pos:position pos:line="196" pos:column="23"/></name><argument_list pos:line="196" pos:column="23">(<argument><expr><literal type="number" pos:line="196" pos:column="24">28<pos:position pos:line="196" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="196" pos:column="28">3<pos:position pos:line="196" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="196" pos:column="31">"aclIpParseIpData: Duplicate host/IP: '"<pos:position pos:line="196" pos:column="71"/></literal> <operator pos:line="196" pos:column="72">&lt;&lt;<pos:position pos:line="196" pos:column="80"/></operator> <name><name pos:line="196" pos:column="75">r<pos:position pos:line="196" pos:column="76"/></name><operator pos:line="196" pos:column="76">-&gt;<pos:position pos:line="196" pos:column="81"/></operator><name pos:line="196" pos:column="78">addr1<pos:position pos:line="196" pos:column="83"/></name></name> <operator pos:line="196" pos:column="84">&lt;&lt;<pos:position pos:line="196" pos:column="92"/></operator> <literal type="string" pos:line="196" pos:column="87">"' dropped."<pos:position pos:line="196" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="196" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="196" pos:column="101"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="197" pos:column="17">delete<pos:position pos:line="197" pos:column="23"/></operator> <name pos:line="197" pos:column="24">r<pos:position pos:line="197" pos:column="25"/></name></expr>;<pos:position pos:line="197" pos:column="26"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="198" pos:column="17">*<pos:position pos:line="198" pos:column="18"/></operator><name pos:line="198" pos:column="18">Q<pos:position pos:line="198" pos:column="19"/></name> <operator pos:line="198" pos:column="20">=<pos:position pos:line="198" pos:column="21"/></operator> <name pos:line="198" pos:column="22">NULL<pos:position pos:line="198" pos:column="26"/></name></expr>;<pos:position pos:line="198" pos:column="27"/></expr_stmt>
                <continue pos:line="199" pos:column="17">continue;<pos:position pos:line="199" pos:column="26"/></continue>
            }<pos:position pos:line="200" pos:column="14"/></block></then> <else pos:line="200" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="201" pos:column="17">prev_addr<pos:position pos:line="201" pos:column="26"/></name> <operator pos:line="201" pos:column="27">=<pos:position pos:line="201" pos:column="28"/></operator> <operator pos:line="201" pos:column="29">&amp;<pos:position pos:line="201" pos:column="34"/></operator><name><name pos:line="201" pos:column="30">r<pos:position pos:line="201" pos:column="31"/></name><operator pos:line="201" pos:column="31">-&gt;<pos:position pos:line="201" pos:column="36"/></operator><name pos:line="201" pos:column="33">addr1<pos:position pos:line="201" pos:column="38"/></name></name></expr>;<pos:position pos:line="201" pos:column="39"/></expr_stmt></block></else></if>

            <expr_stmt><expr><call><name pos:line="203" pos:column="13">debugs<pos:position pos:line="203" pos:column="19"/></name><argument_list pos:line="203" pos:column="19">(<argument><expr><literal type="number" pos:line="203" pos:column="20">28<pos:position pos:line="203" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="203" pos:column="24">3<pos:position pos:line="203" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="203" pos:column="27">"aclIpParseIpData: Located host/IP: '"<pos:position pos:line="203" pos:column="65"/></literal> <operator pos:line="203" pos:column="66">&lt;&lt;<pos:position pos:line="203" pos:column="74"/></operator> <name><name pos:line="203" pos:column="69">r<pos:position pos:line="203" pos:column="70"/></name><operator pos:line="203" pos:column="70">-&gt;<pos:position pos:line="203" pos:column="75"/></operator><name pos:line="203" pos:column="72">addr1<pos:position pos:line="203" pos:column="77"/></name></name> <operator pos:line="203" pos:column="78">&lt;&lt;<pos:position pos:line="203" pos:column="86"/></operator> <literal type="string" pos:line="203" pos:column="81">"'"<pos:position pos:line="203" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="203" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="203" pos:column="86"/></expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="205" pos:column="13">r<pos:position pos:line="205" pos:column="14"/></name><operator pos:line="205" pos:column="14">-&gt;<pos:position pos:line="205" pos:column="19"/></operator><name pos:line="205" pos:column="16">addr2<pos:position pos:line="205" pos:column="21"/></name><operator pos:line="205" pos:column="21">.<pos:position pos:line="205" pos:column="22"/></operator><name pos:line="205" pos:column="22">SetAnyAddr<pos:position pos:line="205" pos:column="32"/></name></name><argument_list pos:line="205" pos:column="32">()<pos:position pos:line="205" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="205" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="206" pos:column="13">r<pos:position pos:line="206" pos:column="14"/></name><operator pos:line="206" pos:column="14">-&gt;<pos:position pos:line="206" pos:column="19"/></operator><name pos:line="206" pos:column="16">mask<pos:position pos:line="206" pos:column="20"/></name><operator pos:line="206" pos:column="20">.<pos:position pos:line="206" pos:column="21"/></operator><name pos:line="206" pos:column="21">SetNoAddr<pos:position pos:line="206" pos:column="30"/></name></name><argument_list pos:line="206" pos:column="30">()<pos:position pos:line="206" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="33"/></expr_stmt>

            <expr_stmt><expr><name pos:line="208" pos:column="13">Q<pos:position pos:line="208" pos:column="14"/></name> <operator pos:line="208" pos:column="15">=<pos:position pos:line="208" pos:column="16"/></operator> <operator pos:line="208" pos:column="17">&amp;<pos:position pos:line="208" pos:column="22"/></operator><name><name pos:line="208" pos:column="18">r<pos:position pos:line="208" pos:column="19"/></name><operator pos:line="208" pos:column="19">-&gt;<pos:position pos:line="208" pos:column="24"/></operator><name pos:line="208" pos:column="21">next<pos:position pos:line="208" pos:column="25"/></name></name></expr>;<pos:position pos:line="208" pos:column="26"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="210" pos:column="13">debugs<pos:position pos:line="210" pos:column="19"/></name><argument_list pos:line="210" pos:column="19">(<argument><expr><literal type="number" pos:line="210" pos:column="20">28<pos:position pos:line="210" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="210" pos:column="24">3<pos:position pos:line="210" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="210" pos:column="27">""<pos:position pos:line="210" pos:column="29"/></literal> <operator pos:line="210" pos:column="30">&lt;&lt;<pos:position pos:line="210" pos:column="38"/></operator> <name pos:line="210" pos:column="33">addr1<pos:position pos:line="210" pos:column="38"/></name> <operator pos:line="210" pos:column="39">&lt;&lt;<pos:position pos:line="210" pos:column="47"/></operator> <literal type="string" pos:line="210" pos:column="42">" --&gt; "<pos:position pos:line="210" pos:column="52"/></literal> <operator pos:line="210" pos:column="50">&lt;&lt;<pos:position pos:line="210" pos:column="58"/></operator> <name><name pos:line="210" pos:column="53">r<pos:position pos:line="210" pos:column="54"/></name><operator pos:line="210" pos:column="54">-&gt;<pos:position pos:line="210" pos:column="59"/></operator><name pos:line="210" pos:column="56">addr1<pos:position pos:line="210" pos:column="61"/></name></name></expr></argument> )<pos:position pos:line="210" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="64"/></expr_stmt>
        }<pos:position pos:line="211" pos:column="10"/></block></for>

        <if pos:line="213" pos:column="9">if <condition pos:line="213" pos:column="12">(<expr><operator pos:line="213" pos:column="13">*<pos:position pos:line="213" pos:column="14"/></operator><name pos:line="213" pos:column="14">Q<pos:position pos:line="213" pos:column="15"/></name> <operator pos:line="213" pos:column="16">!=<pos:position pos:line="213" pos:column="18"/></operator> <name pos:line="213" pos:column="19">NULL<pos:position pos:line="213" pos:column="23"/></name></expr>)<pos:position pos:line="213" pos:column="24"/></condition><then pos:line="213" pos:column="24"> <block pos:line="213" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="214" pos:column="13">debugs<pos:position pos:line="214" pos:column="19"/></name><argument_list pos:line="214" pos:column="19">(<argument><expr><literal type="number" pos:line="214" pos:column="20">28<pos:position pos:line="214" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="214" pos:column="24">0<pos:position pos:line="214" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="214" pos:column="27">"aclIpParseIpData: Bad host/IP: '"<pos:position pos:line="214" pos:column="61"/></literal> <operator pos:line="214" pos:column="62">&lt;&lt;<pos:position pos:line="214" pos:column="70"/></operator> <name pos:line="214" pos:column="65">t<pos:position pos:line="214" pos:column="66"/></name> <operator pos:line="214" pos:column="67">&lt;&lt;<pos:position pos:line="214" pos:column="75"/></operator> <literal type="string" pos:line="214" pos:column="70">"'"<pos:position pos:line="214" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="214" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="215" pos:column="13">self_destruct<pos:position pos:line="215" pos:column="26"/></name><argument_list pos:line="215" pos:column="26">()<pos:position pos:line="215" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="29"/></expr_stmt>
            <return pos:line="216" pos:column="13">return <expr><name pos:line="216" pos:column="20">NULL<pos:position pos:line="216" pos:column="24"/></name></expr>;<pos:position pos:line="216" pos:column="25"/></return>
        }<pos:position pos:line="217" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="219" pos:column="9">xfreeaddrinfo<pos:position pos:line="219" pos:column="22"/></name><argument_list pos:line="219" pos:column="22">(<argument><expr><name pos:line="219" pos:column="23">hp<pos:position pos:line="219" pos:column="25"/></name></expr></argument>)<pos:position pos:line="219" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="27"/></expr_stmt>

        <return pos:line="221" pos:column="9">return <expr><name pos:line="221" pos:column="16">q<pos:position pos:line="221" pos:column="17"/></name></expr>;<pos:position pos:line="221" pos:column="18"/></return>
    }<pos:position pos:line="222" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="224" pos:column="5">/* ignore IPv6 addresses when built with IPv4-only */</comment>
    <if pos:line="225" pos:column="5">if <condition pos:line="225" pos:column="8">( <expr><name pos:line="225" pos:column="10">iptype<pos:position pos:line="225" pos:column="16"/></name> <operator pos:line="225" pos:column="17">==<pos:position pos:line="225" pos:column="19"/></operator> <name pos:line="225" pos:column="20">AF_INET6<pos:position pos:line="225" pos:column="28"/></name> <operator pos:line="225" pos:column="29">&amp;&amp;<pos:position pos:line="225" pos:column="39"/></operator> <operator pos:line="225" pos:column="32">!<pos:position pos:line="225" pos:column="33"/></operator><name><name pos:line="225" pos:column="33">Ip<pos:position pos:line="225" pos:column="35"/></name><operator pos:line="225" pos:column="35">::<pos:position pos:line="225" pos:column="37"/></operator><name pos:line="225" pos:column="37">EnableIpv6<pos:position pos:line="225" pos:column="47"/></name></name></expr>)<pos:position pos:line="225" pos:column="48"/></condition><then pos:line="225" pos:column="48"> <block pos:line="225" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="226" pos:column="9">debugs<pos:position pos:line="226" pos:column="15"/></name><argument_list pos:line="226" pos:column="15">(<argument><expr><literal type="number" pos:line="226" pos:column="16">28<pos:position pos:line="226" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="226" pos:column="20">DBG_IMPORTANT<pos:position pos:line="226" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="226" pos:column="35">"aclIpParseIpData: IPv6 has not been enabled."<pos:position pos:line="226" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="226" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="83"/></expr_stmt>
        <return pos:line="227" pos:column="9">return <expr><name pos:line="227" pos:column="16">NULL<pos:position pos:line="227" pos:column="20"/></name></expr>;<pos:position pos:line="227" pos:column="21"/></return>
    }<pos:position pos:line="228" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="230" pos:column="5">/* Decode addr1 */</comment>
    <if pos:line="231" pos:column="5">if <condition pos:line="231" pos:column="8">(<expr><operator pos:line="231" pos:column="9">!<pos:position pos:line="231" pos:column="10"/></operator><operator pos:line="231" pos:column="10">*<pos:position pos:line="231" pos:column="11"/></operator><name pos:line="231" pos:column="11">addr1<pos:position pos:line="231" pos:column="16"/></name> <operator pos:line="231" pos:column="17">||<pos:position pos:line="231" pos:column="19"/></operator> <operator pos:line="231" pos:column="20">!<pos:position pos:line="231" pos:column="21"/></operator><operator pos:line="231" pos:column="21">(<pos:position pos:line="231" pos:column="22"/></operator><name><name pos:line="231" pos:column="22">q<pos:position pos:line="231" pos:column="23"/></name><operator pos:line="231" pos:column="23">-&gt;<pos:position pos:line="231" pos:column="28"/></operator><name pos:line="231" pos:column="25">addr1<pos:position pos:line="231" pos:column="30"/></name></name> <operator pos:line="231" pos:column="31">=<pos:position pos:line="231" pos:column="32"/></operator> <name pos:line="231" pos:column="33">addr1<pos:position pos:line="231" pos:column="38"/></name><operator pos:line="231" pos:column="38">)<pos:position pos:line="231" pos:column="39"/></operator></expr>)<pos:position pos:line="231" pos:column="40"/></condition><then pos:line="231" pos:column="40"> <block pos:line="231" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="232" pos:column="9">debugs<pos:position pos:line="232" pos:column="15"/></name><argument_list pos:line="232" pos:column="15">(<argument><expr><literal type="number" pos:line="232" pos:column="16">28<pos:position pos:line="232" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="232" pos:column="20">0<pos:position pos:line="232" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="232" pos:column="23">"aclIpParseIpData: unknown first address in '"<pos:position pos:line="232" pos:column="69"/></literal> <operator pos:line="232" pos:column="70">&lt;&lt;<pos:position pos:line="232" pos:column="78"/></operator> <name pos:line="232" pos:column="73">t<pos:position pos:line="232" pos:column="74"/></name> <operator pos:line="232" pos:column="75">&lt;&lt;<pos:position pos:line="232" pos:column="83"/></operator> <literal type="string" pos:line="232" pos:column="78">"'"<pos:position pos:line="232" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="232" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="83"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="233" pos:column="9">delete<pos:position pos:line="233" pos:column="15"/></operator> <name pos:line="233" pos:column="16">q<pos:position pos:line="233" pos:column="17"/></name></expr>;<pos:position pos:line="233" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="234" pos:column="9">self_destruct<pos:position pos:line="234" pos:column="22"/></name><argument_list pos:line="234" pos:column="22">()<pos:position pos:line="234" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="234" pos:column="25"/></expr_stmt>
        <return pos:line="235" pos:column="9">return <expr><name pos:line="235" pos:column="16">NULL<pos:position pos:line="235" pos:column="20"/></name></expr>;<pos:position pos:line="235" pos:column="21"/></return>
    }<pos:position pos:line="236" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="238" pos:column="5">/* Decode addr2 */</comment>
    <if pos:line="239" pos:column="5">if <condition pos:line="239" pos:column="8">(<expr><operator pos:line="239" pos:column="9">!<pos:position pos:line="239" pos:column="10"/></operator><operator pos:line="239" pos:column="10">*<pos:position pos:line="239" pos:column="11"/></operator><name pos:line="239" pos:column="11">addr2<pos:position pos:line="239" pos:column="16"/></name></expr>)<pos:position pos:line="239" pos:column="17"/></condition><then pos:line="239" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="240" pos:column="9">q<pos:position pos:line="240" pos:column="10"/></name><operator pos:line="240" pos:column="10">-&gt;<pos:position pos:line="240" pos:column="15"/></operator><name pos:line="240" pos:column="12">addr2<pos:position pos:line="240" pos:column="17"/></name><operator pos:line="240" pos:column="17">.<pos:position pos:line="240" pos:column="18"/></operator><name pos:line="240" pos:column="18">SetAnyAddr<pos:position pos:line="240" pos:column="28"/></name></name><argument_list pos:line="240" pos:column="28">()<pos:position pos:line="240" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="240" pos:column="31"/></expr_stmt></block></then>
    <elseif pos:line="241" pos:column="5">else <if pos:line="241" pos:column="10">if <condition pos:line="241" pos:column="13">(<expr><operator pos:line="241" pos:column="14">!<pos:position pos:line="241" pos:column="15"/></operator><operator pos:line="241" pos:column="15">(<pos:position pos:line="241" pos:column="16"/></operator><name><name pos:line="241" pos:column="16">q<pos:position pos:line="241" pos:column="17"/></name><operator pos:line="241" pos:column="17">-&gt;<pos:position pos:line="241" pos:column="22"/></operator><name pos:line="241" pos:column="19">addr2<pos:position pos:line="241" pos:column="24"/></name></name><operator pos:line="241" pos:column="24">=<pos:position pos:line="241" pos:column="25"/></operator><name pos:line="241" pos:column="25">addr2<pos:position pos:line="241" pos:column="30"/></name><operator pos:line="241" pos:column="30">)<pos:position pos:line="241" pos:column="31"/></operator></expr> )<pos:position pos:line="241" pos:column="33"/></condition><then pos:line="241" pos:column="33"> <block pos:line="241" pos:column="34">{
        <expr_stmt><expr><call><name pos:line="242" pos:column="9">debugs<pos:position pos:line="242" pos:column="15"/></name><argument_list pos:line="242" pos:column="15">(<argument><expr><literal type="number" pos:line="242" pos:column="16">28<pos:position pos:line="242" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="242" pos:column="20">0<pos:position pos:line="242" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="242" pos:column="23">"aclIpParseIpData: unknown second address in '"<pos:position pos:line="242" pos:column="70"/></literal> <operator pos:line="242" pos:column="71">&lt;&lt;<pos:position pos:line="242" pos:column="79"/></operator> <name pos:line="242" pos:column="74">t<pos:position pos:line="242" pos:column="75"/></name> <operator pos:line="242" pos:column="76">&lt;&lt;<pos:position pos:line="242" pos:column="84"/></operator> <literal type="string" pos:line="242" pos:column="79">"'"<pos:position pos:line="242" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="242" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="243" pos:column="9">delete<pos:position pos:line="243" pos:column="15"/></operator> <name pos:line="243" pos:column="16">q<pos:position pos:line="243" pos:column="17"/></name></expr>;<pos:position pos:line="243" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="244" pos:column="9">self_destruct<pos:position pos:line="244" pos:column="22"/></name><argument_list pos:line="244" pos:column="22">()<pos:position pos:line="244" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="244" pos:column="25"/></expr_stmt>
        <return pos:line="245" pos:column="9">return <expr><name pos:line="245" pos:column="16">NULL<pos:position pos:line="245" pos:column="20"/></name></expr>;<pos:position pos:line="245" pos:column="21"/></return>
    }<pos:position pos:line="246" pos:column="6"/></block></then></if></elseif></if>

    <comment type="block" pos:line="248" pos:column="5">/* Decode mask (NULL or empty means a exact host mask) */</comment>
    <if pos:line="249" pos:column="5">if <condition pos:line="249" pos:column="8">(<expr><operator pos:line="249" pos:column="9">!<pos:position pos:line="249" pos:column="10"/></operator><call><name pos:line="249" pos:column="10">DecodeMask<pos:position pos:line="249" pos:column="20"/></name><argument_list pos:line="249" pos:column="20">(<argument><expr><name pos:line="249" pos:column="21">mask<pos:position pos:line="249" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="249" pos:column="27">q<pos:position pos:line="249" pos:column="28"/></name><operator pos:line="249" pos:column="28">-&gt;<pos:position pos:line="249" pos:column="33"/></operator><name pos:line="249" pos:column="30">mask<pos:position pos:line="249" pos:column="34"/></name></name></expr></argument>, <argument><expr><name pos:line="249" pos:column="36">iptype<pos:position pos:line="249" pos:column="42"/></name></expr></argument>)<pos:position pos:line="249" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="249" pos:column="44"/></condition><then pos:line="249" pos:column="44"> <block pos:line="249" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="250" pos:column="9">debugs<pos:position pos:line="250" pos:column="15"/></name><argument_list pos:line="250" pos:column="15">(<argument><expr><literal type="number" pos:line="250" pos:column="16">28<pos:position pos:line="250" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="250" pos:column="20">0<pos:position pos:line="250" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="250" pos:column="23">"aclParseIpData: unknown netmask '"<pos:position pos:line="250" pos:column="58"/></literal> <operator pos:line="250" pos:column="59">&lt;&lt;<pos:position pos:line="250" pos:column="67"/></operator> <name pos:line="250" pos:column="62">mask<pos:position pos:line="250" pos:column="66"/></name> <operator pos:line="250" pos:column="67">&lt;&lt;<pos:position pos:line="250" pos:column="75"/></operator> <literal type="string" pos:line="250" pos:column="70">"' in '"<pos:position pos:line="250" pos:column="78"/></literal> <operator pos:line="250" pos:column="79">&lt;&lt;<pos:position pos:line="250" pos:column="87"/></operator> <name pos:line="250" pos:column="82">t<pos:position pos:line="250" pos:column="83"/></name> <operator pos:line="250" pos:column="84">&lt;&lt;<pos:position pos:line="250" pos:column="92"/></operator> <literal type="string" pos:line="250" pos:column="87">"'"<pos:position pos:line="250" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="250" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="250" pos:column="92"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="251" pos:column="9">delete<pos:position pos:line="251" pos:column="15"/></operator> <name pos:line="251" pos:column="16">q<pos:position pos:line="251" pos:column="17"/></name></expr>;<pos:position pos:line="251" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="252" pos:column="9">self_destruct<pos:position pos:line="252" pos:column="22"/></name><argument_list pos:line="252" pos:column="22">()<pos:position pos:line="252" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="252" pos:column="25"/></expr_stmt>
        <return pos:line="253" pos:column="9">return <expr><name pos:line="253" pos:column="16">NULL<pos:position pos:line="253" pos:column="20"/></name></expr>;<pos:position pos:line="253" pos:column="21"/></return>
    }<pos:position pos:line="254" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="256" pos:column="5">changed<pos:position pos:line="256" pos:column="12"/></name> <operator pos:line="256" pos:column="13">=<pos:position pos:line="256" pos:column="14"/></operator> <literal type="number" pos:line="256" pos:column="15">0<pos:position pos:line="256" pos:column="16"/></literal></expr>;<pos:position pos:line="256" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="257" pos:column="5">changed<pos:position pos:line="257" pos:column="12"/></name> <operator pos:line="257" pos:column="13">+=<pos:position pos:line="257" pos:column="15"/></operator> <call><name><name pos:line="257" pos:column="16">q<pos:position pos:line="257" pos:column="17"/></name><operator pos:line="257" pos:column="17">-&gt;<pos:position pos:line="257" pos:column="22"/></operator><name pos:line="257" pos:column="19">addr1<pos:position pos:line="257" pos:column="24"/></name><operator pos:line="257" pos:column="24">.<pos:position pos:line="257" pos:column="25"/></operator><name pos:line="257" pos:column="25">ApplyMask<pos:position pos:line="257" pos:column="34"/></name></name><argument_list pos:line="257" pos:column="34">(<argument><expr><name><name pos:line="257" pos:column="35">q<pos:position pos:line="257" pos:column="36"/></name><operator pos:line="257" pos:column="36">-&gt;<pos:position pos:line="257" pos:column="41"/></operator><name pos:line="257" pos:column="38">mask<pos:position pos:line="257" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="257" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="258" pos:column="5">changed<pos:position pos:line="258" pos:column="12"/></name> <operator pos:line="258" pos:column="13">+=<pos:position pos:line="258" pos:column="15"/></operator> <call><name><name pos:line="258" pos:column="16">q<pos:position pos:line="258" pos:column="17"/></name><operator pos:line="258" pos:column="17">-&gt;<pos:position pos:line="258" pos:column="22"/></operator><name pos:line="258" pos:column="19">addr2<pos:position pos:line="258" pos:column="24"/></name><operator pos:line="258" pos:column="24">.<pos:position pos:line="258" pos:column="25"/></operator><name pos:line="258" pos:column="25">ApplyMask<pos:position pos:line="258" pos:column="34"/></name></name><argument_list pos:line="258" pos:column="34">(<argument><expr><name><name pos:line="258" pos:column="35">q<pos:position pos:line="258" pos:column="36"/></name><operator pos:line="258" pos:column="36">-&gt;<pos:position pos:line="258" pos:column="41"/></operator><name pos:line="258" pos:column="38">mask<pos:position pos:line="258" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="258" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="258" pos:column="44"/></expr_stmt>

    <if pos:line="260" pos:column="5">if <condition pos:line="260" pos:column="8">(<expr><name pos:line="260" pos:column="9">changed<pos:position pos:line="260" pos:column="16"/></name></expr>)<pos:position pos:line="260" pos:column="17"/></condition><then pos:line="260" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="261" pos:column="9">debugs<pos:position pos:line="261" pos:column="15"/></name><argument_list pos:line="261" pos:column="15">(<argument><expr><literal type="number" pos:line="261" pos:column="16">28<pos:position pos:line="261" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="261" pos:column="20">0<pos:position pos:line="261" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="261" pos:column="23">"aclIpParseIpData: WARNING: Netmask masks away part of the specified IP in '"<pos:position pos:line="261" pos:column="100"/></literal> <operator pos:line="261" pos:column="101">&lt;&lt;<pos:position pos:line="261" pos:column="109"/></operator> <name pos:line="261" pos:column="104">t<pos:position pos:line="261" pos:column="105"/></name> <operator pos:line="261" pos:column="106">&lt;&lt;<pos:position pos:line="261" pos:column="114"/></operator> <literal type="string" pos:line="261" pos:column="109">"'"<pos:position pos:line="261" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="261" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="261" pos:column="114"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="263" pos:column="5">debugs<pos:position pos:line="263" pos:column="11"/></name><argument_list pos:line="263" pos:column="11">(<argument><expr><literal type="number" pos:line="263" pos:column="12">28<pos:position pos:line="263" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="263" pos:column="15">9<pos:position pos:line="263" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="263" pos:column="18">HERE<pos:position pos:line="263" pos:column="22"/></name> <operator pos:line="263" pos:column="23">&lt;&lt;<pos:position pos:line="263" pos:column="31"/></operator> <literal type="string" pos:line="263" pos:column="26">"Parsed: "<pos:position pos:line="263" pos:column="36"/></literal> <operator pos:line="263" pos:column="37">&lt;&lt;<pos:position pos:line="263" pos:column="45"/></operator> <name><name pos:line="263" pos:column="40">q<pos:position pos:line="263" pos:column="41"/></name><operator pos:line="263" pos:column="41">-&gt;<pos:position pos:line="263" pos:column="46"/></operator><name pos:line="263" pos:column="43">addr1<pos:position pos:line="263" pos:column="48"/></name></name> <operator pos:line="263" pos:column="49">&lt;&lt;<pos:position pos:line="263" pos:column="57"/></operator> <literal type="string" pos:line="263" pos:column="52">"-"<pos:position pos:line="263" pos:column="55"/></literal> <operator pos:line="263" pos:column="56">&lt;&lt;<pos:position pos:line="263" pos:column="64"/></operator> <name><name pos:line="263" pos:column="59">q<pos:position pos:line="263" pos:column="60"/></name><operator pos:line="263" pos:column="60">-&gt;<pos:position pos:line="263" pos:column="65"/></operator><name pos:line="263" pos:column="62">addr2<pos:position pos:line="263" pos:column="67"/></name></name> <operator pos:line="263" pos:column="68">&lt;&lt;<pos:position pos:line="263" pos:column="76"/></operator> <literal type="string" pos:line="263" pos:column="71">"/"<pos:position pos:line="263" pos:column="74"/></literal> <operator pos:line="263" pos:column="75">&lt;&lt;<pos:position pos:line="263" pos:column="83"/></operator> <name><name pos:line="263" pos:column="78">q<pos:position pos:line="263" pos:column="79"/></name><operator pos:line="263" pos:column="79">-&gt;<pos:position pos:line="263" pos:column="84"/></operator><name pos:line="263" pos:column="81">mask<pos:position pos:line="263" pos:column="85"/></name></name> <operator pos:line="263" pos:column="86">&lt;&lt;<pos:position pos:line="263" pos:column="94"/></operator> <literal type="string" pos:line="263" pos:column="89">"(/"<pos:position pos:line="263" pos:column="93"/></literal> <operator pos:line="263" pos:column="94">&lt;&lt;<pos:position pos:line="263" pos:column="102"/></operator> <call><name><name pos:line="263" pos:column="97">q<pos:position pos:line="263" pos:column="98"/></name><operator pos:line="263" pos:column="98">-&gt;<pos:position pos:line="263" pos:column="103"/></operator><name pos:line="263" pos:column="100">mask<pos:position pos:line="263" pos:column="104"/></name><operator pos:line="263" pos:column="104">.<pos:position pos:line="263" pos:column="105"/></operator><name pos:line="263" pos:column="105">GetCIDR<pos:position pos:line="263" pos:column="112"/></name></name><argument_list pos:line="263" pos:column="112">()<pos:position pos:line="263" pos:column="114"/></argument_list></call> <operator pos:line="263" pos:column="115">&lt;&lt;<pos:position pos:line="263" pos:column="123"/></operator><literal type="string" pos:line="263" pos:column="117">")"<pos:position pos:line="263" pos:column="120"/></literal></expr></argument>)<pos:position pos:line="263" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="263" pos:column="122"/></expr_stmt>

    <comment type="block" pos:line="265" pos:column="5">/* 1.2.3.4/255.255.255.0  --&gt; 1.2.3.0 */</comment>
    <comment type="block" pos:line="266" pos:column="5">/* Same as IPv6 (not so trivial to depict) */</comment>
    <return pos:line="267" pos:column="5">return <expr><name pos:line="267" pos:column="12">q<pos:position pos:line="267" pos:column="13"/></name></expr>;<pos:position pos:line="267" pos:column="14"/></return>
}<pos:position pos:line="268" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_978_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">GetHostWithPort<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">token<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="30">Ip<pos:position pos:line="2" pos:column="32"/></name><operator pos:line="2" pos:column="32">::<pos:position pos:line="2" pos:column="34"/></operator><name pos:line="2" pos:column="34">Address<pos:position pos:line="2" pos:column="41"/></name></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">ipa<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">t<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">host<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">tmp<pos:position pos:line="6" pos:column="14"/></name></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">short<pos:position pos:line="7" pos:column="19"/></name></type> <name pos:line="7" pos:column="20">port<pos:position pos:line="7" pos:column="24"/></name></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>

    <expr_stmt><expr><name pos:line="9" pos:column="5">host<pos:position pos:line="9" pos:column="9"/></name> <operator pos:line="9" pos:column="10">=<pos:position pos:line="9" pos:column="11"/></operator> <name pos:line="9" pos:column="12">NULL<pos:position pos:line="9" pos:column="16"/></name></expr>;<pos:position pos:line="9" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">port<pos:position pos:line="10" pos:column="9"/></name> <operator pos:line="10" pos:column="10">=<pos:position pos:line="10" pos:column="11"/></operator> <literal type="number" pos:line="10" pos:column="12">0<pos:position pos:line="10" pos:column="13"/></literal></expr>;<pos:position pos:line="10" pos:column="14"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">*<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">token<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">==<pos:position pos:line="12" pos:column="18"/></operator> <literal type="char" pos:line="12" pos:column="19">'['<pos:position pos:line="12" pos:column="22"/></literal></expr>)<pos:position pos:line="12" pos:column="23"/></condition><then pos:line="12" pos:column="23"> <block pos:line="12" pos:column="24">{
        <comment type="block" pos:line="13" pos:column="9">/* [host]:port */</comment>
        <expr_stmt><expr><name pos:line="14" pos:column="9">host<pos:position pos:line="14" pos:column="13"/></name> <operator pos:line="14" pos:column="14">=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">token<pos:position pos:line="14" pos:column="21"/></name> <operator pos:line="14" pos:column="22">+<pos:position pos:line="14" pos:column="23"/></operator> <literal type="number" pos:line="14" pos:column="24">1<pos:position pos:line="14" pos:column="25"/></literal></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">t<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <call><name pos:line="15" pos:column="13">strchr<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">host<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="26">']'<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">t<pos:position pos:line="16" pos:column="15"/></name></expr>)<pos:position pos:line="16" pos:column="16"/></condition><then pos:line="16" pos:column="16">
            <block type="pseudo"><return pos:line="17" pos:column="13">return <expr><literal type="boolean" pos:line="17" pos:column="20">false<pos:position pos:line="17" pos:column="25"/></literal></expr>;<pos:position pos:line="17" pos:column="26"/></return></block></then></if>
        <expr_stmt><expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">t<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <literal type="char" pos:line="18" pos:column="14">'\0'<pos:position pos:line="18" pos:column="18"/></literal></expr>;<pos:position pos:line="18" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="19" pos:column="9">++<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">t<pos:position pos:line="19" pos:column="12"/></name></expr>;<pos:position pos:line="19" pos:column="13"/></expr_stmt>
        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><operator pos:line="20" pos:column="13">*<pos:position pos:line="20" pos:column="14"/></operator><name pos:line="20" pos:column="14">t<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">!=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="char" pos:line="20" pos:column="19">':'<pos:position pos:line="20" pos:column="22"/></literal></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23">
            <block type="pseudo"><return pos:line="21" pos:column="13">return <expr><literal type="boolean" pos:line="21" pos:column="20">false<pos:position pos:line="21" pos:column="25"/></literal></expr>;<pos:position pos:line="21" pos:column="26"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="22" pos:column="9">port<pos:position pos:line="22" pos:column="13"/></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <call><name pos:line="22" pos:column="16">xatos<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">t<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">+<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="26">1<pos:position pos:line="22" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then> <elseif pos:line="23" pos:column="7">else <if pos:line="23" pos:column="12">if <condition pos:line="23" pos:column="15">(<expr><operator pos:line="23" pos:column="16">(<pos:position pos:line="23" pos:column="17"/></operator><name pos:line="23" pos:column="17">t<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <call><name pos:line="23" pos:column="21">strchr<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><name pos:line="23" pos:column="28">token<pos:position pos:line="23" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="23" pos:column="35">':'<pos:position pos:line="23" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="39"/></argument_list></call><operator pos:line="23" pos:column="39">)<pos:position pos:line="23" pos:column="40"/></operator></expr>)<pos:position pos:line="23" pos:column="41"/></condition><then pos:line="23" pos:column="41"> <block pos:line="23" pos:column="42">{
        <comment type="block" pos:line="24" pos:column="9">/* host:port */</comment>
        <expr_stmt><expr><name pos:line="25" pos:column="9">host<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">token<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">t<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <literal type="char" pos:line="26" pos:column="14">'\0'<pos:position pos:line="26" pos:column="18"/></literal></expr>;<pos:position pos:line="26" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">port<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">xatos<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">t<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">+<pos:position pos:line="27" pos:column="25"/></operator> <literal type="number" pos:line="27" pos:column="26">1<pos:position pos:line="27" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="29"/></expr_stmt>

        <if pos:line="29" pos:column="9">if <condition pos:line="29" pos:column="12">(<expr><literal type="number" pos:line="29" pos:column="13">0<pos:position pos:line="29" pos:column="14"/></literal> <operator pos:line="29" pos:column="15">==<pos:position pos:line="29" pos:column="17"/></operator> <name pos:line="29" pos:column="18">port<pos:position pos:line="29" pos:column="22"/></name></expr>)<pos:position pos:line="29" pos:column="23"/></condition><then pos:line="29" pos:column="23">
            <block type="pseudo"><return pos:line="30" pos:column="13">return <expr><literal type="boolean" pos:line="30" pos:column="20">false<pos:position pos:line="30" pos:column="25"/></literal></expr>;<pos:position pos:line="30" pos:column="26"/></return></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if></elseif> <elseif pos:line="31" pos:column="7">else <if pos:line="31" pos:column="12">if <condition pos:line="31" pos:column="15">(<expr><call><name pos:line="31" pos:column="16">strtol<pos:position pos:line="31" pos:column="22"/></name><argument_list pos:line="31" pos:column="22">(<argument><expr><name pos:line="31" pos:column="23">token<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><operator pos:line="31" pos:column="30">&amp;<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="31">tmp<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="36">10<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call> <operator pos:line="31" pos:column="40">&amp;&amp;<pos:position pos:line="31" pos:column="50"/></operator> <operator pos:line="31" pos:column="43">!<pos:position pos:line="31" pos:column="44"/></operator><operator pos:line="31" pos:column="44">*<pos:position pos:line="31" pos:column="45"/></operator><name pos:line="31" pos:column="45">tmp<pos:position pos:line="31" pos:column="48"/></name></expr>)<pos:position pos:line="31" pos:column="49"/></condition><then pos:line="31" pos:column="49"> <block pos:line="31" pos:column="50">{
        <expr_stmt><expr><name pos:line="32" pos:column="9">port<pos:position pos:line="32" pos:column="13"/></name> <operator pos:line="32" pos:column="14">=<pos:position pos:line="32" pos:column="15"/></operator> <call><name pos:line="32" pos:column="16">xatos<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">token<pos:position pos:line="32" pos:column="27"/></name></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if></elseif> <else pos:line="33" pos:column="7">else <block pos:line="33" pos:column="12">{
        <expr_stmt><expr><name pos:line="34" pos:column="9">host<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">=<pos:position pos:line="34" pos:column="15"/></operator> <name pos:line="34" pos:column="16">token<pos:position pos:line="34" pos:column="21"/></name></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">port<pos:position pos:line="35" pos:column="13"/></name> <operator pos:line="35" pos:column="14">=<pos:position pos:line="35" pos:column="15"/></operator> <literal type="number" pos:line="35" pos:column="16">0<pos:position pos:line="35" pos:column="17"/></literal></expr>;<pos:position pos:line="35" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name pos:line="38" pos:column="9">NULL<pos:position pos:line="38" pos:column="13"/></name> <operator pos:line="38" pos:column="14">==<pos:position pos:line="38" pos:column="16"/></operator> <name pos:line="38" pos:column="17">host<pos:position pos:line="38" pos:column="21"/></name></expr>)<pos:position pos:line="38" pos:column="22"/></condition><then pos:line="38" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="39" pos:column="9">ipa<pos:position pos:line="39" pos:column="12"/></name><operator pos:line="39" pos:column="12">-&gt;<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="14">setAnyAddr<pos:position pos:line="39" pos:column="24"/></name></name><argument_list pos:line="39" pos:column="24">()<pos:position pos:line="39" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="27"/></expr_stmt></block></then>
    <elseif pos:line="40" pos:column="5">else <if pos:line="40" pos:column="10">if <condition pos:line="40" pos:column="13">( <expr><call><name><name pos:line="40" pos:column="15">ipa<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">GetHostByName<pos:position pos:line="40" pos:column="33"/></name></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">host<pos:position pos:line="40" pos:column="38"/></name></expr></argument>)<pos:position pos:line="40" pos:column="39"/></argument_list></call></expr> )<pos:position pos:line="40" pos:column="41"/></condition><then pos:line="40" pos:column="41"> <comment type="block" pos:line="40" pos:column="42">/* dont use ipcache. Accept either FQDN or IPA. */</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="41" pos:column="9">(<pos:position pos:line="41" pos:column="10"/></operator><name pos:line="41" pos:column="10">void<pos:position pos:line="41" pos:column="14"/></name><operator pos:line="41" pos:column="14">)<pos:position pos:line="41" pos:column="15"/></operator> <literal type="number" pos:line="41" pos:column="16">0<pos:position pos:line="41" pos:column="17"/></literal></expr>;<pos:position pos:line="41" pos:column="18"/></expr_stmt></block></then></if></elseif>
    <else pos:line="42" pos:column="5">else
        <block type="pseudo"><return pos:line="43" pos:column="9">return <expr><literal type="boolean" pos:line="43" pos:column="16">false<pos:position pos:line="43" pos:column="21"/></literal></expr>;<pos:position pos:line="43" pos:column="22"/></return></block></else></if>

    <comment type="block" pos:line="45" pos:column="5">/* port MUST be set after the IPA lookup/conversion is performed. */</comment>
    <expr_stmt><expr><call><name><name pos:line="46" pos:column="5">ipa<pos:position pos:line="46" pos:column="8"/></name><operator pos:line="46" pos:column="8">-&gt;<pos:position pos:line="46" pos:column="13"/></operator><name pos:line="46" pos:column="10">port<pos:position pos:line="46" pos:column="14"/></name></name><argument_list pos:line="46" pos:column="14">(<argument><expr><name pos:line="46" pos:column="15">port<pos:position pos:line="46" pos:column="19"/></name></expr></argument>)<pos:position pos:line="46" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="21"/></expr_stmt>

    <return pos:line="48" pos:column="5">return <expr><literal type="boolean" pos:line="48" pos:column="12">true<pos:position pos:line="48" pos:column="16"/></literal></expr>;<pos:position pos:line="48" pos:column="17"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2666_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">DescriptorSet<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">pop<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><call><name pos:line="4" pos:column="13">empty<pos:position pos:line="4" pos:column="18"/></name><argument_list pos:line="4" pos:column="18">()<pos:position pos:line="4" pos:column="20"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="22"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">int<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">lastPos<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">=<expr><operator pos:line="5" pos:column="24">--<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">size_<pos:position pos:line="5" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">int<pos:position pos:line="6" pos:column="14"/></name></type> <name pos:line="6" pos:column="15">lastFd<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><name><name pos:line="6" pos:column="24">descriptors_<pos:position pos:line="6" pos:column="36"/></name><index pos:line="6" pos:column="36">[<expr><name pos:line="6" pos:column="37">lastPos<pos:position pos:line="6" pos:column="44"/></name></expr>]<pos:position pos:line="6" pos:column="45"/></index></name></expr></init></decl>;<pos:position pos:line="6" pos:column="46"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">0<pos:position pos:line="7" pos:column="13"/></literal> <operator pos:line="7" pos:column="14">&lt;=<pos:position pos:line="7" pos:column="19"/></operator> <name pos:line="7" pos:column="17">lastFd<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&amp;&amp;<pos:position pos:line="7" pos:column="34"/></operator> <name pos:line="7" pos:column="27">lastFd<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">&lt;<pos:position pos:line="7" pos:column="38"/></operator> <name pos:line="7" pos:column="36">capacity_<pos:position pos:line="7" pos:column="45"/></name></expr></argument>)<pos:position pos:line="7" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="47"/></expr_stmt>

    <comment type="line" pos:line="9" pos:column="5">// cleanup</comment>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">descriptors_<pos:position pos:line="10" pos:column="17"/></name><index pos:line="10" pos:column="17">[<expr><name pos:line="10" pos:column="18">lastPos<pos:position pos:line="10" pos:column="25"/></name></expr>]<pos:position pos:line="10" pos:column="26"/></index></name> <operator pos:line="10" pos:column="27">=<pos:position pos:line="10" pos:column="28"/></operator> <operator pos:line="10" pos:column="29">-<pos:position pos:line="10" pos:column="30"/></operator><literal type="number" pos:line="10" pos:column="30">1<pos:position pos:line="10" pos:column="31"/></literal></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">index_<pos:position pos:line="11" pos:column="11"/></name><index pos:line="11" pos:column="11">[<expr><name pos:line="11" pos:column="12">lastFd<pos:position pos:line="11" pos:column="18"/></name></expr>]<pos:position pos:line="11" pos:column="19"/></index></name> <operator pos:line="11" pos:column="20">=<pos:position pos:line="11" pos:column="21"/></operator> <operator pos:line="11" pos:column="22">-<pos:position pos:line="11" pos:column="23"/></operator><literal type="number" pos:line="11" pos:column="23">1<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>

    <return pos:line="13" pos:column="5">return <expr><name pos:line="13" pos:column="12">lastFd<pos:position pos:line="13" pos:column="18"/></name></expr>;<pos:position pos:line="13" pos:column="19"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

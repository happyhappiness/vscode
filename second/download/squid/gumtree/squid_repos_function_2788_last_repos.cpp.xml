<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2788_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">URL<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">parse<pos:position pos:line="2" pos:column="11"/></name></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">HttpRequestMethod<pos:position pos:line="2" pos:column="35"/></name><modifier pos:line="2" pos:column="35">&amp;<pos:position pos:line="2" pos:column="40"/></modifier></type> <name pos:line="2" pos:column="37">method<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">url<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">LOCAL_ARRAY<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">proto<pos:position pos:line="4" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="30">MAX_URL<pos:position pos:line="4" pos:column="37"/></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">LOCAL_ARRAY<pos:position pos:line="5" pos:column="16"/></name><argument_list pos:line="5" pos:column="16">(<argument><expr><name pos:line="5" pos:column="17">char<pos:position pos:line="5" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">login<pos:position pos:line="5" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="30">MAX_URL<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">LOCAL_ARRAY<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">(<argument><expr><name pos:line="6" pos:column="17">char<pos:position pos:line="6" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="23">foundHost<pos:position pos:line="6" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="34">MAX_URL<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">LOCAL_ARRAY<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">char<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">urlpath<pos:position pos:line="7" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="32">MAX_URL<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">t<pos:position pos:line="8" pos:column="12"/></name> <init pos:line="8" pos:column="13">= <expr><name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">q<pos:position pos:line="9" pos:column="12"/></name> <init pos:line="9" pos:column="13">= <expr><name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">foundPort<pos:position pos:line="10" pos:column="18"/></name></decl>;<pos:position pos:line="10" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">AnyP<pos:position pos:line="11" pos:column="9"/></name><operator pos:line="11" pos:column="9">::<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">ProtocolType<pos:position pos:line="11" pos:column="23"/></name></name></type> <name pos:line="11" pos:column="24">protocol<pos:position pos:line="11" pos:column="32"/></name> <init pos:line="11" pos:column="33">= <expr><name><name pos:line="11" pos:column="35">AnyP<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">::<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">PROTO_NONE<pos:position pos:line="11" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="11" pos:column="52"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">l<pos:position pos:line="12" pos:column="10"/></name></decl>;<pos:position pos:line="12" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">i<pos:position pos:line="13" pos:column="10"/></name></decl>;<pos:position pos:line="13" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">char<pos:position pos:line="14" pos:column="15"/></name> <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier></type><name pos:line="14" pos:column="17">src<pos:position pos:line="14" pos:column="20"/></name></decl>;<pos:position pos:line="14" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name> <modifier pos:line="15" pos:column="10">*<pos:position pos:line="15" pos:column="11"/></modifier></type><name pos:line="15" pos:column="11">dst<pos:position pos:line="15" pos:column="14"/></name></decl>;<pos:position pos:line="15" pos:column="15"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">proto<pos:position pos:line="16" pos:column="10"/></name><index pos:line="16" pos:column="10">[<expr><literal type="number" pos:line="16" pos:column="11">0<pos:position pos:line="16" pos:column="12"/></literal></expr>]<pos:position pos:line="16" pos:column="13"/></index></name> <operator pos:line="16" pos:column="14">=<pos:position pos:line="16" pos:column="15"/></operator> <name><name pos:line="16" pos:column="16">foundHost<pos:position pos:line="16" pos:column="25"/></name><index pos:line="16" pos:column="25">[<expr><literal type="number" pos:line="16" pos:column="26">0<pos:position pos:line="16" pos:column="27"/></literal></expr>]<pos:position pos:line="16" pos:column="28"/></index></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <name><name pos:line="16" pos:column="31">urlpath<pos:position pos:line="16" pos:column="38"/></name><index pos:line="16" pos:column="38">[<expr><literal type="number" pos:line="16" pos:column="39">0<pos:position pos:line="16" pos:column="40"/></literal></expr>]<pos:position pos:line="16" pos:column="41"/></index></name> <operator pos:line="16" pos:column="42">=<pos:position pos:line="16" pos:column="43"/></operator> <name><name pos:line="16" pos:column="44">login<pos:position pos:line="16" pos:column="49"/></name><index pos:line="16" pos:column="49">[<expr><literal type="number" pos:line="16" pos:column="50">0<pos:position pos:line="16" pos:column="51"/></literal></expr>]<pos:position pos:line="16" pos:column="52"/></index></name> <operator pos:line="16" pos:column="53">=<pos:position pos:line="16" pos:column="54"/></operator> <literal type="char" pos:line="16" pos:column="55">'\0'<pos:position pos:line="16" pos:column="59"/></literal></expr>;<pos:position pos:line="16" pos:column="60"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">(<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">l<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">=<pos:position pos:line="18" pos:column="13"/></operator> <call><name pos:line="18" pos:column="14">strlen<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">url<pos:position pos:line="18" pos:column="24"/></name></expr></argument>)<pos:position pos:line="18" pos:column="25"/></argument_list></call><operator pos:line="18" pos:column="25">)<pos:position pos:line="18" pos:column="26"/></operator> <operator pos:line="18" pos:column="27">+<pos:position pos:line="18" pos:column="28"/></operator> <name><name pos:line="18" pos:column="29">Config<pos:position pos:line="18" pos:column="35"/></name><operator pos:line="18" pos:column="35">.<pos:position pos:line="18" pos:column="36"/></operator><name pos:line="18" pos:column="36">appendDomainLen<pos:position pos:line="18" pos:column="51"/></name></name> <operator pos:line="18" pos:column="52">&gt;<pos:position pos:line="18" pos:column="56"/></operator> <operator pos:line="18" pos:column="54">(<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="55">MAX_URL<pos:position pos:line="18" pos:column="62"/></name> <operator pos:line="18" pos:column="63">-<pos:position pos:line="18" pos:column="64"/></operator> <literal type="number" pos:line="18" pos:column="65">1<pos:position pos:line="18" pos:column="66"/></literal><operator pos:line="18" pos:column="66">)<pos:position pos:line="18" pos:column="67"/></operator></expr>)<pos:position pos:line="18" pos:column="68"/></condition><then pos:line="18" pos:column="68"> <block pos:line="18" pos:column="69">{
        <comment type="block" pos:line="19" pos:column="9">/* terminate so it doesn't overflow other buffers */</comment>
        <expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><operator pos:line="20" pos:column="10">(<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">url<pos:position pos:line="20" pos:column="14"/></name> <operator pos:line="20" pos:column="15">+<pos:position pos:line="20" pos:column="16"/></operator> <operator pos:line="20" pos:column="17">(<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">MAX_URL<pos:position pos:line="20" pos:column="25"/></name> <operator pos:line="20" pos:column="26">&gt;&gt;<pos:position pos:line="20" pos:column="31"/></operator> <literal type="number" pos:line="20" pos:column="29">1<pos:position pos:line="20" pos:column="30"/></literal><operator pos:line="20" pos:column="30">)<pos:position pos:line="20" pos:column="31"/></operator><operator pos:line="20" pos:column="31">)<pos:position pos:line="20" pos:column="32"/></operator> <operator pos:line="20" pos:column="33">=<pos:position pos:line="20" pos:column="34"/></operator> <literal type="char" pos:line="20" pos:column="35">'\0'<pos:position pos:line="20" pos:column="39"/></literal></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">23<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="20">DBG_IMPORTANT<pos:position pos:line="21" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="35">MYNAME<pos:position pos:line="21" pos:column="41"/></name> <operator pos:line="21" pos:column="42">&lt;&lt;<pos:position pos:line="21" pos:column="50"/></operator> <literal type="string" pos:line="21" pos:column="45">"URL too large ("<pos:position pos:line="21" pos:column="62"/></literal> <operator pos:line="21" pos:column="63">&lt;&lt;<pos:position pos:line="21" pos:column="71"/></operator> <name pos:line="21" pos:column="66">l<pos:position pos:line="21" pos:column="67"/></name> <operator pos:line="21" pos:column="68">&lt;&lt;<pos:position pos:line="21" pos:column="76"/></operator> <literal type="string" pos:line="21" pos:column="71">" bytes)"<pos:position pos:line="21" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="82"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><literal type="boolean" pos:line="22" pos:column="16">false<pos:position pos:line="22" pos:column="21"/></literal></expr>;<pos:position pos:line="22" pos:column="22"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">method<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">==<pos:position pos:line="24" pos:column="18"/></operator> <name><name pos:line="24" pos:column="19">Http<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">::<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">METHOD_CONNECT<pos:position pos:line="24" pos:column="39"/></name></name></expr>)<pos:position pos:line="24" pos:column="40"/></condition><then pos:line="24" pos:column="40"> <block pos:line="24" pos:column="41">{
        <comment type="block" pos:line="25" pos:column="9">/*
         * RFC 7230 section 5.3.3:  authority-form = authority
         *  "excluding any userinfo and its "@" delimiter"
         *
         * RFC 3986 section 3.2:    authority = [ userinfo "@" ] host [ ":" port ]
         *
         * As an HTTP(S) proxy we assume HTTPS (443) if no port provided.
         */</comment>
        <expr_stmt><expr><name pos:line="33" pos:column="9">foundPort<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <literal type="number" pos:line="33" pos:column="21">443<pos:position pos:line="33" pos:column="24"/></literal></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><call><name pos:line="35" pos:column="13">sscanf<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><name pos:line="35" pos:column="20">url<pos:position pos:line="35" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="25">"[%[^]]]:%d"<pos:position pos:line="35" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="39">foundHost<pos:position pos:line="35" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="50">&amp;<pos:position pos:line="35" pos:column="55"/></operator><name pos:line="35" pos:column="51">foundPort<pos:position pos:line="35" pos:column="60"/></name></expr></argument>)<pos:position pos:line="35" pos:column="61"/></argument_list></call> <operator pos:line="35" pos:column="62">&lt;<pos:position pos:line="35" pos:column="66"/></operator> <literal type="number" pos:line="35" pos:column="64">1<pos:position pos:line="35" pos:column="65"/></literal></expr>)<pos:position pos:line="35" pos:column="66"/></condition><then pos:line="35" pos:column="66">
            <block type="pseudo"><if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><call><name pos:line="36" pos:column="17">sscanf<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">url<pos:position pos:line="36" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="29">"%[^:]:%d"<pos:position pos:line="36" pos:column="39"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="41">foundHost<pos:position pos:line="36" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="36" pos:column="52">&amp;<pos:position pos:line="36" pos:column="57"/></operator><name pos:line="36" pos:column="53">foundPort<pos:position pos:line="36" pos:column="62"/></name></expr></argument>)<pos:position pos:line="36" pos:column="63"/></argument_list></call> <operator pos:line="36" pos:column="64">&lt;<pos:position pos:line="36" pos:column="68"/></operator> <literal type="number" pos:line="36" pos:column="66">1<pos:position pos:line="36" pos:column="67"/></literal></expr>)<pos:position pos:line="36" pos:column="68"/></condition><then pos:line="36" pos:column="68">
                <block type="pseudo"><return pos:line="37" pos:column="17">return <expr><literal type="boolean" pos:line="37" pos:column="24">false<pos:position pos:line="37" pos:column="29"/></literal></expr>;<pos:position pos:line="37" pos:column="30"/></return></block></then></if></block></then></if>

    }<pos:position pos:line="39" pos:column="6"/></block></then> <elseif pos:line="39" pos:column="7">else <if pos:line="39" pos:column="12">if <condition pos:line="39" pos:column="15">(<expr><operator pos:line="39" pos:column="16">(<pos:position pos:line="39" pos:column="17"/></operator><name pos:line="39" pos:column="17">method<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">==<pos:position pos:line="39" pos:column="26"/></operator> <name><name pos:line="39" pos:column="27">Http<pos:position pos:line="39" pos:column="31"/></name><operator pos:line="39" pos:column="31">::<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="33">METHOD_OPTIONS<pos:position pos:line="39" pos:column="47"/></name></name> <operator pos:line="39" pos:column="48">||<pos:position pos:line="39" pos:column="50"/></operator> <name pos:line="39" pos:column="51">method<pos:position pos:line="39" pos:column="57"/></name> <operator pos:line="39" pos:column="58">==<pos:position pos:line="39" pos:column="60"/></operator> <name><name pos:line="39" pos:column="61">Http<pos:position pos:line="39" pos:column="65"/></name><operator pos:line="39" pos:column="65">::<pos:position pos:line="39" pos:column="67"/></operator><name pos:line="39" pos:column="67">METHOD_TRACE<pos:position pos:line="39" pos:column="79"/></name></name><operator pos:line="39" pos:column="79">)<pos:position pos:line="39" pos:column="80"/></operator> <operator pos:line="39" pos:column="81">&amp;&amp;<pos:position pos:line="39" pos:column="91"/></operator>
               <call><name><name pos:line="40" pos:column="16">URL<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">::<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">Asterisk<pos:position pos:line="40" pos:column="29"/></name></name><argument_list pos:line="40" pos:column="29">()<pos:position pos:line="40" pos:column="31"/></argument_list></call><operator pos:line="40" pos:column="31">.<pos:position pos:line="40" pos:column="32"/></operator><call><name pos:line="40" pos:column="32">cmp<pos:position pos:line="40" pos:column="35"/></name><argument_list pos:line="40" pos:column="35">(<argument><expr><name pos:line="40" pos:column="36">url<pos:position pos:line="40" pos:column="39"/></name></expr></argument>)<pos:position pos:line="40" pos:column="40"/></argument_list></call> <operator pos:line="40" pos:column="41">==<pos:position pos:line="40" pos:column="43"/></operator> <literal type="number" pos:line="40" pos:column="44">0<pos:position pos:line="40" pos:column="45"/></literal></expr>)<pos:position pos:line="40" pos:column="46"/></condition><then pos:line="40" pos:column="46"> <block pos:line="40" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">parseFinish<pos:position pos:line="41" pos:column="20"/></name><argument_list pos:line="41" pos:column="20">(<argument><expr><name><name pos:line="41" pos:column="21">AnyP<pos:position pos:line="41" pos:column="25"/></name><operator pos:line="41" pos:column="25">::<pos:position pos:line="41" pos:column="27"/></operator><name pos:line="41" pos:column="27">PROTO_HTTP<pos:position pos:line="41" pos:column="37"/></name></name></expr></argument>, <argument><expr><literal type="null" pos:line="41" pos:column="39">nullptr<pos:position pos:line="41" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="48">url<pos:position pos:line="41" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="53">foundHost<pos:position pos:line="41" pos:column="62"/></name></expr></argument>, <argument><expr><call><name pos:line="41" pos:column="64">SBuf<pos:position pos:line="41" pos:column="68"/></name><argument_list pos:line="41" pos:column="68">()<pos:position pos:line="41" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="72">80<pos:position pos:line="41" pos:column="74"/></literal></expr></argument> <comment type="block" pos:line="41" pos:column="75">/* HTTP default port */</comment>)<pos:position pos:line="41" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="100"/></expr_stmt>
        <return pos:line="42" pos:column="9">return <expr><literal type="boolean" pos:line="42" pos:column="16">true<pos:position pos:line="42" pos:column="20"/></literal></expr>;<pos:position pos:line="42" pos:column="21"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if></elseif> <elseif pos:line="43" pos:column="7">else <if pos:line="43" pos:column="12">if <condition pos:line="43" pos:column="15">(<expr><call><name pos:line="43" pos:column="16">strncmp<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">url<pos:position pos:line="43" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="29">"urn:"<pos:position pos:line="43" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="37">4<pos:position pos:line="43" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="39"/></argument_list></call> <operator pos:line="43" pos:column="40">==<pos:position pos:line="43" pos:column="42"/></operator> <literal type="number" pos:line="43" pos:column="43">0<pos:position pos:line="43" pos:column="44"/></literal></expr>)<pos:position pos:line="43" pos:column="45"/></condition><then pos:line="43" pos:column="45"> <block pos:line="43" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">debugs<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><literal type="number" pos:line="44" pos:column="16">23<pos:position pos:line="44" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="20">3<pos:position pos:line="44" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="23">"Split URI '"<pos:position pos:line="44" pos:column="36"/></literal> <operator pos:line="44" pos:column="37">&lt;&lt;<pos:position pos:line="44" pos:column="45"/></operator> <name pos:line="44" pos:column="40">url<pos:position pos:line="44" pos:column="43"/></name> <operator pos:line="44" pos:column="44">&lt;&lt;<pos:position pos:line="44" pos:column="52"/></operator> <literal type="string" pos:line="44" pos:column="47">"' into proto='urn', path='"<pos:position pos:line="44" pos:column="75"/></literal> <operator pos:line="44" pos:column="76">&lt;&lt;<pos:position pos:line="44" pos:column="84"/></operator> <operator pos:line="44" pos:column="79">(<pos:position pos:line="44" pos:column="80"/></operator><name pos:line="44" pos:column="80">url<pos:position pos:line="44" pos:column="83"/></name><operator pos:line="44" pos:column="83">+<pos:position pos:line="44" pos:column="84"/></operator><literal type="number" pos:line="44" pos:column="84">4<pos:position pos:line="44" pos:column="85"/></literal><operator pos:line="44" pos:column="85">)<pos:position pos:line="44" pos:column="86"/></operator> <operator pos:line="44" pos:column="87">&lt;&lt;<pos:position pos:line="44" pos:column="95"/></operator> <literal type="string" pos:line="44" pos:column="90">"'"<pos:position pos:line="44" pos:column="93"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="95"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">debugs<pos:position pos:line="45" pos:column="15"/></name><argument_list pos:line="45" pos:column="15">(<argument><expr><literal type="number" pos:line="45" pos:column="16">50<pos:position pos:line="45" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="20">5<pos:position pos:line="45" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="23">"urn="<pos:position pos:line="45" pos:column="29"/></literal> <operator pos:line="45" pos:column="30">&lt;&lt;<pos:position pos:line="45" pos:column="38"/></operator> <operator pos:line="45" pos:column="33">(<pos:position pos:line="45" pos:column="34"/></operator><name pos:line="45" pos:column="34">url<pos:position pos:line="45" pos:column="37"/></name><operator pos:line="45" pos:column="37">+<pos:position pos:line="45" pos:column="38"/></operator><literal type="number" pos:line="45" pos:column="38">4<pos:position pos:line="45" pos:column="39"/></literal><operator pos:line="45" pos:column="39">)<pos:position pos:line="45" pos:column="40"/></operator></expr></argument>)<pos:position pos:line="45" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">setScheme<pos:position pos:line="46" pos:column="18"/></name><argument_list pos:line="46" pos:column="18">(<argument><expr><name><name pos:line="46" pos:column="19">AnyP<pos:position pos:line="46" pos:column="23"/></name><operator pos:line="46" pos:column="23">::<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="25">PROTO_URN<pos:position pos:line="46" pos:column="34"/></name></name></expr></argument>, <argument><expr><literal type="null" pos:line="46" pos:column="36">nullptr<pos:position pos:line="46" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">path<pos:position pos:line="47" pos:column="13"/></name><argument_list pos:line="47" pos:column="13">(<argument><expr><name pos:line="47" pos:column="14">url<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">+<pos:position pos:line="47" pos:column="19"/></operator> <literal type="number" pos:line="47" pos:column="20">4<pos:position pos:line="47" pos:column="21"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>
        <return pos:line="48" pos:column="9">return <expr><literal type="boolean" pos:line="48" pos:column="16">true<pos:position pos:line="48" pos:column="20"/></literal></expr>;<pos:position pos:line="48" pos:column="21"/></return>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if></elseif> <else pos:line="49" pos:column="7">else <block pos:line="49" pos:column="12">{
        <comment type="block" pos:line="50" pos:column="9">/* Parse the URL: */</comment>
        <expr_stmt><expr><name pos:line="51" pos:column="9">src<pos:position pos:line="51" pos:column="12"/></name> <operator pos:line="51" pos:column="13">=<pos:position pos:line="51" pos:column="14"/></operator> <name pos:line="51" pos:column="15">url<pos:position pos:line="51" pos:column="18"/></name></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="52" pos:column="9">i<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">=<pos:position pos:line="52" pos:column="12"/></operator> <literal type="number" pos:line="52" pos:column="13">0<pos:position pos:line="52" pos:column="14"/></literal></expr>;<pos:position pos:line="52" pos:column="15"/></expr_stmt>
        <comment type="block" pos:line="53" pos:column="9">/* Find first : - everything before is protocol */</comment>
        <for pos:line="54" pos:column="9">for <control pos:line="54" pos:column="13">(<init><expr><name pos:line="54" pos:column="14">i<pos:position pos:line="54" pos:column="15"/></name> <operator pos:line="54" pos:column="16">=<pos:position pos:line="54" pos:column="17"/></operator> <literal type="number" pos:line="54" pos:column="18">0<pos:position pos:line="54" pos:column="19"/></literal></expr><operator pos:line="54" pos:column="19">,<pos:position pos:line="54" pos:column="20"/></operator> <expr><name pos:line="54" pos:column="21">dst<pos:position pos:line="54" pos:column="24"/></name> <operator pos:line="54" pos:column="25">=<pos:position pos:line="54" pos:column="26"/></operator> <name pos:line="54" pos:column="27">proto<pos:position pos:line="54" pos:column="32"/></name></expr>;<pos:position pos:line="54" pos:column="33"/></init> <condition><expr><name pos:line="54" pos:column="34">i<pos:position pos:line="54" pos:column="35"/></name> <operator pos:line="54" pos:column="36">&lt;<pos:position pos:line="54" pos:column="40"/></operator> <name pos:line="54" pos:column="38">l<pos:position pos:line="54" pos:column="39"/></name> <operator pos:line="54" pos:column="40">&amp;&amp;<pos:position pos:line="54" pos:column="50"/></operator> <operator pos:line="54" pos:column="43">*<pos:position pos:line="54" pos:column="44"/></operator><name pos:line="54" pos:column="44">src<pos:position pos:line="54" pos:column="47"/></name> <operator pos:line="54" pos:column="48">!=<pos:position pos:line="54" pos:column="50"/></operator> <literal type="char" pos:line="54" pos:column="51">':'<pos:position pos:line="54" pos:column="54"/></literal></expr>;<pos:position pos:line="54" pos:column="55"/></condition> <incr><expr><operator pos:line="54" pos:column="56">++<pos:position pos:line="54" pos:column="58"/></operator><name pos:line="54" pos:column="58">i<pos:position pos:line="54" pos:column="59"/></name></expr><operator pos:line="54" pos:column="59">,<pos:position pos:line="54" pos:column="60"/></operator> <expr><operator pos:line="54" pos:column="61">++<pos:position pos:line="54" pos:column="63"/></operator><name pos:line="54" pos:column="63">src<pos:position pos:line="54" pos:column="66"/></name></expr><operator pos:line="54" pos:column="66">,<pos:position pos:line="54" pos:column="67"/></operator> <expr><operator pos:line="54" pos:column="68">++<pos:position pos:line="54" pos:column="70"/></operator><name pos:line="54" pos:column="70">dst<pos:position pos:line="54" pos:column="73"/></name></expr></incr>)<pos:position pos:line="54" pos:column="74"/></control> <block pos:line="54" pos:column="75">{
            <expr_stmt><expr><operator pos:line="55" pos:column="13">*<pos:position pos:line="55" pos:column="14"/></operator><name pos:line="55" pos:column="14">dst<pos:position pos:line="55" pos:column="17"/></name> <operator pos:line="55" pos:column="18">=<pos:position pos:line="55" pos:column="19"/></operator> <operator pos:line="55" pos:column="20">*<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="21">src<pos:position pos:line="55" pos:column="24"/></name></expr>;<pos:position pos:line="55" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></for>
        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><name pos:line="57" pos:column="13">i<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">&gt;=<pos:position pos:line="57" pos:column="20"/></operator> <name pos:line="57" pos:column="18">l<pos:position pos:line="57" pos:column="19"/></name></expr>)<pos:position pos:line="57" pos:column="20"/></condition><then pos:line="57" pos:column="20">
            <block type="pseudo"><return pos:line="58" pos:column="13">return <expr><literal type="boolean" pos:line="58" pos:column="20">false<pos:position pos:line="58" pos:column="25"/></literal></expr>;<pos:position pos:line="58" pos:column="26"/></return></block></then></if>
        <expr_stmt><expr><operator pos:line="59" pos:column="9">*<pos:position pos:line="59" pos:column="10"/></operator><name pos:line="59" pos:column="10">dst<pos:position pos:line="59" pos:column="13"/></name> <operator pos:line="59" pos:column="14">=<pos:position pos:line="59" pos:column="15"/></operator> <literal type="char" pos:line="59" pos:column="16">'\0'<pos:position pos:line="59" pos:column="20"/></literal></expr>;<pos:position pos:line="59" pos:column="21"/></expr_stmt>

        <comment type="block" pos:line="61" pos:column="9">/* Then its :// */</comment>
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">(<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">i<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">+<pos:position pos:line="62" pos:column="16"/></operator><literal type="number" pos:line="62" pos:column="16">3<pos:position pos:line="62" pos:column="17"/></literal><operator pos:line="62" pos:column="17">)<pos:position pos:line="62" pos:column="18"/></operator> <operator pos:line="62" pos:column="19">&gt;<pos:position pos:line="62" pos:column="23"/></operator> <name pos:line="62" pos:column="21">l<pos:position pos:line="62" pos:column="22"/></name> <operator pos:line="62" pos:column="23">||<pos:position pos:line="62" pos:column="25"/></operator> <operator pos:line="62" pos:column="26">*<pos:position pos:line="62" pos:column="27"/></operator><name pos:line="62" pos:column="27">src<pos:position pos:line="62" pos:column="30"/></name> <operator pos:line="62" pos:column="31">!=<pos:position pos:line="62" pos:column="33"/></operator> <literal type="char" pos:line="62" pos:column="34">':'<pos:position pos:line="62" pos:column="37"/></literal> <operator pos:line="62" pos:column="38">||<pos:position pos:line="62" pos:column="40"/></operator> <operator pos:line="62" pos:column="41">*<pos:position pos:line="62" pos:column="42"/></operator><operator pos:line="62" pos:column="42">(<pos:position pos:line="62" pos:column="43"/></operator><name pos:line="62" pos:column="43">src<pos:position pos:line="62" pos:column="46"/></name> <operator pos:line="62" pos:column="47">+<pos:position pos:line="62" pos:column="48"/></operator> <literal type="number" pos:line="62" pos:column="49">1<pos:position pos:line="62" pos:column="50"/></literal><operator pos:line="62" pos:column="50">)<pos:position pos:line="62" pos:column="51"/></operator> <operator pos:line="62" pos:column="52">!=<pos:position pos:line="62" pos:column="54"/></operator> <literal type="char" pos:line="62" pos:column="55">'/'<pos:position pos:line="62" pos:column="58"/></literal> <operator pos:line="62" pos:column="59">||<pos:position pos:line="62" pos:column="61"/></operator> <operator pos:line="62" pos:column="62">*<pos:position pos:line="62" pos:column="63"/></operator><operator pos:line="62" pos:column="63">(<pos:position pos:line="62" pos:column="64"/></operator><name pos:line="62" pos:column="64">src<pos:position pos:line="62" pos:column="67"/></name> <operator pos:line="62" pos:column="68">+<pos:position pos:line="62" pos:column="69"/></operator> <literal type="number" pos:line="62" pos:column="70">2<pos:position pos:line="62" pos:column="71"/></literal><operator pos:line="62" pos:column="71">)<pos:position pos:line="62" pos:column="72"/></operator> <operator pos:line="62" pos:column="73">!=<pos:position pos:line="62" pos:column="75"/></operator> <literal type="char" pos:line="62" pos:column="76">'/'<pos:position pos:line="62" pos:column="79"/></literal></expr>)<pos:position pos:line="62" pos:column="80"/></condition><then pos:line="62" pos:column="80">
            <block type="pseudo"><return pos:line="63" pos:column="13">return <expr><literal type="boolean" pos:line="63" pos:column="20">false<pos:position pos:line="63" pos:column="25"/></literal></expr>;<pos:position pos:line="63" pos:column="26"/></return></block></then></if>
        <expr_stmt><expr><name pos:line="64" pos:column="9">i<pos:position pos:line="64" pos:column="10"/></name> <operator pos:line="64" pos:column="11">+=<pos:position pos:line="64" pos:column="13"/></operator> <literal type="number" pos:line="64" pos:column="14">3<pos:position pos:line="64" pos:column="15"/></literal></expr>;<pos:position pos:line="64" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="65" pos:column="9">src<pos:position pos:line="65" pos:column="12"/></name> <operator pos:line="65" pos:column="13">+=<pos:position pos:line="65" pos:column="15"/></operator> <literal type="number" pos:line="65" pos:column="16">3<pos:position pos:line="65" pos:column="17"/></literal></expr>;<pos:position pos:line="65" pos:column="18"/></expr_stmt>

        <comment type="block" pos:line="67" pos:column="9">/* Then everything until first /; thats host (and port; which we'll look for here later) */</comment>
        <comment type="line" pos:line="68" pos:column="9">// bug 1881: If we don't get a "/" then we imply it was there</comment>
        <comment type="line" pos:line="69" pos:column="9">// bug 3074: We could just be given a "?" or "#". These also imply "/"</comment>
        <comment type="line" pos:line="70" pos:column="9">// bug 3233: whitespace is also a hostname delimiter.</comment>
        <for pos:line="71" pos:column="9">for <control pos:line="71" pos:column="13">(<init><expr><name pos:line="71" pos:column="14">dst<pos:position pos:line="71" pos:column="17"/></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <name pos:line="71" pos:column="20">foundHost<pos:position pos:line="71" pos:column="29"/></name></expr>;<pos:position pos:line="71" pos:column="30"/></init> <condition><expr><name pos:line="71" pos:column="31">i<pos:position pos:line="71" pos:column="32"/></name> <operator pos:line="71" pos:column="33">&lt;<pos:position pos:line="71" pos:column="37"/></operator> <name pos:line="71" pos:column="35">l<pos:position pos:line="71" pos:column="36"/></name> <operator pos:line="71" pos:column="37">&amp;&amp;<pos:position pos:line="71" pos:column="47"/></operator> <operator pos:line="71" pos:column="40">*<pos:position pos:line="71" pos:column="41"/></operator><name pos:line="71" pos:column="41">src<pos:position pos:line="71" pos:column="44"/></name> <operator pos:line="71" pos:column="45">!=<pos:position pos:line="71" pos:column="47"/></operator> <literal type="char" pos:line="71" pos:column="48">'/'<pos:position pos:line="71" pos:column="51"/></literal> <operator pos:line="71" pos:column="52">&amp;&amp;<pos:position pos:line="71" pos:column="62"/></operator> <operator pos:line="71" pos:column="55">*<pos:position pos:line="71" pos:column="56"/></operator><name pos:line="71" pos:column="56">src<pos:position pos:line="71" pos:column="59"/></name> <operator pos:line="71" pos:column="60">!=<pos:position pos:line="71" pos:column="62"/></operator> <literal type="char" pos:line="71" pos:column="63">'?'<pos:position pos:line="71" pos:column="66"/></literal> <operator pos:line="71" pos:column="67">&amp;&amp;<pos:position pos:line="71" pos:column="77"/></operator> <operator pos:line="71" pos:column="70">*<pos:position pos:line="71" pos:column="71"/></operator><name pos:line="71" pos:column="71">src<pos:position pos:line="71" pos:column="74"/></name> <operator pos:line="71" pos:column="75">!=<pos:position pos:line="71" pos:column="77"/></operator> <literal type="char" pos:line="71" pos:column="78">'#'<pos:position pos:line="71" pos:column="81"/></literal> <operator pos:line="71" pos:column="82">&amp;&amp;<pos:position pos:line="71" pos:column="92"/></operator> <operator pos:line="71" pos:column="85">*<pos:position pos:line="71" pos:column="86"/></operator><name pos:line="71" pos:column="86">src<pos:position pos:line="71" pos:column="89"/></name> <operator pos:line="71" pos:column="90">!=<pos:position pos:line="71" pos:column="92"/></operator> <literal type="char" pos:line="71" pos:column="93">'\0'<pos:position pos:line="71" pos:column="97"/></literal> <operator pos:line="71" pos:column="98">&amp;&amp;<pos:position pos:line="71" pos:column="108"/></operator> <operator pos:line="71" pos:column="101">!<pos:position pos:line="71" pos:column="102"/></operator><call><name pos:line="71" pos:column="102">xisspace<pos:position pos:line="71" pos:column="110"/></name><argument_list pos:line="71" pos:column="110">(<argument><expr><operator pos:line="71" pos:column="111">*<pos:position pos:line="71" pos:column="112"/></operator><name pos:line="71" pos:column="112">src<pos:position pos:line="71" pos:column="115"/></name></expr></argument>)<pos:position pos:line="71" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="117"/></condition> <incr><expr><operator pos:line="71" pos:column="118">++<pos:position pos:line="71" pos:column="120"/></operator><name pos:line="71" pos:column="120">i<pos:position pos:line="71" pos:column="121"/></name></expr><operator pos:line="71" pos:column="121">,<pos:position pos:line="71" pos:column="122"/></operator> <expr><operator pos:line="71" pos:column="123">++<pos:position pos:line="71" pos:column="125"/></operator><name pos:line="71" pos:column="125">src<pos:position pos:line="71" pos:column="128"/></name></expr><operator pos:line="71" pos:column="128">,<pos:position pos:line="71" pos:column="129"/></operator> <expr><operator pos:line="71" pos:column="130">++<pos:position pos:line="71" pos:column="132"/></operator><name pos:line="71" pos:column="132">dst<pos:position pos:line="71" pos:column="135"/></name></expr></incr>)<pos:position pos:line="71" pos:column="136"/></control> <block pos:line="71" pos:column="137">{
            <expr_stmt><expr><operator pos:line="72" pos:column="13">*<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">dst<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">=<pos:position pos:line="72" pos:column="19"/></operator> <operator pos:line="72" pos:column="20">*<pos:position pos:line="72" pos:column="21"/></operator><name pos:line="72" pos:column="21">src<pos:position pos:line="72" pos:column="24"/></name></expr>;<pos:position pos:line="72" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="73" pos:column="10"/></block></for>

        <comment type="block" pos:line="75" pos:column="9">/*
         * We can't check for "i &gt;= l" here because we could be at the end of the line
         * and have a perfectly valid URL w/ no trailing '/'. In this case we assume we've
         * been -given- a valid URL and the path is just '/'.
         */</comment>
        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><name pos:line="80" pos:column="13">i<pos:position pos:line="80" pos:column="14"/></name> <operator pos:line="80" pos:column="15">&gt;<pos:position pos:line="80" pos:column="19"/></operator> <name pos:line="80" pos:column="17">l<pos:position pos:line="80" pos:column="18"/></name></expr>)<pos:position pos:line="80" pos:column="19"/></condition><then pos:line="80" pos:column="19">
            <block type="pseudo"><return pos:line="81" pos:column="13">return <expr><literal type="boolean" pos:line="81" pos:column="20">false<pos:position pos:line="81" pos:column="25"/></literal></expr>;<pos:position pos:line="81" pos:column="26"/></return></block></then></if>
        <expr_stmt><expr><operator pos:line="82" pos:column="9">*<pos:position pos:line="82" pos:column="10"/></operator><name pos:line="82" pos:column="10">dst<pos:position pos:line="82" pos:column="13"/></name> <operator pos:line="82" pos:column="14">=<pos:position pos:line="82" pos:column="15"/></operator> <literal type="char" pos:line="82" pos:column="16">'\0'<pos:position pos:line="82" pos:column="20"/></literal></expr>;<pos:position pos:line="82" pos:column="21"/></expr_stmt>

        <comment type="line" pos:line="84" pos:column="9">// bug 3074: received 'path' starting with '?', '#', or '\0' implies '/'</comment>
        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><operator pos:line="85" pos:column="13">*<pos:position pos:line="85" pos:column="14"/></operator><name pos:line="85" pos:column="14">src<pos:position pos:line="85" pos:column="17"/></name> <operator pos:line="85" pos:column="18">==<pos:position pos:line="85" pos:column="20"/></operator> <literal type="char" pos:line="85" pos:column="21">'?'<pos:position pos:line="85" pos:column="24"/></literal> <operator pos:line="85" pos:column="25">||<pos:position pos:line="85" pos:column="27"/></operator> <operator pos:line="85" pos:column="28">*<pos:position pos:line="85" pos:column="29"/></operator><name pos:line="85" pos:column="29">src<pos:position pos:line="85" pos:column="32"/></name> <operator pos:line="85" pos:column="33">==<pos:position pos:line="85" pos:column="35"/></operator> <literal type="char" pos:line="85" pos:column="36">'#'<pos:position pos:line="85" pos:column="39"/></literal> <operator pos:line="85" pos:column="40">||<pos:position pos:line="85" pos:column="42"/></operator> <operator pos:line="85" pos:column="43">*<pos:position pos:line="85" pos:column="44"/></operator><name pos:line="85" pos:column="44">src<pos:position pos:line="85" pos:column="47"/></name> <operator pos:line="85" pos:column="48">==<pos:position pos:line="85" pos:column="50"/></operator> <literal type="char" pos:line="85" pos:column="51">'\0'<pos:position pos:line="85" pos:column="55"/></literal></expr>)<pos:position pos:line="85" pos:column="56"/></condition><then pos:line="85" pos:column="56"> <block pos:line="85" pos:column="57">{
            <expr_stmt><expr><name><name pos:line="86" pos:column="13">urlpath<pos:position pos:line="86" pos:column="20"/></name><index pos:line="86" pos:column="20">[<expr><literal type="number" pos:line="86" pos:column="21">0<pos:position pos:line="86" pos:column="22"/></literal></expr>]<pos:position pos:line="86" pos:column="23"/></index></name> <operator pos:line="86" pos:column="24">=<pos:position pos:line="86" pos:column="25"/></operator> <literal type="char" pos:line="86" pos:column="26">'/'<pos:position pos:line="86" pos:column="29"/></literal></expr>;<pos:position pos:line="86" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="87" pos:column="13">dst<pos:position pos:line="87" pos:column="16"/></name> <operator pos:line="87" pos:column="17">=<pos:position pos:line="87" pos:column="18"/></operator> <operator pos:line="87" pos:column="19">&amp;<pos:position pos:line="87" pos:column="24"/></operator><name><name pos:line="87" pos:column="20">urlpath<pos:position pos:line="87" pos:column="27"/></name><index pos:line="87" pos:column="27">[<expr><literal type="number" pos:line="87" pos:column="28">1<pos:position pos:line="87" pos:column="29"/></literal></expr>]<pos:position pos:line="87" pos:column="30"/></index></name></expr>;<pos:position pos:line="87" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="88" pos:column="10"/></block></then> <else pos:line="88" pos:column="11">else <block pos:line="88" pos:column="16">{
            <expr_stmt><expr><name pos:line="89" pos:column="13">dst<pos:position pos:line="89" pos:column="16"/></name> <operator pos:line="89" pos:column="17">=<pos:position pos:line="89" pos:column="18"/></operator> <name pos:line="89" pos:column="19">urlpath<pos:position pos:line="89" pos:column="26"/></name></expr>;<pos:position pos:line="89" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="90" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="91" pos:column="9">/* Then everything from / (inclusive) until \r\n or \0 - thats urlpath */</comment>
        <for pos:line="92" pos:column="9">for <control pos:line="92" pos:column="13">(<init pos:line="92" pos:column="14">;<pos:position pos:line="92" pos:column="15"/></init> <condition><expr><name pos:line="92" pos:column="16">i<pos:position pos:line="92" pos:column="17"/></name> <operator pos:line="92" pos:column="18">&lt;<pos:position pos:line="92" pos:column="22"/></operator> <name pos:line="92" pos:column="20">l<pos:position pos:line="92" pos:column="21"/></name> <operator pos:line="92" pos:column="22">&amp;&amp;<pos:position pos:line="92" pos:column="32"/></operator> <operator pos:line="92" pos:column="25">*<pos:position pos:line="92" pos:column="26"/></operator><name pos:line="92" pos:column="26">src<pos:position pos:line="92" pos:column="29"/></name> <operator pos:line="92" pos:column="30">!=<pos:position pos:line="92" pos:column="32"/></operator> <literal type="char" pos:line="92" pos:column="33">'\r'<pos:position pos:line="92" pos:column="37"/></literal> <operator pos:line="92" pos:column="38">&amp;&amp;<pos:position pos:line="92" pos:column="48"/></operator> <operator pos:line="92" pos:column="41">*<pos:position pos:line="92" pos:column="42"/></operator><name pos:line="92" pos:column="42">src<pos:position pos:line="92" pos:column="45"/></name> <operator pos:line="92" pos:column="46">!=<pos:position pos:line="92" pos:column="48"/></operator> <literal type="char" pos:line="92" pos:column="49">'\n'<pos:position pos:line="92" pos:column="53"/></literal> <operator pos:line="92" pos:column="54">&amp;&amp;<pos:position pos:line="92" pos:column="64"/></operator> <operator pos:line="92" pos:column="57">*<pos:position pos:line="92" pos:column="58"/></operator><name pos:line="92" pos:column="58">src<pos:position pos:line="92" pos:column="61"/></name> <operator pos:line="92" pos:column="62">!=<pos:position pos:line="92" pos:column="64"/></operator> <literal type="char" pos:line="92" pos:column="65">'\0'<pos:position pos:line="92" pos:column="69"/></literal></expr>;<pos:position pos:line="92" pos:column="70"/></condition> <incr><expr><operator pos:line="92" pos:column="71">++<pos:position pos:line="92" pos:column="73"/></operator><name pos:line="92" pos:column="73">i<pos:position pos:line="92" pos:column="74"/></name></expr><operator pos:line="92" pos:column="74">,<pos:position pos:line="92" pos:column="75"/></operator> <expr><operator pos:line="92" pos:column="76">++<pos:position pos:line="92" pos:column="78"/></operator><name pos:line="92" pos:column="78">src<pos:position pos:line="92" pos:column="81"/></name></expr><operator pos:line="92" pos:column="81">,<pos:position pos:line="92" pos:column="82"/></operator> <expr><operator pos:line="92" pos:column="83">++<pos:position pos:line="92" pos:column="85"/></operator><name pos:line="92" pos:column="85">dst<pos:position pos:line="92" pos:column="88"/></name></expr></incr>)<pos:position pos:line="92" pos:column="89"/></control> <block pos:line="92" pos:column="90">{
            <expr_stmt><expr><operator pos:line="93" pos:column="13">*<pos:position pos:line="93" pos:column="14"/></operator><name pos:line="93" pos:column="14">dst<pos:position pos:line="93" pos:column="17"/></name> <operator pos:line="93" pos:column="18">=<pos:position pos:line="93" pos:column="19"/></operator> <operator pos:line="93" pos:column="20">*<pos:position pos:line="93" pos:column="21"/></operator><name pos:line="93" pos:column="21">src<pos:position pos:line="93" pos:column="24"/></name></expr>;<pos:position pos:line="93" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></for>

        <comment type="block" pos:line="96" pos:column="9">/* We -could- be at the end of the buffer here */</comment>
        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name pos:line="97" pos:column="13">i<pos:position pos:line="97" pos:column="14"/></name> <operator pos:line="97" pos:column="15">&gt;<pos:position pos:line="97" pos:column="19"/></operator> <name pos:line="97" pos:column="17">l<pos:position pos:line="97" pos:column="18"/></name></expr>)<pos:position pos:line="97" pos:column="19"/></condition><then pos:line="97" pos:column="19">
            <block type="pseudo"><return pos:line="98" pos:column="13">return <expr><literal type="boolean" pos:line="98" pos:column="20">false<pos:position pos:line="98" pos:column="25"/></literal></expr>;<pos:position pos:line="98" pos:column="26"/></return></block></then></if>
        <comment type="block" pos:line="99" pos:column="9">/* If the URL path is empty we set it to be "/" */</comment>
        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">dst<pos:position pos:line="100" pos:column="16"/></name> <operator pos:line="100" pos:column="17">==<pos:position pos:line="100" pos:column="19"/></operator> <name pos:line="100" pos:column="20">urlpath<pos:position pos:line="100" pos:column="27"/></name></expr>)<pos:position pos:line="100" pos:column="28"/></condition><then pos:line="100" pos:column="28"> <block pos:line="100" pos:column="29">{
            <expr_stmt><expr><operator pos:line="101" pos:column="13">*<pos:position pos:line="101" pos:column="14"/></operator><name pos:line="101" pos:column="14">dst<pos:position pos:line="101" pos:column="17"/></name> <operator pos:line="101" pos:column="18">=<pos:position pos:line="101" pos:column="19"/></operator> <literal type="char" pos:line="101" pos:column="20">'/'<pos:position pos:line="101" pos:column="23"/></literal></expr>;<pos:position pos:line="101" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="102" pos:column="13">++<pos:position pos:line="102" pos:column="15"/></operator><name pos:line="102" pos:column="15">dst<pos:position pos:line="102" pos:column="18"/></name></expr>;<pos:position pos:line="102" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="103" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="104" pos:column="9">*<pos:position pos:line="104" pos:column="10"/></operator><name pos:line="104" pos:column="10">dst<pos:position pos:line="104" pos:column="13"/></name> <operator pos:line="104" pos:column="14">=<pos:position pos:line="104" pos:column="15"/></operator> <literal type="char" pos:line="104" pos:column="16">'\0'<pos:position pos:line="104" pos:column="20"/></literal></expr>;<pos:position pos:line="104" pos:column="21"/></expr_stmt>

        <expr_stmt><expr><name pos:line="106" pos:column="9">protocol<pos:position pos:line="106" pos:column="17"/></name> <operator pos:line="106" pos:column="18">=<pos:position pos:line="106" pos:column="19"/></operator> <call><name pos:line="106" pos:column="20">urlParseProtocol<pos:position pos:line="106" pos:column="36"/></name><argument_list pos:line="106" pos:column="36">(<argument><expr><name pos:line="106" pos:column="37">proto<pos:position pos:line="106" pos:column="42"/></name></expr></argument>)<pos:position pos:line="106" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><name pos:line="107" pos:column="9">foundPort<pos:position pos:line="107" pos:column="18"/></name> <operator pos:line="107" pos:column="19">=<pos:position pos:line="107" pos:column="20"/></operator> <call><name><name pos:line="107" pos:column="21">AnyP<pos:position pos:line="107" pos:column="25"/></name><operator pos:line="107" pos:column="25">::<pos:position pos:line="107" pos:column="27"/></operator><name pos:line="107" pos:column="27">UriScheme<pos:position pos:line="107" pos:column="36"/></name></name><argument_list pos:line="107" pos:column="36">(<argument><expr><name pos:line="107" pos:column="37">protocol<pos:position pos:line="107" pos:column="45"/></name></expr></argument>)<pos:position pos:line="107" pos:column="46"/></argument_list></call><operator pos:line="107" pos:column="46">.<pos:position pos:line="107" pos:column="47"/></operator><call><name pos:line="107" pos:column="47">defaultPort<pos:position pos:line="107" pos:column="58"/></name><argument_list pos:line="107" pos:column="58">()<pos:position pos:line="107" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="61"/></expr_stmt>

        <comment type="block" pos:line="109" pos:column="9">/* Is there any login information? (we should eventually parse it above) */</comment>
        <expr_stmt><expr><name pos:line="110" pos:column="9">t<pos:position pos:line="110" pos:column="10"/></name> <operator pos:line="110" pos:column="11">=<pos:position pos:line="110" pos:column="12"/></operator> <call><name pos:line="110" pos:column="13">strrchr<pos:position pos:line="110" pos:column="20"/></name><argument_list pos:line="110" pos:column="20">(<argument><expr><name pos:line="110" pos:column="21">foundHost<pos:position pos:line="110" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="110" pos:column="32">'@'<pos:position pos:line="110" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="110" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="37"/></expr_stmt>
        <if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><name pos:line="111" pos:column="13">t<pos:position pos:line="111" pos:column="14"/></name> <operator pos:line="111" pos:column="15">!=<pos:position pos:line="111" pos:column="17"/></operator> <name pos:line="111" pos:column="18">NULL<pos:position pos:line="111" pos:column="22"/></name></expr>)<pos:position pos:line="111" pos:column="23"/></condition><then pos:line="111" pos:column="23"> <block pos:line="111" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="112" pos:column="13">strncpy<pos:position pos:line="112" pos:column="20"/></name><argument_list pos:line="112" pos:column="20">(<argument><expr><operator pos:line="112" pos:column="21">(<pos:position pos:line="112" pos:column="22"/></operator><name pos:line="112" pos:column="22">char<pos:position pos:line="112" pos:column="26"/></name> <operator pos:line="112" pos:column="27">*<pos:position pos:line="112" pos:column="28"/></operator><operator pos:line="112" pos:column="28">)<pos:position pos:line="112" pos:column="29"/></operator> <name pos:line="112" pos:column="30">login<pos:position pos:line="112" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="112" pos:column="37">(<pos:position pos:line="112" pos:column="38"/></operator><name pos:line="112" pos:column="38">char<pos:position pos:line="112" pos:column="42"/></name> <operator pos:line="112" pos:column="43">*<pos:position pos:line="112" pos:column="44"/></operator><operator pos:line="112" pos:column="44">)<pos:position pos:line="112" pos:column="45"/></operator> <name pos:line="112" pos:column="46">foundHost<pos:position pos:line="112" pos:column="55"/></name></expr></argument>, <argument><expr><sizeof pos:line="112" pos:column="57">sizeof<argument_list pos:line="112" pos:column="63">(<argument><expr><name pos:line="112" pos:column="64">login<pos:position pos:line="112" pos:column="69"/></name></expr></argument>)<pos:position pos:line="112" pos:column="70"/></argument_list></sizeof><operator pos:line="112" pos:column="70">-<pos:position pos:line="112" pos:column="71"/></operator><literal type="number" pos:line="112" pos:column="71">1<pos:position pos:line="112" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="74"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="113" pos:column="13">login<pos:position pos:line="113" pos:column="18"/></name><index pos:line="113" pos:column="18">[<expr><sizeof pos:line="113" pos:column="19">sizeof<argument_list pos:line="113" pos:column="25">(<argument><expr><name pos:line="113" pos:column="26">login<pos:position pos:line="113" pos:column="31"/></name></expr></argument>)<pos:position pos:line="113" pos:column="32"/></argument_list></sizeof><operator pos:line="113" pos:column="32">-<pos:position pos:line="113" pos:column="33"/></operator><literal type="number" pos:line="113" pos:column="33">1<pos:position pos:line="113" pos:column="34"/></literal></expr>]<pos:position pos:line="113" pos:column="35"/></index></name> <operator pos:line="113" pos:column="36">=<pos:position pos:line="113" pos:column="37"/></operator> <literal type="char" pos:line="113" pos:column="38">'\0'<pos:position pos:line="113" pos:column="42"/></literal></expr>;<pos:position pos:line="113" pos:column="43"/></expr_stmt>
            <expr_stmt><expr><name pos:line="114" pos:column="13">t<pos:position pos:line="114" pos:column="14"/></name> <operator pos:line="114" pos:column="15">=<pos:position pos:line="114" pos:column="16"/></operator> <call><name pos:line="114" pos:column="17">strrchr<pos:position pos:line="114" pos:column="24"/></name><argument_list pos:line="114" pos:column="24">(<argument><expr><name pos:line="114" pos:column="25">login<pos:position pos:line="114" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="114" pos:column="32">'@'<pos:position pos:line="114" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="37"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="115" pos:column="13">*<pos:position pos:line="115" pos:column="14"/></operator><name pos:line="115" pos:column="14">t<pos:position pos:line="115" pos:column="15"/></name> <operator pos:line="115" pos:column="16">=<pos:position pos:line="115" pos:column="17"/></operator> <literal type="number" pos:line="115" pos:column="18">0<pos:position pos:line="115" pos:column="19"/></literal></expr>;<pos:position pos:line="115" pos:column="20"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="116" pos:column="13">strncpy<pos:position pos:line="116" pos:column="20"/></name><argument_list pos:line="116" pos:column="20">(<argument><expr><operator pos:line="116" pos:column="21">(<pos:position pos:line="116" pos:column="22"/></operator><name pos:line="116" pos:column="22">char<pos:position pos:line="116" pos:column="26"/></name> <operator pos:line="116" pos:column="27">*<pos:position pos:line="116" pos:column="28"/></operator><operator pos:line="116" pos:column="28">)<pos:position pos:line="116" pos:column="29"/></operator> <name pos:line="116" pos:column="30">foundHost<pos:position pos:line="116" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="116" pos:column="41">t<pos:position pos:line="116" pos:column="42"/></name> <operator pos:line="116" pos:column="43">+<pos:position pos:line="116" pos:column="44"/></operator> <literal type="number" pos:line="116" pos:column="45">1<pos:position pos:line="116" pos:column="46"/></literal></expr></argument>, <argument><expr><sizeof pos:line="116" pos:column="48">sizeof<argument_list pos:line="116" pos:column="54">(<argument><expr><name pos:line="116" pos:column="55">foundHost<pos:position pos:line="116" pos:column="64"/></name></expr></argument>)<pos:position pos:line="116" pos:column="65"/></argument_list></sizeof><operator pos:line="116" pos:column="65">-<pos:position pos:line="116" pos:column="66"/></operator><literal type="number" pos:line="116" pos:column="66">1<pos:position pos:line="116" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="116" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="117" pos:column="13">foundHost<pos:position pos:line="117" pos:column="22"/></name><index pos:line="117" pos:column="22">[<expr><sizeof pos:line="117" pos:column="23">sizeof<argument_list pos:line="117" pos:column="29">(<argument><expr><name pos:line="117" pos:column="30">foundHost<pos:position pos:line="117" pos:column="39"/></name></expr></argument>)<pos:position pos:line="117" pos:column="40"/></argument_list></sizeof><operator pos:line="117" pos:column="40">-<pos:position pos:line="117" pos:column="41"/></operator><literal type="number" pos:line="117" pos:column="41">1<pos:position pos:line="117" pos:column="42"/></literal></expr>]<pos:position pos:line="117" pos:column="43"/></index></name> <operator pos:line="117" pos:column="44">=<pos:position pos:line="117" pos:column="45"/></operator> <literal type="char" pos:line="117" pos:column="46">'\0'<pos:position pos:line="117" pos:column="50"/></literal></expr>;<pos:position pos:line="117" pos:column="51"/></expr_stmt>
            <comment type="line" pos:line="118" pos:column="13">// Bug 4498: URL-unescape the login info after extraction</comment>
            <expr_stmt><expr><call><name pos:line="119" pos:column="13">rfc1738_unescape<pos:position pos:line="119" pos:column="29"/></name><argument_list pos:line="119" pos:column="29">(<argument><expr><name pos:line="119" pos:column="30">login<pos:position pos:line="119" pos:column="35"/></name></expr></argument>)<pos:position pos:line="119" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="120" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="122" pos:column="9">/* Is there any host information? (we should eventually parse it above) */</comment>
        <if pos:line="123" pos:column="9">if <condition pos:line="123" pos:column="12">(<expr><operator pos:line="123" pos:column="13">*<pos:position pos:line="123" pos:column="14"/></operator><name pos:line="123" pos:column="14">foundHost<pos:position pos:line="123" pos:column="23"/></name> <operator pos:line="123" pos:column="24">==<pos:position pos:line="123" pos:column="26"/></operator> <literal type="char" pos:line="123" pos:column="27">'['<pos:position pos:line="123" pos:column="30"/></literal></expr>)<pos:position pos:line="123" pos:column="31"/></condition><then pos:line="123" pos:column="31"> <block pos:line="123" pos:column="32">{
            <comment type="block" pos:line="124" pos:column="13">/* strip any IPA brackets. valid under IPv6. */</comment>
            <expr_stmt><expr><name pos:line="125" pos:column="13">dst<pos:position pos:line="125" pos:column="16"/></name> <operator pos:line="125" pos:column="17">=<pos:position pos:line="125" pos:column="18"/></operator> <name pos:line="125" pos:column="19">foundHost<pos:position pos:line="125" pos:column="28"/></name></expr>;<pos:position pos:line="125" pos:column="29"/></expr_stmt>
            <comment type="block" pos:line="126" pos:column="13">/* only for IPv6 sadly, pre-IPv6/URL code can't handle the clean result properly anyway. */</comment>
            <expr_stmt><expr><name pos:line="127" pos:column="13">src<pos:position pos:line="127" pos:column="16"/></name> <operator pos:line="127" pos:column="17">=<pos:position pos:line="127" pos:column="18"/></operator> <name pos:line="127" pos:column="19">foundHost<pos:position pos:line="127" pos:column="28"/></name></expr>;<pos:position pos:line="127" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="128" pos:column="13">++<pos:position pos:line="128" pos:column="15"/></operator><name pos:line="128" pos:column="15">src<pos:position pos:line="128" pos:column="18"/></name></expr>;<pos:position pos:line="128" pos:column="19"/></expr_stmt>
            <expr_stmt><expr><name pos:line="129" pos:column="13">l<pos:position pos:line="129" pos:column="14"/></name> <operator pos:line="129" pos:column="15">=<pos:position pos:line="129" pos:column="16"/></operator> <call><name pos:line="129" pos:column="17">strlen<pos:position pos:line="129" pos:column="23"/></name><argument_list pos:line="129" pos:column="23">(<argument><expr><name pos:line="129" pos:column="24">foundHost<pos:position pos:line="129" pos:column="33"/></name></expr></argument>)<pos:position pos:line="129" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="130" pos:column="13">i<pos:position pos:line="130" pos:column="14"/></name> <operator pos:line="130" pos:column="15">=<pos:position pos:line="130" pos:column="16"/></operator> <literal type="number" pos:line="130" pos:column="17">1<pos:position pos:line="130" pos:column="18"/></literal></expr>;<pos:position pos:line="130" pos:column="19"/></expr_stmt>
            <for pos:line="131" pos:column="13">for <control pos:line="131" pos:column="17">(<init pos:line="131" pos:column="18">;<pos:position pos:line="131" pos:column="19"/></init> <condition><expr><name pos:line="131" pos:column="20">i<pos:position pos:line="131" pos:column="21"/></name> <operator pos:line="131" pos:column="22">&lt;<pos:position pos:line="131" pos:column="26"/></operator> <name pos:line="131" pos:column="24">l<pos:position pos:line="131" pos:column="25"/></name> <operator pos:line="131" pos:column="26">&amp;&amp;<pos:position pos:line="131" pos:column="36"/></operator> <operator pos:line="131" pos:column="29">*<pos:position pos:line="131" pos:column="30"/></operator><name pos:line="131" pos:column="30">src<pos:position pos:line="131" pos:column="33"/></name> <operator pos:line="131" pos:column="34">!=<pos:position pos:line="131" pos:column="36"/></operator> <literal type="char" pos:line="131" pos:column="37">']'<pos:position pos:line="131" pos:column="40"/></literal> <operator pos:line="131" pos:column="41">&amp;&amp;<pos:position pos:line="131" pos:column="51"/></operator> <operator pos:line="131" pos:column="44">*<pos:position pos:line="131" pos:column="45"/></operator><name pos:line="131" pos:column="45">src<pos:position pos:line="131" pos:column="48"/></name> <operator pos:line="131" pos:column="49">!=<pos:position pos:line="131" pos:column="51"/></operator> <literal type="char" pos:line="131" pos:column="52">'\0'<pos:position pos:line="131" pos:column="56"/></literal></expr>;<pos:position pos:line="131" pos:column="57"/></condition> <incr><expr><operator pos:line="131" pos:column="58">++<pos:position pos:line="131" pos:column="60"/></operator><name pos:line="131" pos:column="60">i<pos:position pos:line="131" pos:column="61"/></name></expr><operator pos:line="131" pos:column="61">,<pos:position pos:line="131" pos:column="62"/></operator> <expr><operator pos:line="131" pos:column="63">++<pos:position pos:line="131" pos:column="65"/></operator><name pos:line="131" pos:column="65">src<pos:position pos:line="131" pos:column="68"/></name></expr><operator pos:line="131" pos:column="68">,<pos:position pos:line="131" pos:column="69"/></operator> <expr><operator pos:line="131" pos:column="70">++<pos:position pos:line="131" pos:column="72"/></operator><name pos:line="131" pos:column="72">dst<pos:position pos:line="131" pos:column="75"/></name></expr></incr>)<pos:position pos:line="131" pos:column="76"/></control> <block pos:line="131" pos:column="77">{
                <expr_stmt><expr><operator pos:line="132" pos:column="17">*<pos:position pos:line="132" pos:column="18"/></operator><name pos:line="132" pos:column="18">dst<pos:position pos:line="132" pos:column="21"/></name> <operator pos:line="132" pos:column="22">=<pos:position pos:line="132" pos:column="23"/></operator> <operator pos:line="132" pos:column="24">*<pos:position pos:line="132" pos:column="25"/></operator><name pos:line="132" pos:column="25">src<pos:position pos:line="132" pos:column="28"/></name></expr>;<pos:position pos:line="132" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="133" pos:column="14"/></block></for>

            <comment type="block" pos:line="135" pos:column="13">/* we moved in-place, so truncate the actual hostname found */</comment>
            <expr_stmt><expr><operator pos:line="136" pos:column="13">*<pos:position pos:line="136" pos:column="14"/></operator><name pos:line="136" pos:column="14">dst<pos:position pos:line="136" pos:column="17"/></name> <operator pos:line="136" pos:column="18">=<pos:position pos:line="136" pos:column="19"/></operator> <literal type="char" pos:line="136" pos:column="20">'\0'<pos:position pos:line="136" pos:column="24"/></literal></expr>;<pos:position pos:line="136" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="137" pos:column="13">++<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="15">dst<pos:position pos:line="137" pos:column="18"/></name></expr>;<pos:position pos:line="137" pos:column="19"/></expr_stmt>

            <comment type="block" pos:line="139" pos:column="13">/* skip ahead to either start of port, or original EOS */</comment>
            <while pos:line="140" pos:column="13">while <condition pos:line="140" pos:column="19">(<expr><operator pos:line="140" pos:column="20">*<pos:position pos:line="140" pos:column="21"/></operator><name pos:line="140" pos:column="21">dst<pos:position pos:line="140" pos:column="24"/></name> <operator pos:line="140" pos:column="25">!=<pos:position pos:line="140" pos:column="27"/></operator> <literal type="char" pos:line="140" pos:column="28">'\0'<pos:position pos:line="140" pos:column="32"/></literal> <operator pos:line="140" pos:column="33">&amp;&amp;<pos:position pos:line="140" pos:column="43"/></operator> <operator pos:line="140" pos:column="36">*<pos:position pos:line="140" pos:column="37"/></operator><name pos:line="140" pos:column="37">dst<pos:position pos:line="140" pos:column="40"/></name> <operator pos:line="140" pos:column="41">!=<pos:position pos:line="140" pos:column="43"/></operator> <literal type="char" pos:line="140" pos:column="44">':'<pos:position pos:line="140" pos:column="47"/></literal></expr>)<pos:position pos:line="140" pos:column="48"/></condition>
                <block type="pseudo"><expr_stmt><expr><operator pos:line="141" pos:column="17">++<pos:position pos:line="141" pos:column="19"/></operator><name pos:line="141" pos:column="19">dst<pos:position pos:line="141" pos:column="22"/></name></expr>;<pos:position pos:line="141" pos:column="23"/></expr_stmt></block></while>
            <expr_stmt><expr><name pos:line="142" pos:column="13">t<pos:position pos:line="142" pos:column="14"/></name> <operator pos:line="142" pos:column="15">=<pos:position pos:line="142" pos:column="16"/></operator> <name pos:line="142" pos:column="17">dst<pos:position pos:line="142" pos:column="20"/></name></expr>;<pos:position pos:line="142" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="143" pos:column="10"/></block></then> <else pos:line="143" pos:column="11">else <block pos:line="143" pos:column="16">{
            <expr_stmt><expr><name pos:line="144" pos:column="13">t<pos:position pos:line="144" pos:column="14"/></name> <operator pos:line="144" pos:column="15">=<pos:position pos:line="144" pos:column="16"/></operator> <call><name pos:line="144" pos:column="17">strrchr<pos:position pos:line="144" pos:column="24"/></name><argument_list pos:line="144" pos:column="24">(<argument><expr><name pos:line="144" pos:column="25">foundHost<pos:position pos:line="144" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="144" pos:column="36">':'<pos:position pos:line="144" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="144" pos:column="41"/></expr_stmt>

            <if pos:line="146" pos:column="13">if <condition pos:line="146" pos:column="16">(<expr><name pos:line="146" pos:column="17">t<pos:position pos:line="146" pos:column="18"/></name> <operator pos:line="146" pos:column="19">!=<pos:position pos:line="146" pos:column="21"/></operator> <call><name pos:line="146" pos:column="22">strchr<pos:position pos:line="146" pos:column="28"/></name><argument_list pos:line="146" pos:column="28">(<argument><expr><name pos:line="146" pos:column="29">foundHost<pos:position pos:line="146" pos:column="38"/></name></expr></argument>,<argument><expr><literal type="char" pos:line="146" pos:column="39">':'<pos:position pos:line="146" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="43"/></argument_list></call></expr> )<pos:position pos:line="146" pos:column="45"/></condition><then pos:line="146" pos:column="45"> <block pos:line="146" pos:column="46">{
                <comment type="block" pos:line="147" pos:column="17">/* RFC 2732 states IPv6 "SHOULD" be bracketed. allowing for times when its not. */</comment>
                <comment type="block" pos:line="148" pos:column="17">/* RFC 3986 'update' simply modifies this to an "is" with no emphasis at all! */</comment>
                <comment type="block" pos:line="149" pos:column="17">/* therefore we MUST accept the case where they are not bracketed at all. */</comment>
                <expr_stmt><expr><name pos:line="150" pos:column="17">t<pos:position pos:line="150" pos:column="18"/></name> <operator pos:line="150" pos:column="19">=<pos:position pos:line="150" pos:column="20"/></operator> <name pos:line="150" pos:column="21">NULL<pos:position pos:line="150" pos:column="25"/></name></expr>;<pos:position pos:line="150" pos:column="26"/></expr_stmt>
            }<pos:position pos:line="151" pos:column="14"/></block></then></if>
        }<pos:position pos:line="152" pos:column="10"/></block></else></if>

        <comment type="line" pos:line="154" pos:column="9">// Bug 3183 sanity check: If scheme is present, host must be too.</comment>
        <if pos:line="155" pos:column="9">if <condition pos:line="155" pos:column="12">(<expr><name pos:line="155" pos:column="13">protocol<pos:position pos:line="155" pos:column="21"/></name> <operator pos:line="155" pos:column="22">!=<pos:position pos:line="155" pos:column="24"/></operator> <name><name pos:line="155" pos:column="25">AnyP<pos:position pos:line="155" pos:column="29"/></name><operator pos:line="155" pos:column="29">::<pos:position pos:line="155" pos:column="31"/></operator><name pos:line="155" pos:column="31">PROTO_NONE<pos:position pos:line="155" pos:column="41"/></name></name> <operator pos:line="155" pos:column="42">&amp;&amp;<pos:position pos:line="155" pos:column="52"/></operator> <name><name pos:line="155" pos:column="45">foundHost<pos:position pos:line="155" pos:column="54"/></name><index pos:line="155" pos:column="54">[<expr><literal type="number" pos:line="155" pos:column="55">0<pos:position pos:line="155" pos:column="56"/></literal></expr>]<pos:position pos:line="155" pos:column="57"/></index></name> <operator pos:line="155" pos:column="58">==<pos:position pos:line="155" pos:column="60"/></operator> <literal type="char" pos:line="155" pos:column="61">'\0'<pos:position pos:line="155" pos:column="65"/></literal></expr>)<pos:position pos:line="155" pos:column="66"/></condition><then pos:line="155" pos:column="66"> <block pos:line="155" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="156" pos:column="13">debugs<pos:position pos:line="156" pos:column="19"/></name><argument_list pos:line="156" pos:column="19">(<argument><expr><literal type="number" pos:line="156" pos:column="20">23<pos:position pos:line="156" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="156" pos:column="24">DBG_IMPORTANT<pos:position pos:line="156" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="39">"SECURITY ALERT: Missing hostname in URL '"<pos:position pos:line="156" pos:column="82"/></literal> <operator pos:line="156" pos:column="83">&lt;&lt;<pos:position pos:line="156" pos:column="91"/></operator> <name pos:line="156" pos:column="86">url<pos:position pos:line="156" pos:column="89"/></name> <operator pos:line="156" pos:column="90">&lt;&lt;<pos:position pos:line="156" pos:column="98"/></operator> <literal type="string" pos:line="156" pos:column="93">"'. see access.log for details."<pos:position pos:line="156" pos:column="125"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="156" pos:column="127"/></expr_stmt>
            <return pos:line="157" pos:column="13">return <expr><literal type="boolean" pos:line="157" pos:column="20">false<pos:position pos:line="157" pos:column="25"/></literal></expr>;<pos:position pos:line="157" pos:column="26"/></return>
        }<pos:position pos:line="158" pos:column="10"/></block></then></if>

        <if pos:line="160" pos:column="9">if <condition pos:line="160" pos:column="12">(<expr><name pos:line="160" pos:column="13">t<pos:position pos:line="160" pos:column="14"/></name> <operator pos:line="160" pos:column="15">&amp;&amp;<pos:position pos:line="160" pos:column="25"/></operator> <operator pos:line="160" pos:column="18">*<pos:position pos:line="160" pos:column="19"/></operator><name pos:line="160" pos:column="19">t<pos:position pos:line="160" pos:column="20"/></name> <operator pos:line="160" pos:column="21">==<pos:position pos:line="160" pos:column="23"/></operator> <literal type="char" pos:line="160" pos:column="24">':'<pos:position pos:line="160" pos:column="27"/></literal></expr>)<pos:position pos:line="160" pos:column="28"/></condition><then pos:line="160" pos:column="28"> <block pos:line="160" pos:column="29">{
            <expr_stmt><expr><operator pos:line="161" pos:column="13">*<pos:position pos:line="161" pos:column="14"/></operator><name pos:line="161" pos:column="14">t<pos:position pos:line="161" pos:column="15"/></name> <operator pos:line="161" pos:column="16">=<pos:position pos:line="161" pos:column="17"/></operator> <literal type="char" pos:line="161" pos:column="18">'\0'<pos:position pos:line="161" pos:column="22"/></literal></expr>;<pos:position pos:line="161" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="162" pos:column="13">++<pos:position pos:line="162" pos:column="15"/></operator><name pos:line="162" pos:column="15">t<pos:position pos:line="162" pos:column="16"/></name></expr>;<pos:position pos:line="162" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><name pos:line="163" pos:column="13">foundPort<pos:position pos:line="163" pos:column="22"/></name> <operator pos:line="163" pos:column="23">=<pos:position pos:line="163" pos:column="24"/></operator> <call><name pos:line="163" pos:column="25">atoi<pos:position pos:line="163" pos:column="29"/></name><argument_list pos:line="163" pos:column="29">(<argument><expr><name pos:line="163" pos:column="30">t<pos:position pos:line="163" pos:column="31"/></name></expr></argument>)<pos:position pos:line="163" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="163" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="164" pos:column="10"/></block></then></if>
    }<pos:position pos:line="165" pos:column="6"/></block></else></if>

    <for pos:line="167" pos:column="5">for <control pos:line="167" pos:column="9">(<init><expr><name pos:line="167" pos:column="10">t<pos:position pos:line="167" pos:column="11"/></name> <operator pos:line="167" pos:column="12">=<pos:position pos:line="167" pos:column="13"/></operator> <name pos:line="167" pos:column="14">foundHost<pos:position pos:line="167" pos:column="23"/></name></expr>;<pos:position pos:line="167" pos:column="24"/></init> <condition><expr><operator pos:line="167" pos:column="25">*<pos:position pos:line="167" pos:column="26"/></operator><name pos:line="167" pos:column="26">t<pos:position pos:line="167" pos:column="27"/></name></expr>;<pos:position pos:line="167" pos:column="28"/></condition> <incr><expr><operator pos:line="167" pos:column="29">++<pos:position pos:line="167" pos:column="31"/></operator><name pos:line="167" pos:column="31">t<pos:position pos:line="167" pos:column="32"/></name></expr></incr>)<pos:position pos:line="167" pos:column="33"/></control>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="168" pos:column="9">*<pos:position pos:line="168" pos:column="10"/></operator><name pos:line="168" pos:column="10">t<pos:position pos:line="168" pos:column="11"/></name> <operator pos:line="168" pos:column="12">=<pos:position pos:line="168" pos:column="13"/></operator> <call><name pos:line="168" pos:column="14">xtolower<pos:position pos:line="168" pos:column="22"/></name><argument_list pos:line="168" pos:column="22">(<argument><expr><operator pos:line="168" pos:column="23">*<pos:position pos:line="168" pos:column="24"/></operator><name pos:line="168" pos:column="24">t<pos:position pos:line="168" pos:column="25"/></name></expr></argument>)<pos:position pos:line="168" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="27"/></expr_stmt></block></for>

    <if pos:line="170" pos:column="5">if <condition pos:line="170" pos:column="8">(<expr><call><name pos:line="170" pos:column="9">stringHasWhitespace<pos:position pos:line="170" pos:column="28"/></name><argument_list pos:line="170" pos:column="28">(<argument><expr><name pos:line="170" pos:column="29">foundHost<pos:position pos:line="170" pos:column="38"/></name></expr></argument>)<pos:position pos:line="170" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="170" pos:column="40"/></condition><then pos:line="170" pos:column="40"> <block pos:line="170" pos:column="41">{
        <if pos:line="171" pos:column="9">if <condition pos:line="171" pos:column="12">(<expr><name pos:line="171" pos:column="13">URI_WHITESPACE_STRIP<pos:position pos:line="171" pos:column="33"/></name> <operator pos:line="171" pos:column="34">==<pos:position pos:line="171" pos:column="36"/></operator> <name><name pos:line="171" pos:column="37">Config<pos:position pos:line="171" pos:column="43"/></name><operator pos:line="171" pos:column="43">.<pos:position pos:line="171" pos:column="44"/></operator><name pos:line="171" pos:column="44">uri_whitespace<pos:position pos:line="171" pos:column="58"/></name></name></expr>)<pos:position pos:line="171" pos:column="59"/></condition><then pos:line="171" pos:column="59"> <block pos:line="171" pos:column="60">{
            <expr_stmt><expr><name pos:line="172" pos:column="13">t<pos:position pos:line="172" pos:column="14"/></name> <operator pos:line="172" pos:column="15">=<pos:position pos:line="172" pos:column="16"/></operator> <name pos:line="172" pos:column="17">q<pos:position pos:line="172" pos:column="18"/></name> <operator pos:line="172" pos:column="19">=<pos:position pos:line="172" pos:column="20"/></operator> <name pos:line="172" pos:column="21">foundHost<pos:position pos:line="172" pos:column="30"/></name></expr>;<pos:position pos:line="172" pos:column="31"/></expr_stmt>
            <while pos:line="173" pos:column="13">while <condition pos:line="173" pos:column="19">(<expr><operator pos:line="173" pos:column="20">*<pos:position pos:line="173" pos:column="21"/></operator><name pos:line="173" pos:column="21">t<pos:position pos:line="173" pos:column="22"/></name></expr>)<pos:position pos:line="173" pos:column="23"/></condition> <block pos:line="173" pos:column="24">{
                <if pos:line="174" pos:column="17">if <condition pos:line="174" pos:column="20">(<expr><operator pos:line="174" pos:column="21">!<pos:position pos:line="174" pos:column="22"/></operator><call><name pos:line="174" pos:column="22">xisspace<pos:position pos:line="174" pos:column="30"/></name><argument_list pos:line="174" pos:column="30">(<argument><expr><operator pos:line="174" pos:column="31">*<pos:position pos:line="174" pos:column="32"/></operator><name pos:line="174" pos:column="32">t<pos:position pos:line="174" pos:column="33"/></name></expr></argument>)<pos:position pos:line="174" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="174" pos:column="35"/></condition><then pos:line="174" pos:column="35"> <block pos:line="174" pos:column="36">{
                    <expr_stmt><expr><operator pos:line="175" pos:column="21">*<pos:position pos:line="175" pos:column="22"/></operator><name pos:line="175" pos:column="22">q<pos:position pos:line="175" pos:column="23"/></name> <operator pos:line="175" pos:column="24">=<pos:position pos:line="175" pos:column="25"/></operator> <operator pos:line="175" pos:column="26">*<pos:position pos:line="175" pos:column="27"/></operator><name pos:line="175" pos:column="27">t<pos:position pos:line="175" pos:column="28"/></name></expr>;<pos:position pos:line="175" pos:column="29"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="176" pos:column="21">++<pos:position pos:line="176" pos:column="23"/></operator><name pos:line="176" pos:column="23">q<pos:position pos:line="176" pos:column="24"/></name></expr>;<pos:position pos:line="176" pos:column="25"/></expr_stmt>
                }<pos:position pos:line="177" pos:column="18"/></block></then></if>
                <expr_stmt><expr><operator pos:line="178" pos:column="17">++<pos:position pos:line="178" pos:column="19"/></operator><name pos:line="178" pos:column="19">t<pos:position pos:line="178" pos:column="20"/></name></expr>;<pos:position pos:line="178" pos:column="21"/></expr_stmt>
            }<pos:position pos:line="179" pos:column="14"/></block></while>
            <expr_stmt><expr><operator pos:line="180" pos:column="13">*<pos:position pos:line="180" pos:column="14"/></operator><name pos:line="180" pos:column="14">q<pos:position pos:line="180" pos:column="15"/></name> <operator pos:line="180" pos:column="16">=<pos:position pos:line="180" pos:column="17"/></operator> <literal type="char" pos:line="180" pos:column="18">'\0'<pos:position pos:line="180" pos:column="22"/></literal></expr>;<pos:position pos:line="180" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="181" pos:column="10"/></block></then></if>
    }<pos:position pos:line="182" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="184" pos:column="5">debugs<pos:position pos:line="184" pos:column="11"/></name><argument_list pos:line="184" pos:column="11">(<argument><expr><literal type="number" pos:line="184" pos:column="12">23<pos:position pos:line="184" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="184" pos:column="16">3<pos:position pos:line="184" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="19">"Split URL '"<pos:position pos:line="184" pos:column="32"/></literal> <operator pos:line="184" pos:column="33">&lt;&lt;<pos:position pos:line="184" pos:column="41"/></operator> <name pos:line="184" pos:column="36">url<pos:position pos:line="184" pos:column="39"/></name> <operator pos:line="184" pos:column="40">&lt;&lt;<pos:position pos:line="184" pos:column="48"/></operator> <literal type="string" pos:line="184" pos:column="43">"' into proto='"<pos:position pos:line="184" pos:column="59"/></literal> <operator pos:line="184" pos:column="60">&lt;&lt;<pos:position pos:line="184" pos:column="68"/></operator> <name pos:line="184" pos:column="63">proto<pos:position pos:line="184" pos:column="68"/></name> <operator pos:line="184" pos:column="69">&lt;&lt;<pos:position pos:line="184" pos:column="77"/></operator> <literal type="string" pos:line="184" pos:column="72">"', host='"<pos:position pos:line="184" pos:column="83"/></literal> <operator pos:line="184" pos:column="84">&lt;&lt;<pos:position pos:line="184" pos:column="92"/></operator> <name pos:line="184" pos:column="87">foundHost<pos:position pos:line="184" pos:column="96"/></name> <operator pos:line="184" pos:column="97">&lt;&lt;<pos:position pos:line="184" pos:column="105"/></operator> <literal type="string" pos:line="184" pos:column="100">"', port='"<pos:position pos:line="184" pos:column="111"/></literal> <operator pos:line="184" pos:column="112">&lt;&lt;<pos:position pos:line="184" pos:column="120"/></operator> <name pos:line="184" pos:column="115">foundPort<pos:position pos:line="184" pos:column="124"/></name> <operator pos:line="184" pos:column="125">&lt;&lt;<pos:position pos:line="184" pos:column="133"/></operator> <literal type="string" pos:line="184" pos:column="128">"', path='"<pos:position pos:line="184" pos:column="139"/></literal> <operator pos:line="184" pos:column="140">&lt;&lt;<pos:position pos:line="184" pos:column="148"/></operator> <name pos:line="184" pos:column="143">urlpath<pos:position pos:line="184" pos:column="150"/></name> <operator pos:line="184" pos:column="151">&lt;&lt;<pos:position pos:line="184" pos:column="159"/></operator> <literal type="string" pos:line="184" pos:column="154">"'"<pos:position pos:line="184" pos:column="157"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="158"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="159"/></expr_stmt>

    <if pos:line="186" pos:column="5">if <condition pos:line="186" pos:column="8">(<expr><name><name pos:line="186" pos:column="9">Config<pos:position pos:line="186" pos:column="15"/></name><operator pos:line="186" pos:column="15">.<pos:position pos:line="186" pos:column="16"/></operator><name pos:line="186" pos:column="16">onoff<pos:position pos:line="186" pos:column="21"/></name><operator pos:line="186" pos:column="21">.<pos:position pos:line="186" pos:column="22"/></operator><name pos:line="186" pos:column="22">check_hostnames<pos:position pos:line="186" pos:column="37"/></name></name> <operator pos:line="186" pos:column="38">&amp;&amp;<pos:position pos:line="186" pos:column="48"/></operator>
            <call><name pos:line="187" pos:column="13">strspn<pos:position pos:line="187" pos:column="19"/></name><argument_list pos:line="187" pos:column="19">(<argument><expr><name pos:line="187" pos:column="20">foundHost<pos:position pos:line="187" pos:column="29"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="187" pos:column="31">Config<pos:position pos:line="187" pos:column="37"/></name><operator pos:line="187" pos:column="37">.<pos:position pos:line="187" pos:column="38"/></operator><name pos:line="187" pos:column="38">onoff<pos:position pos:line="187" pos:column="43"/></name><operator pos:line="187" pos:column="43">.<pos:position pos:line="187" pos:column="44"/></operator><name pos:line="187" pos:column="44">allow_underscore<pos:position pos:line="187" pos:column="60"/></name></name></expr> ?<pos:position pos:line="187" pos:column="62"/></condition><then pos:line="187" pos:column="62"> <expr><name pos:line="187" pos:column="63">valid_hostname_chars_u<pos:position pos:line="187" pos:column="85"/></name></expr> <pos:position pos:line="187" pos:column="86"/></then><else pos:line="187" pos:column="86">: <expr><name pos:line="187" pos:column="88">valid_hostname_chars<pos:position pos:line="187" pos:column="108"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="187" pos:column="109"/></argument_list></call> <operator pos:line="187" pos:column="110">!=<pos:position pos:line="187" pos:column="112"/></operator> <call><name pos:line="187" pos:column="113">strlen<pos:position pos:line="187" pos:column="119"/></name><argument_list pos:line="187" pos:column="119">(<argument><expr><name pos:line="187" pos:column="120">foundHost<pos:position pos:line="187" pos:column="129"/></name></expr></argument>)<pos:position pos:line="187" pos:column="130"/></argument_list></call></expr>)<pos:position pos:line="187" pos:column="131"/></condition><then pos:line="187" pos:column="131"> <block pos:line="187" pos:column="132">{
        <expr_stmt><expr><call><name pos:line="188" pos:column="9">debugs<pos:position pos:line="188" pos:column="15"/></name><argument_list pos:line="188" pos:column="15">(<argument><expr><literal type="number" pos:line="188" pos:column="16">23<pos:position pos:line="188" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="188" pos:column="20">DBG_IMPORTANT<pos:position pos:line="188" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="188" pos:column="35">MYNAME<pos:position pos:line="188" pos:column="41"/></name> <operator pos:line="188" pos:column="42">&lt;&lt;<pos:position pos:line="188" pos:column="50"/></operator> <literal type="string" pos:line="188" pos:column="45">"Illegal character in hostname '"<pos:position pos:line="188" pos:column="78"/></literal> <operator pos:line="188" pos:column="79">&lt;&lt;<pos:position pos:line="188" pos:column="87"/></operator> <name pos:line="188" pos:column="82">foundHost<pos:position pos:line="188" pos:column="91"/></name> <operator pos:line="188" pos:column="92">&lt;&lt;<pos:position pos:line="188" pos:column="100"/></operator> <literal type="string" pos:line="188" pos:column="95">"'"<pos:position pos:line="188" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="100"/></expr_stmt>
        <return pos:line="189" pos:column="9">return <expr><literal type="boolean" pos:line="189" pos:column="16">false<pos:position pos:line="189" pos:column="21"/></literal></expr>;<pos:position pos:line="189" pos:column="22"/></return>
    }<pos:position pos:line="190" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="192" pos:column="5">/* For IPV6 addresses also check for a colon */</comment>
    <if pos:line="193" pos:column="5">if <condition pos:line="193" pos:column="8">(<expr><name><name pos:line="193" pos:column="9">Config<pos:position pos:line="193" pos:column="15"/></name><operator pos:line="193" pos:column="15">.<pos:position pos:line="193" pos:column="16"/></operator><name pos:line="193" pos:column="16">appendDomain<pos:position pos:line="193" pos:column="28"/></name></name> <operator pos:line="193" pos:column="29">&amp;&amp;<pos:position pos:line="193" pos:column="39"/></operator> <operator pos:line="193" pos:column="32">!<pos:position pos:line="193" pos:column="33"/></operator><call><name pos:line="193" pos:column="33">strchr<pos:position pos:line="193" pos:column="39"/></name><argument_list pos:line="193" pos:column="39">(<argument><expr><name pos:line="193" pos:column="40">foundHost<pos:position pos:line="193" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="193" pos:column="51">'.'<pos:position pos:line="193" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="55"/></argument_list></call> <operator pos:line="193" pos:column="56">&amp;&amp;<pos:position pos:line="193" pos:column="66"/></operator> <operator pos:line="193" pos:column="59">!<pos:position pos:line="193" pos:column="60"/></operator><call><name pos:line="193" pos:column="60">strchr<pos:position pos:line="193" pos:column="66"/></name><argument_list pos:line="193" pos:column="66">(<argument><expr><name pos:line="193" pos:column="67">foundHost<pos:position pos:line="193" pos:column="76"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="193" pos:column="78">':'<pos:position pos:line="193" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="82"/></argument_list></call></expr>)<pos:position pos:line="193" pos:column="83"/></condition><then pos:line="193" pos:column="83">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="194" pos:column="9">strncat<pos:position pos:line="194" pos:column="16"/></name><argument_list pos:line="194" pos:column="16">(<argument><expr><name pos:line="194" pos:column="17">foundHost<pos:position pos:line="194" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="194" pos:column="28">Config<pos:position pos:line="194" pos:column="34"/></name><operator pos:line="194" pos:column="34">.<pos:position pos:line="194" pos:column="35"/></operator><name pos:line="194" pos:column="35">appendDomain<pos:position pos:line="194" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="194" pos:column="49">SQUIDHOSTNAMELEN<pos:position pos:line="194" pos:column="65"/></name> <operator pos:line="194" pos:column="66">-<pos:position pos:line="194" pos:column="67"/></operator> <call><name pos:line="194" pos:column="68">strlen<pos:position pos:line="194" pos:column="74"/></name><argument_list pos:line="194" pos:column="74">(<argument><expr><name pos:line="194" pos:column="75">foundHost<pos:position pos:line="194" pos:column="84"/></name></expr></argument>)<pos:position pos:line="194" pos:column="85"/></argument_list></call> <operator pos:line="194" pos:column="86">-<pos:position pos:line="194" pos:column="87"/></operator> <literal type="number" pos:line="194" pos:column="88">1<pos:position pos:line="194" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="194" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="194" pos:column="91"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="196" pos:column="5">/* remove trailing dots from hostnames */</comment>
    <while pos:line="197" pos:column="5">while <condition pos:line="197" pos:column="11">(<expr><operator pos:line="197" pos:column="12">(<pos:position pos:line="197" pos:column="13"/></operator><name pos:line="197" pos:column="13">l<pos:position pos:line="197" pos:column="14"/></name> <operator pos:line="197" pos:column="15">=<pos:position pos:line="197" pos:column="16"/></operator> <call><name pos:line="197" pos:column="17">strlen<pos:position pos:line="197" pos:column="23"/></name><argument_list pos:line="197" pos:column="23">(<argument><expr><name pos:line="197" pos:column="24">foundHost<pos:position pos:line="197" pos:column="33"/></name></expr></argument>)<pos:position pos:line="197" pos:column="34"/></argument_list></call><operator pos:line="197" pos:column="34">)<pos:position pos:line="197" pos:column="35"/></operator> <operator pos:line="197" pos:column="36">&gt;<pos:position pos:line="197" pos:column="40"/></operator> <literal type="number" pos:line="197" pos:column="38">0<pos:position pos:line="197" pos:column="39"/></literal> <operator pos:line="197" pos:column="40">&amp;&amp;<pos:position pos:line="197" pos:column="50"/></operator> <name><name pos:line="197" pos:column="43">foundHost<pos:position pos:line="197" pos:column="52"/></name><index pos:line="197" pos:column="52">[<expr><operator pos:line="197" pos:column="53">--<pos:position pos:line="197" pos:column="55"/></operator><name pos:line="197" pos:column="55">l<pos:position pos:line="197" pos:column="56"/></name></expr>]<pos:position pos:line="197" pos:column="57"/></index></name> <operator pos:line="197" pos:column="58">==<pos:position pos:line="197" pos:column="60"/></operator> <literal type="char" pos:line="197" pos:column="61">'.'<pos:position pos:line="197" pos:column="64"/></literal></expr>)<pos:position pos:line="197" pos:column="65"/></condition>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="198" pos:column="9">foundHost<pos:position pos:line="198" pos:column="18"/></name><index pos:line="198" pos:column="18">[<expr><name pos:line="198" pos:column="19">l<pos:position pos:line="198" pos:column="20"/></name></expr>]<pos:position pos:line="198" pos:column="21"/></index></name> <operator pos:line="198" pos:column="22">=<pos:position pos:line="198" pos:column="23"/></operator> <literal type="char" pos:line="198" pos:column="24">'\0'<pos:position pos:line="198" pos:column="28"/></literal></expr>;<pos:position pos:line="198" pos:column="29"/></expr_stmt></block></while>

    <comment type="block" pos:line="200" pos:column="5">/* reject duplicate or leading dots */</comment>
    <if pos:line="201" pos:column="5">if <condition pos:line="201" pos:column="8">(<expr><call><name pos:line="201" pos:column="9">strstr<pos:position pos:line="201" pos:column="15"/></name><argument_list pos:line="201" pos:column="15">(<argument><expr><name pos:line="201" pos:column="16">foundHost<pos:position pos:line="201" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="201" pos:column="27">".."<pos:position pos:line="201" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="32"/></argument_list></call> <operator pos:line="201" pos:column="33">||<pos:position pos:line="201" pos:column="35"/></operator> <operator pos:line="201" pos:column="36">*<pos:position pos:line="201" pos:column="37"/></operator><name pos:line="201" pos:column="37">foundHost<pos:position pos:line="201" pos:column="46"/></name> <operator pos:line="201" pos:column="47">==<pos:position pos:line="201" pos:column="49"/></operator> <literal type="char" pos:line="201" pos:column="50">'.'<pos:position pos:line="201" pos:column="53"/></literal></expr>)<pos:position pos:line="201" pos:column="54"/></condition><then pos:line="201" pos:column="54"> <block pos:line="201" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="202" pos:column="9">debugs<pos:position pos:line="202" pos:column="15"/></name><argument_list pos:line="202" pos:column="15">(<argument><expr><literal type="number" pos:line="202" pos:column="16">23<pos:position pos:line="202" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="202" pos:column="20">DBG_IMPORTANT<pos:position pos:line="202" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="35">MYNAME<pos:position pos:line="202" pos:column="41"/></name> <operator pos:line="202" pos:column="42">&lt;&lt;<pos:position pos:line="202" pos:column="50"/></operator> <literal type="string" pos:line="202" pos:column="45">"Illegal hostname '"<pos:position pos:line="202" pos:column="65"/></literal> <operator pos:line="202" pos:column="66">&lt;&lt;<pos:position pos:line="202" pos:column="74"/></operator> <name pos:line="202" pos:column="69">foundHost<pos:position pos:line="202" pos:column="78"/></name> <operator pos:line="202" pos:column="79">&lt;&lt;<pos:position pos:line="202" pos:column="87"/></operator> <literal type="string" pos:line="202" pos:column="82">"'"<pos:position pos:line="202" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="87"/></expr_stmt>
        <return pos:line="203" pos:column="9">return <expr><literal type="boolean" pos:line="203" pos:column="16">false<pos:position pos:line="203" pos:column="21"/></literal></expr>;<pos:position pos:line="203" pos:column="22"/></return>
    }<pos:position pos:line="204" pos:column="6"/></block></then></if>

    <if pos:line="206" pos:column="5">if <condition pos:line="206" pos:column="8">(<expr><name><name pos:line="206" pos:column="9">foundPort<pos:position pos:line="206" pos:column="18"/></name> <argument_list type="generic" pos:line="206" pos:column="19">&lt; <argument><expr><literal type="number" pos:line="206" pos:column="21">1<pos:position pos:line="206" pos:column="22"/></literal> <operator pos:line="206" pos:column="23">||<pos:position pos:line="206" pos:column="25"/></operator> <name pos:line="206" pos:column="26">foundPort<pos:position pos:line="206" pos:column="35"/></name></expr></argument> &gt;<pos:position pos:line="206" pos:column="40"/></argument_list></name> <literal type="number" pos:line="206" pos:column="38">65535<pos:position pos:line="206" pos:column="43"/></literal></expr>)<pos:position pos:line="206" pos:column="44"/></condition><then pos:line="206" pos:column="44"> <block pos:line="206" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="207" pos:column="9">debugs<pos:position pos:line="207" pos:column="15"/></name><argument_list pos:line="207" pos:column="15">(<argument><expr><literal type="number" pos:line="207" pos:column="16">23<pos:position pos:line="207" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="207" pos:column="20">3<pos:position pos:line="207" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="207" pos:column="23">"Invalid port '"<pos:position pos:line="207" pos:column="39"/></literal> <operator pos:line="207" pos:column="40">&lt;&lt;<pos:position pos:line="207" pos:column="48"/></operator> <name pos:line="207" pos:column="43">foundPort<pos:position pos:line="207" pos:column="52"/></name> <operator pos:line="207" pos:column="53">&lt;&lt;<pos:position pos:line="207" pos:column="61"/></operator> <literal type="string" pos:line="207" pos:column="56">"'"<pos:position pos:line="207" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="207" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="207" pos:column="61"/></expr_stmt>
        <return pos:line="208" pos:column="9">return <expr><literal type="boolean" pos:line="208" pos:column="16">false<pos:position pos:line="208" pos:column="21"/></literal></expr>;<pos:position pos:line="208" pos:column="22"/></return>
    }<pos:position pos:line="209" pos:column="6"/></block></then></if>

<cpp:if pos:line="211" pos:column="1">#<cpp:directive pos:line="211" pos:column="2">if<pos:position pos:line="211" pos:column="4"/></cpp:directive> <expr><name pos:line="211" pos:column="5">HARDCODE_DENY_PORTS<pos:position pos:line="211" pos:column="24"/></name></expr></cpp:if>
    <comment type="block" pos:line="212" pos:column="5">/* These ports are filtered in the default squid.conf, but
     * maybe someone wants them hardcoded... */</comment>
    <if pos:line="214" pos:column="5">if <condition pos:line="214" pos:column="8">(<expr><name pos:line="214" pos:column="9">foundPort<pos:position pos:line="214" pos:column="18"/></name> <operator pos:line="214" pos:column="19">==<pos:position pos:line="214" pos:column="21"/></operator> <literal type="number" pos:line="214" pos:column="22">7<pos:position pos:line="214" pos:column="23"/></literal> <operator pos:line="214" pos:column="24">||<pos:position pos:line="214" pos:column="26"/></operator> <name pos:line="214" pos:column="27">foundPort<pos:position pos:line="214" pos:column="36"/></name> <operator pos:line="214" pos:column="37">==<pos:position pos:line="214" pos:column="39"/></operator> <literal type="number" pos:line="214" pos:column="40">9<pos:position pos:line="214" pos:column="41"/></literal> <operator pos:line="214" pos:column="42">||<pos:position pos:line="214" pos:column="44"/></operator> <name pos:line="214" pos:column="45">foundPort<pos:position pos:line="214" pos:column="54"/></name> <operator pos:line="214" pos:column="55">==<pos:position pos:line="214" pos:column="57"/></operator> <literal type="number" pos:line="214" pos:column="58">19<pos:position pos:line="214" pos:column="60"/></literal></expr>)<pos:position pos:line="214" pos:column="61"/></condition><then pos:line="214" pos:column="61"> <block pos:line="214" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="215" pos:column="9">debugs<pos:position pos:line="215" pos:column="15"/></name><argument_list pos:line="215" pos:column="15">(<argument><expr><literal type="number" pos:line="215" pos:column="16">23<pos:position pos:line="215" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="215" pos:column="20">DBG_CRITICAL<pos:position pos:line="215" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="215" pos:column="34">MYNAME<pos:position pos:line="215" pos:column="40"/></name> <operator pos:line="215" pos:column="41">&lt;&lt;<pos:position pos:line="215" pos:column="49"/></operator> <literal type="string" pos:line="215" pos:column="44">"Deny access to port "<pos:position pos:line="215" pos:column="66"/></literal> <operator pos:line="215" pos:column="67">&lt;&lt;<pos:position pos:line="215" pos:column="75"/></operator> <name pos:line="215" pos:column="70">foundPort<pos:position pos:line="215" pos:column="79"/></name></expr></argument>)<pos:position pos:line="215" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="215" pos:column="81"/></expr_stmt>
        <return pos:line="216" pos:column="9">return <expr><literal type="boolean" pos:line="216" pos:column="16">false<pos:position pos:line="216" pos:column="21"/></literal></expr>;<pos:position pos:line="216" pos:column="22"/></return>
    }<pos:position pos:line="217" pos:column="6"/></block></then></if>
<cpp:endif pos:line="218" pos:column="1">#<cpp:directive pos:line="218" pos:column="2">endif<pos:position pos:line="218" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="220" pos:column="5">if <condition pos:line="220" pos:column="8">(<expr><call><name pos:line="220" pos:column="9">stringHasWhitespace<pos:position pos:line="220" pos:column="28"/></name><argument_list pos:line="220" pos:column="28">(<argument><expr><name pos:line="220" pos:column="29">urlpath<pos:position pos:line="220" pos:column="36"/></name></expr></argument>)<pos:position pos:line="220" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="220" pos:column="38"/></condition><then pos:line="220" pos:column="38"> <block pos:line="220" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="221" pos:column="9">debugs<pos:position pos:line="221" pos:column="15"/></name><argument_list pos:line="221" pos:column="15">(<argument><expr><literal type="number" pos:line="221" pos:column="16">23<pos:position pos:line="221" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="221" pos:column="20">2<pos:position pos:line="221" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="221" pos:column="23">"URI has whitespace: {"<pos:position pos:line="221" pos:column="46"/></literal> <operator pos:line="221" pos:column="47">&lt;&lt;<pos:position pos:line="221" pos:column="55"/></operator> <name pos:line="221" pos:column="50">url<pos:position pos:line="221" pos:column="53"/></name> <operator pos:line="221" pos:column="54">&lt;&lt;<pos:position pos:line="221" pos:column="62"/></operator> <literal type="string" pos:line="221" pos:column="57">"}"<pos:position pos:line="221" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="221" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="221" pos:column="62"/></expr_stmt>

        <switch pos:line="223" pos:column="9">switch <condition pos:line="223" pos:column="16">(<expr><name><name pos:line="223" pos:column="17">Config<pos:position pos:line="223" pos:column="23"/></name><operator pos:line="223" pos:column="23">.<pos:position pos:line="223" pos:column="24"/></operator><name pos:line="223" pos:column="24">uri_whitespace<pos:position pos:line="223" pos:column="38"/></name></name></expr>)<pos:position pos:line="223" pos:column="39"/></condition> <block pos:line="223" pos:column="40">{

        <case pos:line="225" pos:column="9">case <expr><name pos:line="225" pos:column="14">URI_WHITESPACE_DENY<pos:position pos:line="225" pos:column="33"/></name></expr>:<pos:position pos:line="225" pos:column="34"/></case>
            <return pos:line="226" pos:column="13">return <expr><literal type="boolean" pos:line="226" pos:column="20">false<pos:position pos:line="226" pos:column="25"/></literal></expr>;<pos:position pos:line="226" pos:column="26"/></return>

        <case pos:line="228" pos:column="9">case <expr><name pos:line="228" pos:column="14">URI_WHITESPACE_ALLOW<pos:position pos:line="228" pos:column="34"/></name></expr>:<pos:position pos:line="228" pos:column="35"/></case>
            <break pos:line="229" pos:column="13">break;<pos:position pos:line="229" pos:column="19"/></break>

        <case pos:line="231" pos:column="9">case <expr><name pos:line="231" pos:column="14">URI_WHITESPACE_ENCODE<pos:position pos:line="231" pos:column="35"/></name></expr>:<pos:position pos:line="231" pos:column="36"/></case>
            <expr_stmt><expr><name pos:line="232" pos:column="13">t<pos:position pos:line="232" pos:column="14"/></name> <operator pos:line="232" pos:column="15">=<pos:position pos:line="232" pos:column="16"/></operator> <call><name pos:line="232" pos:column="17">rfc1738_escape_unescaped<pos:position pos:line="232" pos:column="41"/></name><argument_list pos:line="232" pos:column="41">(<argument><expr><name pos:line="232" pos:column="42">urlpath<pos:position pos:line="232" pos:column="49"/></name></expr></argument>)<pos:position pos:line="232" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="232" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="233" pos:column="13">xstrncpy<pos:position pos:line="233" pos:column="21"/></name><argument_list pos:line="233" pos:column="21">(<argument><expr><name pos:line="233" pos:column="22">urlpath<pos:position pos:line="233" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="31">t<pos:position pos:line="233" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="34">MAX_URL<pos:position pos:line="233" pos:column="41"/></name></expr></argument>)<pos:position pos:line="233" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="43"/></expr_stmt>
            <break pos:line="234" pos:column="13">break;<pos:position pos:line="234" pos:column="19"/></break>

        <case pos:line="236" pos:column="9">case <expr><name pos:line="236" pos:column="14">URI_WHITESPACE_CHOP<pos:position pos:line="236" pos:column="33"/></name></expr>:<pos:position pos:line="236" pos:column="34"/></case>
            <expr_stmt><expr><operator pos:line="237" pos:column="13">*<pos:position pos:line="237" pos:column="14"/></operator><operator pos:line="237" pos:column="14">(<pos:position pos:line="237" pos:column="15"/></operator><name pos:line="237" pos:column="15">urlpath<pos:position pos:line="237" pos:column="22"/></name> <operator pos:line="237" pos:column="23">+<pos:position pos:line="237" pos:column="24"/></operator> <call><name pos:line="237" pos:column="25">strcspn<pos:position pos:line="237" pos:column="32"/></name><argument_list pos:line="237" pos:column="32">(<argument><expr><name pos:line="237" pos:column="33">urlpath<pos:position pos:line="237" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="42">w_space<pos:position pos:line="237" pos:column="49"/></name></expr></argument>)<pos:position pos:line="237" pos:column="50"/></argument_list></call><operator pos:line="237" pos:column="50">)<pos:position pos:line="237" pos:column="51"/></operator> <operator pos:line="237" pos:column="52">=<pos:position pos:line="237" pos:column="53"/></operator> <literal type="char" pos:line="237" pos:column="54">'\0'<pos:position pos:line="237" pos:column="58"/></literal></expr>;<pos:position pos:line="237" pos:column="59"/></expr_stmt>
            <break pos:line="238" pos:column="13">break;<pos:position pos:line="238" pos:column="19"/></break>

        <case pos:line="240" pos:column="9">case <expr><name pos:line="240" pos:column="14">URI_WHITESPACE_STRIP<pos:position pos:line="240" pos:column="34"/></name></expr>:<pos:position pos:line="240" pos:column="35"/></case>
        <default pos:line="241" pos:column="9">default:<pos:position pos:line="241" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="242" pos:column="13">t<pos:position pos:line="242" pos:column="14"/></name> <operator pos:line="242" pos:column="15">=<pos:position pos:line="242" pos:column="16"/></operator> <name pos:line="242" pos:column="17">q<pos:position pos:line="242" pos:column="18"/></name> <operator pos:line="242" pos:column="19">=<pos:position pos:line="242" pos:column="20"/></operator> <name pos:line="242" pos:column="21">urlpath<pos:position pos:line="242" pos:column="28"/></name></expr>;<pos:position pos:line="242" pos:column="29"/></expr_stmt>
            <while pos:line="243" pos:column="13">while <condition pos:line="243" pos:column="19">(<expr><operator pos:line="243" pos:column="20">*<pos:position pos:line="243" pos:column="21"/></operator><name pos:line="243" pos:column="21">t<pos:position pos:line="243" pos:column="22"/></name></expr>)<pos:position pos:line="243" pos:column="23"/></condition> <block pos:line="243" pos:column="24">{
                <if pos:line="244" pos:column="17">if <condition pos:line="244" pos:column="20">(<expr><operator pos:line="244" pos:column="21">!<pos:position pos:line="244" pos:column="22"/></operator><call><name pos:line="244" pos:column="22">xisspace<pos:position pos:line="244" pos:column="30"/></name><argument_list pos:line="244" pos:column="30">(<argument><expr><operator pos:line="244" pos:column="31">*<pos:position pos:line="244" pos:column="32"/></operator><name pos:line="244" pos:column="32">t<pos:position pos:line="244" pos:column="33"/></name></expr></argument>)<pos:position pos:line="244" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="244" pos:column="35"/></condition><then pos:line="244" pos:column="35"> <block pos:line="244" pos:column="36">{
                    <expr_stmt><expr><operator pos:line="245" pos:column="21">*<pos:position pos:line="245" pos:column="22"/></operator><name pos:line="245" pos:column="22">q<pos:position pos:line="245" pos:column="23"/></name> <operator pos:line="245" pos:column="24">=<pos:position pos:line="245" pos:column="25"/></operator> <operator pos:line="245" pos:column="26">*<pos:position pos:line="245" pos:column="27"/></operator><name pos:line="245" pos:column="27">t<pos:position pos:line="245" pos:column="28"/></name></expr>;<pos:position pos:line="245" pos:column="29"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="246" pos:column="21">++<pos:position pos:line="246" pos:column="23"/></operator><name pos:line="246" pos:column="23">q<pos:position pos:line="246" pos:column="24"/></name></expr>;<pos:position pos:line="246" pos:column="25"/></expr_stmt>
                }<pos:position pos:line="247" pos:column="18"/></block></then></if>
                <expr_stmt><expr><operator pos:line="248" pos:column="17">++<pos:position pos:line="248" pos:column="19"/></operator><name pos:line="248" pos:column="19">t<pos:position pos:line="248" pos:column="20"/></name></expr>;<pos:position pos:line="248" pos:column="21"/></expr_stmt>
            }<pos:position pos:line="249" pos:column="14"/></block></while>
            <expr_stmt><expr><operator pos:line="250" pos:column="13">*<pos:position pos:line="250" pos:column="14"/></operator><name pos:line="250" pos:column="14">q<pos:position pos:line="250" pos:column="15"/></name> <operator pos:line="250" pos:column="16">=<pos:position pos:line="250" pos:column="17"/></operator> <literal type="char" pos:line="250" pos:column="18">'\0'<pos:position pos:line="250" pos:column="22"/></literal></expr>;<pos:position pos:line="250" pos:column="23"/></expr_stmt>
        }<pos:position pos:line="251" pos:column="10"/></block></switch>
    }<pos:position pos:line="252" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="254" pos:column="5">parseFinish<pos:position pos:line="254" pos:column="16"/></name><argument_list pos:line="254" pos:column="16">(<argument><expr><name pos:line="254" pos:column="17">protocol<pos:position pos:line="254" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="27">proto<pos:position pos:line="254" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="34">urlpath<pos:position pos:line="254" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="254" pos:column="43">foundHost<pos:position pos:line="254" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="254" pos:column="54">SBuf<pos:position pos:line="254" pos:column="58"/></name><argument_list pos:line="254" pos:column="58">(<argument><expr><name pos:line="254" pos:column="59">login<pos:position pos:line="254" pos:column="64"/></name></expr></argument>)<pos:position pos:line="254" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="254" pos:column="67">foundPort<pos:position pos:line="254" pos:column="76"/></name></expr></argument>)<pos:position pos:line="254" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="254" pos:column="78"/></expr_stmt>
    <return pos:line="255" pos:column="5">return <expr><literal type="boolean" pos:line="255" pos:column="12">true<pos:position pos:line="255" pos:column="16"/></literal></expr>;<pos:position pos:line="255" pos:column="17"/></return>
}<pos:position pos:line="256" pos:column="2"/></block></function></unit>

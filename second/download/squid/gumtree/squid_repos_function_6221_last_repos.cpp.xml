<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6221_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Log<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">TcpLogger<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">connectDone<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">CommConnectCbParams<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">&amp;<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="56">params<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">params<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">flag<pos:position pos:line="4" pos:column="20"/></name></name> <operator pos:line="4" pos:column="21">!=<pos:position pos:line="4" pos:column="23"/></operator> <name><name pos:line="4" pos:column="24">Comm<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">::<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="30">OK<pos:position pos:line="4" pos:column="32"/></name></name></expr>)<pos:position pos:line="4" pos:column="33"/></condition><then pos:line="4" pos:column="33"> <block pos:line="4" pos:column="34">{
        <decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">double<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">delay<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><literal type="number" pos:line="5" pos:column="30">0.5<pos:position pos:line="5" pos:column="33"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt> <comment type="line" pos:line="5" pos:column="35">// seconds</comment>
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name pos:line="6" pos:column="13">connectFailures<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">++<pos:position pos:line="6" pos:column="30"/></operator> <operator pos:line="6" pos:column="31">%<pos:position pos:line="6" pos:column="32"/></operator> <literal type="number" pos:line="6" pos:column="33">100<pos:position pos:line="6" pos:column="36"/></literal> <operator pos:line="6" pos:column="37">==<pos:position pos:line="6" pos:column="39"/></operator> <literal type="number" pos:line="6" pos:column="40">0<pos:position pos:line="6" pos:column="41"/></literal></expr>)<pos:position pos:line="6" pos:column="42"/></condition><then pos:line="6" pos:column="42"> <block pos:line="6" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="7" pos:column="13">debugs<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">MY_DEBUG_SECTION<pos:position pos:line="7" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="38">DBG_IMPORTANT<pos:position pos:line="7" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="53">"tcp:"<pos:position pos:line="7" pos:column="59"/></literal> <operator pos:line="7" pos:column="60">&lt;&lt;<pos:position pos:line="7" pos:column="68"/></operator> <name pos:line="7" pos:column="63">remote<pos:position pos:line="7" pos:column="69"/></name> <operator pos:line="7" pos:column="70">&lt;&lt;<pos:position pos:line="7" pos:column="78"/></operator>
                   <literal type="string" pos:line="8" pos:column="20">" logger connection attempt #"<pos:position pos:line="8" pos:column="50"/></literal> <operator pos:line="8" pos:column="51">&lt;&lt;<pos:position pos:line="8" pos:column="59"/></operator> <name pos:line="8" pos:column="54">connectFailures<pos:position pos:line="8" pos:column="69"/></name> <operator pos:line="8" pos:column="70">&lt;&lt;<pos:position pos:line="8" pos:column="78"/></operator>
                   <literal type="string" pos:line="9" pos:column="20">" failed. Will keep trying every "<pos:position pos:line="9" pos:column="54"/></literal> <operator pos:line="9" pos:column="55">&lt;&lt;<pos:position pos:line="9" pos:column="63"/></operator> <name pos:line="9" pos:column="58">delay<pos:position pos:line="9" pos:column="63"/></name> <operator pos:line="9" pos:column="64">&lt;&lt;<pos:position pos:line="9" pos:column="72"/></operator> <literal type="string" pos:line="9" pos:column="67">" seconds."<pos:position pos:line="9" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">reconnectScheduled<pos:position pos:line="12" pos:column="32"/></name></expr>)<pos:position pos:line="12" pos:column="33"/></condition><then pos:line="12" pos:column="33"> <block pos:line="12" pos:column="34">{
            <expr_stmt><expr><name pos:line="13" pos:column="13">reconnectScheduled<pos:position pos:line="13" pos:column="31"/></name> <operator pos:line="13" pos:column="32">=<pos:position pos:line="13" pos:column="33"/></operator> <literal type="boolean" pos:line="13" pos:column="34">true<pos:position pos:line="13" pos:column="38"/></literal></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">eventAdd<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">(<argument><expr><literal type="string" pos:line="14" pos:column="22">"Log::TcpLogger::DelayedReconnect"<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>,
                     <argument><expr><name><name pos:line="15" pos:column="22">Log<pos:position pos:line="15" pos:column="25"/></name><operator pos:line="15" pos:column="25">::<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="27">TcpLogger<pos:position pos:line="15" pos:column="36"/></name><operator pos:line="15" pos:column="36">::<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">DelayedReconnect<pos:position pos:line="15" pos:column="54"/></name></name></expr></argument>,
                     <argument><expr><operator pos:line="16" pos:column="22">new<pos:position pos:line="16" pos:column="25"/></operator> <call><name pos:line="16" pos:column="26">Pointer<pos:position pos:line="16" pos:column="33"/></name><argument_list pos:line="16" pos:column="33">(<argument><expr><name pos:line="16" pos:column="34">this<pos:position pos:line="16" pos:column="38"/></name></expr></argument>)<pos:position pos:line="16" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="41">0.5<pos:position pos:line="16" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="46">0<pos:position pos:line="16" pos:column="47"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="16" pos:column="49">false<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="56"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then> <else pos:line="18" pos:column="7">else <block pos:line="18" pos:column="12">{
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">connectFailures<pos:position pos:line="19" pos:column="28"/></name> <operator pos:line="19" pos:column="29">&gt;<pos:position pos:line="19" pos:column="33"/></operator> <literal type="number" pos:line="19" pos:column="31">0<pos:position pos:line="19" pos:column="32"/></literal></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33"> <block pos:line="19" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">debugs<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">MY_DEBUG_SECTION<pos:position pos:line="20" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="38">DBG_IMPORTANT<pos:position pos:line="20" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="53">"tcp:"<pos:position pos:line="20" pos:column="59"/></literal> <operator pos:line="20" pos:column="60">&lt;&lt;<pos:position pos:line="20" pos:column="68"/></operator> <name pos:line="20" pos:column="63">remote<pos:position pos:line="20" pos:column="69"/></name> <operator pos:line="20" pos:column="70">&lt;&lt;<pos:position pos:line="20" pos:column="78"/></operator>
                   <literal type="string" pos:line="21" pos:column="20">" logger connectivity restored after "<pos:position pos:line="21" pos:column="58"/></literal> <operator pos:line="21" pos:column="59">&lt;&lt;<pos:position pos:line="21" pos:column="67"/></operator>
                   <operator pos:line="22" pos:column="20">(<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">connectFailures<pos:position pos:line="22" pos:column="36"/></name><operator pos:line="22" pos:column="36">+<pos:position pos:line="22" pos:column="37"/></operator><literal type="number" pos:line="22" pos:column="37">1<pos:position pos:line="22" pos:column="38"/></literal><operator pos:line="22" pos:column="38">)<pos:position pos:line="22" pos:column="39"/></operator> <operator pos:line="22" pos:column="40">&lt;&lt;<pos:position pos:line="22" pos:column="48"/></operator> <literal type="string" pos:line="22" pos:column="43">" attempts."<pos:position pos:line="22" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><name pos:line="23" pos:column="13">connectFailures<pos:position pos:line="23" pos:column="28"/></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <literal type="number" pos:line="23" pos:column="31">0<pos:position pos:line="23" pos:column="32"/></literal></expr>;<pos:position pos:line="23" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="26" pos:column="9">Must<pos:position pos:line="26" pos:column="13"/></name><argument_list pos:line="26" pos:column="13">(<argument><expr><operator pos:line="26" pos:column="14">!<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">conn<pos:position pos:line="26" pos:column="19"/></name></expr></argument>)<pos:position pos:line="26" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="27" pos:column="9">conn<pos:position pos:line="27" pos:column="13"/></name> <operator pos:line="27" pos:column="14">=<pos:position pos:line="27" pos:column="15"/></operator> <name><name pos:line="27" pos:column="16">params<pos:position pos:line="27" pos:column="22"/></name><operator pos:line="27" pos:column="22">.<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="23">conn<pos:position pos:line="27" pos:column="27"/></name></name></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="29" pos:column="9">Must<pos:position pos:line="29" pos:column="13"/></name><argument_list pos:line="29" pos:column="13">(<argument><expr><operator pos:line="29" pos:column="14">!<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="15">closer<pos:position pos:line="29" pos:column="21"/></name></expr></argument>)<pos:position pos:line="29" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
        <typedef pos:line="30" pos:column="9">typedef <type><name><name pos:line="30" pos:column="17">CommCbMemFunT<pos:position pos:line="30" pos:column="30"/></name><argument_list type="generic" pos:line="30" pos:column="30">&lt;<argument><expr><name pos:line="30" pos:column="31">TcpLogger<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="42">CommCloseCbParams<pos:position pos:line="30" pos:column="59"/></name></expr></argument>&gt;<pos:position pos:line="30" pos:column="63"/></argument_list></name></type> <name pos:line="30" pos:column="61">Closer<pos:position pos:line="30" pos:column="67"/></name>;<pos:position pos:line="30" pos:column="68"/></typedef>
        <expr_stmt><expr><name pos:line="31" pos:column="9">closer<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">=<pos:position pos:line="31" pos:column="17"/></operator> <call><name pos:line="31" pos:column="18">JobCallback<pos:position pos:line="31" pos:column="29"/></name><argument_list pos:line="31" pos:column="29">(<argument><expr><name pos:line="31" pos:column="30">MY_DEBUG_SECTION<pos:position pos:line="31" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="48">4<pos:position pos:line="31" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="51">Closer<pos:position pos:line="31" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="59">this<pos:position pos:line="31" pos:column="63"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="65">Log<pos:position pos:line="31" pos:column="68"/></name><operator pos:line="31" pos:column="68">::<pos:position pos:line="31" pos:column="70"/></operator><name pos:line="31" pos:column="70">TcpLogger<pos:position pos:line="31" pos:column="79"/></name><operator pos:line="31" pos:column="79">::<pos:position pos:line="31" pos:column="81"/></operator><name pos:line="31" pos:column="81">handleClosure<pos:position pos:line="31" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="96"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">comm_add_close_handler<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name><name pos:line="32" pos:column="32">conn<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">fd<pos:position pos:line="32" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="42">closer<pos:position pos:line="32" pos:column="48"/></name></expr></argument>)<pos:position pos:line="32" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="50"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="34" pos:column="9">writeIfNeeded<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">()<pos:position pos:line="34" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

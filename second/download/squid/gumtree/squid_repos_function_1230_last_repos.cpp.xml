<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1230_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">xrename<pos:position pos:line="2" pos:column="8"/></name><parameter_list pos:line="2" pos:column="8">(<parameter><decl><type><specifier pos:line="2" pos:column="9">const<pos:position pos:line="2" pos:column="14"/></specifier> <name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">from<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">to<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">21<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">2<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="19">"xrename: renaming "<pos:position pos:line="4" pos:column="39"/></literal> <operator pos:line="4" pos:column="40">&lt;&lt;<pos:position pos:line="4" pos:column="48"/></operator> <name pos:line="4" pos:column="43">from<pos:position pos:line="4" pos:column="47"/></name> <operator pos:line="4" pos:column="48">&lt;&lt;<pos:position pos:line="4" pos:column="56"/></operator> <literal type="string" pos:line="4" pos:column="51">" to "<pos:position pos:line="4" pos:column="57"/></literal> <operator pos:line="4" pos:column="58">&lt;&lt;<pos:position pos:line="4" pos:column="66"/></operator> <name pos:line="4" pos:column="61">to<pos:position pos:line="4" pos:column="63"/></name></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="65"/></expr_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">_SQUID_OS2_<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">||<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">_SQUID_WINDOWS_<pos:position pos:line="5" pos:column="35"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">remove<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">to<pos:position pos:line="6" pos:column="14"/></name></expr></argument>)<pos:position pos:line="6" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="16"/></expr_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><literal type="number" pos:line="9" pos:column="9">0<pos:position pos:line="9" pos:column="10"/></literal> <operator pos:line="9" pos:column="11">==<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">rename<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">from<pos:position pos:line="9" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="27">to<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="31"/></condition><then pos:line="9" pos:column="31">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">xerrno<pos:position pos:line="12" pos:column="15"/></name> <init pos:line="12" pos:column="16">= <expr><name pos:line="12" pos:column="18">errno<pos:position pos:line="12" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">21<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="13" pos:column="16">errno<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">==<pos:position pos:line="13" pos:column="24"/></operator> <name pos:line="13" pos:column="25">ENOENT<pos:position pos:line="13" pos:column="31"/></name></expr> ?<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33"> <expr><literal type="number" pos:line="13" pos:column="34">2<pos:position pos:line="13" pos:column="35"/></literal></expr> <pos:position pos:line="13" pos:column="36"/></then><else pos:line="13" pos:column="36">: <expr><literal type="number" pos:line="13" pos:column="38">1<pos:position pos:line="13" pos:column="39"/></literal></expr></else></ternary></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="41">"xrename: Cannot rename "<pos:position pos:line="13" pos:column="66"/></literal> <operator pos:line="13" pos:column="67">&lt;&lt;<pos:position pos:line="13" pos:column="75"/></operator> <name pos:line="13" pos:column="70">from<pos:position pos:line="13" pos:column="74"/></name> <operator pos:line="13" pos:column="75">&lt;&lt;<pos:position pos:line="13" pos:column="83"/></operator> <literal type="string" pos:line="13" pos:column="78">" to "<pos:position pos:line="13" pos:column="84"/></literal> <operator pos:line="13" pos:column="85">&lt;&lt;<pos:position pos:line="13" pos:column="93"/></operator> <name pos:line="13" pos:column="88">to<pos:position pos:line="13" pos:column="90"/></name> <operator pos:line="13" pos:column="91">&lt;&lt;<pos:position pos:line="13" pos:column="99"/></operator> <literal type="string" pos:line="13" pos:column="94">": "<pos:position pos:line="13" pos:column="98"/></literal> <operator pos:line="13" pos:column="99">&lt;&lt;<pos:position pos:line="13" pos:column="107"/></operator> <call><name pos:line="13" pos:column="102">xstrerr<pos:position pos:line="13" pos:column="109"/></name><argument_list pos:line="13" pos:column="109">(<argument><expr><name pos:line="13" pos:column="110">xerrno<pos:position pos:line="13" pos:column="116"/></name></expr></argument>)<pos:position pos:line="13" pos:column="117"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="119"/></expr_stmt>

    <return pos:line="15" pos:column="5">return <expr><operator pos:line="15" pos:column="12">-<pos:position pos:line="15" pos:column="13"/></operator><literal type="number" pos:line="15" pos:column="13">1<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

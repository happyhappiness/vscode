<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1251_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">EventScheduler<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">schedule<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">name<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">EVH<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type> <name pos:line="2" pos:column="50">func<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">void<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">*<pos:position pos:line="2" pos:column="62"/></modifier></type><name pos:line="2" pos:column="62">arg<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="67">double<pos:position pos:line="2" pos:column="73"/></name></type> <name pos:line="2" pos:column="74">when<pos:position pos:line="2" pos:column="78"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="80">int<pos:position pos:line="2" pos:column="83"/></name></type> <name pos:line="2" pos:column="84">weight<pos:position pos:line="2" pos:column="90"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="92">bool<pos:position pos:line="2" pos:column="96"/></name></type> <name pos:line="2" pos:column="97">cbdata<pos:position pos:line="2" pos:column="103"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="104"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// Use zero timestamp for when=0 events: Many of them are async calls that</comment>
    <comment type="line" pos:line="5" pos:column="5">// must fire in the submission order. We cannot use current_dtime for them</comment>
    <comment type="line" pos:line="6" pos:column="5">// because it may decrease if system clock is adjusted backwards.</comment>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">double<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">timestamp<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><ternary><condition><expr><name pos:line="7" pos:column="30">when<pos:position pos:line="7" pos:column="34"/></name> <operator pos:line="7" pos:column="35">&gt;<pos:position pos:line="7" pos:column="39"/></operator> <literal type="number" pos:line="7" pos:column="37">0.0<pos:position pos:line="7" pos:column="40"/></literal></expr> ?<pos:position pos:line="7" pos:column="42"/></condition><then pos:line="7" pos:column="42"> <expr><name pos:line="7" pos:column="43">current_dtime<pos:position pos:line="7" pos:column="56"/></name> <operator pos:line="7" pos:column="57">+<pos:position pos:line="7" pos:column="58"/></operator> <name pos:line="7" pos:column="59">when<pos:position pos:line="7" pos:column="63"/></name></expr> <pos:position pos:line="7" pos:column="64"/></then><else pos:line="7" pos:column="64">: <expr><literal type="number" pos:line="7" pos:column="66">0<pos:position pos:line="7" pos:column="67"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="7" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">ev_entry<pos:position pos:line="8" pos:column="13"/></name> <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">event<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><operator pos:line="8" pos:column="23">new<pos:position pos:line="8" pos:column="26"/></operator> <call><name pos:line="8" pos:column="27">ev_entry<pos:position pos:line="8" pos:column="35"/></name><argument_list pos:line="8" pos:column="35">(<argument><expr><name pos:line="8" pos:column="36">name<pos:position pos:line="8" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="42">func<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="48">arg<pos:position pos:line="8" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="53">timestamp<pos:position pos:line="8" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="64">weight<pos:position pos:line="8" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="72">cbdata<pos:position pos:line="8" pos:column="78"/></name></expr></argument>)<pos:position pos:line="8" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="80"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">ev_entry<pos:position pos:line="10" pos:column="13"/></name> <modifier pos:line="10" pos:column="14">*<pos:position pos:line="10" pos:column="15"/></modifier><modifier pos:line="10" pos:column="15">*<pos:position pos:line="10" pos:column="16"/></modifier></type><name pos:line="10" pos:column="16">E<pos:position pos:line="10" pos:column="17"/></name></decl>;<pos:position pos:line="10" pos:column="18"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">debugs<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><literal type="number" pos:line="11" pos:column="12">41<pos:position pos:line="11" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="16">7<pos:position pos:line="11" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="19">HERE<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">&lt;&lt;<pos:position pos:line="11" pos:column="32"/></operator> <literal type="string" pos:line="11" pos:column="27">"schedule: Adding '"<pos:position pos:line="11" pos:column="47"/></literal> <operator pos:line="11" pos:column="48">&lt;&lt;<pos:position pos:line="11" pos:column="56"/></operator> <name pos:line="11" pos:column="51">name<pos:position pos:line="11" pos:column="55"/></name> <operator pos:line="11" pos:column="56">&lt;&lt;<pos:position pos:line="11" pos:column="64"/></operator> <literal type="string" pos:line="11" pos:column="59">"', in "<pos:position pos:line="11" pos:column="67"/></literal> <operator pos:line="11" pos:column="68">&lt;&lt;<pos:position pos:line="11" pos:column="76"/></operator> <name pos:line="11" pos:column="71">when<pos:position pos:line="11" pos:column="75"/></name> <operator pos:line="11" pos:column="76">&lt;&lt;<pos:position pos:line="11" pos:column="84"/></operator> <literal type="string" pos:line="11" pos:column="79">" seconds"<pos:position pos:line="11" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="91"/></expr_stmt>
    <comment type="block" pos:line="12" pos:column="5">/* Insert after the last event with the same or earlier time */</comment>

    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">E<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <operator pos:line="14" pos:column="14">&amp;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="15">tasks<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></init> <condition><expr><operator pos:line="14" pos:column="22">*<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">E<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></condition> <incr><expr><name pos:line="14" pos:column="26">E<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">=<pos:position pos:line="14" pos:column="29"/></operator> <operator pos:line="14" pos:column="30">&amp;<pos:position pos:line="14" pos:column="35"/></operator><name><operator pos:line="14" pos:column="31">(<pos:position pos:line="14" pos:column="32"/></operator><operator pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">E<pos:position pos:line="14" pos:column="34"/></name><operator pos:line="14" pos:column="34">)<pos:position pos:line="14" pos:column="35"/></operator><operator pos:line="14" pos:column="35">-&gt;<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="37">next<pos:position pos:line="14" pos:column="41"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="42"/></control> <block pos:line="14" pos:column="43">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><name><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><operator pos:line="15" pos:column="14">*<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="15">E<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">)<pos:position pos:line="15" pos:column="17"/></operator><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">when<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">&gt;<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="26">event<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">when<pos:position pos:line="15" pos:column="37"/></name></name></expr>)<pos:position pos:line="15" pos:column="38"/></condition><then pos:line="15" pos:column="38">
            <block type="pseudo"><break pos:line="16" pos:column="13">break;<pos:position pos:line="16" pos:column="19"/></break></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></for>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">event<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">next<pos:position pos:line="19" pos:column="16"/></name></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <operator pos:line="19" pos:column="19">*<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="20">E<pos:position pos:line="19" pos:column="21"/></name></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">E<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <name pos:line="20" pos:column="10">event<pos:position pos:line="20" pos:column="15"/></name></expr>;<pos:position pos:line="20" pos:column="16"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

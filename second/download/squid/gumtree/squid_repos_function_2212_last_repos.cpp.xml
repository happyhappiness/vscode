<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2212_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">TunnelStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">copy<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">size_t<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">len<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">Connection<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">from<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">Connection<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">&amp;<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="65">to<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="69">IOCB<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">completion<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="86"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">26<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <literal type="string" pos:line="4" pos:column="27">"Schedule Write"<pos:position pos:line="4" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="45"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">AsyncCall<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">::<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">Pointer<pos:position pos:line="5" pos:column="23"/></name></name></type> <name pos:line="5" pos:column="24">call<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><call><name pos:line="5" pos:column="31">commCbCall<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">(<argument><expr><literal type="number" pos:line="5" pos:column="42">5<pos:position pos:line="5" pos:column="43"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="5" pos:column="44">5<pos:position pos:line="5" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="47">"TunnelBlindCopyWriteHandler"<pos:position pos:line="5" pos:column="76"/></literal></expr></argument>,
                                         <argument><expr><call><name pos:line="6" pos:column="42">CommIoCbPtrFun<pos:position pos:line="6" pos:column="56"/></name><argument_list pos:line="6" pos:column="56">(<argument><expr><name pos:line="6" pos:column="57">completion<pos:position pos:line="6" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="69">this<pos:position pos:line="6" pos:column="73"/></name></expr></argument>)<pos:position pos:line="6" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="76"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">to<pos:position pos:line="7" pos:column="7"/></name><operator pos:line="7" pos:column="7">.<pos:position pos:line="7" pos:column="8"/></operator><name pos:line="7" pos:column="8">write<pos:position pos:line="7" pos:column="13"/></name></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name><name pos:line="7" pos:column="14">from<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">.<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">buf<pos:position pos:line="7" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="24">len<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="29">call<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="35">NULL<pos:position pos:line="7" pos:column="39"/></name></expr></argument>)<pos:position pos:line="7" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="41"/></expr_stmt>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

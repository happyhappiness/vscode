<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_124_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">resolveDestination<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">Ip<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">Address<pos:position pos:line="2" pos:column="31"/></name></name> <modifier pos:line="2" pos:column="32">&amp;<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="33">iaddr<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="39"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">addrinfo<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">AI<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugVerbose<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">(<argument><expr><literal type="number" pos:line="6" pos:column="18">2<pos:position pos:line="6" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="21">"Transport detected: IPv4"<pos:position pos:line="6" pos:column="47"/></literal> <operator pos:line="6" pos:column="48">&lt;&lt;<pos:position pos:line="6" pos:column="56"/></operator>
                 <operator pos:line="7" pos:column="18">(<pos:position pos:line="7" pos:column="19"/></operator><ternary><condition><expr><operator pos:line="7" pos:column="19">(<pos:position pos:line="7" pos:column="20"/></operator><name><name pos:line="7" pos:column="20">Ip<pos:position pos:line="7" pos:column="22"/></name><operator pos:line="7" pos:column="22">::<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="24">EnableIpv6<pos:position pos:line="7" pos:column="34"/></name></name> <operator pos:line="7" pos:column="35">&amp;<pos:position pos:line="7" pos:column="40"/></operator> <name pos:line="7" pos:column="37">IPV6_SPECIAL_V4MAPPING<pos:position pos:line="7" pos:column="59"/></name><operator pos:line="7" pos:column="59">)<pos:position pos:line="7" pos:column="60"/></operator></expr> ?<pos:position pos:line="7" pos:column="62"/></condition><then pos:line="7" pos:column="62"> <expr><literal type="string" pos:line="7" pos:column="63">"-mapped "<pos:position pos:line="7" pos:column="73"/></literal></expr> <pos:position pos:line="7" pos:column="74"/></then><else pos:line="7" pos:column="74">: <expr><literal type="string" pos:line="7" pos:column="76">""<pos:position pos:line="7" pos:column="78"/></literal></expr></else></ternary><operator pos:line="7" pos:column="78">)<pos:position pos:line="7" pos:column="79"/></operator> <operator pos:line="7" pos:column="80">&lt;&lt;<pos:position pos:line="7" pos:column="88"/></operator>
                 <operator pos:line="8" pos:column="18">(<pos:position pos:line="8" pos:column="19"/></operator><ternary><condition><expr><name><name pos:line="8" pos:column="19">Ip<pos:position pos:line="8" pos:column="21"/></name><operator pos:line="8" pos:column="21">::<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="23">EnableIpv6<pos:position pos:line="8" pos:column="33"/></name></name> <operator pos:line="8" pos:column="34">==<pos:position pos:line="8" pos:column="36"/></operator> <name pos:line="8" pos:column="37">IPV6_OFF<pos:position pos:line="8" pos:column="45"/></name></expr> ?<pos:position pos:line="8" pos:column="47"/></condition><then pos:line="8" pos:column="47"> <expr><literal type="string" pos:line="8" pos:column="48">"-only"<pos:position pos:line="8" pos:column="55"/></literal></expr> <pos:position pos:line="8" pos:column="56"/></then><else pos:line="8" pos:column="56">: <expr><literal type="string" pos:line="8" pos:column="58">" and IPv6"<pos:position pos:line="8" pos:column="69"/></literal></expr></else></ternary><operator pos:line="8" pos:column="69">)<pos:position pos:line="8" pos:column="70"/></operator> <operator pos:line="8" pos:column="71">&lt;&lt;<pos:position pos:line="8" pos:column="79"/></operator>
                 <operator pos:line="9" pos:column="18">(<pos:position pos:line="9" pos:column="19"/></operator><ternary><condition><expr><operator pos:line="9" pos:column="19">(<pos:position pos:line="9" pos:column="20"/></operator><name><name pos:line="9" pos:column="20">Ip<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">::<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">EnableIpv6<pos:position pos:line="9" pos:column="34"/></name></name> <operator pos:line="9" pos:column="35">&amp;<pos:position pos:line="9" pos:column="40"/></operator> <name pos:line="9" pos:column="37">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="9" pos:column="60"/></name><operator pos:line="9" pos:column="60">)<pos:position pos:line="9" pos:column="61"/></operator></expr> ?<pos:position pos:line="9" pos:column="63"/></condition><then pos:line="9" pos:column="63"> <expr><literal type="string" pos:line="9" pos:column="64">" split-stack"<pos:position pos:line="9" pos:column="78"/></literal></expr> <pos:position pos:line="9" pos:column="79"/></then><else pos:line="9" pos:column="79">: <expr><literal type="string" pos:line="9" pos:column="81">""<pos:position pos:line="9" pos:column="83"/></literal></expr></else></ternary><operator pos:line="9" pos:column="83">)<pos:position pos:line="9" pos:column="84"/></operator></expr></argument>)<pos:position pos:line="9" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="86"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name><name pos:line="11" pos:column="9">Transport<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">::<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">Config<pos:position pos:line="11" pos:column="26"/></name><operator pos:line="11" pos:column="26">.<pos:position pos:line="11" pos:column="27"/></operator><name pos:line="11" pos:column="27">localHost<pos:position pos:line="11" pos:column="36"/></name></name></expr>)<pos:position pos:line="11" pos:column="37"/></condition><then pos:line="11" pos:column="37"> <block pos:line="11" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugVerbose<pos:position pos:line="12" pos:column="21"/></name><argument_list pos:line="12" pos:column="21">(<argument><expr><literal type="number" pos:line="12" pos:column="22">2<pos:position pos:line="12" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="25">"Resolving "<pos:position pos:line="12" pos:column="37"/></literal> <operator pos:line="12" pos:column="38">&lt;&lt;<pos:position pos:line="12" pos:column="46"/></operator> <name><name pos:line="12" pos:column="41">Transport<pos:position pos:line="12" pos:column="50"/></name><operator pos:line="12" pos:column="50">::<pos:position pos:line="12" pos:column="52"/></operator><name pos:line="12" pos:column="52">Config<pos:position pos:line="12" pos:column="58"/></name><operator pos:line="12" pos:column="58">.<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="59">localHost<pos:position pos:line="12" pos:column="68"/></name></name> <operator pos:line="12" pos:column="69">&lt;&lt;<pos:position pos:line="12" pos:column="77"/></operator> <literal type="string" pos:line="12" pos:column="72">" ..."<pos:position pos:line="12" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="80"/></expr_stmt>

        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">( <expr><operator pos:line="14" pos:column="14">!<pos:position pos:line="14" pos:column="15"/></operator><call><name><name pos:line="14" pos:column="15">iaddr<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">.<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="21">GetHostByName<pos:position pos:line="14" pos:column="34"/></name></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name><name pos:line="14" pos:column="35">Transport<pos:position pos:line="14" pos:column="44"/></name><operator pos:line="14" pos:column="44">::<pos:position pos:line="14" pos:column="46"/></operator><name pos:line="14" pos:column="46">Config<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">.<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="53">localHost<pos:position pos:line="14" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr> )<pos:position pos:line="14" pos:column="65"/></condition><then pos:line="14" pos:column="65"> <block pos:line="14" pos:column="66">{
            <expr_stmt><expr><name><name pos:line="15" pos:column="13">std<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">::<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">cerr<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">&lt;&lt;<pos:position pos:line="15" pos:column="31"/></operator> <literal type="string" pos:line="15" pos:column="26">"ERROR: Cannot resolve "<pos:position pos:line="15" pos:column="50"/></literal> <operator pos:line="15" pos:column="51">&lt;&lt;<pos:position pos:line="15" pos:column="59"/></operator> <name><name pos:line="15" pos:column="54">Transport<pos:position pos:line="15" pos:column="63"/></name><operator pos:line="15" pos:column="63">::<pos:position pos:line="15" pos:column="65"/></operator><name pos:line="15" pos:column="65">Config<pos:position pos:line="15" pos:column="71"/></name><operator pos:line="15" pos:column="71">.<pos:position pos:line="15" pos:column="72"/></operator><name pos:line="15" pos:column="72">localHost<pos:position pos:line="15" pos:column="81"/></name></name> <operator pos:line="15" pos:column="82">&lt;&lt;<pos:position pos:line="15" pos:column="90"/></operator> <literal type="string" pos:line="15" pos:column="85">": Host unknown."<pos:position pos:line="15" pos:column="102"/></literal> <operator pos:line="15" pos:column="103">&lt;&lt;<pos:position pos:line="15" pos:column="111"/></operator> <name><name pos:line="15" pos:column="106">std<pos:position pos:line="15" pos:column="109"/></name><operator pos:line="15" pos:column="109">::<pos:position pos:line="15" pos:column="111"/></operator><name pos:line="15" pos:column="111">endl<pos:position pos:line="15" pos:column="115"/></name></name></expr>;<pos:position pos:line="15" pos:column="116"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">exit<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><literal type="number" pos:line="16" pos:column="18">1<pos:position pos:line="16" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
    }<pos:position pos:line="18" pos:column="6"/></block></then> <else pos:line="18" pos:column="7">else <block pos:line="18" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugVerbose<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><literal type="number" pos:line="19" pos:column="22">2<pos:position pos:line="19" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="25">"Resolving "<pos:position pos:line="19" pos:column="37"/></literal> <operator pos:line="19" pos:column="38">&lt;&lt;<pos:position pos:line="19" pos:column="46"/></operator> <name><name pos:line="19" pos:column="41">Transport<pos:position pos:line="19" pos:column="50"/></name><operator pos:line="19" pos:column="50">::<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="52">Config<pos:position pos:line="19" pos:column="58"/></name><operator pos:line="19" pos:column="58">.<pos:position pos:line="19" pos:column="59"/></operator><name pos:line="19" pos:column="59">hostname<pos:position pos:line="19" pos:column="67"/></name></name> <operator pos:line="19" pos:column="68">&lt;&lt;<pos:position pos:line="19" pos:column="76"/></operator> <literal type="string" pos:line="19" pos:column="71">" ..."<pos:position pos:line="19" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="79"/></expr_stmt>
        <comment type="block" pos:line="20" pos:column="9">/* Process the remote host name to locate the Protocol required
           in case we are being asked to link to another version of squid */</comment>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">( <expr><operator pos:line="22" pos:column="14">!<pos:position pos:line="22" pos:column="15"/></operator><call><name><name pos:line="22" pos:column="15">iaddr<pos:position pos:line="22" pos:column="20"/></name><operator pos:line="22" pos:column="20">.<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">GetHostByName<pos:position pos:line="22" pos:column="34"/></name></name><argument_list pos:line="22" pos:column="34">(<argument><expr><name><name pos:line="22" pos:column="35">Transport<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">::<pos:position pos:line="22" pos:column="46"/></operator><name pos:line="22" pos:column="46">Config<pos:position pos:line="22" pos:column="52"/></name><operator pos:line="22" pos:column="52">.<pos:position pos:line="22" pos:column="53"/></operator><name pos:line="22" pos:column="53">hostname<pos:position pos:line="22" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="62"/></argument_list></call></expr> )<pos:position pos:line="22" pos:column="64"/></condition><then pos:line="22" pos:column="64"> <block pos:line="22" pos:column="65">{
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">std<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">::<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">cerr<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">&lt;&lt;<pos:position pos:line="23" pos:column="31"/></operator> <literal type="string" pos:line="23" pos:column="26">"ERROR: Cannot resolve "<pos:position pos:line="23" pos:column="50"/></literal> <operator pos:line="23" pos:column="51">&lt;&lt;<pos:position pos:line="23" pos:column="59"/></operator> <name><name pos:line="23" pos:column="54">Transport<pos:position pos:line="23" pos:column="63"/></name><operator pos:line="23" pos:column="63">::<pos:position pos:line="23" pos:column="65"/></operator><name pos:line="23" pos:column="65">Config<pos:position pos:line="23" pos:column="71"/></name><operator pos:line="23" pos:column="71">.<pos:position pos:line="23" pos:column="72"/></operator><name pos:line="23" pos:column="72">hostname<pos:position pos:line="23" pos:column="80"/></name></name> <operator pos:line="23" pos:column="81">&lt;&lt;<pos:position pos:line="23" pos:column="89"/></operator> <literal type="string" pos:line="23" pos:column="84">": Host unknown."<pos:position pos:line="23" pos:column="101"/></literal> <operator pos:line="23" pos:column="102">&lt;&lt;<pos:position pos:line="23" pos:column="110"/></operator> <name><name pos:line="23" pos:column="105">std<pos:position pos:line="23" pos:column="108"/></name><operator pos:line="23" pos:column="108">::<pos:position pos:line="23" pos:column="110"/></operator><name pos:line="23" pos:column="110">endl<pos:position pos:line="23" pos:column="114"/></name></name></expr>;<pos:position pos:line="23" pos:column="115"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">exit<pos:position pos:line="24" pos:column="17"/></name><argument_list pos:line="24" pos:column="17">(<argument><expr><literal type="number" pos:line="24" pos:column="18">1<pos:position pos:line="24" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
    }<pos:position pos:line="26" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="28" pos:column="5">iaddr<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">.<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">getAddrInfo<pos:position pos:line="28" pos:column="22"/></name></name><argument_list pos:line="28" pos:column="22">(<argument><expr><name pos:line="28" pos:column="23">AI<pos:position pos:line="28" pos:column="25"/></name></expr></argument>)<pos:position pos:line="28" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">conn<pos:position pos:line="29" pos:column="14"/></name> <operator pos:line="29" pos:column="15">=<pos:position pos:line="29" pos:column="16"/></operator> <call><name pos:line="29" pos:column="17">socket<pos:position pos:line="29" pos:column="23"/></name><argument_list pos:line="29" pos:column="23">(<argument><expr><name><name pos:line="29" pos:column="24">AI<pos:position pos:line="29" pos:column="26"/></name><operator pos:line="29" pos:column="26">-&gt;<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="28">ai_family<pos:position pos:line="29" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="39">AI<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">-&gt;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="43">ai_socktype<pos:position pos:line="29" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="56">0<pos:position pos:line="29" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="58"/></argument_list></call><operator pos:line="29" pos:column="58">)<pos:position pos:line="29" pos:column="59"/></operator> <operator pos:line="29" pos:column="60">&lt;<pos:position pos:line="29" pos:column="64"/></operator> <literal type="number" pos:line="29" pos:column="62">0<pos:position pos:line="29" pos:column="63"/></literal></expr>)<pos:position pos:line="29" pos:column="64"/></condition><then pos:line="29" pos:column="64"> <block pos:line="29" pos:column="65">{
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">std<pos:position pos:line="30" pos:column="12"/></name><operator pos:line="30" pos:column="12">::<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">cerr<pos:position pos:line="30" pos:column="18"/></name></name> <operator pos:line="30" pos:column="19">&lt;&lt;<pos:position pos:line="30" pos:column="27"/></operator> <literal type="string" pos:line="30" pos:column="22">"ERROR: could not open socket to "<pos:position pos:line="30" pos:column="56"/></literal> <operator pos:line="30" pos:column="57">&lt;&lt;<pos:position pos:line="30" pos:column="65"/></operator> <name pos:line="30" pos:column="60">iaddr<pos:position pos:line="30" pos:column="65"/></name> <operator pos:line="30" pos:column="66">&lt;&lt;<pos:position pos:line="30" pos:column="74"/></operator> <name><name pos:line="30" pos:column="69">std<pos:position pos:line="30" pos:column="72"/></name><operator pos:line="30" pos:column="72">::<pos:position pos:line="30" pos:column="74"/></operator><name pos:line="30" pos:column="74">endl<pos:position pos:line="30" pos:column="78"/></name></name></expr>;<pos:position pos:line="30" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="31" pos:column="9">Ip<pos:position pos:line="31" pos:column="11"/></name><operator pos:line="31" pos:column="11">::<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="13">Address<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">::<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">FreeAddr<pos:position pos:line="31" pos:column="30"/></name></name><argument_list pos:line="31" pos:column="30">(<argument><expr><name pos:line="31" pos:column="31">AI<pos:position pos:line="31" pos:column="33"/></name></expr></argument>)<pos:position pos:line="31" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">exit<pos:position pos:line="32" pos:column="13"/></name><argument_list pos:line="32" pos:column="13">(<argument><expr><literal type="number" pos:line="32" pos:column="14">1<pos:position pos:line="32" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="34" pos:column="5">Ip<pos:position pos:line="34" pos:column="7"/></name><operator pos:line="34" pos:column="7">::<pos:position pos:line="34" pos:column="9"/></operator><name pos:line="34" pos:column="9">Address<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">::<pos:position pos:line="34" pos:column="18"/></operator><name pos:line="34" pos:column="18">FreeAddr<pos:position pos:line="34" pos:column="26"/></name></name><argument_list pos:line="34" pos:column="26">(<argument><expr><name pos:line="34" pos:column="27">AI<pos:position pos:line="34" pos:column="29"/></name></expr></argument>)<pos:position pos:line="34" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="31"/></expr_stmt>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name><name pos:line="36" pos:column="9">Transport<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">::<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">Config<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">.<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">localHost<pos:position pos:line="36" pos:column="36"/></name></name></expr>)<pos:position pos:line="36" pos:column="37"/></condition><then pos:line="36" pos:column="37"> <block pos:line="36" pos:column="38">{
        <if pos:line="37" pos:column="9">if <condition pos:line="37" pos:column="12">(<expr><call><name pos:line="37" pos:column="13">client_comm_bind<pos:position pos:line="37" pos:column="29"/></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name pos:line="37" pos:column="30">conn<pos:position pos:line="37" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="36">iaddr<pos:position pos:line="37" pos:column="41"/></name></expr></argument>)<pos:position pos:line="37" pos:column="42"/></argument_list></call> <operator pos:line="37" pos:column="43">&lt;<pos:position pos:line="37" pos:column="47"/></operator> <literal type="number" pos:line="37" pos:column="45">0<pos:position pos:line="37" pos:column="46"/></literal></expr>)<pos:position pos:line="37" pos:column="47"/></condition><then pos:line="37" pos:column="47"> <block pos:line="37" pos:column="48">{
            <expr_stmt><expr><name><name pos:line="38" pos:column="13">std<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">::<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">cerr<pos:position pos:line="38" pos:column="22"/></name></name> <operator pos:line="38" pos:column="23">&lt;&lt;<pos:position pos:line="38" pos:column="31"/></operator> <literal type="string" pos:line="38" pos:column="26">"ERROR: could not bind socket to "<pos:position pos:line="38" pos:column="60"/></literal> <operator pos:line="38" pos:column="61">&lt;&lt;<pos:position pos:line="38" pos:column="69"/></operator> <name pos:line="38" pos:column="64">iaddr<pos:position pos:line="38" pos:column="69"/></name> <operator pos:line="38" pos:column="70">&lt;&lt;<pos:position pos:line="38" pos:column="78"/></operator> <name><name pos:line="38" pos:column="73">std<pos:position pos:line="38" pos:column="76"/></name><operator pos:line="38" pos:column="76">::<pos:position pos:line="38" pos:column="78"/></operator><name pos:line="38" pos:column="78">endl<pos:position pos:line="38" pos:column="82"/></name></name></expr>;<pos:position pos:line="38" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">exit<pos:position pos:line="39" pos:column="17"/></name><argument_list pos:line="39" pos:column="17">(<argument><expr><literal type="number" pos:line="39" pos:column="18">1<pos:position pos:line="39" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="42" pos:column="9">iaddr<pos:position pos:line="42" pos:column="14"/></name><operator pos:line="42" pos:column="14">.<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">setEmpty<pos:position pos:line="42" pos:column="23"/></name></name><argument_list pos:line="42" pos:column="23">()<pos:position pos:line="42" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="44" pos:column="9">debugVerbose<pos:position pos:line="44" pos:column="21"/></name><argument_list pos:line="44" pos:column="21">(<argument><expr><literal type="number" pos:line="44" pos:column="22">2<pos:position pos:line="44" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="25">"Resolving... "<pos:position pos:line="44" pos:column="40"/></literal> <operator pos:line="44" pos:column="41">&lt;&lt;<pos:position pos:line="44" pos:column="49"/></operator> <name><name pos:line="44" pos:column="44">Transport<pos:position pos:line="44" pos:column="53"/></name><operator pos:line="44" pos:column="53">::<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="55">Config<pos:position pos:line="44" pos:column="61"/></name><operator pos:line="44" pos:column="61">.<pos:position pos:line="44" pos:column="62"/></operator><name pos:line="44" pos:column="62">hostname<pos:position pos:line="44" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="72"/></expr_stmt>

        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">( <expr><operator pos:line="46" pos:column="14">!<pos:position pos:line="46" pos:column="15"/></operator><call><name><name pos:line="46" pos:column="15">iaddr<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">.<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="21">GetHostByName<pos:position pos:line="46" pos:column="34"/></name></name><argument_list pos:line="46" pos:column="34">(<argument><expr><name><name pos:line="46" pos:column="35">Transport<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">::<pos:position pos:line="46" pos:column="46"/></operator><name pos:line="46" pos:column="46">Config<pos:position pos:line="46" pos:column="52"/></name><operator pos:line="46" pos:column="52">.<pos:position pos:line="46" pos:column="53"/></operator><name pos:line="46" pos:column="53">hostname<pos:position pos:line="46" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="62"/></argument_list></call></expr> )<pos:position pos:line="46" pos:column="64"/></condition><then pos:line="46" pos:column="64"> <block pos:line="46" pos:column="65">{
            <expr_stmt><expr><name><name pos:line="47" pos:column="13">std<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">::<pos:position pos:line="47" pos:column="18"/></operator><name pos:line="47" pos:column="18">cerr<pos:position pos:line="47" pos:column="22"/></name></name> <operator pos:line="47" pos:column="23">&lt;&lt;<pos:position pos:line="47" pos:column="31"/></operator> <literal type="string" pos:line="47" pos:column="26">"ERROR: Cannot resolve "<pos:position pos:line="47" pos:column="50"/></literal> <operator pos:line="47" pos:column="51">&lt;&lt;<pos:position pos:line="47" pos:column="59"/></operator> <name><name pos:line="47" pos:column="54">Transport<pos:position pos:line="47" pos:column="63"/></name><operator pos:line="47" pos:column="63">::<pos:position pos:line="47" pos:column="65"/></operator><name pos:line="47" pos:column="65">Config<pos:position pos:line="47" pos:column="71"/></name><operator pos:line="47" pos:column="71">.<pos:position pos:line="47" pos:column="72"/></operator><name pos:line="47" pos:column="72">hostname<pos:position pos:line="47" pos:column="80"/></name></name> <operator pos:line="47" pos:column="81">&lt;&lt;<pos:position pos:line="47" pos:column="89"/></operator> <literal type="string" pos:line="47" pos:column="84">": Host unknown."<pos:position pos:line="47" pos:column="101"/></literal> <operator pos:line="47" pos:column="102">&lt;&lt;<pos:position pos:line="47" pos:column="110"/></operator> <name><name pos:line="47" pos:column="105">std<pos:position pos:line="47" pos:column="108"/></name><operator pos:line="47" pos:column="108">::<pos:position pos:line="47" pos:column="110"/></operator><name pos:line="47" pos:column="110">endl<pos:position pos:line="47" pos:column="114"/></name></name></expr>;<pos:position pos:line="47" pos:column="115"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">exit<pos:position pos:line="48" pos:column="17"/></name><argument_list pos:line="48" pos:column="17">(<argument><expr><literal type="number" pos:line="48" pos:column="18">1<pos:position pos:line="48" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></then></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="52" pos:column="5">iaddr<pos:position pos:line="52" pos:column="10"/></name><operator pos:line="52" pos:column="10">.<pos:position pos:line="52" pos:column="11"/></operator><name pos:line="52" pos:column="11">port<pos:position pos:line="52" pos:column="15"/></name></name><argument_list pos:line="52" pos:column="15">(<argument><expr><name><name pos:line="52" pos:column="16">Transport<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">::<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="27">Config<pos:position pos:line="52" pos:column="33"/></name><operator pos:line="52" pos:column="33">.<pos:position pos:line="52" pos:column="34"/></operator><name pos:line="52" pos:column="34">port<pos:position pos:line="52" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

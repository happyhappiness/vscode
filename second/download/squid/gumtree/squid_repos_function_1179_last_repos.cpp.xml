<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1179_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SignalEngine<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">doShutdown<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">time_t<pos:position pos:line="2" pos:column="32"/></name></type> <name pos:line="2" pos:column="33">wait<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">AvoidSignalAction<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">(<argument><expr><literal type="string" pos:line="4" pos:column="27">"shutdown"<pos:position pos:line="4" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="39">do_shutdown<pos:position pos:line="4" pos:column="50"/></name></expr></argument>)<pos:position pos:line="4" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="52"/></condition><then pos:line="4" pos:column="52">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">1<pos:position pos:line="7" pos:column="13"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="15">DBG_IMPORTANT<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="30">"Preparing for shutdown after "<pos:position pos:line="7" pos:column="61"/></literal> <operator pos:line="7" pos:column="62">&lt;&lt;<pos:position pos:line="7" pos:column="70"/></operator> <name><name pos:line="7" pos:column="65">statCounter<pos:position pos:line="7" pos:column="76"/></name><operator pos:line="7" pos:column="76">.<pos:position pos:line="7" pos:column="77"/></operator><name pos:line="7" pos:column="77">client_http<pos:position pos:line="7" pos:column="88"/></name><operator pos:line="7" pos:column="88">.<pos:position pos:line="7" pos:column="89"/></operator><name pos:line="7" pos:column="89">requests<pos:position pos:line="7" pos:column="97"/></name></name> <operator pos:line="7" pos:column="98">&lt;&lt;<pos:position pos:line="7" pos:column="106"/></operator> <literal type="string" pos:line="7" pos:column="101">" requests"<pos:position pos:line="7" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="114"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">1<pos:position pos:line="8" pos:column="13"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="15">DBG_IMPORTANT<pos:position pos:line="8" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="30">"Waiting "<pos:position pos:line="8" pos:column="40"/></literal> <operator pos:line="8" pos:column="41">&lt;&lt;<pos:position pos:line="8" pos:column="49"/></operator> <name pos:line="8" pos:column="44">wait<pos:position pos:line="8" pos:column="48"/></name> <operator pos:line="8" pos:column="49">&lt;&lt;<pos:position pos:line="8" pos:column="57"/></operator> <literal type="string" pos:line="8" pos:column="52">" seconds for active connections to finish"<pos:position pos:line="8" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="97"/></expr_stmt>

<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">KILL_PARENT_OPT<pos:position pos:line="10" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><call><name pos:line="11" pos:column="10">IamMasterProcess<pos:position pos:line="11" pos:column="26"/></name><argument_list pos:line="11" pos:column="26">()<pos:position pos:line="11" pos:column="28"/></argument_list></call> <operator pos:line="11" pos:column="29">&amp;&amp;<pos:position pos:line="11" pos:column="39"/></operator> <operator pos:line="11" pos:column="32">!<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">parentKillNotified<pos:position pos:line="11" pos:column="51"/></name> <operator pos:line="11" pos:column="52">&amp;&amp;<pos:position pos:line="11" pos:column="62"/></operator> <name pos:line="11" pos:column="55">ShutdownSignal<pos:position pos:line="11" pos:column="69"/></name> <operator pos:line="11" pos:column="70">&gt;<pos:position pos:line="11" pos:column="74"/></operator> <literal type="number" pos:line="11" pos:column="72">0<pos:position pos:line="11" pos:column="73"/></literal> <operator pos:line="11" pos:column="74">&amp;&amp;<pos:position pos:line="11" pos:column="84"/></operator> <name pos:line="11" pos:column="77">parentPid<pos:position pos:line="11" pos:column="86"/></name> <operator pos:line="11" pos:column="87">&gt;<pos:position pos:line="11" pos:column="91"/></operator> <literal type="number" pos:line="11" pos:column="89">1<pos:position pos:line="11" pos:column="90"/></literal></expr>)<pos:position pos:line="11" pos:column="91"/></condition><then pos:line="11" pos:column="91"> <block pos:line="11" pos:column="92">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">1<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="19">DBG_IMPORTANT<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="34">"Killing master process, pid "<pos:position pos:line="12" pos:column="64"/></literal> <operator pos:line="12" pos:column="65">&lt;&lt;<pos:position pos:line="12" pos:column="73"/></operator> <name pos:line="12" pos:column="68">parentPid<pos:position pos:line="12" pos:column="77"/></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="79"/></expr_stmt>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">kill<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">parentPid<pos:position pos:line="13" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">ShutdownSignal<pos:position pos:line="13" pos:column="43"/></name></expr></argument>)<pos:position pos:line="13" pos:column="44"/></argument_list></call> <operator pos:line="13" pos:column="45">&lt;<pos:position pos:line="13" pos:column="49"/></operator> <literal type="number" pos:line="13" pos:column="47">0<pos:position pos:line="13" pos:column="48"/></literal></expr>)<pos:position pos:line="13" pos:column="49"/></condition><then pos:line="13" pos:column="49"> <block pos:line="13" pos:column="50">{
            <decl_stmt><decl><type><name pos:line="14" pos:column="13">int<pos:position pos:line="14" pos:column="16"/></name></type> <name pos:line="14" pos:column="17">xerrno<pos:position pos:line="14" pos:column="23"/></name> <init pos:line="14" pos:column="24">= <expr><name pos:line="14" pos:column="26">errno<pos:position pos:line="14" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="32"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">debugs<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="number" pos:line="15" pos:column="20">1<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="23">DBG_IMPORTANT<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="38">"kill "<pos:position pos:line="15" pos:column="45"/></literal> <operator pos:line="15" pos:column="46">&lt;&lt;<pos:position pos:line="15" pos:column="54"/></operator> <name pos:line="15" pos:column="49">parentPid<pos:position pos:line="15" pos:column="58"/></name> <operator pos:line="15" pos:column="59">&lt;&lt;<pos:position pos:line="15" pos:column="67"/></operator> <literal type="string" pos:line="15" pos:column="62">": "<pos:position pos:line="15" pos:column="66"/></literal> <operator pos:line="15" pos:column="67">&lt;&lt;<pos:position pos:line="15" pos:column="75"/></operator> <call><name pos:line="15" pos:column="70">xstrerr<pos:position pos:line="15" pos:column="77"/></name><argument_list pos:line="15" pos:column="77">(<argument><expr><name pos:line="15" pos:column="78">xerrno<pos:position pos:line="15" pos:column="84"/></name></expr></argument>)<pos:position pos:line="15" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="87"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="17" pos:column="9">parentKillNotified<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <literal type="boolean" pos:line="17" pos:column="30">true<pos:position pos:line="17" pos:column="34"/></literal></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name pos:line="21" pos:column="9">shutting_down<pos:position pos:line="21" pos:column="22"/></name></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
<cpp:if pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">if<pos:position pos:line="22" pos:column="4"/></cpp:directive> <expr><operator pos:line="22" pos:column="5">!<pos:position pos:line="22" pos:column="6"/></operator><name pos:line="22" pos:column="6">KILL_PARENT_OPT<pos:position pos:line="22" pos:column="21"/></name></expr></cpp:if>
        <comment type="line" pos:line="23" pos:column="9">// Already a shutdown signal has received and shutdown is in progress.</comment>
        <comment type="line" pos:line="24" pos:column="9">// Shutdown as soon as possible.</comment>
        <expr_stmt><expr><name pos:line="25" pos:column="9">wait<pos:position pos:line="25" pos:column="13"/></name> <operator pos:line="25" pos:column="14">=<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="16">0<pos:position pos:line="25" pos:column="17"/></literal></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="27" pos:column="6"/></block></then> <else pos:line="27" pos:column="7">else <block pos:line="27" pos:column="12">{
        <expr_stmt><expr><name pos:line="28" pos:column="9">shutting_down<pos:position pos:line="28" pos:column="22"/></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <literal type="number" pos:line="28" pos:column="25">1<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>

        <comment type="block" pos:line="30" pos:column="9">/* run the closure code which can be shared with reconfigure */</comment>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">serverConnectionsClose<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">()<pos:position pos:line="31" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="33" pos:column="9">RunRegisteredHere<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name><name pos:line="33" pos:column="27">RegisteredRunner<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">::<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="45">startShutdown<pos:position pos:line="33" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
    }<pos:position pos:line="34" pos:column="6"/></block></else></if>

<cpp:if pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">if<pos:position pos:line="36" pos:column="4"/></cpp:directive> <expr><name pos:line="36" pos:column="5">USE_WIN32_SERVICE<pos:position pos:line="36" pos:column="22"/></name></expr></cpp:if>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">WIN32_svcstatusupdate<pos:position pos:line="37" pos:column="26"/></name><argument_list pos:line="37" pos:column="26">(<argument><expr><name pos:line="37" pos:column="27">SERVICE_STOP_PENDING<pos:position pos:line="37" pos:column="47"/></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="49">(<pos:position pos:line="37" pos:column="50"/></operator><name pos:line="37" pos:column="50">wait<pos:position pos:line="37" pos:column="54"/></name> <operator pos:line="37" pos:column="55">+<pos:position pos:line="37" pos:column="56"/></operator> <literal type="number" pos:line="37" pos:column="57">1<pos:position pos:line="37" pos:column="58"/></literal><operator pos:line="37" pos:column="58">)<pos:position pos:line="37" pos:column="59"/></operator> <operator pos:line="37" pos:column="60">*<pos:position pos:line="37" pos:column="61"/></operator> <literal type="number" pos:line="37" pos:column="62">1000<pos:position pos:line="37" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="68"/></expr_stmt>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">eventAdd<pos:position pos:line="40" pos:column="13"/></name><argument_list pos:line="40" pos:column="13">(<argument><expr><literal type="string" pos:line="40" pos:column="14">"SquidShutdown"<pos:position pos:line="40" pos:column="29"/></literal></expr></argument>, <argument><expr><operator pos:line="40" pos:column="31">&amp;<pos:position pos:line="40" pos:column="36"/></operator><name pos:line="40" pos:column="32">FinalShutdownRunners<pos:position pos:line="40" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="54">this<pos:position pos:line="40" pos:column="58"/></name></expr></argument>, <argument><expr><call pos:line="40" pos:column="60">(<name pos:line="40" pos:column="61">double<pos:position pos:line="40" pos:column="67"/></name>) <argument_list pos:line="40" pos:column="69">(<argument><expr><name pos:line="40" pos:column="70">wait<pos:position pos:line="40" pos:column="74"/></name> <operator pos:line="40" pos:column="75">+<pos:position pos:line="40" pos:column="76"/></operator> <literal type="number" pos:line="40" pos:column="77">1<pos:position pos:line="40" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="79"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="81">1<pos:position pos:line="40" pos:column="82"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="40" pos:column="84">false<pos:position pos:line="40" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="91"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

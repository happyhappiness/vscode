<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_531_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">u_char<pos:position pos:line="1" pos:column="7"/></name> <modifier pos:line="1" pos:column="8">*<pos:position pos:line="1" pos:column="9"/></modifier></type>
<name pos:line="2" pos:column="1">snmp_var_EncodeVarBind<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">u_char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">Buffer<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">BufLenP<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="3" pos:column="24">variable_list<pos:position pos:line="3" pos:column="37"/></name> <modifier pos:line="3" pos:column="38">*<pos:position pos:line="3" pos:column="39"/></modifier></type> <name pos:line="3" pos:column="40">VarList<pos:position pos:line="3" pos:column="47"/></name></decl></parameter>,
                       <parameter><decl><type><name pos:line="4" pos:column="24">int<pos:position pos:line="4" pos:column="27"/></name></type> <name pos:line="4" pos:column="28">Version<pos:position pos:line="4" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="4" pos:column="36"/></parameter_list>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">variable_list<pos:position pos:line="6" pos:column="25"/></name></name> <modifier pos:line="6" pos:column="26">*<pos:position pos:line="6" pos:column="27"/></modifier></type><name pos:line="6" pos:column="27">Vars<pos:position pos:line="6" pos:column="31"/></name></decl>;<pos:position pos:line="6" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">u_char<pos:position pos:line="7" pos:column="11"/></name> <modifier pos:line="7" pos:column="12">*<pos:position pos:line="7" pos:column="13"/></modifier></type><name pos:line="7" pos:column="13">bufp<pos:position pos:line="7" pos:column="17"/></name></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">u_char<pos:position pos:line="8" pos:column="11"/></name> <modifier pos:line="8" pos:column="12">*<pos:position pos:line="8" pos:column="13"/></modifier></type><name pos:line="8" pos:column="13">HeaderStart<pos:position pos:line="8" pos:column="24"/></name></decl>;<pos:position pos:line="8" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">u_char<pos:position pos:line="9" pos:column="11"/></name> <modifier pos:line="9" pos:column="12">*<pos:position pos:line="9" pos:column="13"/></modifier></type><name pos:line="9" pos:column="13">HeaderEnd<pos:position pos:line="9" pos:column="22"/></name></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">FakeArg<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><operator pos:line="10" pos:column="19">*<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="20">BufLenP<pos:position pos:line="10" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="28"/></decl_stmt>

    <expr_stmt><expr><name pos:line="12" pos:column="5">bufp<pos:position pos:line="12" pos:column="9"/></name> <operator pos:line="12" pos:column="10">=<pos:position pos:line="12" pos:column="11"/></operator> <name pos:line="12" pos:column="12">Buffer<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>

    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">Vars<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">=<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">VarList<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></init> <condition><expr><name pos:line="14" pos:column="26">Vars<pos:position pos:line="14" pos:column="30"/></name></expr>;<pos:position pos:line="14" pos:column="31"/></condition> <incr><expr><name pos:line="14" pos:column="32">Vars<pos:position pos:line="14" pos:column="36"/></name> <operator pos:line="14" pos:column="37">=<pos:position pos:line="14" pos:column="38"/></operator> <name><name pos:line="14" pos:column="39">Vars<pos:position pos:line="14" pos:column="43"/></name><operator pos:line="14" pos:column="43">-&gt;<pos:position pos:line="14" pos:column="48"/></operator><name pos:line="14" pos:column="45">next_variable<pos:position pos:line="14" pos:column="58"/></name></name></expr></incr>)<pos:position pos:line="14" pos:column="59"/></control> <block pos:line="14" pos:column="60">{

        <comment type="block" pos:line="16" pos:column="9">/* Build the header for this variable
         *
         * Use Maximum size.
         */</comment>
        <expr_stmt><expr><name pos:line="20" pos:column="9">HeaderStart<pos:position pos:line="20" pos:column="20"/></name> <operator pos:line="20" pos:column="21">=<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="23">bufp<pos:position pos:line="20" pos:column="27"/></name></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">HeaderEnd<pos:position pos:line="21" pos:column="18"/></name> <operator pos:line="21" pos:column="19">=<pos:position pos:line="21" pos:column="20"/></operator> <call><name pos:line="21" pos:column="21">asn_build_header<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">HeaderStart<pos:position pos:line="21" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">BufLenP<pos:position pos:line="21" pos:column="58"/></name></expr></argument>,
                                     <argument><expr><call pos:line="22" pos:column="38">(<name pos:line="22" pos:column="39">u_char<pos:position pos:line="22" pos:column="45"/></name>) <argument_list pos:line="22" pos:column="47">(<argument><expr><name pos:line="22" pos:column="48">ASN_SEQUENCE<pos:position pos:line="22" pos:column="60"/></name> <operator pos:line="22" pos:column="61">|<pos:position pos:line="22" pos:column="62"/></operator> <name pos:line="22" pos:column="63">ASN_CONSTRUCTOR<pos:position pos:line="22" pos:column="78"/></name></expr></argument>)<pos:position pos:line="22" pos:column="79"/></argument_list></call></expr></argument>,
                                     <argument><expr><name pos:line="23" pos:column="38">FakeArg<pos:position pos:line="23" pos:column="45"/></name></expr></argument>)<pos:position pos:line="23" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="47"/></expr_stmt>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">HeaderEnd<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">==<pos:position pos:line="24" pos:column="25"/></operator> <name pos:line="24" pos:column="26">NULL<pos:position pos:line="24" pos:column="30"/></name></expr>)<pos:position pos:line="24" pos:column="31"/></condition><then pos:line="24" pos:column="31">
            <block type="pseudo"><return pos:line="25" pos:column="13">return <expr><operator pos:line="25" pos:column="20">(<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">NULL<pos:position pos:line="25" pos:column="25"/></name><operator pos:line="25" pos:column="25">)<pos:position pos:line="25" pos:column="26"/></operator></expr>;<pos:position pos:line="25" pos:column="27"/></return></block></then></if>

        <comment type="block" pos:line="27" pos:column="9">/* Now, let's put the Object Identifier into the buffer */</comment>
        <expr_stmt><expr><name pos:line="28" pos:column="9">bufp<pos:position pos:line="28" pos:column="13"/></name> <operator pos:line="28" pos:column="14">=<pos:position pos:line="28" pos:column="15"/></operator> <call><name pos:line="28" pos:column="16">asn_build_objid<pos:position pos:line="28" pos:column="31"/></name><argument_list pos:line="28" pos:column="31">(<argument><expr><name pos:line="28" pos:column="32">HeaderEnd<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="43">BufLenP<pos:position pos:line="28" pos:column="50"/></name></expr></argument>,
                               <argument><expr><call pos:line="29" pos:column="32">(<name pos:line="29" pos:column="33">u_char<pos:position pos:line="29" pos:column="39"/></name>) <argument_list pos:line="29" pos:column="41">(<argument><expr><name pos:line="29" pos:column="42">ASN_UNIVERSAL<pos:position pos:line="29" pos:column="55"/></name> <operator pos:line="29" pos:column="56">|<pos:position pos:line="29" pos:column="57"/></operator>
                                         <name pos:line="30" pos:column="42">ASN_PRIMITIVE<pos:position pos:line="30" pos:column="55"/></name> <operator pos:line="30" pos:column="56">|<pos:position pos:line="30" pos:column="57"/></operator>
                                         <name pos:line="31" pos:column="42">ASN_OBJECT_ID<pos:position pos:line="31" pos:column="55"/></name></expr></argument>)<pos:position pos:line="31" pos:column="56"/></argument_list></call></expr></argument>,
                               <argument><expr><name><name pos:line="32" pos:column="32">Vars<pos:position pos:line="32" pos:column="36"/></name><operator pos:line="32" pos:column="36">-&gt;<pos:position pos:line="32" pos:column="41"/></operator><name pos:line="32" pos:column="38">name<pos:position pos:line="32" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="44">Vars<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">-&gt;<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="50">name_length<pos:position pos:line="32" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><name pos:line="33" pos:column="13">bufp<pos:position pos:line="33" pos:column="17"/></name> <operator pos:line="33" pos:column="18">==<pos:position pos:line="33" pos:column="20"/></operator> <name pos:line="33" pos:column="21">NULL<pos:position pos:line="33" pos:column="25"/></name></expr>)<pos:position pos:line="33" pos:column="26"/></condition><then pos:line="33" pos:column="26">
            <block type="pseudo"><return pos:line="34" pos:column="13">return <expr><operator pos:line="34" pos:column="20">(<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="21">NULL<pos:position pos:line="34" pos:column="25"/></name><operator pos:line="34" pos:column="25">)<pos:position pos:line="34" pos:column="26"/></operator></expr>;<pos:position pos:line="34" pos:column="27"/></return></block></then></if>

        <comment type="block" pos:line="36" pos:column="9">/* Now put the data in */</comment>
        <switch pos:line="37" pos:column="9">switch <condition pos:line="37" pos:column="16">(<expr><name><name pos:line="37" pos:column="17">Vars<pos:position pos:line="37" pos:column="21"/></name><operator pos:line="37" pos:column="21">-&gt;<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="23">type<pos:position pos:line="37" pos:column="27"/></name></name></expr>)<pos:position pos:line="37" pos:column="28"/></condition> <block pos:line="37" pos:column="29">{

        <case pos:line="39" pos:column="9">case <expr><name pos:line="39" pos:column="14">ASN_INTEGER<pos:position pos:line="39" pos:column="25"/></name></expr>:<pos:position pos:line="39" pos:column="26"/></case>
            <expr_stmt><expr><name pos:line="40" pos:column="13">bufp<pos:position pos:line="40" pos:column="17"/></name> <operator pos:line="40" pos:column="18">=<pos:position pos:line="40" pos:column="19"/></operator> <call><name pos:line="40" pos:column="20">asn_build_int<pos:position pos:line="40" pos:column="33"/></name><argument_list pos:line="40" pos:column="33">(<argument><expr><name pos:line="40" pos:column="34">bufp<pos:position pos:line="40" pos:column="38"/></name></expr></argument>,
                                 <argument><expr><name pos:line="41" pos:column="34">BufLenP<pos:position pos:line="41" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="43">Vars<pos:position pos:line="41" pos:column="47"/></name><operator pos:line="41" pos:column="47">-&gt;<pos:position pos:line="41" pos:column="52"/></operator><name pos:line="41" pos:column="49">type<pos:position pos:line="41" pos:column="53"/></name></name></expr></argument>,
                                 <argument><expr><operator pos:line="42" pos:column="34">(<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="35">int<pos:position pos:line="42" pos:column="38"/></name> <operator pos:line="42" pos:column="39">*<pos:position pos:line="42" pos:column="40"/></operator><operator pos:line="42" pos:column="40">)<pos:position pos:line="42" pos:column="41"/></operator> <name><name pos:line="42" pos:column="42">Vars<pos:position pos:line="42" pos:column="46"/></name><operator pos:line="42" pos:column="46">-&gt;<pos:position pos:line="42" pos:column="51"/></operator><name pos:line="42" pos:column="48">val<pos:position pos:line="42" pos:column="51"/></name><operator pos:line="42" pos:column="51">.<pos:position pos:line="42" pos:column="52"/></operator><name pos:line="42" pos:column="52">integer<pos:position pos:line="42" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="61">Vars<pos:position pos:line="42" pos:column="65"/></name><operator pos:line="42" pos:column="65">-&gt;<pos:position pos:line="42" pos:column="70"/></operator><name pos:line="42" pos:column="67">val_len<pos:position pos:line="42" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="76"/></expr_stmt>
            <break pos:line="43" pos:column="13">break;<pos:position pos:line="43" pos:column="19"/></break>

        <case pos:line="45" pos:column="9">case <expr><name pos:line="45" pos:column="14">SMI_COUNTER32<pos:position pos:line="45" pos:column="27"/></name></expr>:<pos:position pos:line="45" pos:column="28"/></case>
        <case pos:line="46" pos:column="9">case <expr><name pos:line="46" pos:column="14">SMI_GAUGE32<pos:position pos:line="46" pos:column="25"/></name></expr>:<pos:position pos:line="46" pos:column="26"/></case>
            <comment type="block" pos:line="47" pos:column="13">/*  case SMI_UNSIGNED32: */</comment>
        <case pos:line="48" pos:column="9">case <expr><name pos:line="48" pos:column="14">SMI_TIMETICKS<pos:position pos:line="48" pos:column="27"/></name></expr>:<pos:position pos:line="48" pos:column="28"/></case>
            <expr_stmt><expr><name pos:line="49" pos:column="13">bufp<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">=<pos:position pos:line="49" pos:column="19"/></operator> <call><name pos:line="49" pos:column="20">asn_build_unsigned_int<pos:position pos:line="49" pos:column="42"/></name><argument_list pos:line="49" pos:column="42">(<argument><expr><name pos:line="49" pos:column="43">bufp<pos:position pos:line="49" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="49">BufLenP<pos:position pos:line="49" pos:column="56"/></name></expr></argument>,
                                          <argument><expr><name><name pos:line="50" pos:column="43">Vars<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">-&gt;<pos:position pos:line="50" pos:column="52"/></operator><name pos:line="50" pos:column="49">type<pos:position pos:line="50" pos:column="53"/></name></name></expr></argument>,
                                          <argument><expr><operator pos:line="51" pos:column="43">(<pos:position pos:line="51" pos:column="44"/></operator><name pos:line="51" pos:column="44">u_int<pos:position pos:line="51" pos:column="49"/></name> <operator pos:line="51" pos:column="50">*<pos:position pos:line="51" pos:column="51"/></operator><operator pos:line="51" pos:column="51">)<pos:position pos:line="51" pos:column="52"/></operator> <name><name pos:line="51" pos:column="53">Vars<pos:position pos:line="51" pos:column="57"/></name><operator pos:line="51" pos:column="57">-&gt;<pos:position pos:line="51" pos:column="62"/></operator><name pos:line="51" pos:column="59">val<pos:position pos:line="51" pos:column="62"/></name><operator pos:line="51" pos:column="62">.<pos:position pos:line="51" pos:column="63"/></operator><name pos:line="51" pos:column="63">integer<pos:position pos:line="51" pos:column="70"/></name></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="72">Vars<pos:position pos:line="51" pos:column="76"/></name><operator pos:line="51" pos:column="76">-&gt;<pos:position pos:line="51" pos:column="81"/></operator><name pos:line="51" pos:column="78">val_len<pos:position pos:line="51" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="87"/></expr_stmt>
            <break pos:line="52" pos:column="13">break;<pos:position pos:line="52" pos:column="19"/></break>

        <case pos:line="54" pos:column="9">case <expr><name pos:line="54" pos:column="14">ASN_OCTET_STR<pos:position pos:line="54" pos:column="27"/></name></expr>:<pos:position pos:line="54" pos:column="28"/></case>
        <case pos:line="55" pos:column="9">case <expr><name pos:line="55" pos:column="14">SMI_IPADDRESS<pos:position pos:line="55" pos:column="27"/></name></expr>:<pos:position pos:line="55" pos:column="28"/></case>
        <case pos:line="56" pos:column="9">case <expr><name pos:line="56" pos:column="14">SMI_OPAQUE<pos:position pos:line="56" pos:column="24"/></name></expr>:<pos:position pos:line="56" pos:column="25"/></case>
            <expr_stmt><expr><name pos:line="57" pos:column="13">bufp<pos:position pos:line="57" pos:column="17"/></name> <operator pos:line="57" pos:column="18">=<pos:position pos:line="57" pos:column="19"/></operator> <call><name pos:line="57" pos:column="20">asn_build_string<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name pos:line="57" pos:column="37">bufp<pos:position pos:line="57" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="43">BufLenP<pos:position pos:line="57" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="57" pos:column="52">Vars<pos:position pos:line="57" pos:column="56"/></name><operator pos:line="57" pos:column="56">-&gt;<pos:position pos:line="57" pos:column="61"/></operator><name pos:line="57" pos:column="58">type<pos:position pos:line="57" pos:column="62"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="58" pos:column="37">Vars<pos:position pos:line="58" pos:column="41"/></name><operator pos:line="58" pos:column="41">-&gt;<pos:position pos:line="58" pos:column="46"/></operator><name pos:line="58" pos:column="43">val<pos:position pos:line="58" pos:column="46"/></name><operator pos:line="58" pos:column="46">.<pos:position pos:line="58" pos:column="47"/></operator><name pos:line="58" pos:column="47">string<pos:position pos:line="58" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="58" pos:column="55">Vars<pos:position pos:line="58" pos:column="59"/></name><operator pos:line="58" pos:column="59">-&gt;<pos:position pos:line="58" pos:column="64"/></operator><name pos:line="58" pos:column="61">val_len<pos:position pos:line="58" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="58" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="70"/></expr_stmt>
            <break pos:line="59" pos:column="13">break;<pos:position pos:line="59" pos:column="19"/></break>

        <case pos:line="61" pos:column="9">case <expr><name pos:line="61" pos:column="14">ASN_OBJECT_ID<pos:position pos:line="61" pos:column="27"/></name></expr>:<pos:position pos:line="61" pos:column="28"/></case>
            <expr_stmt><expr><name pos:line="62" pos:column="13">bufp<pos:position pos:line="62" pos:column="17"/></name> <operator pos:line="62" pos:column="18">=<pos:position pos:line="62" pos:column="19"/></operator> <call><name pos:line="62" pos:column="20">asn_build_objid<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><name pos:line="62" pos:column="36">bufp<pos:position pos:line="62" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="42">BufLenP<pos:position pos:line="62" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="51">Vars<pos:position pos:line="62" pos:column="55"/></name><operator pos:line="62" pos:column="55">-&gt;<pos:position pos:line="62" pos:column="60"/></operator><name pos:line="62" pos:column="57">type<pos:position pos:line="62" pos:column="61"/></name></name></expr></argument>,
                                   <argument><expr><operator pos:line="63" pos:column="36">(<pos:position pos:line="63" pos:column="37"/></operator><name pos:line="63" pos:column="37">oid<pos:position pos:line="63" pos:column="40"/></name> <operator pos:line="63" pos:column="41">*<pos:position pos:line="63" pos:column="42"/></operator><operator pos:line="63" pos:column="42">)<pos:position pos:line="63" pos:column="43"/></operator> <name><name pos:line="63" pos:column="44">Vars<pos:position pos:line="63" pos:column="48"/></name><operator pos:line="63" pos:column="48">-&gt;<pos:position pos:line="63" pos:column="53"/></operator><name pos:line="63" pos:column="50">val<pos:position pos:line="63" pos:column="53"/></name><operator pos:line="63" pos:column="53">.<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="54">objid<pos:position pos:line="63" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="63" pos:column="61">Vars<pos:position pos:line="63" pos:column="65"/></name><operator pos:line="63" pos:column="65">-&gt;<pos:position pos:line="63" pos:column="70"/></operator><name pos:line="63" pos:column="67">val_len<pos:position pos:line="63" pos:column="74"/></name></name> <operator pos:line="63" pos:column="75">/<pos:position pos:line="63" pos:column="76"/></operator> <sizeof pos:line="63" pos:column="77">sizeof<argument_list pos:line="63" pos:column="83">(<argument><expr><name pos:line="63" pos:column="84">oid<pos:position pos:line="63" pos:column="87"/></name></expr></argument>)<pos:position pos:line="63" pos:column="88"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="63" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="90"/></expr_stmt>
            <break pos:line="64" pos:column="13">break;<pos:position pos:line="64" pos:column="19"/></break>

        <case pos:line="66" pos:column="9">case <expr><name pos:line="66" pos:column="14">SMI_NOSUCHINSTANCE<pos:position pos:line="66" pos:column="32"/></name></expr>:<pos:position pos:line="66" pos:column="33"/></case>
        <case pos:line="67" pos:column="9">case <expr><name pos:line="67" pos:column="14">SMI_NOSUCHOBJECT<pos:position pos:line="67" pos:column="30"/></name></expr>:<pos:position pos:line="67" pos:column="31"/></case>
        <case pos:line="68" pos:column="9">case <expr><name pos:line="68" pos:column="14">SMI_ENDOFMIBVIEW<pos:position pos:line="68" pos:column="30"/></name></expr>:<pos:position pos:line="68" pos:column="31"/></case>
            <if pos:line="69" pos:column="13">if <condition pos:line="69" pos:column="16">(<expr><name pos:line="69" pos:column="17">Version<pos:position pos:line="69" pos:column="24"/></name> <operator pos:line="69" pos:column="25">==<pos:position pos:line="69" pos:column="27"/></operator> <name pos:line="69" pos:column="28">SNMP_VERSION_1<pos:position pos:line="69" pos:column="42"/></name></expr>)<pos:position pos:line="69" pos:column="43"/></condition><then pos:line="69" pos:column="43"> <block pos:line="69" pos:column="44">{
                <comment type="block" pos:line="70" pos:column="17">/* SNMP Version 1 does not support these error codes. */</comment>
                <expr_stmt><expr><name pos:line="71" pos:column="17">bufp<pos:position pos:line="71" pos:column="21"/></name> <operator pos:line="71" pos:column="22">=<pos:position pos:line="71" pos:column="23"/></operator> <call><name pos:line="71" pos:column="24">asn_build_null<pos:position pos:line="71" pos:column="38"/></name><argument_list pos:line="71" pos:column="38">(<argument><expr><name pos:line="71" pos:column="39">bufp<pos:position pos:line="71" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="45">BufLenP<pos:position pos:line="71" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="54">SMI_NOSUCHOBJECT<pos:position pos:line="71" pos:column="70"/></name></expr></argument>)<pos:position pos:line="71" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="72"/></expr_stmt>
            }<pos:position pos:line="72" pos:column="14"/></block></then> <else pos:line="72" pos:column="15">else <block pos:line="72" pos:column="20">{
                <expr_stmt><expr><name pos:line="73" pos:column="17">bufp<pos:position pos:line="73" pos:column="21"/></name> <operator pos:line="73" pos:column="22">=<pos:position pos:line="73" pos:column="23"/></operator> <call><name pos:line="73" pos:column="24">asn_build_exception<pos:position pos:line="73" pos:column="43"/></name><argument_list pos:line="73" pos:column="43">(<argument><expr><name pos:line="73" pos:column="44">bufp<pos:position pos:line="73" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="50">BufLenP<pos:position pos:line="73" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="73" pos:column="59">Vars<pos:position pos:line="73" pos:column="63"/></name><operator pos:line="73" pos:column="63">-&gt;<pos:position pos:line="73" pos:column="68"/></operator><name pos:line="73" pos:column="65">type<pos:position pos:line="73" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="71"/></expr_stmt>
            }<pos:position pos:line="74" pos:column="14"/></block></else></if>
            <break pos:line="75" pos:column="13">break;<pos:position pos:line="75" pos:column="19"/></break>

        <case pos:line="77" pos:column="9">case <expr><name pos:line="77" pos:column="14">ASN_NULL<pos:position pos:line="77" pos:column="22"/></name></expr>:<pos:position pos:line="77" pos:column="23"/></case>
            <expr_stmt><expr><name pos:line="78" pos:column="13">bufp<pos:position pos:line="78" pos:column="17"/></name> <operator pos:line="78" pos:column="18">=<pos:position pos:line="78" pos:column="19"/></operator> <call><name pos:line="78" pos:column="20">asn_build_null<pos:position pos:line="78" pos:column="34"/></name><argument_list pos:line="78" pos:column="34">(<argument><expr><name pos:line="78" pos:column="35">bufp<pos:position pos:line="78" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="41">BufLenP<pos:position pos:line="78" pos:column="48"/></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="50">Vars<pos:position pos:line="78" pos:column="54"/></name><operator pos:line="78" pos:column="54">-&gt;<pos:position pos:line="78" pos:column="59"/></operator><name pos:line="78" pos:column="56">type<pos:position pos:line="78" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="62"/></expr_stmt>
            <break pos:line="79" pos:column="13">break;<pos:position pos:line="79" pos:column="19"/></break>

        <case pos:line="81" pos:column="9">case <expr><name pos:line="81" pos:column="14">SMI_COUNTER64<pos:position pos:line="81" pos:column="27"/></name></expr>:<pos:position pos:line="81" pos:column="28"/></case>
            <expr_stmt><expr><call><name pos:line="82" pos:column="13">snmplib_debug<pos:position pos:line="82" pos:column="26"/></name><argument_list pos:line="82" pos:column="26">(<argument><expr><literal type="number" pos:line="82" pos:column="27">2<pos:position pos:line="82" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="82" pos:column="30">"Unable to encode type SMI_COUNTER64!\n"<pos:position pos:line="82" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="72"/></expr_stmt>
            <comment type="block" pos:line="83" pos:column="13">/* Fall through */</comment>

        <default pos:line="85" pos:column="9">default:<pos:position pos:line="85" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">snmp_set_api_error<pos:position pos:line="86" pos:column="31"/></name><argument_list pos:line="86" pos:column="31">(<argument><expr><name pos:line="86" pos:column="32">SNMPERR_UNSUPPORTED_TYPE<pos:position pos:line="86" pos:column="56"/></name></expr></argument>)<pos:position pos:line="86" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="58"/></expr_stmt>
            <return pos:line="87" pos:column="13">return <expr><operator pos:line="87" pos:column="20">(<pos:position pos:line="87" pos:column="21"/></operator><name pos:line="87" pos:column="21">NULL<pos:position pos:line="87" pos:column="25"/></name><operator pos:line="87" pos:column="25">)<pos:position pos:line="87" pos:column="26"/></operator></expr>;<pos:position pos:line="87" pos:column="27"/></return>
        }<pos:position pos:line="88" pos:column="10"/></block></switch>

        <comment type="block" pos:line="90" pos:column="9">/* ASSERT:  bufp should now point to the next valid byte. */</comment>
        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">bufp<pos:position pos:line="91" pos:column="17"/></name> <operator pos:line="91" pos:column="18">==<pos:position pos:line="91" pos:column="20"/></operator> <name pos:line="91" pos:column="21">NULL<pos:position pos:line="91" pos:column="25"/></name></expr>)<pos:position pos:line="91" pos:column="26"/></condition><then pos:line="91" pos:column="26">
            <block type="pseudo"><return pos:line="92" pos:column="13">return <expr><operator pos:line="92" pos:column="20">(<pos:position pos:line="92" pos:column="21"/></operator><name pos:line="92" pos:column="21">NULL<pos:position pos:line="92" pos:column="25"/></name><operator pos:line="92" pos:column="25">)<pos:position pos:line="92" pos:column="26"/></operator></expr>;<pos:position pos:line="92" pos:column="27"/></return></block></then></if>

        <comment type="block" pos:line="94" pos:column="9">/* Rebuild the header with the appropriate length */</comment>
        <expr_stmt><expr><name pos:line="95" pos:column="9">HeaderEnd<pos:position pos:line="95" pos:column="18"/></name> <operator pos:line="95" pos:column="19">=<pos:position pos:line="95" pos:column="20"/></operator> <call><name pos:line="95" pos:column="21">asn_build_header<pos:position pos:line="95" pos:column="37"/></name><argument_list pos:line="95" pos:column="37">(<argument><expr><name pos:line="95" pos:column="38">HeaderStart<pos:position pos:line="95" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="95" pos:column="51">&amp;<pos:position pos:line="95" pos:column="56"/></operator><name pos:line="95" pos:column="52">FakeArg<pos:position pos:line="95" pos:column="59"/></name></expr></argument>,
                                     <argument><expr><call pos:line="96" pos:column="38">(<name pos:line="96" pos:column="39">u_char<pos:position pos:line="96" pos:column="45"/></name>) <argument_list pos:line="96" pos:column="47">(<argument><expr><name pos:line="96" pos:column="48">ASN_SEQUENCE<pos:position pos:line="96" pos:column="60"/></name> <operator pos:line="96" pos:column="61">|<pos:position pos:line="96" pos:column="62"/></operator> <name pos:line="96" pos:column="63">ASN_CONSTRUCTOR<pos:position pos:line="96" pos:column="78"/></name></expr></argument>)<pos:position pos:line="96" pos:column="79"/></argument_list></call></expr></argument>,
                                     <argument><expr><operator pos:line="97" pos:column="38">(<pos:position pos:line="97" pos:column="39"/></operator><name pos:line="97" pos:column="39">bufp<pos:position pos:line="97" pos:column="43"/></name> <operator pos:line="97" pos:column="44">-<pos:position pos:line="97" pos:column="45"/></operator> <name pos:line="97" pos:column="46">HeaderEnd<pos:position pos:line="97" pos:column="55"/></name><operator pos:line="97" pos:column="55">)<pos:position pos:line="97" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="97" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="58"/></expr_stmt>

        <comment type="block" pos:line="99" pos:column="9">/* Returns NULL */</comment>
        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">HeaderEnd<pos:position pos:line="100" pos:column="22"/></name> <operator pos:line="100" pos:column="23">==<pos:position pos:line="100" pos:column="25"/></operator> <name pos:line="100" pos:column="26">NULL<pos:position pos:line="100" pos:column="30"/></name></expr>)<pos:position pos:line="100" pos:column="31"/></condition><then pos:line="100" pos:column="31">
            <block type="pseudo"><return pos:line="101" pos:column="13">return <expr><operator pos:line="101" pos:column="20">(<pos:position pos:line="101" pos:column="21"/></operator><name pos:line="101" pos:column="21">NULL<pos:position pos:line="101" pos:column="25"/></name><operator pos:line="101" pos:column="25">)<pos:position pos:line="101" pos:column="26"/></operator></expr>;<pos:position pos:line="101" pos:column="27"/></return></block></then></if>

    }<pos:position pos:line="103" pos:column="6"/></block></for>

    <comment type="block" pos:line="105" pos:column="5">/* or the end of the entire thing */</comment>
    <return pos:line="106" pos:column="5">return <expr><operator pos:line="106" pos:column="12">(<pos:position pos:line="106" pos:column="13"/></operator><name pos:line="106" pos:column="13">bufp<pos:position pos:line="106" pos:column="17"/></name><operator pos:line="106" pos:column="17">)<pos:position pos:line="106" pos:column="18"/></operator></expr>;<pos:position pos:line="106" pos:column="19"/></return>
}<pos:position pos:line="107" pos:column="2"/></block></function></unit>

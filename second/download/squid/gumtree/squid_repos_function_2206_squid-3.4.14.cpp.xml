<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2206_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">FwdState<pos:position pos:line="1" pos:column="14"/></name><operator pos:line="1" pos:column="14">::<pos:position pos:line="1" pos:column="16"/></operator><name pos:line="1" pos:column="16">start<pos:position pos:line="1" pos:column="21"/></name></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">Pointer<pos:position pos:line="1" pos:column="29"/></name></type> <name pos:line="1" pos:column="30">aSelf<pos:position pos:line="1" pos:column="35"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="36"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">// Protect ourselves from being destroyed when the only Server pointing</comment>
    <comment type="line" pos:line="4" pos:column="5">// to us is gone (while we expect to talk to more Servers later).</comment>
    <comment type="line" pos:line="5" pos:column="5">// Once we set self, we are responsible for clearing it when we do not</comment>
    <comment type="line" pos:line="6" pos:column="5">// expect to talk to any servers.</comment>
    <expr_stmt><expr><name pos:line="7" pos:column="5">self<pos:position pos:line="7" pos:column="9"/></name> <operator pos:line="7" pos:column="10">=<pos:position pos:line="7" pos:column="11"/></operator> <name pos:line="7" pos:column="12">aSelf<pos:position pos:line="7" pos:column="17"/></name></expr>;<pos:position pos:line="7" pos:column="18"/></expr_stmt> <comment type="line" pos:line="7" pos:column="19">// refcounted</comment>

    <comment type="line" pos:line="9" pos:column="5">// We hope that either the store entry aborts or peer is selected.</comment>
    <comment type="line" pos:line="10" pos:column="5">// Otherwise we are going to leak our object.</comment>

    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">entry<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">registerAbort<pos:position pos:line="12" pos:column="25"/></name></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name><name pos:line="12" pos:column="26">FwdState<pos:position pos:line="12" pos:column="34"/></name><operator pos:line="12" pos:column="34">::<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="36">abort<pos:position pos:line="12" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">this<pos:position pos:line="12" pos:column="47"/></name></expr></argument>)<pos:position pos:line="12" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="49"/></expr_stmt>

<cpp:if pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">if<pos:position pos:line="14" pos:column="4"/></cpp:directive> <expr><name pos:line="14" pos:column="5">STRICT_ORIGINAL_DST<pos:position pos:line="14" pos:column="24"/></name></expr></cpp:if>
    <comment type="line" pos:line="15" pos:column="5">// Bug 3243: CVE 2009-0801</comment>
    <comment type="line" pos:line="16" pos:column="5">// Bypass of browser same-origin access control in intercepted communication</comment>
    <comment type="line" pos:line="17" pos:column="5">// To resolve this we must force DIRECT and only to the original client destination.</comment>
    <decl_stmt><decl><type><specifier pos:line="18" pos:column="5">const<pos:position pos:line="18" pos:column="10"/></specifier> <name pos:line="18" pos:column="11">bool<pos:position pos:line="18" pos:column="15"/></name></type> <name pos:line="18" pos:column="16">isIntercepted<pos:position pos:line="18" pos:column="29"/></name> <init pos:line="18" pos:column="30">= <expr><name pos:line="18" pos:column="32">request<pos:position pos:line="18" pos:column="39"/></name> <operator pos:line="18" pos:column="40">&amp;&amp;<pos:position pos:line="18" pos:column="50"/></operator> <operator pos:line="18" pos:column="43">!<pos:position pos:line="18" pos:column="44"/></operator><name><name pos:line="18" pos:column="44">request<pos:position pos:line="18" pos:column="51"/></name><operator pos:line="18" pos:column="51">-&gt;<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="53">flags<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">.<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="59">redirected<pos:position pos:line="18" pos:column="69"/></name></name> <operator pos:line="18" pos:column="70">&amp;&amp;<pos:position pos:line="18" pos:column="80"/></operator> <operator pos:line="18" pos:column="73">(<pos:position pos:line="18" pos:column="74"/></operator><name><name pos:line="18" pos:column="74">request<pos:position pos:line="18" pos:column="81"/></name><operator pos:line="18" pos:column="81">-&gt;<pos:position pos:line="18" pos:column="86"/></operator><name pos:line="18" pos:column="83">flags<pos:position pos:line="18" pos:column="88"/></name><operator pos:line="18" pos:column="88">.<pos:position pos:line="18" pos:column="89"/></operator><name pos:line="18" pos:column="89">intercepted<pos:position pos:line="18" pos:column="100"/></name></name> <operator pos:line="18" pos:column="101">||<pos:position pos:line="18" pos:column="103"/></operator> <name><name pos:line="18" pos:column="104">request<pos:position pos:line="18" pos:column="111"/></name><operator pos:line="18" pos:column="111">-&gt;<pos:position pos:line="18" pos:column="116"/></operator><name pos:line="18" pos:column="113">flags<pos:position pos:line="18" pos:column="118"/></name><operator pos:line="18" pos:column="118">.<pos:position pos:line="18" pos:column="119"/></operator><name pos:line="18" pos:column="119">interceptTproxy<pos:position pos:line="18" pos:column="134"/></name></name><operator pos:line="18" pos:column="134">)<pos:position pos:line="18" pos:column="135"/></operator></expr></init></decl>;<pos:position pos:line="18" pos:column="136"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">const<pos:position pos:line="19" pos:column="10"/></specifier> <name pos:line="19" pos:column="11">bool<pos:position pos:line="19" pos:column="15"/></name></type> <name pos:line="19" pos:column="16">useOriginalDst<pos:position pos:line="19" pos:column="30"/></name> <init pos:line="19" pos:column="31">= <expr><name><name pos:line="19" pos:column="33">Config<pos:position pos:line="19" pos:column="39"/></name><operator pos:line="19" pos:column="39">.<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="40">onoff<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">.<pos:position pos:line="19" pos:column="46"/></operator><name pos:line="19" pos:column="46">client_dst_passthru<pos:position pos:line="19" pos:column="65"/></name></name> <operator pos:line="19" pos:column="66">||<pos:position pos:line="19" pos:column="68"/></operator> <operator pos:line="19" pos:column="69">(<pos:position pos:line="19" pos:column="70"/></operator><name pos:line="19" pos:column="70">request<pos:position pos:line="19" pos:column="77"/></name> <operator pos:line="19" pos:column="78">&amp;&amp;<pos:position pos:line="19" pos:column="88"/></operator> <operator pos:line="19" pos:column="81">!<pos:position pos:line="19" pos:column="82"/></operator><name><name pos:line="19" pos:column="82">request<pos:position pos:line="19" pos:column="89"/></name><operator pos:line="19" pos:column="89">-&gt;<pos:position pos:line="19" pos:column="94"/></operator><name pos:line="19" pos:column="91">flags<pos:position pos:line="19" pos:column="96"/></name><operator pos:line="19" pos:column="96">.<pos:position pos:line="19" pos:column="97"/></operator><name pos:line="19" pos:column="97">hostVerified<pos:position pos:line="19" pos:column="109"/></name></name><operator pos:line="19" pos:column="109">)<pos:position pos:line="19" pos:column="110"/></operator></expr></init></decl>;<pos:position pos:line="19" pos:column="111"/></decl_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">isIntercepted<pos:position pos:line="20" pos:column="22"/></name> <operator pos:line="20" pos:column="23">&amp;&amp;<pos:position pos:line="20" pos:column="33"/></operator> <name pos:line="20" pos:column="26">useOriginalDst<pos:position pos:line="20" pos:column="40"/></name></expr>)<pos:position pos:line="20" pos:column="41"/></condition><then pos:line="20" pos:column="41"> <block pos:line="20" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">selectPeerForIntercepted<pos:position pos:line="21" pos:column="33"/></name><argument_list pos:line="21" pos:column="33">()<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="36"/></expr_stmt>
        <comment type="line" pos:line="22" pos:column="9">// 3.2 does not suppro re-wrapping inside CONNECT.</comment>
        <comment type="line" pos:line="23" pos:column="9">// our only alternative is to fake destination "found" and continue with the forwarding.</comment>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">startConnectionOrFail<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">()<pos:position pos:line="24" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="33"/></expr_stmt>
        <return pos:line="25" pos:column="9">return;<pos:position pos:line="25" pos:column="16"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>
<cpp:endif pos:line="27" pos:column="1">#<cpp:directive pos:line="27" pos:column="2">endif<pos:position pos:line="27" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="line" pos:line="29" pos:column="5">// do full route options selection</comment>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">peerSelect<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><operator pos:line="30" pos:column="16">&amp;<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="17">serverDestinations<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="37">request<pos:position pos:line="30" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="46">entry<pos:position pos:line="30" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="53">fwdPeerSelectionCompleteWrapper<pos:position pos:line="30" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="86">this<pos:position pos:line="30" pos:column="90"/></name></expr></argument>)<pos:position pos:line="30" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="92"/></expr_stmt>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

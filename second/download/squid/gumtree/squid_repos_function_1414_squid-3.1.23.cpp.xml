<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1414_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">serverConnectionsClose<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">void<pos:position pos:line="2" pos:column="28"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">shutting_down<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">||<pos:position pos:line="4" pos:column="28"/></operator> <name pos:line="4" pos:column="29">reconfiguring<pos:position pos:line="4" pos:column="42"/></name></expr></argument>)<pos:position pos:line="4" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">clientHttpConnectionsClose<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">()<pos:position pos:line="5" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">icpConnectionShutdown<pos:position pos:line="6" pos:column="26"/></name><argument_list pos:line="6" pos:column="26">()<pos:position pos:line="6" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="29"/></expr_stmt>
<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">USE_HTCP<pos:position pos:line="7" pos:column="13"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">htcpSocketShutdown<pos:position pos:line="9" pos:column="23"/></name><argument_list pos:line="9" pos:column="23">()<pos:position pos:line="9" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">icmpEngine<pos:position pos:line="12" pos:column="15"/></name><operator pos:line="12" pos:column="15">.<pos:position pos:line="12" pos:column="16"/></operator><name pos:line="12" pos:column="16">Close<pos:position pos:line="12" pos:column="21"/></name></name><argument_list pos:line="12" pos:column="21">()<pos:position pos:line="12" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="24"/></expr_stmt>
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">SQUID_SNMP<pos:position pos:line="13" pos:column="18"/></name></cpp:ifdef>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">snmpConnectionShutdown<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">()<pos:position pos:line="15" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><name pos:line="17" pos:column="5">USE_WCCP<pos:position pos:line="17" pos:column="13"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">wccpConnectionClose<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">()<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="27"/></expr_stmt>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">if<pos:position pos:line="21" pos:column="4"/></cpp:directive> <expr><name pos:line="21" pos:column="5">USE_WCCPv2<pos:position pos:line="21" pos:column="15"/></name></expr></cpp:if>

    <expr_stmt><expr><call><name pos:line="23" pos:column="5">wccp2ConnectionClose<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">()<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
<cpp:endif pos:line="24" pos:column="1">#<cpp:directive pos:line="24" pos:column="2">endif<pos:position pos:line="24" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">asnFreeMemory<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">()<pos:position pos:line="26" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="21"/></expr_stmt>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

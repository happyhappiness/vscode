<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1165_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreEntry<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">swapOutFileClose<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">how<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="38"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">mem_obj<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">!=<pos:position pos:line="4" pos:column="22"/></operator> <name pos:line="4" pos:column="23">NULL<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">debugs<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><literal type="number" pos:line="5" pos:column="12">20<pos:position pos:line="5" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="16">3<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="19">"storeSwapOutFileClose: "<pos:position pos:line="5" pos:column="44"/></literal> <operator pos:line="5" pos:column="45">&lt;&lt;<pos:position pos:line="5" pos:column="53"/></operator> <call><name pos:line="5" pos:column="48">getMD5Text<pos:position pos:line="5" pos:column="58"/></name><argument_list pos:line="5" pos:column="58">()<pos:position pos:line="5" pos:column="60"/></argument_list></call> <operator pos:line="5" pos:column="61">&lt;&lt;<pos:position pos:line="5" pos:column="69"/></operator> <literal type="string" pos:line="5" pos:column="64">" how="<pos:position pos:line="5" pos:column="71"/></literal> <operator pos:line="5" pos:column="72">&lt;&lt;<pos:position pos:line="5" pos:column="80"/></operator> <name pos:line="5" pos:column="75">how<pos:position pos:line="5" pos:column="78"/></name></expr></argument>)<pos:position pos:line="5" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">20<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">3<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"storeSwapOutFileClose: sio = "<pos:position pos:line="6" pos:column="50"/></literal> <operator pos:line="6" pos:column="51">&lt;&lt;<pos:position pos:line="6" pos:column="59"/></operator> <call><name><name pos:line="6" pos:column="54">mem_obj<pos:position pos:line="6" pos:column="61"/></name><operator pos:line="6" pos:column="61">-&gt;<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="63">swapout<pos:position pos:line="6" pos:column="70"/></name><operator pos:line="6" pos:column="70">.<pos:position pos:line="6" pos:column="71"/></operator><name pos:line="6" pos:column="71">sio<pos:position pos:line="6" pos:column="74"/></name><operator pos:line="6" pos:column="74">.<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="75">getRaw<pos:position pos:line="6" pos:column="81"/></name></name><argument_list pos:line="6" pos:column="81">()<pos:position pos:line="6" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="85"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">mem_obj<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">swapout<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">sio<pos:position pos:line="8" pos:column="29"/></name></name> <operator pos:line="8" pos:column="30">==<pos:position pos:line="8" pos:column="32"/></operator> <name pos:line="8" pos:column="33">NULL<pos:position pos:line="8" pos:column="37"/></name></expr>)<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">storeClose<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name><name pos:line="11" pos:column="16">mem_obj<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">-&gt;<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="25">swapout<pos:position pos:line="11" pos:column="32"/></name><operator pos:line="11" pos:column="32">.<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="33">sio<pos:position pos:line="11" pos:column="36"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="38">how<pos:position pos:line="11" pos:column="41"/></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

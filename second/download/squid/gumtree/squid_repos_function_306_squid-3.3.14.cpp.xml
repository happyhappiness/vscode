<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_306_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">get_memberof<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name><name pos:line="2" pos:column="14">struct<pos:position pos:line="2" pos:column="20"/></name> <name pos:line="2" pos:column="21">main_args<pos:position pos:line="2" pos:column="30"/></name></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">margs<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">user<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="51">char<pos:position pos:line="2" pos:column="55"/></name> <modifier pos:line="2" pos:column="56">*<pos:position pos:line="2" pos:column="57"/></modifier></type><name pos:line="2" pos:column="57">domain<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">char<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type><name pos:line="2" pos:column="71">group<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="77"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">LDAP<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">ld<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">LDAPMessage<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">res<pos:position pos:line="5" pos:column="21"/></name></decl>;<pos:position pos:line="5" pos:column="22"/></decl_stmt>
<cpp:ifndef pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">ifndef<pos:position pos:line="6" pos:column="8"/></cpp:directive> <name pos:line="6" pos:column="9">HAVE_SUN_LDAP_SDK<pos:position pos:line="6" pos:column="26"/></name></cpp:ifndef>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">ldap_debug<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">struct<pos:position pos:line="9" pos:column="11"/></name> <name pos:line="9" pos:column="12">ldap_creds<pos:position pos:line="9" pos:column="22"/></name></name> <modifier pos:line="9" pos:column="23">*<pos:position pos:line="9" pos:column="24"/></modifier></type><name pos:line="9" pos:column="24">lcreds<pos:position pos:line="9" pos:column="30"/></name> <init pos:line="9" pos:column="31">= <expr><name pos:line="9" pos:column="33">NULL<pos:position pos:line="9" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">bindp<pos:position pos:line="10" pos:column="16"/></name> <init pos:line="10" pos:column="17">= <expr><name pos:line="10" pos:column="19">NULL<pos:position pos:line="10" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">filter<pos:position pos:line="11" pos:column="17"/></name> <init pos:line="11" pos:column="18">= <expr><name pos:line="11" pos:column="20">NULL<pos:position pos:line="11" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">search_exp<pos:position pos:line="12" pos:column="21"/></name></decl>;<pos:position pos:line="12" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">struct<pos:position pos:line="13" pos:column="11"/></name> <name pos:line="13" pos:column="12">timeval<pos:position pos:line="13" pos:column="19"/></name></name></type> <name pos:line="13" pos:column="20">searchtime<pos:position pos:line="13" pos:column="30"/></name></decl>;<pos:position pos:line="13" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">i<pos:position pos:line="14" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="12">j<pos:position pos:line="14" pos:column="13"/></name></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="15">rc<pos:position pos:line="14" pos:column="17"/></name> <init pos:line="14" pos:column="18">= <expr><literal type="number" pos:line="14" pos:column="20">0<pos:position pos:line="14" pos:column="21"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="14" pos:column="23">kc<pos:position pos:line="14" pos:column="25"/></name> <init pos:line="14" pos:column="26">= <expr><literal type="number" pos:line="14" pos:column="28">1<pos:position pos:line="14" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">retval<pos:position pos:line="15" pos:column="15"/></name></decl>;<pos:position pos:line="15" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name> <modifier pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></modifier><modifier pos:line="16" pos:column="11">*<pos:position pos:line="16" pos:column="12"/></modifier></type><name pos:line="16" pos:column="12">attr_value<pos:position pos:line="16" pos:column="22"/></name> <init pos:line="16" pos:column="23">= <expr><name pos:line="16" pos:column="25">NULL<pos:position pos:line="16" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">char<pos:position pos:line="17" pos:column="9"/></name> <modifier pos:line="17" pos:column="10">*<pos:position pos:line="17" pos:column="11"/></modifier></type><name pos:line="17" pos:column="11">av<pos:position pos:line="17" pos:column="13"/></name> <init pos:line="17" pos:column="14">= <expr><name pos:line="17" pos:column="16">NULL<pos:position pos:line="17" pos:column="20"/></name></expr></init></decl>, <modifier pos:line="17" pos:column="22">*<pos:position pos:line="17" pos:column="23"/></modifier><decl><type ref="prev"/><name pos:line="17" pos:column="23">avp<pos:position pos:line="17" pos:column="26"/></name> <init pos:line="17" pos:column="27">= <expr><name pos:line="17" pos:column="29">NULL<pos:position pos:line="17" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="17" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">max_attr<pos:position pos:line="18" pos:column="17"/></name> <init pos:line="18" pos:column="18">= <expr><literal type="number" pos:line="18" pos:column="20">0<pos:position pos:line="18" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="19" pos:column="5">struct<pos:position pos:line="19" pos:column="11"/></name> <name pos:line="19" pos:column="12">hstruct<pos:position pos:line="19" pos:column="19"/></name></name> <modifier pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></modifier></type><name pos:line="19" pos:column="21">hlist<pos:position pos:line="19" pos:column="26"/></name> <init pos:line="19" pos:column="27">= <expr><name pos:line="19" pos:column="29">NULL<pos:position pos:line="19" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">nhosts<pos:position pos:line="20" pos:column="15"/></name> <init pos:line="20" pos:column="16">= <expr><literal type="number" pos:line="20" pos:column="18">0<pos:position pos:line="20" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="21" pos:column="5">char<pos:position pos:line="21" pos:column="9"/></name> <modifier pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></modifier></type><name pos:line="21" pos:column="11">hostname<pos:position pos:line="21" pos:column="19"/></name></decl>;<pos:position pos:line="21" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="22" pos:column="5">char<pos:position pos:line="22" pos:column="9"/></name> <modifier pos:line="22" pos:column="10">*<pos:position pos:line="22" pos:column="11"/></modifier></type><name pos:line="22" pos:column="11">host<pos:position pos:line="22" pos:column="15"/></name></decl>;<pos:position pos:line="22" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">int<pos:position pos:line="23" pos:column="8"/></name></type> <name pos:line="23" pos:column="9">port<pos:position pos:line="23" pos:column="13"/></name></decl>;<pos:position pos:line="23" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">char<pos:position pos:line="24" pos:column="9"/></name> <modifier pos:line="24" pos:column="10">*<pos:position pos:line="24" pos:column="11"/></modifier></type><name pos:line="24" pos:column="11">ssl<pos:position pos:line="24" pos:column="14"/></name> <init pos:line="24" pos:column="15">= <expr><name pos:line="24" pos:column="17">NULL<pos:position pos:line="24" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="24" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">char<pos:position pos:line="25" pos:column="9"/></name> <modifier pos:line="25" pos:column="10">*<pos:position pos:line="25" pos:column="11"/></modifier></type><name pos:line="25" pos:column="11">p<pos:position pos:line="25" pos:column="12"/></name></decl>;<pos:position pos:line="25" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name> <modifier pos:line="26" pos:column="10">*<pos:position pos:line="26" pos:column="11"/></modifier></type><name pos:line="26" pos:column="11">ldap_filter_esc<pos:position pos:line="26" pos:column="26"/></name> <init pos:line="26" pos:column="27">= <expr><name pos:line="26" pos:column="29">NULL<pos:position pos:line="26" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">searchtime<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">.<pos:position pos:line="28" pos:column="16"/></operator><name pos:line="28" pos:column="16">tv_sec<pos:position pos:line="28" pos:column="22"/></name></name> <operator pos:line="28" pos:column="23">=<pos:position pos:line="28" pos:column="24"/></operator> <name pos:line="28" pos:column="25">SEARCH_TIMEOUT<pos:position pos:line="28" pos:column="39"/></name></expr>;<pos:position pos:line="28" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">searchtime<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">.<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="16">tv_usec<pos:position pos:line="29" pos:column="23"/></name></name> <operator pos:line="29" pos:column="24">=<pos:position pos:line="29" pos:column="25"/></operator> <literal type="number" pos:line="29" pos:column="26">0<pos:position pos:line="29" pos:column="27"/></literal></expr>;<pos:position pos:line="29" pos:column="28"/></expr_stmt>
    <comment type="block" pos:line="30" pos:column="5">/*
     * Fill Kerberos memory cache with credential from keytab for SASL/GSSAPI
     */</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name pos:line="33" pos:column="9">domain<pos:position pos:line="33" pos:column="15"/></name></expr>)<pos:position pos:line="33" pos:column="16"/></condition><then pos:line="33" pos:column="16"> <block pos:line="33" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">debug<pos:position pos:line="34" pos:column="14"/></name><argument_list pos:line="34" pos:column="14">(<argument><expr><operator pos:line="34" pos:column="15">(<pos:position pos:line="34" pos:column="16"/></operator><name pos:line="34" pos:column="16">char<pos:position pos:line="34" pos:column="20"/></name> <operator pos:line="34" pos:column="21">*<pos:position pos:line="34" pos:column="22"/></operator><operator pos:line="34" pos:column="22">)<pos:position pos:line="34" pos:column="23"/></operator> <literal type="string" pos:line="34" pos:column="24">"%s| %s: DEBUG: Setup Kerberos credential cache\n"<pos:position pos:line="34" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name pos:line="34" pos:column="76">LogTime<pos:position pos:line="34" pos:column="83"/></name><argument_list pos:line="34" pos:column="83">()<pos:position pos:line="34" pos:column="85"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="34" pos:column="87">PROGRAM<pos:position pos:line="34" pos:column="94"/></name></expr></argument>)<pos:position pos:line="34" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="96"/></expr_stmt>

<cpp:ifdef pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">ifdef<pos:position pos:line="36" pos:column="7"/></cpp:directive> <name pos:line="36" pos:column="8">HAVE_KRB5<pos:position pos:line="36" pos:column="17"/></name></cpp:ifdef>
        <expr_stmt><expr><name pos:line="37" pos:column="9">kc<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <call><name pos:line="37" pos:column="14">krb5_create_cache<pos:position pos:line="37" pos:column="31"/></name><argument_list pos:line="37" pos:column="31">(<argument><expr><name pos:line="37" pos:column="32">margs<pos:position pos:line="37" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="39">domain<pos:position pos:line="37" pos:column="45"/></name></expr></argument>)<pos:position pos:line="37" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="47"/></expr_stmt>
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">kc<pos:position pos:line="38" pos:column="15"/></name></expr>)<pos:position pos:line="38" pos:column="16"/></condition><then pos:line="38" pos:column="16"> <block pos:line="38" pos:column="17">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">error<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><operator pos:line="39" pos:column="19">(<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">char<pos:position pos:line="39" pos:column="24"/></name> <operator pos:line="39" pos:column="25">*<pos:position pos:line="39" pos:column="26"/></operator><operator pos:line="39" pos:column="26">)<pos:position pos:line="39" pos:column="27"/></operator> <literal type="string" pos:line="39" pos:column="28">"%s| %s: ERROR: Error during setup of Kerberos credential cache\n"<pos:position pos:line="39" pos:column="94"/></literal></expr></argument>, <argument><expr><call><name pos:line="39" pos:column="96">LogTime<pos:position pos:line="39" pos:column="103"/></name><argument_list pos:line="39" pos:column="103">()<pos:position pos:line="39" pos:column="105"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="39" pos:column="107">PROGRAM<pos:position pos:line="39" pos:column="114"/></name></expr></argument>)<pos:position pos:line="39" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="116"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></then></if>
<cpp:else pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">else<pos:position pos:line="41" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><name pos:line="42" pos:column="9">kc<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <literal type="number" pos:line="42" pos:column="14">1<pos:position pos:line="42" pos:column="15"/></literal></expr>;<pos:position pos:line="42" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">debug<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><operator pos:line="43" pos:column="15">(<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="16">char<pos:position pos:line="43" pos:column="20"/></name> <operator pos:line="43" pos:column="21">*<pos:position pos:line="43" pos:column="22"/></operator><operator pos:line="43" pos:column="22">)<pos:position pos:line="43" pos:column="23"/></operator> <literal type="string" pos:line="43" pos:column="24">"%s| %s: DEBUG: Kerberos is not supported. Use username/passwaord with ldap url instead\n"<pos:position pos:line="43" pos:column="114"/></literal></expr></argument>, <argument><expr><call><name pos:line="43" pos:column="116">LogTime<pos:position pos:line="43" pos:column="123"/></name><argument_list pos:line="43" pos:column="123">()<pos:position pos:line="43" pos:column="125"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="43" pos:column="127">PROGRAM<pos:position pos:line="43" pos:column="134"/></name></expr></argument>)<pos:position pos:line="43" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="136"/></expr_stmt>
<cpp:endif pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">endif<pos:position pos:line="44" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">kc<pos:position pos:line="47" pos:column="11"/></name> <operator pos:line="47" pos:column="12">&amp;&amp;<pos:position pos:line="47" pos:column="22"/></operator> <operator pos:line="47" pos:column="15">(<pos:position pos:line="47" pos:column="16"/></operator><operator pos:line="47" pos:column="16">!<pos:position pos:line="47" pos:column="17"/></operator><name><name pos:line="47" pos:column="17">margs<pos:position pos:line="47" pos:column="22"/></name><operator pos:line="47" pos:column="22">-&gt;<pos:position pos:line="47" pos:column="27"/></operator><name pos:line="47" pos:column="24">lurl<pos:position pos:line="47" pos:column="28"/></name></name> <operator pos:line="47" pos:column="29">||<pos:position pos:line="47" pos:column="31"/></operator> <operator pos:line="47" pos:column="32">!<pos:position pos:line="47" pos:column="33"/></operator><name><name pos:line="47" pos:column="33">margs<pos:position pos:line="47" pos:column="38"/></name><operator pos:line="47" pos:column="38">-&gt;<pos:position pos:line="47" pos:column="43"/></operator><name pos:line="47" pos:column="40">luser<pos:position pos:line="47" pos:column="45"/></name></name> <operator pos:line="47" pos:column="46">|<pos:position pos:line="47" pos:column="47"/></operator> <operator pos:line="47" pos:column="48">!<pos:position pos:line="47" pos:column="49"/></operator><name><name pos:line="47" pos:column="49">margs<pos:position pos:line="47" pos:column="54"/></name><operator pos:line="47" pos:column="54">-&gt;<pos:position pos:line="47" pos:column="59"/></operator><name pos:line="47" pos:column="56">lpass<pos:position pos:line="47" pos:column="61"/></name></name><operator pos:line="47" pos:column="61">)<pos:position pos:line="47" pos:column="62"/></operator></expr>)<pos:position pos:line="47" pos:column="63"/></condition><then pos:line="47" pos:column="63"> <block pos:line="47" pos:column="64">{
        <comment type="block" pos:line="48" pos:column="9">/*
         * If Kerberos fails and no url given exit here
         */</comment>
        <expr_stmt><expr><name pos:line="51" pos:column="9">retval<pos:position pos:line="51" pos:column="15"/></name> <operator pos:line="51" pos:column="16">=<pos:position pos:line="51" pos:column="17"/></operator> <literal type="number" pos:line="51" pos:column="18">0<pos:position pos:line="51" pos:column="19"/></literal></expr>;<pos:position pos:line="51" pos:column="20"/></expr_stmt>
        <goto pos:line="52" pos:column="9">goto <name pos:line="52" pos:column="14">cleanup<pos:position pos:line="52" pos:column="21"/></name>;<pos:position pos:line="52" pos:column="22"/></goto>
    }<pos:position pos:line="53" pos:column="6"/></block></then></if>
<cpp:ifndef pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">ifndef<pos:position pos:line="54" pos:column="8"/></cpp:directive> <name pos:line="54" pos:column="9">HAVE_SUN_LDAP_SDK<pos:position pos:line="54" pos:column="26"/></name></cpp:ifndef>
    <comment type="block" pos:line="55" pos:column="5">/*
     * Initialise ldap
     */</comment>
    <expr_stmt><expr><name pos:line="58" pos:column="5">ldap_debug<pos:position pos:line="58" pos:column="15"/></name> <operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator> <literal type="number" pos:line="58" pos:column="18">127<pos:position pos:line="58" pos:column="21"/></literal></expr> <comment type="block" pos:line="58" pos:column="22">/* LDAP_DEBUG_TRACE */</comment> ;<pos:position pos:line="58" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><name pos:line="59" pos:column="5">ldap_debug<pos:position pos:line="59" pos:column="15"/></name> <operator pos:line="59" pos:column="16">=<pos:position pos:line="59" pos:column="17"/></operator> <operator pos:line="59" pos:column="18">-<pos:position pos:line="59" pos:column="19"/></operator><literal type="number" pos:line="59" pos:column="19">1<pos:position pos:line="59" pos:column="20"/></literal></expr> <comment type="block" pos:line="59" pos:column="21">/* LDAP_DEBUG_ANY */</comment> ;<pos:position pos:line="59" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name pos:line="60" pos:column="5">ldap_debug<pos:position pos:line="60" pos:column="15"/></name> <operator pos:line="60" pos:column="16">=<pos:position pos:line="60" pos:column="17"/></operator> <literal type="number" pos:line="60" pos:column="18">0<pos:position pos:line="60" pos:column="19"/></literal></expr>;<pos:position pos:line="60" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="61" pos:column="5">(<pos:position pos:line="61" pos:column="6"/></operator><name pos:line="61" pos:column="6">void<pos:position pos:line="61" pos:column="10"/></name><operator pos:line="61" pos:column="10">)<pos:position pos:line="61" pos:column="11"/></operator> <call><name pos:line="61" pos:column="12">ldap_set_option<pos:position pos:line="61" pos:column="27"/></name><argument_list pos:line="61" pos:column="27">(<argument><expr><name pos:line="61" pos:column="28">NULL<pos:position pos:line="61" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="34">LDAP_OPT_DEBUG_LEVEL<pos:position pos:line="61" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="61" pos:column="56">&amp;<pos:position pos:line="61" pos:column="61"/></operator><name pos:line="61" pos:column="57">ldap_debug<pos:position pos:line="61" pos:column="67"/></name></expr></argument>)<pos:position pos:line="61" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="69"/></expr_stmt>
<cpp:endif pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">endif<pos:position pos:line="62" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="63" pos:column="5">debug<pos:position pos:line="63" pos:column="10"/></name><argument_list pos:line="63" pos:column="10">(<argument><expr><operator pos:line="63" pos:column="11">(<pos:position pos:line="63" pos:column="12"/></operator><name pos:line="63" pos:column="12">char<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">*<pos:position pos:line="63" pos:column="18"/></operator><operator pos:line="63" pos:column="18">)<pos:position pos:line="63" pos:column="19"/></operator> <literal type="string" pos:line="63" pos:column="20">"%s| %s: DEBUG: Initialise ldap connection\n"<pos:position pos:line="63" pos:column="65"/></literal></expr></argument>, <argument><expr><call><name pos:line="63" pos:column="67">LogTime<pos:position pos:line="63" pos:column="74"/></name><argument_list pos:line="63" pos:column="74">()<pos:position pos:line="63" pos:column="76"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="63" pos:column="78">PROGRAM<pos:position pos:line="63" pos:column="85"/></name></expr></argument>)<pos:position pos:line="63" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="87"/></expr_stmt>

    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name pos:line="65" pos:column="9">domain<pos:position pos:line="65" pos:column="15"/></name> <operator pos:line="65" pos:column="16">&amp;&amp;<pos:position pos:line="65" pos:column="26"/></operator> <operator pos:line="65" pos:column="19">!<pos:position pos:line="65" pos:column="20"/></operator><name pos:line="65" pos:column="20">kc<pos:position pos:line="65" pos:column="22"/></name></expr>)<pos:position pos:line="65" pos:column="23"/></condition><then pos:line="65" pos:column="23"> <block pos:line="65" pos:column="24">{
        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name><name pos:line="66" pos:column="13">margs<pos:position pos:line="66" pos:column="18"/></name><operator pos:line="66" pos:column="18">-&gt;<pos:position pos:line="66" pos:column="23"/></operator><name pos:line="66" pos:column="20">ssl<pos:position pos:line="66" pos:column="23"/></name></name></expr>)<pos:position pos:line="66" pos:column="24"/></condition><then pos:line="66" pos:column="24"> <block pos:line="66" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">debug<pos:position pos:line="67" pos:column="18"/></name><argument_list pos:line="67" pos:column="18">(<argument><expr><operator pos:line="67" pos:column="19">(<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="20">char<pos:position pos:line="67" pos:column="24"/></name> <operator pos:line="67" pos:column="25">*<pos:position pos:line="67" pos:column="26"/></operator><operator pos:line="67" pos:column="26">)<pos:position pos:line="67" pos:column="27"/></operator> <literal type="string" pos:line="67" pos:column="28">"%s| %s: DEBUG: Enable SSL to ldap servers\n"<pos:position pos:line="67" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="67" pos:column="75">LogTime<pos:position pos:line="67" pos:column="82"/></name><argument_list pos:line="67" pos:column="82">()<pos:position pos:line="67" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="67" pos:column="86">PROGRAM<pos:position pos:line="67" pos:column="93"/></name></expr></argument>)<pos:position pos:line="67" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="95"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">debug<pos:position pos:line="69" pos:column="14"/></name><argument_list pos:line="69" pos:column="14">(<argument><expr><operator pos:line="69" pos:column="15">(<pos:position pos:line="69" pos:column="16"/></operator><name pos:line="69" pos:column="16">char<pos:position pos:line="69" pos:column="20"/></name> <operator pos:line="69" pos:column="21">*<pos:position pos:line="69" pos:column="22"/></operator><operator pos:line="69" pos:column="22">)<pos:position pos:line="69" pos:column="23"/></operator> <literal type="string" pos:line="69" pos:column="24">"%s| %s: DEBUG: Canonicalise ldap server name for domain %s\n"<pos:position pos:line="69" pos:column="86"/></literal></expr></argument>, <argument><expr><call><name pos:line="69" pos:column="88">LogTime<pos:position pos:line="69" pos:column="95"/></name><argument_list pos:line="69" pos:column="95">()<pos:position pos:line="69" pos:column="97"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="69" pos:column="99">PROGRAM<pos:position pos:line="69" pos:column="106"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="108">domain<pos:position pos:line="69" pos:column="114"/></name></expr></argument>)<pos:position pos:line="69" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="116"/></expr_stmt>
        <comment type="block" pos:line="70" pos:column="9">/*
         * Loop over list of ldap servers of users domain
         */</comment>
        <expr_stmt><expr><name pos:line="73" pos:column="9">nhosts<pos:position pos:line="73" pos:column="15"/></name> <operator pos:line="73" pos:column="16">=<pos:position pos:line="73" pos:column="17"/></operator> <call><name pos:line="73" pos:column="18">get_ldap_hostname_list<pos:position pos:line="73" pos:column="40"/></name><argument_list pos:line="73" pos:column="40">(<argument><expr><name pos:line="73" pos:column="41">margs<pos:position pos:line="73" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="48">&amp;<pos:position pos:line="73" pos:column="53"/></operator><name pos:line="73" pos:column="49">hlist<pos:position pos:line="73" pos:column="54"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="56">0<pos:position pos:line="73" pos:column="57"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="59">domain<pos:position pos:line="73" pos:column="65"/></name></expr></argument>)<pos:position pos:line="73" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="67"/></expr_stmt>
        <for pos:line="74" pos:column="9">for <control pos:line="74" pos:column="13">(<init><expr><name pos:line="74" pos:column="14">i<pos:position pos:line="74" pos:column="15"/></name> <operator pos:line="74" pos:column="16">=<pos:position pos:line="74" pos:column="17"/></operator> <literal type="number" pos:line="74" pos:column="18">0<pos:position pos:line="74" pos:column="19"/></literal></expr>;<pos:position pos:line="74" pos:column="20"/></init> <condition><expr><name pos:line="74" pos:column="21">i<pos:position pos:line="74" pos:column="22"/></name> <operator pos:line="74" pos:column="23">&lt;<pos:position pos:line="74" pos:column="27"/></operator> <name pos:line="74" pos:column="25">nhosts<pos:position pos:line="74" pos:column="31"/></name></expr>;<pos:position pos:line="74" pos:column="32"/></condition> <incr><expr><operator pos:line="74" pos:column="33">++<pos:position pos:line="74" pos:column="35"/></operator><name pos:line="74" pos:column="35">i<pos:position pos:line="74" pos:column="36"/></name></expr></incr>)<pos:position pos:line="74" pos:column="37"/></control> <block pos:line="74" pos:column="38">{
            <expr_stmt><expr><name pos:line="75" pos:column="13">port<pos:position pos:line="75" pos:column="17"/></name> <operator pos:line="75" pos:column="18">=<pos:position pos:line="75" pos:column="19"/></operator> <literal type="number" pos:line="75" pos:column="20">389<pos:position pos:line="75" pos:column="23"/></literal></expr>;<pos:position pos:line="75" pos:column="24"/></expr_stmt>
            <if pos:line="76" pos:column="13">if <condition pos:line="76" pos:column="16">(<expr><name><name pos:line="76" pos:column="17">hlist<pos:position pos:line="76" pos:column="22"/></name><index pos:line="76" pos:column="22">[<expr><name pos:line="76" pos:column="23">i<pos:position pos:line="76" pos:column="24"/></name></expr>]<pos:position pos:line="76" pos:column="25"/></index></name><operator pos:line="76" pos:column="25">.<pos:position pos:line="76" pos:column="26"/></operator><name pos:line="76" pos:column="26">port<pos:position pos:line="76" pos:column="30"/></name> <operator pos:line="76" pos:column="31">!=<pos:position pos:line="76" pos:column="33"/></operator> <operator pos:line="76" pos:column="34">-<pos:position pos:line="76" pos:column="35"/></operator><literal type="number" pos:line="76" pos:column="35">1<pos:position pos:line="76" pos:column="36"/></literal></expr>)<pos:position pos:line="76" pos:column="37"/></condition><then pos:line="76" pos:column="37">
                <block type="pseudo"><expr_stmt><expr><name pos:line="77" pos:column="17">port<pos:position pos:line="77" pos:column="21"/></name> <operator pos:line="77" pos:column="22">=<pos:position pos:line="77" pos:column="23"/></operator> <name><name pos:line="77" pos:column="24">hlist<pos:position pos:line="77" pos:column="29"/></name><index pos:line="77" pos:column="29">[<expr><name pos:line="77" pos:column="30">i<pos:position pos:line="77" pos:column="31"/></name></expr>]<pos:position pos:line="77" pos:column="32"/></index></name><operator pos:line="77" pos:column="32">.<pos:position pos:line="77" pos:column="33"/></operator><name pos:line="77" pos:column="33">port<pos:position pos:line="77" pos:column="37"/></name></expr>;<pos:position pos:line="77" pos:column="38"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name pos:line="78" pos:column="13">debug<pos:position pos:line="78" pos:column="18"/></name><argument_list pos:line="78" pos:column="18">(<argument><expr><operator pos:line="78" pos:column="19">(<pos:position pos:line="78" pos:column="20"/></operator><name pos:line="78" pos:column="20">char<pos:position pos:line="78" pos:column="24"/></name> <operator pos:line="78" pos:column="25">*<pos:position pos:line="78" pos:column="26"/></operator><operator pos:line="78" pos:column="26">)<pos:position pos:line="78" pos:column="27"/></operator> <literal type="string" pos:line="78" pos:column="28">"%s| %s: DEBUG: Setting up connection to ldap server %s:%d\n"<pos:position pos:line="78" pos:column="89"/></literal></expr></argument>, <argument><expr><call><name pos:line="78" pos:column="91">LogTime<pos:position pos:line="78" pos:column="98"/></name><argument_list pos:line="78" pos:column="98">()<pos:position pos:line="78" pos:column="100"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="78" pos:column="102">PROGRAM<pos:position pos:line="78" pos:column="109"/></name></expr></argument>, <argument><expr><name><name pos:line="78" pos:column="111">hlist<pos:position pos:line="78" pos:column="116"/></name><index pos:line="78" pos:column="116">[<expr><name pos:line="78" pos:column="117">i<pos:position pos:line="78" pos:column="118"/></name></expr>]<pos:position pos:line="78" pos:column="119"/></index></name><operator pos:line="78" pos:column="119">.<pos:position pos:line="78" pos:column="120"/></operator><name pos:line="78" pos:column="120">host<pos:position pos:line="78" pos:column="124"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="126">port<pos:position pos:line="78" pos:column="130"/></name></expr></argument>)<pos:position pos:line="78" pos:column="131"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="132"/></expr_stmt>

            <expr_stmt><expr><name pos:line="80" pos:column="13">ld<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">=<pos:position pos:line="80" pos:column="17"/></operator> <call><name pos:line="80" pos:column="18">tool_ldap_open<pos:position pos:line="80" pos:column="32"/></name><argument_list pos:line="80" pos:column="32">(<argument><expr><name pos:line="80" pos:column="33">margs<pos:position pos:line="80" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="40">hlist<pos:position pos:line="80" pos:column="45"/></name><index pos:line="80" pos:column="45">[<expr><name pos:line="80" pos:column="46">i<pos:position pos:line="80" pos:column="47"/></name></expr>]<pos:position pos:line="80" pos:column="48"/></index></name><operator pos:line="80" pos:column="48">.<pos:position pos:line="80" pos:column="49"/></operator><name pos:line="80" pos:column="49">host<pos:position pos:line="80" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="55">port<pos:position pos:line="80" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="61">margs<pos:position pos:line="80" pos:column="66"/></name><operator pos:line="80" pos:column="66">-&gt;<pos:position pos:line="80" pos:column="71"/></operator><name pos:line="80" pos:column="68">ssl<pos:position pos:line="80" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="73"/></expr_stmt>
            <if pos:line="81" pos:column="13">if <condition pos:line="81" pos:column="16">(<expr><operator pos:line="81" pos:column="17">!<pos:position pos:line="81" pos:column="18"/></operator><name pos:line="81" pos:column="18">ld<pos:position pos:line="81" pos:column="20"/></name></expr>)<pos:position pos:line="81" pos:column="21"/></condition><then pos:line="81" pos:column="21">
                <block type="pseudo"><continue pos:line="82" pos:column="17">continue;<pos:position pos:line="82" pos:column="26"/></continue></block></then></if>

            <comment type="block" pos:line="84" pos:column="13">/*
             * ldap bind with SASL/GSSAPI authentication (only possible if a domain was part of the username)
             */</comment>

<cpp:if pos:line="88" pos:column="1">#<cpp:directive pos:line="88" pos:column="2">if<pos:position pos:line="88" pos:column="4"/></cpp:directive> <expr><call><name pos:line="88" pos:column="5">defined<pos:position pos:line="88" pos:column="12"/></name><argument_list pos:line="88" pos:column="12">(<argument><expr><name pos:line="88" pos:column="13">HAVE_SASL_H<pos:position pos:line="88" pos:column="24"/></name></expr></argument>)<pos:position pos:line="88" pos:column="25"/></argument_list></call> <operator pos:line="88" pos:column="26">||<pos:position pos:line="88" pos:column="28"/></operator> <call><name pos:line="88" pos:column="29">defined<pos:position pos:line="88" pos:column="36"/></name><argument_list pos:line="88" pos:column="36">(<argument><expr><name pos:line="88" pos:column="37">HAVE_SASL_SASL_H<pos:position pos:line="88" pos:column="53"/></name></expr></argument>)<pos:position pos:line="88" pos:column="54"/></argument_list></call> <operator pos:line="88" pos:column="55">||<pos:position pos:line="88" pos:column="57"/></operator> <call><name pos:line="88" pos:column="58">defined<pos:position pos:line="88" pos:column="65"/></name><argument_list pos:line="88" pos:column="65">(<argument><expr><name pos:line="88" pos:column="66">HAVE_SASL_DARWIN<pos:position pos:line="88" pos:column="82"/></name></expr></argument>)<pos:position pos:line="88" pos:column="83"/></argument_list></call></expr></cpp:if>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">debug<pos:position pos:line="89" pos:column="18"/></name><argument_list pos:line="89" pos:column="18">(<argument><expr><operator pos:line="89" pos:column="19">(<pos:position pos:line="89" pos:column="20"/></operator><name pos:line="89" pos:column="20">char<pos:position pos:line="89" pos:column="24"/></name> <operator pos:line="89" pos:column="25">*<pos:position pos:line="89" pos:column="26"/></operator><operator pos:line="89" pos:column="26">)<pos:position pos:line="89" pos:column="27"/></operator> <literal type="string" pos:line="89" pos:column="28">"%s| %s: DEBUG: Bind to ldap server with SASL/GSSAPI\n"<pos:position pos:line="89" pos:column="83"/></literal></expr></argument>, <argument><expr><call><name pos:line="89" pos:column="85">LogTime<pos:position pos:line="89" pos:column="92"/></name><argument_list pos:line="89" pos:column="92">()<pos:position pos:line="89" pos:column="94"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="89" pos:column="96">PROGRAM<pos:position pos:line="89" pos:column="103"/></name></expr></argument>)<pos:position pos:line="89" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="105"/></expr_stmt>

            <expr_stmt><expr><name pos:line="91" pos:column="13">rc<pos:position pos:line="91" pos:column="15"/></name> <operator pos:line="91" pos:column="16">=<pos:position pos:line="91" pos:column="17"/></operator> <call><name pos:line="91" pos:column="18">tool_sasl_bind<pos:position pos:line="91" pos:column="32"/></name><argument_list pos:line="91" pos:column="32">(<argument><expr><name pos:line="91" pos:column="33">ld<pos:position pos:line="91" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="91" pos:column="37">bindp<pos:position pos:line="91" pos:column="42"/></name></expr></argument>, <argument><expr><name><name pos:line="91" pos:column="44">margs<pos:position pos:line="91" pos:column="49"/></name><operator pos:line="91" pos:column="49">-&gt;<pos:position pos:line="91" pos:column="54"/></operator><name pos:line="91" pos:column="51">ssl<pos:position pos:line="91" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="91" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="56"/></expr_stmt>
            <if pos:line="92" pos:column="13">if <condition pos:line="92" pos:column="16">(<expr><name pos:line="92" pos:column="17">rc<pos:position pos:line="92" pos:column="19"/></name> <operator pos:line="92" pos:column="20">!=<pos:position pos:line="92" pos:column="22"/></operator> <name pos:line="92" pos:column="23">LDAP_SUCCESS<pos:position pos:line="92" pos:column="35"/></name></expr>)<pos:position pos:line="92" pos:column="36"/></condition><then pos:line="92" pos:column="36"> <block pos:line="92" pos:column="37">{
                <expr_stmt><expr><call><name pos:line="93" pos:column="17">error<pos:position pos:line="93" pos:column="22"/></name><argument_list pos:line="93" pos:column="22">(<argument><expr><operator pos:line="93" pos:column="23">(<pos:position pos:line="93" pos:column="24"/></operator><name pos:line="93" pos:column="24">char<pos:position pos:line="93" pos:column="28"/></name> <operator pos:line="93" pos:column="29">*<pos:position pos:line="93" pos:column="30"/></operator><operator pos:line="93" pos:column="30">)<pos:position pos:line="93" pos:column="31"/></operator> <literal type="string" pos:line="93" pos:column="32">"%s| %s: ERROR: Error while binding to ldap server with SASL/GSSAPI: %s\n"<pos:position pos:line="93" pos:column="106"/></literal></expr></argument>, <argument><expr><call><name pos:line="93" pos:column="108">LogTime<pos:position pos:line="93" pos:column="115"/></name><argument_list pos:line="93" pos:column="115">()<pos:position pos:line="93" pos:column="117"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="93" pos:column="119">PROGRAM<pos:position pos:line="93" pos:column="126"/></name></expr></argument>, <argument><expr><call><name pos:line="93" pos:column="128">ldap_err2string<pos:position pos:line="93" pos:column="143"/></name><argument_list pos:line="93" pos:column="143">(<argument><expr><name pos:line="93" pos:column="144">rc<pos:position pos:line="93" pos:column="146"/></name></expr></argument>)<pos:position pos:line="93" pos:column="147"/></argument_list></call></expr></argument>)<pos:position pos:line="93" pos:column="148"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="149"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="94" pos:column="17">ldap_unbind<pos:position pos:line="94" pos:column="28"/></name><argument_list pos:line="94" pos:column="28">(<argument><expr><name pos:line="94" pos:column="29">ld<pos:position pos:line="94" pos:column="31"/></name></expr></argument>)<pos:position pos:line="94" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="95" pos:column="17">ld<pos:position pos:line="95" pos:column="19"/></name> <operator pos:line="95" pos:column="20">=<pos:position pos:line="95" pos:column="21"/></operator> <name pos:line="95" pos:column="22">NULL<pos:position pos:line="95" pos:column="26"/></name></expr>;<pos:position pos:line="95" pos:column="27"/></expr_stmt>
                <continue pos:line="96" pos:column="17">continue;<pos:position pos:line="96" pos:column="26"/></continue>
            }<pos:position pos:line="97" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="98" pos:column="13">lcreds<pos:position pos:line="98" pos:column="19"/></name> <operator pos:line="98" pos:column="20">=<pos:position pos:line="98" pos:column="21"/></operator> <operator pos:line="98" pos:column="22">(<pos:position pos:line="98" pos:column="23"/></operator><name pos:line="98" pos:column="23">ldap_creds<pos:position pos:line="98" pos:column="33"/></name> <operator pos:line="98" pos:column="34">*<pos:position pos:line="98" pos:column="35"/></operator><operator pos:line="98" pos:column="35">)<pos:position pos:line="98" pos:column="36"/></operator> <call><name pos:line="98" pos:column="37">xmalloc<pos:position pos:line="98" pos:column="44"/></name><argument_list pos:line="98" pos:column="44">(<argument><expr><sizeof pos:line="98" pos:column="45">sizeof<argument_list pos:line="98" pos:column="51">(<argument><expr pos:line="98" pos:column="52">struct <name pos:line="98" pos:column="59">ldap_creds<pos:position pos:line="98" pos:column="69"/></name></expr></argument>)<pos:position pos:line="98" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="98" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="99" pos:column="13">lcreds<pos:position pos:line="99" pos:column="19"/></name><operator pos:line="99" pos:column="19">-&gt;<pos:position pos:line="99" pos:column="24"/></operator><name pos:line="99" pos:column="21">dn<pos:position pos:line="99" pos:column="23"/></name></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <name pos:line="99" pos:column="26">NULL<pos:position pos:line="99" pos:column="30"/></name></expr>;<pos:position pos:line="99" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="100" pos:column="13">lcreds<pos:position pos:line="100" pos:column="19"/></name><operator pos:line="100" pos:column="19">-&gt;<pos:position pos:line="100" pos:column="24"/></operator><name pos:line="100" pos:column="21">pw<pos:position pos:line="100" pos:column="23"/></name></name> <operator pos:line="100" pos:column="24">=<pos:position pos:line="100" pos:column="25"/></operator> <ternary><condition><expr><name><name pos:line="100" pos:column="26">margs<pos:position pos:line="100" pos:column="31"/></name><operator pos:line="100" pos:column="31">-&gt;<pos:position pos:line="100" pos:column="36"/></operator><name pos:line="100" pos:column="33">ssl<pos:position pos:line="100" pos:column="36"/></name></name></expr> ?<pos:position pos:line="100" pos:column="38"/></condition><then pos:line="100" pos:column="38"> <expr><call><name pos:line="100" pos:column="39">xstrdup<pos:position pos:line="100" pos:column="46"/></name><argument_list pos:line="100" pos:column="46">(<argument><expr><name><name pos:line="100" pos:column="47">margs<pos:position pos:line="100" pos:column="52"/></name><operator pos:line="100" pos:column="52">-&gt;<pos:position pos:line="100" pos:column="57"/></operator><name pos:line="100" pos:column="54">ssl<pos:position pos:line="100" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="100" pos:column="58"/></argument_list></call></expr> <pos:position pos:line="100" pos:column="59"/></then><else pos:line="100" pos:column="59">: <expr><name pos:line="100" pos:column="61">NULL<pos:position pos:line="100" pos:column="65"/></name></expr></else></ternary></expr>;<pos:position pos:line="100" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="101" pos:column="13">ldap_set_rebind_proc<pos:position pos:line="101" pos:column="33"/></name><argument_list pos:line="101" pos:column="33">(<argument><expr><name pos:line="101" pos:column="34">ld<pos:position pos:line="101" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="38">ldap_sasl_rebind<pos:position pos:line="101" pos:column="54"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="56">(<pos:position pos:line="101" pos:column="57"/></operator><name pos:line="101" pos:column="57">char<pos:position pos:line="101" pos:column="61"/></name> <operator pos:line="101" pos:column="62">*<pos:position pos:line="101" pos:column="63"/></operator><operator pos:line="101" pos:column="63">)<pos:position pos:line="101" pos:column="64"/></operator> <name pos:line="101" pos:column="65">lcreds<pos:position pos:line="101" pos:column="71"/></name></expr></argument>)<pos:position pos:line="101" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="73"/></expr_stmt>
            <if pos:line="102" pos:column="13">if <condition pos:line="102" pos:column="16">(<expr><name pos:line="102" pos:column="17">ld<pos:position pos:line="102" pos:column="19"/></name> <operator pos:line="102" pos:column="20">!=<pos:position pos:line="102" pos:column="22"/></operator> <name pos:line="102" pos:column="23">NULL<pos:position pos:line="102" pos:column="27"/></name></expr>)<pos:position pos:line="102" pos:column="28"/></condition><then pos:line="102" pos:column="28"> <block pos:line="102" pos:column="29">{
                <expr_stmt><expr><call><name pos:line="103" pos:column="17">debug<pos:position pos:line="103" pos:column="22"/></name><argument_list pos:line="103" pos:column="22">(<argument><expr><operator pos:line="103" pos:column="23">(<pos:position pos:line="103" pos:column="24"/></operator><name pos:line="103" pos:column="24">char<pos:position pos:line="103" pos:column="28"/></name> <operator pos:line="103" pos:column="29">*<pos:position pos:line="103" pos:column="30"/></operator><operator pos:line="103" pos:column="30">)<pos:position pos:line="103" pos:column="31"/></operator> <literal type="string" pos:line="103" pos:column="32">"%s| %s: DEBUG: %s initialised %sconnection to ldap server %s:%d\n"<pos:position pos:line="103" pos:column="99"/></literal></expr></argument>, <argument><expr><call><name pos:line="103" pos:column="101">LogTime<pos:position pos:line="103" pos:column="108"/></name><argument_list pos:line="103" pos:column="108">()<pos:position pos:line="103" pos:column="110"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="103" pos:column="112">PROGRAM<pos:position pos:line="103" pos:column="119"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="103" pos:column="121">ld<pos:position pos:line="103" pos:column="123"/></name></expr> ?<pos:position pos:line="103" pos:column="125"/></condition><then pos:line="103" pos:column="125"> <expr><literal type="string" pos:line="103" pos:column="126">"Successfully"<pos:position pos:line="103" pos:column="140"/></literal></expr> <pos:position pos:line="103" pos:column="141"/></then><else pos:line="103" pos:column="141">: <expr><literal type="string" pos:line="103" pos:column="143">"Failed to"<pos:position pos:line="103" pos:column="154"/></literal></expr></else></ternary></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="103" pos:column="156">margs<pos:position pos:line="103" pos:column="161"/></name><operator pos:line="103" pos:column="161">-&gt;<pos:position pos:line="103" pos:column="166"/></operator><name pos:line="103" pos:column="163">ssl<pos:position pos:line="103" pos:column="166"/></name></name></expr> ?<pos:position pos:line="103" pos:column="168"/></condition><then pos:line="103" pos:column="168"> <expr><literal type="string" pos:line="103" pos:column="169">"SSL protected "<pos:position pos:line="103" pos:column="185"/></literal></expr> <pos:position pos:line="103" pos:column="186"/></then><else pos:line="103" pos:column="186">: <expr><literal type="string" pos:line="103" pos:column="188">""<pos:position pos:line="103" pos:column="190"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="103" pos:column="192">hlist<pos:position pos:line="103" pos:column="197"/></name><index pos:line="103" pos:column="197">[<expr><name pos:line="103" pos:column="198">i<pos:position pos:line="103" pos:column="199"/></name></expr>]<pos:position pos:line="103" pos:column="200"/></index></name><operator pos:line="103" pos:column="200">.<pos:position pos:line="103" pos:column="201"/></operator><name pos:line="103" pos:column="201">host<pos:position pos:line="103" pos:column="205"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="207">port<pos:position pos:line="103" pos:column="211"/></name></expr></argument>)<pos:position pos:line="103" pos:column="212"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="213"/></expr_stmt>
                <break pos:line="104" pos:column="17">break;<pos:position pos:line="104" pos:column="23"/></break>
            }<pos:position pos:line="105" pos:column="14"/></block></then></if>
<cpp:else pos:line="106" pos:column="1">#<cpp:directive pos:line="106" pos:column="2">else<pos:position pos:line="106" pos:column="6"/></cpp:directive></cpp:else>
            <expr_stmt><expr><call><name pos:line="107" pos:column="13">ldap_unbind<pos:position pos:line="107" pos:column="24"/></name><argument_list pos:line="107" pos:column="24">(<argument><expr><name pos:line="107" pos:column="25">ld<pos:position pos:line="107" pos:column="27"/></name></expr></argument>)<pos:position pos:line="107" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="108" pos:column="13">ld<pos:position pos:line="108" pos:column="15"/></name> <operator pos:line="108" pos:column="16">=<pos:position pos:line="108" pos:column="17"/></operator> <name pos:line="108" pos:column="18">NULL<pos:position pos:line="108" pos:column="22"/></name></expr>;<pos:position pos:line="108" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="109" pos:column="13">error<pos:position pos:line="109" pos:column="18"/></name><argument_list pos:line="109" pos:column="18">(<argument><expr><operator pos:line="109" pos:column="19">(<pos:position pos:line="109" pos:column="20"/></operator><name pos:line="109" pos:column="20">char<pos:position pos:line="109" pos:column="24"/></name> <operator pos:line="109" pos:column="25">*<pos:position pos:line="109" pos:column="26"/></operator><operator pos:line="109" pos:column="26">)<pos:position pos:line="109" pos:column="27"/></operator> <literal type="string" pos:line="109" pos:column="28">"%s| %s: ERROR: SASL not supported on system\n"<pos:position pos:line="109" pos:column="75"/></literal></expr></argument>, <argument><expr><call><name pos:line="109" pos:column="77">LogTime<pos:position pos:line="109" pos:column="84"/></name><argument_list pos:line="109" pos:column="84">()<pos:position pos:line="109" pos:column="86"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="109" pos:column="88">PROGRAM<pos:position pos:line="109" pos:column="95"/></name></expr></argument>)<pos:position pos:line="109" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="109" pos:column="97"/></expr_stmt>
            <continue pos:line="110" pos:column="13">continue;<pos:position pos:line="110" pos:column="22"/></continue>
<cpp:endif pos:line="111" pos:column="1">#<cpp:directive pos:line="111" pos:column="2">endif<pos:position pos:line="111" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="112" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="113" pos:column="9">nhosts<pos:position pos:line="113" pos:column="15"/></name> <operator pos:line="113" pos:column="16">=<pos:position pos:line="113" pos:column="17"/></operator> <call><name pos:line="113" pos:column="18">free_hostname_list<pos:position pos:line="113" pos:column="36"/></name><argument_list pos:line="113" pos:column="36">(<argument><expr><operator pos:line="113" pos:column="37">&amp;<pos:position pos:line="113" pos:column="42"/></operator><name pos:line="113" pos:column="38">hlist<pos:position pos:line="113" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="113" pos:column="45">nhosts<pos:position pos:line="113" pos:column="51"/></name></expr></argument>)<pos:position pos:line="113" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="53"/></expr_stmt>
        <if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><name pos:line="114" pos:column="13">ld<pos:position pos:line="114" pos:column="15"/></name> <operator pos:line="114" pos:column="16">==<pos:position pos:line="114" pos:column="18"/></operator> <name pos:line="114" pos:column="19">NULL<pos:position pos:line="114" pos:column="23"/></name></expr>)<pos:position pos:line="114" pos:column="24"/></condition><then pos:line="114" pos:column="24"> <block pos:line="114" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="115" pos:column="13">debug<pos:position pos:line="115" pos:column="18"/></name><argument_list pos:line="115" pos:column="18">(<argument><expr><operator pos:line="115" pos:column="19">(<pos:position pos:line="115" pos:column="20"/></operator><name pos:line="115" pos:column="20">char<pos:position pos:line="115" pos:column="24"/></name> <operator pos:line="115" pos:column="25">*<pos:position pos:line="115" pos:column="26"/></operator><operator pos:line="115" pos:column="26">)<pos:position pos:line="115" pos:column="27"/></operator> <literal type="string" pos:line="115" pos:column="28">"%s| %s: DEBUG: Error during initialisation of ldap connection: %s\n"<pos:position pos:line="115" pos:column="97"/></literal></expr></argument>, <argument><expr><call><name pos:line="115" pos:column="99">LogTime<pos:position pos:line="115" pos:column="106"/></name><argument_list pos:line="115" pos:column="106">()<pos:position pos:line="115" pos:column="108"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="115" pos:column="110">PROGRAM<pos:position pos:line="115" pos:column="117"/></name></expr></argument>, <argument><expr><call><name pos:line="115" pos:column="119">strerror<pos:position pos:line="115" pos:column="127"/></name><argument_list pos:line="115" pos:column="127">(<argument><expr><name pos:line="115" pos:column="128">errno<pos:position pos:line="115" pos:column="133"/></name></expr></argument>)<pos:position pos:line="115" pos:column="134"/></argument_list></call></expr></argument>)<pos:position pos:line="115" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="136"/></expr_stmt>
        }<pos:position pos:line="116" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="117" pos:column="9">bindp<pos:position pos:line="117" pos:column="14"/></name> <operator pos:line="117" pos:column="15">=<pos:position pos:line="117" pos:column="16"/></operator> <call><name pos:line="117" pos:column="17">convert_domain_to_bind_path<pos:position pos:line="117" pos:column="44"/></name><argument_list pos:line="117" pos:column="44">(<argument><expr><name pos:line="117" pos:column="45">domain<pos:position pos:line="117" pos:column="51"/></name></expr></argument>)<pos:position pos:line="117" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="118" pos:column="6"/></block></then></if>
    <if pos:line="119" pos:column="5">if <condition pos:line="119" pos:column="8">(<expr><operator pos:line="119" pos:column="9">(<pos:position pos:line="119" pos:column="10"/></operator><operator pos:line="119" pos:column="10">!<pos:position pos:line="119" pos:column="11"/></operator><name pos:line="119" pos:column="11">domain<pos:position pos:line="119" pos:column="17"/></name> <operator pos:line="119" pos:column="18">||<pos:position pos:line="119" pos:column="20"/></operator> <operator pos:line="119" pos:column="21">!<pos:position pos:line="119" pos:column="22"/></operator><name pos:line="119" pos:column="22">ld<pos:position pos:line="119" pos:column="24"/></name><operator pos:line="119" pos:column="24">)<pos:position pos:line="119" pos:column="25"/></operator> <operator pos:line="119" pos:column="26">&amp;&amp;<pos:position pos:line="119" pos:column="36"/></operator> <name><name pos:line="119" pos:column="29">margs<pos:position pos:line="119" pos:column="34"/></name><operator pos:line="119" pos:column="34">-&gt;<pos:position pos:line="119" pos:column="39"/></operator><name pos:line="119" pos:column="36">lurl<pos:position pos:line="119" pos:column="40"/></name></name> <operator pos:line="119" pos:column="41">&amp;&amp;<pos:position pos:line="119" pos:column="51"/></operator> <call><name pos:line="119" pos:column="44">strstr<pos:position pos:line="119" pos:column="50"/></name><argument_list pos:line="119" pos:column="50">(<argument><expr><name><name pos:line="119" pos:column="51">margs<pos:position pos:line="119" pos:column="56"/></name><operator pos:line="119" pos:column="56">-&gt;<pos:position pos:line="119" pos:column="61"/></operator><name pos:line="119" pos:column="58">lurl<pos:position pos:line="119" pos:column="62"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="64">"://"<pos:position pos:line="119" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="119" pos:column="71"/></condition><then pos:line="119" pos:column="71"> <block pos:line="119" pos:column="72">{
        <comment type="block" pos:line="120" pos:column="9">/*
         * If username does not contain a domain and a url was given then try it
         */</comment>
        <expr_stmt><expr><name pos:line="123" pos:column="9">hostname<pos:position pos:line="123" pos:column="17"/></name> <operator pos:line="123" pos:column="18">=<pos:position pos:line="123" pos:column="19"/></operator> <call><name pos:line="123" pos:column="20">strstr<pos:position pos:line="123" pos:column="26"/></name><argument_list pos:line="123" pos:column="26">(<argument><expr><name><name pos:line="123" pos:column="27">margs<pos:position pos:line="123" pos:column="32"/></name><operator pos:line="123" pos:column="32">-&gt;<pos:position pos:line="123" pos:column="37"/></operator><name pos:line="123" pos:column="34">lurl<pos:position pos:line="123" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="40">"://"<pos:position pos:line="123" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="46"/></argument_list></call> <operator pos:line="123" pos:column="47">+<pos:position pos:line="123" pos:column="48"/></operator> <literal type="number" pos:line="123" pos:column="49">3<pos:position pos:line="123" pos:column="50"/></literal></expr>;<pos:position pos:line="123" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name pos:line="124" pos:column="9">ssl<pos:position pos:line="124" pos:column="12"/></name> <operator pos:line="124" pos:column="13">=<pos:position pos:line="124" pos:column="14"/></operator> <call><name pos:line="124" pos:column="15">strstr<pos:position pos:line="124" pos:column="21"/></name><argument_list pos:line="124" pos:column="21">(<argument><expr><name><name pos:line="124" pos:column="22">margs<pos:position pos:line="124" pos:column="27"/></name><operator pos:line="124" pos:column="27">-&gt;<pos:position pos:line="124" pos:column="32"/></operator><name pos:line="124" pos:column="29">lurl<pos:position pos:line="124" pos:column="33"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="35">"ldaps://"<pos:position pos:line="124" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="47"/></expr_stmt>
        <if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><name pos:line="125" pos:column="13">ssl<pos:position pos:line="125" pos:column="16"/></name></expr>)<pos:position pos:line="125" pos:column="17"/></condition><then pos:line="125" pos:column="17"> <block pos:line="125" pos:column="18">{
            <expr_stmt><expr><call><name pos:line="126" pos:column="13">debug<pos:position pos:line="126" pos:column="18"/></name><argument_list pos:line="126" pos:column="18">(<argument><expr><operator pos:line="126" pos:column="19">(<pos:position pos:line="126" pos:column="20"/></operator><name pos:line="126" pos:column="20">char<pos:position pos:line="126" pos:column="24"/></name> <operator pos:line="126" pos:column="25">*<pos:position pos:line="126" pos:column="26"/></operator><operator pos:line="126" pos:column="26">)<pos:position pos:line="126" pos:column="27"/></operator> <literal type="string" pos:line="126" pos:column="28">"%s| %s: DEBUG: Enable SSL to ldap servers\n"<pos:position pos:line="126" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="126" pos:column="75">LogTime<pos:position pos:line="126" pos:column="82"/></name><argument_list pos:line="126" pos:column="82">()<pos:position pos:line="126" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="126" pos:column="86">PROGRAM<pos:position pos:line="126" pos:column="93"/></name></expr></argument>)<pos:position pos:line="126" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="95"/></expr_stmt>
        }<pos:position pos:line="127" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="128" pos:column="9">debug<pos:position pos:line="128" pos:column="14"/></name><argument_list pos:line="128" pos:column="14">(<argument><expr><operator pos:line="128" pos:column="15">(<pos:position pos:line="128" pos:column="16"/></operator><name pos:line="128" pos:column="16">char<pos:position pos:line="128" pos:column="20"/></name> <operator pos:line="128" pos:column="21">*<pos:position pos:line="128" pos:column="22"/></operator><operator pos:line="128" pos:column="22">)<pos:position pos:line="128" pos:column="23"/></operator> <literal type="string" pos:line="128" pos:column="24">"%s| %s: DEBUG: Canonicalise ldap server name %s\n"<pos:position pos:line="128" pos:column="75"/></literal></expr></argument>, <argument><expr><call><name pos:line="128" pos:column="77">LogTime<pos:position pos:line="128" pos:column="84"/></name><argument_list pos:line="128" pos:column="84">()<pos:position pos:line="128" pos:column="86"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="128" pos:column="88">PROGRAM<pos:position pos:line="128" pos:column="95"/></name></expr></argument>, <argument><expr><name pos:line="128" pos:column="97">hostname<pos:position pos:line="128" pos:column="105"/></name></expr></argument>)<pos:position pos:line="128" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="107"/></expr_stmt>
        <comment type="block" pos:line="129" pos:column="9">/*
         * Loop over list of ldap servers
         */</comment>
        <expr_stmt><expr><name pos:line="132" pos:column="9">host<pos:position pos:line="132" pos:column="13"/></name> <operator pos:line="132" pos:column="14">=<pos:position pos:line="132" pos:column="15"/></operator> <call><name pos:line="132" pos:column="16">xstrdup<pos:position pos:line="132" pos:column="23"/></name><argument_list pos:line="132" pos:column="23">(<argument><expr><name pos:line="132" pos:column="24">hostname<pos:position pos:line="132" pos:column="32"/></name></expr></argument>)<pos:position pos:line="132" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="34"/></expr_stmt>
        <expr_stmt><expr><name pos:line="133" pos:column="9">port<pos:position pos:line="133" pos:column="13"/></name> <operator pos:line="133" pos:column="14">=<pos:position pos:line="133" pos:column="15"/></operator> <literal type="number" pos:line="133" pos:column="16">389<pos:position pos:line="133" pos:column="19"/></literal></expr>;<pos:position pos:line="133" pos:column="20"/></expr_stmt>
        <if pos:line="134" pos:column="9">if <condition pos:line="134" pos:column="12">(<expr><operator pos:line="134" pos:column="13">(<pos:position pos:line="134" pos:column="14"/></operator><name pos:line="134" pos:column="14">p<pos:position pos:line="134" pos:column="15"/></name> <operator pos:line="134" pos:column="16">=<pos:position pos:line="134" pos:column="17"/></operator> <call><name pos:line="134" pos:column="18">strchr<pos:position pos:line="134" pos:column="24"/></name><argument_list pos:line="134" pos:column="24">(<argument><expr><name pos:line="134" pos:column="25">host<pos:position pos:line="134" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="134" pos:column="31">':'<pos:position pos:line="134" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="35"/></argument_list></call><operator pos:line="134" pos:column="35">)<pos:position pos:line="134" pos:column="36"/></operator></expr>)<pos:position pos:line="134" pos:column="37"/></condition><then pos:line="134" pos:column="37"> <block pos:line="134" pos:column="38">{
            <expr_stmt><expr><operator pos:line="135" pos:column="13">*<pos:position pos:line="135" pos:column="14"/></operator><name pos:line="135" pos:column="14">p<pos:position pos:line="135" pos:column="15"/></name> <operator pos:line="135" pos:column="16">=<pos:position pos:line="135" pos:column="17"/></operator> <literal type="char" pos:line="135" pos:column="18">'\0'<pos:position pos:line="135" pos:column="22"/></literal></expr>;<pos:position pos:line="135" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="136" pos:column="13">++<pos:position pos:line="136" pos:column="15"/></operator><name pos:line="136" pos:column="15">p<pos:position pos:line="136" pos:column="16"/></name></expr>;<pos:position pos:line="136" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><name pos:line="137" pos:column="13">port<pos:position pos:line="137" pos:column="17"/></name> <operator pos:line="137" pos:column="18">=<pos:position pos:line="137" pos:column="19"/></operator> <call><name pos:line="137" pos:column="20">atoi<pos:position pos:line="137" pos:column="24"/></name><argument_list pos:line="137" pos:column="24">(<argument><expr><name pos:line="137" pos:column="25">p<pos:position pos:line="137" pos:column="26"/></name></expr></argument>)<pos:position pos:line="137" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="138" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="139" pos:column="9">nhosts<pos:position pos:line="139" pos:column="15"/></name> <operator pos:line="139" pos:column="16">=<pos:position pos:line="139" pos:column="17"/></operator> <call><name pos:line="139" pos:column="18">get_hostname_list<pos:position pos:line="139" pos:column="35"/></name><argument_list pos:line="139" pos:column="35">(<argument><expr><name pos:line="139" pos:column="36">margs<pos:position pos:line="139" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="139" pos:column="43">&amp;<pos:position pos:line="139" pos:column="48"/></operator><name pos:line="139" pos:column="44">hlist<pos:position pos:line="139" pos:column="49"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="139" pos:column="51">0<pos:position pos:line="139" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="139" pos:column="54">host<pos:position pos:line="139" pos:column="58"/></name></expr></argument>)<pos:position pos:line="139" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="140" pos:column="9">safe_free<pos:position pos:line="140" pos:column="18"/></name><argument_list pos:line="140" pos:column="18">(<argument><expr><name pos:line="140" pos:column="19">host<pos:position pos:line="140" pos:column="23"/></name></expr></argument>)<pos:position pos:line="140" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="25"/></expr_stmt>
        <for pos:line="141" pos:column="9">for <control pos:line="141" pos:column="13">(<init><expr><name pos:line="141" pos:column="14">i<pos:position pos:line="141" pos:column="15"/></name> <operator pos:line="141" pos:column="16">=<pos:position pos:line="141" pos:column="17"/></operator> <literal type="number" pos:line="141" pos:column="18">0<pos:position pos:line="141" pos:column="19"/></literal></expr>;<pos:position pos:line="141" pos:column="20"/></init> <condition><expr><name pos:line="141" pos:column="21">i<pos:position pos:line="141" pos:column="22"/></name> <operator pos:line="141" pos:column="23">&lt;<pos:position pos:line="141" pos:column="27"/></operator> <name pos:line="141" pos:column="25">nhosts<pos:position pos:line="141" pos:column="31"/></name></expr>;<pos:position pos:line="141" pos:column="32"/></condition> <incr><expr><operator pos:line="141" pos:column="33">++<pos:position pos:line="141" pos:column="35"/></operator><name pos:line="141" pos:column="35">i<pos:position pos:line="141" pos:column="36"/></name></expr></incr>)<pos:position pos:line="141" pos:column="37"/></control> <block pos:line="141" pos:column="38">{

            <expr_stmt><expr><name pos:line="143" pos:column="13">ld<pos:position pos:line="143" pos:column="15"/></name> <operator pos:line="143" pos:column="16">=<pos:position pos:line="143" pos:column="17"/></operator> <call><name pos:line="143" pos:column="18">tool_ldap_open<pos:position pos:line="143" pos:column="32"/></name><argument_list pos:line="143" pos:column="32">(<argument><expr><name pos:line="143" pos:column="33">margs<pos:position pos:line="143" pos:column="38"/></name></expr></argument>, <argument><expr><name><name pos:line="143" pos:column="40">hlist<pos:position pos:line="143" pos:column="45"/></name><index pos:line="143" pos:column="45">[<expr><name pos:line="143" pos:column="46">i<pos:position pos:line="143" pos:column="47"/></name></expr>]<pos:position pos:line="143" pos:column="48"/></index></name><operator pos:line="143" pos:column="48">.<pos:position pos:line="143" pos:column="49"/></operator><name pos:line="143" pos:column="49">host<pos:position pos:line="143" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="55">port<pos:position pos:line="143" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="143" pos:column="61">ssl<pos:position pos:line="143" pos:column="64"/></name></expr></argument>)<pos:position pos:line="143" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="66"/></expr_stmt>
            <if pos:line="144" pos:column="13">if <condition pos:line="144" pos:column="16">(<expr><operator pos:line="144" pos:column="17">!<pos:position pos:line="144" pos:column="18"/></operator><name pos:line="144" pos:column="18">ld<pos:position pos:line="144" pos:column="20"/></name></expr>)<pos:position pos:line="144" pos:column="21"/></condition><then pos:line="144" pos:column="21">
                <block type="pseudo"><continue pos:line="145" pos:column="17">continue;<pos:position pos:line="145" pos:column="26"/></continue></block></then></if>
            <comment type="block" pos:line="146" pos:column="13">/*
             * ldap bind with username/password authentication
             */</comment>

            <expr_stmt><expr><call><name pos:line="150" pos:column="13">debug<pos:position pos:line="150" pos:column="18"/></name><argument_list pos:line="150" pos:column="18">(<argument><expr><operator pos:line="150" pos:column="19">(<pos:position pos:line="150" pos:column="20"/></operator><name pos:line="150" pos:column="20">char<pos:position pos:line="150" pos:column="24"/></name> <operator pos:line="150" pos:column="25">*<pos:position pos:line="150" pos:column="26"/></operator><operator pos:line="150" pos:column="26">)<pos:position pos:line="150" pos:column="27"/></operator> <literal type="string" pos:line="150" pos:column="28">"%s| %s: DEBUG: Bind to ldap server with Username/Password\n"<pos:position pos:line="150" pos:column="89"/></literal></expr></argument>, <argument><expr><call><name pos:line="150" pos:column="91">LogTime<pos:position pos:line="150" pos:column="98"/></name><argument_list pos:line="150" pos:column="98">()<pos:position pos:line="150" pos:column="100"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="150" pos:column="102">PROGRAM<pos:position pos:line="150" pos:column="109"/></name></expr></argument>)<pos:position pos:line="150" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="150" pos:column="111"/></expr_stmt>
            <expr_stmt><expr><name pos:line="151" pos:column="13">rc<pos:position pos:line="151" pos:column="15"/></name> <operator pos:line="151" pos:column="16">=<pos:position pos:line="151" pos:column="17"/></operator> <call><name pos:line="151" pos:column="18">ldap_simple_bind_s<pos:position pos:line="151" pos:column="36"/></name><argument_list pos:line="151" pos:column="36">(<argument><expr><name pos:line="151" pos:column="37">ld<pos:position pos:line="151" pos:column="39"/></name></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="41">margs<pos:position pos:line="151" pos:column="46"/></name><operator pos:line="151" pos:column="46">-&gt;<pos:position pos:line="151" pos:column="51"/></operator><name pos:line="151" pos:column="48">luser<pos:position pos:line="151" pos:column="53"/></name></name></expr></argument>, <argument><expr><name><name pos:line="151" pos:column="55">margs<pos:position pos:line="151" pos:column="60"/></name><operator pos:line="151" pos:column="60">-&gt;<pos:position pos:line="151" pos:column="65"/></operator><name pos:line="151" pos:column="62">lpass<pos:position pos:line="151" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="151" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="69"/></expr_stmt>
            <if pos:line="152" pos:column="13">if <condition pos:line="152" pos:column="16">(<expr><name pos:line="152" pos:column="17">rc<pos:position pos:line="152" pos:column="19"/></name> <operator pos:line="152" pos:column="20">!=<pos:position pos:line="152" pos:column="22"/></operator> <name pos:line="152" pos:column="23">LDAP_SUCCESS<pos:position pos:line="152" pos:column="35"/></name></expr>)<pos:position pos:line="152" pos:column="36"/></condition><then pos:line="152" pos:column="36"> <block pos:line="152" pos:column="37">{
                <expr_stmt><expr><call><name pos:line="153" pos:column="17">error<pos:position pos:line="153" pos:column="22"/></name><argument_list pos:line="153" pos:column="22">(<argument><expr><operator pos:line="153" pos:column="23">(<pos:position pos:line="153" pos:column="24"/></operator><name pos:line="153" pos:column="24">char<pos:position pos:line="153" pos:column="28"/></name> <operator pos:line="153" pos:column="29">*<pos:position pos:line="153" pos:column="30"/></operator><operator pos:line="153" pos:column="30">)<pos:position pos:line="153" pos:column="31"/></operator> <literal type="string" pos:line="153" pos:column="32">"%s| %s: ERROR: Error while binding to ldap server with Username/Password: %s\n"<pos:position pos:line="153" pos:column="112"/></literal></expr></argument>, <argument><expr><call><name pos:line="153" pos:column="114">LogTime<pos:position pos:line="153" pos:column="121"/></name><argument_list pos:line="153" pos:column="121">()<pos:position pos:line="153" pos:column="123"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="153" pos:column="125">PROGRAM<pos:position pos:line="153" pos:column="132"/></name></expr></argument>, <argument><expr><call><name pos:line="153" pos:column="134">ldap_err2string<pos:position pos:line="153" pos:column="149"/></name><argument_list pos:line="153" pos:column="149">(<argument><expr><name pos:line="153" pos:column="150">rc<pos:position pos:line="153" pos:column="152"/></name></expr></argument>)<pos:position pos:line="153" pos:column="153"/></argument_list></call></expr></argument>)<pos:position pos:line="153" pos:column="154"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="155"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="154" pos:column="17">ldap_unbind<pos:position pos:line="154" pos:column="28"/></name><argument_list pos:line="154" pos:column="28">(<argument><expr><name pos:line="154" pos:column="29">ld<pos:position pos:line="154" pos:column="31"/></name></expr></argument>)<pos:position pos:line="154" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="33"/></expr_stmt>
                <expr_stmt><expr><name pos:line="155" pos:column="17">ld<pos:position pos:line="155" pos:column="19"/></name> <operator pos:line="155" pos:column="20">=<pos:position pos:line="155" pos:column="21"/></operator> <name pos:line="155" pos:column="22">NULL<pos:position pos:line="155" pos:column="26"/></name></expr>;<pos:position pos:line="155" pos:column="27"/></expr_stmt>
                <continue pos:line="156" pos:column="17">continue;<pos:position pos:line="156" pos:column="26"/></continue>
            }<pos:position pos:line="157" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="158" pos:column="13">lcreds<pos:position pos:line="158" pos:column="19"/></name> <operator pos:line="158" pos:column="20">=<pos:position pos:line="158" pos:column="21"/></operator> <operator pos:line="158" pos:column="22">(<pos:position pos:line="158" pos:column="23"/></operator><name pos:line="158" pos:column="23">ldap_creds<pos:position pos:line="158" pos:column="33"/></name> <operator pos:line="158" pos:column="34">*<pos:position pos:line="158" pos:column="35"/></operator><operator pos:line="158" pos:column="35">)<pos:position pos:line="158" pos:column="36"/></operator> <call><name pos:line="158" pos:column="37">xmalloc<pos:position pos:line="158" pos:column="44"/></name><argument_list pos:line="158" pos:column="44">(<argument><expr><sizeof pos:line="158" pos:column="45">sizeof<argument_list pos:line="158" pos:column="51">(<argument><expr pos:line="158" pos:column="52">struct <name pos:line="158" pos:column="59">ldap_creds<pos:position pos:line="158" pos:column="69"/></name></expr></argument>)<pos:position pos:line="158" pos:column="70"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="158" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="158" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="159" pos:column="13">lcreds<pos:position pos:line="159" pos:column="19"/></name><operator pos:line="159" pos:column="19">-&gt;<pos:position pos:line="159" pos:column="24"/></operator><name pos:line="159" pos:column="21">dn<pos:position pos:line="159" pos:column="23"/></name></name> <operator pos:line="159" pos:column="24">=<pos:position pos:line="159" pos:column="25"/></operator> <call><name pos:line="159" pos:column="26">xstrdup<pos:position pos:line="159" pos:column="33"/></name><argument_list pos:line="159" pos:column="33">(<argument><expr><name><name pos:line="159" pos:column="34">margs<pos:position pos:line="159" pos:column="39"/></name><operator pos:line="159" pos:column="39">-&gt;<pos:position pos:line="159" pos:column="44"/></operator><name pos:line="159" pos:column="41">luser<pos:position pos:line="159" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="159" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="159" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="160" pos:column="13">lcreds<pos:position pos:line="160" pos:column="19"/></name><operator pos:line="160" pos:column="19">-&gt;<pos:position pos:line="160" pos:column="24"/></operator><name pos:line="160" pos:column="21">pw<pos:position pos:line="160" pos:column="23"/></name></name> <operator pos:line="160" pos:column="24">=<pos:position pos:line="160" pos:column="25"/></operator> <call><name pos:line="160" pos:column="26">xstrdup<pos:position pos:line="160" pos:column="33"/></name><argument_list pos:line="160" pos:column="33">(<argument><expr><name><name pos:line="160" pos:column="34">margs<pos:position pos:line="160" pos:column="39"/></name><operator pos:line="160" pos:column="39">-&gt;<pos:position pos:line="160" pos:column="44"/></operator><name pos:line="160" pos:column="41">lpass<pos:position pos:line="160" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="161" pos:column="13">ldap_set_rebind_proc<pos:position pos:line="161" pos:column="33"/></name><argument_list pos:line="161" pos:column="33">(<argument><expr><name pos:line="161" pos:column="34">ld<pos:position pos:line="161" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="161" pos:column="38">ldap_simple_rebind<pos:position pos:line="161" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="161" pos:column="58">(<pos:position pos:line="161" pos:column="59"/></operator><name pos:line="161" pos:column="59">char<pos:position pos:line="161" pos:column="63"/></name> <operator pos:line="161" pos:column="64">*<pos:position pos:line="161" pos:column="65"/></operator><operator pos:line="161" pos:column="65">)<pos:position pos:line="161" pos:column="66"/></operator> <name pos:line="161" pos:column="67">lcreds<pos:position pos:line="161" pos:column="73"/></name></expr></argument>)<pos:position pos:line="161" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="162" pos:column="13">debug<pos:position pos:line="162" pos:column="18"/></name><argument_list pos:line="162" pos:column="18">(<argument><expr><operator pos:line="162" pos:column="19">(<pos:position pos:line="162" pos:column="20"/></operator><name pos:line="162" pos:column="20">char<pos:position pos:line="162" pos:column="24"/></name> <operator pos:line="162" pos:column="25">*<pos:position pos:line="162" pos:column="26"/></operator><operator pos:line="162" pos:column="26">)<pos:position pos:line="162" pos:column="27"/></operator> <literal type="string" pos:line="162" pos:column="28">"%s| %s: DEBUG: %s set up %sconnection to ldap server %s:%d\n"<pos:position pos:line="162" pos:column="90"/></literal></expr></argument>, <argument><expr><call><name pos:line="162" pos:column="92">LogTime<pos:position pos:line="162" pos:column="99"/></name><argument_list pos:line="162" pos:column="99">()<pos:position pos:line="162" pos:column="101"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="162" pos:column="103">PROGRAM<pos:position pos:line="162" pos:column="110"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="162" pos:column="112">ld<pos:position pos:line="162" pos:column="114"/></name></expr> ?<pos:position pos:line="162" pos:column="116"/></condition><then pos:line="162" pos:column="116"> <expr><literal type="string" pos:line="162" pos:column="117">"Successfully"<pos:position pos:line="162" pos:column="131"/></literal></expr> <pos:position pos:line="162" pos:column="132"/></then><else pos:line="162" pos:column="132">: <expr><literal type="string" pos:line="162" pos:column="134">"Failed to"<pos:position pos:line="162" pos:column="145"/></literal></expr></else></ternary></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="162" pos:column="147">ssl<pos:position pos:line="162" pos:column="150"/></name></expr> ?<pos:position pos:line="162" pos:column="152"/></condition><then pos:line="162" pos:column="152"> <expr><literal type="string" pos:line="162" pos:column="153">"SSL protected "<pos:position pos:line="162" pos:column="169"/></literal></expr> <pos:position pos:line="162" pos:column="170"/></then><else pos:line="162" pos:column="170">: <expr><literal type="string" pos:line="162" pos:column="172">""<pos:position pos:line="162" pos:column="174"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="162" pos:column="176">hlist<pos:position pos:line="162" pos:column="181"/></name><index pos:line="162" pos:column="181">[<expr><name pos:line="162" pos:column="182">i<pos:position pos:line="162" pos:column="183"/></name></expr>]<pos:position pos:line="162" pos:column="184"/></index></name><operator pos:line="162" pos:column="184">.<pos:position pos:line="162" pos:column="185"/></operator><name pos:line="162" pos:column="185">host<pos:position pos:line="162" pos:column="189"/></name></expr></argument>, <argument><expr><name pos:line="162" pos:column="191">port<pos:position pos:line="162" pos:column="195"/></name></expr></argument>)<pos:position pos:line="162" pos:column="196"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="197"/></expr_stmt>
            <break pos:line="163" pos:column="13">break;<pos:position pos:line="163" pos:column="19"/></break>

        }<pos:position pos:line="165" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="166" pos:column="9">nhosts<pos:position pos:line="166" pos:column="15"/></name> <operator pos:line="166" pos:column="16">=<pos:position pos:line="166" pos:column="17"/></operator> <call><name pos:line="166" pos:column="18">free_hostname_list<pos:position pos:line="166" pos:column="36"/></name><argument_list pos:line="166" pos:column="36">(<argument><expr><operator pos:line="166" pos:column="37">&amp;<pos:position pos:line="166" pos:column="42"/></operator><name pos:line="166" pos:column="38">hlist<pos:position pos:line="166" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="166" pos:column="45">nhosts<pos:position pos:line="166" pos:column="51"/></name></expr></argument>)<pos:position pos:line="166" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="166" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="167" pos:column="9">xfree<pos:position pos:line="167" pos:column="14"/></name><argument_list pos:line="167" pos:column="14">(<argument><expr><name pos:line="167" pos:column="15">bindp<pos:position pos:line="167" pos:column="20"/></name></expr></argument>)<pos:position pos:line="167" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="22"/></expr_stmt>
        <if pos:line="168" pos:column="9">if <condition pos:line="168" pos:column="12">(<expr><name><name pos:line="168" pos:column="13">margs<pos:position pos:line="168" pos:column="18"/></name><operator pos:line="168" pos:column="18">-&gt;<pos:position pos:line="168" pos:column="23"/></operator><name pos:line="168" pos:column="20">lbind<pos:position pos:line="168" pos:column="25"/></name></name></expr>)<pos:position pos:line="168" pos:column="26"/></condition><then pos:line="168" pos:column="26"> <block pos:line="168" pos:column="27">{
            <expr_stmt><expr><name pos:line="169" pos:column="13">bindp<pos:position pos:line="169" pos:column="18"/></name> <operator pos:line="169" pos:column="19">=<pos:position pos:line="169" pos:column="20"/></operator> <call><name pos:line="169" pos:column="21">xstrdup<pos:position pos:line="169" pos:column="28"/></name><argument_list pos:line="169" pos:column="28">(<argument><expr><name><name pos:line="169" pos:column="29">margs<pos:position pos:line="169" pos:column="34"/></name><operator pos:line="169" pos:column="34">-&gt;<pos:position pos:line="169" pos:column="39"/></operator><name pos:line="169" pos:column="36">lbind<pos:position pos:line="169" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="169" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="170" pos:column="10"/></block></then> <else pos:line="170" pos:column="11">else <block pos:line="170" pos:column="16">{
            <expr_stmt><expr><name pos:line="171" pos:column="13">bindp<pos:position pos:line="171" pos:column="18"/></name> <operator pos:line="171" pos:column="19">=<pos:position pos:line="171" pos:column="20"/></operator> <call><name pos:line="171" pos:column="21">convert_domain_to_bind_path<pos:position pos:line="171" pos:column="48"/></name><argument_list pos:line="171" pos:column="48">(<argument><expr><name pos:line="171" pos:column="49">domain<pos:position pos:line="171" pos:column="55"/></name></expr></argument>)<pos:position pos:line="171" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="171" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="172" pos:column="10"/></block></else></if>
    }<pos:position pos:line="173" pos:column="6"/></block></then></if>
    <if pos:line="174" pos:column="5">if <condition pos:line="174" pos:column="8">(<expr><name pos:line="174" pos:column="9">ld<pos:position pos:line="174" pos:column="11"/></name> <operator pos:line="174" pos:column="12">==<pos:position pos:line="174" pos:column="14"/></operator> <name pos:line="174" pos:column="15">NULL<pos:position pos:line="174" pos:column="19"/></name></expr>)<pos:position pos:line="174" pos:column="20"/></condition><then pos:line="174" pos:column="20"> <block pos:line="174" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="175" pos:column="9">debug<pos:position pos:line="175" pos:column="14"/></name><argument_list pos:line="175" pos:column="14">(<argument><expr><operator pos:line="175" pos:column="15">(<pos:position pos:line="175" pos:column="16"/></operator><name pos:line="175" pos:column="16">char<pos:position pos:line="175" pos:column="20"/></name> <operator pos:line="175" pos:column="21">*<pos:position pos:line="175" pos:column="22"/></operator><operator pos:line="175" pos:column="22">)<pos:position pos:line="175" pos:column="23"/></operator> <literal type="string" pos:line="175" pos:column="24">"%s| %s: DEBUG: Error during initialisation of ldap connection: %s\n"<pos:position pos:line="175" pos:column="93"/></literal></expr></argument>, <argument><expr><call><name pos:line="175" pos:column="95">LogTime<pos:position pos:line="175" pos:column="102"/></name><argument_list pos:line="175" pos:column="102">()<pos:position pos:line="175" pos:column="104"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="175" pos:column="106">PROGRAM<pos:position pos:line="175" pos:column="113"/></name></expr></argument>, <argument><expr><call><name pos:line="175" pos:column="115">strerror<pos:position pos:line="175" pos:column="123"/></name><argument_list pos:line="175" pos:column="123">(<argument><expr><name pos:line="175" pos:column="124">errno<pos:position pos:line="175" pos:column="129"/></name></expr></argument>)<pos:position pos:line="175" pos:column="130"/></argument_list></call></expr></argument>)<pos:position pos:line="175" pos:column="131"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="132"/></expr_stmt>
        <expr_stmt><expr><name pos:line="176" pos:column="9">retval<pos:position pos:line="176" pos:column="15"/></name> <operator pos:line="176" pos:column="16">=<pos:position pos:line="176" pos:column="17"/></operator> <literal type="number" pos:line="176" pos:column="18">0<pos:position pos:line="176" pos:column="19"/></literal></expr>;<pos:position pos:line="176" pos:column="20"/></expr_stmt>
        <goto pos:line="177" pos:column="9">goto <name pos:line="177" pos:column="14">cleanup<pos:position pos:line="177" pos:column="21"/></name>;<pos:position pos:line="177" pos:column="22"/></goto>
    }<pos:position pos:line="178" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="179" pos:column="5">/*
     * ldap search for user
     */</comment>
    <comment type="block" pos:line="182" pos:column="5">/*
     * Check if server is AD by querying for attribute samaccountname
     */</comment>
    <expr_stmt><expr><name><name pos:line="185" pos:column="5">margs<pos:position pos:line="185" pos:column="10"/></name><operator pos:line="185" pos:column="10">-&gt;<pos:position pos:line="185" pos:column="15"/></operator><name pos:line="185" pos:column="12">AD<pos:position pos:line="185" pos:column="14"/></name></name> <operator pos:line="185" pos:column="15">=<pos:position pos:line="185" pos:column="16"/></operator> <literal type="number" pos:line="185" pos:column="17">0<pos:position pos:line="185" pos:column="18"/></literal></expr>;<pos:position pos:line="185" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="186" pos:column="5">rc<pos:position pos:line="186" pos:column="7"/></name> <operator pos:line="186" pos:column="8">=<pos:position pos:line="186" pos:column="9"/></operator> <call><name pos:line="186" pos:column="10">check_AD<pos:position pos:line="186" pos:column="18"/></name><argument_list pos:line="186" pos:column="18">(<argument><expr><name pos:line="186" pos:column="19">margs<pos:position pos:line="186" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="26">ld<pos:position pos:line="186" pos:column="28"/></name></expr></argument>)<pos:position pos:line="186" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="30"/></expr_stmt>
    <if pos:line="187" pos:column="5">if <condition pos:line="187" pos:column="8">(<expr><name pos:line="187" pos:column="9">rc<pos:position pos:line="187" pos:column="11"/></name> <operator pos:line="187" pos:column="12">!=<pos:position pos:line="187" pos:column="14"/></operator> <name pos:line="187" pos:column="15">LDAP_SUCCESS<pos:position pos:line="187" pos:column="27"/></name></expr>)<pos:position pos:line="187" pos:column="28"/></condition><then pos:line="187" pos:column="28"> <block pos:line="187" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="188" pos:column="9">error<pos:position pos:line="188" pos:column="14"/></name><argument_list pos:line="188" pos:column="14">(<argument><expr><operator pos:line="188" pos:column="15">(<pos:position pos:line="188" pos:column="16"/></operator><name pos:line="188" pos:column="16">char<pos:position pos:line="188" pos:column="20"/></name> <operator pos:line="188" pos:column="21">*<pos:position pos:line="188" pos:column="22"/></operator><operator pos:line="188" pos:column="22">)<pos:position pos:line="188" pos:column="23"/></operator> <literal type="string" pos:line="188" pos:column="24">"%s| %s: ERROR: Error determining ldap server type: %s\n"<pos:position pos:line="188" pos:column="81"/></literal></expr></argument>, <argument><expr><call><name pos:line="188" pos:column="83">LogTime<pos:position pos:line="188" pos:column="90"/></name><argument_list pos:line="188" pos:column="90">()<pos:position pos:line="188" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="188" pos:column="94">PROGRAM<pos:position pos:line="188" pos:column="101"/></name></expr></argument>, <argument><expr><call><name pos:line="188" pos:column="103">ldap_err2string<pos:position pos:line="188" pos:column="118"/></name><argument_list pos:line="188" pos:column="118">(<argument><expr><name pos:line="188" pos:column="119">rc<pos:position pos:line="188" pos:column="121"/></name></expr></argument>)<pos:position pos:line="188" pos:column="122"/></argument_list></call></expr></argument>)<pos:position pos:line="188" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="124"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="189" pos:column="9">ldap_unbind<pos:position pos:line="189" pos:column="20"/></name><argument_list pos:line="189" pos:column="20">(<argument><expr><name pos:line="189" pos:column="21">ld<pos:position pos:line="189" pos:column="23"/></name></expr></argument>)<pos:position pos:line="189" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="190" pos:column="9">ld<pos:position pos:line="190" pos:column="11"/></name> <operator pos:line="190" pos:column="12">=<pos:position pos:line="190" pos:column="13"/></operator> <name pos:line="190" pos:column="14">NULL<pos:position pos:line="190" pos:column="18"/></name></expr>;<pos:position pos:line="190" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="191" pos:column="9">retval<pos:position pos:line="191" pos:column="15"/></name> <operator pos:line="191" pos:column="16">=<pos:position pos:line="191" pos:column="17"/></operator> <literal type="number" pos:line="191" pos:column="18">0<pos:position pos:line="191" pos:column="19"/></literal></expr>;<pos:position pos:line="191" pos:column="20"/></expr_stmt>
        <goto pos:line="192" pos:column="9">goto <name pos:line="192" pos:column="14">cleanup<pos:position pos:line="192" pos:column="21"/></name>;<pos:position pos:line="192" pos:column="22"/></goto>
    }<pos:position pos:line="193" pos:column="6"/></block></then></if>
    <if pos:line="194" pos:column="5">if <condition pos:line="194" pos:column="8">(<expr><name><name pos:line="194" pos:column="9">margs<pos:position pos:line="194" pos:column="14"/></name><operator pos:line="194" pos:column="14">-&gt;<pos:position pos:line="194" pos:column="19"/></operator><name pos:line="194" pos:column="16">AD<pos:position pos:line="194" pos:column="18"/></name></name></expr>)<pos:position pos:line="194" pos:column="19"/></condition><then pos:line="194" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="195" pos:column="9">filter<pos:position pos:line="195" pos:column="15"/></name> <operator pos:line="195" pos:column="16">=<pos:position pos:line="195" pos:column="17"/></operator> <operator pos:line="195" pos:column="18">(<pos:position pos:line="195" pos:column="19"/></operator><name pos:line="195" pos:column="19">char<pos:position pos:line="195" pos:column="23"/></name> <operator pos:line="195" pos:column="24">*<pos:position pos:line="195" pos:column="25"/></operator><operator pos:line="195" pos:column="25">)<pos:position pos:line="195" pos:column="26"/></operator> <name pos:line="195" pos:column="27">FILTER_AD<pos:position pos:line="195" pos:column="36"/></name></expr>;<pos:position pos:line="195" pos:column="37"/></expr_stmt></block></then>
    <else pos:line="196" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="197" pos:column="9">filter<pos:position pos:line="197" pos:column="15"/></name> <operator pos:line="197" pos:column="16">=<pos:position pos:line="197" pos:column="17"/></operator> <operator pos:line="197" pos:column="18">(<pos:position pos:line="197" pos:column="19"/></operator><name pos:line="197" pos:column="19">char<pos:position pos:line="197" pos:column="23"/></name> <operator pos:line="197" pos:column="24">*<pos:position pos:line="197" pos:column="25"/></operator><operator pos:line="197" pos:column="25">)<pos:position pos:line="197" pos:column="26"/></operator> <name pos:line="197" pos:column="27">FILTER<pos:position pos:line="197" pos:column="33"/></name></expr>;<pos:position pos:line="197" pos:column="34"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="199" pos:column="5">ldap_filter_esc<pos:position pos:line="199" pos:column="20"/></name> <operator pos:line="199" pos:column="21">=<pos:position pos:line="199" pos:column="22"/></operator> <call><name pos:line="199" pos:column="23">escape_filter<pos:position pos:line="199" pos:column="36"/></name><argument_list pos:line="199" pos:column="36">(<argument><expr><name pos:line="199" pos:column="37">user<pos:position pos:line="199" pos:column="41"/></name></expr></argument>)<pos:position pos:line="199" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name pos:line="201" pos:column="5">search_exp<pos:position pos:line="201" pos:column="15"/></name> <operator pos:line="201" pos:column="16">=<pos:position pos:line="201" pos:column="17"/></operator> <operator pos:line="201" pos:column="18">(<pos:position pos:line="201" pos:column="19"/></operator><name pos:line="201" pos:column="19">char<pos:position pos:line="201" pos:column="23"/></name> <operator pos:line="201" pos:column="24">*<pos:position pos:line="201" pos:column="25"/></operator><operator pos:line="201" pos:column="25">)<pos:position pos:line="201" pos:column="26"/></operator> <call><name pos:line="201" pos:column="27">xmalloc<pos:position pos:line="201" pos:column="34"/></name><argument_list pos:line="201" pos:column="34">(<argument><expr><call><name pos:line="201" pos:column="35">strlen<pos:position pos:line="201" pos:column="41"/></name><argument_list pos:line="201" pos:column="41">(<argument><expr><name pos:line="201" pos:column="42">filter<pos:position pos:line="201" pos:column="48"/></name></expr></argument>)<pos:position pos:line="201" pos:column="49"/></argument_list></call> <operator pos:line="201" pos:column="50">+<pos:position pos:line="201" pos:column="51"/></operator> <call><name pos:line="201" pos:column="52">strlen<pos:position pos:line="201" pos:column="58"/></name><argument_list pos:line="201" pos:column="58">(<argument><expr><name pos:line="201" pos:column="59">ldap_filter_esc<pos:position pos:line="201" pos:column="74"/></name></expr></argument>)<pos:position pos:line="201" pos:column="75"/></argument_list></call> <operator pos:line="201" pos:column="76">+<pos:position pos:line="201" pos:column="77"/></operator> <literal type="number" pos:line="201" pos:column="78">1<pos:position pos:line="201" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="201" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="201" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="202" pos:column="5">snprintf<pos:position pos:line="202" pos:column="13"/></name><argument_list pos:line="202" pos:column="13">(<argument><expr><name pos:line="202" pos:column="14">search_exp<pos:position pos:line="202" pos:column="24"/></name></expr></argument>, <argument><expr><call><name pos:line="202" pos:column="26">strlen<pos:position pos:line="202" pos:column="32"/></name><argument_list pos:line="202" pos:column="32">(<argument><expr><name pos:line="202" pos:column="33">filter<pos:position pos:line="202" pos:column="39"/></name></expr></argument>)<pos:position pos:line="202" pos:column="40"/></argument_list></call> <operator pos:line="202" pos:column="41">+<pos:position pos:line="202" pos:column="42"/></operator> <call><name pos:line="202" pos:column="43">strlen<pos:position pos:line="202" pos:column="49"/></name><argument_list pos:line="202" pos:column="49">(<argument><expr><name pos:line="202" pos:column="50">ldap_filter_esc<pos:position pos:line="202" pos:column="65"/></name></expr></argument>)<pos:position pos:line="202" pos:column="66"/></argument_list></call> <operator pos:line="202" pos:column="67">+<pos:position pos:line="202" pos:column="68"/></operator> <literal type="number" pos:line="202" pos:column="69">1<pos:position pos:line="202" pos:column="70"/></literal></expr></argument>, <argument><expr><name pos:line="202" pos:column="72">filter<pos:position pos:line="202" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="202" pos:column="80">ldap_filter_esc<pos:position pos:line="202" pos:column="95"/></name></expr></argument>)<pos:position pos:line="202" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="97"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="204" pos:column="5">xfree<pos:position pos:line="204" pos:column="10"/></name><argument_list pos:line="204" pos:column="10">(<argument><expr><name pos:line="204" pos:column="11">ldap_filter_esc<pos:position pos:line="204" pos:column="26"/></name></expr></argument>)<pos:position pos:line="204" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="204" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="206" pos:column="5">debug<pos:position pos:line="206" pos:column="10"/></name><argument_list pos:line="206" pos:column="10">(<argument><expr><operator pos:line="206" pos:column="11">(<pos:position pos:line="206" pos:column="12"/></operator><name pos:line="206" pos:column="12">char<pos:position pos:line="206" pos:column="16"/></name> <operator pos:line="206" pos:column="17">*<pos:position pos:line="206" pos:column="18"/></operator><operator pos:line="206" pos:column="18">)<pos:position pos:line="206" pos:column="19"/></operator> <literal type="string" pos:line="206" pos:column="20">"%s| %s: DEBUG: Search ldap server with bind path %s and filter : %s\n"<pos:position pos:line="206" pos:column="91"/></literal></expr></argument>, <argument><expr><call><name pos:line="206" pos:column="93">LogTime<pos:position pos:line="206" pos:column="100"/></name><argument_list pos:line="206" pos:column="100">()<pos:position pos:line="206" pos:column="102"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="206" pos:column="104">PROGRAM<pos:position pos:line="206" pos:column="111"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="113">bindp<pos:position pos:line="206" pos:column="118"/></name></expr></argument>, <argument><expr><name pos:line="206" pos:column="120">search_exp<pos:position pos:line="206" pos:column="130"/></name></expr></argument>)<pos:position pos:line="206" pos:column="131"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="132"/></expr_stmt>
    <expr_stmt><expr><name pos:line="207" pos:column="5">rc<pos:position pos:line="207" pos:column="7"/></name> <operator pos:line="207" pos:column="8">=<pos:position pos:line="207" pos:column="9"/></operator> <call><name pos:line="207" pos:column="10">ldap_search_ext_s<pos:position pos:line="207" pos:column="27"/></name><argument_list pos:line="207" pos:column="27">(<argument><expr><name pos:line="207" pos:column="28">ld<pos:position pos:line="207" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="32">bindp<pos:position pos:line="207" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="207" pos:column="39">LDAP_SCOPE_SUBTREE<pos:position pos:line="207" pos:column="57"/></name></expr></argument>,
                           <argument><expr><name pos:line="208" pos:column="28">search_exp<pos:position pos:line="208" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="208" pos:column="40">NULL<pos:position pos:line="208" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="208" pos:column="46">0<pos:position pos:line="208" pos:column="47"/></literal></expr></argument>,
                           <argument><expr><name pos:line="209" pos:column="28">NULL<pos:position pos:line="209" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="209" pos:column="34">NULL<pos:position pos:line="209" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="209" pos:column="40">&amp;<pos:position pos:line="209" pos:column="45"/></operator><name pos:line="209" pos:column="41">searchtime<pos:position pos:line="209" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="209" pos:column="53">0<pos:position pos:line="209" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="209" pos:column="56">&amp;<pos:position pos:line="209" pos:column="61"/></operator><name pos:line="209" pos:column="57">res<pos:position pos:line="209" pos:column="60"/></name></expr></argument>)<pos:position pos:line="209" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="209" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="210" pos:column="5">xfree<pos:position pos:line="210" pos:column="10"/></name><argument_list pos:line="210" pos:column="10">(<argument><expr><name pos:line="210" pos:column="11">search_exp<pos:position pos:line="210" pos:column="21"/></name></expr></argument>)<pos:position pos:line="210" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="210" pos:column="23"/></expr_stmt>

    <if pos:line="212" pos:column="5">if <condition pos:line="212" pos:column="8">(<expr><name pos:line="212" pos:column="9">rc<pos:position pos:line="212" pos:column="11"/></name> <operator pos:line="212" pos:column="12">!=<pos:position pos:line="212" pos:column="14"/></operator> <name pos:line="212" pos:column="15">LDAP_SUCCESS<pos:position pos:line="212" pos:column="27"/></name></expr>)<pos:position pos:line="212" pos:column="28"/></condition><then pos:line="212" pos:column="28"> <block pos:line="212" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="213" pos:column="9">error<pos:position pos:line="213" pos:column="14"/></name><argument_list pos:line="213" pos:column="14">(<argument><expr><operator pos:line="213" pos:column="15">(<pos:position pos:line="213" pos:column="16"/></operator><name pos:line="213" pos:column="16">char<pos:position pos:line="213" pos:column="20"/></name> <operator pos:line="213" pos:column="21">*<pos:position pos:line="213" pos:column="22"/></operator><operator pos:line="213" pos:column="22">)<pos:position pos:line="213" pos:column="23"/></operator> <literal type="string" pos:line="213" pos:column="24">"%s| %s: ERROR: Error searching ldap server: %s\n"<pos:position pos:line="213" pos:column="74"/></literal></expr></argument>, <argument><expr><call><name pos:line="213" pos:column="76">LogTime<pos:position pos:line="213" pos:column="83"/></name><argument_list pos:line="213" pos:column="83">()<pos:position pos:line="213" pos:column="85"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="213" pos:column="87">PROGRAM<pos:position pos:line="213" pos:column="94"/></name></expr></argument>, <argument><expr><call><name pos:line="213" pos:column="96">ldap_err2string<pos:position pos:line="213" pos:column="111"/></name><argument_list pos:line="213" pos:column="111">(<argument><expr><name pos:line="213" pos:column="112">rc<pos:position pos:line="213" pos:column="114"/></name></expr></argument>)<pos:position pos:line="213" pos:column="115"/></argument_list></call></expr></argument>)<pos:position pos:line="213" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="213" pos:column="117"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="214" pos:column="9">ldap_unbind<pos:position pos:line="214" pos:column="20"/></name><argument_list pos:line="214" pos:column="20">(<argument><expr><name pos:line="214" pos:column="21">ld<pos:position pos:line="214" pos:column="23"/></name></expr></argument>)<pos:position pos:line="214" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="214" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="215" pos:column="9">ld<pos:position pos:line="215" pos:column="11"/></name> <operator pos:line="215" pos:column="12">=<pos:position pos:line="215" pos:column="13"/></operator> <name pos:line="215" pos:column="14">NULL<pos:position pos:line="215" pos:column="18"/></name></expr>;<pos:position pos:line="215" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="216" pos:column="9">retval<pos:position pos:line="216" pos:column="15"/></name> <operator pos:line="216" pos:column="16">=<pos:position pos:line="216" pos:column="17"/></operator> <literal type="number" pos:line="216" pos:column="18">0<pos:position pos:line="216" pos:column="19"/></literal></expr>;<pos:position pos:line="216" pos:column="20"/></expr_stmt>
        <goto pos:line="217" pos:column="9">goto <name pos:line="217" pos:column="14">cleanup<pos:position pos:line="217" pos:column="21"/></name>;<pos:position pos:line="217" pos:column="22"/></goto>
    }<pos:position pos:line="218" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="219" pos:column="5">debug<pos:position pos:line="219" pos:column="10"/></name><argument_list pos:line="219" pos:column="10">(<argument><expr><operator pos:line="219" pos:column="11">(<pos:position pos:line="219" pos:column="12"/></operator><name pos:line="219" pos:column="12">char<pos:position pos:line="219" pos:column="16"/></name> <operator pos:line="219" pos:column="17">*<pos:position pos:line="219" pos:column="18"/></operator><operator pos:line="219" pos:column="18">)<pos:position pos:line="219" pos:column="19"/></operator> <literal type="string" pos:line="219" pos:column="20">"%s| %s: DEBUG: Found %d ldap entr%s\n"<pos:position pos:line="219" pos:column="59"/></literal></expr></argument>, <argument><expr><call><name pos:line="219" pos:column="61">LogTime<pos:position pos:line="219" pos:column="68"/></name><argument_list pos:line="219" pos:column="68">()<pos:position pos:line="219" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="219" pos:column="72">PROGRAM<pos:position pos:line="219" pos:column="79"/></name></expr></argument>, <argument><expr><call><name pos:line="219" pos:column="81">ldap_count_entries<pos:position pos:line="219" pos:column="99"/></name><argument_list pos:line="219" pos:column="99">(<argument><expr><name pos:line="219" pos:column="100">ld<pos:position pos:line="219" pos:column="102"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="104">res<pos:position pos:line="219" pos:column="107"/></name></expr></argument>)<pos:position pos:line="219" pos:column="108"/></argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="219" pos:column="110">ldap_count_entries<pos:position pos:line="219" pos:column="128"/></name><argument_list pos:line="219" pos:column="128">(<argument><expr><name pos:line="219" pos:column="129">ld<pos:position pos:line="219" pos:column="131"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="133">res<pos:position pos:line="219" pos:column="136"/></name></expr></argument>)<pos:position pos:line="219" pos:column="137"/></argument_list></call> <operator pos:line="219" pos:column="138">&gt;<pos:position pos:line="219" pos:column="142"/></operator> <literal type="number" pos:line="219" pos:column="140">1<pos:position pos:line="219" pos:column="141"/></literal> <operator pos:line="219" pos:column="142">||<pos:position pos:line="219" pos:column="144"/></operator> <call><name pos:line="219" pos:column="145">ldap_count_entries<pos:position pos:line="219" pos:column="163"/></name><argument_list pos:line="219" pos:column="163">(<argument><expr><name pos:line="219" pos:column="164">ld<pos:position pos:line="219" pos:column="166"/></name></expr></argument>, <argument><expr><name pos:line="219" pos:column="168">res<pos:position pos:line="219" pos:column="171"/></name></expr></argument>)<pos:position pos:line="219" pos:column="172"/></argument_list></call> <operator pos:line="219" pos:column="173">==<pos:position pos:line="219" pos:column="175"/></operator> <literal type="number" pos:line="219" pos:column="176">0<pos:position pos:line="219" pos:column="177"/></literal></expr> ?<pos:position pos:line="219" pos:column="179"/></condition><then pos:line="219" pos:column="179"> <expr><literal type="string" pos:line="219" pos:column="180">"ies"<pos:position pos:line="219" pos:column="185"/></literal></expr> <pos:position pos:line="219" pos:column="186"/></then><else pos:line="219" pos:column="186">: <expr><literal type="string" pos:line="219" pos:column="188">"y"<pos:position pos:line="219" pos:column="191"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="219" pos:column="192"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="193"/></expr_stmt>

    <if pos:line="221" pos:column="5">if <condition pos:line="221" pos:column="8">(<expr><call><name pos:line="221" pos:column="9">ldap_count_entries<pos:position pos:line="221" pos:column="27"/></name><argument_list pos:line="221" pos:column="27">(<argument><expr><name pos:line="221" pos:column="28">ld<pos:position pos:line="221" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="221" pos:column="32">res<pos:position pos:line="221" pos:column="35"/></name></expr></argument>)<pos:position pos:line="221" pos:column="36"/></argument_list></call> <operator pos:line="221" pos:column="37">!=<pos:position pos:line="221" pos:column="39"/></operator> <literal type="number" pos:line="221" pos:column="40">0<pos:position pos:line="221" pos:column="41"/></literal></expr>)<pos:position pos:line="221" pos:column="42"/></condition><then pos:line="221" pos:column="42"> <block pos:line="221" pos:column="43">{

        <if pos:line="223" pos:column="9">if <condition pos:line="223" pos:column="12">(<expr><name><name pos:line="223" pos:column="13">margs<pos:position pos:line="223" pos:column="18"/></name><operator pos:line="223" pos:column="18">-&gt;<pos:position pos:line="223" pos:column="23"/></operator><name pos:line="223" pos:column="20">AD<pos:position pos:line="223" pos:column="22"/></name></name></expr>)<pos:position pos:line="223" pos:column="23"/></condition><then pos:line="223" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><name pos:line="224" pos:column="13">max_attr<pos:position pos:line="224" pos:column="21"/></name> <operator pos:line="224" pos:column="22">=<pos:position pos:line="224" pos:column="23"/></operator> <call><name pos:line="224" pos:column="24">get_attributes<pos:position pos:line="224" pos:column="38"/></name><argument_list pos:line="224" pos:column="38">(<argument><expr><name pos:line="224" pos:column="39">margs<pos:position pos:line="224" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="46">ld<pos:position pos:line="224" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="50">res<pos:position pos:line="224" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="55">ATTRIBUTE_AD<pos:position pos:line="224" pos:column="67"/></name></expr></argument>, <argument><expr><operator pos:line="224" pos:column="69">&amp;<pos:position pos:line="224" pos:column="74"/></operator><name pos:line="224" pos:column="70">attr_value<pos:position pos:line="224" pos:column="80"/></name></expr></argument>)<pos:position pos:line="224" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="224" pos:column="82"/></expr_stmt></block></then>
        <else pos:line="225" pos:column="9">else <block pos:line="225" pos:column="14">{
            <expr_stmt><expr><name pos:line="226" pos:column="13">max_attr<pos:position pos:line="226" pos:column="21"/></name> <operator pos:line="226" pos:column="22">=<pos:position pos:line="226" pos:column="23"/></operator> <call><name pos:line="226" pos:column="24">get_attributes<pos:position pos:line="226" pos:column="38"/></name><argument_list pos:line="226" pos:column="38">(<argument><expr><name pos:line="226" pos:column="39">margs<pos:position pos:line="226" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="46">ld<pos:position pos:line="226" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="50">res<pos:position pos:line="226" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="226" pos:column="55">ATTRIBUTE<pos:position pos:line="226" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="226" pos:column="66">&amp;<pos:position pos:line="226" pos:column="71"/></operator><name pos:line="226" pos:column="67">attr_value<pos:position pos:line="226" pos:column="77"/></name></expr></argument>)<pos:position pos:line="226" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="79"/></expr_stmt>
        }<pos:position pos:line="227" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="229" pos:column="9">/*
         * Compare group names
         */</comment>
        <expr_stmt><expr><name pos:line="232" pos:column="9">retval<pos:position pos:line="232" pos:column="15"/></name> <operator pos:line="232" pos:column="16">=<pos:position pos:line="232" pos:column="17"/></operator> <literal type="number" pos:line="232" pos:column="18">0<pos:position pos:line="232" pos:column="19"/></literal></expr>;<pos:position pos:line="232" pos:column="20"/></expr_stmt>
        <for pos:line="233" pos:column="9">for <control pos:line="233" pos:column="13">(<init><expr><name pos:line="233" pos:column="14">j<pos:position pos:line="233" pos:column="15"/></name> <operator pos:line="233" pos:column="16">=<pos:position pos:line="233" pos:column="17"/></operator> <literal type="number" pos:line="233" pos:column="18">0<pos:position pos:line="233" pos:column="19"/></literal></expr>;<pos:position pos:line="233" pos:column="20"/></init> <condition><expr><name pos:line="233" pos:column="21">j<pos:position pos:line="233" pos:column="22"/></name> <operator pos:line="233" pos:column="23">&lt;<pos:position pos:line="233" pos:column="27"/></operator> <name pos:line="233" pos:column="25">max_attr<pos:position pos:line="233" pos:column="33"/></name></expr>;<pos:position pos:line="233" pos:column="34"/></condition> <incr><expr><operator pos:line="233" pos:column="35">++<pos:position pos:line="233" pos:column="37"/></operator><name pos:line="233" pos:column="37">j<pos:position pos:line="233" pos:column="38"/></name></expr></incr>)<pos:position pos:line="233" pos:column="39"/></control> <block pos:line="233" pos:column="40">{

            <comment type="block" pos:line="235" pos:column="13">/* Compare first CN= value assuming it is the same as the group name itself */</comment>
            <expr_stmt><expr><name pos:line="236" pos:column="13">av<pos:position pos:line="236" pos:column="15"/></name> <operator pos:line="236" pos:column="16">=<pos:position pos:line="236" pos:column="17"/></operator> <name><name pos:line="236" pos:column="18">attr_value<pos:position pos:line="236" pos:column="28"/></name><index pos:line="236" pos:column="28">[<expr><name pos:line="236" pos:column="29">j<pos:position pos:line="236" pos:column="30"/></name></expr>]<pos:position pos:line="236" pos:column="31"/></index></name></expr>;<pos:position pos:line="236" pos:column="32"/></expr_stmt>
            <if pos:line="237" pos:column="13">if <condition pos:line="237" pos:column="16">(<expr><operator pos:line="237" pos:column="17">!<pos:position pos:line="237" pos:column="18"/></operator><call><name pos:line="237" pos:column="18">strncasecmp<pos:position pos:line="237" pos:column="29"/></name><argument_list pos:line="237" pos:column="29">(<argument><expr><literal type="string" pos:line="237" pos:column="30">"CN="<pos:position pos:line="237" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="237" pos:column="37">av<pos:position pos:line="237" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="237" pos:column="41">3<pos:position pos:line="237" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="237" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="237" pos:column="44"/></condition><then pos:line="237" pos:column="44"> <block pos:line="237" pos:column="45">{
                <expr_stmt><expr><name pos:line="238" pos:column="17">av<pos:position pos:line="238" pos:column="19"/></name> <operator pos:line="238" pos:column="20">+=<pos:position pos:line="238" pos:column="22"/></operator> <literal type="number" pos:line="238" pos:column="23">3<pos:position pos:line="238" pos:column="24"/></literal></expr>;<pos:position pos:line="238" pos:column="25"/></expr_stmt>
                <if pos:line="239" pos:column="17">if <condition pos:line="239" pos:column="20">(<expr><operator pos:line="239" pos:column="21">(<pos:position pos:line="239" pos:column="22"/></operator><name pos:line="239" pos:column="22">avp<pos:position pos:line="239" pos:column="25"/></name> <operator pos:line="239" pos:column="26">=<pos:position pos:line="239" pos:column="27"/></operator> <call><name pos:line="239" pos:column="28">strchr<pos:position pos:line="239" pos:column="34"/></name><argument_list pos:line="239" pos:column="34">(<argument><expr><name pos:line="239" pos:column="35">av<pos:position pos:line="239" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="239" pos:column="39">','<pos:position pos:line="239" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="239" pos:column="43"/></argument_list></call><operator pos:line="239" pos:column="43">)<pos:position pos:line="239" pos:column="44"/></operator></expr>)<pos:position pos:line="239" pos:column="45"/></condition><then pos:line="239" pos:column="45"> <block pos:line="239" pos:column="46">{
                    <expr_stmt><expr><operator pos:line="240" pos:column="21">*<pos:position pos:line="240" pos:column="22"/></operator><name pos:line="240" pos:column="22">avp<pos:position pos:line="240" pos:column="25"/></name> <operator pos:line="240" pos:column="26">=<pos:position pos:line="240" pos:column="27"/></operator> <literal type="char" pos:line="240" pos:column="28">'\0'<pos:position pos:line="240" pos:column="32"/></literal></expr>;<pos:position pos:line="240" pos:column="33"/></expr_stmt>
                }<pos:position pos:line="241" pos:column="18"/></block></then></if>
            }<pos:position pos:line="242" pos:column="14"/></block></then></if>
            <if pos:line="243" pos:column="13">if <condition pos:line="243" pos:column="16">(<expr><name pos:line="243" pos:column="17">debug_enabled<pos:position pos:line="243" pos:column="30"/></name></expr>)<pos:position pos:line="243" pos:column="31"/></condition><then pos:line="243" pos:column="31"> <block pos:line="243" pos:column="32">{
                <decl_stmt><decl><type><name pos:line="244" pos:column="17">int<pos:position pos:line="244" pos:column="20"/></name></type> <name pos:line="244" pos:column="21">n<pos:position pos:line="244" pos:column="22"/></name></decl>;<pos:position pos:line="244" pos:column="23"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="245" pos:column="17">debug<pos:position pos:line="245" pos:column="22"/></name><argument_list pos:line="245" pos:column="22">(<argument><expr><operator pos:line="245" pos:column="23">(<pos:position pos:line="245" pos:column="24"/></operator><name pos:line="245" pos:column="24">char<pos:position pos:line="245" pos:column="28"/></name> <operator pos:line="245" pos:column="29">*<pos:position pos:line="245" pos:column="30"/></operator><operator pos:line="245" pos:column="30">)<pos:position pos:line="245" pos:column="31"/></operator> <literal type="string" pos:line="245" pos:column="32">"%s| %s: DEBUG: Entry %d \"%s\" in hex UTF-8 is "<pos:position pos:line="245" pos:column="81"/></literal></expr></argument>, <argument><expr><call><name pos:line="245" pos:column="83">LogTime<pos:position pos:line="245" pos:column="90"/></name><argument_list pos:line="245" pos:column="90">()<pos:position pos:line="245" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="245" pos:column="94">PROGRAM<pos:position pos:line="245" pos:column="101"/></name></expr></argument>, <argument><expr><name pos:line="245" pos:column="103">j<pos:position pos:line="245" pos:column="104"/></name> <operator pos:line="245" pos:column="105">+<pos:position pos:line="245" pos:column="106"/></operator> <literal type="number" pos:line="245" pos:column="107">1<pos:position pos:line="245" pos:column="108"/></literal></expr></argument>, <argument><expr><name pos:line="245" pos:column="110">av<pos:position pos:line="245" pos:column="112"/></name></expr></argument>)<pos:position pos:line="245" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="245" pos:column="114"/></expr_stmt>
                <for pos:line="246" pos:column="17">for <control pos:line="246" pos:column="21">(<init><expr><name pos:line="246" pos:column="22">n<pos:position pos:line="246" pos:column="23"/></name> <operator pos:line="246" pos:column="24">=<pos:position pos:line="246" pos:column="25"/></operator> <literal type="number" pos:line="246" pos:column="26">0<pos:position pos:line="246" pos:column="27"/></literal></expr>;<pos:position pos:line="246" pos:column="28"/></init> <condition><expr><name><name pos:line="246" pos:column="29">av<pos:position pos:line="246" pos:column="31"/></name><index pos:line="246" pos:column="31">[<expr><name pos:line="246" pos:column="32">n<pos:position pos:line="246" pos:column="33"/></name></expr>]<pos:position pos:line="246" pos:column="34"/></index></name> <operator pos:line="246" pos:column="35">!=<pos:position pos:line="246" pos:column="37"/></operator> <literal type="char" pos:line="246" pos:column="38">'\0'<pos:position pos:line="246" pos:column="42"/></literal></expr>;<pos:position pos:line="246" pos:column="43"/></condition> <incr><expr><operator pos:line="246" pos:column="44">++<pos:position pos:line="246" pos:column="46"/></operator><name pos:line="246" pos:column="46">n<pos:position pos:line="246" pos:column="47"/></name></expr></incr>)<pos:position pos:line="246" pos:column="48"/></control>
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="247" pos:column="21">fprintf<pos:position pos:line="247" pos:column="28"/></name><argument_list pos:line="247" pos:column="28">(<argument><expr><name pos:line="247" pos:column="29">stderr<pos:position pos:line="247" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="247" pos:column="37">"%02x"<pos:position pos:line="247" pos:column="43"/></literal></expr></argument>, <argument><expr><operator pos:line="247" pos:column="45">(<pos:position pos:line="247" pos:column="46"/></operator><name pos:line="247" pos:column="46">unsigned<pos:position pos:line="247" pos:column="54"/></name> <name pos:line="247" pos:column="55">char<pos:position pos:line="247" pos:column="59"/></name><operator pos:line="247" pos:column="59">)<pos:position pos:line="247" pos:column="60"/></operator> <name><name pos:line="247" pos:column="61">av<pos:position pos:line="247" pos:column="63"/></name><index pos:line="247" pos:column="63">[<expr><name pos:line="247" pos:column="64">n<pos:position pos:line="247" pos:column="65"/></name></expr>]<pos:position pos:line="247" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="247" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="68"/></expr_stmt></block></for>
                <expr_stmt><expr><call><name pos:line="248" pos:column="17">fprintf<pos:position pos:line="248" pos:column="24"/></name><argument_list pos:line="248" pos:column="24">(<argument><expr><name pos:line="248" pos:column="25">stderr<pos:position pos:line="248" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="248" pos:column="33">"\n"<pos:position pos:line="248" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="248" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="248" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="249" pos:column="14"/></block></then></if>
            <if pos:line="250" pos:column="13">if <condition pos:line="250" pos:column="16">(<expr><operator pos:line="250" pos:column="17">!<pos:position pos:line="250" pos:column="18"/></operator><call><name pos:line="250" pos:column="18">strcasecmp<pos:position pos:line="250" pos:column="28"/></name><argument_list pos:line="250" pos:column="28">(<argument><expr><name pos:line="250" pos:column="29">group<pos:position pos:line="250" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="250" pos:column="36">av<pos:position pos:line="250" pos:column="38"/></name></expr></argument>)<pos:position pos:line="250" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="250" pos:column="40"/></condition><then pos:line="250" pos:column="40"> <block pos:line="250" pos:column="41">{
                <expr_stmt><expr><name pos:line="251" pos:column="17">retval<pos:position pos:line="251" pos:column="23"/></name> <operator pos:line="251" pos:column="24">=<pos:position pos:line="251" pos:column="25"/></operator> <literal type="number" pos:line="251" pos:column="26">1<pos:position pos:line="251" pos:column="27"/></literal></expr>;<pos:position pos:line="251" pos:column="28"/></expr_stmt>
                <if pos:line="252" pos:column="17">if <condition pos:line="252" pos:column="20">(<expr><name pos:line="252" pos:column="21">debug_enabled<pos:position pos:line="252" pos:column="34"/></name></expr>)<pos:position pos:line="252" pos:column="35"/></condition><then pos:line="252" pos:column="35">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="253" pos:column="21">debug<pos:position pos:line="253" pos:column="26"/></name><argument_list pos:line="253" pos:column="26">(<argument><expr><operator pos:line="253" pos:column="27">(<pos:position pos:line="253" pos:column="28"/></operator><name pos:line="253" pos:column="28">char<pos:position pos:line="253" pos:column="32"/></name> <operator pos:line="253" pos:column="33">*<pos:position pos:line="253" pos:column="34"/></operator><operator pos:line="253" pos:column="34">)<pos:position pos:line="253" pos:column="35"/></operator> <literal type="string" pos:line="253" pos:column="36">"%s| %s: DEBUG: Entry %d \"%s\" matches group name \"%s\"\n"<pos:position pos:line="253" pos:column="96"/></literal></expr></argument>, <argument><expr><call><name pos:line="253" pos:column="98">LogTime<pos:position pos:line="253" pos:column="105"/></name><argument_list pos:line="253" pos:column="105">()<pos:position pos:line="253" pos:column="107"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="253" pos:column="109">PROGRAM<pos:position pos:line="253" pos:column="116"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="118">j<pos:position pos:line="253" pos:column="119"/></name> <operator pos:line="253" pos:column="120">+<pos:position pos:line="253" pos:column="121"/></operator> <literal type="number" pos:line="253" pos:column="122">1<pos:position pos:line="253" pos:column="123"/></literal></expr></argument>, <argument><expr><name pos:line="253" pos:column="125">av<pos:position pos:line="253" pos:column="127"/></name></expr></argument>, <argument><expr><name pos:line="253" pos:column="129">group<pos:position pos:line="253" pos:column="134"/></name></expr></argument>)<pos:position pos:line="253" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="136"/></expr_stmt></block></then>
                <else pos:line="254" pos:column="17">else
                    <block type="pseudo"><break pos:line="255" pos:column="21">break;<pos:position pos:line="255" pos:column="27"/></break></block></else></if>
            }<pos:position pos:line="256" pos:column="14"/></block></then> <else pos:line="256" pos:column="15">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="257" pos:column="17">debug<pos:position pos:line="257" pos:column="22"/></name><argument_list pos:line="257" pos:column="22">(<argument><expr><operator pos:line="257" pos:column="23">(<pos:position pos:line="257" pos:column="24"/></operator><name pos:line="257" pos:column="24">char<pos:position pos:line="257" pos:column="28"/></name> <operator pos:line="257" pos:column="29">*<pos:position pos:line="257" pos:column="30"/></operator><operator pos:line="257" pos:column="30">)<pos:position pos:line="257" pos:column="31"/></operator> <literal type="string" pos:line="257" pos:column="32">"%s| %s: DEBUG: Entry %d \"%s\" does not match group name \"%s\"\n"<pos:position pos:line="257" pos:column="99"/></literal></expr></argument>, <argument><expr><call><name pos:line="257" pos:column="101">LogTime<pos:position pos:line="257" pos:column="108"/></name><argument_list pos:line="257" pos:column="108">()<pos:position pos:line="257" pos:column="110"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="257" pos:column="112">PROGRAM<pos:position pos:line="257" pos:column="119"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="121">j<pos:position pos:line="257" pos:column="122"/></name> <operator pos:line="257" pos:column="123">+<pos:position pos:line="257" pos:column="124"/></operator> <literal type="number" pos:line="257" pos:column="125">1<pos:position pos:line="257" pos:column="126"/></literal></expr></argument>, <argument><expr><name pos:line="257" pos:column="128">av<pos:position pos:line="257" pos:column="130"/></name></expr></argument>, <argument><expr><name pos:line="257" pos:column="132">group<pos:position pos:line="257" pos:column="137"/></name></expr></argument>)<pos:position pos:line="257" pos:column="138"/></argument_list></call></expr>;<pos:position pos:line="257" pos:column="139"/></expr_stmt></block></else></if>
        }<pos:position pos:line="258" pos:column="10"/></block></for>
        <comment type="block" pos:line="259" pos:column="9">/*
         * Do recursive group search for AD only since posixgroups can not contain other groups
         */</comment>
        <if pos:line="262" pos:column="9">if <condition pos:line="262" pos:column="12">(<expr><operator pos:line="262" pos:column="13">!<pos:position pos:line="262" pos:column="14"/></operator><name pos:line="262" pos:column="14">retval<pos:position pos:line="262" pos:column="20"/></name> <operator pos:line="262" pos:column="21">&amp;&amp;<pos:position pos:line="262" pos:column="31"/></operator> <name><name pos:line="262" pos:column="24">margs<pos:position pos:line="262" pos:column="29"/></name><operator pos:line="262" pos:column="29">-&gt;<pos:position pos:line="262" pos:column="34"/></operator><name pos:line="262" pos:column="31">AD<pos:position pos:line="262" pos:column="33"/></name></name></expr>)<pos:position pos:line="262" pos:column="34"/></condition><then pos:line="262" pos:column="34"> <block pos:line="262" pos:column="35">{
            <if pos:line="263" pos:column="13">if <condition pos:line="263" pos:column="16">(<expr><name pos:line="263" pos:column="17">debug_enabled<pos:position pos:line="263" pos:column="30"/></name> <operator pos:line="263" pos:column="31">&amp;&amp;<pos:position pos:line="263" pos:column="41"/></operator> <name pos:line="263" pos:column="34">max_attr<pos:position pos:line="263" pos:column="42"/></name> <operator pos:line="263" pos:column="43">&gt;<pos:position pos:line="263" pos:column="47"/></operator> <literal type="number" pos:line="263" pos:column="45">0<pos:position pos:line="263" pos:column="46"/></literal></expr>)<pos:position pos:line="263" pos:column="47"/></condition><then pos:line="263" pos:column="47"> <block pos:line="263" pos:column="48">{
                <expr_stmt><expr><call><name pos:line="264" pos:column="17">debug<pos:position pos:line="264" pos:column="22"/></name><argument_list pos:line="264" pos:column="22">(<argument><expr><operator pos:line="264" pos:column="23">(<pos:position pos:line="264" pos:column="24"/></operator><name pos:line="264" pos:column="24">char<pos:position pos:line="264" pos:column="28"/></name> <operator pos:line="264" pos:column="29">*<pos:position pos:line="264" pos:column="30"/></operator><operator pos:line="264" pos:column="30">)<pos:position pos:line="264" pos:column="31"/></operator> <literal type="string" pos:line="264" pos:column="32">"%s| %s: DEBUG: Perform recursive group search\n"<pos:position pos:line="264" pos:column="81"/></literal></expr></argument>, <argument><expr><call><name pos:line="264" pos:column="83">LogTime<pos:position pos:line="264" pos:column="90"/></name><argument_list pos:line="264" pos:column="90">()<pos:position pos:line="264" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="264" pos:column="94">PROGRAM<pos:position pos:line="264" pos:column="101"/></name></expr></argument>)<pos:position pos:line="264" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="264" pos:column="103"/></expr_stmt>
            }<pos:position pos:line="265" pos:column="14"/></block></then></if>
            <for pos:line="266" pos:column="13">for <control pos:line="266" pos:column="17">(<init><expr><name pos:line="266" pos:column="18">j<pos:position pos:line="266" pos:column="19"/></name> <operator pos:line="266" pos:column="20">=<pos:position pos:line="266" pos:column="21"/></operator> <literal type="number" pos:line="266" pos:column="22">0<pos:position pos:line="266" pos:column="23"/></literal></expr>;<pos:position pos:line="266" pos:column="24"/></init> <condition><expr><name pos:line="266" pos:column="25">j<pos:position pos:line="266" pos:column="26"/></name> <operator pos:line="266" pos:column="27">&lt;<pos:position pos:line="266" pos:column="31"/></operator> <name pos:line="266" pos:column="29">max_attr<pos:position pos:line="266" pos:column="37"/></name></expr>;<pos:position pos:line="266" pos:column="38"/></condition> <incr><expr><operator pos:line="266" pos:column="39">++<pos:position pos:line="266" pos:column="41"/></operator><name pos:line="266" pos:column="41">j<pos:position pos:line="266" pos:column="42"/></name></expr></incr>)<pos:position pos:line="266" pos:column="43"/></control> <block pos:line="266" pos:column="44">{

                <expr_stmt><expr><name pos:line="268" pos:column="17">av<pos:position pos:line="268" pos:column="19"/></name> <operator pos:line="268" pos:column="20">=<pos:position pos:line="268" pos:column="21"/></operator> <name><name pos:line="268" pos:column="22">attr_value<pos:position pos:line="268" pos:column="32"/></name><index pos:line="268" pos:column="32">[<expr><name pos:line="268" pos:column="33">j<pos:position pos:line="268" pos:column="34"/></name></expr>]<pos:position pos:line="268" pos:column="35"/></index></name></expr>;<pos:position pos:line="268" pos:column="36"/></expr_stmt>
                <if pos:line="269" pos:column="17">if <condition pos:line="269" pos:column="20">(<expr><call><name pos:line="269" pos:column="21">search_group_tree<pos:position pos:line="269" pos:column="38"/></name><argument_list pos:line="269" pos:column="38">(<argument><expr><name pos:line="269" pos:column="39">margs<pos:position pos:line="269" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="46">ld<pos:position pos:line="269" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="50">bindp<pos:position pos:line="269" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="57">av<pos:position pos:line="269" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="269" pos:column="61">group<pos:position pos:line="269" pos:column="66"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="269" pos:column="68">1<pos:position pos:line="269" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="269" pos:column="70"/></argument_list></call></expr>)<pos:position pos:line="269" pos:column="71"/></condition><then pos:line="269" pos:column="71"> <block pos:line="269" pos:column="72">{
                    <expr_stmt><expr><name pos:line="270" pos:column="21">retval<pos:position pos:line="270" pos:column="27"/></name> <operator pos:line="270" pos:column="28">=<pos:position pos:line="270" pos:column="29"/></operator> <literal type="number" pos:line="270" pos:column="30">1<pos:position pos:line="270" pos:column="31"/></literal></expr>;<pos:position pos:line="270" pos:column="32"/></expr_stmt>
                    <if pos:line="271" pos:column="21">if <condition pos:line="271" pos:column="24">(<expr><operator pos:line="271" pos:column="25">!<pos:position pos:line="271" pos:column="26"/></operator><call><name pos:line="271" pos:column="26">strncasecmp<pos:position pos:line="271" pos:column="37"/></name><argument_list pos:line="271" pos:column="37">(<argument><expr><literal type="string" pos:line="271" pos:column="38">"CN="<pos:position pos:line="271" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="271" pos:column="45">av<pos:position pos:line="271" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="271" pos:column="49">3<pos:position pos:line="271" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="271" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="271" pos:column="52"/></condition><then pos:line="271" pos:column="52"> <block pos:line="271" pos:column="53">{
                        <expr_stmt><expr><name pos:line="272" pos:column="25">av<pos:position pos:line="272" pos:column="27"/></name> <operator pos:line="272" pos:column="28">+=<pos:position pos:line="272" pos:column="30"/></operator> <literal type="number" pos:line="272" pos:column="31">3<pos:position pos:line="272" pos:column="32"/></literal></expr>;<pos:position pos:line="272" pos:column="33"/></expr_stmt>
                        <if pos:line="273" pos:column="25">if <condition pos:line="273" pos:column="28">(<expr><operator pos:line="273" pos:column="29">(<pos:position pos:line="273" pos:column="30"/></operator><name pos:line="273" pos:column="30">avp<pos:position pos:line="273" pos:column="33"/></name> <operator pos:line="273" pos:column="34">=<pos:position pos:line="273" pos:column="35"/></operator> <call><name pos:line="273" pos:column="36">strchr<pos:position pos:line="273" pos:column="42"/></name><argument_list pos:line="273" pos:column="42">(<argument><expr><name pos:line="273" pos:column="43">av<pos:position pos:line="273" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="273" pos:column="47">','<pos:position pos:line="273" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="273" pos:column="51"/></argument_list></call><operator pos:line="273" pos:column="51">)<pos:position pos:line="273" pos:column="52"/></operator></expr>)<pos:position pos:line="273" pos:column="53"/></condition><then pos:line="273" pos:column="53"> <block pos:line="273" pos:column="54">{
                            <expr_stmt><expr><operator pos:line="274" pos:column="29">*<pos:position pos:line="274" pos:column="30"/></operator><name pos:line="274" pos:column="30">avp<pos:position pos:line="274" pos:column="33"/></name> <operator pos:line="274" pos:column="34">=<pos:position pos:line="274" pos:column="35"/></operator> <literal type="char" pos:line="274" pos:column="36">'\0'<pos:position pos:line="274" pos:column="40"/></literal></expr>;<pos:position pos:line="274" pos:column="41"/></expr_stmt>
                        }<pos:position pos:line="275" pos:column="26"/></block></then></if>
                    }<pos:position pos:line="276" pos:column="22"/></block></then></if>
                    <if pos:line="277" pos:column="21">if <condition pos:line="277" pos:column="24">(<expr><name pos:line="277" pos:column="25">debug_enabled<pos:position pos:line="277" pos:column="38"/></name></expr>)<pos:position pos:line="277" pos:column="39"/></condition><then pos:line="277" pos:column="39">
                        <block type="pseudo"><expr_stmt><expr><call><name pos:line="278" pos:column="25">debug<pos:position pos:line="278" pos:column="30"/></name><argument_list pos:line="278" pos:column="30">(<argument><expr><operator pos:line="278" pos:column="31">(<pos:position pos:line="278" pos:column="32"/></operator><name pos:line="278" pos:column="32">char<pos:position pos:line="278" pos:column="36"/></name> <operator pos:line="278" pos:column="37">*<pos:position pos:line="278" pos:column="38"/></operator><operator pos:line="278" pos:column="38">)<pos:position pos:line="278" pos:column="39"/></operator> <literal type="string" pos:line="278" pos:column="40">"%s| %s: DEBUG: Entry %d group \"%s\" is (in)direct member of group \"%s\"\n"<pos:position pos:line="278" pos:column="117"/></literal></expr></argument>, <argument><expr><call><name pos:line="278" pos:column="119">LogTime<pos:position pos:line="278" pos:column="126"/></name><argument_list pos:line="278" pos:column="126">()<pos:position pos:line="278" pos:column="128"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="278" pos:column="130">PROGRAM<pos:position pos:line="278" pos:column="137"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="139">j<pos:position pos:line="278" pos:column="140"/></name> <operator pos:line="278" pos:column="141">+<pos:position pos:line="278" pos:column="142"/></operator> <literal type="number" pos:line="278" pos:column="143">1<pos:position pos:line="278" pos:column="144"/></literal></expr></argument>, <argument><expr><name pos:line="278" pos:column="146">av<pos:position pos:line="278" pos:column="148"/></name></expr></argument>, <argument><expr><name pos:line="278" pos:column="150">group<pos:position pos:line="278" pos:column="155"/></name></expr></argument>)<pos:position pos:line="278" pos:column="156"/></argument_list></call></expr>;<pos:position pos:line="278" pos:column="157"/></expr_stmt></block></then>
                    <else pos:line="279" pos:column="21">else
                        <block type="pseudo"><break pos:line="280" pos:column="25">break;<pos:position pos:line="280" pos:column="31"/></break></block></else></if>
                }<pos:position pos:line="281" pos:column="18"/></block></then></if>
            }<pos:position pos:line="282" pos:column="14"/></block></for>
        }<pos:position pos:line="283" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="284" pos:column="9">/*
         * Cleanup
         */</comment>
        <if pos:line="287" pos:column="9">if <condition pos:line="287" pos:column="12">(<expr><name pos:line="287" pos:column="13">attr_value<pos:position pos:line="287" pos:column="23"/></name></expr>)<pos:position pos:line="287" pos:column="24"/></condition><then pos:line="287" pos:column="24"> <block pos:line="287" pos:column="25">{
            <for pos:line="288" pos:column="13">for <control pos:line="288" pos:column="17">(<init><expr><name pos:line="288" pos:column="18">j<pos:position pos:line="288" pos:column="19"/></name> <operator pos:line="288" pos:column="20">=<pos:position pos:line="288" pos:column="21"/></operator> <literal type="number" pos:line="288" pos:column="22">0<pos:position pos:line="288" pos:column="23"/></literal></expr>;<pos:position pos:line="288" pos:column="24"/></init> <condition><expr><name pos:line="288" pos:column="25">j<pos:position pos:line="288" pos:column="26"/></name> <operator pos:line="288" pos:column="27">&lt;<pos:position pos:line="288" pos:column="31"/></operator> <name pos:line="288" pos:column="29">max_attr<pos:position pos:line="288" pos:column="37"/></name></expr>;<pos:position pos:line="288" pos:column="38"/></condition> <incr><expr><operator pos:line="288" pos:column="39">++<pos:position pos:line="288" pos:column="41"/></operator><name pos:line="288" pos:column="41">j<pos:position pos:line="288" pos:column="42"/></name></expr></incr>)<pos:position pos:line="288" pos:column="43"/></control> <block pos:line="288" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="289" pos:column="17">xfree<pos:position pos:line="289" pos:column="22"/></name><argument_list pos:line="289" pos:column="22">(<argument><expr><name><name pos:line="289" pos:column="23">attr_value<pos:position pos:line="289" pos:column="33"/></name><index pos:line="289" pos:column="33">[<expr><name pos:line="289" pos:column="34">j<pos:position pos:line="289" pos:column="35"/></name></expr>]<pos:position pos:line="289" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="289" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="289" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="290" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="291" pos:column="13">xfree<pos:position pos:line="291" pos:column="18"/></name><argument_list pos:line="291" pos:column="18">(<argument><expr><name pos:line="291" pos:column="19">attr_value<pos:position pos:line="291" pos:column="29"/></name></expr></argument>)<pos:position pos:line="291" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="291" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="292" pos:column="13">attr_value<pos:position pos:line="292" pos:column="23"/></name> <operator pos:line="292" pos:column="24">=<pos:position pos:line="292" pos:column="25"/></operator> <name pos:line="292" pos:column="26">NULL<pos:position pos:line="292" pos:column="30"/></name></expr>;<pos:position pos:line="292" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="293" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="294" pos:column="9">ldap_msgfree<pos:position pos:line="294" pos:column="21"/></name><argument_list pos:line="294" pos:column="21">(<argument><expr><name pos:line="294" pos:column="22">res<pos:position pos:line="294" pos:column="25"/></name></expr></argument>)<pos:position pos:line="294" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="294" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="295" pos:column="6"/></block></then> <elseif pos:line="295" pos:column="7">else <if pos:line="295" pos:column="12">if <condition pos:line="295" pos:column="15">(<expr><call><name pos:line="295" pos:column="16">ldap_count_entries<pos:position pos:line="295" pos:column="34"/></name><argument_list pos:line="295" pos:column="34">(<argument><expr><name pos:line="295" pos:column="35">ld<pos:position pos:line="295" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="295" pos:column="39">res<pos:position pos:line="295" pos:column="42"/></name></expr></argument>)<pos:position pos:line="295" pos:column="43"/></argument_list></call> <operator pos:line="295" pos:column="44">==<pos:position pos:line="295" pos:column="46"/></operator> <literal type="number" pos:line="295" pos:column="47">0<pos:position pos:line="295" pos:column="48"/></literal> <operator pos:line="295" pos:column="49">&amp;&amp;<pos:position pos:line="295" pos:column="59"/></operator> <name><name pos:line="295" pos:column="52">margs<pos:position pos:line="295" pos:column="57"/></name><operator pos:line="295" pos:column="57">-&gt;<pos:position pos:line="295" pos:column="62"/></operator><name pos:line="295" pos:column="59">AD<pos:position pos:line="295" pos:column="61"/></name></name></expr>)<pos:position pos:line="295" pos:column="62"/></condition><then pos:line="295" pos:column="62"> <block pos:line="295" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="296" pos:column="9">ldap_msgfree<pos:position pos:line="296" pos:column="21"/></name><argument_list pos:line="296" pos:column="21">(<argument><expr><name pos:line="296" pos:column="22">res<pos:position pos:line="296" pos:column="25"/></name></expr></argument>)<pos:position pos:line="296" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="296" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="297" pos:column="9">ldap_unbind<pos:position pos:line="297" pos:column="20"/></name><argument_list pos:line="297" pos:column="20">(<argument><expr><name pos:line="297" pos:column="21">ld<pos:position pos:line="297" pos:column="23"/></name></expr></argument>)<pos:position pos:line="297" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="297" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="298" pos:column="9">ld<pos:position pos:line="298" pos:column="11"/></name> <operator pos:line="298" pos:column="12">=<pos:position pos:line="298" pos:column="13"/></operator> <name pos:line="298" pos:column="14">NULL<pos:position pos:line="298" pos:column="18"/></name></expr>;<pos:position pos:line="298" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><name pos:line="299" pos:column="9">retval<pos:position pos:line="299" pos:column="15"/></name> <operator pos:line="299" pos:column="16">=<pos:position pos:line="299" pos:column="17"/></operator> <literal type="number" pos:line="299" pos:column="18">0<pos:position pos:line="299" pos:column="19"/></literal></expr>;<pos:position pos:line="299" pos:column="20"/></expr_stmt>
        <goto pos:line="300" pos:column="9">goto <name pos:line="300" pos:column="14">cleanup<pos:position pos:line="300" pos:column="21"/></name>;<pos:position pos:line="300" pos:column="22"/></goto>
    }<pos:position pos:line="301" pos:column="6"/></block></then></if></elseif> <else pos:line="301" pos:column="7">else <block pos:line="301" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="302" pos:column="9">ldap_msgfree<pos:position pos:line="302" pos:column="21"/></name><argument_list pos:line="302" pos:column="21">(<argument><expr><name pos:line="302" pos:column="22">res<pos:position pos:line="302" pos:column="25"/></name></expr></argument>)<pos:position pos:line="302" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="302" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name pos:line="303" pos:column="9">retval<pos:position pos:line="303" pos:column="15"/></name> <operator pos:line="303" pos:column="16">=<pos:position pos:line="303" pos:column="17"/></operator> <literal type="number" pos:line="303" pos:column="18">0<pos:position pos:line="303" pos:column="19"/></literal></expr>;<pos:position pos:line="303" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="304" pos:column="6"/></block></else></if>

    <if pos:line="306" pos:column="5">if <condition pos:line="306" pos:column="8">(<expr><operator pos:line="306" pos:column="9">!<pos:position pos:line="306" pos:column="10"/></operator><name><name pos:line="306" pos:column="10">margs<pos:position pos:line="306" pos:column="15"/></name><operator pos:line="306" pos:column="15">-&gt;<pos:position pos:line="306" pos:column="20"/></operator><name pos:line="306" pos:column="17">AD<pos:position pos:line="306" pos:column="19"/></name></name> <operator pos:line="306" pos:column="20">&amp;&amp;<pos:position pos:line="306" pos:column="30"/></operator> <name pos:line="306" pos:column="23">retval<pos:position pos:line="306" pos:column="29"/></name> <operator pos:line="306" pos:column="30">==<pos:position pos:line="306" pos:column="32"/></operator> <literal type="number" pos:line="306" pos:column="33">0<pos:position pos:line="306" pos:column="34"/></literal></expr>)<pos:position pos:line="306" pos:column="35"/></condition><then pos:line="306" pos:column="35"> <block pos:line="306" pos:column="36">{
        <comment type="block" pos:line="307" pos:column="9">/*
         * Check for primary Group membership
         */</comment>
        <expr_stmt><expr><call><name pos:line="310" pos:column="9">debug<pos:position pos:line="310" pos:column="14"/></name><argument_list pos:line="310" pos:column="14">(<argument><expr><operator pos:line="310" pos:column="15">(<pos:position pos:line="310" pos:column="16"/></operator><name pos:line="310" pos:column="16">char<pos:position pos:line="310" pos:column="20"/></name> <operator pos:line="310" pos:column="21">*<pos:position pos:line="310" pos:column="22"/></operator><operator pos:line="310" pos:column="22">)<pos:position pos:line="310" pos:column="23"/></operator> <literal type="string" pos:line="310" pos:column="24">"%s| %s: DEBUG: Search for primary group membership: \"%s\"\n"<pos:position pos:line="310" pos:column="86"/></literal></expr></argument>, <argument><expr><call><name pos:line="310" pos:column="88">LogTime<pos:position pos:line="310" pos:column="95"/></name><argument_list pos:line="310" pos:column="95">()<pos:position pos:line="310" pos:column="97"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="310" pos:column="99">PROGRAM<pos:position pos:line="310" pos:column="106"/></name></expr></argument>, <argument><expr><name pos:line="310" pos:column="108">group<pos:position pos:line="310" pos:column="113"/></name></expr></argument>)<pos:position pos:line="310" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="310" pos:column="115"/></expr_stmt>
        <expr_stmt><expr><name pos:line="311" pos:column="9">filter<pos:position pos:line="311" pos:column="15"/></name> <operator pos:line="311" pos:column="16">=<pos:position pos:line="311" pos:column="17"/></operator> <operator pos:line="311" pos:column="18">(<pos:position pos:line="311" pos:column="19"/></operator><name pos:line="311" pos:column="19">char<pos:position pos:line="311" pos:column="23"/></name> <operator pos:line="311" pos:column="24">*<pos:position pos:line="311" pos:column="25"/></operator><operator pos:line="311" pos:column="25">)<pos:position pos:line="311" pos:column="26"/></operator> <name pos:line="311" pos:column="27">FILTER_UID<pos:position pos:line="311" pos:column="37"/></name></expr>;<pos:position pos:line="311" pos:column="38"/></expr_stmt>

        <expr_stmt><expr><name pos:line="313" pos:column="9">ldap_filter_esc<pos:position pos:line="313" pos:column="24"/></name> <operator pos:line="313" pos:column="25">=<pos:position pos:line="313" pos:column="26"/></operator> <call><name pos:line="313" pos:column="27">escape_filter<pos:position pos:line="313" pos:column="40"/></name><argument_list pos:line="313" pos:column="40">(<argument><expr><name pos:line="313" pos:column="41">user<pos:position pos:line="313" pos:column="45"/></name></expr></argument>)<pos:position pos:line="313" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="313" pos:column="47"/></expr_stmt>

        <expr_stmt><expr><name pos:line="315" pos:column="9">search_exp<pos:position pos:line="315" pos:column="19"/></name> <operator pos:line="315" pos:column="20">=<pos:position pos:line="315" pos:column="21"/></operator> <operator pos:line="315" pos:column="22">(<pos:position pos:line="315" pos:column="23"/></operator><name pos:line="315" pos:column="23">char<pos:position pos:line="315" pos:column="27"/></name> <operator pos:line="315" pos:column="28">*<pos:position pos:line="315" pos:column="29"/></operator><operator pos:line="315" pos:column="29">)<pos:position pos:line="315" pos:column="30"/></operator> <call><name pos:line="315" pos:column="31">xmalloc<pos:position pos:line="315" pos:column="38"/></name><argument_list pos:line="315" pos:column="38">(<argument><expr><call><name pos:line="315" pos:column="39">strlen<pos:position pos:line="315" pos:column="45"/></name><argument_list pos:line="315" pos:column="45">(<argument><expr><name pos:line="315" pos:column="46">filter<pos:position pos:line="315" pos:column="52"/></name></expr></argument>)<pos:position pos:line="315" pos:column="53"/></argument_list></call> <operator pos:line="315" pos:column="54">+<pos:position pos:line="315" pos:column="55"/></operator> <call><name pos:line="315" pos:column="56">strlen<pos:position pos:line="315" pos:column="62"/></name><argument_list pos:line="315" pos:column="62">(<argument><expr><name pos:line="315" pos:column="63">ldap_filter_esc<pos:position pos:line="315" pos:column="78"/></name></expr></argument>)<pos:position pos:line="315" pos:column="79"/></argument_list></call> <operator pos:line="315" pos:column="80">+<pos:position pos:line="315" pos:column="81"/></operator> <literal type="number" pos:line="315" pos:column="82">1<pos:position pos:line="315" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="315" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="85"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="316" pos:column="9">snprintf<pos:position pos:line="316" pos:column="17"/></name><argument_list pos:line="316" pos:column="17">(<argument><expr><name pos:line="316" pos:column="18">search_exp<pos:position pos:line="316" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="316" pos:column="30">strlen<pos:position pos:line="316" pos:column="36"/></name><argument_list pos:line="316" pos:column="36">(<argument><expr><name pos:line="316" pos:column="37">filter<pos:position pos:line="316" pos:column="43"/></name></expr></argument>)<pos:position pos:line="316" pos:column="44"/></argument_list></call> <operator pos:line="316" pos:column="45">+<pos:position pos:line="316" pos:column="46"/></operator> <call><name pos:line="316" pos:column="47">strlen<pos:position pos:line="316" pos:column="53"/></name><argument_list pos:line="316" pos:column="53">(<argument><expr><name pos:line="316" pos:column="54">ldap_filter_esc<pos:position pos:line="316" pos:column="69"/></name></expr></argument>)<pos:position pos:line="316" pos:column="70"/></argument_list></call> <operator pos:line="316" pos:column="71">+<pos:position pos:line="316" pos:column="72"/></operator> <literal type="number" pos:line="316" pos:column="73">1<pos:position pos:line="316" pos:column="74"/></literal></expr></argument>, <argument><expr><name pos:line="316" pos:column="76">filter<pos:position pos:line="316" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="316" pos:column="84">ldap_filter_esc<pos:position pos:line="316" pos:column="99"/></name></expr></argument>)<pos:position pos:line="316" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="316" pos:column="101"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="318" pos:column="9">xfree<pos:position pos:line="318" pos:column="14"/></name><argument_list pos:line="318" pos:column="14">(<argument><expr><name pos:line="318" pos:column="15">ldap_filter_esc<pos:position pos:line="318" pos:column="30"/></name></expr></argument>)<pos:position pos:line="318" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="318" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="320" pos:column="9">debug<pos:position pos:line="320" pos:column="14"/></name><argument_list pos:line="320" pos:column="14">(<argument><expr><operator pos:line="320" pos:column="15">(<pos:position pos:line="320" pos:column="16"/></operator><name pos:line="320" pos:column="16">char<pos:position pos:line="320" pos:column="20"/></name> <operator pos:line="320" pos:column="21">*<pos:position pos:line="320" pos:column="22"/></operator><operator pos:line="320" pos:column="22">)<pos:position pos:line="320" pos:column="23"/></operator> <literal type="string" pos:line="320" pos:column="24">"%s| %s: DEBUG: Search ldap server with bind path %s and filter: %s\n"<pos:position pos:line="320" pos:column="94"/></literal></expr></argument>, <argument><expr><call><name pos:line="320" pos:column="96">LogTime<pos:position pos:line="320" pos:column="103"/></name><argument_list pos:line="320" pos:column="103">()<pos:position pos:line="320" pos:column="105"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="320" pos:column="107">PROGRAM<pos:position pos:line="320" pos:column="114"/></name></expr></argument>, <argument><expr><name pos:line="320" pos:column="116">bindp<pos:position pos:line="320" pos:column="121"/></name></expr></argument>, <argument><expr><name pos:line="320" pos:column="123">search_exp<pos:position pos:line="320" pos:column="133"/></name></expr></argument>)<pos:position pos:line="320" pos:column="134"/></argument_list></call></expr>;<pos:position pos:line="320" pos:column="135"/></expr_stmt>
        <expr_stmt><expr><name pos:line="321" pos:column="9">rc<pos:position pos:line="321" pos:column="11"/></name> <operator pos:line="321" pos:column="12">=<pos:position pos:line="321" pos:column="13"/></operator> <call><name pos:line="321" pos:column="14">ldap_search_ext_s<pos:position pos:line="321" pos:column="31"/></name><argument_list pos:line="321" pos:column="31">(<argument><expr><name pos:line="321" pos:column="32">ld<pos:position pos:line="321" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="36">bindp<pos:position pos:line="321" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="321" pos:column="43">LDAP_SCOPE_SUBTREE<pos:position pos:line="321" pos:column="61"/></name></expr></argument>,
                               <argument><expr><name pos:line="322" pos:column="32">search_exp<pos:position pos:line="322" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="322" pos:column="44">NULL<pos:position pos:line="322" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="322" pos:column="50">0<pos:position pos:line="322" pos:column="51"/></literal></expr></argument>,
                               <argument><expr><name pos:line="323" pos:column="32">NULL<pos:position pos:line="323" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="323" pos:column="38">NULL<pos:position pos:line="323" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="323" pos:column="44">&amp;<pos:position pos:line="323" pos:column="49"/></operator><name pos:line="323" pos:column="45">searchtime<pos:position pos:line="323" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="323" pos:column="57">0<pos:position pos:line="323" pos:column="58"/></literal></expr></argument>, <argument><expr><operator pos:line="323" pos:column="60">&amp;<pos:position pos:line="323" pos:column="65"/></operator><name pos:line="323" pos:column="61">res<pos:position pos:line="323" pos:column="64"/></name></expr></argument>)<pos:position pos:line="323" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="323" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="324" pos:column="9">xfree<pos:position pos:line="324" pos:column="14"/></name><argument_list pos:line="324" pos:column="14">(<argument><expr><name pos:line="324" pos:column="15">search_exp<pos:position pos:line="324" pos:column="25"/></name></expr></argument>)<pos:position pos:line="324" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="324" pos:column="27"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="326" pos:column="9">debug<pos:position pos:line="326" pos:column="14"/></name><argument_list pos:line="326" pos:column="14">(<argument><expr><operator pos:line="326" pos:column="15">(<pos:position pos:line="326" pos:column="16"/></operator><name pos:line="326" pos:column="16">char<pos:position pos:line="326" pos:column="20"/></name> <operator pos:line="326" pos:column="21">*<pos:position pos:line="326" pos:column="22"/></operator><operator pos:line="326" pos:column="22">)<pos:position pos:line="326" pos:column="23"/></operator> <literal type="string" pos:line="326" pos:column="24">"%s| %s: DEBUG: Found %d ldap entr%s\n"<pos:position pos:line="326" pos:column="63"/></literal></expr></argument>, <argument><expr><call><name pos:line="326" pos:column="65">LogTime<pos:position pos:line="326" pos:column="72"/></name><argument_list pos:line="326" pos:column="72">()<pos:position pos:line="326" pos:column="74"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="326" pos:column="76">PROGRAM<pos:position pos:line="326" pos:column="83"/></name></expr></argument>, <argument><expr><call><name pos:line="326" pos:column="85">ldap_count_entries<pos:position pos:line="326" pos:column="103"/></name><argument_list pos:line="326" pos:column="103">(<argument><expr><name pos:line="326" pos:column="104">ld<pos:position pos:line="326" pos:column="106"/></name></expr></argument>, <argument><expr><name pos:line="326" pos:column="108">res<pos:position pos:line="326" pos:column="111"/></name></expr></argument>)<pos:position pos:line="326" pos:column="112"/></argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><call><name pos:line="326" pos:column="114">ldap_count_entries<pos:position pos:line="326" pos:column="132"/></name><argument_list pos:line="326" pos:column="132">(<argument><expr><name pos:line="326" pos:column="133">ld<pos:position pos:line="326" pos:column="135"/></name></expr></argument>, <argument><expr><name pos:line="326" pos:column="137">res<pos:position pos:line="326" pos:column="140"/></name></expr></argument>)<pos:position pos:line="326" pos:column="141"/></argument_list></call> <operator pos:line="326" pos:column="142">&gt;<pos:position pos:line="326" pos:column="146"/></operator> <literal type="number" pos:line="326" pos:column="144">1<pos:position pos:line="326" pos:column="145"/></literal> <operator pos:line="326" pos:column="146">||<pos:position pos:line="326" pos:column="148"/></operator> <call><name pos:line="326" pos:column="149">ldap_count_entries<pos:position pos:line="326" pos:column="167"/></name><argument_list pos:line="326" pos:column="167">(<argument><expr><name pos:line="326" pos:column="168">ld<pos:position pos:line="326" pos:column="170"/></name></expr></argument>, <argument><expr><name pos:line="326" pos:column="172">res<pos:position pos:line="326" pos:column="175"/></name></expr></argument>)<pos:position pos:line="326" pos:column="176"/></argument_list></call> <operator pos:line="326" pos:column="177">==<pos:position pos:line="326" pos:column="179"/></operator> <literal type="number" pos:line="326" pos:column="180">0<pos:position pos:line="326" pos:column="181"/></literal></expr> ?<pos:position pos:line="326" pos:column="183"/></condition><then pos:line="326" pos:column="183"> <expr><literal type="string" pos:line="326" pos:column="184">"ies"<pos:position pos:line="326" pos:column="189"/></literal></expr> <pos:position pos:line="326" pos:column="190"/></then><else pos:line="326" pos:column="190">: <expr><literal type="string" pos:line="326" pos:column="192">"y"<pos:position pos:line="326" pos:column="195"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="326" pos:column="196"/></argument_list></call></expr>;<pos:position pos:line="326" pos:column="197"/></expr_stmt>

        <expr_stmt><expr><name pos:line="328" pos:column="9">max_attr<pos:position pos:line="328" pos:column="17"/></name> <operator pos:line="328" pos:column="18">=<pos:position pos:line="328" pos:column="19"/></operator> <call><name pos:line="328" pos:column="20">get_attributes<pos:position pos:line="328" pos:column="34"/></name><argument_list pos:line="328" pos:column="34">(<argument><expr><name pos:line="328" pos:column="35">margs<pos:position pos:line="328" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="42">ld<pos:position pos:line="328" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="46">res<pos:position pos:line="328" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="328" pos:column="51">ATTRIBUTE_GID<pos:position pos:line="328" pos:column="64"/></name></expr></argument>, <argument><expr><operator pos:line="328" pos:column="66">&amp;<pos:position pos:line="328" pos:column="71"/></operator><name pos:line="328" pos:column="67">attr_value<pos:position pos:line="328" pos:column="77"/></name></expr></argument>)<pos:position pos:line="328" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="328" pos:column="79"/></expr_stmt>

        <if pos:line="330" pos:column="9">if <condition pos:line="330" pos:column="12">(<expr><name pos:line="330" pos:column="13">max_attr<pos:position pos:line="330" pos:column="21"/></name> <operator pos:line="330" pos:column="22">==<pos:position pos:line="330" pos:column="24"/></operator> <literal type="number" pos:line="330" pos:column="25">1<pos:position pos:line="330" pos:column="26"/></literal></expr>)<pos:position pos:line="330" pos:column="27"/></condition><then pos:line="330" pos:column="27"> <block pos:line="330" pos:column="28">{
            <decl_stmt><decl><type><name pos:line="331" pos:column="13">char<pos:position pos:line="331" pos:column="17"/></name> <modifier pos:line="331" pos:column="18">*<pos:position pos:line="331" pos:column="19"/></modifier><modifier pos:line="331" pos:column="19">*<pos:position pos:line="331" pos:column="20"/></modifier></type><name pos:line="331" pos:column="20">attr_value_2<pos:position pos:line="331" pos:column="32"/></name> <init pos:line="331" pos:column="33">= <expr><name pos:line="331" pos:column="35">NULL<pos:position pos:line="331" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="331" pos:column="40"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="332" pos:column="13">int<pos:position pos:line="332" pos:column="16"/></name></type> <name pos:line="332" pos:column="17">max_attr_2<pos:position pos:line="332" pos:column="27"/></name> <init pos:line="332" pos:column="28">= <expr><literal type="number" pos:line="332" pos:column="30">0<pos:position pos:line="332" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="332" pos:column="32"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="334" pos:column="13">ldap_msgfree<pos:position pos:line="334" pos:column="25"/></name><argument_list pos:line="334" pos:column="25">(<argument><expr><name pos:line="334" pos:column="26">res<pos:position pos:line="334" pos:column="29"/></name></expr></argument>)<pos:position pos:line="334" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="335" pos:column="13">filter<pos:position pos:line="335" pos:column="19"/></name> <operator pos:line="335" pos:column="20">=<pos:position pos:line="335" pos:column="21"/></operator> <operator pos:line="335" pos:column="22">(<pos:position pos:line="335" pos:column="23"/></operator><name pos:line="335" pos:column="23">char<pos:position pos:line="335" pos:column="27"/></name> <operator pos:line="335" pos:column="28">*<pos:position pos:line="335" pos:column="29"/></operator><operator pos:line="335" pos:column="29">)<pos:position pos:line="335" pos:column="30"/></operator> <name pos:line="335" pos:column="31">FILTER_GID<pos:position pos:line="335" pos:column="41"/></name></expr>;<pos:position pos:line="335" pos:column="42"/></expr_stmt>

            <expr_stmt><expr><name pos:line="337" pos:column="13">ldap_filter_esc<pos:position pos:line="337" pos:column="28"/></name> <operator pos:line="337" pos:column="29">=<pos:position pos:line="337" pos:column="30"/></operator> <call><name pos:line="337" pos:column="31">escape_filter<pos:position pos:line="337" pos:column="44"/></name><argument_list pos:line="337" pos:column="44">(<argument><expr><name><name pos:line="337" pos:column="45">attr_value<pos:position pos:line="337" pos:column="55"/></name><index pos:line="337" pos:column="55">[<expr><literal type="number" pos:line="337" pos:column="56">0<pos:position pos:line="337" pos:column="57"/></literal></expr>]<pos:position pos:line="337" pos:column="58"/></index></name></expr></argument>)<pos:position pos:line="337" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="60"/></expr_stmt>

            <expr_stmt><expr><name pos:line="339" pos:column="13">search_exp<pos:position pos:line="339" pos:column="23"/></name> <operator pos:line="339" pos:column="24">=<pos:position pos:line="339" pos:column="25"/></operator> <operator pos:line="339" pos:column="26">(<pos:position pos:line="339" pos:column="27"/></operator><name pos:line="339" pos:column="27">char<pos:position pos:line="339" pos:column="31"/></name> <operator pos:line="339" pos:column="32">*<pos:position pos:line="339" pos:column="33"/></operator><operator pos:line="339" pos:column="33">)<pos:position pos:line="339" pos:column="34"/></operator> <call><name pos:line="339" pos:column="35">xmalloc<pos:position pos:line="339" pos:column="42"/></name><argument_list pos:line="339" pos:column="42">(<argument><expr><call><name pos:line="339" pos:column="43">strlen<pos:position pos:line="339" pos:column="49"/></name><argument_list pos:line="339" pos:column="49">(<argument><expr><name pos:line="339" pos:column="50">filter<pos:position pos:line="339" pos:column="56"/></name></expr></argument>)<pos:position pos:line="339" pos:column="57"/></argument_list></call> <operator pos:line="339" pos:column="58">+<pos:position pos:line="339" pos:column="59"/></operator> <call><name pos:line="339" pos:column="60">strlen<pos:position pos:line="339" pos:column="66"/></name><argument_list pos:line="339" pos:column="66">(<argument><expr><name pos:line="339" pos:column="67">ldap_filter_esc<pos:position pos:line="339" pos:column="82"/></name></expr></argument>)<pos:position pos:line="339" pos:column="83"/></argument_list></call> <operator pos:line="339" pos:column="84">+<pos:position pos:line="339" pos:column="85"/></operator> <literal type="number" pos:line="339" pos:column="86">1<pos:position pos:line="339" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="339" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="339" pos:column="89"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="340" pos:column="13">snprintf<pos:position pos:line="340" pos:column="21"/></name><argument_list pos:line="340" pos:column="21">(<argument><expr><name pos:line="340" pos:column="22">search_exp<pos:position pos:line="340" pos:column="32"/></name></expr></argument>, <argument><expr><call><name pos:line="340" pos:column="34">strlen<pos:position pos:line="340" pos:column="40"/></name><argument_list pos:line="340" pos:column="40">(<argument><expr><name pos:line="340" pos:column="41">filter<pos:position pos:line="340" pos:column="47"/></name></expr></argument>)<pos:position pos:line="340" pos:column="48"/></argument_list></call> <operator pos:line="340" pos:column="49">+<pos:position pos:line="340" pos:column="50"/></operator> <call><name pos:line="340" pos:column="51">strlen<pos:position pos:line="340" pos:column="57"/></name><argument_list pos:line="340" pos:column="57">(<argument><expr><name pos:line="340" pos:column="58">ldap_filter_esc<pos:position pos:line="340" pos:column="73"/></name></expr></argument>)<pos:position pos:line="340" pos:column="74"/></argument_list></call> <operator pos:line="340" pos:column="75">+<pos:position pos:line="340" pos:column="76"/></operator> <literal type="number" pos:line="340" pos:column="77">1<pos:position pos:line="340" pos:column="78"/></literal></expr></argument>, <argument><expr><name pos:line="340" pos:column="80">filter<pos:position pos:line="340" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="340" pos:column="88">ldap_filter_esc<pos:position pos:line="340" pos:column="103"/></name></expr></argument>)<pos:position pos:line="340" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="340" pos:column="105"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="342" pos:column="13">xfree<pos:position pos:line="342" pos:column="18"/></name><argument_list pos:line="342" pos:column="18">(<argument><expr><name pos:line="342" pos:column="19">ldap_filter_esc<pos:position pos:line="342" pos:column="34"/></name></expr></argument>)<pos:position pos:line="342" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="342" pos:column="36"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="344" pos:column="13">debug<pos:position pos:line="344" pos:column="18"/></name><argument_list pos:line="344" pos:column="18">(<argument><expr><operator pos:line="344" pos:column="19">(<pos:position pos:line="344" pos:column="20"/></operator><name pos:line="344" pos:column="20">char<pos:position pos:line="344" pos:column="24"/></name> <operator pos:line="344" pos:column="25">*<pos:position pos:line="344" pos:column="26"/></operator><operator pos:line="344" pos:column="26">)<pos:position pos:line="344" pos:column="27"/></operator> <literal type="string" pos:line="344" pos:column="28">"%s| %s: DEBUG: Search ldap server with bind path %s and filter: %s\n"<pos:position pos:line="344" pos:column="98"/></literal></expr></argument>, <argument><expr><call><name pos:line="344" pos:column="100">LogTime<pos:position pos:line="344" pos:column="107"/></name><argument_list pos:line="344" pos:column="107">()<pos:position pos:line="344" pos:column="109"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="344" pos:column="111">PROGRAM<pos:position pos:line="344" pos:column="118"/></name></expr></argument>, <argument><expr><name pos:line="344" pos:column="120">bindp<pos:position pos:line="344" pos:column="125"/></name></expr></argument>, <argument><expr><name pos:line="344" pos:column="127">search_exp<pos:position pos:line="344" pos:column="137"/></name></expr></argument>)<pos:position pos:line="344" pos:column="138"/></argument_list></call></expr>;<pos:position pos:line="344" pos:column="139"/></expr_stmt>
            <expr_stmt><expr><name pos:line="345" pos:column="13">rc<pos:position pos:line="345" pos:column="15"/></name> <operator pos:line="345" pos:column="16">=<pos:position pos:line="345" pos:column="17"/></operator> <call><name pos:line="345" pos:column="18">ldap_search_ext_s<pos:position pos:line="345" pos:column="35"/></name><argument_list pos:line="345" pos:column="35">(<argument><expr><name pos:line="345" pos:column="36">ld<pos:position pos:line="345" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="345" pos:column="40">bindp<pos:position pos:line="345" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="345" pos:column="47">LDAP_SCOPE_SUBTREE<pos:position pos:line="345" pos:column="65"/></name></expr></argument>,
                                   <argument><expr><name pos:line="346" pos:column="36">search_exp<pos:position pos:line="346" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="346" pos:column="48">NULL<pos:position pos:line="346" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="346" pos:column="54">0<pos:position pos:line="346" pos:column="55"/></literal></expr></argument>,
                                   <argument><expr><name pos:line="347" pos:column="36">NULL<pos:position pos:line="347" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="347" pos:column="42">NULL<pos:position pos:line="347" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="347" pos:column="48">&amp;<pos:position pos:line="347" pos:column="53"/></operator><name pos:line="347" pos:column="49">searchtime<pos:position pos:line="347" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="347" pos:column="61">0<pos:position pos:line="347" pos:column="62"/></literal></expr></argument>, <argument><expr><operator pos:line="347" pos:column="64">&amp;<pos:position pos:line="347" pos:column="69"/></operator><name pos:line="347" pos:column="65">res<pos:position pos:line="347" pos:column="68"/></name></expr></argument>)<pos:position pos:line="347" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="347" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="348" pos:column="13">xfree<pos:position pos:line="348" pos:column="18"/></name><argument_list pos:line="348" pos:column="18">(<argument><expr><name pos:line="348" pos:column="19">search_exp<pos:position pos:line="348" pos:column="29"/></name></expr></argument>)<pos:position pos:line="348" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="348" pos:column="31"/></expr_stmt>

            <expr_stmt><expr><name pos:line="350" pos:column="13">max_attr_2<pos:position pos:line="350" pos:column="23"/></name> <operator pos:line="350" pos:column="24">=<pos:position pos:line="350" pos:column="25"/></operator> <call><name pos:line="350" pos:column="26">get_attributes<pos:position pos:line="350" pos:column="40"/></name><argument_list pos:line="350" pos:column="40">(<argument><expr><name pos:line="350" pos:column="41">margs<pos:position pos:line="350" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="350" pos:column="48">ld<pos:position pos:line="350" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="350" pos:column="52">res<pos:position pos:line="350" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="350" pos:column="57">ATTRIBUTE<pos:position pos:line="350" pos:column="66"/></name></expr></argument>, <argument><expr><operator pos:line="350" pos:column="68">&amp;<pos:position pos:line="350" pos:column="73"/></operator><name pos:line="350" pos:column="69">attr_value_2<pos:position pos:line="350" pos:column="81"/></name></expr></argument>)<pos:position pos:line="350" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="350" pos:column="83"/></expr_stmt>
            <comment type="block" pos:line="351" pos:column="13">/*
             * Compare group names
             */</comment>
            <expr_stmt><expr><name pos:line="354" pos:column="13">retval<pos:position pos:line="354" pos:column="19"/></name> <operator pos:line="354" pos:column="20">=<pos:position pos:line="354" pos:column="21"/></operator> <literal type="number" pos:line="354" pos:column="22">0<pos:position pos:line="354" pos:column="23"/></literal></expr>;<pos:position pos:line="354" pos:column="24"/></expr_stmt>
            <if pos:line="355" pos:column="13">if <condition pos:line="355" pos:column="16">(<expr><name pos:line="355" pos:column="17">max_attr_2<pos:position pos:line="355" pos:column="27"/></name> <operator pos:line="355" pos:column="28">==<pos:position pos:line="355" pos:column="30"/></operator> <literal type="number" pos:line="355" pos:column="31">1<pos:position pos:line="355" pos:column="32"/></literal></expr>)<pos:position pos:line="355" pos:column="33"/></condition><then pos:line="355" pos:column="33"> <block pos:line="355" pos:column="34">{

                <comment type="block" pos:line="357" pos:column="17">/* Compare first CN= value assuming it is the same as the group name itself */</comment>
                <expr_stmt><expr><name pos:line="358" pos:column="17">av<pos:position pos:line="358" pos:column="19"/></name> <operator pos:line="358" pos:column="20">=<pos:position pos:line="358" pos:column="21"/></operator> <name><name pos:line="358" pos:column="22">attr_value_2<pos:position pos:line="358" pos:column="34"/></name><index pos:line="358" pos:column="34">[<expr><literal type="number" pos:line="358" pos:column="35">0<pos:position pos:line="358" pos:column="36"/></literal></expr>]<pos:position pos:line="358" pos:column="37"/></index></name></expr>;<pos:position pos:line="358" pos:column="38"/></expr_stmt>
                <if pos:line="359" pos:column="17">if <condition pos:line="359" pos:column="20">(<expr><operator pos:line="359" pos:column="21">!<pos:position pos:line="359" pos:column="22"/></operator><call><name pos:line="359" pos:column="22">strcasecmp<pos:position pos:line="359" pos:column="32"/></name><argument_list pos:line="359" pos:column="32">(<argument><expr><name pos:line="359" pos:column="33">group<pos:position pos:line="359" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="359" pos:column="40">av<pos:position pos:line="359" pos:column="42"/></name></expr></argument>)<pos:position pos:line="359" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="359" pos:column="44"/></condition><then pos:line="359" pos:column="44"> <block pos:line="359" pos:column="45">{
                    <expr_stmt><expr><name pos:line="360" pos:column="21">retval<pos:position pos:line="360" pos:column="27"/></name> <operator pos:line="360" pos:column="28">=<pos:position pos:line="360" pos:column="29"/></operator> <literal type="number" pos:line="360" pos:column="30">1<pos:position pos:line="360" pos:column="31"/></literal></expr>;<pos:position pos:line="360" pos:column="32"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="361" pos:column="21">debug<pos:position pos:line="361" pos:column="26"/></name><argument_list pos:line="361" pos:column="26">(<argument><expr><operator pos:line="361" pos:column="27">(<pos:position pos:line="361" pos:column="28"/></operator><name pos:line="361" pos:column="28">char<pos:position pos:line="361" pos:column="32"/></name> <operator pos:line="361" pos:column="33">*<pos:position pos:line="361" pos:column="34"/></operator><operator pos:line="361" pos:column="34">)<pos:position pos:line="361" pos:column="35"/></operator> <literal type="string" pos:line="361" pos:column="36">"%s| %s: DEBUG: \"%s\" matches group name \"%s\"\n"<pos:position pos:line="361" pos:column="87"/></literal></expr></argument>, <argument><expr><call><name pos:line="361" pos:column="89">LogTime<pos:position pos:line="361" pos:column="96"/></name><argument_list pos:line="361" pos:column="96">()<pos:position pos:line="361" pos:column="98"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="361" pos:column="100">PROGRAM<pos:position pos:line="361" pos:column="107"/></name></expr></argument>, <argument><expr><name pos:line="361" pos:column="109">av<pos:position pos:line="361" pos:column="111"/></name></expr></argument>, <argument><expr><name pos:line="361" pos:column="113">group<pos:position pos:line="361" pos:column="118"/></name></expr></argument>)<pos:position pos:line="361" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="361" pos:column="120"/></expr_stmt>
                }<pos:position pos:line="362" pos:column="18"/></block></then> <else pos:line="362" pos:column="19">else
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="363" pos:column="21">debug<pos:position pos:line="363" pos:column="26"/></name><argument_list pos:line="363" pos:column="26">(<argument><expr><operator pos:line="363" pos:column="27">(<pos:position pos:line="363" pos:column="28"/></operator><name pos:line="363" pos:column="28">char<pos:position pos:line="363" pos:column="32"/></name> <operator pos:line="363" pos:column="33">*<pos:position pos:line="363" pos:column="34"/></operator><operator pos:line="363" pos:column="34">)<pos:position pos:line="363" pos:column="35"/></operator> <literal type="string" pos:line="363" pos:column="36">"%s| %s: DEBUG: \"%s\" does not match group name \"%s\"\n"<pos:position pos:line="363" pos:column="94"/></literal></expr></argument>, <argument><expr><call><name pos:line="363" pos:column="96">LogTime<pos:position pos:line="363" pos:column="103"/></name><argument_list pos:line="363" pos:column="103">()<pos:position pos:line="363" pos:column="105"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="363" pos:column="107">PROGRAM<pos:position pos:line="363" pos:column="114"/></name></expr></argument>, <argument><expr><name pos:line="363" pos:column="116">av<pos:position pos:line="363" pos:column="118"/></name></expr></argument>, <argument><expr><name pos:line="363" pos:column="120">group<pos:position pos:line="363" pos:column="125"/></name></expr></argument>)<pos:position pos:line="363" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="363" pos:column="127"/></expr_stmt></block></else></if>

            }<pos:position pos:line="365" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="366" pos:column="13">/*
             * Cleanup
             */</comment>
            <if pos:line="369" pos:column="13">if <condition pos:line="369" pos:column="16">(<expr><name pos:line="369" pos:column="17">attr_value_2<pos:position pos:line="369" pos:column="29"/></name></expr>)<pos:position pos:line="369" pos:column="30"/></condition><then pos:line="369" pos:column="30"> <block pos:line="369" pos:column="31">{
                <for pos:line="370" pos:column="17">for <control pos:line="370" pos:column="21">(<init><expr><name pos:line="370" pos:column="22">j<pos:position pos:line="370" pos:column="23"/></name> <operator pos:line="370" pos:column="24">=<pos:position pos:line="370" pos:column="25"/></operator> <literal type="number" pos:line="370" pos:column="26">0<pos:position pos:line="370" pos:column="27"/></literal></expr>;<pos:position pos:line="370" pos:column="28"/></init> <condition><expr><name pos:line="370" pos:column="29">j<pos:position pos:line="370" pos:column="30"/></name> <operator pos:line="370" pos:column="31">&lt;<pos:position pos:line="370" pos:column="35"/></operator> <name pos:line="370" pos:column="33">max_attr_2<pos:position pos:line="370" pos:column="43"/></name></expr>;<pos:position pos:line="370" pos:column="44"/></condition> <incr><expr><operator pos:line="370" pos:column="45">++<pos:position pos:line="370" pos:column="47"/></operator><name pos:line="370" pos:column="47">j<pos:position pos:line="370" pos:column="48"/></name></expr></incr>)<pos:position pos:line="370" pos:column="49"/></control> <block pos:line="370" pos:column="50">{
                    <expr_stmt><expr><call><name pos:line="371" pos:column="21">xfree<pos:position pos:line="371" pos:column="26"/></name><argument_list pos:line="371" pos:column="26">(<argument><expr><name><name pos:line="371" pos:column="27">attr_value_2<pos:position pos:line="371" pos:column="39"/></name><index pos:line="371" pos:column="39">[<expr><name pos:line="371" pos:column="40">j<pos:position pos:line="371" pos:column="41"/></name></expr>]<pos:position pos:line="371" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="371" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="371" pos:column="44"/></expr_stmt>
                }<pos:position pos:line="372" pos:column="18"/></block></for>
                <expr_stmt><expr><call><name pos:line="373" pos:column="17">xfree<pos:position pos:line="373" pos:column="22"/></name><argument_list pos:line="373" pos:column="22">(<argument><expr><name pos:line="373" pos:column="23">attr_value_2<pos:position pos:line="373" pos:column="35"/></name></expr></argument>)<pos:position pos:line="373" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="373" pos:column="37"/></expr_stmt>
                <expr_stmt><expr><name pos:line="374" pos:column="17">attr_value_2<pos:position pos:line="374" pos:column="29"/></name> <operator pos:line="374" pos:column="30">=<pos:position pos:line="374" pos:column="31"/></operator> <name pos:line="374" pos:column="32">NULL<pos:position pos:line="374" pos:column="36"/></name></expr>;<pos:position pos:line="374" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="375" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="376" pos:column="13">ldap_msgfree<pos:position pos:line="376" pos:column="25"/></name><argument_list pos:line="376" pos:column="25">(<argument><expr><name pos:line="376" pos:column="26">res<pos:position pos:line="376" pos:column="29"/></name></expr></argument>)<pos:position pos:line="376" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="376" pos:column="31"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="378" pos:column="13">debug<pos:position pos:line="378" pos:column="18"/></name><argument_list pos:line="378" pos:column="18">(<argument><expr><operator pos:line="378" pos:column="19">(<pos:position pos:line="378" pos:column="20"/></operator><name pos:line="378" pos:column="20">char<pos:position pos:line="378" pos:column="24"/></name> <operator pos:line="378" pos:column="25">*<pos:position pos:line="378" pos:column="26"/></operator><operator pos:line="378" pos:column="26">)<pos:position pos:line="378" pos:column="27"/></operator> <literal type="string" pos:line="378" pos:column="28">"%s| %s: DEBUG: Users primary group %s %s\n"<pos:position pos:line="378" pos:column="72"/></literal></expr></argument>, <argument><expr><call><name pos:line="378" pos:column="74">LogTime<pos:position pos:line="378" pos:column="81"/></name><argument_list pos:line="378" pos:column="81">()<pos:position pos:line="378" pos:column="83"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="378" pos:column="85">PROGRAM<pos:position pos:line="378" pos:column="92"/></name></expr></argument>, <argument><expr><ternary><condition><expr><name pos:line="378" pos:column="94">retval<pos:position pos:line="378" pos:column="100"/></name></expr> ?<pos:position pos:line="378" pos:column="102"/></condition><then pos:line="378" pos:column="102"> <expr><literal type="string" pos:line="378" pos:column="103">"matches"<pos:position pos:line="378" pos:column="112"/></literal></expr> <pos:position pos:line="378" pos:column="113"/></then><else pos:line="378" pos:column="113">: <expr><literal type="string" pos:line="378" pos:column="115">"does not match"<pos:position pos:line="378" pos:column="131"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="378" pos:column="133">group<pos:position pos:line="378" pos:column="138"/></name></expr></argument>)<pos:position pos:line="378" pos:column="139"/></argument_list></call></expr>;<pos:position pos:line="378" pos:column="140"/></expr_stmt>

        }<pos:position pos:line="380" pos:column="10"/></block></then> <else pos:line="380" pos:column="11">else <block pos:line="380" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="381" pos:column="13">ldap_msgfree<pos:position pos:line="381" pos:column="25"/></name><argument_list pos:line="381" pos:column="25">(<argument><expr><name pos:line="381" pos:column="26">res<pos:position pos:line="381" pos:column="29"/></name></expr></argument>)<pos:position pos:line="381" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="381" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="382" pos:column="13">debug<pos:position pos:line="382" pos:column="18"/></name><argument_list pos:line="382" pos:column="18">(<argument><expr><operator pos:line="382" pos:column="19">(<pos:position pos:line="382" pos:column="20"/></operator><name pos:line="382" pos:column="20">char<pos:position pos:line="382" pos:column="24"/></name> <operator pos:line="382" pos:column="25">*<pos:position pos:line="382" pos:column="26"/></operator><operator pos:line="382" pos:column="26">)<pos:position pos:line="382" pos:column="27"/></operator> <literal type="string" pos:line="382" pos:column="28">"%s| %s: DEBUG: Did not find ldap entry for group %s\n"<pos:position pos:line="382" pos:column="83"/></literal></expr></argument>, <argument><expr><call><name pos:line="382" pos:column="85">LogTime<pos:position pos:line="382" pos:column="92"/></name><argument_list pos:line="382" pos:column="92">()<pos:position pos:line="382" pos:column="94"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="382" pos:column="96">PROGRAM<pos:position pos:line="382" pos:column="103"/></name></expr></argument>, <argument><expr><name pos:line="382" pos:column="105">group<pos:position pos:line="382" pos:column="110"/></name></expr></argument>)<pos:position pos:line="382" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="382" pos:column="112"/></expr_stmt>
        }<pos:position pos:line="383" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="384" pos:column="9">/*
         * Cleanup
         */</comment>
        <if pos:line="387" pos:column="9">if <condition pos:line="387" pos:column="12">(<expr><name pos:line="387" pos:column="13">attr_value<pos:position pos:line="387" pos:column="23"/></name></expr>)<pos:position pos:line="387" pos:column="24"/></condition><then pos:line="387" pos:column="24"> <block pos:line="387" pos:column="25">{
            <for pos:line="388" pos:column="13">for <control pos:line="388" pos:column="17">(<init><expr><name pos:line="388" pos:column="18">j<pos:position pos:line="388" pos:column="19"/></name> <operator pos:line="388" pos:column="20">=<pos:position pos:line="388" pos:column="21"/></operator> <literal type="number" pos:line="388" pos:column="22">0<pos:position pos:line="388" pos:column="23"/></literal></expr>;<pos:position pos:line="388" pos:column="24"/></init> <condition><expr><name pos:line="388" pos:column="25">j<pos:position pos:line="388" pos:column="26"/></name> <operator pos:line="388" pos:column="27">&lt;<pos:position pos:line="388" pos:column="31"/></operator> <name pos:line="388" pos:column="29">max_attr<pos:position pos:line="388" pos:column="37"/></name></expr>;<pos:position pos:line="388" pos:column="38"/></condition> <incr><expr><operator pos:line="388" pos:column="39">++<pos:position pos:line="388" pos:column="41"/></operator><name pos:line="388" pos:column="41">j<pos:position pos:line="388" pos:column="42"/></name></expr></incr>)<pos:position pos:line="388" pos:column="43"/></control> <block pos:line="388" pos:column="44">{
                <expr_stmt><expr><call><name pos:line="389" pos:column="17">xfree<pos:position pos:line="389" pos:column="22"/></name><argument_list pos:line="389" pos:column="22">(<argument><expr><name><name pos:line="389" pos:column="23">attr_value<pos:position pos:line="389" pos:column="33"/></name><index pos:line="389" pos:column="33">[<expr><name pos:line="389" pos:column="34">j<pos:position pos:line="389" pos:column="35"/></name></expr>]<pos:position pos:line="389" pos:column="36"/></index></name></expr></argument>)<pos:position pos:line="389" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="389" pos:column="38"/></expr_stmt>
            }<pos:position pos:line="390" pos:column="14"/></block></for>
            <expr_stmt><expr><call><name pos:line="391" pos:column="13">xfree<pos:position pos:line="391" pos:column="18"/></name><argument_list pos:line="391" pos:column="18">(<argument><expr><name pos:line="391" pos:column="19">attr_value<pos:position pos:line="391" pos:column="29"/></name></expr></argument>)<pos:position pos:line="391" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="391" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="392" pos:column="13">attr_value<pos:position pos:line="392" pos:column="23"/></name> <operator pos:line="392" pos:column="24">=<pos:position pos:line="392" pos:column="25"/></operator> <name pos:line="392" pos:column="26">NULL<pos:position pos:line="392" pos:column="30"/></name></expr>;<pos:position pos:line="392" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="393" pos:column="10"/></block></then></if>
    }<pos:position pos:line="394" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="395" pos:column="5">rc<pos:position pos:line="395" pos:column="7"/></name> <operator pos:line="395" pos:column="8">=<pos:position pos:line="395" pos:column="9"/></operator> <call><name pos:line="395" pos:column="10">ldap_unbind<pos:position pos:line="395" pos:column="21"/></name><argument_list pos:line="395" pos:column="21">(<argument><expr><name pos:line="395" pos:column="22">ld<pos:position pos:line="395" pos:column="24"/></name></expr></argument>)<pos:position pos:line="395" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="395" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name pos:line="396" pos:column="5">ld<pos:position pos:line="396" pos:column="7"/></name> <operator pos:line="396" pos:column="8">=<pos:position pos:line="396" pos:column="9"/></operator> <name pos:line="396" pos:column="10">NULL<pos:position pos:line="396" pos:column="14"/></name></expr>;<pos:position pos:line="396" pos:column="15"/></expr_stmt>
    <if pos:line="397" pos:column="5">if <condition pos:line="397" pos:column="8">(<expr><name pos:line="397" pos:column="9">rc<pos:position pos:line="397" pos:column="11"/></name> <operator pos:line="397" pos:column="12">!=<pos:position pos:line="397" pos:column="14"/></operator> <name pos:line="397" pos:column="15">LDAP_SUCCESS<pos:position pos:line="397" pos:column="27"/></name></expr>)<pos:position pos:line="397" pos:column="28"/></condition><then pos:line="397" pos:column="28"> <block pos:line="397" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="398" pos:column="9">error<pos:position pos:line="398" pos:column="14"/></name><argument_list pos:line="398" pos:column="14">(<argument><expr><operator pos:line="398" pos:column="15">(<pos:position pos:line="398" pos:column="16"/></operator><name pos:line="398" pos:column="16">char<pos:position pos:line="398" pos:column="20"/></name> <operator pos:line="398" pos:column="21">*<pos:position pos:line="398" pos:column="22"/></operator><operator pos:line="398" pos:column="22">)<pos:position pos:line="398" pos:column="23"/></operator> <literal type="string" pos:line="398" pos:column="24">"%s| %s: ERROR: Error unbind ldap server: %s\n"<pos:position pos:line="398" pos:column="71"/></literal></expr></argument>, <argument><expr><call><name pos:line="398" pos:column="73">LogTime<pos:position pos:line="398" pos:column="80"/></name><argument_list pos:line="398" pos:column="80">()<pos:position pos:line="398" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="398" pos:column="84">PROGRAM<pos:position pos:line="398" pos:column="91"/></name></expr></argument>, <argument><expr><call><name pos:line="398" pos:column="93">ldap_err2string<pos:position pos:line="398" pos:column="108"/></name><argument_list pos:line="398" pos:column="108">(<argument><expr><name pos:line="398" pos:column="109">rc<pos:position pos:line="398" pos:column="111"/></name></expr></argument>)<pos:position pos:line="398" pos:column="112"/></argument_list></call></expr></argument>)<pos:position pos:line="398" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="398" pos:column="114"/></expr_stmt>
    }<pos:position pos:line="399" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="400" pos:column="5">debug<pos:position pos:line="400" pos:column="10"/></name><argument_list pos:line="400" pos:column="10">(<argument><expr><operator pos:line="400" pos:column="11">(<pos:position pos:line="400" pos:column="12"/></operator><name pos:line="400" pos:column="12">char<pos:position pos:line="400" pos:column="16"/></name> <operator pos:line="400" pos:column="17">*<pos:position pos:line="400" pos:column="18"/></operator><operator pos:line="400" pos:column="18">)<pos:position pos:line="400" pos:column="19"/></operator> <literal type="string" pos:line="400" pos:column="20">"%s| %s: DEBUG: Unbind ldap server\n"<pos:position pos:line="400" pos:column="57"/></literal></expr></argument>, <argument><expr><call><name pos:line="400" pos:column="59">LogTime<pos:position pos:line="400" pos:column="66"/></name><argument_list pos:line="400" pos:column="66">()<pos:position pos:line="400" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="400" pos:column="70">PROGRAM<pos:position pos:line="400" pos:column="77"/></name></expr></argument>)<pos:position pos:line="400" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="400" pos:column="79"/></expr_stmt>
<label><name pos:line="401" pos:column="1">cleanup<pos:position pos:line="401" pos:column="8"/></name>:<pos:position pos:line="401" pos:column="9"/></label>
<cpp:ifdef pos:line="402" pos:column="1">#<cpp:directive pos:line="402" pos:column="2">ifdef<pos:position pos:line="402" pos:column="7"/></cpp:directive> <name pos:line="402" pos:column="8">HAVE_KRB5<pos:position pos:line="402" pos:column="17"/></name></cpp:ifdef>
    <if pos:line="403" pos:column="5">if <condition pos:line="403" pos:column="8">(<expr><name pos:line="403" pos:column="9">domain<pos:position pos:line="403" pos:column="15"/></name></expr>)<pos:position pos:line="403" pos:column="16"/></condition><then pos:line="403" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="404" pos:column="9">krb5_cleanup<pos:position pos:line="404" pos:column="21"/></name><argument_list pos:line="404" pos:column="21">()<pos:position pos:line="404" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="404" pos:column="24"/></expr_stmt></block></then></if>
<cpp:endif pos:line="405" pos:column="1">#<cpp:directive pos:line="405" pos:column="2">endif<pos:position pos:line="405" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="406" pos:column="5">if <condition pos:line="406" pos:column="8">(<expr><name pos:line="406" pos:column="9">lcreds<pos:position pos:line="406" pos:column="15"/></name></expr>)<pos:position pos:line="406" pos:column="16"/></condition><then pos:line="406" pos:column="16"> <block pos:line="406" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="407" pos:column="9">xfree<pos:position pos:line="407" pos:column="14"/></name><argument_list pos:line="407" pos:column="14">(<argument><expr><name><name pos:line="407" pos:column="15">lcreds<pos:position pos:line="407" pos:column="21"/></name><operator pos:line="407" pos:column="21">-&gt;<pos:position pos:line="407" pos:column="26"/></operator><name pos:line="407" pos:column="23">dn<pos:position pos:line="407" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="407" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="407" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="408" pos:column="9">xfree<pos:position pos:line="408" pos:column="14"/></name><argument_list pos:line="408" pos:column="14">(<argument><expr><name><name pos:line="408" pos:column="15">lcreds<pos:position pos:line="408" pos:column="21"/></name><operator pos:line="408" pos:column="21">-&gt;<pos:position pos:line="408" pos:column="26"/></operator><name pos:line="408" pos:column="23">pw<pos:position pos:line="408" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="408" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="408" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="409" pos:column="9">xfree<pos:position pos:line="409" pos:column="14"/></name><argument_list pos:line="409" pos:column="14">(<argument><expr><name pos:line="409" pos:column="15">lcreds<pos:position pos:line="409" pos:column="21"/></name></expr></argument>)<pos:position pos:line="409" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="409" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="410" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="411" pos:column="5">xfree<pos:position pos:line="411" pos:column="10"/></name><argument_list pos:line="411" pos:column="10">(<argument><expr><name pos:line="411" pos:column="11">bindp<pos:position pos:line="411" pos:column="16"/></name></expr></argument>)<pos:position pos:line="411" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="411" pos:column="18"/></expr_stmt>
    <return pos:line="412" pos:column="5">return <expr><operator pos:line="412" pos:column="12">(<pos:position pos:line="412" pos:column="13"/></operator><name pos:line="412" pos:column="13">retval<pos:position pos:line="412" pos:column="19"/></name><operator pos:line="412" pos:column="19">)<pos:position pos:line="412" pos:column="20"/></operator></expr>;<pos:position pos:line="412" pos:column="21"/></return>
}<pos:position pos:line="413" pos:column="2"/></block></function></unit>

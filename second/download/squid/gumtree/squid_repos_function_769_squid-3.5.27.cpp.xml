<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_769_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ClientHttpRequest<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">sslBumpEstablish<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><name><name pos:line="2" pos:column="37">Comm<pos:position pos:line="2" pos:column="41"/></name><operator pos:line="2" pos:column="41">::<pos:position pos:line="2" pos:column="43"/></operator><name pos:line="2" pos:column="43">Flag<pos:position pos:line="2" pos:column="47"/></name></name></type> <name pos:line="2" pos:column="48">errflag<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// Bail out quickly on Comm::ERR_CLOSING - close handlers will tidy up</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">errflag<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <name><name pos:line="5" pos:column="20">Comm<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">::<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">ERR_CLOSING<pos:position pos:line="5" pos:column="37"/></name></name></expr>)<pos:position pos:line="5" pos:column="38"/></condition><then pos:line="5" pos:column="38">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">errflag<pos:position pos:line="8" pos:column="16"/></name></expr>)<pos:position pos:line="8" pos:column="17"/></condition><then pos:line="8" pos:column="17"> <block pos:line="8" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">85<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">3<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="23">HERE<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&lt;&lt;<pos:position pos:line="9" pos:column="36"/></operator> <literal type="string" pos:line="9" pos:column="31">"CONNECT response failure in SslBump: "<pos:position pos:line="9" pos:column="70"/></literal> <operator pos:line="9" pos:column="71">&lt;&lt;<pos:position pos:line="9" pos:column="79"/></operator> <name pos:line="9" pos:column="74">errflag<pos:position pos:line="9" pos:column="81"/></name></expr></argument>)<pos:position pos:line="9" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="83"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">getConn<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">()<pos:position pos:line="10" pos:column="18"/></argument_list></call><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><call><name><name pos:line="10" pos:column="20">clientConnection<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">close<pos:position pos:line="10" pos:column="43"/></name></name><argument_list pos:line="10" pos:column="43">()<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="14" pos:column="5">// We lack HttpReply which logRequest() uses to log the status code.</comment>
    <comment type="line" pos:line="15" pos:column="5">// TODO: Use HttpReply instead of the "200 Connection established" string.</comment>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">al<pos:position pos:line="16" pos:column="7"/></name><operator pos:line="16" pos:column="7">-&gt;<pos:position pos:line="16" pos:column="12"/></operator><name pos:line="16" pos:column="9">http<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">.<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">code<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">=<pos:position pos:line="16" pos:column="20"/></operator> <literal type="number" pos:line="16" pos:column="21">200<pos:position pos:line="16" pos:column="24"/></literal></expr>;<pos:position pos:line="16" pos:column="25"/></expr_stmt>

<cpp:if pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">if<pos:position pos:line="18" pos:column="4"/></cpp:directive> <expr><name pos:line="18" pos:column="5">USE_AUTH<pos:position pos:line="18" pos:column="13"/></name></expr></cpp:if>
    <comment type="line" pos:line="19" pos:column="5">// Preserve authentication info for the ssl-bumped request</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name><name pos:line="20" pos:column="9">request<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">auth_user_request<pos:position pos:line="20" pos:column="35"/></name></name> <operator pos:line="20" pos:column="36">!=<pos:position pos:line="20" pos:column="38"/></operator> <name pos:line="20" pos:column="39">NULL<pos:position pos:line="20" pos:column="43"/></name></expr>)<pos:position pos:line="20" pos:column="44"/></condition><then pos:line="20" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="21" pos:column="9">getConn<pos:position pos:line="21" pos:column="16"/></name><argument_list pos:line="21" pos:column="16">()<pos:position pos:line="21" pos:column="18"/></argument_list></call><operator pos:line="21" pos:column="18">-&gt;<pos:position pos:line="21" pos:column="23"/></operator><call><name pos:line="21" pos:column="20">setAuth<pos:position pos:line="21" pos:column="27"/></name><argument_list pos:line="21" pos:column="27">(<argument><expr><name><name pos:line="21" pos:column="28">request<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">-&gt;<pos:position pos:line="21" pos:column="40"/></operator><name pos:line="21" pos:column="37">auth_user_request<pos:position pos:line="21" pos:column="54"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="56">"SSL-bumped CONNECT"<pos:position pos:line="21" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="78"/></expr_stmt></block></then></if>
<cpp:endif pos:line="22" pos:column="1">#<cpp:directive pos:line="22" pos:column="2">endif<pos:position pos:line="22" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">assert<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><call><name pos:line="24" pos:column="12">sslBumpNeeded<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">()<pos:position pos:line="24" pos:column="27"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">getConn<pos:position pos:line="25" pos:column="12"/></name><argument_list pos:line="25" pos:column="12">()<pos:position pos:line="25" pos:column="14"/></argument_list></call><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><call><name pos:line="25" pos:column="16">switchToHttps<pos:position pos:line="25" pos:column="29"/></name><argument_list pos:line="25" pos:column="29">(<argument><expr><name pos:line="25" pos:column="30">request<pos:position pos:line="25" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="39">sslBumpNeed_<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

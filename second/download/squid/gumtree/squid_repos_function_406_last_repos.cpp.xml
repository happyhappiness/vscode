<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_406_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type> <name pos:line="1" pos:column="5">WIN32_StartService<pos:position pos:line="1" pos:column="23"/></name><parameter_list pos:line="1" pos:column="23">(<parameter><decl><type><name pos:line="1" pos:column="24">int<pos:position pos:line="1" pos:column="27"/></name></type> <name pos:line="1" pos:column="28">argc<pos:position pos:line="1" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="34">char<pos:position pos:line="1" pos:column="38"/></name> <modifier pos:line="1" pos:column="39">*<pos:position pos:line="1" pos:column="40"/></modifier><modifier pos:line="1" pos:column="40">*<pos:position pos:line="1" pos:column="41"/></modifier></type><name pos:line="1" pos:column="41">argv<pos:position pos:line="1" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="46"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">SERVICE_TABLE_ENTRY<pos:position pos:line="3" pos:column="24"/></name></type> <name><name pos:line="3" pos:column="25">DispatchTable<pos:position pos:line="3" pos:column="38"/></name><index pos:line="3" pos:column="38">[]<pos:position pos:line="3" pos:column="40"/></index></name> <init pos:line="3" pos:column="41">= <expr><block pos:line="3" pos:column="43">{
        <expr><block pos:line="4" pos:column="9">{<expr><name pos:line="4" pos:column="10">NULL<pos:position pos:line="4" pos:column="14"/></name></expr>, <expr><name pos:line="4" pos:column="16">SquidWinSvcMain<pos:position pos:line="4" pos:column="31"/></name></expr>}<pos:position pos:line="4" pos:column="32"/></block></expr>,
        <expr><block pos:line="5" pos:column="9">{<expr><name pos:line="5" pos:column="10">NULL<pos:position pos:line="5" pos:column="14"/></name></expr>, <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr>}<pos:position pos:line="5" pos:column="21"/></block></expr>
    }<pos:position pos:line="6" pos:column="6"/></block></expr></init></decl>;<pos:position pos:line="6" pos:column="7"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">c<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">stderr_path<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><literal type="number" pos:line="8" pos:column="22">256<pos:position pos:line="8" pos:column="25"/></literal></expr>]<pos:position pos:line="8" pos:column="26"/></index></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">strcpy<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">stderr_path<pos:position pos:line="10" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="25">argv<pos:position pos:line="10" pos:column="29"/></name><index pos:line="10" pos:column="29">[<expr><literal type="number" pos:line="10" pos:column="30">0<pos:position pos:line="10" pos:column="31"/></literal></expr>]<pos:position pos:line="10" pos:column="32"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">strcat<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">stderr_path<pos:position pos:line="11" pos:column="23"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="11" pos:column="24">".log"<pos:position pos:line="11" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">freopen<pos:position pos:line="12" pos:column="12"/></name><argument_list pos:line="12" pos:column="12">(<argument><expr><name pos:line="12" pos:column="13">stderr_path<pos:position pos:line="12" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="26">"w"<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="31">stderr<pos:position pos:line="12" pos:column="37"/></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">setmode<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><call><name pos:line="13" pos:column="13">fileno<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">stderr<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="13" pos:column="29">O_TEXT<pos:position pos:line="13" pos:column="35"/></name></expr></argument>)<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">WIN32_run_mode<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">_WIN_SQUID_RUN_MODE_SERVICE<pos:position pos:line="14" pos:column="49"/></name></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><operator pos:line="16" pos:column="10">(<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">c<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">=<pos:position pos:line="16" pos:column="13"/></operator><call><name pos:line="16" pos:column="13">strchr<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><name><name pos:line="16" pos:column="20">argv<pos:position pos:line="16" pos:column="24"/></name><index pos:line="16" pos:column="24">[<expr><literal type="number" pos:line="16" pos:column="25">1<pos:position pos:line="16" pos:column="26"/></literal></expr>]<pos:position pos:line="16" pos:column="27"/></index></name></expr></argument>,<argument><expr><literal type="char" pos:line="16" pos:column="28">':'<pos:position pos:line="16" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="32"/></argument_list></call><operator pos:line="16" pos:column="32">)<pos:position pos:line="16" pos:column="33"/></operator></expr>)<pos:position pos:line="16" pos:column="34"/></condition><then pos:line="16" pos:column="34"> <block pos:line="16" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">fprintf<pos:position pos:line="17" pos:column="16"/></name><argument_list pos:line="17" pos:column="16">(<argument><expr><name pos:line="17" pos:column="17">stderr<pos:position pos:line="17" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="25">"Bad Service Parameter: %s\n"<pos:position pos:line="17" pos:column="54"/></literal></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="56">argv<pos:position pos:line="17" pos:column="60"/></name><index pos:line="17" pos:column="60">[<expr><literal type="number" pos:line="17" pos:column="61">1<pos:position pos:line="17" pos:column="62"/></literal></expr>]<pos:position pos:line="17" pos:column="63"/></index></name></expr></argument>)<pos:position pos:line="17" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="65"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><literal type="number" pos:line="18" pos:column="16">1<pos:position pos:line="18" pos:column="17"/></literal></expr>;<pos:position pos:line="18" pos:column="18"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">service_name<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <call><name pos:line="21" pos:column="20">SBuf<pos:position pos:line="21" pos:column="24"/></name><argument_list pos:line="21" pos:column="24">(<argument><expr><name pos:line="21" pos:column="25">c<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">+<pos:position pos:line="21" pos:column="27"/></operator><literal type="number" pos:line="21" pos:column="27">1<pos:position pos:line="21" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="22" pos:column="5">const<pos:position pos:line="22" pos:column="10"/></specifier> <name pos:line="22" pos:column="11">char<pos:position pos:line="22" pos:column="15"/></name> <modifier pos:line="22" pos:column="16">*<pos:position pos:line="22" pos:column="17"/></modifier></type><name pos:line="22" pos:column="17">service<pos:position pos:line="22" pos:column="24"/></name> <init pos:line="22" pos:column="25">= <expr><call><name><name pos:line="22" pos:column="27">service_name<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">.<pos:position pos:line="22" pos:column="40"/></operator><name pos:line="22" pos:column="40">c_str<pos:position pos:line="22" pos:column="45"/></name></name><argument_list pos:line="22" pos:column="45">()<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">DispatchTable<pos:position pos:line="23" pos:column="18"/></name><index pos:line="23" pos:column="18">[<expr><literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal></expr>]<pos:position pos:line="23" pos:column="21"/></index></name><operator pos:line="23" pos:column="21">.<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">lpServiceName<pos:position pos:line="23" pos:column="35"/></name> <operator pos:line="23" pos:column="36">=<pos:position pos:line="23" pos:column="37"/></operator> <cast type="const" pos:line="23" pos:column="38">const_cast<argument_list type="generic" pos:line="23" pos:column="48">&lt;<argument><expr><name pos:line="23" pos:column="49">char<pos:position pos:line="23" pos:column="53"/></name><operator pos:line="23" pos:column="53">*<pos:position pos:line="23" pos:column="54"/></operator></expr></argument>&gt;<pos:position pos:line="23" pos:column="58"/></argument_list><argument_list pos:line="23" pos:column="55">(<argument><expr><name pos:line="23" pos:column="56">service<pos:position pos:line="23" pos:column="63"/></name></expr></argument>)<pos:position pos:line="23" pos:column="64"/></argument_list></cast></expr>;<pos:position pos:line="23" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">strcat<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">REGKEY<pos:position pos:line="24" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="20">service<pos:position pos:line="24" pos:column="27"/></name></expr></argument>)<pos:position pos:line="24" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">keys<pos:position pos:line="25" pos:column="9"/></name><index pos:line="25" pos:column="9">[<expr><literal type="number" pos:line="25" pos:column="10">4<pos:position pos:line="25" pos:column="11"/></literal></expr>]<pos:position pos:line="25" pos:column="12"/></index></name> <operator pos:line="25" pos:column="13">=<pos:position pos:line="25" pos:column="14"/></operator> <cast type="const" pos:line="25" pos:column="15">const_cast<argument_list type="generic" pos:line="25" pos:column="25">&lt;<argument><expr><name pos:line="25" pos:column="26">char<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">*<pos:position pos:line="25" pos:column="31"/></operator></expr></argument>&gt;<pos:position pos:line="25" pos:column="35"/></argument_list><argument_list pos:line="25" pos:column="32">(<argument><expr><name pos:line="25" pos:column="33">service<pos:position pos:line="25" pos:column="40"/></name></expr></argument>)<pos:position pos:line="25" pos:column="41"/></argument_list></cast></expr>;<pos:position pos:line="25" pos:column="42"/></expr_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><call><name pos:line="27" pos:column="10">StartServiceCtrlDispatcher<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name pos:line="27" pos:column="37">DispatchTable<pos:position pos:line="27" pos:column="50"/></name></expr></argument>)<pos:position pos:line="27" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="52"/></condition><then pos:line="27" pos:column="52"> <block pos:line="27" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="28" pos:column="9">fprintf<pos:position pos:line="28" pos:column="16"/></name><argument_list pos:line="28" pos:column="16">(<argument><expr><name pos:line="28" pos:column="17">stderr<pos:position pos:line="28" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="25">"StartServiceCtrlDispatcher error = %ld\n"<pos:position pos:line="28" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="28" pos:column="69">GetLastError<pos:position pos:line="28" pos:column="81"/></name><argument_list pos:line="28" pos:column="81">()<pos:position pos:line="28" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="85"/></expr_stmt>
        <return pos:line="29" pos:column="9">return <expr><literal type="number" pos:line="29" pos:column="16">1<pos:position pos:line="29" pos:column="17"/></literal></expr>;<pos:position pos:line="29" pos:column="18"/></return>
    }<pos:position pos:line="30" pos:column="6"/></block></then></if>

    <return pos:line="32" pos:column="5">return <expr><literal type="number" pos:line="32" pos:column="12">0<pos:position pos:line="32" pos:column="13"/></literal></expr>;<pos:position pos:line="32" pos:column="14"/></return>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

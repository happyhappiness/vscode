<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4829_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBuf<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">acl_httpstatus_data<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">toStr<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></parameter_list> <specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SBuf<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">rv<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">status2<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">==<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">INT_MAX<pos:position pos:line="5" pos:column="27"/></name></expr>)<pos:position pos:line="5" pos:column="28"/></condition><then pos:line="5" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="6" pos:column="9">rv<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">.<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">Printf<pos:position pos:line="6" pos:column="18"/></name></name><argument_list pos:line="6" pos:column="18">(<argument><expr><literal type="string" pos:line="6" pos:column="19">"%d-"<pos:position pos:line="6" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="26">status1<pos:position pos:line="6" pos:column="33"/></name></expr></argument>)<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt></block></then>
    <elseif pos:line="7" pos:column="5">else <if pos:line="7" pos:column="10">if <condition pos:line="7" pos:column="13">(<expr><name pos:line="7" pos:column="14">status1<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">==<pos:position pos:line="7" pos:column="24"/></operator> <name pos:line="7" pos:column="25">status2<pos:position pos:line="7" pos:column="32"/></name></expr>)<pos:position pos:line="7" pos:column="33"/></condition><then pos:line="7" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="8" pos:column="9">rv<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">.<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">Printf<pos:position pos:line="8" pos:column="18"/></name></name><argument_list pos:line="8" pos:column="18">(<argument><expr><literal type="string" pos:line="8" pos:column="19">"%d"<pos:position pos:line="8" pos:column="23"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">status1<pos:position pos:line="8" pos:column="32"/></name></expr></argument>)<pos:position pos:line="8" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="34"/></expr_stmt></block></then></if></elseif>
    <else pos:line="9" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="9">rv<pos:position pos:line="10" pos:column="11"/></name><operator pos:line="10" pos:column="11">.<pos:position pos:line="10" pos:column="12"/></operator><name pos:line="10" pos:column="12">Printf<pos:position pos:line="10" pos:column="18"/></name></name><argument_list pos:line="10" pos:column="18">(<argument><expr><literal type="string" pos:line="10" pos:column="19">"%d-%d"<pos:position pos:line="10" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="28">status1<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">status2<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt></block></else></if>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">rv<pos:position pos:line="11" pos:column="14"/></name></expr>;<pos:position pos:line="11" pos:column="15"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

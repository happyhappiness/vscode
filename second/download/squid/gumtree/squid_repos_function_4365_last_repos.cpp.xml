<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4365_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">searchLDAPGroup<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">LDAP<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type> <name pos:line="2" pos:column="24">ld<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">group<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">member<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="67">const<pos:position pos:line="2" pos:column="72"/></specifier> <name pos:line="2" pos:column="73">char<pos:position pos:line="2" pos:column="77"/></name> <modifier pos:line="2" pos:column="78">*<pos:position pos:line="2" pos:column="79"/></modifier></type><name pos:line="2" pos:column="79">extension_dn<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="92"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">std<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">string<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">filter<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">LDAPMessage<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">res<pos:position pos:line="5" pos:column="21"/></name> <init pos:line="5" pos:column="22">= <expr><name pos:line="5" pos:column="24">NULL<pos:position pos:line="5" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">rc<pos:position pos:line="6" pos:column="11"/></name></decl>;<pos:position pos:line="6" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name><name pos:line="7" pos:column="11">searchattr<pos:position pos:line="7" pos:column="21"/></name><index pos:line="7" pos:column="21">[]<pos:position pos:line="7" pos:column="23"/></index></name> <init pos:line="7" pos:column="24">= <expr><block pos:line="7" pos:column="26">{<expr><operator pos:line="7" pos:column="27">(<pos:position pos:line="7" pos:column="28"/></operator><name pos:line="7" pos:column="28">char<pos:position pos:line="7" pos:column="32"/></name> <operator pos:line="7" pos:column="33">*<pos:position pos:line="7" pos:column="34"/></operator><operator pos:line="7" pos:column="34">)<pos:position pos:line="7" pos:column="35"/></operator> <name pos:line="7" pos:column="36">LDAP_NO_ATTRS<pos:position pos:line="7" pos:column="49"/></name></expr>, <expr><name pos:line="7" pos:column="51">NULL<pos:position pos:line="7" pos:column="55"/></name></expr>}<pos:position pos:line="7" pos:column="56"/></block></expr></init></decl>;<pos:position pos:line="7" pos:column="57"/></decl_stmt>

    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name><name pos:line="9" pos:column="11">std<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">::<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">string<pos:position pos:line="9" pos:column="22"/></name></name></type> <name pos:line="9" pos:column="23">searchbase<pos:position pos:line="9" pos:column="33"/></name> <init pos:line="9" pos:column="34">= <expr><call><name pos:line="9" pos:column="36">build_searchbase<pos:position pos:line="9" pos:column="52"/></name><argument_list pos:line="9" pos:column="52">(<argument><expr><name pos:line="9" pos:column="53">extension_dn<pos:position pos:line="9" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="67">basedn<pos:position pos:line="9" pos:column="73"/></name></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="75"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name pos:line="10" pos:column="10">build_filter<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">filter<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="31">searchfilter<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="45">member<pos:position pos:line="10" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="53">group<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="60"/></condition><then pos:line="10" pos:column="60"> <block pos:line="10" pos:column="61">{
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">std<pos:position pos:line="11" pos:column="12"/></name><operator pos:line="11" pos:column="12">::<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">cerr<pos:position pos:line="11" pos:column="18"/></name></name> <operator pos:line="11" pos:column="19">&lt;&lt;<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="22">PROGRAM_NAME<pos:position pos:line="11" pos:column="34"/></name>  <operator pos:line="11" pos:column="36">&lt;&lt;<pos:position pos:line="11" pos:column="44"/></operator> <literal type="string" pos:line="11" pos:column="39">": ERROR: Failed to construct LDAP search filter. filter=\""<pos:position pos:line="11" pos:column="99"/></literal> <operator pos:line="11" pos:column="100">&lt;&lt;<pos:position pos:line="11" pos:column="108"/></operator>
                  <call><name><name pos:line="12" pos:column="19">filter<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">.<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">c_str<pos:position pos:line="12" pos:column="31"/></name></name><argument_list pos:line="12" pos:column="31">()<pos:position pos:line="12" pos:column="33"/></argument_list></call> <operator pos:line="12" pos:column="34">&lt;&lt;<pos:position pos:line="12" pos:column="42"/></operator> <literal type="string" pos:line="12" pos:column="37">"\", user=\""<pos:position pos:line="12" pos:column="50"/></literal> <operator pos:line="12" pos:column="51">&lt;&lt;<pos:position pos:line="12" pos:column="59"/></operator> <name pos:line="12" pos:column="54">member<pos:position pos:line="12" pos:column="60"/></name> <operator pos:line="12" pos:column="61">&lt;&lt;<pos:position pos:line="12" pos:column="69"/></operator> <literal type="string" pos:line="12" pos:column="64">"\", group=\""<pos:position pos:line="12" pos:column="78"/></literal> <operator pos:line="12" pos:column="79">&lt;&lt;<pos:position pos:line="12" pos:column="87"/></operator> <name pos:line="12" pos:column="82">group<pos:position pos:line="12" pos:column="87"/></name> <operator pos:line="12" pos:column="88">&lt;&lt;<pos:position pos:line="12" pos:column="96"/></operator> <literal type="string" pos:line="12" pos:column="91">"\""<pos:position pos:line="12" pos:column="95"/></literal> <operator pos:line="12" pos:column="96">&lt;&lt;<pos:position pos:line="12" pos:column="104"/></operator> <name><name pos:line="12" pos:column="99">std<pos:position pos:line="12" pos:column="102"/></name><operator pos:line="12" pos:column="102">::<pos:position pos:line="12" pos:column="104"/></operator><name pos:line="12" pos:column="104">endl<pos:position pos:line="12" pos:column="108"/></name></name></expr>;<pos:position pos:line="12" pos:column="109"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><operator pos:line="13" pos:column="16">-<pos:position pos:line="13" pos:column="17"/></operator><literal type="number" pos:line="13" pos:column="17">1<pos:position pos:line="13" pos:column="18"/></literal></expr>;<pos:position pos:line="13" pos:column="19"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debug<pos:position pos:line="15" pos:column="10"/></name><argument_list pos:line="15" pos:column="10">(<argument><expr><literal type="string" pos:line="15" pos:column="11">"group filter '%s', searchbase '%s'\n"<pos:position pos:line="15" pos:column="49"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="15" pos:column="51">filter<pos:position pos:line="15" pos:column="57"/></name><operator pos:line="15" pos:column="57">.<pos:position pos:line="15" pos:column="58"/></operator><name pos:line="15" pos:column="58">c_str<pos:position pos:line="15" pos:column="63"/></name></name><argument_list pos:line="15" pos:column="63">()<pos:position pos:line="15" pos:column="65"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="15" pos:column="67">searchbase<pos:position pos:line="15" pos:column="77"/></name><operator pos:line="15" pos:column="77">.<pos:position pos:line="15" pos:column="78"/></operator><name pos:line="15" pos:column="78">c_str<pos:position pos:line="15" pos:column="83"/></name></name><argument_list pos:line="15" pos:column="83">()<pos:position pos:line="15" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="15" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="87"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">rc<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">ldap_search_s<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">ld<pos:position pos:line="17" pos:column="26"/></name></expr></argument>, <argument><expr><call><name><name pos:line="17" pos:column="28">searchbase<pos:position pos:line="17" pos:column="38"/></name><operator pos:line="17" pos:column="38">.<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">c_str<pos:position pos:line="17" pos:column="44"/></name></name><argument_list pos:line="17" pos:column="44">()<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="48">searchscope<pos:position pos:line="17" pos:column="59"/></name></expr></argument>, <argument><expr><call><name><name pos:line="17" pos:column="61">filter<pos:position pos:line="17" pos:column="67"/></name><operator pos:line="17" pos:column="67">.<pos:position pos:line="17" pos:column="68"/></operator><name pos:line="17" pos:column="68">c_str<pos:position pos:line="17" pos:column="73"/></name></name><argument_list pos:line="17" pos:column="73">()<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="77">searchattr<pos:position pos:line="17" pos:column="87"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="89">1<pos:position pos:line="17" pos:column="90"/></literal></expr></argument>, <argument><expr><operator pos:line="17" pos:column="92">&amp;<pos:position pos:line="17" pos:column="97"/></operator><name pos:line="17" pos:column="93">res<pos:position pos:line="17" pos:column="96"/></name></expr></argument>)<pos:position pos:line="17" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="98"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">LdapResult<pos:position pos:line="18" pos:column="15"/></name></type> <name pos:line="18" pos:column="16">ldapRes<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">res<pos:position pos:line="18" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="29">ldap_msgfree<pos:position pos:line="18" pos:column="41"/></name></expr></argument>)<pos:position pos:line="18" pos:column="42"/></argument_list></decl>;<pos:position pos:line="18" pos:column="43"/></decl_stmt>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><call><name pos:line="19" pos:column="10">ldap_search_ok<pos:position pos:line="19" pos:column="24"/></name><argument_list pos:line="19" pos:column="24">(<argument><expr><name pos:line="19" pos:column="25">rc<pos:position pos:line="19" pos:column="27"/></name></expr></argument>)<pos:position pos:line="19" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="29"/></condition><then pos:line="19" pos:column="29">
        <block type="pseudo"><return pos:line="20" pos:column="9">return <expr><operator pos:line="20" pos:column="16">-<pos:position pos:line="20" pos:column="17"/></operator><literal type="number" pos:line="20" pos:column="17">1<pos:position pos:line="20" pos:column="18"/></literal></expr>;<pos:position pos:line="20" pos:column="19"/></return></block></then></if>

    <return pos:line="22" pos:column="5">return <expr><ternary><condition><expr><call><name pos:line="22" pos:column="12">ldap_first_entry<pos:position pos:line="22" pos:column="28"/></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">ld<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><call><name><name pos:line="22" pos:column="33">ldapRes<pos:position pos:line="22" pos:column="40"/></name><operator pos:line="22" pos:column="40">.<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">get<pos:position pos:line="22" pos:column="44"/></name></name><argument_list pos:line="22" pos:column="44">()<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="47"/></argument_list></call></expr> ?<pos:position pos:line="22" pos:column="49"/></condition><then pos:line="22" pos:column="49"> <expr><literal type="number" pos:line="22" pos:column="50">0<pos:position pos:line="22" pos:column="51"/></literal></expr> <pos:position pos:line="22" pos:column="52"/></then><else pos:line="22" pos:column="52">: <expr><literal type="number" pos:line="22" pos:column="54">1<pos:position pos:line="22" pos:column="55"/></literal></expr></else></ternary></expr>;<pos:position pos:line="22" pos:column="56"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

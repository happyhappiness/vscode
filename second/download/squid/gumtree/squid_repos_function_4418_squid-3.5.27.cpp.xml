<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4418_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Bio<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">sslFeatures<pos:position pos:line="2" pos:column="22"/></name><operator pos:line="2" pos:column="22">::<pos:position pos:line="2" pos:column="24"/></operator><name pos:line="2" pos:column="24">parseMsgHead<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">(<parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">MemBuf<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">&amp;<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="51">buf<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">unsigned<pos:position pos:line="4" pos:column="19"/></name> <name pos:line="4" pos:column="20">char<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">head<pos:position pos:line="4" pos:column="30"/></name> <init pos:line="4" pos:column="31">= <expr><operator pos:line="4" pos:column="33">(<pos:position pos:line="4" pos:column="34"/></operator><specifier pos:line="4" pos:column="34">const<pos:position pos:line="4" pos:column="39"/></specifier> <name pos:line="4" pos:column="40">unsigned<pos:position pos:line="4" pos:column="48"/></name> <name pos:line="4" pos:column="49">char<pos:position pos:line="4" pos:column="53"/></name> <operator pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></operator><operator pos:line="4" pos:column="55">)<pos:position pos:line="4" pos:column="56"/></operator><call><name><name pos:line="4" pos:column="56">buf<pos:position pos:line="4" pos:column="59"/></name><operator pos:line="4" pos:column="59">.<pos:position pos:line="4" pos:column="60"/></operator><name pos:line="4" pos:column="60">content<pos:position pos:line="4" pos:column="67"/></name></name><argument_list pos:line="4" pos:column="67">()<pos:position pos:line="4" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">s<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><call><name pos:line="5" pos:column="21">objToString<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">head<pos:position pos:line="5" pos:column="37"/></name></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="39">buf<pos:position pos:line="5" pos:column="42"/></name><operator pos:line="5" pos:column="42">.<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">contentSize<pos:position pos:line="5" pos:column="54"/></name></name><argument_list pos:line="5" pos:column="54">()<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">83<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">7<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"SSL Header: "<pos:position pos:line="6" pos:column="33"/></literal> <operator pos:line="6" pos:column="34">&lt;&lt;<pos:position pos:line="6" pos:column="42"/></operator> <name pos:line="6" pos:column="37">s<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">buf<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">.<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">contentSize<pos:position pos:line="7" pos:column="24"/></name></name><argument_list pos:line="7" pos:column="24">()<pos:position pos:line="7" pos:column="26"/></argument_list></call> <operator pos:line="7" pos:column="27">&lt;<pos:position pos:line="7" pos:column="31"/></operator> <literal type="number" pos:line="7" pos:column="29">5<pos:position pos:line="7" pos:column="30"/></literal></expr>)<pos:position pos:line="7" pos:column="31"/></condition><then pos:line="7" pos:column="31">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">helloMsgSize<pos:position pos:line="10" pos:column="21"/></name> <operator pos:line="10" pos:column="22">&gt;<pos:position pos:line="10" pos:column="26"/></operator> <literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>)<pos:position pos:line="10" pos:column="26"/></condition><then pos:line="10" pos:column="26">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">helloMsgSize<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">(<pos:position pos:line="13" pos:column="10"/></operator><name><name pos:line="13" pos:column="10">head<pos:position pos:line="13" pos:column="14"/></name><index pos:line="13" pos:column="14">[<expr><literal type="number" pos:line="13" pos:column="15">0<pos:position pos:line="13" pos:column="16"/></literal></expr>]<pos:position pos:line="13" pos:column="17"/></index></name> <operator pos:line="13" pos:column="18">&amp;<pos:position pos:line="13" pos:column="23"/></operator> <literal type="number" pos:line="13" pos:column="20">0x80<pos:position pos:line="13" pos:column="24"/></literal><operator pos:line="13" pos:column="24">)<pos:position pos:line="13" pos:column="25"/></operator> <operator pos:line="13" pos:column="26">&amp;&amp;<pos:position pos:line="13" pos:column="36"/></operator> <name><name pos:line="13" pos:column="29">head<pos:position pos:line="13" pos:column="33"/></name><index pos:line="13" pos:column="33">[<expr><literal type="number" pos:line="13" pos:column="34">2<pos:position pos:line="13" pos:column="35"/></literal></expr>]<pos:position pos:line="13" pos:column="36"/></index></name> <operator pos:line="13" pos:column="37">==<pos:position pos:line="13" pos:column="39"/></operator> <literal type="number" pos:line="13" pos:column="40">0x01<pos:position pos:line="13" pos:column="44"/></literal> <operator pos:line="13" pos:column="45">&amp;&amp;<pos:position pos:line="13" pos:column="55"/></operator> <name><name pos:line="13" pos:column="48">head<pos:position pos:line="13" pos:column="52"/></name><index pos:line="13" pos:column="52">[<expr><literal type="number" pos:line="13" pos:column="53">3<pos:position pos:line="13" pos:column="54"/></literal></expr>]<pos:position pos:line="13" pos:column="55"/></index></name> <operator pos:line="13" pos:column="56">==<pos:position pos:line="13" pos:column="58"/></operator> <literal type="number" pos:line="13" pos:column="59">0x03<pos:position pos:line="13" pos:column="63"/></literal></expr>)<pos:position pos:line="13" pos:column="64"/></condition><then pos:line="13" pos:column="64"> <block pos:line="13" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">83<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">7<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="23">"SSL version 2 handshake message with v3 support"<pos:position pos:line="14" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="74"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">sslVersion<pos:position pos:line="15" pos:column="19"/></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <operator pos:line="15" pos:column="22">(<pos:position pos:line="15" pos:column="23"/></operator><name><name pos:line="15" pos:column="23">head<pos:position pos:line="15" pos:column="27"/></name><index pos:line="15" pos:column="27">[<expr><literal type="number" pos:line="15" pos:column="28">3<pos:position pos:line="15" pos:column="29"/></literal></expr>]<pos:position pos:line="15" pos:column="30"/></index></name> <operator pos:line="15" pos:column="31">&lt;&lt;<pos:position pos:line="15" pos:column="39"/></operator> <literal type="number" pos:line="15" pos:column="34">8<pos:position pos:line="15" pos:column="35"/></literal><operator pos:line="15" pos:column="35">)<pos:position pos:line="15" pos:column="36"/></operator> <operator pos:line="15" pos:column="37">|<pos:position pos:line="15" pos:column="38"/></operator> <name><name pos:line="15" pos:column="39">head<pos:position pos:line="15" pos:column="43"/></name><index pos:line="15" pos:column="43">[<expr><literal type="number" pos:line="15" pos:column="44">4<pos:position pos:line="15" pos:column="45"/></literal></expr>]<pos:position pos:line="15" pos:column="46"/></index></name></expr>;<pos:position pos:line="15" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">helloRecordStart<pos:position pos:line="16" pos:column="25"/></name> <operator pos:line="16" pos:column="26">=<pos:position pos:line="16" pos:column="27"/></operator> <literal type="number" pos:line="16" pos:column="28">0<pos:position pos:line="16" pos:column="29"/></literal></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">83<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="20">7<pos:position pos:line="17" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="23">"SSL Version :"<pos:position pos:line="17" pos:column="38"/></literal> <operator pos:line="17" pos:column="39">&lt;&lt;<pos:position pos:line="17" pos:column="47"/></operator> <name><name pos:line="17" pos:column="42">std<pos:position pos:line="17" pos:column="45"/></name><operator pos:line="17" pos:column="45">::<pos:position pos:line="17" pos:column="47"/></operator><name pos:line="17" pos:column="47">hex<pos:position pos:line="17" pos:column="50"/></name></name> <operator pos:line="17" pos:column="51">&lt;&lt;<pos:position pos:line="17" pos:column="59"/></operator> <call><name><name pos:line="17" pos:column="54">std<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">::<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="59">setw<pos:position pos:line="17" pos:column="63"/></name></name><argument_list pos:line="17" pos:column="63">(<argument><expr><literal type="number" pos:line="17" pos:column="64">8<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call> <operator pos:line="17" pos:column="67">&lt;&lt;<pos:position pos:line="17" pos:column="75"/></operator> <call><name><name pos:line="17" pos:column="70">std<pos:position pos:line="17" pos:column="73"/></name><operator pos:line="17" pos:column="73">::<pos:position pos:line="17" pos:column="75"/></operator><name pos:line="17" pos:column="75">setfill<pos:position pos:line="17" pos:column="82"/></name></name><argument_list pos:line="17" pos:column="82">(<argument><expr><literal type="char" pos:line="17" pos:column="83">'0'<pos:position pos:line="17" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="87"/></argument_list></call> <operator pos:line="17" pos:column="88">&lt;&lt;<pos:position pos:line="17" pos:column="96"/></operator> <name pos:line="17" pos:column="91">sslVersion<pos:position pos:line="17" pos:column="101"/></name></expr></argument>)<pos:position pos:line="17" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="103"/></expr_stmt>
        <comment type="line" pos:line="18" pos:column="9">// The hello message size exist in 2nd byte</comment>
        <expr_stmt><expr><name pos:line="19" pos:column="9">helloMsgSize<pos:position pos:line="19" pos:column="21"/></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <name><name pos:line="19" pos:column="24">head<pos:position pos:line="19" pos:column="28"/></name><index pos:line="19" pos:column="28">[<expr><literal type="number" pos:line="19" pos:column="29">1<pos:position pos:line="19" pos:column="30"/></literal></expr>]<pos:position pos:line="19" pos:column="31"/></index></name></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">helloMsgSize<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">+=<pos:position pos:line="20" pos:column="24"/></operator><literal type="number" pos:line="20" pos:column="24">2<pos:position pos:line="20" pos:column="25"/></literal></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">initialized_<pos:position pos:line="21" pos:column="21"/></name> <operator pos:line="21" pos:column="22">=<pos:position pos:line="21" pos:column="23"/></operator> <literal type="boolean" pos:line="21" pos:column="24">true<pos:position pos:line="21" pos:column="28"/></literal></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><name pos:line="22" pos:column="16">helloMsgSize<pos:position pos:line="22" pos:column="28"/></name></expr>;<pos:position pos:line="22" pos:column="29"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="25" pos:column="5">const<pos:position pos:line="25" pos:column="10"/></specifier> <name pos:line="25" pos:column="11">int<pos:position pos:line="25" pos:column="14"/></name></type> <name pos:line="25" pos:column="15">headSize<pos:position pos:line="25" pos:column="23"/></name> <init pos:line="25" pos:column="24">= <expr><call><name><name pos:line="25" pos:column="26">buf<pos:position pos:line="25" pos:column="29"/></name><operator pos:line="25" pos:column="29">.<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">contentSize<pos:position pos:line="25" pos:column="41"/></name></name><argument_list pos:line="25" pos:column="41">()<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">currentPos<pos:position pos:line="26" pos:column="19"/></name> <init pos:line="26" pos:column="20">= <expr><literal type="number" pos:line="26" pos:column="22">0<pos:position pos:line="26" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="26" pos:column="24"/></decl_stmt>
    <do pos:line="27" pos:column="5">do <block pos:line="27" pos:column="8">{
        <decl_stmt><decl><type><specifier pos:line="28" pos:column="9">const<pos:position pos:line="28" pos:column="14"/></specifier> <name pos:line="28" pos:column="15">unsigned<pos:position pos:line="28" pos:column="23"/></name> <name pos:line="28" pos:column="24">char<pos:position pos:line="28" pos:column="28"/></name> <modifier pos:line="28" pos:column="29">*<pos:position pos:line="28" pos:column="30"/></modifier></type><name pos:line="28" pos:column="30">currentRecord<pos:position pos:line="28" pos:column="43"/></name> <init pos:line="28" pos:column="44">= <expr><name pos:line="28" pos:column="46">head<pos:position pos:line="28" pos:column="50"/></name> <operator pos:line="28" pos:column="51">+<pos:position pos:line="28" pos:column="52"/></operator> <name pos:line="28" pos:column="53">currentPos<pos:position pos:line="28" pos:column="63"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="64"/></decl_stmt>
        <comment type="line" pos:line="29" pos:column="9">// Check for Alert Protocol records before hello message. RFC5246 section-7.2</comment>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><name><name pos:line="30" pos:column="13">currentRecord<pos:position pos:line="30" pos:column="26"/></name><index pos:line="30" pos:column="26">[<expr><literal type="number" pos:line="30" pos:column="27">0<pos:position pos:line="30" pos:column="28"/></literal></expr>]<pos:position pos:line="30" pos:column="29"/></index></name> <operator pos:line="30" pos:column="30">==<pos:position pos:line="30" pos:column="32"/></operator> <literal type="number" pos:line="30" pos:column="33">0x15<pos:position pos:line="30" pos:column="37"/></literal></expr>)<pos:position pos:line="30" pos:column="38"/></condition><then pos:line="30" pos:column="38"> <block pos:line="30" pos:column="39">{
            <decl_stmt><decl><type><name pos:line="31" pos:column="13">int<pos:position pos:line="31" pos:column="16"/></name></type> <name pos:line="31" pos:column="17">recordSize<pos:position pos:line="31" pos:column="27"/></name> <init pos:line="31" pos:column="28">= <expr><operator pos:line="31" pos:column="30">(<pos:position pos:line="31" pos:column="31"/></operator><name><name pos:line="31" pos:column="31">currentRecord<pos:position pos:line="31" pos:column="44"/></name><index pos:line="31" pos:column="44">[<expr><literal type="number" pos:line="31" pos:column="45">3<pos:position pos:line="31" pos:column="46"/></literal></expr>]<pos:position pos:line="31" pos:column="47"/></index></name> <operator pos:line="31" pos:column="48">&lt;&lt;<pos:position pos:line="31" pos:column="56"/></operator> <literal type="number" pos:line="31" pos:column="51">8<pos:position pos:line="31" pos:column="52"/></literal><operator pos:line="31" pos:column="52">)<pos:position pos:line="31" pos:column="53"/></operator> <operator pos:line="31" pos:column="54">+<pos:position pos:line="31" pos:column="55"/></operator> <name><name pos:line="31" pos:column="56">currentRecord<pos:position pos:line="31" pos:column="69"/></name><index pos:line="31" pos:column="69">[<expr><literal type="number" pos:line="31" pos:column="70">4<pos:position pos:line="31" pos:column="71"/></literal></expr>]<pos:position pos:line="31" pos:column="72"/></index></name></expr></init></decl>;<pos:position pos:line="31" pos:column="73"/></decl_stmt>
            <comment type="line" pos:line="32" pos:column="13">// We need at least 5 bytes for each record.</comment>
            <if pos:line="33" pos:column="13">if <condition pos:line="33" pos:column="16">(<expr><operator pos:line="33" pos:column="17">(<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">currentPos<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">+<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="31">recordSize<pos:position pos:line="33" pos:column="41"/></name> <operator pos:line="33" pos:column="42">+<pos:position pos:line="33" pos:column="43"/></operator> <literal type="number" pos:line="33" pos:column="44">5<pos:position pos:line="33" pos:column="45"/></literal><operator pos:line="33" pos:column="45">)<pos:position pos:line="33" pos:column="46"/></operator> <operator pos:line="33" pos:column="47">&gt;<pos:position pos:line="33" pos:column="51"/></operator> <name pos:line="33" pos:column="49">headSize<pos:position pos:line="33" pos:column="57"/></name></expr>)<pos:position pos:line="33" pos:column="58"/></condition><then pos:line="33" pos:column="58">
                <block type="pseudo"><return pos:line="34" pos:column="17">return <expr><literal type="number" pos:line="34" pos:column="24">0<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></return></block></then></if> <comment type="line" pos:line="34" pos:column="27">// Not enough bytes;</comment>
            <comment type="line" pos:line="35" pos:column="13">// Check for fatal Alert and abort if found</comment>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name><name pos:line="36" pos:column="17">currentRecord<pos:position pos:line="36" pos:column="30"/></name><index pos:line="36" pos:column="30">[<expr><literal type="number" pos:line="36" pos:column="31">5<pos:position pos:line="36" pos:column="32"/></literal></expr>]<pos:position pos:line="36" pos:column="33"/></index></name> <operator pos:line="36" pos:column="34">&gt;<pos:position pos:line="36" pos:column="38"/></operator> <literal type="number" pos:line="36" pos:column="36">1<pos:position pos:line="36" pos:column="37"/></literal></expr>)<pos:position pos:line="36" pos:column="38"/></condition><then pos:line="36" pos:column="38">
                <block type="pseudo"><return pos:line="37" pos:column="17">return <expr><operator pos:line="37" pos:column="24">-<pos:position pos:line="37" pos:column="25"/></operator><literal type="number" pos:line="37" pos:column="25">1<pos:position pos:line="37" pos:column="26"/></literal></expr>;<pos:position pos:line="37" pos:column="27"/></return></block></then></if>
            <expr_stmt><expr><name pos:line="38" pos:column="13">currentPos<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">+=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">recordSize<pos:position pos:line="38" pos:column="37"/></name> <operator pos:line="38" pos:column="38">+<pos:position pos:line="38" pos:column="39"/></operator> <literal type="number" pos:line="38" pos:column="40">5<pos:position pos:line="38" pos:column="41"/></literal></expr>;<pos:position pos:line="38" pos:column="42"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then> <elseif pos:line="39" pos:column="11">else <if pos:line="39" pos:column="16">if <condition pos:line="39" pos:column="19">(<expr><name><name pos:line="39" pos:column="20">currentRecord<pos:position pos:line="39" pos:column="33"/></name><index pos:line="39" pos:column="33">[<expr><literal type="number" pos:line="39" pos:column="34">0<pos:position pos:line="39" pos:column="35"/></literal></expr>]<pos:position pos:line="39" pos:column="36"/></index></name> <operator pos:line="39" pos:column="37">==<pos:position pos:line="39" pos:column="39"/></operator> <literal type="number" pos:line="39" pos:column="40">0x16<pos:position pos:line="39" pos:column="44"/></literal></expr>)<pos:position pos:line="39" pos:column="45"/></condition><then pos:line="39" pos:column="45"> <block pos:line="39" pos:column="46">{
            <comment type="line" pos:line="40" pos:column="13">// SSLPlaintext/TLSPlaintext record</comment>
            <comment type="line" pos:line="41" pos:column="13">// RFC6101 section 5.2.1, RFC5246 section 6.2.1</comment>
            <expr_stmt><expr><call><name pos:line="42" pos:column="13">debugs<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">(<argument><expr><literal type="number" pos:line="42" pos:column="20">83<pos:position pos:line="42" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="24">7<pos:position pos:line="42" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="27">"SSL version 3 handshake message"<pos:position pos:line="42" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="62"/></expr_stmt>
            <comment type="line" pos:line="43" pos:column="13">// The SSL version exist in the 2nd and 3rd bytes</comment>
            <expr_stmt><expr><name pos:line="44" pos:column="13">sslVersion<pos:position pos:line="44" pos:column="23"/></name> <operator pos:line="44" pos:column="24">=<pos:position pos:line="44" pos:column="25"/></operator> <operator pos:line="44" pos:column="26">(<pos:position pos:line="44" pos:column="27"/></operator><name><name pos:line="44" pos:column="27">currentRecord<pos:position pos:line="44" pos:column="40"/></name><index pos:line="44" pos:column="40">[<expr><literal type="number" pos:line="44" pos:column="41">1<pos:position pos:line="44" pos:column="42"/></literal></expr>]<pos:position pos:line="44" pos:column="43"/></index></name> <operator pos:line="44" pos:column="44">&lt;&lt;<pos:position pos:line="44" pos:column="52"/></operator> <literal type="number" pos:line="44" pos:column="47">8<pos:position pos:line="44" pos:column="48"/></literal><operator pos:line="44" pos:column="48">)<pos:position pos:line="44" pos:column="49"/></operator> <operator pos:line="44" pos:column="50">|<pos:position pos:line="44" pos:column="51"/></operator> <name><name pos:line="44" pos:column="52">currentRecord<pos:position pos:line="44" pos:column="65"/></name><index pos:line="44" pos:column="65">[<expr><literal type="number" pos:line="44" pos:column="66">2<pos:position pos:line="44" pos:column="67"/></literal></expr>]<pos:position pos:line="44" pos:column="68"/></index></name></expr>;<pos:position pos:line="44" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="45" pos:column="13">debugs<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">(<argument><expr><literal type="number" pos:line="45" pos:column="20">83<pos:position pos:line="45" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="24">7<pos:position pos:line="45" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="27">"SSL Version :"<pos:position pos:line="45" pos:column="42"/></literal> <operator pos:line="45" pos:column="43">&lt;&lt;<pos:position pos:line="45" pos:column="51"/></operator> <name><name pos:line="45" pos:column="46">std<pos:position pos:line="45" pos:column="49"/></name><operator pos:line="45" pos:column="49">::<pos:position pos:line="45" pos:column="51"/></operator><name pos:line="45" pos:column="51">hex<pos:position pos:line="45" pos:column="54"/></name></name> <operator pos:line="45" pos:column="55">&lt;&lt;<pos:position pos:line="45" pos:column="63"/></operator> <call><name><name pos:line="45" pos:column="58">std<pos:position pos:line="45" pos:column="61"/></name><operator pos:line="45" pos:column="61">::<pos:position pos:line="45" pos:column="63"/></operator><name pos:line="45" pos:column="63">setw<pos:position pos:line="45" pos:column="67"/></name></name><argument_list pos:line="45" pos:column="67">(<argument><expr><literal type="number" pos:line="45" pos:column="68">8<pos:position pos:line="45" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="70"/></argument_list></call> <operator pos:line="45" pos:column="71">&lt;&lt;<pos:position pos:line="45" pos:column="79"/></operator> <call><name><name pos:line="45" pos:column="74">std<pos:position pos:line="45" pos:column="77"/></name><operator pos:line="45" pos:column="77">::<pos:position pos:line="45" pos:column="79"/></operator><name pos:line="45" pos:column="79">setfill<pos:position pos:line="45" pos:column="86"/></name></name><argument_list pos:line="45" pos:column="86">(<argument><expr><literal type="char" pos:line="45" pos:column="87">'0'<pos:position pos:line="45" pos:column="90"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="91"/></argument_list></call> <operator pos:line="45" pos:column="92">&lt;&lt;<pos:position pos:line="45" pos:column="100"/></operator> <name pos:line="45" pos:column="95">sslVersion<pos:position pos:line="45" pos:column="105"/></name></expr></argument>)<pos:position pos:line="45" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="107"/></expr_stmt>
            <comment type="line" pos:line="46" pos:column="13">// The hello message size exist in 4th and 5th bytes</comment>
            <expr_stmt><expr><name pos:line="47" pos:column="13">helloMsgSize<pos:position pos:line="47" pos:column="25"/></name> <operator pos:line="47" pos:column="26">=<pos:position pos:line="47" pos:column="27"/></operator> <operator pos:line="47" pos:column="28">(<pos:position pos:line="47" pos:column="29"/></operator><name><name pos:line="47" pos:column="29">currentRecord<pos:position pos:line="47" pos:column="42"/></name><index pos:line="47" pos:column="42">[<expr><literal type="number" pos:line="47" pos:column="43">3<pos:position pos:line="47" pos:column="44"/></literal></expr>]<pos:position pos:line="47" pos:column="45"/></index></name> <operator pos:line="47" pos:column="46">&lt;&lt;<pos:position pos:line="47" pos:column="54"/></operator> <literal type="number" pos:line="47" pos:column="49">8<pos:position pos:line="47" pos:column="50"/></literal><operator pos:line="47" pos:column="50">)<pos:position pos:line="47" pos:column="51"/></operator> <operator pos:line="47" pos:column="52">+<pos:position pos:line="47" pos:column="53"/></operator> <name><name pos:line="47" pos:column="54">currentRecord<pos:position pos:line="47" pos:column="67"/></name><index pos:line="47" pos:column="67">[<expr><literal type="number" pos:line="47" pos:column="68">4<pos:position pos:line="47" pos:column="69"/></literal></expr>]<pos:position pos:line="47" pos:column="70"/></index></name></expr>;<pos:position pos:line="47" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="48" pos:column="13">debugs<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><literal type="number" pos:line="48" pos:column="20">83<pos:position pos:line="48" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="24">7<pos:position pos:line="48" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="27">"SSL Header Size: "<pos:position pos:line="48" pos:column="46"/></literal> <operator pos:line="48" pos:column="47">&lt;&lt;<pos:position pos:line="48" pos:column="55"/></operator> <name pos:line="48" pos:column="50">helloMsgSize<pos:position pos:line="48" pos:column="62"/></name></expr></argument>)<pos:position pos:line="48" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><name pos:line="49" pos:column="13">helloMsgSize<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">+=<pos:position pos:line="49" pos:column="28"/></operator><literal type="number" pos:line="49" pos:column="28">5<pos:position pos:line="49" pos:column="29"/></literal></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="50" pos:column="13">helloRecordStart<pos:position pos:line="50" pos:column="29"/></name> <operator pos:line="50" pos:column="30">=<pos:position pos:line="50" pos:column="31"/></operator> <name pos:line="50" pos:column="32">currentPos<pos:position pos:line="50" pos:column="42"/></name></expr>;<pos:position pos:line="50" pos:column="43"/></expr_stmt>

            <comment type="line" pos:line="52" pos:column="13">// Set object as initialized. Even if we did not full parsing yet</comment>
            <comment type="line" pos:line="53" pos:column="13">// The basic features, like the SSL version is set</comment>
            <expr_stmt><expr><name pos:line="54" pos:column="13">initialized_<pos:position pos:line="54" pos:column="25"/></name> <operator pos:line="54" pos:column="26">=<pos:position pos:line="54" pos:column="27"/></operator> <literal type="boolean" pos:line="54" pos:column="28">true<pos:position pos:line="54" pos:column="32"/></literal></expr>;<pos:position pos:line="54" pos:column="33"/></expr_stmt>
            <return pos:line="55" pos:column="13">return <expr><name pos:line="55" pos:column="20">helloMsgSize<pos:position pos:line="55" pos:column="32"/></name></expr>;<pos:position pos:line="55" pos:column="33"/></return>
        }<pos:position pos:line="56" pos:column="10"/></block></then></if></elseif> <else pos:line="56" pos:column="11">else <block pos:line="56" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">debugs<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><literal type="number" pos:line="57" pos:column="20">83<pos:position pos:line="57" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="57" pos:column="24">7<pos:position pos:line="57" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="27">"Not an SSL acceptable handshake message (SSLv2 message?)"<pos:position pos:line="57" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="87"/></expr_stmt>
            <return pos:line="58" pos:column="13">return <expr><operator pos:line="58" pos:column="20">(<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="21">helloMsgSize<pos:position pos:line="58" pos:column="33"/></name> <operator pos:line="58" pos:column="34">=<pos:position pos:line="58" pos:column="35"/></operator> <operator pos:line="58" pos:column="36">-<pos:position pos:line="58" pos:column="37"/></operator><literal type="number" pos:line="58" pos:column="37">1<pos:position pos:line="58" pos:column="38"/></literal><operator pos:line="58" pos:column="38">)<pos:position pos:line="58" pos:column="39"/></operator></expr>;<pos:position pos:line="58" pos:column="40"/></return>
        }<pos:position pos:line="59" pos:column="10"/></block></else></if>
    }<pos:position pos:line="60" pos:column="6"/></block> while <condition pos:line="60" pos:column="13">(<expr><name pos:line="60" pos:column="14">currentPos<pos:position pos:line="60" pos:column="24"/></name> <operator pos:line="60" pos:column="25">+<pos:position pos:line="60" pos:column="26"/></operator> <literal type="number" pos:line="60" pos:column="27">5<pos:position pos:line="60" pos:column="28"/></literal> <operator pos:line="60" pos:column="29">&lt;=<pos:position pos:line="60" pos:column="34"/></operator> <name pos:line="60" pos:column="32">headSize<pos:position pos:line="60" pos:column="40"/></name></expr>)<pos:position pos:line="60" pos:column="41"/></condition>;<pos:position pos:line="60" pos:column="42"/></do>

    <return pos:line="62" pos:column="5">return <expr><literal type="number" pos:line="62" pos:column="12">0<pos:position pos:line="62" pos:column="13"/></literal></expr>;<pos:position pos:line="62" pos:column="14"/></return>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

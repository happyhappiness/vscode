<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4719_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">SBuf<pos:position pos:line="1" pos:column="5"/></name><modifier pos:line="1" pos:column="5">&amp;<pos:position pos:line="1" pos:column="10"/></modifier></type>
<name><name pos:line="2" pos:column="1">SBuf<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Printf<pos:position pos:line="2" pos:column="13"/></name></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">fmt<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><modifier pos:line="2" pos:column="31">...<pos:position pos:line="2" pos:column="34"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// with printf() the fmt or an arg might be a dangerous char*</comment>
    <comment type="line" pos:line="5" pos:column="5">// NP: cant rely on vappendf() Locker because of clear()</comment>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">Locker<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">blobKeeper<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">this<pos:position pos:line="6" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="35">buf<pos:position pos:line="6" pos:column="38"/></name><argument_list pos:line="6" pos:column="38">()<pos:position pos:line="6" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="41"/></argument_list></decl>;<pos:position pos:line="6" pos:column="42"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">va_list<pos:position pos:line="8" pos:column="12"/></name></type> <name pos:line="8" pos:column="13">args<pos:position pos:line="8" pos:column="17"/></name></decl>;<pos:position pos:line="8" pos:column="18"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">va_start<pos:position pos:line="9" pos:column="13"/></name><argument_list pos:line="9" pos:column="13">(<argument><expr><name pos:line="9" pos:column="14">args<pos:position pos:line="9" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="20">fmt<pos:position pos:line="9" pos:column="23"/></name></expr></argument>)<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">clear<pos:position pos:line="10" pos:column="10"/></name><argument_list pos:line="10" pos:column="10">()<pos:position pos:line="10" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">vappendf<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name pos:line="11" pos:column="14">fmt<pos:position pos:line="11" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="19">args<pos:position pos:line="11" pos:column="23"/></name></expr></argument>)<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">va_end<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">args<pos:position pos:line="12" pos:column="16"/></name></expr></argument>)<pos:position pos:line="12" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="18"/></expr_stmt>
    <return pos:line="13" pos:column="5">return <expr><operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">this<pos:position pos:line="13" pos:column="17"/></name></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

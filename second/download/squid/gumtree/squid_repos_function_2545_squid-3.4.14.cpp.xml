<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2545_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">FtpStateData<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">checkAuth<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier> <name pos:line="2" pos:column="31">HttpHeader<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type> <name pos:line="2" pos:column="44">req_hdr<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* default username */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">xstrncpy<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><name pos:line="5" pos:column="14">user<pos:position pos:line="5" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="20">"anonymous"<pos:position pos:line="5" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="33">MAX_URL<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>

<cpp:if pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">if<pos:position pos:line="7" pos:column="4"/></cpp:directive> <expr><name pos:line="7" pos:column="5">HAVE_AUTH_MODULE_BASIC<pos:position pos:line="7" pos:column="27"/></name></expr></cpp:if>
    <comment type="block" pos:line="8" pos:column="5">/* Check HTTP Authorization: headers (better than defaults, but less than URL) */</comment>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">auth<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">( <expr><operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">auth<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <call><name><name pos:line="10" pos:column="18">req_hdr<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">-&gt;<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="27">getAuth<pos:position pos:line="10" pos:column="34"/></name></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">HDR_AUTHORIZATION<pos:position pos:line="10" pos:column="52"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="54">"Basic"<pos:position pos:line="10" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="62"/></argument_list></call><operator pos:line="10" pos:column="62">)<pos:position pos:line="10" pos:column="63"/></operator></expr> )<pos:position pos:line="10" pos:column="65"/></condition><then pos:line="10" pos:column="65"> <block pos:line="10" pos:column="66">{
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">flags<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">authenticated<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">loginParser<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">auth<pos:position pos:line="12" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="27">FTP_LOGIN_NOT_ESCAPED<pos:position pos:line="12" pos:column="48"/></name></expr></argument>)<pos:position pos:line="12" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="14" pos:column="5">/* we fail with authorization-required error later IFF the FTP server requests it */</comment>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="17" pos:column="5">/* Test URL login syntax. Overrides any headers received. */</comment>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">loginParser<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">(<argument><expr><name><name pos:line="18" pos:column="17">request<pos:position pos:line="18" pos:column="24"/></name><operator pos:line="18" pos:column="24">-&gt;<pos:position pos:line="18" pos:column="29"/></operator><name pos:line="18" pos:column="26">login<pos:position pos:line="18" pos:column="31"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">FTP_LOGIN_ESCAPED<pos:position pos:line="18" pos:column="50"/></name></expr></argument>)<pos:position pos:line="18" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="52"/></expr_stmt>

    <comment type="block" pos:line="20" pos:column="5">/* name is missing. thats fatal. */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><name><name pos:line="21" pos:column="10">user<pos:position pos:line="21" pos:column="14"/></name><index pos:line="21" pos:column="14">[<expr><literal type="number" pos:line="21" pos:column="15">0<pos:position pos:line="21" pos:column="16"/></literal></expr>]<pos:position pos:line="21" pos:column="17"/></index></name></expr>)<pos:position pos:line="21" pos:column="18"/></condition><then pos:line="21" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="9">fatal<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><literal type="string" pos:line="22" pos:column="15">"FTP login parsing destroyed username info"<pos:position pos:line="22" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="60"/></expr_stmt></block></then></if>

    <comment type="block" pos:line="24" pos:column="5">/* name + password == success */</comment>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name><name pos:line="25" pos:column="9">password<pos:position pos:line="25" pos:column="17"/></name><index pos:line="25" pos:column="17">[<expr><literal type="number" pos:line="25" pos:column="18">0<pos:position pos:line="25" pos:column="19"/></literal></expr>]<pos:position pos:line="25" pos:column="20"/></index></name></expr>)<pos:position pos:line="25" pos:column="21"/></condition><then pos:line="25" pos:column="21">
        <block type="pseudo"><return pos:line="26" pos:column="9">return <expr><literal type="number" pos:line="26" pos:column="16">1<pos:position pos:line="26" pos:column="17"/></literal></expr>;<pos:position pos:line="26" pos:column="18"/></return></block></then></if>

    <comment type="block" pos:line="28" pos:column="5">/* Setup default FTP password settings */</comment>
    <comment type="block" pos:line="29" pos:column="5">/* this has to be done last so that we can have a no-password case above. */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><name><name pos:line="30" pos:column="10">password<pos:position pos:line="30" pos:column="18"/></name><index pos:line="30" pos:column="18">[<expr><literal type="number" pos:line="30" pos:column="19">0<pos:position pos:line="30" pos:column="20"/></literal></expr>]<pos:position pos:line="30" pos:column="21"/></index></name></expr>)<pos:position pos:line="30" pos:column="22"/></condition><then pos:line="30" pos:column="22"> <block pos:line="30" pos:column="23">{
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><call><name pos:line="31" pos:column="13">strcmp<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><name pos:line="31" pos:column="20">user<pos:position pos:line="31" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="26">"anonymous"<pos:position pos:line="31" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call> <operator pos:line="31" pos:column="39">==<pos:position pos:line="31" pos:column="41"/></operator> <literal type="number" pos:line="31" pos:column="42">0<pos:position pos:line="31" pos:column="43"/></literal> <operator pos:line="31" pos:column="44">&amp;&amp;<pos:position pos:line="31" pos:column="54"/></operator> <operator pos:line="31" pos:column="47">!<pos:position pos:line="31" pos:column="48"/></operator><name><name pos:line="31" pos:column="48">flags<pos:position pos:line="31" pos:column="53"/></name><operator pos:line="31" pos:column="53">.<pos:position pos:line="31" pos:column="54"/></operator><name pos:line="31" pos:column="54">tried_auth_anonymous<pos:position pos:line="31" pos:column="74"/></name></name></expr>)<pos:position pos:line="31" pos:column="75"/></condition><then pos:line="31" pos:column="75"> <block pos:line="31" pos:column="76">{
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">xstrncpy<pos:position pos:line="32" pos:column="21"/></name><argument_list pos:line="32" pos:column="21">(<argument><expr><name pos:line="32" pos:column="22">password<pos:position pos:line="32" pos:column="30"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="32">Config<pos:position pos:line="32" pos:column="38"/></name><operator pos:line="32" pos:column="38">.<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="39">Ftp<pos:position pos:line="32" pos:column="42"/></name><operator pos:line="32" pos:column="42">.<pos:position pos:line="32" pos:column="43"/></operator><name pos:line="32" pos:column="43">anon_user<pos:position pos:line="32" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="54">MAX_URL<pos:position pos:line="32" pos:column="61"/></name></expr></argument>)<pos:position pos:line="32" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">flags<pos:position pos:line="33" pos:column="18"/></name><operator pos:line="33" pos:column="18">.<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="19">tried_auth_anonymous<pos:position pos:line="33" pos:column="39"/></name></name><operator pos:line="33" pos:column="39">=<pos:position pos:line="33" pos:column="40"/></operator><literal type="number" pos:line="33" pos:column="40">1<pos:position pos:line="33" pos:column="41"/></literal></expr>;<pos:position pos:line="33" pos:column="42"/></expr_stmt>
            <return pos:line="34" pos:column="13">return <expr><literal type="number" pos:line="34" pos:column="20">1<pos:position pos:line="34" pos:column="21"/></literal></expr>;<pos:position pos:line="34" pos:column="22"/></return>
        }<pos:position pos:line="35" pos:column="10"/></block></then> <elseif pos:line="35" pos:column="11">else <if pos:line="35" pos:column="16">if <condition pos:line="35" pos:column="19">(<expr><operator pos:line="35" pos:column="20">!<pos:position pos:line="35" pos:column="21"/></operator><name><name pos:line="35" pos:column="21">flags<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">.<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">tried_auth_nopass<pos:position pos:line="35" pos:column="44"/></name></name></expr>)<pos:position pos:line="35" pos:column="45"/></condition><then pos:line="35" pos:column="45"> <block pos:line="35" pos:column="46">{
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">xstrncpy<pos:position pos:line="36" pos:column="21"/></name><argument_list pos:line="36" pos:column="21">(<argument><expr><name pos:line="36" pos:column="22">password<pos:position pos:line="36" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="32">null_string<pos:position pos:line="36" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="45">MAX_URL<pos:position pos:line="36" pos:column="52"/></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="37" pos:column="13">flags<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">.<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">tried_auth_nopass<pos:position pos:line="37" pos:column="36"/></name></name><operator pos:line="37" pos:column="36">=<pos:position pos:line="37" pos:column="37"/></operator><literal type="number" pos:line="37" pos:column="37">1<pos:position pos:line="37" pos:column="38"/></literal></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt>
            <return pos:line="38" pos:column="13">return <expr><literal type="number" pos:line="38" pos:column="20">1<pos:position pos:line="38" pos:column="21"/></literal></expr>;<pos:position pos:line="38" pos:column="22"/></return>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if></elseif></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <return pos:line="42" pos:column="5">return <expr><literal type="number" pos:line="42" pos:column="12">0<pos:position pos:line="42" pos:column="13"/></literal></expr>;<pos:position pos:line="42" pos:column="14"/></return>			<comment type="block" pos:line="42" pos:column="33">/* different username */</comment>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1587_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DelayPools<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Update<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">void<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">unused<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">pools<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">()<pos:position pos:line="4" pos:column="17"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="18"/></condition><then pos:line="4" pos:column="18">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">eventAdd<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><literal type="string" pos:line="7" pos:column="14">"DelayPools::Update"<pos:position pos:line="7" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="36">Update<pos:position pos:line="7" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="44">NULL<pos:position pos:line="7" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="50">1.0<pos:position pos:line="7" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="55">1<pos:position pos:line="7" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="58"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">incr<pos:position pos:line="9" pos:column="13"/></name> <init pos:line="9" pos:column="14">= <expr><name pos:line="9" pos:column="16">squid_curtime<pos:position pos:line="9" pos:column="29"/></name> <operator pos:line="9" pos:column="30">-<pos:position pos:line="9" pos:column="31"/></operator> <name pos:line="9" pos:column="32">LastUpdate<pos:position pos:line="9" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="43"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">incr<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">&lt;<pos:position pos:line="11" pos:column="18"/></operator> <literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr>)<pos:position pos:line="11" pos:column="18"/></condition><then pos:line="11" pos:column="18">
        <block type="pseudo"><return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">LastUpdate<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">squid_curtime<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>

    <decl_stmt><decl><type><name><name><name pos:line="16" pos:column="5">Vector<pos:position pos:line="16" pos:column="11"/></name><argument_list type="generic" pos:line="16" pos:column="11">&lt;<argument><expr><name pos:line="16" pos:column="12">Updateable<pos:position pos:line="16" pos:column="22"/></name> <modifier pos:line="16" pos:column="23">*<pos:position pos:line="16" pos:column="24"/></modifier></expr></argument>&gt;<pos:position pos:line="16" pos:column="28"/></argument_list></name><operator pos:line="16" pos:column="25">::<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">iterator<pos:position pos:line="16" pos:column="35"/></name></name></type> <name pos:line="16" pos:column="36">pos<pos:position pos:line="16" pos:column="39"/></name> <init pos:line="16" pos:column="40">= <expr><call><name><name pos:line="16" pos:column="42">toUpdate<pos:position pos:line="16" pos:column="50"/></name><operator pos:line="16" pos:column="50">.<pos:position pos:line="16" pos:column="51"/></operator><name pos:line="16" pos:column="51">begin<pos:position pos:line="16" pos:column="56"/></name></name><argument_list pos:line="16" pos:column="56">()<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="59"/></decl_stmt>

    <while pos:line="18" pos:column="5">while <condition pos:line="18" pos:column="11">(<expr><name pos:line="18" pos:column="12">pos<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">!=<pos:position pos:line="18" pos:column="18"/></operator> <call><name><name pos:line="18" pos:column="19">toUpdate<pos:position pos:line="18" pos:column="27"/></name><operator pos:line="18" pos:column="27">.<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="28">end<pos:position pos:line="18" pos:column="31"/></name></name><argument_list pos:line="18" pos:column="31">()<pos:position pos:line="18" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="34"/></condition> <block pos:line="18" pos:column="35">{
        <expr_stmt><expr><call><name><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><operator pos:line="19" pos:column="10">*<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">pos<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">)<pos:position pos:line="19" pos:column="15"/></operator><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">update<pos:position pos:line="19" pos:column="23"/></name></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">incr<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="20" pos:column="9">++<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="11">pos<pos:position pos:line="20" pos:column="14"/></name></expr>;<pos:position pos:line="20" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></while>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

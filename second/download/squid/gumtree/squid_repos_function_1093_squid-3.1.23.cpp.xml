<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1093_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_refreshpattern<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">refresh_t<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier><modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type> <name pos:line="2" pos:column="35">head<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">token<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">pattern<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">time_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">min<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="number" pos:line="6" pos:column="18">0<pos:position pos:line="6" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">double<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">pct<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="number" pos:line="7" pos:column="18">0.0<pos:position pos:line="7" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">time_t<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">max<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><literal type="number" pos:line="8" pos:column="18">0<pos:position pos:line="8" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">refresh_ims<pos:position pos:line="9" pos:column="20"/></name> <init pos:line="9" pos:column="21">= <expr><literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="25"/></decl_stmt>
<cpp:if pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">if<pos:position pos:line="10" pos:column="4"/></cpp:directive> <expr><name pos:line="10" pos:column="5">HTTP_VIOLATIONS<pos:position pos:line="10" pos:column="20"/></name></expr></cpp:if>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">override_expire<pos:position pos:line="12" pos:column="24"/></name> <init pos:line="12" pos:column="25">= <expr><literal type="number" pos:line="12" pos:column="27">0<pos:position pos:line="12" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type> <name pos:line="13" pos:column="9">override_lastmod<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><literal type="number" pos:line="13" pos:column="28">0<pos:position pos:line="13" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">int<pos:position pos:line="14" pos:column="8"/></name></type> <name pos:line="14" pos:column="9">reload_into_ims<pos:position pos:line="14" pos:column="24"/></name> <init pos:line="14" pos:column="25">= <expr><literal type="number" pos:line="14" pos:column="27">0<pos:position pos:line="14" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">ignore_reload<pos:position pos:line="15" pos:column="22"/></name> <init pos:line="15" pos:column="23">= <expr><literal type="number" pos:line="15" pos:column="25">0<pos:position pos:line="15" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">ignore_no_cache<pos:position pos:line="16" pos:column="24"/></name> <init pos:line="16" pos:column="25">= <expr><literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">ignore_no_store<pos:position pos:line="17" pos:column="24"/></name> <init pos:line="17" pos:column="25">= <expr><literal type="number" pos:line="17" pos:column="27">0<pos:position pos:line="17" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="18" pos:column="5">int<pos:position pos:line="18" pos:column="8"/></name></type> <name pos:line="18" pos:column="9">ignore_must_revalidate<pos:position pos:line="18" pos:column="31"/></name> <init pos:line="18" pos:column="32">= <expr><literal type="number" pos:line="18" pos:column="34">0<pos:position pos:line="18" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="18" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="19" pos:column="5">int<pos:position pos:line="19" pos:column="8"/></name></type> <name pos:line="19" pos:column="9">ignore_private<pos:position pos:line="19" pos:column="23"/></name> <init pos:line="19" pos:column="24">= <expr><literal type="number" pos:line="19" pos:column="26">0<pos:position pos:line="19" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type> <name pos:line="20" pos:column="9">ignore_auth<pos:position pos:line="20" pos:column="20"/></name> <init pos:line="20" pos:column="21">= <expr><literal type="number" pos:line="20" pos:column="23">0<pos:position pos:line="20" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="25"/></decl_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>

    <decl_stmt><decl><type><name pos:line="23" pos:column="5">int<pos:position pos:line="23" pos:column="8"/></name></type> <name pos:line="23" pos:column="9">i<pos:position pos:line="23" pos:column="10"/></name></decl>;<pos:position pos:line="23" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="24" pos:column="5">refresh_t<pos:position pos:line="24" pos:column="14"/></name> <modifier pos:line="24" pos:column="15">*<pos:position pos:line="24" pos:column="16"/></modifier></type><name pos:line="24" pos:column="16">t<pos:position pos:line="24" pos:column="17"/></name></decl>;<pos:position pos:line="24" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">regex_t<pos:position pos:line="25" pos:column="12"/></name></type> <name pos:line="25" pos:column="13">comp<pos:position pos:line="25" pos:column="17"/></name></decl>;<pos:position pos:line="25" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">int<pos:position pos:line="26" pos:column="8"/></name></type> <name pos:line="26" pos:column="9">errcode<pos:position pos:line="26" pos:column="16"/></name></decl>;<pos:position pos:line="26" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="27" pos:column="5">int<pos:position pos:line="27" pos:column="8"/></name></type> <name pos:line="27" pos:column="9">flags<pos:position pos:line="27" pos:column="14"/></name> <init pos:line="27" pos:column="15">= <expr><name pos:line="27" pos:column="17">REG_EXTENDED<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">|<pos:position pos:line="27" pos:column="31"/></operator> <name pos:line="27" pos:column="32">REG_NOSUB<pos:position pos:line="27" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="42"/></decl_stmt>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">token<pos:position pos:line="29" pos:column="15"/></name> <operator pos:line="29" pos:column="16">=<pos:position pos:line="29" pos:column="17"/></operator> <call><name pos:line="29" pos:column="18">strtok<pos:position pos:line="29" pos:column="24"/></name><argument_list pos:line="29" pos:column="24">(<argument><expr><name pos:line="29" pos:column="25">NULL<pos:position pos:line="29" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="31">w_space<pos:position pos:line="29" pos:column="38"/></name></expr></argument>)<pos:position pos:line="29" pos:column="39"/></argument_list></call><operator pos:line="29" pos:column="39">)<pos:position pos:line="29" pos:column="40"/></operator> <operator pos:line="29" pos:column="41">==<pos:position pos:line="29" pos:column="43"/></operator> <name pos:line="29" pos:column="44">NULL<pos:position pos:line="29" pos:column="48"/></name></expr>)<pos:position pos:line="29" pos:column="49"/></condition><then pos:line="29" pos:column="49"> <block pos:line="29" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">self_destruct<pos:position pos:line="30" pos:column="22"/></name><argument_list pos:line="30" pos:column="22">()<pos:position pos:line="30" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt>
        <return pos:line="31" pos:column="9">return;<pos:position pos:line="31" pos:column="16"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><call><name pos:line="34" pos:column="9">strcmp<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><name pos:line="34" pos:column="16">token<pos:position pos:line="34" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="23">"-i"<pos:position pos:line="34" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="28"/></argument_list></call> <operator pos:line="34" pos:column="29">==<pos:position pos:line="34" pos:column="31"/></operator> <literal type="number" pos:line="34" pos:column="32">0<pos:position pos:line="34" pos:column="33"/></literal></expr>)<pos:position pos:line="34" pos:column="34"/></condition><then pos:line="34" pos:column="34"> <block pos:line="34" pos:column="35">{
        <expr_stmt><expr><name pos:line="35" pos:column="9">flags<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">|=<pos:position pos:line="35" pos:column="17"/></operator> <name pos:line="35" pos:column="18">REG_ICASE<pos:position pos:line="35" pos:column="27"/></name></expr>;<pos:position pos:line="35" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="36" pos:column="9">token<pos:position pos:line="36" pos:column="14"/></name> <operator pos:line="36" pos:column="15">=<pos:position pos:line="36" pos:column="16"/></operator> <call><name pos:line="36" pos:column="17">strtok<pos:position pos:line="36" pos:column="23"/></name><argument_list pos:line="36" pos:column="23">(<argument><expr><name pos:line="36" pos:column="24">NULL<pos:position pos:line="36" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="30">w_space<pos:position pos:line="36" pos:column="37"/></name></expr></argument>)<pos:position pos:line="36" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then> <elseif pos:line="37" pos:column="7">else <if pos:line="37" pos:column="12">if <condition pos:line="37" pos:column="15">(<expr><call><name pos:line="37" pos:column="16">strcmp<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">token<pos:position pos:line="37" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="30">"+i"<pos:position pos:line="37" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="35"/></argument_list></call> <operator pos:line="37" pos:column="36">==<pos:position pos:line="37" pos:column="38"/></operator> <literal type="number" pos:line="37" pos:column="39">0<pos:position pos:line="37" pos:column="40"/></literal></expr>)<pos:position pos:line="37" pos:column="41"/></condition><then pos:line="37" pos:column="41"> <block pos:line="37" pos:column="42">{
        <expr_stmt><expr><name pos:line="38" pos:column="9">flags<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">&amp;=<pos:position pos:line="38" pos:column="21"/></operator> <operator pos:line="38" pos:column="18">~<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">REG_ICASE<pos:position pos:line="38" pos:column="28"/></name></expr>;<pos:position pos:line="38" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name pos:line="39" pos:column="9">token<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">=<pos:position pos:line="39" pos:column="16"/></operator> <call><name pos:line="39" pos:column="17">strtok<pos:position pos:line="39" pos:column="23"/></name><argument_list pos:line="39" pos:column="23">(<argument><expr><name pos:line="39" pos:column="24">NULL<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="30">w_space<pos:position pos:line="39" pos:column="37"/></name></expr></argument>)<pos:position pos:line="39" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name pos:line="42" pos:column="9">token<pos:position pos:line="42" pos:column="14"/></name> <operator pos:line="42" pos:column="15">==<pos:position pos:line="42" pos:column="17"/></operator> <name pos:line="42" pos:column="18">NULL<pos:position pos:line="42" pos:column="22"/></name></expr>)<pos:position pos:line="42" pos:column="23"/></condition><then pos:line="42" pos:column="23"> <block pos:line="42" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">self_destruct<pos:position pos:line="43" pos:column="22"/></name><argument_list pos:line="43" pos:column="22">()<pos:position pos:line="43" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="25"/></expr_stmt>
        <return pos:line="44" pos:column="9">return;<pos:position pos:line="44" pos:column="16"/></return>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="47" pos:column="5">pattern<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <call><name pos:line="47" pos:column="15">xstrdup<pos:position pos:line="47" pos:column="22"/></name><argument_list pos:line="47" pos:column="22">(<argument><expr><name pos:line="47" pos:column="23">token<pos:position pos:line="47" pos:column="28"/></name></expr></argument>)<pos:position pos:line="47" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name pos:line="49" pos:column="5">i<pos:position pos:line="49" pos:column="6"/></name> <operator pos:line="49" pos:column="7">=<pos:position pos:line="49" pos:column="8"/></operator> <call><name pos:line="49" pos:column="9">GetInteger<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">()<pos:position pos:line="49" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="22"/></expr_stmt>		<comment type="block" pos:line="49" pos:column="33">/* token: min */</comment>

    <comment type="block" pos:line="51" pos:column="5">/* catch negative and insanely huge values close to 32-bit wrap */</comment>
    <if pos:line="52" pos:column="5">if <condition pos:line="52" pos:column="8">(<expr><name pos:line="52" pos:column="9">i<pos:position pos:line="52" pos:column="10"/></name> <operator pos:line="52" pos:column="11">&lt;<pos:position pos:line="52" pos:column="15"/></operator> <literal type="number" pos:line="52" pos:column="13">0<pos:position pos:line="52" pos:column="14"/></literal></expr>)<pos:position pos:line="52" pos:column="15"/></condition><then pos:line="52" pos:column="15"> <block pos:line="52" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">debugs<pos:position pos:line="53" pos:column="15"/></name><argument_list pos:line="53" pos:column="15">(<argument><expr><literal type="number" pos:line="53" pos:column="16">3<pos:position pos:line="53" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="53" pos:column="19">DBG_IMPORTANT<pos:position pos:line="53" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="34">"WARNING: refresh_pattern minimum age negative. Cropped back to zero."<pos:position pos:line="53" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="106"/></expr_stmt>
        <expr_stmt><expr><name pos:line="54" pos:column="9">i<pos:position pos:line="54" pos:column="10"/></name> <operator pos:line="54" pos:column="11">=<pos:position pos:line="54" pos:column="12"/></operator> <literal type="number" pos:line="54" pos:column="13">0<pos:position pos:line="54" pos:column="14"/></literal></expr>;<pos:position pos:line="54" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="55" pos:column="6"/></block></then></if>
    <if pos:line="56" pos:column="5">if <condition pos:line="56" pos:column="8">(<expr><name pos:line="56" pos:column="9">i<pos:position pos:line="56" pos:column="10"/></name> <operator pos:line="56" pos:column="11">&gt;<pos:position pos:line="56" pos:column="15"/></operator> <literal type="number" pos:line="56" pos:column="13">60<pos:position pos:line="56" pos:column="15"/></literal><operator pos:line="56" pos:column="15">*<pos:position pos:line="56" pos:column="16"/></operator><literal type="number" pos:line="56" pos:column="16">24<pos:position pos:line="56" pos:column="18"/></literal><operator pos:line="56" pos:column="18">*<pos:position pos:line="56" pos:column="19"/></operator><literal type="number" pos:line="56" pos:column="19">365<pos:position pos:line="56" pos:column="22"/></literal></expr>)<pos:position pos:line="56" pos:column="23"/></condition><then pos:line="56" pos:column="23"> <block pos:line="56" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">debugs<pos:position pos:line="57" pos:column="15"/></name><argument_list pos:line="57" pos:column="15">(<argument><expr><literal type="number" pos:line="57" pos:column="16">3<pos:position pos:line="57" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="19">DBG_IMPORTANT<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="34">"WARNING: refresh_pattern minimum age too high. Cropped back to 1 year."<pos:position pos:line="57" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="57" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="108"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">i<pos:position pos:line="58" pos:column="10"/></name> <operator pos:line="58" pos:column="11">=<pos:position pos:line="58" pos:column="12"/></operator> <literal type="number" pos:line="58" pos:column="13">60<pos:position pos:line="58" pos:column="15"/></literal><operator pos:line="58" pos:column="15">*<pos:position pos:line="58" pos:column="16"/></operator><literal type="number" pos:line="58" pos:column="16">24<pos:position pos:line="58" pos:column="18"/></literal><operator pos:line="58" pos:column="18">*<pos:position pos:line="58" pos:column="19"/></operator><literal type="number" pos:line="58" pos:column="19">365<pos:position pos:line="58" pos:column="22"/></literal></expr>;<pos:position pos:line="58" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="61" pos:column="5">min<pos:position pos:line="61" pos:column="8"/></name> <operator pos:line="61" pos:column="9">=<pos:position pos:line="61" pos:column="10"/></operator> <call pos:line="61" pos:column="11">(<name pos:line="61" pos:column="12">time_t<pos:position pos:line="61" pos:column="18"/></name>) <argument_list pos:line="61" pos:column="20">(<argument><expr><name pos:line="61" pos:column="21">i<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">*<pos:position pos:line="61" pos:column="24"/></operator> <literal type="number" pos:line="61" pos:column="25">60<pos:position pos:line="61" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="29"/></expr_stmt>	<comment type="block" pos:line="61" pos:column="33">/* convert minutes to seconds */</comment>

    <expr_stmt><expr><name pos:line="63" pos:column="5">i<pos:position pos:line="63" pos:column="6"/></name> <operator pos:line="63" pos:column="7">=<pos:position pos:line="63" pos:column="8"/></operator> <call><name pos:line="63" pos:column="9">GetInteger<pos:position pos:line="63" pos:column="19"/></name><argument_list pos:line="63" pos:column="19">()<pos:position pos:line="63" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="22"/></expr_stmt>		<comment type="block" pos:line="63" pos:column="33">/* token: pct */</comment>

    <expr_stmt><expr><name pos:line="65" pos:column="5">pct<pos:position pos:line="65" pos:column="8"/></name> <operator pos:line="65" pos:column="9">=<pos:position pos:line="65" pos:column="10"/></operator> <operator pos:line="65" pos:column="11">(<pos:position pos:line="65" pos:column="12"/></operator><name pos:line="65" pos:column="12">double<pos:position pos:line="65" pos:column="18"/></name><operator pos:line="65" pos:column="18">)<pos:position pos:line="65" pos:column="19"/></operator> <name pos:line="65" pos:column="20">i<pos:position pos:line="65" pos:column="21"/></name> <operator pos:line="65" pos:column="22">/<pos:position pos:line="65" pos:column="23"/></operator> <literal type="number" pos:line="65" pos:column="24">100.0<pos:position pos:line="65" pos:column="29"/></literal></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><name pos:line="67" pos:column="5">i<pos:position pos:line="67" pos:column="6"/></name> <operator pos:line="67" pos:column="7">=<pos:position pos:line="67" pos:column="8"/></operator> <call><name pos:line="67" pos:column="9">GetInteger<pos:position pos:line="67" pos:column="19"/></name><argument_list pos:line="67" pos:column="19">()<pos:position pos:line="67" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="22"/></expr_stmt>		<comment type="block" pos:line="67" pos:column="33">/* token: max */</comment>

    <comment type="block" pos:line="69" pos:column="5">/* catch negative and insanely huge values close to 32-bit wrap */</comment>
    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">i<pos:position pos:line="70" pos:column="10"/></name> <operator pos:line="70" pos:column="11">&lt;<pos:position pos:line="70" pos:column="15"/></operator> <literal type="number" pos:line="70" pos:column="13">0<pos:position pos:line="70" pos:column="14"/></literal></expr>)<pos:position pos:line="70" pos:column="15"/></condition><then pos:line="70" pos:column="15"> <block pos:line="70" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">debugs<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><literal type="number" pos:line="71" pos:column="16">3<pos:position pos:line="71" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="19">DBG_IMPORTANT<pos:position pos:line="71" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="34">"WARNING: refresh_pattern maximum age negative. Cropped back to zero."<pos:position pos:line="71" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="106"/></expr_stmt>
        <expr_stmt><expr><name pos:line="72" pos:column="9">i<pos:position pos:line="72" pos:column="10"/></name> <operator pos:line="72" pos:column="11">=<pos:position pos:line="72" pos:column="12"/></operator> <literal type="number" pos:line="72" pos:column="13">0<pos:position pos:line="72" pos:column="14"/></literal></expr>;<pos:position pos:line="72" pos:column="15"/></expr_stmt>
    }<pos:position pos:line="73" pos:column="6"/></block></then></if>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><name pos:line="74" pos:column="9">i<pos:position pos:line="74" pos:column="10"/></name> <operator pos:line="74" pos:column="11">&gt;<pos:position pos:line="74" pos:column="15"/></operator> <literal type="number" pos:line="74" pos:column="13">60<pos:position pos:line="74" pos:column="15"/></literal><operator pos:line="74" pos:column="15">*<pos:position pos:line="74" pos:column="16"/></operator><literal type="number" pos:line="74" pos:column="16">24<pos:position pos:line="74" pos:column="18"/></literal><operator pos:line="74" pos:column="18">*<pos:position pos:line="74" pos:column="19"/></operator><literal type="number" pos:line="74" pos:column="19">365<pos:position pos:line="74" pos:column="22"/></literal></expr>)<pos:position pos:line="74" pos:column="23"/></condition><then pos:line="74" pos:column="23"> <block pos:line="74" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">debugs<pos:position pos:line="75" pos:column="15"/></name><argument_list pos:line="75" pos:column="15">(<argument><expr><literal type="number" pos:line="75" pos:column="16">3<pos:position pos:line="75" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="19">DBG_IMPORTANT<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="34">"WARNING: refresh_pattern maximum age too high. Cropped back to 1 year."<pos:position pos:line="75" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="108"/></expr_stmt>
        <expr_stmt><expr><name pos:line="76" pos:column="9">i<pos:position pos:line="76" pos:column="10"/></name> <operator pos:line="76" pos:column="11">=<pos:position pos:line="76" pos:column="12"/></operator> <literal type="number" pos:line="76" pos:column="13">60<pos:position pos:line="76" pos:column="15"/></literal><operator pos:line="76" pos:column="15">*<pos:position pos:line="76" pos:column="16"/></operator><literal type="number" pos:line="76" pos:column="16">24<pos:position pos:line="76" pos:column="18"/></literal><operator pos:line="76" pos:column="18">*<pos:position pos:line="76" pos:column="19"/></operator><literal type="number" pos:line="76" pos:column="19">365<pos:position pos:line="76" pos:column="22"/></literal></expr>;<pos:position pos:line="76" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="79" pos:column="5">max<pos:position pos:line="79" pos:column="8"/></name> <operator pos:line="79" pos:column="9">=<pos:position pos:line="79" pos:column="10"/></operator> <call pos:line="79" pos:column="11">(<name pos:line="79" pos:column="12">time_t<pos:position pos:line="79" pos:column="18"/></name>) <argument_list pos:line="79" pos:column="20">(<argument><expr><name pos:line="79" pos:column="21">i<pos:position pos:line="79" pos:column="22"/></name> <operator pos:line="79" pos:column="23">*<pos:position pos:line="79" pos:column="24"/></operator> <literal type="number" pos:line="79" pos:column="25">60<pos:position pos:line="79" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="29"/></expr_stmt>	<comment type="block" pos:line="79" pos:column="33">/* convert minutes to seconds */</comment>

    <comment type="block" pos:line="81" pos:column="5">/* Options */</comment>
    <while pos:line="82" pos:column="5">while <condition pos:line="82" pos:column="11">(<expr><operator pos:line="82" pos:column="12">(<pos:position pos:line="82" pos:column="13"/></operator><name pos:line="82" pos:column="13">token<pos:position pos:line="82" pos:column="18"/></name> <operator pos:line="82" pos:column="19">=<pos:position pos:line="82" pos:column="20"/></operator> <call><name pos:line="82" pos:column="21">strtok<pos:position pos:line="82" pos:column="27"/></name><argument_list pos:line="82" pos:column="27">(<argument><expr><name pos:line="82" pos:column="28">NULL<pos:position pos:line="82" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="34">w_space<pos:position pos:line="82" pos:column="41"/></name></expr></argument>)<pos:position pos:line="82" pos:column="42"/></argument_list></call><operator pos:line="82" pos:column="42">)<pos:position pos:line="82" pos:column="43"/></operator> <operator pos:line="82" pos:column="44">!=<pos:position pos:line="82" pos:column="46"/></operator> <name pos:line="82" pos:column="47">NULL<pos:position pos:line="82" pos:column="51"/></name></expr>)<pos:position pos:line="82" pos:column="52"/></condition> <block pos:line="82" pos:column="53">{
        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><operator pos:line="83" pos:column="13">!<pos:position pos:line="83" pos:column="14"/></operator><call><name pos:line="83" pos:column="14">strcmp<pos:position pos:line="83" pos:column="20"/></name><argument_list pos:line="83" pos:column="20">(<argument><expr><name pos:line="83" pos:column="21">token<pos:position pos:line="83" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="28">"refresh-ims"<pos:position pos:line="83" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="43"/></condition><then pos:line="83" pos:column="43"> <block pos:line="83" pos:column="44">{
            <expr_stmt><expr><name pos:line="84" pos:column="13">refresh_ims<pos:position pos:line="84" pos:column="24"/></name> <operator pos:line="84" pos:column="25">=<pos:position pos:line="84" pos:column="26"/></operator> <literal type="number" pos:line="84" pos:column="27">1<pos:position pos:line="84" pos:column="28"/></literal></expr>;<pos:position pos:line="84" pos:column="29"/></expr_stmt>
<cpp:if pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">if<pos:position pos:line="85" pos:column="4"/></cpp:directive> <expr><name pos:line="85" pos:column="5">HTTP_VIOLATIONS<pos:position pos:line="85" pos:column="20"/></name></expr></cpp:if>

        }<pos:position pos:line="87" pos:column="10"/></block></then> <elseif pos:line="87" pos:column="11">else <if pos:line="87" pos:column="16">if <condition pos:line="87" pos:column="19">(<expr><operator pos:line="87" pos:column="20">!<pos:position pos:line="87" pos:column="21"/></operator><call><name pos:line="87" pos:column="21">strcmp<pos:position pos:line="87" pos:column="27"/></name><argument_list pos:line="87" pos:column="27">(<argument><expr><name pos:line="87" pos:column="28">token<pos:position pos:line="87" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="35">"override-expire"<pos:position pos:line="87" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="54"/></condition><then pos:line="87" pos:column="54">
            <block type="pseudo"><expr_stmt><expr><name pos:line="88" pos:column="13">override_expire<pos:position pos:line="88" pos:column="28"/></name> <operator pos:line="88" pos:column="29">=<pos:position pos:line="88" pos:column="30"/></operator> <literal type="number" pos:line="88" pos:column="31">1<pos:position pos:line="88" pos:column="32"/></literal></expr>;<pos:position pos:line="88" pos:column="33"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="89" pos:column="9">else <if pos:line="89" pos:column="14">if <condition pos:line="89" pos:column="17">(<expr><operator pos:line="89" pos:column="18">!<pos:position pos:line="89" pos:column="19"/></operator><call><name pos:line="89" pos:column="19">strcmp<pos:position pos:line="89" pos:column="25"/></name><argument_list pos:line="89" pos:column="25">(<argument><expr><name pos:line="89" pos:column="26">token<pos:position pos:line="89" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="33">"override-lastmod"<pos:position pos:line="89" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="53"/></condition><then pos:line="89" pos:column="53">
            <block type="pseudo"><expr_stmt><expr><name pos:line="90" pos:column="13">override_lastmod<pos:position pos:line="90" pos:column="29"/></name> <operator pos:line="90" pos:column="30">=<pos:position pos:line="90" pos:column="31"/></operator> <literal type="number" pos:line="90" pos:column="32">1<pos:position pos:line="90" pos:column="33"/></literal></expr>;<pos:position pos:line="90" pos:column="34"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="91" pos:column="9">else <if pos:line="91" pos:column="14">if <condition pos:line="91" pos:column="17">(<expr><operator pos:line="91" pos:column="18">!<pos:position pos:line="91" pos:column="19"/></operator><call><name pos:line="91" pos:column="19">strcmp<pos:position pos:line="91" pos:column="25"/></name><argument_list pos:line="91" pos:column="25">(<argument><expr><name pos:line="91" pos:column="26">token<pos:position pos:line="91" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="91" pos:column="33">"ignore-no-cache"<pos:position pos:line="91" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="91" pos:column="52"/></condition><then pos:line="91" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><name pos:line="92" pos:column="13">ignore_no_cache<pos:position pos:line="92" pos:column="28"/></name> <operator pos:line="92" pos:column="29">=<pos:position pos:line="92" pos:column="30"/></operator> <literal type="number" pos:line="92" pos:column="31">1<pos:position pos:line="92" pos:column="32"/></literal></expr>;<pos:position pos:line="92" pos:column="33"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="93" pos:column="9">else <if pos:line="93" pos:column="14">if <condition pos:line="93" pos:column="17">(<expr><operator pos:line="93" pos:column="18">!<pos:position pos:line="93" pos:column="19"/></operator><call><name pos:line="93" pos:column="19">strcmp<pos:position pos:line="93" pos:column="25"/></name><argument_list pos:line="93" pos:column="25">(<argument><expr><name pos:line="93" pos:column="26">token<pos:position pos:line="93" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="93" pos:column="33">"ignore-no-store"<pos:position pos:line="93" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="93" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="93" pos:column="52"/></condition><then pos:line="93" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><name pos:line="94" pos:column="13">ignore_no_store<pos:position pos:line="94" pos:column="28"/></name> <operator pos:line="94" pos:column="29">=<pos:position pos:line="94" pos:column="30"/></operator> <literal type="number" pos:line="94" pos:column="31">1<pos:position pos:line="94" pos:column="32"/></literal></expr>;<pos:position pos:line="94" pos:column="33"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="95" pos:column="9">else <if pos:line="95" pos:column="14">if <condition pos:line="95" pos:column="17">(<expr><operator pos:line="95" pos:column="18">!<pos:position pos:line="95" pos:column="19"/></operator><call><name pos:line="95" pos:column="19">strcmp<pos:position pos:line="95" pos:column="25"/></name><argument_list pos:line="95" pos:column="25">(<argument><expr><name pos:line="95" pos:column="26">token<pos:position pos:line="95" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="33">"ignore-must-revalidate"<pos:position pos:line="95" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="59"/></condition><then pos:line="95" pos:column="59">
            <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="13">ignore_must_revalidate<pos:position pos:line="96" pos:column="35"/></name> <operator pos:line="96" pos:column="36">=<pos:position pos:line="96" pos:column="37"/></operator> <literal type="number" pos:line="96" pos:column="38">1<pos:position pos:line="96" pos:column="39"/></literal></expr>;<pos:position pos:line="96" pos:column="40"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="97" pos:column="9">else <if pos:line="97" pos:column="14">if <condition pos:line="97" pos:column="17">(<expr><operator pos:line="97" pos:column="18">!<pos:position pos:line="97" pos:column="19"/></operator><call><name pos:line="97" pos:column="19">strcmp<pos:position pos:line="97" pos:column="25"/></name><argument_list pos:line="97" pos:column="25">(<argument><expr><name pos:line="97" pos:column="26">token<pos:position pos:line="97" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="33">"ignore-private"<pos:position pos:line="97" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="97" pos:column="51"/></condition><then pos:line="97" pos:column="51">
            <block type="pseudo"><expr_stmt><expr><name pos:line="98" pos:column="13">ignore_private<pos:position pos:line="98" pos:column="27"/></name> <operator pos:line="98" pos:column="28">=<pos:position pos:line="98" pos:column="29"/></operator> <literal type="number" pos:line="98" pos:column="30">1<pos:position pos:line="98" pos:column="31"/></literal></expr>;<pos:position pos:line="98" pos:column="32"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="99" pos:column="9">else <if pos:line="99" pos:column="14">if <condition pos:line="99" pos:column="17">(<expr><operator pos:line="99" pos:column="18">!<pos:position pos:line="99" pos:column="19"/></operator><call><name pos:line="99" pos:column="19">strcmp<pos:position pos:line="99" pos:column="25"/></name><argument_list pos:line="99" pos:column="25">(<argument><expr><name pos:line="99" pos:column="26">token<pos:position pos:line="99" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="99" pos:column="33">"ignore-auth"<pos:position pos:line="99" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="99" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="99" pos:column="48"/></condition><then pos:line="99" pos:column="48">
            <block type="pseudo"><expr_stmt><expr><name pos:line="100" pos:column="13">ignore_auth<pos:position pos:line="100" pos:column="24"/></name> <operator pos:line="100" pos:column="25">=<pos:position pos:line="100" pos:column="26"/></operator> <literal type="number" pos:line="100" pos:column="27">1<pos:position pos:line="100" pos:column="28"/></literal></expr>;<pos:position pos:line="100" pos:column="29"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="101" pos:column="9">else <if pos:line="101" pos:column="14">if <condition pos:line="101" pos:column="17">(<expr><operator pos:line="101" pos:column="18">!<pos:position pos:line="101" pos:column="19"/></operator><call><name pos:line="101" pos:column="19">strcmp<pos:position pos:line="101" pos:column="25"/></name><argument_list pos:line="101" pos:column="25">(<argument><expr><name pos:line="101" pos:column="26">token<pos:position pos:line="101" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="33">"reload-into-ims"<pos:position pos:line="101" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="101" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="101" pos:column="52"/></condition><then pos:line="101" pos:column="52"> <block pos:line="101" pos:column="53">{
            <expr_stmt><expr><name pos:line="102" pos:column="13">reload_into_ims<pos:position pos:line="102" pos:column="28"/></name> <operator pos:line="102" pos:column="29">=<pos:position pos:line="102" pos:column="30"/></operator> <literal type="number" pos:line="102" pos:column="31">1<pos:position pos:line="102" pos:column="32"/></literal></expr>;<pos:position pos:line="102" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><name pos:line="103" pos:column="13">refresh_nocache_hack<pos:position pos:line="103" pos:column="33"/></name> <operator pos:line="103" pos:column="34">=<pos:position pos:line="103" pos:column="35"/></operator> <literal type="number" pos:line="103" pos:column="36">1<pos:position pos:line="103" pos:column="37"/></literal></expr>;<pos:position pos:line="103" pos:column="38"/></expr_stmt>
            <comment type="block" pos:line="104" pos:column="13">/* tell client_side.c that this is used */</comment>
        }<pos:position pos:line="105" pos:column="10"/></block></then></if></elseif> <elseif pos:line="105" pos:column="11">else <if pos:line="105" pos:column="16">if <condition pos:line="105" pos:column="19">(<expr><operator pos:line="105" pos:column="20">!<pos:position pos:line="105" pos:column="21"/></operator><call><name pos:line="105" pos:column="21">strcmp<pos:position pos:line="105" pos:column="27"/></name><argument_list pos:line="105" pos:column="27">(<argument><expr><name pos:line="105" pos:column="28">token<pos:position pos:line="105" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="35">"ignore-reload"<pos:position pos:line="105" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="105" pos:column="52"/></condition><then pos:line="105" pos:column="52"> <block pos:line="105" pos:column="53">{
            <expr_stmt><expr><name pos:line="106" pos:column="13">ignore_reload<pos:position pos:line="106" pos:column="26"/></name> <operator pos:line="106" pos:column="27">=<pos:position pos:line="106" pos:column="28"/></operator> <literal type="number" pos:line="106" pos:column="29">1<pos:position pos:line="106" pos:column="30"/></literal></expr>;<pos:position pos:line="106" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="107" pos:column="13">refresh_nocache_hack<pos:position pos:line="107" pos:column="33"/></name> <operator pos:line="107" pos:column="34">=<pos:position pos:line="107" pos:column="35"/></operator> <literal type="number" pos:line="107" pos:column="36">1<pos:position pos:line="107" pos:column="37"/></literal></expr>;<pos:position pos:line="107" pos:column="38"/></expr_stmt>
            <comment type="block" pos:line="108" pos:column="13">/* tell client_side.c that this is used */</comment>
<cpp:endif pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">endif<pos:position pos:line="109" pos:column="7"/></cpp:directive></cpp:endif>

        }<pos:position pos:line="111" pos:column="10"/></block></then></if></elseif> <else pos:line="111" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="112" pos:column="13">debugs<pos:position pos:line="112" pos:column="19"/></name><argument_list pos:line="112" pos:column="19">(<argument><expr><literal type="number" pos:line="112" pos:column="20">22<pos:position pos:line="112" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="24">0<pos:position pos:line="112" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="27">"redreshAddToList: Unknown option '"<pos:position pos:line="112" pos:column="63"/></literal> <operator pos:line="112" pos:column="64">&lt;&lt;<pos:position pos:line="112" pos:column="72"/></operator> <name pos:line="112" pos:column="67">pattern<pos:position pos:line="112" pos:column="74"/></name> <operator pos:line="112" pos:column="75">&lt;&lt;<pos:position pos:line="112" pos:column="83"/></operator> <literal type="string" pos:line="112" pos:column="78">"': "<pos:position pos:line="112" pos:column="83"/></literal> <operator pos:line="112" pos:column="84">&lt;&lt;<pos:position pos:line="112" pos:column="92"/></operator> <name pos:line="112" pos:column="87">token<pos:position pos:line="112" pos:column="92"/></name></expr></argument>)<pos:position pos:line="112" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="94"/></expr_stmt></block></else></if>
    }<pos:position pos:line="113" pos:column="6"/></block></while>

    <if pos:line="115" pos:column="5">if <condition pos:line="115" pos:column="8">(<expr><operator pos:line="115" pos:column="9">(<pos:position pos:line="115" pos:column="10"/></operator><name pos:line="115" pos:column="10">errcode<pos:position pos:line="115" pos:column="17"/></name> <operator pos:line="115" pos:column="18">=<pos:position pos:line="115" pos:column="19"/></operator> <call><name pos:line="115" pos:column="20">regcomp<pos:position pos:line="115" pos:column="27"/></name><argument_list pos:line="115" pos:column="27">(<argument><expr><operator pos:line="115" pos:column="28">&amp;<pos:position pos:line="115" pos:column="33"/></operator><name pos:line="115" pos:column="29">comp<pos:position pos:line="115" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="35">pattern<pos:position pos:line="115" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="44">flags<pos:position pos:line="115" pos:column="49"/></name></expr></argument>)<pos:position pos:line="115" pos:column="50"/></argument_list></call><operator pos:line="115" pos:column="50">)<pos:position pos:line="115" pos:column="51"/></operator> <operator pos:line="115" pos:column="52">!=<pos:position pos:line="115" pos:column="54"/></operator> <literal type="number" pos:line="115" pos:column="55">0<pos:position pos:line="115" pos:column="56"/></literal></expr>)<pos:position pos:line="115" pos:column="57"/></condition><then pos:line="115" pos:column="57"> <block pos:line="115" pos:column="58">{
        <decl_stmt><decl><type><name pos:line="116" pos:column="9">char<pos:position pos:line="116" pos:column="13"/></name></type> <name><name pos:line="116" pos:column="14">errbuf<pos:position pos:line="116" pos:column="20"/></name><index pos:line="116" pos:column="20">[<expr><literal type="number" pos:line="116" pos:column="21">256<pos:position pos:line="116" pos:column="24"/></literal></expr>]<pos:position pos:line="116" pos:column="25"/></index></name></decl>;<pos:position pos:line="116" pos:column="26"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="117" pos:column="9">regerror<pos:position pos:line="117" pos:column="17"/></name><argument_list pos:line="117" pos:column="17">(<argument><expr><name pos:line="117" pos:column="18">errcode<pos:position pos:line="117" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="117" pos:column="27">&amp;<pos:position pos:line="117" pos:column="32"/></operator><name pos:line="117" pos:column="28">comp<pos:position pos:line="117" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="117" pos:column="34">errbuf<pos:position pos:line="117" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="117" pos:column="42">sizeof <name pos:line="117" pos:column="49">errbuf<pos:position pos:line="117" pos:column="55"/></name></sizeof></expr></argument>)<pos:position pos:line="117" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="118" pos:column="9">debugs<pos:position pos:line="118" pos:column="15"/></name><argument_list pos:line="118" pos:column="15">(<argument><expr><literal type="number" pos:line="118" pos:column="16">22<pos:position pos:line="118" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="118" pos:column="20">0<pos:position pos:line="118" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="23">""<pos:position pos:line="118" pos:column="25"/></literal> <operator pos:line="118" pos:column="26">&lt;&lt;<pos:position pos:line="118" pos:column="34"/></operator> <name pos:line="118" pos:column="29">cfg_filename<pos:position pos:line="118" pos:column="41"/></name> <operator pos:line="118" pos:column="42">&lt;&lt;<pos:position pos:line="118" pos:column="50"/></operator> <literal type="string" pos:line="118" pos:column="45">" line "<pos:position pos:line="118" pos:column="53"/></literal> <operator pos:line="118" pos:column="54">&lt;&lt;<pos:position pos:line="118" pos:column="62"/></operator> <name pos:line="118" pos:column="57">config_lineno<pos:position pos:line="118" pos:column="70"/></name> <operator pos:line="118" pos:column="71">&lt;&lt;<pos:position pos:line="118" pos:column="79"/></operator> <literal type="string" pos:line="118" pos:column="74">": "<pos:position pos:line="118" pos:column="78"/></literal> <operator pos:line="118" pos:column="79">&lt;&lt;<pos:position pos:line="118" pos:column="87"/></operator> <name pos:line="118" pos:column="82">config_input_line<pos:position pos:line="118" pos:column="99"/></name></expr></argument>)<pos:position pos:line="118" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="101"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="119" pos:column="9">debugs<pos:position pos:line="119" pos:column="15"/></name><argument_list pos:line="119" pos:column="15">(<argument><expr><literal type="number" pos:line="119" pos:column="16">22<pos:position pos:line="119" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="119" pos:column="20">0<pos:position pos:line="119" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="119" pos:column="23">"refreshAddToList: Invalid regular expression '"<pos:position pos:line="119" pos:column="71"/></literal> <operator pos:line="119" pos:column="72">&lt;&lt;<pos:position pos:line="119" pos:column="80"/></operator> <name pos:line="119" pos:column="75">pattern<pos:position pos:line="119" pos:column="82"/></name> <operator pos:line="119" pos:column="83">&lt;&lt;<pos:position pos:line="119" pos:column="91"/></operator> <literal type="string" pos:line="119" pos:column="86">"': "<pos:position pos:line="119" pos:column="91"/></literal> <operator pos:line="119" pos:column="92">&lt;&lt;<pos:position pos:line="119" pos:column="100"/></operator> <name pos:line="119" pos:column="95">errbuf<pos:position pos:line="119" pos:column="101"/></name></expr></argument>)<pos:position pos:line="119" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="103"/></expr_stmt>
        <return pos:line="120" pos:column="9">return;<pos:position pos:line="120" pos:column="16"/></return>
    }<pos:position pos:line="121" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="123" pos:column="5">pct<pos:position pos:line="123" pos:column="8"/></name> <operator pos:line="123" pos:column="9">=<pos:position pos:line="123" pos:column="10"/></operator> <ternary><condition><expr><name pos:line="123" pos:column="11">pct<pos:position pos:line="123" pos:column="14"/></name> <operator pos:line="123" pos:column="15">&lt;<pos:position pos:line="123" pos:column="19"/></operator> <literal type="number" pos:line="123" pos:column="17">0.0<pos:position pos:line="123" pos:column="20"/></literal></expr> ?<pos:position pos:line="123" pos:column="22"/></condition><then pos:line="123" pos:column="22"> <expr><literal type="number" pos:line="123" pos:column="23">0.0<pos:position pos:line="123" pos:column="26"/></literal></expr> <pos:position pos:line="123" pos:column="27"/></then><else pos:line="123" pos:column="27">: <expr><name pos:line="123" pos:column="29">pct<pos:position pos:line="123" pos:column="32"/></name></expr></else></ternary></expr>;<pos:position pos:line="123" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="124" pos:column="5">max<pos:position pos:line="124" pos:column="8"/></name> <operator pos:line="124" pos:column="9">=<pos:position pos:line="124" pos:column="10"/></operator> <ternary><condition><expr><name pos:line="124" pos:column="11">max<pos:position pos:line="124" pos:column="14"/></name> <operator pos:line="124" pos:column="15">&lt;<pos:position pos:line="124" pos:column="19"/></operator> <literal type="number" pos:line="124" pos:column="17">0<pos:position pos:line="124" pos:column="18"/></literal></expr> ?<pos:position pos:line="124" pos:column="20"/></condition><then pos:line="124" pos:column="20"> <expr><literal type="number" pos:line="124" pos:column="21">0<pos:position pos:line="124" pos:column="22"/></literal></expr> <pos:position pos:line="124" pos:column="23"/></then><else pos:line="124" pos:column="23">: <expr><name pos:line="124" pos:column="25">max<pos:position pos:line="124" pos:column="28"/></name></expr></else></ternary></expr>;<pos:position pos:line="124" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name pos:line="125" pos:column="5">t<pos:position pos:line="125" pos:column="6"/></name> <operator pos:line="125" pos:column="7">=<pos:position pos:line="125" pos:column="8"/></operator> <cast type="static" pos:line="125" pos:column="9">static_cast<argument_list type="generic" pos:line="125" pos:column="20">&lt;<argument><expr><name pos:line="125" pos:column="21">refresh_t<pos:position pos:line="125" pos:column="30"/></name> <operator pos:line="125" pos:column="31">*<pos:position pos:line="125" pos:column="32"/></operator></expr></argument>&gt;<pos:position pos:line="125" pos:column="36"/></argument_list><argument_list pos:line="125" pos:column="33">(<argument><expr><call><name pos:line="125" pos:column="34">xcalloc<pos:position pos:line="125" pos:column="41"/></name><argument_list pos:line="125" pos:column="41">(<argument><expr><literal type="number" pos:line="125" pos:column="42">1<pos:position pos:line="125" pos:column="43"/></literal></expr></argument>, <argument><expr><sizeof pos:line="125" pos:column="45">sizeof<argument_list pos:line="125" pos:column="51">(<argument><expr><name pos:line="125" pos:column="52">refresh_t<pos:position pos:line="125" pos:column="61"/></name></expr></argument>)<pos:position pos:line="125" pos:column="62"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="125" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="125" pos:column="64"/></argument_list></cast></expr>;<pos:position pos:line="125" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="126" pos:column="5">t<pos:position pos:line="126" pos:column="6"/></name><operator pos:line="126" pos:column="6">-&gt;<pos:position pos:line="126" pos:column="11"/></operator><name pos:line="126" pos:column="8">pattern<pos:position pos:line="126" pos:column="15"/></name></name> <operator pos:line="126" pos:column="16">=<pos:position pos:line="126" pos:column="17"/></operator> <operator pos:line="126" pos:column="18">(<pos:position pos:line="126" pos:column="19"/></operator><name pos:line="126" pos:column="19">char<pos:position pos:line="126" pos:column="23"/></name> <operator pos:line="126" pos:column="24">*<pos:position pos:line="126" pos:column="25"/></operator><operator pos:line="126" pos:column="25">)<pos:position pos:line="126" pos:column="26"/></operator> <call><name pos:line="126" pos:column="27">xstrdup<pos:position pos:line="126" pos:column="34"/></name><argument_list pos:line="126" pos:column="34">(<argument><expr><name pos:line="126" pos:column="35">pattern<pos:position pos:line="126" pos:column="42"/></name></expr></argument>)<pos:position pos:line="126" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="127" pos:column="5">t<pos:position pos:line="127" pos:column="6"/></name><operator pos:line="127" pos:column="6">-&gt;<pos:position pos:line="127" pos:column="11"/></operator><name pos:line="127" pos:column="8">compiled_pattern<pos:position pos:line="127" pos:column="24"/></name></name> <operator pos:line="127" pos:column="25">=<pos:position pos:line="127" pos:column="26"/></operator> <name pos:line="127" pos:column="27">comp<pos:position pos:line="127" pos:column="31"/></name></expr>;<pos:position pos:line="127" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="128" pos:column="5">t<pos:position pos:line="128" pos:column="6"/></name><operator pos:line="128" pos:column="6">-&gt;<pos:position pos:line="128" pos:column="11"/></operator><name pos:line="128" pos:column="8">min<pos:position pos:line="128" pos:column="11"/></name></name> <operator pos:line="128" pos:column="12">=<pos:position pos:line="128" pos:column="13"/></operator> <name pos:line="128" pos:column="14">min<pos:position pos:line="128" pos:column="17"/></name></expr>;<pos:position pos:line="128" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="129" pos:column="5">t<pos:position pos:line="129" pos:column="6"/></name><operator pos:line="129" pos:column="6">-&gt;<pos:position pos:line="129" pos:column="11"/></operator><name pos:line="129" pos:column="8">pct<pos:position pos:line="129" pos:column="11"/></name></name> <operator pos:line="129" pos:column="12">=<pos:position pos:line="129" pos:column="13"/></operator> <name pos:line="129" pos:column="14">pct<pos:position pos:line="129" pos:column="17"/></name></expr>;<pos:position pos:line="129" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="130" pos:column="5">t<pos:position pos:line="130" pos:column="6"/></name><operator pos:line="130" pos:column="6">-&gt;<pos:position pos:line="130" pos:column="11"/></operator><name pos:line="130" pos:column="8">max<pos:position pos:line="130" pos:column="11"/></name></name> <operator pos:line="130" pos:column="12">=<pos:position pos:line="130" pos:column="13"/></operator> <name pos:line="130" pos:column="14">max<pos:position pos:line="130" pos:column="17"/></name></expr>;<pos:position pos:line="130" pos:column="18"/></expr_stmt>

    <if pos:line="132" pos:column="5">if <condition pos:line="132" pos:column="8">(<expr><name pos:line="132" pos:column="9">flags<pos:position pos:line="132" pos:column="14"/></name> <operator pos:line="132" pos:column="15">&amp;<pos:position pos:line="132" pos:column="20"/></operator> <name pos:line="132" pos:column="17">REG_ICASE<pos:position pos:line="132" pos:column="26"/></name></expr>)<pos:position pos:line="132" pos:column="27"/></condition><then pos:line="132" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="133" pos:column="9">t<pos:position pos:line="133" pos:column="10"/></name><operator pos:line="133" pos:column="10">-&gt;<pos:position pos:line="133" pos:column="15"/></operator><name pos:line="133" pos:column="12">flags<pos:position pos:line="133" pos:column="17"/></name><operator pos:line="133" pos:column="17">.<pos:position pos:line="133" pos:column="18"/></operator><name pos:line="133" pos:column="18">icase<pos:position pos:line="133" pos:column="23"/></name></name> <operator pos:line="133" pos:column="24">=<pos:position pos:line="133" pos:column="25"/></operator> <literal type="number" pos:line="133" pos:column="26">1<pos:position pos:line="133" pos:column="27"/></literal></expr>;<pos:position pos:line="133" pos:column="28"/></expr_stmt></block></then></if>

    <if pos:line="135" pos:column="5">if <condition pos:line="135" pos:column="8">(<expr><name pos:line="135" pos:column="9">refresh_ims<pos:position pos:line="135" pos:column="20"/></name></expr>)<pos:position pos:line="135" pos:column="21"/></condition><then pos:line="135" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="136" pos:column="9">t<pos:position pos:line="136" pos:column="10"/></name><operator pos:line="136" pos:column="10">-&gt;<pos:position pos:line="136" pos:column="15"/></operator><name pos:line="136" pos:column="12">flags<pos:position pos:line="136" pos:column="17"/></name><operator pos:line="136" pos:column="17">.<pos:position pos:line="136" pos:column="18"/></operator><name pos:line="136" pos:column="18">refresh_ims<pos:position pos:line="136" pos:column="29"/></name></name> <operator pos:line="136" pos:column="30">=<pos:position pos:line="136" pos:column="31"/></operator> <literal type="number" pos:line="136" pos:column="32">1<pos:position pos:line="136" pos:column="33"/></literal></expr>;<pos:position pos:line="136" pos:column="34"/></expr_stmt></block></then></if>

<cpp:if pos:line="138" pos:column="1">#<cpp:directive pos:line="138" pos:column="2">if<pos:position pos:line="138" pos:column="4"/></cpp:directive> <expr><name pos:line="138" pos:column="5">HTTP_VIOLATIONS<pos:position pos:line="138" pos:column="20"/></name></expr></cpp:if>

    <if pos:line="140" pos:column="5">if <condition pos:line="140" pos:column="8">(<expr><name pos:line="140" pos:column="9">override_expire<pos:position pos:line="140" pos:column="24"/></name></expr>)<pos:position pos:line="140" pos:column="25"/></condition><then pos:line="140" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="141" pos:column="9">t<pos:position pos:line="141" pos:column="10"/></name><operator pos:line="141" pos:column="10">-&gt;<pos:position pos:line="141" pos:column="15"/></operator><name pos:line="141" pos:column="12">flags<pos:position pos:line="141" pos:column="17"/></name><operator pos:line="141" pos:column="17">.<pos:position pos:line="141" pos:column="18"/></operator><name pos:line="141" pos:column="18">override_expire<pos:position pos:line="141" pos:column="33"/></name></name> <operator pos:line="141" pos:column="34">=<pos:position pos:line="141" pos:column="35"/></operator> <literal type="number" pos:line="141" pos:column="36">1<pos:position pos:line="141" pos:column="37"/></literal></expr>;<pos:position pos:line="141" pos:column="38"/></expr_stmt></block></then></if>

    <if pos:line="143" pos:column="5">if <condition pos:line="143" pos:column="8">(<expr><name pos:line="143" pos:column="9">override_lastmod<pos:position pos:line="143" pos:column="25"/></name></expr>)<pos:position pos:line="143" pos:column="26"/></condition><then pos:line="143" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="144" pos:column="9">t<pos:position pos:line="144" pos:column="10"/></name><operator pos:line="144" pos:column="10">-&gt;<pos:position pos:line="144" pos:column="15"/></operator><name pos:line="144" pos:column="12">flags<pos:position pos:line="144" pos:column="17"/></name><operator pos:line="144" pos:column="17">.<pos:position pos:line="144" pos:column="18"/></operator><name pos:line="144" pos:column="18">override_lastmod<pos:position pos:line="144" pos:column="34"/></name></name> <operator pos:line="144" pos:column="35">=<pos:position pos:line="144" pos:column="36"/></operator> <literal type="number" pos:line="144" pos:column="37">1<pos:position pos:line="144" pos:column="38"/></literal></expr>;<pos:position pos:line="144" pos:column="39"/></expr_stmt></block></then></if>

    <if pos:line="146" pos:column="5">if <condition pos:line="146" pos:column="8">(<expr><name pos:line="146" pos:column="9">reload_into_ims<pos:position pos:line="146" pos:column="24"/></name></expr>)<pos:position pos:line="146" pos:column="25"/></condition><then pos:line="146" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="147" pos:column="9">t<pos:position pos:line="147" pos:column="10"/></name><operator pos:line="147" pos:column="10">-&gt;<pos:position pos:line="147" pos:column="15"/></operator><name pos:line="147" pos:column="12">flags<pos:position pos:line="147" pos:column="17"/></name><operator pos:line="147" pos:column="17">.<pos:position pos:line="147" pos:column="18"/></operator><name pos:line="147" pos:column="18">reload_into_ims<pos:position pos:line="147" pos:column="33"/></name></name> <operator pos:line="147" pos:column="34">=<pos:position pos:line="147" pos:column="35"/></operator> <literal type="number" pos:line="147" pos:column="36">1<pos:position pos:line="147" pos:column="37"/></literal></expr>;<pos:position pos:line="147" pos:column="38"/></expr_stmt></block></then></if>

    <if pos:line="149" pos:column="5">if <condition pos:line="149" pos:column="8">(<expr><name pos:line="149" pos:column="9">ignore_reload<pos:position pos:line="149" pos:column="22"/></name></expr>)<pos:position pos:line="149" pos:column="23"/></condition><then pos:line="149" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="150" pos:column="9">t<pos:position pos:line="150" pos:column="10"/></name><operator pos:line="150" pos:column="10">-&gt;<pos:position pos:line="150" pos:column="15"/></operator><name pos:line="150" pos:column="12">flags<pos:position pos:line="150" pos:column="17"/></name><operator pos:line="150" pos:column="17">.<pos:position pos:line="150" pos:column="18"/></operator><name pos:line="150" pos:column="18">ignore_reload<pos:position pos:line="150" pos:column="31"/></name></name> <operator pos:line="150" pos:column="32">=<pos:position pos:line="150" pos:column="33"/></operator> <literal type="number" pos:line="150" pos:column="34">1<pos:position pos:line="150" pos:column="35"/></literal></expr>;<pos:position pos:line="150" pos:column="36"/></expr_stmt></block></then></if>

    <if pos:line="152" pos:column="5">if <condition pos:line="152" pos:column="8">(<expr><name pos:line="152" pos:column="9">ignore_no_cache<pos:position pos:line="152" pos:column="24"/></name></expr>)<pos:position pos:line="152" pos:column="25"/></condition><then pos:line="152" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="153" pos:column="9">t<pos:position pos:line="153" pos:column="10"/></name><operator pos:line="153" pos:column="10">-&gt;<pos:position pos:line="153" pos:column="15"/></operator><name pos:line="153" pos:column="12">flags<pos:position pos:line="153" pos:column="17"/></name><operator pos:line="153" pos:column="17">.<pos:position pos:line="153" pos:column="18"/></operator><name pos:line="153" pos:column="18">ignore_no_cache<pos:position pos:line="153" pos:column="33"/></name></name> <operator pos:line="153" pos:column="34">=<pos:position pos:line="153" pos:column="35"/></operator> <literal type="number" pos:line="153" pos:column="36">1<pos:position pos:line="153" pos:column="37"/></literal></expr>;<pos:position pos:line="153" pos:column="38"/></expr_stmt></block></then></if>

    <if pos:line="155" pos:column="5">if <condition pos:line="155" pos:column="8">(<expr><name pos:line="155" pos:column="9">ignore_no_store<pos:position pos:line="155" pos:column="24"/></name></expr>)<pos:position pos:line="155" pos:column="25"/></condition><then pos:line="155" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="156" pos:column="9">t<pos:position pos:line="156" pos:column="10"/></name><operator pos:line="156" pos:column="10">-&gt;<pos:position pos:line="156" pos:column="15"/></operator><name pos:line="156" pos:column="12">flags<pos:position pos:line="156" pos:column="17"/></name><operator pos:line="156" pos:column="17">.<pos:position pos:line="156" pos:column="18"/></operator><name pos:line="156" pos:column="18">ignore_no_store<pos:position pos:line="156" pos:column="33"/></name></name> <operator pos:line="156" pos:column="34">=<pos:position pos:line="156" pos:column="35"/></operator> <literal type="number" pos:line="156" pos:column="36">1<pos:position pos:line="156" pos:column="37"/></literal></expr>;<pos:position pos:line="156" pos:column="38"/></expr_stmt></block></then></if>

    <if pos:line="158" pos:column="5">if <condition pos:line="158" pos:column="8">(<expr><name pos:line="158" pos:column="9">ignore_must_revalidate<pos:position pos:line="158" pos:column="31"/></name></expr>)<pos:position pos:line="158" pos:column="32"/></condition><then pos:line="158" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="159" pos:column="9">t<pos:position pos:line="159" pos:column="10"/></name><operator pos:line="159" pos:column="10">-&gt;<pos:position pos:line="159" pos:column="15"/></operator><name pos:line="159" pos:column="12">flags<pos:position pos:line="159" pos:column="17"/></name><operator pos:line="159" pos:column="17">.<pos:position pos:line="159" pos:column="18"/></operator><name pos:line="159" pos:column="18">ignore_must_revalidate<pos:position pos:line="159" pos:column="40"/></name></name> <operator pos:line="159" pos:column="41">=<pos:position pos:line="159" pos:column="42"/></operator> <literal type="number" pos:line="159" pos:column="43">1<pos:position pos:line="159" pos:column="44"/></literal></expr>;<pos:position pos:line="159" pos:column="45"/></expr_stmt></block></then></if>

    <if pos:line="161" pos:column="5">if <condition pos:line="161" pos:column="8">(<expr><name pos:line="161" pos:column="9">ignore_private<pos:position pos:line="161" pos:column="23"/></name></expr>)<pos:position pos:line="161" pos:column="24"/></condition><then pos:line="161" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="162" pos:column="9">t<pos:position pos:line="162" pos:column="10"/></name><operator pos:line="162" pos:column="10">-&gt;<pos:position pos:line="162" pos:column="15"/></operator><name pos:line="162" pos:column="12">flags<pos:position pos:line="162" pos:column="17"/></name><operator pos:line="162" pos:column="17">.<pos:position pos:line="162" pos:column="18"/></operator><name pos:line="162" pos:column="18">ignore_private<pos:position pos:line="162" pos:column="32"/></name></name> <operator pos:line="162" pos:column="33">=<pos:position pos:line="162" pos:column="34"/></operator> <literal type="number" pos:line="162" pos:column="35">1<pos:position pos:line="162" pos:column="36"/></literal></expr>;<pos:position pos:line="162" pos:column="37"/></expr_stmt></block></then></if>

    <if pos:line="164" pos:column="5">if <condition pos:line="164" pos:column="8">(<expr><name pos:line="164" pos:column="9">ignore_auth<pos:position pos:line="164" pos:column="20"/></name></expr>)<pos:position pos:line="164" pos:column="21"/></condition><then pos:line="164" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="165" pos:column="9">t<pos:position pos:line="165" pos:column="10"/></name><operator pos:line="165" pos:column="10">-&gt;<pos:position pos:line="165" pos:column="15"/></operator><name pos:line="165" pos:column="12">flags<pos:position pos:line="165" pos:column="17"/></name><operator pos:line="165" pos:column="17">.<pos:position pos:line="165" pos:column="18"/></operator><name pos:line="165" pos:column="18">ignore_auth<pos:position pos:line="165" pos:column="29"/></name></name> <operator pos:line="165" pos:column="30">=<pos:position pos:line="165" pos:column="31"/></operator> <literal type="number" pos:line="165" pos:column="32">1<pos:position pos:line="165" pos:column="33"/></literal></expr>;<pos:position pos:line="165" pos:column="34"/></expr_stmt></block></then></if>

<cpp:endif pos:line="167" pos:column="1">#<cpp:directive pos:line="167" pos:column="2">endif<pos:position pos:line="167" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="169" pos:column="5">t<pos:position pos:line="169" pos:column="6"/></name><operator pos:line="169" pos:column="6">-&gt;<pos:position pos:line="169" pos:column="11"/></operator><name pos:line="169" pos:column="8">next<pos:position pos:line="169" pos:column="12"/></name></name> <operator pos:line="169" pos:column="13">=<pos:position pos:line="169" pos:column="14"/></operator> <name pos:line="169" pos:column="15">NULL<pos:position pos:line="169" pos:column="19"/></name></expr>;<pos:position pos:line="169" pos:column="20"/></expr_stmt>

    <while pos:line="171" pos:column="5">while <condition pos:line="171" pos:column="11">(<expr><operator pos:line="171" pos:column="12">*<pos:position pos:line="171" pos:column="13"/></operator><name pos:line="171" pos:column="13">head<pos:position pos:line="171" pos:column="17"/></name></expr>)<pos:position pos:line="171" pos:column="18"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="172" pos:column="9">head<pos:position pos:line="172" pos:column="13"/></name> <operator pos:line="172" pos:column="14">=<pos:position pos:line="172" pos:column="15"/></operator> <operator pos:line="172" pos:column="16">&amp;<pos:position pos:line="172" pos:column="21"/></operator><name><operator pos:line="172" pos:column="17">(<pos:position pos:line="172" pos:column="18"/></operator><operator pos:line="172" pos:column="18">*<pos:position pos:line="172" pos:column="19"/></operator><name pos:line="172" pos:column="19">head<pos:position pos:line="172" pos:column="23"/></name><operator pos:line="172" pos:column="23">)<pos:position pos:line="172" pos:column="24"/></operator><operator pos:line="172" pos:column="24">-&gt;<pos:position pos:line="172" pos:column="29"/></operator><name pos:line="172" pos:column="26">next<pos:position pos:line="172" pos:column="30"/></name></name></expr>;<pos:position pos:line="172" pos:column="31"/></expr_stmt></block></while>

    <expr_stmt><expr><operator pos:line="174" pos:column="5">*<pos:position pos:line="174" pos:column="6"/></operator><name pos:line="174" pos:column="6">head<pos:position pos:line="174" pos:column="10"/></name> <operator pos:line="174" pos:column="11">=<pos:position pos:line="174" pos:column="12"/></operator> <name pos:line="174" pos:column="13">t<pos:position pos:line="174" pos:column="14"/></name></expr>;<pos:position pos:line="174" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="176" pos:column="5">safe_free<pos:position pos:line="176" pos:column="14"/></name><argument_list pos:line="176" pos:column="14">(<argument><expr><name pos:line="176" pos:column="15">pattern<pos:position pos:line="176" pos:column="22"/></name></expr></argument>)<pos:position pos:line="176" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="176" pos:column="24"/></expr_stmt>
}<pos:position pos:line="177" pos:column="2"/></block></function></unit>

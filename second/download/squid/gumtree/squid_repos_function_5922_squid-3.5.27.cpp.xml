<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5922_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CharacterSet<pos:position pos:line="1" pos:column="13"/></name></type>
<name><name pos:line="2" pos:column="1">CharacterSet<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">complement<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><specifier pos:line="2" pos:column="26">const<pos:position pos:line="2" pos:column="31"/></specifier> <name pos:line="2" pos:column="32">char<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="38">label<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CharacterSet<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">result<pos:position pos:line="4" pos:column="24"/></name><argument_list pos:line="4" pos:column="24">(<argument><expr><operator pos:line="4" pos:column="25">(<pos:position pos:line="4" pos:column="26"/></operator><ternary><condition><expr><name pos:line="4" pos:column="26">label<pos:position pos:line="4" pos:column="31"/></name></expr> ?<pos:position pos:line="4" pos:column="33"/></condition><then pos:line="4" pos:column="33"> <expr><name pos:line="4" pos:column="34">label<pos:position pos:line="4" pos:column="39"/></name></expr> <pos:position pos:line="4" pos:column="40"/></then><else pos:line="4" pos:column="40">: <expr><literal type="string" pos:line="4" pos:column="42">"complement_of_some_other_set"<pos:position pos:line="4" pos:column="72"/></literal></expr></else></ternary><operator pos:line="4" pos:column="72">)<pos:position pos:line="4" pos:column="73"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="75">""<pos:position pos:line="4" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="78"/></argument_list></decl>;<pos:position pos:line="4" pos:column="79"/></decl_stmt>
    <comment type="line" pos:line="5" pos:column="5">// negate each of our elements and add them to the result storage</comment>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">std<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">::<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">transform<pos:position pos:line="6" pos:column="19"/></name></name><argument_list pos:line="6" pos:column="19">(<argument><expr><call><name><name pos:line="6" pos:column="20">chars_<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">.<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">begin<pos:position pos:line="6" pos:column="32"/></name></name><argument_list pos:line="6" pos:column="32">()<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="6" pos:column="36">chars_<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">.<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">end<pos:position pos:line="6" pos:column="46"/></name></name><argument_list pos:line="6" pos:column="46">()<pos:position pos:line="6" pos:column="48"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="6" pos:column="50">result<pos:position pos:line="6" pos:column="56"/></name><operator pos:line="6" pos:column="56">.<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="57">chars_<pos:position pos:line="6" pos:column="63"/></name><operator pos:line="6" pos:column="63">.<pos:position pos:line="6" pos:column="64"/></operator><name pos:line="6" pos:column="64">begin<pos:position pos:line="6" pos:column="69"/></name></name><argument_list pos:line="6" pos:column="69">()<pos:position pos:line="6" pos:column="71"/></argument_list></call></expr></argument>,
                   <argument><expr><call><name><name pos:line="7" pos:column="20">std<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">::<pos:position pos:line="7" pos:column="25"/></operator><name><name pos:line="7" pos:column="25">logical_not<pos:position pos:line="7" pos:column="36"/></name><argument_list type="generic" pos:line="7" pos:column="36">&lt;<argument><expr><name><name pos:line="7" pos:column="37">Storage<pos:position pos:line="7" pos:column="44"/></name><operator pos:line="7" pos:column="44">::<pos:position pos:line="7" pos:column="46"/></operator><name pos:line="7" pos:column="46">value_type<pos:position pos:line="7" pos:column="56"/></name></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="60"/></argument_list></name></name><argument_list pos:line="7" pos:column="57">()<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><name pos:line="8" pos:column="12">result<pos:position pos:line="8" pos:column="18"/></name></expr>;<pos:position pos:line="8" pos:column="19"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

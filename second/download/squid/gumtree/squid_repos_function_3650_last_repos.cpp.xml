<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3650_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ssl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">IcapPeerConnector<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">initialize<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><name><name pos:line="2" pos:column="36">Security<pos:position pos:line="2" pos:column="44"/></name><operator pos:line="2" pos:column="44">::<pos:position pos:line="2" pos:column="46"/></operator><name pos:line="2" pos:column="46">SessionPointer<pos:position pos:line="2" pos:column="60"/></name></name> <modifier pos:line="2" pos:column="61">&amp;<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="62">serverSession<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name><name pos:line="4" pos:column="10">Security<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">PeerConnector<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">::<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">initialize<pos:position pos:line="4" pos:column="45"/></name></name><argument_list pos:line="4" pos:column="45">(<argument><expr><name pos:line="4" pos:column="46">serverSession<pos:position pos:line="4" pos:column="59"/></name></expr></argument>)<pos:position pos:line="4" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="61"/></condition><then pos:line="4" pos:column="61">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><operator pos:line="7" pos:column="12">!<pos:position pos:line="7" pos:column="13"/></operator><call><name><name pos:line="7" pos:column="13">icapService<pos:position pos:line="7" pos:column="24"/></name><operator pos:line="7" pos:column="24">-&gt;<pos:position pos:line="7" pos:column="29"/></operator><name pos:line="7" pos:column="26">cfg<pos:position pos:line="7" pos:column="29"/></name></name><argument_list pos:line="7" pos:column="29">()<pos:position pos:line="7" pos:column="31"/></argument_list></call><operator pos:line="7" pos:column="31">.<pos:position pos:line="7" pos:column="32"/></operator><call><name><name pos:line="7" pos:column="32">secure<pos:position pos:line="7" pos:column="38"/></name><operator pos:line="7" pos:column="38">.<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="39">sslDomain<pos:position pos:line="7" pos:column="48"/></name><operator pos:line="7" pos:column="48">.<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="49">isEmpty<pos:position pos:line="7" pos:column="56"/></name></name><argument_list pos:line="7" pos:column="56">()<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="60"/></expr_stmt>
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">USE_OPENSSL<pos:position pos:line="8" pos:column="16"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">SBuf<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">host<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><operator pos:line="9" pos:column="18">new<pos:position pos:line="9" pos:column="21"/></operator> <call><name pos:line="9" pos:column="22">SBuf<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><call><name><name pos:line="9" pos:column="27">icapService<pos:position pos:line="9" pos:column="38"/></name><operator pos:line="9" pos:column="38">-&gt;<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="40">cfg<pos:position pos:line="9" pos:column="43"/></name></name><argument_list pos:line="9" pos:column="43">()<pos:position pos:line="9" pos:column="45"/></argument_list></call><operator pos:line="9" pos:column="45">.<pos:position pos:line="9" pos:column="46"/></operator><name><name pos:line="9" pos:column="46">secure<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">.<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="53">sslDomain<pos:position pos:line="9" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="64"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">SSL_set_ex_data<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><call><name><name pos:line="10" pos:column="21">serverSession<pos:position pos:line="10" pos:column="34"/></name><operator pos:line="10" pos:column="34">.<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">get<pos:position pos:line="10" pos:column="38"/></name></name><argument_list pos:line="10" pos:column="38">()<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="10" pos:column="42">ssl_ex_index_server<pos:position pos:line="10" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="63">host<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="69"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">ACLFilledChecklist<pos:position pos:line="12" pos:column="23"/></name> <modifier pos:line="12" pos:column="24">*<pos:position pos:line="12" pos:column="25"/></modifier></type><name pos:line="12" pos:column="25">check<pos:position pos:line="12" pos:column="30"/></name> <init pos:line="12" pos:column="31">= <expr><cast type="static" pos:line="12" pos:column="33">static_cast<argument_list type="generic" pos:line="12" pos:column="44">&lt;<argument><expr><name pos:line="12" pos:column="45">ACLFilledChecklist<pos:position pos:line="12" pos:column="63"/></name> <operator pos:line="12" pos:column="64">*<pos:position pos:line="12" pos:column="65"/></operator></expr></argument>&gt;<pos:position pos:line="12" pos:column="69"/></argument_list><argument_list pos:line="12" pos:column="66">(<argument><expr><call><name pos:line="12" pos:column="67">SSL_get_ex_data<pos:position pos:line="12" pos:column="82"/></name><argument_list pos:line="12" pos:column="82">(<argument><expr><call><name><name pos:line="12" pos:column="83">serverSession<pos:position pos:line="12" pos:column="96"/></name><operator pos:line="12" pos:column="96">.<pos:position pos:line="12" pos:column="97"/></operator><name pos:line="12" pos:column="97">get<pos:position pos:line="12" pos:column="100"/></name></name><argument_list pos:line="12" pos:column="100">()<pos:position pos:line="12" pos:column="102"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="104">ssl_ex_index_cert_error_check<pos:position pos:line="12" pos:column="133"/></name></expr></argument>)<pos:position pos:line="12" pos:column="134"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="135"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="12" pos:column="136"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">check<pos:position pos:line="13" pos:column="14"/></name></expr>)<pos:position pos:line="13" pos:column="15"/></condition><then pos:line="13" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="9">check<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">-&gt;<pos:position pos:line="14" pos:column="19"/></operator><name pos:line="14" pos:column="16">dst_peer_name<pos:position pos:line="14" pos:column="29"/></name></name> <operator pos:line="14" pos:column="30">=<pos:position pos:line="14" pos:column="31"/></operator> <operator pos:line="14" pos:column="32">*<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">host<pos:position pos:line="14" pos:column="37"/></name></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">Security<pos:position pos:line="17" pos:column="13"/></name><operator pos:line="17" pos:column="13">::<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">SetSessionResumeData<pos:position pos:line="17" pos:column="35"/></name></name><argument_list pos:line="17" pos:column="35">(<argument><expr><name pos:line="17" pos:column="36">serverSession<pos:position pos:line="17" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="51">icapService<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">-&gt;<pos:position pos:line="17" pos:column="67"/></operator><name pos:line="17" pos:column="64">sslSession<pos:position pos:line="17" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="76"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><literal type="boolean" pos:line="18" pos:column="12">true<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_776_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">httpReplyInitModule<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">void<pos:position pos:line="2" pos:column="25"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">HTTP_STATUS_NONE<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">==<pos:position pos:line="4" pos:column="31"/></operator> <literal type="number" pos:line="4" pos:column="32">0<pos:position pos:line="4" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="35"/></expr_stmt> <comment type="line" pos:line="4" pos:column="36">// HttpReply::parse() interface assumes that</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">httpHeaderMaskInit<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><operator pos:line="5" pos:column="24">&amp;<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="25">Denied304HeadersMask<pos:position pos:line="5" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="47">0<pos:position pos:line="5" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">httpHeaderCalcMask<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><operator pos:line="6" pos:column="24">&amp;<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="25">Denied304HeadersMask<pos:position pos:line="6" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="47">Denied304HeadersArr<pos:position pos:line="6" pos:column="66"/></name></expr></argument>, <argument><expr><call><name pos:line="6" pos:column="68">countof<pos:position pos:line="6" pos:column="75"/></name><argument_list pos:line="6" pos:column="75">(<argument><expr><name pos:line="6" pos:column="76">Denied304HeadersArr<pos:position pos:line="6" pos:column="95"/></name></expr></argument>)<pos:position pos:line="6" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="98"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

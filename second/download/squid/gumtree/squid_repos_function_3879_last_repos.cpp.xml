<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3879_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">Helper<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">sslSubmit<pos:position pos:line="1" pos:column="28"/></name></name><parameter_list pos:line="1" pos:column="28">(<parameter><decl><type><name pos:line="1" pos:column="29">CrtdMessage<pos:position pos:line="1" pos:column="40"/></name> <specifier pos:line="1" pos:column="41">const<pos:position pos:line="1" pos:column="46"/></specifier> <modifier pos:line="1" pos:column="47">&amp;<pos:position pos:line="1" pos:column="52"/></modifier></type> <name pos:line="1" pos:column="49">message<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="58">HLPCB<pos:position pos:line="1" pos:column="63"/></name> <modifier pos:line="1" pos:column="64">*<pos:position pos:line="1" pos:column="65"/></modifier></type> <name pos:line="1" pos:column="66">callback<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="76">void<pos:position pos:line="1" pos:column="80"/></name> <modifier pos:line="1" pos:column="81">*<pos:position pos:line="1" pos:column="82"/></modifier></type> <name pos:line="1" pos:column="83">data<pos:position pos:line="1" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="88"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">assert<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><name pos:line="3" pos:column="12">ssl_crtd<pos:position pos:line="3" pos:column="20"/></name></expr></argument>)<pos:position pos:line="3" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="22"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="5" pos:column="5">SBuf<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">rawMessage<pos:position pos:line="5" pos:column="20"/></name><argument_list pos:line="5" pos:column="20">(<argument><expr><call><name><name pos:line="5" pos:column="21">message<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">compose<pos:position pos:line="5" pos:column="36"/></name></name><argument_list pos:line="5" pos:column="36">()<pos:position pos:line="5" pos:column="38"/></argument_list></call><operator pos:line="5" pos:column="38">.<pos:position pos:line="5" pos:column="39"/></operator><call><name pos:line="5" pos:column="39">c_str<pos:position pos:line="5" pos:column="44"/></name><argument_list pos:line="5" pos:column="44">()<pos:position pos:line="5" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt> <comment type="line" pos:line="5" pos:column="49">// XXX: helpers cannot use SBuf</comment>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">rawMessage<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">.<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">append<pos:position pos:line="6" pos:column="22"/></name></name><argument_list pos:line="6" pos:column="22">(<argument><expr><literal type="string" pos:line="6" pos:column="23">"\n"<pos:position pos:line="6" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="29">1<pos:position pos:line="6" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <specifier pos:line="8" pos:column="11">auto<pos:position pos:line="8" pos:column="15"/></specifier></type> <name pos:line="8" pos:column="16">pending<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><call><name><name pos:line="8" pos:column="26">TheGeneratorRequests<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">.<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="47">find<pos:position pos:line="8" pos:column="51"/></name></name><argument_list pos:line="8" pos:column="51">(<argument><expr><name pos:line="8" pos:column="52">rawMessage<pos:position pos:line="8" pos:column="62"/></name></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="64"/></decl_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">pending<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">!=<pos:position pos:line="9" pos:column="19"/></operator> <call><name><name pos:line="9" pos:column="20">TheGeneratorRequests<pos:position pos:line="9" pos:column="40"/></name><operator pos:line="9" pos:column="40">.<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="41">end<pos:position pos:line="9" pos:column="44"/></name></name><argument_list pos:line="9" pos:column="44">()<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="47"/></condition><then pos:line="9" pos:column="47"> <block pos:line="9" pos:column="48">{
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">pending<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">second<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">emplace<pos:position pos:line="10" pos:column="33"/></name></name><argument_list pos:line="10" pos:column="33">(<argument><expr><name pos:line="10" pos:column="34">callback<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">data<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">83<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">5<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"collapsed request from "<pos:position pos:line="11" pos:column="48"/></literal> <operator pos:line="11" pos:column="49">&lt;&lt;<pos:position pos:line="11" pos:column="57"/></operator> <name pos:line="11" pos:column="52">data<pos:position pos:line="11" pos:column="56"/></name> <operator pos:line="11" pos:column="57">&lt;&lt;<pos:position pos:line="11" pos:column="65"/></operator> <literal type="string" pos:line="11" pos:column="60">" onto "<pos:position pos:line="11" pos:column="68"/></literal> <operator pos:line="11" pos:column="69">&lt;&lt;<pos:position pos:line="11" pos:column="77"/></operator> <operator pos:line="11" pos:column="72">*<pos:position pos:line="11" pos:column="73"/></operator><name><name pos:line="11" pos:column="73">pending<pos:position pos:line="11" pos:column="80"/></name><operator pos:line="11" pos:column="80">-&gt;<pos:position pos:line="11" pos:column="85"/></operator><name pos:line="11" pos:column="82">second<pos:position pos:line="11" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="90"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="15" pos:column="5">GeneratorRequest<pos:position pos:line="15" pos:column="21"/></name> <modifier pos:line="15" pos:column="22">*<pos:position pos:line="15" pos:column="23"/></modifier></type><name pos:line="15" pos:column="23">request<pos:position pos:line="15" pos:column="30"/></name> <init pos:line="15" pos:column="31">= <expr><operator pos:line="15" pos:column="33">new<pos:position pos:line="15" pos:column="36"/></operator> <name pos:line="15" pos:column="37">GeneratorRequest<pos:position pos:line="15" pos:column="53"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="54"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">request<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">-&gt;<pos:position pos:line="16" pos:column="17"/></operator><name pos:line="16" pos:column="14">query<pos:position pos:line="16" pos:column="19"/></name></name> <operator pos:line="16" pos:column="20">=<pos:position pos:line="16" pos:column="21"/></operator> <name pos:line="16" pos:column="22">rawMessage<pos:position pos:line="16" pos:column="32"/></name></expr>;<pos:position pos:line="16" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">request<pos:position pos:line="17" pos:column="12"/></name><operator pos:line="17" pos:column="12">-&gt;<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="14">emplace<pos:position pos:line="17" pos:column="21"/></name></name><argument_list pos:line="17" pos:column="21">(<argument><expr><name pos:line="17" pos:column="22">callback<pos:position pos:line="17" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="32">data<pos:position pos:line="17" pos:column="36"/></name></expr></argument>)<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">TheGeneratorRequests<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">emplace<pos:position pos:line="18" pos:column="33"/></name></name><argument_list pos:line="18" pos:column="33">(<argument><expr><name><name pos:line="18" pos:column="34">request<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">-&gt;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="43">query<pos:position pos:line="18" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="50">request<pos:position pos:line="18" pos:column="57"/></name></expr></argument>)<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">83<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="16">5<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="19">"request from "<pos:position pos:line="19" pos:column="34"/></literal> <operator pos:line="19" pos:column="35">&lt;&lt;<pos:position pos:line="19" pos:column="43"/></operator> <name pos:line="19" pos:column="38">data<pos:position pos:line="19" pos:column="42"/></name> <operator pos:line="19" pos:column="43">&lt;&lt;<pos:position pos:line="19" pos:column="51"/></operator> <literal type="string" pos:line="19" pos:column="46">" as "<pos:position pos:line="19" pos:column="52"/></literal> <operator pos:line="19" pos:column="53">&lt;&lt;<pos:position pos:line="19" pos:column="61"/></operator> <operator pos:line="19" pos:column="56">*<pos:position pos:line="19" pos:column="57"/></operator><name pos:line="19" pos:column="57">request<pos:position pos:line="19" pos:column="64"/></name></expr></argument>)<pos:position pos:line="19" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="66"/></expr_stmt>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name><name pos:line="20" pos:column="9">ssl_crtd<pos:position pos:line="20" pos:column="17"/></name><operator pos:line="20" pos:column="17">-&gt;<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="19">trySubmit<pos:position pos:line="20" pos:column="28"/></name></name><argument_list pos:line="20" pos:column="28">(<argument><expr><call><name><name pos:line="20" pos:column="29">request<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">-&gt;<pos:position pos:line="20" pos:column="41"/></operator><name pos:line="20" pos:column="38">query<pos:position pos:line="20" pos:column="43"/></name><operator pos:line="20" pos:column="43">.<pos:position pos:line="20" pos:column="44"/></operator><name pos:line="20" pos:column="44">c_str<pos:position pos:line="20" pos:column="49"/></name></name><argument_list pos:line="20" pos:column="49">()<pos:position pos:line="20" pos:column="51"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="20" pos:column="53">HandleGeneratorReply<pos:position pos:line="20" pos:column="73"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="75">request<pos:position pos:line="20" pos:column="82"/></name></expr></argument>)<pos:position pos:line="20" pos:column="83"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="84"/></condition><then pos:line="20" pos:column="84">
        <block type="pseudo"><return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name><operator pos:line="23" pos:column="5">::<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">Helper<pos:position pos:line="23" pos:column="13"/></name><operator pos:line="23" pos:column="13">::<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">Reply<pos:position pos:line="23" pos:column="20"/></name></name></type> <name pos:line="23" pos:column="21">failReply<pos:position pos:line="23" pos:column="30"/></name><argument_list pos:line="23" pos:column="30">(<argument><expr><name><operator pos:line="23" pos:column="31">::<pos:position pos:line="23" pos:column="33"/></operator><name pos:line="23" pos:column="33">Helper<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">::<pos:position pos:line="23" pos:column="41"/></operator><name pos:line="23" pos:column="41">BrokenHelper<pos:position pos:line="23" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="54"/></argument_list></decl>;<pos:position pos:line="23" pos:column="55"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">failReply<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">.<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">notes<pos:position pos:line="24" pos:column="20"/></name><operator pos:line="24" pos:column="20">.<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">add<pos:position pos:line="24" pos:column="24"/></name></name><argument_list pos:line="24" pos:column="24">(<argument><expr><literal type="string" pos:line="24" pos:column="25">"message"<pos:position pos:line="24" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="36">"error 45 Temporary network problem, please retry later"<pos:position pos:line="24" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="94"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">HandleGeneratorReply<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">request<pos:position pos:line="25" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="35">failReply<pos:position pos:line="25" pos:column="44"/></name></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

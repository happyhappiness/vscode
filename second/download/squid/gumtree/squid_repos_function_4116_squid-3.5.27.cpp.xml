<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4116_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">addLastRequestChunk<pos:position pos:line="1" pos:column="52"/></name></name><parameter_list pos:line="1" pos:column="52">(<parameter><decl><type><name pos:line="1" pos:column="53">MemBuf<pos:position pos:line="1" pos:column="59"/></name> <modifier pos:line="1" pos:column="60">&amp;<pos:position pos:line="1" pos:column="65"/></modifier></type><name pos:line="1" pos:column="61">buf<pos:position pos:line="1" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="65"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">bool<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">ieof<pos:position pos:line="3" pos:column="20"/></name> <init pos:line="3" pos:column="21">= <expr><name><name pos:line="3" pos:column="23">state<pos:position pos:line="3" pos:column="28"/></name><operator pos:line="3" pos:column="28">.<pos:position pos:line="3" pos:column="29"/></operator><name pos:line="3" pos:column="29">writing<pos:position pos:line="3" pos:column="36"/></name></name> <operator pos:line="3" pos:column="37">==<pos:position pos:line="3" pos:column="39"/></operator> <name><name pos:line="3" pos:column="40">State<pos:position pos:line="3" pos:column="45"/></name><operator pos:line="3" pos:column="45">::<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="47">writingPreview<pos:position pos:line="3" pos:column="61"/></name></name> <operator pos:line="3" pos:column="62">&amp;&amp;<pos:position pos:line="3" pos:column="72"/></operator> <call><name><name pos:line="3" pos:column="65">preview<pos:position pos:line="3" pos:column="72"/></name><operator pos:line="3" pos:column="72">.<pos:position pos:line="3" pos:column="73"/></operator><name pos:line="3" pos:column="73">ieof<pos:position pos:line="3" pos:column="77"/></name></name><argument_list pos:line="3" pos:column="77">()<pos:position pos:line="3" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="80"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">openChunk<pos:position pos:line="4" pos:column="14"/></name><argument_list pos:line="4" pos:column="14">(<argument><expr><name pos:line="4" pos:column="15">buf<pos:position pos:line="4" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">ieof<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">closeChunk<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><name pos:line="5" pos:column="16">buf<pos:position pos:line="5" pos:column="19"/></name></expr></argument>)<pos:position pos:line="5" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="21"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

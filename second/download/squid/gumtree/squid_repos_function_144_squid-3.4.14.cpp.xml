<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_144_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name><name pos:line="2" pos:column="22">argv<pos:position pos:line="2" pos:column="26"/></name><index pos:line="2" pos:column="26">[]<pos:position pos:line="2" pos:column="28"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <block pos:line="4" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="5" pos:column="9">int<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">i<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="6" pos:column="9">intnode<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">I<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
        <comment type="block" pos:line="7" pos:column="9">/* test void * splay containers */</comment>
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">splayNode<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">top<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><name pos:line="8" pos:column="26">NULL<pos:position pos:line="8" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">squid_srandom<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><call><name pos:line="9" pos:column="23">time<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">NULL<pos:position pos:line="9" pos:column="32"/></name></expr></argument>)<pos:position pos:line="9" pos:column="33"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="35"/></expr_stmt>

        <for pos:line="11" pos:column="9">for <control pos:line="11" pos:column="13">(<init><expr><name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name> <operator pos:line="11" pos:column="16">=<pos:position pos:line="11" pos:column="17"/></operator> <literal type="number" pos:line="11" pos:column="18">0<pos:position pos:line="11" pos:column="19"/></literal></expr>;<pos:position pos:line="11" pos:column="20"/></init> <condition><expr><name pos:line="11" pos:column="21">i<pos:position pos:line="11" pos:column="22"/></name> <operator pos:line="11" pos:column="23">&lt;<pos:position pos:line="11" pos:column="27"/></operator> <literal type="number" pos:line="11" pos:column="25">100<pos:position pos:line="11" pos:column="28"/></literal></expr>;<pos:position pos:line="11" pos:column="29"/></condition> <incr><expr><operator pos:line="11" pos:column="30">++<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">i<pos:position pos:line="11" pos:column="33"/></name></expr></incr>)<pos:position pos:line="11" pos:column="34"/></control> <block pos:line="11" pos:column="35">{
            <expr_stmt><expr><name pos:line="12" pos:column="13">I<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <operator pos:line="12" pos:column="17">(<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">intnode<pos:position pos:line="12" pos:column="25"/></name> <operator pos:line="12" pos:column="26">*<pos:position pos:line="12" pos:column="27"/></operator><operator pos:line="12" pos:column="27">)<pos:position pos:line="12" pos:column="28"/></operator><call><name pos:line="12" pos:column="28">xcalloc<pos:position pos:line="12" pos:column="35"/></name><argument_list pos:line="12" pos:column="35">(<argument><expr><sizeof pos:line="12" pos:column="36">sizeof<argument_list pos:line="12" pos:column="42">(<argument><expr><name pos:line="12" pos:column="43">intnode<pos:position pos:line="12" pos:column="50"/></name></expr></argument>)<pos:position pos:line="12" pos:column="51"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="53">1<pos:position pos:line="12" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="13" pos:column="13">I<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">i<pos:position pos:line="13" pos:column="17"/></name></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <call><name pos:line="13" pos:column="20">squid_random<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">()<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="14" pos:column="13">top<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <call><name><name pos:line="14" pos:column="19">top<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">-&gt;<pos:position pos:line="14" pos:column="27"/></operator><name pos:line="14" pos:column="24">insert<pos:position pos:line="14" pos:column="30"/></name></name><argument_list pos:line="14" pos:column="30">(<argument><expr><name pos:line="14" pos:column="31">I<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="34">compareintvoid<pos:position pos:line="14" pos:column="48"/></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name><name pos:line="17" pos:column="9">SplayCheck<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">::<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">BeginWalk<pos:position pos:line="17" pos:column="30"/></name></name><argument_list pos:line="17" pos:column="30">()<pos:position pos:line="17" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">top<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">walk<pos:position pos:line="18" pos:column="18"/></name></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name><name pos:line="18" pos:column="19">SplayCheck<pos:position pos:line="18" pos:column="29"/></name><operator pos:line="18" pos:column="29">::<pos:position pos:line="18" pos:column="31"/></operator><name pos:line="18" pos:column="31">WalkVoid<pos:position pos:line="18" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="41">NULL<pos:position pos:line="18" pos:column="45"/></name></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">SplayCheck<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">::<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">BeginWalk<pos:position pos:line="20" pos:column="30"/></name></name><argument_list pos:line="20" pos:column="30">()<pos:position pos:line="20" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="21" pos:column="9">top<pos:position pos:line="21" pos:column="12"/></name><operator pos:line="21" pos:column="12">-&gt;<pos:position pos:line="21" pos:column="17"/></operator><name pos:line="21" pos:column="14">walk<pos:position pos:line="21" pos:column="18"/></name></name><argument_list pos:line="21" pos:column="18">(<argument><expr><name><name pos:line="21" pos:column="19">SplayCheck<pos:position pos:line="21" pos:column="29"/></name><operator pos:line="21" pos:column="29">::<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">WalkVoid<pos:position pos:line="21" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="41">NULL<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">top<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">destroy<pos:position pos:line="22" pos:column="21"/></name></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">destintvoid<pos:position pos:line="22" pos:column="33"/></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
        <comment type="block" pos:line="23" pos:column="9">/* check we don't segfault on NULL splay calls */</comment>
        <expr_stmt><expr><name pos:line="24" pos:column="9">top<pos:position pos:line="24" pos:column="12"/></name> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">NULL<pos:position pos:line="24" pos:column="19"/></name></expr>;<pos:position pos:line="24" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="25" pos:column="9">top<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">splay<pos:position pos:line="25" pos:column="19"/></name></name><argument_list pos:line="25" pos:column="19">(<argument><expr><operator pos:line="25" pos:column="20">(<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">void<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">*<pos:position pos:line="25" pos:column="27"/></operator><operator pos:line="25" pos:column="27">)<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="28">NULL<pos:position pos:line="25" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="34">compareintvoid<pos:position pos:line="25" pos:column="48"/></name></expr></argument>)<pos:position pos:line="25" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block>

    <comment type="block" pos:line="28" pos:column="5">/* test typesafe splay containers */</comment>
    <block pos:line="29" pos:column="5">{
        <comment type="block" pos:line="30" pos:column="9">/* intnode* */</comment>
        <decl_stmt><decl><type><name><name pos:line="31" pos:column="9">SplayNode<pos:position pos:line="31" pos:column="18"/></name><argument_list type="generic" pos:line="31" pos:column="18">&lt;<argument><expr><name pos:line="31" pos:column="19">intnode<pos:position pos:line="31" pos:column="26"/></name> <modifier pos:line="31" pos:column="27">*<pos:position pos:line="31" pos:column="28"/></modifier></expr></argument>&gt;<pos:position pos:line="31" pos:column="32"/></argument_list></name> <modifier pos:line="31" pos:column="30">*<pos:position pos:line="31" pos:column="31"/></modifier></type><name pos:line="31" pos:column="31">safeTop<pos:position pos:line="31" pos:column="38"/></name> <init pos:line="31" pos:column="39">= <expr><name pos:line="31" pos:column="41">NULL<pos:position pos:line="31" pos:column="45"/></name></expr></init></decl>;<pos:position pos:line="31" pos:column="46"/></decl_stmt>

        <for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">( <init><decl><type><name pos:line="33" pos:column="15">int<pos:position pos:line="33" pos:column="18"/></name></type> <name pos:line="33" pos:column="19">i<pos:position pos:line="33" pos:column="20"/></name> <init pos:line="33" pos:column="21">= <expr><literal type="number" pos:line="33" pos:column="23">0<pos:position pos:line="33" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="33" pos:column="25"/></init> <condition><expr><name pos:line="33" pos:column="26">i<pos:position pos:line="33" pos:column="27"/></name> <operator pos:line="33" pos:column="28">&lt;<pos:position pos:line="33" pos:column="32"/></operator> <literal type="number" pos:line="33" pos:column="30">100<pos:position pos:line="33" pos:column="33"/></literal></expr>;<pos:position pos:line="33" pos:column="34"/></condition> <incr><expr><operator pos:line="33" pos:column="35">++<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="37">i<pos:position pos:line="33" pos:column="38"/></name></expr></incr>)<pos:position pos:line="33" pos:column="39"/></control> <block pos:line="33" pos:column="40">{
            <decl_stmt><decl><type><name pos:line="34" pos:column="13">intnode<pos:position pos:line="34" pos:column="20"/></name> <modifier pos:line="34" pos:column="21">*<pos:position pos:line="34" pos:column="22"/></modifier></type><name pos:line="34" pos:column="22">I<pos:position pos:line="34" pos:column="23"/></name></decl>;<pos:position pos:line="34" pos:column="24"/></decl_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">I<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <operator pos:line="35" pos:column="17">new<pos:position pos:line="35" pos:column="20"/></operator> <name pos:line="35" pos:column="21">intnode<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="36" pos:column="13">I<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">i<pos:position pos:line="36" pos:column="17"/></name></name> <operator pos:line="36" pos:column="18">=<pos:position pos:line="36" pos:column="19"/></operator> <call><name pos:line="36" pos:column="20">squid_random<pos:position pos:line="36" pos:column="32"/></name><argument_list pos:line="36" pos:column="32">()<pos:position pos:line="36" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="37" pos:column="13">safeTop<pos:position pos:line="37" pos:column="20"/></name> <operator pos:line="37" pos:column="21">=<pos:position pos:line="37" pos:column="22"/></operator> <call><name><name pos:line="37" pos:column="23">safeTop<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">-&gt;<pos:position pos:line="37" pos:column="35"/></operator><name pos:line="37" pos:column="32">insert<pos:position pos:line="37" pos:column="38"/></name></name><argument_list pos:line="37" pos:column="38">(<argument><expr><name pos:line="37" pos:column="39">I<pos:position pos:line="37" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="42">compareint<pos:position pos:line="37" pos:column="52"/></name></expr></argument>)<pos:position pos:line="37" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name><name pos:line="40" pos:column="9">SplayCheck<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">::<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="21">BeginWalk<pos:position pos:line="40" pos:column="30"/></name></name><argument_list pos:line="40" pos:column="30">()<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="41" pos:column="9">safeTop<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">walk<pos:position pos:line="41" pos:column="22"/></name></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name><name pos:line="41" pos:column="23">SplayCheck<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">::<pos:position pos:line="41" pos:column="35"/></operator><name pos:line="41" pos:column="35">WalkNode<pos:position pos:line="41" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="45">NULL<pos:position pos:line="41" pos:column="49"/></name></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="43" pos:column="9">safeTop<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">destroy<pos:position pos:line="43" pos:column="25"/></name></name><argument_list pos:line="43" pos:column="25">(<argument><expr><name pos:line="43" pos:column="26">destint<pos:position pos:line="43" pos:column="33"/></name></expr></argument>)<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="35"/></expr_stmt>
        <comment type="block" pos:line="44" pos:column="9">/* check we don't segfault on NULL splay calls */</comment>
        <expr_stmt><expr><name pos:line="45" pos:column="9">safeTop<pos:position pos:line="45" pos:column="16"/></name> <operator pos:line="45" pos:column="17">=<pos:position pos:line="45" pos:column="18"/></operator> <name pos:line="45" pos:column="19">NULL<pos:position pos:line="45" pos:column="23"/></name></expr>;<pos:position pos:line="45" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="46" pos:column="9">safeTop<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">-&gt;<pos:position pos:line="46" pos:column="21"/></operator><name pos:line="46" pos:column="18">splay<pos:position pos:line="46" pos:column="23"/></name></name><argument_list pos:line="46" pos:column="23">(<argument><expr><operator pos:line="46" pos:column="24">(<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="25">intnode<pos:position pos:line="46" pos:column="32"/></name> <operator pos:line="46" pos:column="33">*<pos:position pos:line="46" pos:column="34"/></operator><operator pos:line="46" pos:column="34">)<pos:position pos:line="46" pos:column="35"/></operator><name pos:line="46" pos:column="35">NULL<pos:position pos:line="46" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="41">compareint<pos:position pos:line="46" pos:column="51"/></name></expr></argument>)<pos:position pos:line="46" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block>
    <block pos:line="48" pos:column="5">{
        <comment type="block" pos:line="49" pos:column="9">/* intnode */</comment>
        <decl_stmt><decl><type><name><name pos:line="50" pos:column="9">SplayNode<pos:position pos:line="50" pos:column="18"/></name><argument_list type="generic" pos:line="50" pos:column="18">&lt;<argument><expr><name pos:line="50" pos:column="19">intnode<pos:position pos:line="50" pos:column="26"/></name></expr></argument>&gt;<pos:position pos:line="50" pos:column="30"/></argument_list></name> <modifier pos:line="50" pos:column="28">*<pos:position pos:line="50" pos:column="29"/></modifier></type><name pos:line="50" pos:column="29">safeTop<pos:position pos:line="50" pos:column="36"/></name> <init pos:line="50" pos:column="37">= <expr><name pos:line="50" pos:column="39">NULL<pos:position pos:line="50" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="50" pos:column="44"/></decl_stmt>

        <for pos:line="52" pos:column="9">for <control pos:line="52" pos:column="13">(<init><decl><type><name pos:line="52" pos:column="14">int<pos:position pos:line="52" pos:column="17"/></name></type> <name pos:line="52" pos:column="18">i<pos:position pos:line="52" pos:column="19"/></name> <init pos:line="52" pos:column="20">= <expr><literal type="number" pos:line="52" pos:column="22">0<pos:position pos:line="52" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="52" pos:column="24"/></init> <condition><expr><name pos:line="52" pos:column="25">i<pos:position pos:line="52" pos:column="26"/></name> <operator pos:line="52" pos:column="27">&lt;<pos:position pos:line="52" pos:column="31"/></operator> <literal type="number" pos:line="52" pos:column="29">100<pos:position pos:line="52" pos:column="32"/></literal></expr>;<pos:position pos:line="52" pos:column="33"/></condition> <incr><expr><operator pos:line="52" pos:column="34">++<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="36">i<pos:position pos:line="52" pos:column="37"/></name></expr></incr>)<pos:position pos:line="52" pos:column="38"/></control> <block pos:line="52" pos:column="39">{
            <decl_stmt><decl><type><name pos:line="53" pos:column="13">intnode<pos:position pos:line="53" pos:column="20"/></name></type> <name pos:line="53" pos:column="21">I<pos:position pos:line="53" pos:column="22"/></name></decl>;<pos:position pos:line="53" pos:column="23"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="54" pos:column="13">I<pos:position pos:line="54" pos:column="14"/></name><operator pos:line="54" pos:column="14">.<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="15">i<pos:position pos:line="54" pos:column="16"/></name></name> <operator pos:line="54" pos:column="17">=<pos:position pos:line="54" pos:column="18"/></operator> <call><name pos:line="54" pos:column="19">squid_random<pos:position pos:line="54" pos:column="31"/></name><argument_list pos:line="54" pos:column="31">()<pos:position pos:line="54" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="55" pos:column="13">safeTop<pos:position pos:line="55" pos:column="20"/></name> <operator pos:line="55" pos:column="21">=<pos:position pos:line="55" pos:column="22"/></operator> <call><name><name pos:line="55" pos:column="23">safeTop<pos:position pos:line="55" pos:column="30"/></name><operator pos:line="55" pos:column="30">-&gt;<pos:position pos:line="55" pos:column="35"/></operator><name pos:line="55" pos:column="32">insert<pos:position pos:line="55" pos:column="38"/></name></name><argument_list pos:line="55" pos:column="38">(<argument><expr><name pos:line="55" pos:column="39">I<pos:position pos:line="55" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="42">compareintref<pos:position pos:line="55" pos:column="55"/></name></expr></argument>)<pos:position pos:line="55" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="56" pos:column="10"/></block></for>

        <expr_stmt><expr><call><name><name pos:line="58" pos:column="9">SplayCheck<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">::<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="21">BeginWalk<pos:position pos:line="58" pos:column="30"/></name></name><argument_list pos:line="58" pos:column="30">()<pos:position pos:line="58" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="59" pos:column="9">safeTop<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">-&gt;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="18">walk<pos:position pos:line="59" pos:column="22"/></name></name><argument_list pos:line="59" pos:column="22">(<argument><expr><name><name pos:line="59" pos:column="23">SplayCheck<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">::<pos:position pos:line="59" pos:column="35"/></operator><name pos:line="59" pos:column="35">WalkNodeRef<pos:position pos:line="59" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="48">NULL<pos:position pos:line="59" pos:column="52"/></name></expr></argument>)<pos:position pos:line="59" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="54"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="61" pos:column="9">safeTop<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">-&gt;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="18">destroy<pos:position pos:line="61" pos:column="25"/></name></name><argument_list pos:line="61" pos:column="25">(<argument><expr><name pos:line="61" pos:column="26">destintref<pos:position pos:line="61" pos:column="36"/></name></expr></argument>)<pos:position pos:line="61" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="38"/></expr_stmt>
        <comment type="block" pos:line="62" pos:column="9">/* check we don't segfault on NULL splay calls */</comment>
        <expr_stmt><expr><name pos:line="63" pos:column="9">safeTop<pos:position pos:line="63" pos:column="16"/></name> <operator pos:line="63" pos:column="17">=<pos:position pos:line="63" pos:column="18"/></operator> <name pos:line="63" pos:column="19">NULL<pos:position pos:line="63" pos:column="23"/></name></expr>;<pos:position pos:line="63" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="64" pos:column="9">safeTop<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">-&gt;<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="18">splay<pos:position pos:line="64" pos:column="23"/></name></name><argument_list pos:line="64" pos:column="23">(<argument><expr><call><name pos:line="64" pos:column="24">intnode<pos:position pos:line="64" pos:column="31"/></name><argument_list pos:line="64" pos:column="31">()<pos:position pos:line="64" pos:column="33"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="64" pos:column="35">compareintref<pos:position pos:line="64" pos:column="48"/></name></expr></argument>)<pos:position pos:line="64" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="65" pos:column="9">SplayCheck<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">::<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">BeginWalk<pos:position pos:line="65" pos:column="30"/></name></name><argument_list pos:line="65" pos:column="30">()<pos:position pos:line="65" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="66" pos:column="9">safeTop<pos:position pos:line="66" pos:column="16"/></name><operator pos:line="66" pos:column="16">-&gt;<pos:position pos:line="66" pos:column="21"/></operator><name pos:line="66" pos:column="18">walk<pos:position pos:line="66" pos:column="22"/></name></name><argument_list pos:line="66" pos:column="22">(<argument><expr><name><name pos:line="66" pos:column="23">SplayCheck<pos:position pos:line="66" pos:column="33"/></name><operator pos:line="66" pos:column="33">::<pos:position pos:line="66" pos:column="35"/></operator><name pos:line="66" pos:column="35">WalkNodeRef<pos:position pos:line="66" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="48">NULL<pos:position pos:line="66" pos:column="52"/></name></expr></argument>)<pos:position pos:line="66" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block>

    <comment type="block" pos:line="69" pos:column="5">/* check the check routine */</comment>
    <block pos:line="70" pos:column="5">{
        <expr_stmt><expr><call><name><name pos:line="71" pos:column="9">SplayCheck<pos:position pos:line="71" pos:column="19"/></name><operator pos:line="71" pos:column="19">::<pos:position pos:line="71" pos:column="21"/></operator><name pos:line="71" pos:column="21">BeginWalk<pos:position pos:line="71" pos:column="30"/></name></name><argument_list pos:line="71" pos:column="30">()<pos:position pos:line="71" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="33"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="72" pos:column="9">intnode<pos:position pos:line="72" pos:column="16"/></name></type> <name pos:line="72" pos:column="17">I<pos:position pos:line="72" pos:column="18"/></name></decl>;<pos:position pos:line="72" pos:column="19"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="73" pos:column="9">I<pos:position pos:line="73" pos:column="10"/></name><operator pos:line="73" pos:column="10">.<pos:position pos:line="73" pos:column="11"/></operator><name pos:line="73" pos:column="11">i<pos:position pos:line="73" pos:column="12"/></name></name> <operator pos:line="73" pos:column="13">=<pos:position pos:line="73" pos:column="14"/></operator> <literal type="number" pos:line="73" pos:column="15">1<pos:position pos:line="73" pos:column="16"/></literal></expr>;<pos:position pos:line="73" pos:column="17"/></expr_stmt>
        <comment type="block" pos:line="74" pos:column="9">/* check we don't segfault on NULL splay calls */</comment>
        <expr_stmt><expr><call><name><name pos:line="75" pos:column="9">SplayCheck<pos:position pos:line="75" pos:column="19"/></name><operator pos:line="75" pos:column="19">::<pos:position pos:line="75" pos:column="21"/></operator><name pos:line="75" pos:column="21">WalkNodeRef<pos:position pos:line="75" pos:column="32"/></name></name><argument_list pos:line="75" pos:column="32">(<argument><expr><name pos:line="75" pos:column="33">I<pos:position pos:line="75" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="36">NULL<pos:position pos:line="75" pos:column="40"/></name></expr></argument>)<pos:position pos:line="75" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">I<pos:position pos:line="76" pos:column="10"/></name><operator pos:line="76" pos:column="10">.<pos:position pos:line="76" pos:column="11"/></operator><name pos:line="76" pos:column="11">i<pos:position pos:line="76" pos:column="12"/></name></name> <operator pos:line="76" pos:column="13">=<pos:position pos:line="76" pos:column="14"/></operator> <literal type="number" pos:line="76" pos:column="15">0<pos:position pos:line="76" pos:column="16"/></literal></expr>;<pos:position pos:line="76" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="77" pos:column="9">SplayCheck<pos:position pos:line="77" pos:column="19"/></name><operator pos:line="77" pos:column="19">::<pos:position pos:line="77" pos:column="21"/></operator><name pos:line="77" pos:column="21">ExpectedFail<pos:position pos:line="77" pos:column="33"/></name></name> <operator pos:line="77" pos:column="34">=<pos:position pos:line="77" pos:column="35"/></operator> <literal type="boolean" pos:line="77" pos:column="36">true<pos:position pos:line="77" pos:column="40"/></literal></expr>;<pos:position pos:line="77" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="78" pos:column="9">SplayCheck<pos:position pos:line="78" pos:column="19"/></name><operator pos:line="78" pos:column="19">::<pos:position pos:line="78" pos:column="21"/></operator><name pos:line="78" pos:column="21">WalkNodeRef<pos:position pos:line="78" pos:column="32"/></name></name><argument_list pos:line="78" pos:column="32">(<argument><expr><name pos:line="78" pos:column="33">I<pos:position pos:line="78" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="78" pos:column="36">NULL<pos:position pos:line="78" pos:column="40"/></name></expr></argument>)<pos:position pos:line="78" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="79" pos:column="6"/></block>

    <block pos:line="81" pos:column="5">{
        <comment type="block" pos:line="82" pos:column="9">/* check for begin() */</comment>
        <decl_stmt><decl><type><name><name pos:line="83" pos:column="9">SplayNode<pos:position pos:line="83" pos:column="18"/></name><argument_list type="generic" pos:line="83" pos:column="18">&lt;<argument><expr><name pos:line="83" pos:column="19">intnode<pos:position pos:line="83" pos:column="26"/></name></expr></argument>&gt;<pos:position pos:line="83" pos:column="30"/></argument_list></name> <modifier pos:line="83" pos:column="28">*<pos:position pos:line="83" pos:column="29"/></modifier></type><name pos:line="83" pos:column="29">safeTop<pos:position pos:line="83" pos:column="36"/></name> <init pos:line="83" pos:column="37">= <expr><name pos:line="83" pos:column="39">NULL<pos:position pos:line="83" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="83" pos:column="44"/></decl_stmt>

        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><call><name><name pos:line="85" pos:column="13">safeTop<pos:position pos:line="85" pos:column="20"/></name><operator pos:line="85" pos:column="20">-&gt;<pos:position pos:line="85" pos:column="25"/></operator><name pos:line="85" pos:column="22">start<pos:position pos:line="85" pos:column="27"/></name></name><argument_list pos:line="85" pos:column="27">()<pos:position pos:line="85" pos:column="29"/></argument_list></call> <operator pos:line="85" pos:column="30">!=<pos:position pos:line="85" pos:column="32"/></operator> <name pos:line="85" pos:column="33">NULL<pos:position pos:line="85" pos:column="37"/></name></expr>)<pos:position pos:line="85" pos:column="38"/></condition><then pos:line="85" pos:column="38">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="86" pos:column="13">exit<pos:position pos:line="86" pos:column="17"/></name> <argument_list pos:line="86" pos:column="18">(<argument><expr><literal type="number" pos:line="86" pos:column="19">1<pos:position pos:line="86" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="86" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="22"/></expr_stmt></block></then></if>

        <if pos:line="88" pos:column="9">if <condition pos:line="88" pos:column="12">(<expr><call><name><name pos:line="88" pos:column="13">safeTop<pos:position pos:line="88" pos:column="20"/></name><operator pos:line="88" pos:column="20">-&gt;<pos:position pos:line="88" pos:column="25"/></operator><name pos:line="88" pos:column="22">finish<pos:position pos:line="88" pos:column="28"/></name></name><argument_list pos:line="88" pos:column="28">()<pos:position pos:line="88" pos:column="30"/></argument_list></call> <operator pos:line="88" pos:column="31">!=<pos:position pos:line="88" pos:column="33"/></operator> <name pos:line="88" pos:column="34">NULL<pos:position pos:line="88" pos:column="38"/></name></expr>)<pos:position pos:line="88" pos:column="39"/></condition><then pos:line="88" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="89" pos:column="13">exit<pos:position pos:line="89" pos:column="17"/></name> <argument_list pos:line="89" pos:column="18">(<argument><expr><literal type="number" pos:line="89" pos:column="19">1<pos:position pos:line="89" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="22"/></expr_stmt></block></then></if>

        <for pos:line="91" pos:column="9">for <control pos:line="91" pos:column="13">(<init><decl><type><name pos:line="91" pos:column="14">int<pos:position pos:line="91" pos:column="17"/></name></type> <name pos:line="91" pos:column="18">i<pos:position pos:line="91" pos:column="19"/></name> <init pos:line="91" pos:column="20">= <expr><literal type="number" pos:line="91" pos:column="22">0<pos:position pos:line="91" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="91" pos:column="24"/></init> <condition><expr><name pos:line="91" pos:column="25">i<pos:position pos:line="91" pos:column="26"/></name> <operator pos:line="91" pos:column="27">&lt;<pos:position pos:line="91" pos:column="31"/></operator> <literal type="number" pos:line="91" pos:column="29">100<pos:position pos:line="91" pos:column="32"/></literal></expr>;<pos:position pos:line="91" pos:column="33"/></condition> <incr><expr><operator pos:line="91" pos:column="34">++<pos:position pos:line="91" pos:column="36"/></operator><name pos:line="91" pos:column="36">i<pos:position pos:line="91" pos:column="37"/></name></expr></incr>)<pos:position pos:line="91" pos:column="38"/></control> <block pos:line="91" pos:column="39">{
            <decl_stmt><decl><type><name pos:line="92" pos:column="13">intnode<pos:position pos:line="92" pos:column="20"/></name></type> <name pos:line="92" pos:column="21">I<pos:position pos:line="92" pos:column="22"/></name></decl>;<pos:position pos:line="92" pos:column="23"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="93" pos:column="13">I<pos:position pos:line="93" pos:column="14"/></name><operator pos:line="93" pos:column="14">.<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="15">i<pos:position pos:line="93" pos:column="16"/></name></name> <operator pos:line="93" pos:column="17">=<pos:position pos:line="93" pos:column="18"/></operator> <call><name pos:line="93" pos:column="19">squid_random<pos:position pos:line="93" pos:column="31"/></name><argument_list pos:line="93" pos:column="31">()<pos:position pos:line="93" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="34"/></expr_stmt>

            <if pos:line="95" pos:column="13">if <condition pos:line="95" pos:column="16">(<expr><name><name pos:line="95" pos:column="17">I<pos:position pos:line="95" pos:column="18"/></name><operator pos:line="95" pos:column="18">.<pos:position pos:line="95" pos:column="19"/></operator><name pos:line="95" pos:column="19">i<pos:position pos:line="95" pos:column="20"/></name></name> <operator pos:line="95" pos:column="21">&gt;<pos:position pos:line="95" pos:column="25"/></operator> <literal type="number" pos:line="95" pos:column="23">50<pos:position pos:line="95" pos:column="25"/></literal> <operator pos:line="95" pos:column="26">&amp;&amp;<pos:position pos:line="95" pos:column="36"/></operator> <name><name pos:line="95" pos:column="29">I<pos:position pos:line="95" pos:column="30"/></name><operator pos:line="95" pos:column="30">.<pos:position pos:line="95" pos:column="31"/></operator><name pos:line="95" pos:column="31">i<pos:position pos:line="95" pos:column="32"/></name></name> <operator pos:line="95" pos:column="33">&lt;<pos:position pos:line="95" pos:column="37"/></operator> <literal type="number" pos:line="95" pos:column="35">10000000<pos:position pos:line="95" pos:column="43"/></literal></expr>)<pos:position pos:line="95" pos:column="44"/></condition><then pos:line="95" pos:column="44">
                <block type="pseudo"><expr_stmt><expr><name pos:line="96" pos:column="17">safeTop<pos:position pos:line="96" pos:column="24"/></name> <operator pos:line="96" pos:column="25">=<pos:position pos:line="96" pos:column="26"/></operator> <call><name><name pos:line="96" pos:column="27">safeTop<pos:position pos:line="96" pos:column="34"/></name><operator pos:line="96" pos:column="34">-&gt;<pos:position pos:line="96" pos:column="39"/></operator><name pos:line="96" pos:column="36">insert<pos:position pos:line="96" pos:column="42"/></name></name><argument_list pos:line="96" pos:column="42">(<argument><expr><name pos:line="96" pos:column="43">I<pos:position pos:line="96" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="96" pos:column="46">compareintref<pos:position pos:line="96" pos:column="59"/></name></expr></argument>)<pos:position pos:line="96" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="61"/></expr_stmt></block></then></if>
        }<pos:position pos:line="97" pos:column="10"/></block></for>

        <block pos:line="99" pos:column="9">{
            <decl_stmt><decl><type><name pos:line="100" pos:column="13">intnode<pos:position pos:line="100" pos:column="20"/></name></type> <name pos:line="100" pos:column="21">I<pos:position pos:line="100" pos:column="22"/></name></decl>;<pos:position pos:line="100" pos:column="23"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="101" pos:column="13">I<pos:position pos:line="101" pos:column="14"/></name><operator pos:line="101" pos:column="14">.<pos:position pos:line="101" pos:column="15"/></operator><name pos:line="101" pos:column="15">i<pos:position pos:line="101" pos:column="16"/></name></name> <operator pos:line="101" pos:column="17">=<pos:position pos:line="101" pos:column="18"/></operator> <literal type="number" pos:line="101" pos:column="19">50<pos:position pos:line="101" pos:column="21"/></literal></expr>;<pos:position pos:line="101" pos:column="22"/></expr_stmt>
            <expr_stmt><expr><name pos:line="102" pos:column="13">safeTop<pos:position pos:line="102" pos:column="20"/></name> <operator pos:line="102" pos:column="21">=<pos:position pos:line="102" pos:column="22"/></operator> <call><name><name pos:line="102" pos:column="23">safeTop<pos:position pos:line="102" pos:column="30"/></name><operator pos:line="102" pos:column="30">-&gt;<pos:position pos:line="102" pos:column="35"/></operator><name pos:line="102" pos:column="32">insert<pos:position pos:line="102" pos:column="38"/></name></name> <argument_list pos:line="102" pos:column="39">(<argument><expr><name pos:line="102" pos:column="40">I<pos:position pos:line="102" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="102" pos:column="43">compareintref<pos:position pos:line="102" pos:column="56"/></name></expr></argument>)<pos:position pos:line="102" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="58"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="103" pos:column="13">I<pos:position pos:line="103" pos:column="14"/></name><operator pos:line="103" pos:column="14">.<pos:position pos:line="103" pos:column="15"/></operator><name pos:line="103" pos:column="15">i<pos:position pos:line="103" pos:column="16"/></name></name> <operator pos:line="103" pos:column="17">=<pos:position pos:line="103" pos:column="18"/></operator> <literal type="number" pos:line="103" pos:column="19">10000000<pos:position pos:line="103" pos:column="27"/></literal></expr>;<pos:position pos:line="103" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="104" pos:column="13">safeTop<pos:position pos:line="104" pos:column="20"/></name> <operator pos:line="104" pos:column="21">=<pos:position pos:line="104" pos:column="22"/></operator> <call><name><name pos:line="104" pos:column="23">safeTop<pos:position pos:line="104" pos:column="30"/></name><operator pos:line="104" pos:column="30">-&gt;<pos:position pos:line="104" pos:column="35"/></operator><name pos:line="104" pos:column="32">insert<pos:position pos:line="104" pos:column="38"/></name></name> <argument_list pos:line="104" pos:column="39">(<argument><expr><name pos:line="104" pos:column="40">I<pos:position pos:line="104" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="43">compareintref<pos:position pos:line="104" pos:column="56"/></name></expr></argument>)<pos:position pos:line="104" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="58"/></expr_stmt>
        }<pos:position pos:line="105" pos:column="10"/></block>

        <if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><operator pos:line="107" pos:column="13">!<pos:position pos:line="107" pos:column="14"/></operator><call><name><name pos:line="107" pos:column="14">safeTop<pos:position pos:line="107" pos:column="21"/></name><operator pos:line="107" pos:column="21">-&gt;<pos:position pos:line="107" pos:column="26"/></operator><name pos:line="107" pos:column="23">start<pos:position pos:line="107" pos:column="28"/></name></name><argument_list pos:line="107" pos:column="28">()<pos:position pos:line="107" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="107" pos:column="31"/></condition><then pos:line="107" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="108" pos:column="13">exit<pos:position pos:line="108" pos:column="17"/></name> <argument_list pos:line="108" pos:column="18">(<argument><expr><literal type="number" pos:line="108" pos:column="19">1<pos:position pos:line="108" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="22"/></expr_stmt></block></then></if>

        <if pos:line="110" pos:column="9">if <condition pos:line="110" pos:column="12">(<expr><call><name><name pos:line="110" pos:column="13">safeTop<pos:position pos:line="110" pos:column="20"/></name><operator pos:line="110" pos:column="20">-&gt;<pos:position pos:line="110" pos:column="25"/></operator><name pos:line="110" pos:column="22">start<pos:position pos:line="110" pos:column="27"/></name></name><argument_list pos:line="110" pos:column="27">()<pos:position pos:line="110" pos:column="29"/></argument_list></call><operator pos:line="110" pos:column="29">-&gt;<pos:position pos:line="110" pos:column="34"/></operator><name><name pos:line="110" pos:column="31">data<pos:position pos:line="110" pos:column="35"/></name><operator pos:line="110" pos:column="35">.<pos:position pos:line="110" pos:column="36"/></operator><name pos:line="110" pos:column="36">i<pos:position pos:line="110" pos:column="37"/></name></name> <operator pos:line="110" pos:column="38">!=<pos:position pos:line="110" pos:column="40"/></operator> <literal type="number" pos:line="110" pos:column="41">50<pos:position pos:line="110" pos:column="43"/></literal></expr>)<pos:position pos:line="110" pos:column="44"/></condition><then pos:line="110" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="111" pos:column="13">exit<pos:position pos:line="111" pos:column="17"/></name> <argument_list pos:line="111" pos:column="18">(<argument><expr><literal type="number" pos:line="111" pos:column="19">1<pos:position pos:line="111" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="22"/></expr_stmt></block></then></if>

        <if pos:line="113" pos:column="9">if <condition pos:line="113" pos:column="12">(<expr><operator pos:line="113" pos:column="13">!<pos:position pos:line="113" pos:column="14"/></operator><call><name><name pos:line="113" pos:column="14">safeTop<pos:position pos:line="113" pos:column="21"/></name><operator pos:line="113" pos:column="21">-&gt;<pos:position pos:line="113" pos:column="26"/></operator><name pos:line="113" pos:column="23">finish<pos:position pos:line="113" pos:column="29"/></name></name><argument_list pos:line="113" pos:column="29">()<pos:position pos:line="113" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="32"/></condition><then pos:line="113" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="114" pos:column="13">exit<pos:position pos:line="114" pos:column="17"/></name> <argument_list pos:line="114" pos:column="18">(<argument><expr><literal type="number" pos:line="114" pos:column="19">1<pos:position pos:line="114" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="114" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="114" pos:column="22"/></expr_stmt></block></then></if>

        <if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><call><name><name pos:line="116" pos:column="13">safeTop<pos:position pos:line="116" pos:column="20"/></name><operator pos:line="116" pos:column="20">-&gt;<pos:position pos:line="116" pos:column="25"/></operator><name pos:line="116" pos:column="22">finish<pos:position pos:line="116" pos:column="28"/></name></name><argument_list pos:line="116" pos:column="28">()<pos:position pos:line="116" pos:column="30"/></argument_list></call><operator pos:line="116" pos:column="30">-&gt;<pos:position pos:line="116" pos:column="35"/></operator><name><name pos:line="116" pos:column="32">data<pos:position pos:line="116" pos:column="36"/></name><operator pos:line="116" pos:column="36">.<pos:position pos:line="116" pos:column="37"/></operator><name pos:line="116" pos:column="37">i<pos:position pos:line="116" pos:column="38"/></name></name> <operator pos:line="116" pos:column="39">!=<pos:position pos:line="116" pos:column="41"/></operator> <literal type="number" pos:line="116" pos:column="42">10000000<pos:position pos:line="116" pos:column="50"/></literal></expr>)<pos:position pos:line="116" pos:column="51"/></condition><then pos:line="116" pos:column="51">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="117" pos:column="13">exit<pos:position pos:line="117" pos:column="17"/></name> <argument_list pos:line="117" pos:column="18">(<argument><expr><literal type="number" pos:line="117" pos:column="19">1<pos:position pos:line="117" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="22"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="119" pos:column="9">safeTop<pos:position pos:line="119" pos:column="16"/></name><operator pos:line="119" pos:column="16">-&gt;<pos:position pos:line="119" pos:column="21"/></operator><name pos:line="119" pos:column="18">destroy<pos:position pos:line="119" pos:column="25"/></name></name><argument_list pos:line="119" pos:column="25">(<argument><expr><name pos:line="119" pos:column="26">destintref<pos:position pos:line="119" pos:column="36"/></name></expr></argument>)<pos:position pos:line="119" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="120" pos:column="6"/></block>

    <block pos:line="122" pos:column="5">{
        <decl_stmt><decl><type><name><name pos:line="123" pos:column="9">Splay<pos:position pos:line="123" pos:column="14"/></name><argument_list type="generic" pos:line="123" pos:column="14">&lt;<argument><expr><name pos:line="123" pos:column="15">intnode<pos:position pos:line="123" pos:column="22"/></name> <modifier pos:line="123" pos:column="23">*<pos:position pos:line="123" pos:column="24"/></modifier></expr></argument>&gt;<pos:position pos:line="123" pos:column="28"/></argument_list></name></type> <name pos:line="123" pos:column="26">aSplay<pos:position pos:line="123" pos:column="32"/></name></decl>;<pos:position pos:line="123" pos:column="33"/></decl_stmt>

        <if pos:line="125" pos:column="9">if <condition pos:line="125" pos:column="12">(<expr><call><name><name pos:line="125" pos:column="13">aSplay<pos:position pos:line="125" pos:column="19"/></name><operator pos:line="125" pos:column="19">.<pos:position pos:line="125" pos:column="20"/></operator><name pos:line="125" pos:column="20">start<pos:position pos:line="125" pos:column="25"/></name></name><argument_list pos:line="125" pos:column="25">()<pos:position pos:line="125" pos:column="27"/></argument_list></call> <operator pos:line="125" pos:column="28">!=<pos:position pos:line="125" pos:column="30"/></operator> <name pos:line="125" pos:column="31">NULL<pos:position pos:line="125" pos:column="35"/></name></expr>)<pos:position pos:line="125" pos:column="36"/></condition><then pos:line="125" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="126" pos:column="13">exit<pos:position pos:line="126" pos:column="17"/></name> <argument_list pos:line="126" pos:column="18">(<argument><expr><literal type="number" pos:line="126" pos:column="19">1<pos:position pos:line="126" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="22"/></expr_stmt></block></then></if>

        <if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><call><name><name pos:line="128" pos:column="13">aSplay<pos:position pos:line="128" pos:column="19"/></name><operator pos:line="128" pos:column="19">.<pos:position pos:line="128" pos:column="20"/></operator><name pos:line="128" pos:column="20">size<pos:position pos:line="128" pos:column="24"/></name></name><argument_list pos:line="128" pos:column="24">()<pos:position pos:line="128" pos:column="26"/></argument_list></call> <operator pos:line="128" pos:column="27">!=<pos:position pos:line="128" pos:column="29"/></operator> <literal type="number" pos:line="128" pos:column="30">0<pos:position pos:line="128" pos:column="31"/></literal></expr>)<pos:position pos:line="128" pos:column="32"/></condition><then pos:line="128" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="129" pos:column="13">exit<pos:position pos:line="129" pos:column="17"/></name> <argument_list pos:line="129" pos:column="18">(<argument><expr><literal type="number" pos:line="129" pos:column="19">1<pos:position pos:line="129" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="22"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="131" pos:column="9">aSplay<pos:position pos:line="131" pos:column="15"/></name><operator pos:line="131" pos:column="15">.<pos:position pos:line="131" pos:column="16"/></operator><name pos:line="131" pos:column="16">insert<pos:position pos:line="131" pos:column="22"/></name></name> <argument_list pos:line="131" pos:column="23">(<argument><expr><operator pos:line="131" pos:column="24">new<pos:position pos:line="131" pos:column="27"/></operator> <call><name pos:line="131" pos:column="28">intnode<pos:position pos:line="131" pos:column="35"/></name><argument_list pos:line="131" pos:column="35">(<argument><expr><literal type="number" pos:line="131" pos:column="36">5<pos:position pos:line="131" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="131" pos:column="40">compareint<pos:position pos:line="131" pos:column="50"/></name></expr></argument>)<pos:position pos:line="131" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="52"/></expr_stmt>

        <if pos:line="133" pos:column="9">if <condition pos:line="133" pos:column="12">(<expr><call><name><name pos:line="133" pos:column="13">aSplay<pos:position pos:line="133" pos:column="19"/></name><operator pos:line="133" pos:column="19">.<pos:position pos:line="133" pos:column="20"/></operator><name pos:line="133" pos:column="20">start<pos:position pos:line="133" pos:column="25"/></name></name><argument_list pos:line="133" pos:column="25">()<pos:position pos:line="133" pos:column="27"/></argument_list></call> <operator pos:line="133" pos:column="28">==<pos:position pos:line="133" pos:column="30"/></operator> <name pos:line="133" pos:column="31">NULL<pos:position pos:line="133" pos:column="35"/></name></expr>)<pos:position pos:line="133" pos:column="36"/></condition><then pos:line="133" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="134" pos:column="13">exit<pos:position pos:line="134" pos:column="17"/></name> <argument_list pos:line="134" pos:column="18">(<argument><expr><literal type="number" pos:line="134" pos:column="19">1<pos:position pos:line="134" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="22"/></expr_stmt></block></then></if>

        <if pos:line="136" pos:column="9">if <condition pos:line="136" pos:column="12">(<expr><call><name><name pos:line="136" pos:column="13">aSplay<pos:position pos:line="136" pos:column="19"/></name><operator pos:line="136" pos:column="19">.<pos:position pos:line="136" pos:column="20"/></operator><name pos:line="136" pos:column="20">size<pos:position pos:line="136" pos:column="24"/></name></name><argument_list pos:line="136" pos:column="24">()<pos:position pos:line="136" pos:column="26"/></argument_list></call> <operator pos:line="136" pos:column="27">!=<pos:position pos:line="136" pos:column="29"/></operator> <literal type="number" pos:line="136" pos:column="30">1<pos:position pos:line="136" pos:column="31"/></literal></expr>)<pos:position pos:line="136" pos:column="32"/></condition><then pos:line="136" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="137" pos:column="13">exit<pos:position pos:line="137" pos:column="17"/></name> <argument_list pos:line="137" pos:column="18">(<argument><expr><literal type="number" pos:line="137" pos:column="19">1<pos:position pos:line="137" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="22"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="139" pos:column="9">aSplay<pos:position pos:line="139" pos:column="15"/></name><operator pos:line="139" pos:column="15">.<pos:position pos:line="139" pos:column="16"/></operator><name pos:line="139" pos:column="16">destroy<pos:position pos:line="139" pos:column="23"/></name></name><argument_list pos:line="139" pos:column="23">(<argument><expr><name pos:line="139" pos:column="24">destint<pos:position pos:line="139" pos:column="31"/></name></expr></argument>)<pos:position pos:line="139" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="33"/></expr_stmt>

        <if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><call><name><name pos:line="141" pos:column="13">aSplay<pos:position pos:line="141" pos:column="19"/></name><operator pos:line="141" pos:column="19">.<pos:position pos:line="141" pos:column="20"/></operator><name pos:line="141" pos:column="20">start<pos:position pos:line="141" pos:column="25"/></name></name><argument_list pos:line="141" pos:column="25">()<pos:position pos:line="141" pos:column="27"/></argument_list></call> <operator pos:line="141" pos:column="28">!=<pos:position pos:line="141" pos:column="30"/></operator> <name pos:line="141" pos:column="31">NULL<pos:position pos:line="141" pos:column="35"/></name></expr>)<pos:position pos:line="141" pos:column="36"/></condition><then pos:line="141" pos:column="36">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="142" pos:column="13">exit<pos:position pos:line="142" pos:column="17"/></name> <argument_list pos:line="142" pos:column="18">(<argument><expr><literal type="number" pos:line="142" pos:column="19">1<pos:position pos:line="142" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="22"/></expr_stmt></block></then></if>

        <if pos:line="144" pos:column="9">if <condition pos:line="144" pos:column="12">(<expr><call><name><name pos:line="144" pos:column="13">aSplay<pos:position pos:line="144" pos:column="19"/></name><operator pos:line="144" pos:column="19">.<pos:position pos:line="144" pos:column="20"/></operator><name pos:line="144" pos:column="20">size<pos:position pos:line="144" pos:column="24"/></name></name><argument_list pos:line="144" pos:column="24">()<pos:position pos:line="144" pos:column="26"/></argument_list></call> <operator pos:line="144" pos:column="27">!=<pos:position pos:line="144" pos:column="29"/></operator> <literal type="number" pos:line="144" pos:column="30">0<pos:position pos:line="144" pos:column="31"/></literal></expr>)<pos:position pos:line="144" pos:column="32"/></condition><then pos:line="144" pos:column="32">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="145" pos:column="13">exit<pos:position pos:line="145" pos:column="17"/></name> <argument_list pos:line="145" pos:column="18">(<argument><expr><literal type="number" pos:line="145" pos:column="19">1<pos:position pos:line="145" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="22"/></expr_stmt></block></then></if>
    }<pos:position pos:line="146" pos:column="6"/></block>

    <return pos:line="148" pos:column="5">return <expr><literal type="number" pos:line="148" pos:column="12">0<pos:position pos:line="148" pos:column="13"/></literal></expr>;<pos:position pos:line="148" pos:column="14"/></return>
}<pos:position pos:line="149" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7477_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">NegotiationHistory<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">printTlsVersion<pos:position pos:line="2" pos:column="46"/></name></name><parameter_list pos:line="2" pos:column="46">(<parameter><decl><type><name><name pos:line="2" pos:column="47">AnyP<pos:position pos:line="2" pos:column="51"/></name><operator pos:line="2" pos:column="51">::<pos:position pos:line="2" pos:column="53"/></operator><name pos:line="2" pos:column="53">ProtocolVersion<pos:position pos:line="2" pos:column="68"/></name></name> <specifier pos:line="2" pos:column="69">const<pos:position pos:line="2" pos:column="74"/></specifier> <modifier pos:line="2" pos:column="75">&amp;<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="76">v<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list> <specifier pos:line="2" pos:column="79">const<pos:position pos:line="2" pos:column="84"/></specifier>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">v<pos:position pos:line="4" pos:column="10"/></name><operator pos:line="4" pos:column="10">.<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">protocol<pos:position pos:line="4" pos:column="19"/></name></name> <operator pos:line="4" pos:column="20">!=<pos:position pos:line="4" pos:column="22"/></operator> <name><name pos:line="4" pos:column="23">AnyP<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">::<pos:position pos:line="4" pos:column="29"/></operator><name pos:line="4" pos:column="29">PROTO_SSL<pos:position pos:line="4" pos:column="38"/></name></name> <operator pos:line="4" pos:column="39">&amp;&amp;<pos:position pos:line="4" pos:column="49"/></operator> <name><name pos:line="4" pos:column="42">v<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">.<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">protocol<pos:position pos:line="4" pos:column="52"/></name></name> <operator pos:line="4" pos:column="53">!=<pos:position pos:line="4" pos:column="55"/></operator> <name><name pos:line="4" pos:column="56">AnyP<pos:position pos:line="4" pos:column="60"/></name><operator pos:line="4" pos:column="60">::<pos:position pos:line="4" pos:column="62"/></operator><name pos:line="4" pos:column="62">PROTO_TLS<pos:position pos:line="4" pos:column="71"/></name></name></expr>)<pos:position pos:line="4" pos:column="72"/></condition><then pos:line="4" pos:column="72">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="null" pos:line="5" pos:column="16">nullptr<pos:position pos:line="5" pos:column="23"/></literal></expr>;<pos:position pos:line="5" pos:column="24"/></return></block></then></if>

    <decl_stmt><decl><specifier pos:line="7" pos:column="5">static<pos:position pos:line="7" pos:column="11"/></specifier> <type><name pos:line="7" pos:column="12">char<pos:position pos:line="7" pos:column="16"/></name></type> <name><name pos:line="7" pos:column="17">buf<pos:position pos:line="7" pos:column="20"/></name><index pos:line="7" pos:column="20">[<expr><literal type="number" pos:line="7" pos:column="21">512<pos:position pos:line="7" pos:column="24"/></literal></expr>]<pos:position pos:line="7" pos:column="25"/></index></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">snprintf<pos:position pos:line="8" pos:column="13"/></name><argument_list pos:line="8" pos:column="13">(<argument><expr><name pos:line="8" pos:column="14">buf<pos:position pos:line="8" pos:column="17"/></name></expr></argument>, <argument><expr><sizeof pos:line="8" pos:column="19">sizeof<argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">buf<pos:position pos:line="8" pos:column="29"/></name></expr></argument>)<pos:position pos:line="8" pos:column="30"/></argument_list></sizeof></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="32">"%s/%d.%d"<pos:position pos:line="8" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="44">AnyP<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">::<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="50">ProtocolType_str<pos:position pos:line="8" pos:column="66"/></name><index pos:line="8" pos:column="66">[<expr><name><name pos:line="8" pos:column="67">v<pos:position pos:line="8" pos:column="68"/></name><operator pos:line="8" pos:column="68">.<pos:position pos:line="8" pos:column="69"/></operator><name pos:line="8" pos:column="69">protocol<pos:position pos:line="8" pos:column="77"/></name></name></expr>]<pos:position pos:line="8" pos:column="78"/></index></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="80">v<pos:position pos:line="8" pos:column="81"/></name><operator pos:line="8" pos:column="81">.<pos:position pos:line="8" pos:column="82"/></operator><name pos:line="8" pos:column="82">major<pos:position pos:line="8" pos:column="87"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="89">v<pos:position pos:line="8" pos:column="90"/></name><operator pos:line="8" pos:column="90">.<pos:position pos:line="8" pos:column="91"/></operator><name pos:line="8" pos:column="91">minor<pos:position pos:line="8" pos:column="96"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="98"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">buf<pos:position pos:line="9" pos:column="15"/></name></expr>;<pos:position pos:line="9" pos:column="16"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2509_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FtpStateData<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">maybeReadVirginBody<pos:position pos:line="2" pos:column="34"/></name></name><parameter_list pos:line="2" pos:column="34">()<pos:position pos:line="2" pos:column="36"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// too late to read</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name><name pos:line="5" pos:column="10">Comm<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">::<pos:position pos:line="5" pos:column="16"/></operator><name pos:line="5" pos:column="16">IsConnOpen<pos:position pos:line="5" pos:column="26"/></name></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name><name pos:line="5" pos:column="27">data<pos:position pos:line="5" pos:column="31"/></name><operator pos:line="5" pos:column="31">.<pos:position pos:line="5" pos:column="32"/></operator><name pos:line="5" pos:column="32">conn<pos:position pos:line="5" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call> <operator pos:line="5" pos:column="38">||<pos:position pos:line="5" pos:column="40"/></operator> <name><name pos:line="5" pos:column="41">fd_table<pos:position pos:line="5" pos:column="49"/></name><index pos:line="5" pos:column="49">[<expr><name><name pos:line="5" pos:column="50">data<pos:position pos:line="5" pos:column="54"/></name><operator pos:line="5" pos:column="54">.<pos:position pos:line="5" pos:column="55"/></operator><name pos:line="5" pos:column="55">conn<pos:position pos:line="5" pos:column="59"/></name><operator pos:line="5" pos:column="59">-&gt;<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="61">fd<pos:position pos:line="5" pos:column="63"/></name></name></expr>]<pos:position pos:line="5" pos:column="64"/></index></name><operator pos:line="5" pos:column="64">.<pos:position pos:line="5" pos:column="65"/></operator><call><name pos:line="5" pos:column="65">closing<pos:position pos:line="5" pos:column="72"/></name><argument_list pos:line="5" pos:column="72">()<pos:position pos:line="5" pos:column="74"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="75"/></condition><then pos:line="5" pos:column="75">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">data<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">.<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">read_pending<pos:position pos:line="8" pos:column="26"/></name></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">int<pos:position pos:line="11" pos:column="14"/></name></type> <name pos:line="11" pos:column="15">read_sz<pos:position pos:line="11" pos:column="22"/></name> <init pos:line="11" pos:column="23">= <expr><call><name pos:line="11" pos:column="25">replyBodySpace<pos:position pos:line="11" pos:column="39"/></name><argument_list pos:line="11" pos:column="39">(<argument><expr><operator pos:line="11" pos:column="40">*<pos:position pos:line="11" pos:column="41"/></operator><name><name pos:line="11" pos:column="41">data<pos:position pos:line="11" pos:column="45"/></name><operator pos:line="11" pos:column="45">.<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="46">readBuf<pos:position pos:line="11" pos:column="53"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="55">0<pos:position pos:line="11" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="58"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">11<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="13" pos:column="15">9<pos:position pos:line="13" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="18">HERE<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">&lt;&lt;<pos:position pos:line="13" pos:column="31"/></operator> <literal type="string" pos:line="13" pos:column="26">"FTP may read up to "<pos:position pos:line="13" pos:column="47"/></literal> <operator pos:line="13" pos:column="48">&lt;&lt;<pos:position pos:line="13" pos:column="56"/></operator> <name pos:line="13" pos:column="51">read_sz<pos:position pos:line="13" pos:column="58"/></name> <operator pos:line="13" pos:column="59">&lt;&lt;<pos:position pos:line="13" pos:column="67"/></operator> <literal type="string" pos:line="13" pos:column="62">" bytes"<pos:position pos:line="13" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="72"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">read_sz<pos:position pos:line="15" pos:column="16"/></name> <operator pos:line="15" pos:column="17">&lt;<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="19">2<pos:position pos:line="15" pos:column="20"/></literal></expr>)<pos:position pos:line="15" pos:column="21"/></condition><then pos:line="15" pos:column="21">	<comment type="line" pos:line="15" pos:column="25">// see http.cc</comment>
        <block type="pseudo"><return pos:line="16" pos:column="9">return;<pos:position pos:line="16" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">data<pos:position pos:line="18" pos:column="9"/></name><operator pos:line="18" pos:column="9">.<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">read_pending<pos:position pos:line="18" pos:column="22"/></name></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <literal type="boolean" pos:line="18" pos:column="25">true<pos:position pos:line="18" pos:column="29"/></literal></expr>;<pos:position pos:line="18" pos:column="30"/></expr_stmt>

    <typedef pos:line="20" pos:column="5">typedef <type><name><name pos:line="20" pos:column="13">CommCbMemFunT<pos:position pos:line="20" pos:column="26"/></name><argument_list type="generic" pos:line="20" pos:column="26">&lt;<argument><expr><name pos:line="20" pos:column="27">FtpStateData<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="41">CommTimeoutCbParams<pos:position pos:line="20" pos:column="60"/></name></expr></argument>&gt;<pos:position pos:line="20" pos:column="64"/></argument_list></name></type> <name pos:line="20" pos:column="62">TimeoutDialer<pos:position pos:line="20" pos:column="75"/></name>;<pos:position pos:line="20" pos:column="76"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="21" pos:column="5">AsyncCall<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">::<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="16">Pointer<pos:position pos:line="21" pos:column="23"/></name></name></type> <name pos:line="21" pos:column="24">timeoutCall<pos:position pos:line="21" pos:column="35"/></name> <init pos:line="21" pos:column="36">=  <expr><call><name pos:line="21" pos:column="39">JobCallback<pos:position pos:line="21" pos:column="50"/></name><argument_list pos:line="21" pos:column="50">(<argument><expr><literal type="number" pos:line="21" pos:column="51">9<pos:position pos:line="21" pos:column="52"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="54">5<pos:position pos:line="21" pos:column="55"/></literal></expr></argument>,
                                      <argument><expr><name pos:line="22" pos:column="39">TimeoutDialer<pos:position pos:line="22" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="54">this<pos:position pos:line="22" pos:column="58"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="60">FtpStateData<pos:position pos:line="22" pos:column="72"/></name><operator pos:line="22" pos:column="72">::<pos:position pos:line="22" pos:column="74"/></operator><name pos:line="22" pos:column="74">ftpTimeout<pos:position pos:line="22" pos:column="84"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="85"/></argument_list></call></expr></init></decl>;<pos:position pos:line="22" pos:column="86"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="23" pos:column="5">commSetConnTimeout<pos:position pos:line="23" pos:column="23"/></name><argument_list pos:line="23" pos:column="23">(<argument><expr><name><name pos:line="23" pos:column="24">data<pos:position pos:line="23" pos:column="28"/></name><operator pos:line="23" pos:column="28">.<pos:position pos:line="23" pos:column="29"/></operator><name pos:line="23" pos:column="29">conn<pos:position pos:line="23" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="35">Config<pos:position pos:line="23" pos:column="41"/></name><operator pos:line="23" pos:column="41">.<pos:position pos:line="23" pos:column="42"/></operator><name pos:line="23" pos:column="42">Timeout<pos:position pos:line="23" pos:column="49"/></name><operator pos:line="23" pos:column="49">.<pos:position pos:line="23" pos:column="50"/></operator><name pos:line="23" pos:column="50">read<pos:position pos:line="23" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="56">timeoutCall<pos:position pos:line="23" pos:column="67"/></name></expr></argument>)<pos:position pos:line="23" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="69"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">debugs<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><literal type="number" pos:line="25" pos:column="12">9<pos:position pos:line="25" pos:column="13"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="25" pos:column="14">5<pos:position pos:line="25" pos:column="15"/></literal></expr></argument>,<argument><expr><name pos:line="25" pos:column="16">HERE<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">&lt;&lt;<pos:position pos:line="25" pos:column="29"/></operator> <literal type="string" pos:line="25" pos:column="24">"queueing read on FD "<pos:position pos:line="25" pos:column="46"/></literal> <operator pos:line="25" pos:column="47">&lt;&lt;<pos:position pos:line="25" pos:column="55"/></operator> <name><name pos:line="25" pos:column="50">data<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">.<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="55">conn<pos:position pos:line="25" pos:column="59"/></name><operator pos:line="25" pos:column="59">-&gt;<pos:position pos:line="25" pos:column="64"/></operator><name pos:line="25" pos:column="61">fd<pos:position pos:line="25" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="65"/></expr_stmt>

    <typedef pos:line="27" pos:column="5">typedef <type><name><name pos:line="27" pos:column="13">CommCbMemFunT<pos:position pos:line="27" pos:column="26"/></name><argument_list type="generic" pos:line="27" pos:column="26">&lt;<argument><expr><name pos:line="27" pos:column="27">FtpStateData<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="41">CommIoCbParams<pos:position pos:line="27" pos:column="55"/></name></expr></argument>&gt;<pos:position pos:line="27" pos:column="59"/></argument_list></name></type> <name pos:line="27" pos:column="57">Dialer<pos:position pos:line="27" pos:column="63"/></name>;<pos:position pos:line="27" pos:column="64"/></typedef>
    <expr_stmt><expr><call><name><name pos:line="28" pos:column="5">entry<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">delayAwareRead<pos:position pos:line="28" pos:column="26"/></name></name><argument_list pos:line="28" pos:column="26">(<argument><expr><name><name pos:line="28" pos:column="27">data<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">.<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">conn<pos:position pos:line="28" pos:column="36"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="28" pos:column="38">data<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">.<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="43">readBuf<pos:position pos:line="28" pos:column="50"/></name><operator pos:line="28" pos:column="50">-&gt;<pos:position pos:line="28" pos:column="55"/></operator><name pos:line="28" pos:column="52">space<pos:position pos:line="28" pos:column="57"/></name></name><argument_list pos:line="28" pos:column="57">()<pos:position pos:line="28" pos:column="59"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="28" pos:column="61">read_sz<pos:position pos:line="28" pos:column="68"/></name></expr></argument>,
                          <argument><expr><call><name pos:line="29" pos:column="27">JobCallback<pos:position pos:line="29" pos:column="38"/></name><argument_list pos:line="29" pos:column="38">(<argument><expr><literal type="number" pos:line="29" pos:column="39">9<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="42">5<pos:position pos:line="29" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="45">Dialer<pos:position pos:line="29" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="53">this<pos:position pos:line="29" pos:column="57"/></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="59">FtpStateData<pos:position pos:line="29" pos:column="71"/></name><operator pos:line="29" pos:column="71">::<pos:position pos:line="29" pos:column="73"/></operator><name pos:line="29" pos:column="73">dataRead<pos:position pos:line="29" pos:column="81"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="82"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="84"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

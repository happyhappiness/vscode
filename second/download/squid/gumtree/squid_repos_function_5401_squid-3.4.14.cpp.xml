<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5401_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Digest<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">Scheme<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">PurgeCredentialsCache<pos:position pos:line="2" pos:column="44"/></name></name><parameter_list pos:line="2" pos:column="44">(<parameter><decl><type><name pos:line="2" pos:column="45">void<pos:position pos:line="2" pos:column="49"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">AuthUserHashPointer<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">usernamehash<pos:position pos:line="4" pos:column="38"/></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">29<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">2<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="19">HERE<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">&lt;&lt;<pos:position pos:line="6" pos:column="32"/></operator> <literal type="string" pos:line="6" pos:column="27">"Erasing Digest authentication credentials from username cache."<pos:position pos:line="6" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="93"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">hash_first<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><name pos:line="7" pos:column="16">proxy_auth_username_cache<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>

    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">(<pos:position pos:line="9" pos:column="13"/></operator><name pos:line="9" pos:column="13">usernamehash<pos:position pos:line="9" pos:column="25"/></name> <operator pos:line="9" pos:column="26">=<pos:position pos:line="9" pos:column="27"/></operator> <cast type="static" pos:line="9" pos:column="28">static_cast<argument_list type="generic" pos:line="9" pos:column="39">&lt;<argument><expr><name pos:line="9" pos:column="40">AuthUserHashPointer<pos:position pos:line="9" pos:column="59"/></name> <operator pos:line="9" pos:column="60">*<pos:position pos:line="9" pos:column="61"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="65"/></argument_list><argument_list pos:line="9" pos:column="62">(<argument><expr><call><name pos:line="9" pos:column="63">hash_next<pos:position pos:line="9" pos:column="72"/></name><argument_list pos:line="9" pos:column="72">(<argument><expr><name pos:line="9" pos:column="73">proxy_auth_username_cache<pos:position pos:line="9" pos:column="98"/></name></expr></argument>)<pos:position pos:line="9" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="100"/></argument_list></cast> <operator pos:line="9" pos:column="101">)<pos:position pos:line="9" pos:column="102"/></operator></expr>)<pos:position pos:line="9" pos:column="103"/></condition> <block pos:line="9" pos:column="104">{
        <decl_stmt><decl><type><name><name pos:line="10" pos:column="9">Auth<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">::<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">User<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">::<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">Pointer<pos:position pos:line="10" pos:column="28"/></name></name></type> <name pos:line="10" pos:column="29">auth_user<pos:position pos:line="10" pos:column="38"/></name> <init pos:line="10" pos:column="39">= <expr><call><name><name pos:line="10" pos:column="41">usernamehash<pos:position pos:line="10" pos:column="53"/></name><operator pos:line="10" pos:column="53">-&gt;<pos:position pos:line="10" pos:column="58"/></operator><name pos:line="10" pos:column="55">user<pos:position pos:line="10" pos:column="59"/></name></name><argument_list pos:line="10" pos:column="59">()<pos:position pos:line="10" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="62"/></decl_stmt>

        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name pos:line="12" pos:column="13">strcmp<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><call><name><name pos:line="12" pos:column="20">auth_user<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">config<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">type<pos:position pos:line="12" pos:column="43"/></name></name><argument_list pos:line="12" pos:column="43">()<pos:position pos:line="12" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="47">"digest"<pos:position pos:line="12" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></call> <operator pos:line="12" pos:column="57">==<pos:position pos:line="12" pos:column="59"/></operator> <literal type="number" pos:line="12" pos:column="60">0<pos:position pos:line="12" pos:column="61"/></literal></expr>)<pos:position pos:line="12" pos:column="62"/></condition><then pos:line="12" pos:column="62"> <block pos:line="12" pos:column="63">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">hash_remove_link<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><name pos:line="13" pos:column="30">proxy_auth_username_cache<pos:position pos:line="13" pos:column="55"/></name></expr></argument>, <argument><expr><cast type="static" pos:line="13" pos:column="57">static_cast<argument_list type="generic" pos:line="13" pos:column="68">&lt;<argument><expr><name pos:line="13" pos:column="69">hash_link<pos:position pos:line="13" pos:column="78"/></name><operator pos:line="13" pos:column="78">*<pos:position pos:line="13" pos:column="79"/></operator></expr></argument>&gt;<pos:position pos:line="13" pos:column="83"/></argument_list><argument_list pos:line="13" pos:column="80">(<argument><expr><name pos:line="13" pos:column="81">usernamehash<pos:position pos:line="13" pos:column="93"/></name></expr></argument>)<pos:position pos:line="13" pos:column="94"/></argument_list></cast></expr></argument>)<pos:position pos:line="13" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="96"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="14" pos:column="13">delete<pos:position pos:line="14" pos:column="19"/></operator> <name pos:line="14" pos:column="20">usernamehash<pos:position pos:line="14" pos:column="32"/></name></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></while>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

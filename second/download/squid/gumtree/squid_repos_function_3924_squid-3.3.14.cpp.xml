<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3924_squid-3.3.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Adaptation<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">Ecap<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">BodyRep<pos:position pos:line="1" pos:column="26"/></name><operator pos:line="1" pos:column="26">::<pos:position pos:line="1" pos:column="28"/></operator><name pos:line="1" pos:column="28">BodySize<pos:position pos:line="1" pos:column="36"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">BodyRep<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">bodySize<pos:position pos:line="2" pos:column="36"/></name></name><parameter_list pos:line="2" pos:column="36">()<pos:position pos:line="2" pos:column="38"/></parameter_list> <specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier>
<block pos:line="3" pos:column="1">{
    <return pos:line="4" pos:column="5">return <expr><ternary><condition><expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">theBody<pos:position pos:line="4" pos:column="20"/></name></expr> ?<pos:position pos:line="4" pos:column="22"/></condition><then pos:line="4" pos:column="22"> <expr><call><name pos:line="4" pos:column="23">BodySize<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">()<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr> <pos:position pos:line="4" pos:column="34"/></then><else pos:line="4" pos:column="34">: <expr><call><name pos:line="4" pos:column="36">BodySize<pos:position pos:line="4" pos:column="44"/></name><argument_list pos:line="4" pos:column="44">(<argument><expr><call><name><name pos:line="4" pos:column="45">theBody<pos:position pos:line="4" pos:column="52"/></name><operator pos:line="4" pos:column="52">-&gt;<pos:position pos:line="4" pos:column="57"/></operator><name pos:line="4" pos:column="54">bodySize<pos:position pos:line="4" pos:column="62"/></name></name><argument_list pos:line="4" pos:column="62">()<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="4" pos:column="66"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5885_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">print_esc<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">FILE<pos:position pos:line="2" pos:column="15"/></name> <modifier pos:line="2" pos:column="16">*<pos:position pos:line="2" pos:column="17"/></modifier></type> <name pos:line="2" pos:column="18">p<pos:position pos:line="2" pos:column="19"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">s<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name pos:line="4" pos:column="14">HELPER_INPUT_BUFFER<pos:position pos:line="4" pos:column="33"/></name></expr>]<pos:position pos:line="4" pos:column="34"/></index></name></decl>;<pos:position pos:line="4" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">t<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name> <init pos:line="6" pos:column="11">= <expr><literal type="number" pos:line="6" pos:column="13">0<pos:position pos:line="6" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="15"/></decl_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">t<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <name pos:line="8" pos:column="14">s<pos:position pos:line="8" pos:column="15"/></name></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><operator pos:line="8" pos:column="17">*<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">t<pos:position pos:line="8" pos:column="19"/></name> <operator pos:line="8" pos:column="20">!=<pos:position pos:line="8" pos:column="22"/></operator> <literal type="char" pos:line="8" pos:column="23">'\0'<pos:position pos:line="8" pos:column="27"/></literal></expr>;<pos:position pos:line="8" pos:column="28"/></condition> <incr><expr><operator pos:line="8" pos:column="29">++<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">t<pos:position pos:line="8" pos:column="32"/></name></expr></incr>)<pos:position pos:line="8" pos:column="33"/></control> <block pos:line="8" pos:column="34">{
        <comment type="block" pos:line="9" pos:column="9">/*
         * NP: The shell escaping permits 'i' to jump up to 2 octets per loop,
         *     so ensure we have at least 3 free.
         */</comment>
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">i<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">&gt;<pos:position pos:line="13" pos:column="19"/></operator> <name pos:line="13" pos:column="17">HELPER_INPUT_BUFFER<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-<pos:position pos:line="13" pos:column="37"/></operator><literal type="number" pos:line="13" pos:column="37">3<pos:position pos:line="13" pos:column="38"/></literal></expr>)<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39"> <block pos:line="13" pos:column="40">{
            <expr_stmt><expr><name><name pos:line="14" pos:column="13">buf<pos:position pos:line="14" pos:column="16"/></name><index pos:line="14" pos:column="16">[<expr><name pos:line="14" pos:column="17">i<pos:position pos:line="14" pos:column="18"/></name></expr>]<pos:position pos:line="14" pos:column="19"/></index></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <literal type="char" pos:line="14" pos:column="22">'\0'<pos:position pos:line="14" pos:column="26"/></literal></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="15" pos:column="13">(<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">void<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">)<pos:position pos:line="15" pos:column="19"/></operator> <call><name pos:line="15" pos:column="20">fputs<pos:position pos:line="15" pos:column="25"/></name><argument_list pos:line="15" pos:column="25">(<argument><expr><name pos:line="15" pos:column="26">buf<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">p<pos:position pos:line="15" pos:column="32"/></name></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="16" pos:column="13">i<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <literal type="number" pos:line="16" pos:column="17">0<pos:position pos:line="16" pos:column="18"/></literal></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">t<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">==<pos:position pos:line="18" pos:column="18"/></operator> <literal type="char" pos:line="18" pos:column="19">'\\'<pos:position pos:line="18" pos:column="23"/></literal></expr>)<pos:position pos:line="18" pos:column="24"/></condition><then pos:line="18" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="13">buf<pos:position pos:line="19" pos:column="16"/></name><index pos:line="19" pos:column="16">[<expr><name pos:line="19" pos:column="17">i<pos:position pos:line="19" pos:column="18"/></name><operator pos:line="19" pos:column="18">++<pos:position pos:line="19" pos:column="20"/></operator></expr>]<pos:position pos:line="19" pos:column="21"/></index></name> <operator pos:line="19" pos:column="22">=<pos:position pos:line="19" pos:column="23"/></operator> <literal type="char" pos:line="19" pos:column="24">'\\'<pos:position pos:line="19" pos:column="28"/></literal></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name><name pos:line="21" pos:column="9">buf<pos:position pos:line="21" pos:column="12"/></name><index pos:line="21" pos:column="12">[<expr><name pos:line="21" pos:column="13">i<pos:position pos:line="21" pos:column="14"/></name></expr>]<pos:position pos:line="21" pos:column="15"/></index></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <operator pos:line="21" pos:column="18">*<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="19">t<pos:position pos:line="21" pos:column="20"/></name></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="22" pos:column="9">++<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="11">i<pos:position pos:line="22" pos:column="12"/></name></expr>;<pos:position pos:line="22" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></for>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">i<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">&gt;<pos:position pos:line="25" pos:column="15"/></operator> <literal type="number" pos:line="25" pos:column="13">0<pos:position pos:line="25" pos:column="14"/></literal></expr>)<pos:position pos:line="25" pos:column="15"/></condition><then pos:line="25" pos:column="15"> <block pos:line="25" pos:column="16">{
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">buf<pos:position pos:line="26" pos:column="12"/></name><index pos:line="26" pos:column="12">[<expr><name pos:line="26" pos:column="13">i<pos:position pos:line="26" pos:column="14"/></name></expr>]<pos:position pos:line="26" pos:column="15"/></index></name> <operator pos:line="26" pos:column="16">=<pos:position pos:line="26" pos:column="17"/></operator> <literal type="char" pos:line="26" pos:column="18">'\0'<pos:position pos:line="26" pos:column="22"/></literal></expr>;<pos:position pos:line="26" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="27" pos:column="9">(<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">void<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">)<pos:position pos:line="27" pos:column="15"/></operator> <call><name pos:line="27" pos:column="16">fputs<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">buf<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="27">p<pos:position pos:line="27" pos:column="28"/></name></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

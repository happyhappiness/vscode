<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6882_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">esiSequence<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">processStep<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">int<pos:position pos:line="2" pos:column="29"/></name></type> <name pos:line="2" pos:column="30">dovars<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">elementToProcess<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><call><name pos:line="4" pos:column="31">nextElementToProcess<pos:position pos:line="4" pos:column="51"/></name><argument_list pos:line="4" pos:column="51">()<pos:position pos:line="4" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">nextElementToProcess<pos:position pos:line="5" pos:column="25"/></name><argument_list pos:line="5" pos:column="25">(<argument><expr><name pos:line="5" pos:column="26">elementToProcess<pos:position pos:line="5" pos:column="42"/></name> <operator pos:line="5" pos:column="43">+<pos:position pos:line="5" pos:column="44"/></operator> <literal type="number" pos:line="5" pos:column="45">1<pos:position pos:line="5" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">esiProcessResult_t<pos:position pos:line="6" pos:column="23"/></name></type> <name pos:line="6" pos:column="24">tempResult<pos:position pos:line="6" pos:column="34"/></name> <init pos:line="6" pos:column="35">= <expr><call><name pos:line="6" pos:column="37">processOne<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">(<argument><expr><name pos:line="6" pos:column="48">dovars<pos:position pos:line="6" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="56">elementToProcess<pos:position pos:line="6" pos:column="72"/></name></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="74"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">processingResult<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">&lt;<pos:position pos:line="8" pos:column="30"/></operator> <name pos:line="8" pos:column="28">tempResult<pos:position pos:line="8" pos:column="38"/></name></expr>)<pos:position pos:line="8" pos:column="39"/></condition><then pos:line="8" pos:column="39"> <block pos:line="8" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">86<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">5<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"esiSequence::process: processingResult was "<pos:position pos:line="9" pos:column="68"/></literal> <operator pos:line="9" pos:column="69">&lt;&lt;<pos:position pos:line="9" pos:column="77"/></operator> <name pos:line="9" pos:column="72">processingResult<pos:position pos:line="9" pos:column="88"/></name> <operator pos:line="9" pos:column="89">&lt;&lt;<pos:position pos:line="9" pos:column="97"/></operator> <literal type="string" pos:line="9" pos:column="92">", increasing to "<pos:position pos:line="9" pos:column="110"/></literal> <operator pos:line="9" pos:column="111">&lt;&lt;<pos:position pos:line="9" pos:column="119"/></operator> <name pos:line="9" pos:column="114">tempResult<pos:position pos:line="9" pos:column="124"/></name></expr></argument>)<pos:position pos:line="9" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="126"/></expr_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">processingResult<pos:position pos:line="10" pos:column="25"/></name> <operator pos:line="10" pos:column="26">=<pos:position pos:line="10" pos:column="27"/></operator> <name pos:line="10" pos:column="28">tempResult<pos:position pos:line="10" pos:column="38"/></name></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

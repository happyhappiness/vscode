<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4134_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">BIGNUM<pos:position pos:line="1" pos:column="7"/></name> <modifier pos:line="1" pos:column="8">*<pos:position pos:line="1" pos:column="9"/></modifier></type> <name><name pos:line="1" pos:column="10">Ssl<pos:position pos:line="1" pos:column="13"/></name><operator pos:line="1" pos:column="13">::<pos:position pos:line="1" pos:column="15"/></operator><name pos:line="1" pos:column="15">CertificateDb<pos:position pos:line="1" pos:column="28"/></name><operator pos:line="1" pos:column="28">::<pos:position pos:line="1" pos:column="30"/></operator><name pos:line="1" pos:column="30">getCurrentSerialNumber<pos:position pos:line="1" pos:column="52"/></name></name><parameter_list pos:line="1" pos:column="52">()<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">FileLocker<pos:position pos:line="3" pos:column="15"/></name></type> <name pos:line="3" pos:column="16">serial_locker<pos:position pos:line="3" pos:column="29"/></name><argument_list pos:line="3" pos:column="29">(<argument><expr><name pos:line="3" pos:column="30">serial_full<pos:position pos:line="3" pos:column="41"/></name></expr></argument>)<pos:position pos:line="3" pos:column="42"/></argument_list></decl>;<pos:position pos:line="3" pos:column="43"/></decl_stmt>
    <comment type="line" pos:line="4" pos:column="5">// load serial number from file.</comment>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Ssl<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">::<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">BIO_Pointer<pos:position pos:line="5" pos:column="21"/></name></name></type> <name pos:line="5" pos:column="22">file<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><call><name pos:line="5" pos:column="27">BIO_new<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><call><name pos:line="5" pos:column="35">BIO_s_file<pos:position pos:line="5" pos:column="45"/></name><argument_list pos:line="5" pos:column="45">()<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="48"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="49"/></argument_list></decl>;<pos:position pos:line="5" pos:column="50"/></decl_stmt>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">file<pos:position pos:line="6" pos:column="14"/></name></expr>)<pos:position pos:line="6" pos:column="15"/></condition><then pos:line="6" pos:column="15">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><name pos:line="7" pos:column="16">NULL<pos:position pos:line="7" pos:column="20"/></name></expr>;<pos:position pos:line="7" pos:column="21"/></return></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">BIO_rw_filename<pos:position pos:line="9" pos:column="24"/></name><argument_list pos:line="9" pos:column="24">(<argument><expr><call><name><name pos:line="9" pos:column="25">file<pos:position pos:line="9" pos:column="29"/></name><operator pos:line="9" pos:column="29">.<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">get<pos:position pos:line="9" pos:column="33"/></name></name><argument_list pos:line="9" pos:column="33">()<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr></argument>, <argument><expr><cast type="const" pos:line="9" pos:column="37">const_cast<argument_list type="generic" pos:line="9" pos:column="47">&lt;<argument><expr><name pos:line="9" pos:column="48">char<pos:position pos:line="9" pos:column="52"/></name> <operator pos:line="9" pos:column="53">*<pos:position pos:line="9" pos:column="54"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="58"/></argument_list><argument_list pos:line="9" pos:column="55">(<argument><expr><call><name><name pos:line="9" pos:column="56">serial_full<pos:position pos:line="9" pos:column="67"/></name><operator pos:line="9" pos:column="67">.<pos:position pos:line="9" pos:column="68"/></operator><name pos:line="9" pos:column="68">c_str<pos:position pos:line="9" pos:column="73"/></name></name><argument_list pos:line="9" pos:column="73">()<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="76"/></argument_list></cast></expr></argument>)<pos:position pos:line="9" pos:column="77"/></argument_list></call> <operator pos:line="9" pos:column="78">&lt;=<pos:position pos:line="9" pos:column="83"/></operator> <literal type="number" pos:line="9" pos:column="81">0<pos:position pos:line="9" pos:column="82"/></literal></expr>)<pos:position pos:line="9" pos:column="83"/></condition><then pos:line="9" pos:column="83">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><name pos:line="10" pos:column="16">NULL<pos:position pos:line="10" pos:column="20"/></name></expr>;<pos:position pos:line="10" pos:column="21"/></return></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">Ssl<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">::<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">ASN1_INT_Pointer<pos:position pos:line="12" pos:column="26"/></name></name></type> <name pos:line="12" pos:column="27">serial_ai<pos:position pos:line="12" pos:column="36"/></name><argument_list pos:line="12" pos:column="36">(<argument><expr><call><name pos:line="12" pos:column="37">ASN1_INTEGER_new<pos:position pos:line="12" pos:column="53"/></name><argument_list pos:line="12" pos:column="53">()<pos:position pos:line="12" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="56"/></argument_list></decl>;<pos:position pos:line="12" pos:column="57"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name pos:line="13" pos:column="10">serial_ai<pos:position pos:line="13" pos:column="19"/></name></expr>)<pos:position pos:line="13" pos:column="20"/></condition><then pos:line="13" pos:column="20">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><name pos:line="14" pos:column="16">NULL<pos:position pos:line="14" pos:column="20"/></name></expr>;<pos:position pos:line="14" pos:column="21"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name></type> <name><name pos:line="16" pos:column="10">buffer<pos:position pos:line="16" pos:column="16"/></name><index pos:line="16" pos:column="16">[<expr><literal type="number" pos:line="16" pos:column="17">1024<pos:position pos:line="16" pos:column="21"/></literal></expr>]<pos:position pos:line="16" pos:column="22"/></index></name></decl>;<pos:position pos:line="16" pos:column="23"/></decl_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><call><name pos:line="17" pos:column="10">a2i_ASN1_INTEGER<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><call><name><name pos:line="17" pos:column="27">file<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">.<pos:position pos:line="17" pos:column="32"/></operator><name pos:line="17" pos:column="32">get<pos:position pos:line="17" pos:column="35"/></name></name><argument_list pos:line="17" pos:column="35">()<pos:position pos:line="17" pos:column="37"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="17" pos:column="39">serial_ai<pos:position pos:line="17" pos:column="48"/></name><operator pos:line="17" pos:column="48">.<pos:position pos:line="17" pos:column="49"/></operator><name pos:line="17" pos:column="49">get<pos:position pos:line="17" pos:column="52"/></name></name><argument_list pos:line="17" pos:column="52">()<pos:position pos:line="17" pos:column="54"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="56">buffer<pos:position pos:line="17" pos:column="62"/></name></expr></argument>, <argument><expr><sizeof pos:line="17" pos:column="64">sizeof<argument_list pos:line="17" pos:column="70">(<argument><expr><name pos:line="17" pos:column="71">buffer<pos:position pos:line="17" pos:column="77"/></name></expr></argument>)<pos:position pos:line="17" pos:column="78"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="17" pos:column="79"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="80"/></condition><then pos:line="17" pos:column="80">
        <block type="pseudo"><return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">NULL<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></return></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="20" pos:column="5">Ssl<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">::<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">BIGNUM_Pointer<pos:position pos:line="20" pos:column="24"/></name></name></type> <name pos:line="20" pos:column="25">serial<pos:position pos:line="20" pos:column="31"/></name><argument_list pos:line="20" pos:column="31">(<argument><expr><call><name pos:line="20" pos:column="32">ASN1_INTEGER_to_BN<pos:position pos:line="20" pos:column="50"/></name><argument_list pos:line="20" pos:column="50">(<argument><expr><call><name><name pos:line="20" pos:column="51">serial_ai<pos:position pos:line="20" pos:column="60"/></name><operator pos:line="20" pos:column="60">.<pos:position pos:line="20" pos:column="61"/></operator><name pos:line="20" pos:column="61">get<pos:position pos:line="20" pos:column="64"/></name></name><argument_list pos:line="20" pos:column="64">()<pos:position pos:line="20" pos:column="66"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="20" pos:column="68">NULL<pos:position pos:line="20" pos:column="72"/></name></expr></argument>)<pos:position pos:line="20" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="74"/></argument_list></decl>;<pos:position pos:line="20" pos:column="75"/></decl_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">!<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">serial<pos:position pos:line="22" pos:column="16"/></name></expr>)<pos:position pos:line="22" pos:column="17"/></condition><then pos:line="22" pos:column="17">
        <block type="pseudo"><return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">NULL<pos:position pos:line="23" pos:column="20"/></name></expr>;<pos:position pos:line="23" pos:column="21"/></return></block></then></if>

    <comment type="line" pos:line="25" pos:column="5">// increase serial number.</comment>
    <decl_stmt><decl><type><name><name pos:line="26" pos:column="5">Ssl<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">::<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">BIGNUM_Pointer<pos:position pos:line="26" pos:column="24"/></name></name></type> <name pos:line="26" pos:column="25">increased_serial<pos:position pos:line="26" pos:column="41"/></name><argument_list pos:line="26" pos:column="41">(<argument><expr><call><name pos:line="26" pos:column="42">BN_dup<pos:position pos:line="26" pos:column="48"/></name><argument_list pos:line="26" pos:column="48">(<argument><expr><call><name><name pos:line="26" pos:column="49">serial<pos:position pos:line="26" pos:column="55"/></name><operator pos:line="26" pos:column="55">.<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="56">get<pos:position pos:line="26" pos:column="59"/></name></name><argument_list pos:line="26" pos:column="59">()<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="63"/></argument_list></decl>;<pos:position pos:line="26" pos:column="64"/></decl_stmt>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><operator pos:line="27" pos:column="9">!<pos:position pos:line="27" pos:column="10"/></operator><name pos:line="27" pos:column="10">increased_serial<pos:position pos:line="27" pos:column="26"/></name></expr>)<pos:position pos:line="27" pos:column="27"/></condition><then pos:line="27" pos:column="27">
        <block type="pseudo"><return pos:line="28" pos:column="9">return <expr><name pos:line="28" pos:column="16">NULL<pos:position pos:line="28" pos:column="20"/></name></expr>;<pos:position pos:line="28" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">BN_add_word<pos:position pos:line="30" pos:column="16"/></name><argument_list pos:line="30" pos:column="16">(<argument><expr><call><name><name pos:line="30" pos:column="17">increased_serial<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">.<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="34">get<pos:position pos:line="30" pos:column="37"/></name></name><argument_list pos:line="30" pos:column="37">()<pos:position pos:line="30" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="41">1<pos:position pos:line="30" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>

    <comment type="line" pos:line="32" pos:column="5">// save increased serial number.</comment>
    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><call><name pos:line="33" pos:column="9">BIO_seek<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><call><name><name pos:line="33" pos:column="18">file<pos:position pos:line="33" pos:column="22"/></name><operator pos:line="33" pos:column="22">.<pos:position pos:line="33" pos:column="23"/></operator><name pos:line="33" pos:column="23">get<pos:position pos:line="33" pos:column="26"/></name></name><argument_list pos:line="33" pos:column="26">()<pos:position pos:line="33" pos:column="28"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="30">0<pos:position pos:line="33" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="33"/></condition><then pos:line="33" pos:column="33">
        <block type="pseudo"><return pos:line="34" pos:column="9">return <expr><name pos:line="34" pos:column="16">NULL<pos:position pos:line="34" pos:column="20"/></name></expr>;<pos:position pos:line="34" pos:column="21"/></return></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="36" pos:column="5">Ssl<pos:position pos:line="36" pos:column="8"/></name><operator pos:line="36" pos:column="8">::<pos:position pos:line="36" pos:column="10"/></operator><name pos:line="36" pos:column="10">ASN1_INT_Pointer<pos:position pos:line="36" pos:column="26"/></name></name></type> <name pos:line="36" pos:column="27">increased_serial_ai<pos:position pos:line="36" pos:column="46"/></name><argument_list pos:line="36" pos:column="46">(<argument><expr><call><name pos:line="36" pos:column="47">BN_to_ASN1_INTEGER<pos:position pos:line="36" pos:column="65"/></name><argument_list pos:line="36" pos:column="65">(<argument><expr><call><name><name pos:line="36" pos:column="66">increased_serial<pos:position pos:line="36" pos:column="82"/></name><operator pos:line="36" pos:column="82">.<pos:position pos:line="36" pos:column="83"/></operator><name pos:line="36" pos:column="83">get<pos:position pos:line="36" pos:column="86"/></name></name><argument_list pos:line="36" pos:column="86">()<pos:position pos:line="36" pos:column="88"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="36" pos:column="90">NULL<pos:position pos:line="36" pos:column="94"/></name></expr></argument>)<pos:position pos:line="36" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="96"/></argument_list></decl>;<pos:position pos:line="36" pos:column="97"/></decl_stmt>
    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><operator pos:line="37" pos:column="9">!<pos:position pos:line="37" pos:column="10"/></operator><name pos:line="37" pos:column="10">increased_serial_ai<pos:position pos:line="37" pos:column="29"/></name></expr>)<pos:position pos:line="37" pos:column="30"/></condition><then pos:line="37" pos:column="30">
        <block type="pseudo"><return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">NULL<pos:position pos:line="38" pos:column="20"/></name></expr>;<pos:position pos:line="38" pos:column="21"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">i2a_ASN1_INTEGER<pos:position pos:line="40" pos:column="21"/></name><argument_list pos:line="40" pos:column="21">(<argument><expr><call><name><name pos:line="40" pos:column="22">file<pos:position pos:line="40" pos:column="26"/></name><operator pos:line="40" pos:column="26">.<pos:position pos:line="40" pos:column="27"/></operator><name pos:line="40" pos:column="27">get<pos:position pos:line="40" pos:column="30"/></name></name><argument_list pos:line="40" pos:column="30">()<pos:position pos:line="40" pos:column="32"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="40" pos:column="34">increased_serial_ai<pos:position pos:line="40" pos:column="53"/></name><operator pos:line="40" pos:column="53">.<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="54">get<pos:position pos:line="40" pos:column="57"/></name></name><argument_list pos:line="40" pos:column="57">()<pos:position pos:line="40" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="41" pos:column="5">BIO_puts<pos:position pos:line="41" pos:column="13"/></name><argument_list pos:line="41" pos:column="13">(<argument><expr><call><name><name pos:line="41" pos:column="14">file<pos:position pos:line="41" pos:column="18"/></name><operator pos:line="41" pos:column="18">.<pos:position pos:line="41" pos:column="19"/></operator><name pos:line="41" pos:column="19">get<pos:position pos:line="41" pos:column="22"/></name></name><argument_list pos:line="41" pos:column="22">()<pos:position pos:line="41" pos:column="24"/></argument_list></call></expr></argument>,<argument><expr><literal type="string" pos:line="41" pos:column="25">"\n"<pos:position pos:line="41" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="31"/></expr_stmt>

    <return pos:line="43" pos:column="5">return <expr><call><name><name pos:line="43" pos:column="12">serial<pos:position pos:line="43" pos:column="18"/></name><operator pos:line="43" pos:column="18">.<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="19">release<pos:position pos:line="43" pos:column="26"/></name></name><argument_list pos:line="43" pos:column="26">()<pos:position pos:line="43" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="29"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

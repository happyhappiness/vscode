<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4455_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">ldap_simple_rebind<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">LDAP<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type> <name pos:line="2" pos:column="27">ld<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">LDAP_CONST<pos:position pos:line="2" pos:column="41"/></name> <name pos:line="2" pos:column="42">char<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">ber_tag_t<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">request<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="3" pos:column="20">ber_int_t<pos:position pos:line="3" pos:column="29"/></name></type> <name pos:line="3" pos:column="30">msgid<pos:position pos:line="3" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="3" pos:column="37">void<pos:position pos:line="3" pos:column="41"/></name> <modifier pos:line="3" pos:column="42">*<pos:position pos:line="3" pos:column="43"/></modifier></type><name pos:line="3" pos:column="43">params<pos:position pos:line="3" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="50"/></parameter_list>
<block pos:line="4" pos:column="1">{

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">ldap_creds<pos:position pos:line="6" pos:column="22"/></name></name> <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type><name pos:line="6" pos:column="24">cp<pos:position pos:line="6" pos:column="26"/></name> <init pos:line="6" pos:column="27">= <expr><operator pos:line="6" pos:column="29">(<pos:position pos:line="6" pos:column="30"/></operator>struct <name pos:line="6" pos:column="37">ldap_creds<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">*<pos:position pos:line="6" pos:column="49"/></operator><operator pos:line="6" pos:column="49">)<pos:position pos:line="6" pos:column="50"/></operator> <name pos:line="6" pos:column="51">params<pos:position pos:line="6" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="58"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">berval<pos:position pos:line="7" pos:column="18"/></name></name></type> <name pos:line="7" pos:column="19">cred<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">cp<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">pw<pos:position pos:line="8" pos:column="15"/></name></name></expr>)<pos:position pos:line="8" pos:column="16"/></condition><then pos:line="8" pos:column="16"> <block pos:line="8" pos:column="17">{
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">cred<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">.<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="14">bv_val<pos:position pos:line="9" pos:column="20"/></name></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <name><name pos:line="9" pos:column="23">cp<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">pw<pos:position pos:line="9" pos:column="29"/></name></name></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">cred<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">.<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="14">bv_len<pos:position pos:line="10" pos:column="20"/></name></name> <operator pos:line="10" pos:column="21">=<pos:position pos:line="10" pos:column="22"/></operator> <call><name pos:line="10" pos:column="23">strlen<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name><name pos:line="10" pos:column="30">cp<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">pw<pos:position pos:line="10" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <return pos:line="12" pos:column="5">return <expr><call><name pos:line="12" pos:column="12">ldap_sasl_bind_s<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">ld<pos:position pos:line="12" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="33">cp<pos:position pos:line="12" pos:column="35"/></name><operator pos:line="12" pos:column="35">-&gt;<pos:position pos:line="12" pos:column="40"/></operator><name pos:line="12" pos:column="37">dn<pos:position pos:line="12" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="41">LDAP_SASL_SIMPLE<pos:position pos:line="12" pos:column="57"/></name></expr></argument>, <argument><expr><operator pos:line="12" pos:column="59">&amp;<pos:position pos:line="12" pos:column="64"/></operator><name pos:line="12" pos:column="60">cred<pos:position pos:line="12" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="66">NULL<pos:position pos:line="12" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="72">NULL<pos:position pos:line="12" pos:column="76"/></name></expr></argument>,
                            <argument><expr><name pos:line="13" pos:column="29">NULL<pos:position pos:line="13" pos:column="33"/></name></expr></argument>)<pos:position pos:line="13" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="35"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3994_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">Xaction<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">updateTimeout<pos:position pos:line="1" pos:column="46"/></name></name><parameter_list pos:line="1" pos:column="46">()<pos:position pos:line="1" pos:column="48"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">reader<pos:position pos:line="3" pos:column="15"/></name> <operator pos:line="3" pos:column="16">!=<pos:position pos:line="3" pos:column="18"/></operator> <name pos:line="3" pos:column="19">NULL<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">||<pos:position pos:line="3" pos:column="26"/></operator> <name pos:line="3" pos:column="27">writer<pos:position pos:line="3" pos:column="33"/></name> <operator pos:line="3" pos:column="34">!=<pos:position pos:line="3" pos:column="36"/></operator> <name pos:line="3" pos:column="37">NULL<pos:position pos:line="3" pos:column="41"/></name></expr>)<pos:position pos:line="3" pos:column="42"/></condition><then pos:line="3" pos:column="42"> <block pos:line="3" pos:column="43">{
        <comment type="line" pos:line="4" pos:column="9">// restart the timeout before each I/O</comment>
        <comment type="line" pos:line="5" pos:column="9">// XXX: why does Config.Timeout lacks a write timeout?</comment>
        <comment type="line" pos:line="6" pos:column="9">// TODO: service bypass status may differ from that of a transaction</comment>
        <typedef pos:line="7" pos:column="9">typedef <type><name><name pos:line="7" pos:column="17">CommCbMemFunT<pos:position pos:line="7" pos:column="30"/></name><argument_list type="generic" pos:line="7" pos:column="30">&lt;<argument><expr><name><name pos:line="7" pos:column="31">Adaptation<pos:position pos:line="7" pos:column="41"/></name><operator pos:line="7" pos:column="41">::<pos:position pos:line="7" pos:column="43"/></operator><name pos:line="7" pos:column="43">Icap<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">::<pos:position pos:line="7" pos:column="49"/></operator><name pos:line="7" pos:column="49">Xaction<pos:position pos:line="7" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="58">CommTimeoutCbParams<pos:position pos:line="7" pos:column="77"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="81"/></argument_list></name></type> <name pos:line="7" pos:column="79">TimeoutDialer<pos:position pos:line="7" pos:column="92"/></name>;<pos:position pos:line="7" pos:column="93"/></typedef>
        <decl_stmt><decl><type><name><name pos:line="8" pos:column="9">AsyncCall<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">::<pos:position pos:line="8" pos:column="20"/></operator><name pos:line="8" pos:column="20">Pointer<pos:position pos:line="8" pos:column="27"/></name></name></type> <name pos:line="8" pos:column="28">call<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><call><name pos:line="8" pos:column="35">JobCallback<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">(<argument><expr><literal type="number" pos:line="8" pos:column="47">93<pos:position pos:line="8" pos:column="49"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="8" pos:column="50">5<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>,
                                              <argument><expr><name pos:line="9" pos:column="47">TimeoutDialer<pos:position pos:line="9" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="62">this<pos:position pos:line="9" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="68">Adaptation<pos:position pos:line="9" pos:column="78"/></name><operator pos:line="9" pos:column="78">::<pos:position pos:line="9" pos:column="80"/></operator><name pos:line="9" pos:column="80">Icap<pos:position pos:line="9" pos:column="84"/></name><operator pos:line="9" pos:column="84">::<pos:position pos:line="9" pos:column="86"/></operator><name pos:line="9" pos:column="86">Xaction<pos:position pos:line="9" pos:column="93"/></name><operator pos:line="9" pos:column="93">::<pos:position pos:line="9" pos:column="95"/></operator><name pos:line="9" pos:column="95">noteCommTimedout<pos:position pos:line="9" pos:column="111"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="112"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="113"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="11" pos:column="9">commSetTimeout<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name pos:line="11" pos:column="24">connection<pos:position pos:line="11" pos:column="34"/></name></expr></argument>,
                       <argument><expr><call><name><name pos:line="12" pos:column="24">TheConfig<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">.<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="34">io_timeout<pos:position pos:line="12" pos:column="44"/></name></name><argument_list pos:line="12" pos:column="44">(<argument><expr><call><name pos:line="12" pos:column="45">service<pos:position pos:line="12" pos:column="52"/></name><argument_list pos:line="12" pos:column="52">()<pos:position pos:line="12" pos:column="54"/></argument_list></call><operator pos:line="12" pos:column="54">.<pos:position pos:line="12" pos:column="55"/></operator><call><name pos:line="12" pos:column="55">cfg<pos:position pos:line="12" pos:column="58"/></name><argument_list pos:line="12" pos:column="58">()<pos:position pos:line="12" pos:column="60"/></argument_list></call><operator pos:line="12" pos:column="60">.<pos:position pos:line="12" pos:column="61"/></operator><name pos:line="12" pos:column="61">bypass<pos:position pos:line="12" pos:column="67"/></name></expr></argument>)<pos:position pos:line="12" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="12" pos:column="70">call<pos:position pos:line="12" pos:column="74"/></name></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then> <else pos:line="13" pos:column="7">else <block pos:line="13" pos:column="12">{
        <comment type="line" pos:line="14" pos:column="9">// clear timeout when there is no I/O</comment>
        <comment type="line" pos:line="15" pos:column="9">// Do we need a lifetime timeout?</comment>
        <decl_stmt><decl><type><name><name pos:line="16" pos:column="9">AsyncCall<pos:position pos:line="16" pos:column="18"/></name><operator pos:line="16" pos:column="18">::<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">Pointer<pos:position pos:line="16" pos:column="27"/></name></name></type> <name pos:line="16" pos:column="28">call<pos:position pos:line="16" pos:column="32"/></name> <init pos:line="16" pos:column="33">= <expr><name pos:line="16" pos:column="35">NULL<pos:position pos:line="16" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="40"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">commSetTimeout<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">connection<pos:position pos:line="17" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="36">-<pos:position pos:line="17" pos:column="37"/></operator><literal type="number" pos:line="17" pos:column="37">1<pos:position pos:line="17" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="40">call<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

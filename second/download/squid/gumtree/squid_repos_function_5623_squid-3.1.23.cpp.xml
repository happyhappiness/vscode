<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5623_squid-3.1.23.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">wsastrerror<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">int<pos:position pos:line="2" pos:column="16"/></name></type> <name pos:line="2" pos:column="17">err<pos:position pos:line="2" pos:column="20"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">xwsaerror_buf<pos:position pos:line="4" pos:column="30"/></name><index pos:line="4" pos:column="30">[<expr><name pos:line="4" pos:column="31">BUFSIZ<pos:position pos:line="4" pos:column="37"/></name></expr>]<pos:position pos:line="4" pos:column="38"/></index></name></decl>;<pos:position pos:line="4" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name></decl>, <decl><type ref="prev"/><name pos:line="5" pos:column="12">errind<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><operator pos:line="5" pos:column="21">-<pos:position pos:line="5" pos:column="22"/></operator><literal type="number" pos:line="5" pos:column="22">1<pos:position pos:line="5" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">err<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">==<pos:position pos:line="7" pos:column="15"/></operator> <literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr>)<pos:position pos:line="7" pos:column="18"/></condition><then pos:line="7" pos:column="18">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="string" pos:line="8" pos:column="16">"(0) No error."<pos:position pos:line="8" pos:column="31"/></literal></expr>;<pos:position pos:line="8" pos:column="32"/></return></block></then></if>
    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><expr><name pos:line="9" pos:column="10">i<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>;<pos:position pos:line="9" pos:column="16"/></init> <condition><expr><name pos:line="9" pos:column="17">i<pos:position pos:line="9" pos:column="18"/></name> <operator pos:line="9" pos:column="19">&lt;<pos:position pos:line="9" pos:column="23"/></operator> <sizeof pos:line="9" pos:column="21">sizeof<argument_list pos:line="9" pos:column="27">(<argument><expr><name pos:line="9" pos:column="28">_wsaerrtext<pos:position pos:line="9" pos:column="39"/></name></expr></argument>)<pos:position pos:line="9" pos:column="40"/></argument_list></sizeof> <operator pos:line="9" pos:column="41">/<pos:position pos:line="9" pos:column="42"/></operator> <sizeof pos:line="9" pos:column="43">sizeof<argument_list pos:line="9" pos:column="49">(<argument><expr pos:line="9" pos:column="50">struct <name pos:line="9" pos:column="57">_wsaerrtext<pos:position pos:line="9" pos:column="68"/></name></expr></argument>)<pos:position pos:line="9" pos:column="69"/></argument_list></sizeof></expr>;<pos:position pos:line="9" pos:column="70"/></condition> <incr><expr><name pos:line="9" pos:column="71">i<pos:position pos:line="9" pos:column="72"/></name><operator pos:line="9" pos:column="72">++<pos:position pos:line="9" pos:column="74"/></operator></expr></incr>)<pos:position pos:line="9" pos:column="75"/></control> <block pos:line="9" pos:column="76">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name><name pos:line="10" pos:column="13">_wsaerrtext<pos:position pos:line="10" pos:column="24"/></name><index pos:line="10" pos:column="24">[<expr><name pos:line="10" pos:column="25">i<pos:position pos:line="10" pos:column="26"/></name></expr>]<pos:position pos:line="10" pos:column="27"/></index></name><operator pos:line="10" pos:column="27">.<pos:position pos:line="10" pos:column="28"/></operator><name pos:line="10" pos:column="28">err<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">!=<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="35">err<pos:position pos:line="10" pos:column="38"/></name></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39">
            <block type="pseudo"><continue pos:line="11" pos:column="13">continue;<pos:position pos:line="11" pos:column="22"/></continue></block></then></if>
        <expr_stmt><expr><name pos:line="12" pos:column="9">errind<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">i<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
        <break pos:line="13" pos:column="9">break;<pos:position pos:line="13" pos:column="15"/></break>
    }<pos:position pos:line="14" pos:column="6"/></block></for>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">errind<pos:position pos:line="15" pos:column="15"/></name> <operator pos:line="15" pos:column="16">==<pos:position pos:line="15" pos:column="18"/></operator> <operator pos:line="15" pos:column="19">-<pos:position pos:line="15" pos:column="20"/></operator><literal type="number" pos:line="15" pos:column="20">1<pos:position pos:line="15" pos:column="21"/></literal></expr>)<pos:position pos:line="15" pos:column="22"/></condition><then pos:line="15" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="9">snprintf<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">xwsaerror_buf<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">BUFSIZ<pos:position pos:line="16" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="41">"Unknown"<pos:position pos:line="16" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt></block></then>
    <else pos:line="17" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="18" pos:column="9">snprintf<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name pos:line="18" pos:column="18">xwsaerror_buf<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="33">BUFSIZ<pos:position pos:line="18" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="41">"%s, %s"<pos:position pos:line="18" pos:column="49"/></literal></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="51">_wsaerrtext<pos:position pos:line="18" pos:column="62"/></name><index pos:line="18" pos:column="62">[<expr><name pos:line="18" pos:column="63">errind<pos:position pos:line="18" pos:column="69"/></name></expr>]<pos:position pos:line="18" pos:column="70"/></index></name><operator pos:line="18" pos:column="70">.<pos:position pos:line="18" pos:column="71"/></operator><name pos:line="18" pos:column="71">errconst<pos:position pos:line="18" pos:column="79"/></name></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="81">_wsaerrtext<pos:position pos:line="18" pos:column="92"/></name><index pos:line="18" pos:column="92">[<expr><name pos:line="18" pos:column="93">errind<pos:position pos:line="18" pos:column="99"/></name></expr>]<pos:position pos:line="18" pos:column="100"/></index></name><operator pos:line="18" pos:column="100">.<pos:position pos:line="18" pos:column="101"/></operator><name pos:line="18" pos:column="101">errdesc<pos:position pos:line="18" pos:column="108"/></name></expr></argument>)<pos:position pos:line="18" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="110"/></expr_stmt></block></else></if>
    <return pos:line="19" pos:column="5">return <expr><name pos:line="19" pos:column="12">xwsaerror_buf<pos:position pos:line="19" pos:column="25"/></name></expr>;<pos:position pos:line="19" pos:column="26"/></return>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

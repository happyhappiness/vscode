<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_675_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">BOOL<pos:position pos:line="1" pos:column="12"/></name> <name pos:line="1" pos:column="13">WINAPI<pos:position pos:line="1" pos:column="19"/></name></type>
<name pos:line="2" pos:column="1">wrap_setthreaderrormode<pos:position pos:line="2" pos:column="24"/></name> <parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">DWORD<pos:position pos:line="2" pos:column="31"/></name></type> <name pos:line="2" pos:column="32">mode<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">DWORD<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">oldmode<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="4" pos:column="3">HMODULE<pos:position pos:line="4" pos:column="10"/></name></type> <name pos:line="4" pos:column="11">kernel32<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><call><name pos:line="4" pos:column="22">GetModuleHandleA<pos:position pos:line="4" pos:column="38"/></name> <argument_list pos:line="4" pos:column="39">(<argument><expr><literal type="string" pos:line="4" pos:column="40">"kernel32.dll"<pos:position pos:line="4" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>
  <expr_stmt><expr><name pos:line="5" pos:column="3">setthreaderrormode<pos:position pos:line="5" pos:column="21"/></name>
    <operator pos:line="6" pos:column="5">=<pos:position pos:line="6" pos:column="6"/></operator> <operator pos:line="6" pos:column="7">(<pos:position pos:line="6" pos:column="8"/></operator><name pos:line="6" pos:column="8">setthreaderrormode_type<pos:position pos:line="6" pos:column="31"/></name> <operator pos:line="6" pos:column="32">*<pos:position pos:line="6" pos:column="33"/></operator><operator pos:line="6" pos:column="33">)<pos:position pos:line="6" pos:column="34"/></operator> <call><name pos:line="6" pos:column="35">GetProcAddress<pos:position pos:line="6" pos:column="49"/></name> <argument_list pos:line="6" pos:column="50">(<argument><expr><name pos:line="6" pos:column="51">kernel32<pos:position pos:line="6" pos:column="59"/></name></expr></argument>,
						  <argument><expr><literal type="string" pos:line="7" pos:column="51">"SetThreadErrorMode"<pos:position pos:line="7" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="73"/></expr_stmt>
  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">setthreaderrormode<pos:position pos:line="8" pos:column="26"/></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27">
    <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="5">setthreaderrormode<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">=<pos:position pos:line="9" pos:column="25"/></operator> <name pos:line="9" pos:column="26">fallback_setthreaderrormode<pos:position pos:line="9" pos:column="53"/></name></expr>;<pos:position pos:line="9" pos:column="54"/></expr_stmt></block></then></if>
  <return pos:line="10" pos:column="3">return <expr><call><name pos:line="10" pos:column="10">setthreaderrormode<pos:position pos:line="10" pos:column="28"/></name> <argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">mode<pos:position pos:line="10" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="36">oldmode<pos:position pos:line="10" pos:column="43"/></name></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

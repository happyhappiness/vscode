<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_240_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">HRESULT<pos:position pos:line="1" pos:column="8"/></name></type>
<name pos:line="2" pos:column="1">GetLPBYTEtoOctetString<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">VARIANT<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type> <name pos:line="2" pos:column="34">pVar<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">LPBYTE<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="49">ppByte<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HRESULT<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">hr<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><name pos:line="4" pos:column="18">E_FAIL<pos:position pos:line="4" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">void<pos:position pos:line="5" pos:column="9"/></name> <name pos:line="5" pos:column="10">HUGEP<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">pArray<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">long<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">lLBound<pos:position pos:line="6" pos:column="17"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="19">lUBound<pos:position pos:line="6" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="6" pos:column="28">cElements<pos:position pos:line="6" pos:column="37"/></name></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><operator pos:line="8" pos:column="10">!<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">pVar<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">)<pos:position pos:line="8" pos:column="16"/></operator> <operator pos:line="8" pos:column="17">||<pos:position pos:line="8" pos:column="19"/></operator> <operator pos:line="8" pos:column="20">(<pos:position pos:line="8" pos:column="21"/></operator><operator pos:line="8" pos:column="21">!<pos:position pos:line="8" pos:column="22"/></operator><name pos:line="8" pos:column="22">ppByte<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">)<pos:position pos:line="8" pos:column="29"/></operator></expr>)<pos:position pos:line="8" pos:column="30"/></condition><then pos:line="8" pos:column="30">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">E_INVALIDARG<pos:position pos:line="9" pos:column="28"/></name></expr>;<pos:position pos:line="9" pos:column="29"/></return></block></then></if>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">(<pos:position pos:line="10" pos:column="10"/></operator><name><name pos:line="10" pos:column="10">pVar<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">n1<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">n2<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">vt<pos:position pos:line="10" pos:column="24"/></name></name><operator pos:line="10" pos:column="24">)<pos:position pos:line="10" pos:column="25"/></operator> <operator pos:line="10" pos:column="26">!=<pos:position pos:line="10" pos:column="28"/></operator> <operator pos:line="10" pos:column="29">(<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">VT_UI1<pos:position pos:line="10" pos:column="36"/></name> <operator pos:line="10" pos:column="37">|<pos:position pos:line="10" pos:column="38"/></operator> <name pos:line="10" pos:column="39">VT_ARRAY<pos:position pos:line="10" pos:column="47"/></name><operator pos:line="10" pos:column="47">)<pos:position pos:line="10" pos:column="48"/></operator></expr>)<pos:position pos:line="10" pos:column="49"/></condition><then pos:line="10" pos:column="49">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">E_INVALIDARG<pos:position pos:line="11" pos:column="28"/></name></expr>;<pos:position pos:line="11" pos:column="29"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">hr<pos:position pos:line="13" pos:column="7"/></name> <operator pos:line="13" pos:column="8">=<pos:position pos:line="13" pos:column="9"/></operator> <call><name pos:line="13" pos:column="10">SafeArrayGetLBound<pos:position pos:line="13" pos:column="28"/></name><argument_list pos:line="13" pos:column="28">(<argument><expr><call><name pos:line="13" pos:column="29">V_ARRAY<pos:position pos:line="13" pos:column="36"/></name><argument_list pos:line="13" pos:column="36">(<argument><expr><name pos:line="13" pos:column="37">pVar<pos:position pos:line="13" pos:column="41"/></name></expr></argument>)<pos:position pos:line="13" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="44">1<pos:position pos:line="13" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="13" pos:column="47">&amp;<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="48">lLBound<pos:position pos:line="13" pos:column="55"/></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">hr<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">SafeArrayGetUBound<pos:position pos:line="14" pos:column="28"/></name><argument_list pos:line="14" pos:column="28">(<argument><expr><call><name pos:line="14" pos:column="29">V_ARRAY<pos:position pos:line="14" pos:column="36"/></name><argument_list pos:line="14" pos:column="36">(<argument><expr><name pos:line="14" pos:column="37">pVar<pos:position pos:line="14" pos:column="41"/></name></expr></argument>)<pos:position pos:line="14" pos:column="42"/></argument_list></call></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="44">1<pos:position pos:line="14" pos:column="45"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="47">&amp;<pos:position pos:line="14" pos:column="52"/></operator><name pos:line="14" pos:column="48">lUBound<pos:position pos:line="14" pos:column="55"/></name></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><name pos:line="16" pos:column="5">cElements<pos:position pos:line="16" pos:column="14"/></name> <operator pos:line="16" pos:column="15">=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">lUBound<pos:position pos:line="16" pos:column="24"/></name> <operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator> <name pos:line="16" pos:column="27">lLBound<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">+<pos:position pos:line="16" pos:column="36"/></operator> <literal type="number" pos:line="16" pos:column="37">1<pos:position pos:line="16" pos:column="38"/></literal></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name pos:line="17" pos:column="5">hr<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">SafeArrayAccessData<pos:position pos:line="17" pos:column="29"/></name><argument_list pos:line="17" pos:column="29">(<argument><expr><call><name pos:line="17" pos:column="30">V_ARRAY<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">pVar<pos:position pos:line="17" pos:column="42"/></name></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="17" pos:column="45">&amp;<pos:position pos:line="17" pos:column="50"/></operator><name pos:line="17" pos:column="46">pArray<pos:position pos:line="17" pos:column="52"/></name></expr></argument>)<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="54"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name pos:line="18" pos:column="9">SUCCEEDED<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">hr<pos:position pos:line="18" pos:column="21"/></name></expr></argument>)<pos:position pos:line="18" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="23"/></condition><then pos:line="18" pos:column="23"> <block pos:line="18" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">LPBYTE<pos:position pos:line="19" pos:column="15"/></name></type> <name pos:line="19" pos:column="16">pTemp<pos:position pos:line="19" pos:column="21"/></name> <init pos:line="19" pos:column="22">= <expr><operator pos:line="19" pos:column="24">(<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="25">LPBYTE<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">)<pos:position pos:line="19" pos:column="32"/></operator> <name pos:line="19" pos:column="33">pArray<pos:position pos:line="19" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="40"/></decl_stmt>
        <expr_stmt><expr><operator pos:line="20" pos:column="9">*<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">ppByte<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <operator pos:line="20" pos:column="19">(<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">LPBYTE<pos:position pos:line="20" pos:column="26"/></name><operator pos:line="20" pos:column="26">)<pos:position pos:line="20" pos:column="27"/></operator> <call><name pos:line="20" pos:column="28">CoTaskMemAlloc<pos:position pos:line="20" pos:column="42"/></name><argument_list pos:line="20" pos:column="42">(<argument><expr><name pos:line="20" pos:column="43">cElements<pos:position pos:line="20" pos:column="52"/></name></expr></argument>)<pos:position pos:line="20" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="54"/></expr_stmt>
        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">*<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">ppByte<pos:position pos:line="21" pos:column="20"/></name></expr>)<pos:position pos:line="21" pos:column="21"/></condition><then pos:line="21" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="13">memcpy<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><operator pos:line="22" pos:column="20">*<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">ppByte<pos:position pos:line="22" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="29">pTemp<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="36">cElements<pos:position pos:line="22" pos:column="45"/></name></expr></argument>)<pos:position pos:line="22" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="47"/></expr_stmt></block></then>
        <else pos:line="23" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="13">hr<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">=<pos:position pos:line="24" pos:column="17"/></operator> <name pos:line="24" pos:column="18">E_OUTOFMEMORY<pos:position pos:line="24" pos:column="31"/></name></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt></block></else></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">SafeArrayUnaccessData<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><call><name pos:line="26" pos:column="27">V_ARRAY<pos:position pos:line="26" pos:column="34"/></name><argument_list pos:line="26" pos:column="34">(<argument><expr><name pos:line="26" pos:column="35">pVar<pos:position pos:line="26" pos:column="39"/></name></expr></argument>)<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="42"/></expr_stmt>

    <return pos:line="28" pos:column="5">return <expr><name pos:line="28" pos:column="12">hr<pos:position pos:line="28" pos:column="14"/></name></expr>;<pos:position pos:line="28" pos:column="15"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

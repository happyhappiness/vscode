<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2243_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">switchToTunnel<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">HttpRequest<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">request<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="38">Comm<pos:position pos:line="2" pos:column="42"/></name><operator pos:line="2" pos:column="42">::<pos:position pos:line="2" pos:column="44"/></operator><name pos:line="2" pos:column="44">ConnectionPointer<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">&amp;<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="63">clientConn<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="75">Comm<pos:position pos:line="2" pos:column="79"/></name><operator pos:line="2" pos:column="79">::<pos:position pos:line="2" pos:column="81"/></operator><name pos:line="2" pos:column="81">ConnectionPointer<pos:position pos:line="2" pos:column="98"/></name></name> <modifier pos:line="2" pos:column="99">&amp;<pos:position pos:line="2" pos:column="104"/></modifier></type><name pos:line="2" pos:column="100">srvConn<pos:position pos:line="2" pos:column="107"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="108"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">26<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="18">"Revert to tunnel FD "<pos:position pos:line="4" pos:column="40"/></literal> <operator pos:line="4" pos:column="41">&lt;&lt;<pos:position pos:line="4" pos:column="49"/></operator> <name><name pos:line="4" pos:column="44">clientConn<pos:position pos:line="4" pos:column="54"/></name><operator pos:line="4" pos:column="54">-&gt;<pos:position pos:line="4" pos:column="59"/></operator><name pos:line="4" pos:column="56">fd<pos:position pos:line="4" pos:column="58"/></name></name> <operator pos:line="4" pos:column="59">&lt;&lt;<pos:position pos:line="4" pos:column="67"/></operator> <literal type="string" pos:line="4" pos:column="62">" with FD "<pos:position pos:line="4" pos:column="73"/></literal> <operator pos:line="4" pos:column="74">&lt;&lt;<pos:position pos:line="4" pos:column="82"/></operator> <name><name pos:line="4" pos:column="77">srvConn<pos:position pos:line="4" pos:column="84"/></name><operator pos:line="4" pos:column="84">-&gt;<pos:position pos:line="4" pos:column="89"/></operator><name pos:line="4" pos:column="86">fd<pos:position pos:line="4" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="90"/></expr_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Create state structure. */</comment>
    <expr_stmt><expr><operator pos:line="7" pos:column="5">++<pos:position pos:line="7" pos:column="7"/></operator><name><name pos:line="7" pos:column="7">statCounter<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">.<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">server<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">.<pos:position pos:line="7" pos:column="26"/></operator><name pos:line="7" pos:column="26">all<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">.<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">requests<pos:position pos:line="7" pos:column="38"/></name></name></expr>;<pos:position pos:line="7" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="8" pos:column="5">++<pos:position pos:line="8" pos:column="7"/></operator><name><name pos:line="8" pos:column="7">statCounter<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">server<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">other<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">.<pos:position pos:line="8" pos:column="32"/></operator><name pos:line="8" pos:column="32">requests<pos:position pos:line="8" pos:column="40"/></name></name></expr>;<pos:position pos:line="8" pos:column="41"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="10" pos:column="5">auto<pos:position pos:line="10" pos:column="9"/></name></type> <name pos:line="10" pos:column="10">conn<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><call><name><name pos:line="10" pos:column="17">request<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">clientConnectionManager<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">.<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="50">get<pos:position pos:line="10" pos:column="53"/></name></name><argument_list pos:line="10" pos:column="53">()<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="56"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">Must<pos:position pos:line="11" pos:column="9"/></name><argument_list pos:line="11" pos:column="9">(<argument><expr><name pos:line="11" pos:column="10">conn<pos:position pos:line="11" pos:column="14"/></name></expr></argument>)<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">Http<pos:position pos:line="12" pos:column="9"/></name><operator pos:line="12" pos:column="9">::<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="11">StreamPointer<pos:position pos:line="12" pos:column="24"/></name></name></type> <name pos:line="12" pos:column="25">context<pos:position pos:line="12" pos:column="32"/></name> <init pos:line="12" pos:column="33">= <expr><call><name><name pos:line="12" pos:column="35">conn<pos:position pos:line="12" pos:column="39"/></name><operator pos:line="12" pos:column="39">-&gt;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="41">pipeline<pos:position pos:line="12" pos:column="49"/></name><operator pos:line="12" pos:column="49">.<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="50">front<pos:position pos:line="12" pos:column="55"/></name></name><argument_list pos:line="12" pos:column="55">()<pos:position pos:line="12" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="58"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">Must<pos:position pos:line="13" pos:column="9"/></name><argument_list pos:line="13" pos:column="9">(<argument><expr><name pos:line="13" pos:column="10">context<pos:position pos:line="13" pos:column="17"/></name> <operator pos:line="13" pos:column="18">&amp;&amp;<pos:position pos:line="13" pos:column="28"/></operator> <name><name pos:line="13" pos:column="21">context<pos:position pos:line="13" pos:column="28"/></name><operator pos:line="13" pos:column="28">-&gt;<pos:position pos:line="13" pos:column="33"/></operator><name pos:line="13" pos:column="30">http<pos:position pos:line="13" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">26<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="16">3<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="19">request<pos:position pos:line="15" pos:column="26"/></name><operator pos:line="15" pos:column="26">-&gt;<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="28">method<pos:position pos:line="15" pos:column="34"/></name></name> <operator pos:line="15" pos:column="35">&lt;&lt;<pos:position pos:line="15" pos:column="43"/></operator> <literal type="string" pos:line="15" pos:column="38">" "<pos:position pos:line="15" pos:column="41"/></literal> <operator pos:line="15" pos:column="42">&lt;&lt;<pos:position pos:line="15" pos:column="50"/></operator> <name><name pos:line="15" pos:column="45">context<pos:position pos:line="15" pos:column="52"/></name><operator pos:line="15" pos:column="52">-&gt;<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="54">http<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">-&gt;<pos:position pos:line="15" pos:column="63"/></operator><name pos:line="15" pos:column="60">uri<pos:position pos:line="15" pos:column="63"/></name></name> <operator pos:line="15" pos:column="64">&lt;&lt;<pos:position pos:line="15" pos:column="72"/></operator> <literal type="string" pos:line="15" pos:column="67">" "<pos:position pos:line="15" pos:column="70"/></literal> <operator pos:line="15" pos:column="71">&lt;&lt;<pos:position pos:line="15" pos:column="79"/></operator> <name><name pos:line="15" pos:column="74">request<pos:position pos:line="15" pos:column="81"/></name><operator pos:line="15" pos:column="81">-&gt;<pos:position pos:line="15" pos:column="86"/></operator><name pos:line="15" pos:column="83">http_ver<pos:position pos:line="15" pos:column="91"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="93"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="17" pos:column="5">TunnelStateData<pos:position pos:line="17" pos:column="20"/></name> <modifier pos:line="17" pos:column="21">*<pos:position pos:line="17" pos:column="22"/></modifier></type><name pos:line="17" pos:column="22">tunnelState<pos:position pos:line="17" pos:column="33"/></name> <init pos:line="17" pos:column="34">= <expr><operator pos:line="17" pos:column="36">new<pos:position pos:line="17" pos:column="39"/></operator> <call><name pos:line="17" pos:column="40">TunnelStateData<pos:position pos:line="17" pos:column="55"/></name><argument_list pos:line="17" pos:column="55">(<argument><expr><name><name pos:line="17" pos:column="56">context<pos:position pos:line="17" pos:column="63"/></name><operator pos:line="17" pos:column="63">-&gt;<pos:position pos:line="17" pos:column="68"/></operator><name pos:line="17" pos:column="65">http<pos:position pos:line="17" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="71"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="19" pos:column="5">fd_table<pos:position pos:line="19" pos:column="13"/></name><index pos:line="19" pos:column="13">[<expr><name><name pos:line="19" pos:column="14">clientConn<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">fd<pos:position pos:line="19" pos:column="28"/></name></name></expr>]<pos:position pos:line="19" pos:column="29"/></index></name><operator pos:line="19" pos:column="29">.<pos:position pos:line="19" pos:column="30"/></operator><name pos:line="19" pos:column="30">read_method<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">=<pos:position pos:line="19" pos:column="43"/></operator> <operator pos:line="19" pos:column="44">&amp;<pos:position pos:line="19" pos:column="49"/></operator><name pos:line="19" pos:column="45">default_read_method<pos:position pos:line="19" pos:column="64"/></name></expr>;<pos:position pos:line="19" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">fd_table<pos:position pos:line="20" pos:column="13"/></name><index pos:line="20" pos:column="13">[<expr><name><name pos:line="20" pos:column="14">clientConn<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">-&gt;<pos:position pos:line="20" pos:column="29"/></operator><name pos:line="20" pos:column="26">fd<pos:position pos:line="20" pos:column="28"/></name></name></expr>]<pos:position pos:line="20" pos:column="29"/></index></name><operator pos:line="20" pos:column="29">.<pos:position pos:line="20" pos:column="30"/></operator><name pos:line="20" pos:column="30">write_method<pos:position pos:line="20" pos:column="42"/></name> <operator pos:line="20" pos:column="43">=<pos:position pos:line="20" pos:column="44"/></operator> <operator pos:line="20" pos:column="45">&amp;<pos:position pos:line="20" pos:column="50"/></operator><name pos:line="20" pos:column="46">default_write_method<pos:position pos:line="20" pos:column="66"/></name></expr>;<pos:position pos:line="20" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">request<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">hier<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">.<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="19">note<pos:position pos:line="22" pos:column="23"/></name></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">srvConn<pos:position pos:line="22" pos:column="31"/></name></expr></argument>, <argument><expr><call><name><name pos:line="22" pos:column="33">tunnelState<pos:position pos:line="22" pos:column="44"/></name><operator pos:line="22" pos:column="44">-&gt;<pos:position pos:line="22" pos:column="49"/></operator><name pos:line="22" pos:column="46">getHost<pos:position pos:line="22" pos:column="53"/></name></name><argument_list pos:line="22" pos:column="53">()<pos:position pos:line="22" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="57"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="24" pos:column="5">tunnelState<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">server<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">.<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">conn<pos:position pos:line="24" pos:column="29"/></name></name> <operator pos:line="24" pos:column="30">=<pos:position pos:line="24" pos:column="31"/></operator> <name pos:line="24" pos:column="32">srvConn<pos:position pos:line="24" pos:column="39"/></name></expr>;<pos:position pos:line="24" pos:column="40"/></expr_stmt>

<cpp:if pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">if<pos:position pos:line="26" pos:column="4"/></cpp:directive> <expr><name pos:line="26" pos:column="5">USE_DELAY_POOLS<pos:position pos:line="26" pos:column="20"/></name></expr></cpp:if>
    <comment type="block" pos:line="27" pos:column="5">/* no point using the delayIsNoDelay stuff since tunnel is nice and simple */</comment>
    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><call><name><name pos:line="28" pos:column="9">srvConn<pos:position pos:line="28" pos:column="16"/></name><operator pos:line="28" pos:column="16">-&gt;<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="18">getPeer<pos:position pos:line="28" pos:column="25"/></name></name><argument_list pos:line="28" pos:column="25">()<pos:position pos:line="28" pos:column="27"/></argument_list></call> <operator pos:line="28" pos:column="28">&amp;&amp;<pos:position pos:line="28" pos:column="38"/></operator> <call><name><name pos:line="28" pos:column="31">srvConn<pos:position pos:line="28" pos:column="38"/></name><operator pos:line="28" pos:column="38">-&gt;<pos:position pos:line="28" pos:column="43"/></operator><name pos:line="28" pos:column="40">getPeer<pos:position pos:line="28" pos:column="47"/></name></name><argument_list pos:line="28" pos:column="47">()<pos:position pos:line="28" pos:column="49"/></argument_list></call><operator pos:line="28" pos:column="49">-&gt;<pos:position pos:line="28" pos:column="54"/></operator><name><name pos:line="28" pos:column="51">options<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">.<pos:position pos:line="28" pos:column="59"/></operator><name pos:line="28" pos:column="59">no_delay<pos:position pos:line="28" pos:column="67"/></name></name></expr>)<pos:position pos:line="28" pos:column="68"/></condition><then pos:line="28" pos:column="68">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="29" pos:column="9">tunnelState<pos:position pos:line="29" pos:column="20"/></name><operator pos:line="29" pos:column="20">-&gt;<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="22">server<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">.<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="29">setDelayId<pos:position pos:line="29" pos:column="39"/></name></name><argument_list pos:line="29" pos:column="39">(<argument><expr><call><name><name pos:line="29" pos:column="40">DelayId<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">::<pos:position pos:line="29" pos:column="49"/></operator><name pos:line="29" pos:column="49">DelayClient<pos:position pos:line="29" pos:column="60"/></name></name><argument_list pos:line="29" pos:column="60">(<argument><expr><name><name pos:line="29" pos:column="61">context<pos:position pos:line="29" pos:column="68"/></name><operator pos:line="29" pos:column="68">-&gt;<pos:position pos:line="29" pos:column="73"/></operator><name pos:line="29" pos:column="70">http<pos:position pos:line="29" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="77"/></expr_stmt></block></then></if>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="32" pos:column="5">request<pos:position pos:line="32" pos:column="12"/></name><operator pos:line="32" pos:column="12">-&gt;<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="14">peer_host<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">=<pos:position pos:line="32" pos:column="25"/></operator> <ternary><condition><expr><call><name><name pos:line="32" pos:column="26">srvConn<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">getPeer<pos:position pos:line="32" pos:column="42"/></name></name><argument_list pos:line="32" pos:column="42">()<pos:position pos:line="32" pos:column="44"/></argument_list></call></expr> ?<pos:position pos:line="32" pos:column="46"/></condition><then pos:line="32" pos:column="46"> <expr><call><name><name pos:line="32" pos:column="47">srvConn<pos:position pos:line="32" pos:column="54"/></name><operator pos:line="32" pos:column="54">-&gt;<pos:position pos:line="32" pos:column="59"/></operator><name pos:line="32" pos:column="56">getPeer<pos:position pos:line="32" pos:column="63"/></name></name><argument_list pos:line="32" pos:column="63">()<pos:position pos:line="32" pos:column="65"/></argument_list></call><operator pos:line="32" pos:column="65">-&gt;<pos:position pos:line="32" pos:column="70"/></operator><name pos:line="32" pos:column="67">host<pos:position pos:line="32" pos:column="71"/></name></expr> <pos:position pos:line="32" pos:column="72"/></then><else pos:line="32" pos:column="72">: <expr><literal type="null" pos:line="32" pos:column="74">nullptr<pos:position pos:line="32" pos:column="81"/></literal></expr></else></ternary></expr>;<pos:position pos:line="32" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">comm_add_close_handler<pos:position pos:line="33" pos:column="27"/></name><argument_list pos:line="33" pos:column="27">(<argument><expr><name><name pos:line="33" pos:column="28">srvConn<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">fd<pos:position pos:line="33" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="41">tunnelServerClosed<pos:position pos:line="33" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="61">tunnelState<pos:position pos:line="33" pos:column="72"/></name></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="74"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">debugs<pos:position pos:line="35" pos:column="11"/></name><argument_list pos:line="35" pos:column="11">(<argument><expr><literal type="number" pos:line="35" pos:column="12">26<pos:position pos:line="35" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="16">4<pos:position pos:line="35" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="19">"determine post-connect handling pathway."<pos:position pos:line="35" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="63"/></expr_stmt>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><call><name><name pos:line="36" pos:column="9">srvConn<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">-&gt;<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="18">getPeer<pos:position pos:line="36" pos:column="25"/></name></name><argument_list pos:line="36" pos:column="25">()<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="28"/></condition><then pos:line="36" pos:column="28"> <block pos:line="36" pos:column="29">{
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">request<pos:position pos:line="37" pos:column="16"/></name><operator pos:line="37" pos:column="16">-&gt;<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="18">peer_login<pos:position pos:line="37" pos:column="28"/></name></name> <operator pos:line="37" pos:column="29">=<pos:position pos:line="37" pos:column="30"/></operator> <call><name><name pos:line="37" pos:column="31">srvConn<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">-&gt;<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="40">getPeer<pos:position pos:line="37" pos:column="47"/></name></name><argument_list pos:line="37" pos:column="47">()<pos:position pos:line="37" pos:column="49"/></argument_list></call><operator pos:line="37" pos:column="49">-&gt;<pos:position pos:line="37" pos:column="54"/></operator><name pos:line="37" pos:column="51">login<pos:position pos:line="37" pos:column="56"/></name></expr>;<pos:position pos:line="37" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">request<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">-&gt;<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="18">peer_domain<pos:position pos:line="38" pos:column="29"/></name></name> <operator pos:line="38" pos:column="30">=<pos:position pos:line="38" pos:column="31"/></operator> <call><name><name pos:line="38" pos:column="32">srvConn<pos:position pos:line="38" pos:column="39"/></name><operator pos:line="38" pos:column="39">-&gt;<pos:position pos:line="38" pos:column="44"/></operator><name pos:line="38" pos:column="41">getPeer<pos:position pos:line="38" pos:column="48"/></name></name><argument_list pos:line="38" pos:column="48">()<pos:position pos:line="38" pos:column="50"/></argument_list></call><operator pos:line="38" pos:column="50">-&gt;<pos:position pos:line="38" pos:column="55"/></operator><name pos:line="38" pos:column="52">domain<pos:position pos:line="38" pos:column="58"/></name></expr>;<pos:position pos:line="38" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">request<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">-&gt;<pos:position pos:line="39" pos:column="21"/></operator><name pos:line="39" pos:column="18">flags<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">.<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="24">auth_no_keytab<pos:position pos:line="39" pos:column="38"/></name></name> <operator pos:line="39" pos:column="39">=<pos:position pos:line="39" pos:column="40"/></operator> <call><name><name pos:line="39" pos:column="41">srvConn<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">getPeer<pos:position pos:line="39" pos:column="57"/></name></name><argument_list pos:line="39" pos:column="57">()<pos:position pos:line="39" pos:column="59"/></argument_list></call><operator pos:line="39" pos:column="59">-&gt;<pos:position pos:line="39" pos:column="64"/></operator><name><name pos:line="39" pos:column="61">options<pos:position pos:line="39" pos:column="68"/></name><operator pos:line="39" pos:column="68">.<pos:position pos:line="39" pos:column="69"/></operator><name pos:line="39" pos:column="69">auth_no_keytab<pos:position pos:line="39" pos:column="83"/></name></name></expr>;<pos:position pos:line="39" pos:column="84"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">request<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">flags<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">.<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">proxying<pos:position pos:line="40" pos:column="32"/></name></name> <operator pos:line="40" pos:column="33">=<pos:position pos:line="40" pos:column="34"/></operator> <operator pos:line="40" pos:column="35">!<pos:position pos:line="40" pos:column="36"/></operator><operator pos:line="40" pos:column="36">(<pos:position pos:line="40" pos:column="37"/></operator><call><name><name pos:line="40" pos:column="37">srvConn<pos:position pos:line="40" pos:column="44"/></name><operator pos:line="40" pos:column="44">-&gt;<pos:position pos:line="40" pos:column="49"/></operator><name pos:line="40" pos:column="46">getPeer<pos:position pos:line="40" pos:column="53"/></name></name><argument_list pos:line="40" pos:column="53">()<pos:position pos:line="40" pos:column="55"/></argument_list></call><operator pos:line="40" pos:column="55">-&gt;<pos:position pos:line="40" pos:column="60"/></operator><name><name pos:line="40" pos:column="57">options<pos:position pos:line="40" pos:column="64"/></name><operator pos:line="40" pos:column="64">.<pos:position pos:line="40" pos:column="65"/></operator><name pos:line="40" pos:column="65">originserver<pos:position pos:line="40" pos:column="77"/></name></name><operator pos:line="40" pos:column="77">)<pos:position pos:line="40" pos:column="78"/></operator></expr>;<pos:position pos:line="40" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then> <else pos:line="41" pos:column="7">else <block pos:line="41" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">request<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">peer_login<pos:position pos:line="42" pos:column="28"/></name></name> <operator pos:line="42" pos:column="29">=<pos:position pos:line="42" pos:column="30"/></operator> <literal type="null" pos:line="42" pos:column="31">nullptr<pos:position pos:line="42" pos:column="38"/></literal></expr>;<pos:position pos:line="42" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">request<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">peer_domain<pos:position pos:line="43" pos:column="29"/></name></name> <operator pos:line="43" pos:column="30">=<pos:position pos:line="43" pos:column="31"/></operator> <literal type="null" pos:line="43" pos:column="32">nullptr<pos:position pos:line="43" pos:column="39"/></literal></expr>;<pos:position pos:line="43" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="44" pos:column="9">request<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">flags<pos:position pos:line="44" pos:column="23"/></name><operator pos:line="44" pos:column="23">.<pos:position pos:line="44" pos:column="24"/></operator><name pos:line="44" pos:column="24">auth_no_keytab<pos:position pos:line="44" pos:column="38"/></name></name> <operator pos:line="44" pos:column="39">=<pos:position pos:line="44" pos:column="40"/></operator> <literal type="boolean" pos:line="44" pos:column="41">false<pos:position pos:line="44" pos:column="46"/></literal></expr>;<pos:position pos:line="44" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="45" pos:column="9">request<pos:position pos:line="45" pos:column="16"/></name><operator pos:line="45" pos:column="16">-&gt;<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="18">flags<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">.<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">proxying<pos:position pos:line="45" pos:column="32"/></name></name> <operator pos:line="45" pos:column="33">=<pos:position pos:line="45" pos:column="34"/></operator> <literal type="boolean" pos:line="45" pos:column="35">false<pos:position pos:line="45" pos:column="40"/></literal></expr>;<pos:position pos:line="45" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></else></if>

    <decl_stmt><decl><type><name><name pos:line="48" pos:column="5">AsyncCall<pos:position pos:line="48" pos:column="14"/></name><operator pos:line="48" pos:column="14">::<pos:position pos:line="48" pos:column="16"/></operator><name pos:line="48" pos:column="16">Pointer<pos:position pos:line="48" pos:column="23"/></name></name></type> <name pos:line="48" pos:column="24">timeoutCall<pos:position pos:line="48" pos:column="35"/></name> <init pos:line="48" pos:column="36">= <expr><call><name pos:line="48" pos:column="38">commCbCall<pos:position pos:line="48" pos:column="48"/></name><argument_list pos:line="48" pos:column="48">(<argument><expr><literal type="number" pos:line="48" pos:column="49">5<pos:position pos:line="48" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="52">4<pos:position pos:line="48" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="55">"tunnelTimeout"<pos:position pos:line="48" pos:column="70"/></literal></expr></argument>,
                                     <argument><expr><call><name pos:line="49" pos:column="38">CommTimeoutCbPtrFun<pos:position pos:line="49" pos:column="57"/></name><argument_list pos:line="49" pos:column="57">(<argument><expr><name pos:line="49" pos:column="58">tunnelTimeout<pos:position pos:line="49" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="73">tunnelState<pos:position pos:line="49" pos:column="84"/></name></expr></argument>)<pos:position pos:line="49" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="49" pos:column="87"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="50" pos:column="5">commSetConnTimeout<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">srvConn<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="50" pos:column="33">Config<pos:position pos:line="50" pos:column="39"/></name><operator pos:line="50" pos:column="39">.<pos:position pos:line="50" pos:column="40"/></operator><name pos:line="50" pos:column="40">Timeout<pos:position pos:line="50" pos:column="47"/></name><operator pos:line="50" pos:column="47">.<pos:position pos:line="50" pos:column="48"/></operator><name pos:line="50" pos:column="48">read<pos:position pos:line="50" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="54">timeoutCall<pos:position pos:line="50" pos:column="65"/></name></expr></argument>)<pos:position pos:line="50" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="51" pos:column="5">fd_table<pos:position pos:line="51" pos:column="13"/></name><index pos:line="51" pos:column="13">[<expr><name><name pos:line="51" pos:column="14">srvConn<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">-&gt;<pos:position pos:line="51" pos:column="26"/></operator><name pos:line="51" pos:column="23">fd<pos:position pos:line="51" pos:column="25"/></name></name></expr>]<pos:position pos:line="51" pos:column="26"/></index></name><operator pos:line="51" pos:column="26">.<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="27">read_method<pos:position pos:line="51" pos:column="38"/></name> <operator pos:line="51" pos:column="39">=<pos:position pos:line="51" pos:column="40"/></operator> <operator pos:line="51" pos:column="41">&amp;<pos:position pos:line="51" pos:column="46"/></operator><name pos:line="51" pos:column="42">default_read_method<pos:position pos:line="51" pos:column="61"/></name></expr>;<pos:position pos:line="51" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">fd_table<pos:position pos:line="52" pos:column="13"/></name><index pos:line="52" pos:column="13">[<expr><name><name pos:line="52" pos:column="14">srvConn<pos:position pos:line="52" pos:column="21"/></name><operator pos:line="52" pos:column="21">-&gt;<pos:position pos:line="52" pos:column="26"/></operator><name pos:line="52" pos:column="23">fd<pos:position pos:line="52" pos:column="25"/></name></name></expr>]<pos:position pos:line="52" pos:column="26"/></index></name><operator pos:line="52" pos:column="26">.<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="27">write_method<pos:position pos:line="52" pos:column="39"/></name> <operator pos:line="52" pos:column="40">=<pos:position pos:line="52" pos:column="41"/></operator> <operator pos:line="52" pos:column="42">&amp;<pos:position pos:line="52" pos:column="47"/></operator><name pos:line="52" pos:column="43">default_write_method<pos:position pos:line="52" pos:column="63"/></name></expr>;<pos:position pos:line="52" pos:column="64"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="54" pos:column="5">auto<pos:position pos:line="54" pos:column="9"/></name></type> <name pos:line="54" pos:column="10">ssl<pos:position pos:line="54" pos:column="13"/></name> <init pos:line="54" pos:column="14">= <expr><name><name pos:line="54" pos:column="16">fd_table<pos:position pos:line="54" pos:column="24"/></name><index pos:line="54" pos:column="24">[<expr><name><name pos:line="54" pos:column="25">srvConn<pos:position pos:line="54" pos:column="32"/></name><operator pos:line="54" pos:column="32">-&gt;<pos:position pos:line="54" pos:column="37"/></operator><name pos:line="54" pos:column="34">fd<pos:position pos:line="54" pos:column="36"/></name></name></expr>]<pos:position pos:line="54" pos:column="37"/></index></name><operator pos:line="54" pos:column="37">.<pos:position pos:line="54" pos:column="38"/></operator><call><name><name pos:line="54" pos:column="38">ssl<pos:position pos:line="54" pos:column="41"/></name><operator pos:line="54" pos:column="41">.<pos:position pos:line="54" pos:column="42"/></operator><name pos:line="54" pos:column="42">get<pos:position pos:line="54" pos:column="45"/></name></name><argument_list pos:line="54" pos:column="45">()<pos:position pos:line="54" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="54" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">assert<pos:position pos:line="55" pos:column="11"/></name><argument_list pos:line="55" pos:column="11">(<argument><expr><name pos:line="55" pos:column="12">ssl<pos:position pos:line="55" pos:column="15"/></name></expr></argument>)<pos:position pos:line="55" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="17"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="56" pos:column="5">BIO<pos:position pos:line="56" pos:column="8"/></name> <modifier pos:line="56" pos:column="9">*<pos:position pos:line="56" pos:column="10"/></modifier></type><name pos:line="56" pos:column="10">b<pos:position pos:line="56" pos:column="11"/></name> <init pos:line="56" pos:column="12">= <expr><call><name pos:line="56" pos:column="14">SSL_get_rbio<pos:position pos:line="56" pos:column="26"/></name><argument_list pos:line="56" pos:column="26">(<argument><expr><name pos:line="56" pos:column="27">ssl<pos:position pos:line="56" pos:column="30"/></name></expr></argument>)<pos:position pos:line="56" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="56" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="57" pos:column="5">Ssl<pos:position pos:line="57" pos:column="8"/></name><operator pos:line="57" pos:column="8">::<pos:position pos:line="57" pos:column="10"/></operator><name pos:line="57" pos:column="10">ServerBio<pos:position pos:line="57" pos:column="19"/></name></name> <modifier pos:line="57" pos:column="20">*<pos:position pos:line="57" pos:column="21"/></modifier></type><name pos:line="57" pos:column="21">srvBio<pos:position pos:line="57" pos:column="27"/></name> <init pos:line="57" pos:column="28">= <expr><cast type="static" pos:line="57" pos:column="30">static_cast<argument_list type="generic" pos:line="57" pos:column="41">&lt;<argument><expr><name><name pos:line="57" pos:column="42">Ssl<pos:position pos:line="57" pos:column="45"/></name><operator pos:line="57" pos:column="45">::<pos:position pos:line="57" pos:column="47"/></operator><name pos:line="57" pos:column="47">ServerBio<pos:position pos:line="57" pos:column="56"/></name></name> <operator pos:line="57" pos:column="57">*<pos:position pos:line="57" pos:column="58"/></operator></expr></argument>&gt;<pos:position pos:line="57" pos:column="62"/></argument_list><argument_list pos:line="57" pos:column="59">(<argument><expr><call><name pos:line="57" pos:column="60">BIO_get_data<pos:position pos:line="57" pos:column="72"/></name><argument_list pos:line="57" pos:column="72">(<argument><expr><name pos:line="57" pos:column="73">b<pos:position pos:line="57" pos:column="74"/></name></expr></argument>)<pos:position pos:line="57" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="57" pos:column="76"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="57" pos:column="77"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="58" pos:column="5">tunnelState<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">preReadServerData<pos:position pos:line="58" pos:column="35"/></name></name> <operator pos:line="58" pos:column="36">=<pos:position pos:line="58" pos:column="37"/></operator> <call><name><name pos:line="58" pos:column="38">srvBio<pos:position pos:line="58" pos:column="44"/></name><operator pos:line="58" pos:column="44">-&gt;<pos:position pos:line="58" pos:column="49"/></operator><name pos:line="58" pos:column="46">rBufData<pos:position pos:line="58" pos:column="54"/></name></name><argument_list pos:line="58" pos:column="54">()<pos:position pos:line="58" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="59" pos:column="5">tunnelStartShoveling<pos:position pos:line="59" pos:column="25"/></name><argument_list pos:line="59" pos:column="25">(<argument><expr><name pos:line="59" pos:column="26">tunnelState<pos:position pos:line="59" pos:column="37"/></name></expr></argument>)<pos:position pos:line="59" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="39"/></expr_stmt>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

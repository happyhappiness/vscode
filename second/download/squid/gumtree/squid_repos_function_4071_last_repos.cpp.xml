<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4071_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ACLEui64<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">match<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">ACLChecklist<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type><name pos:line="2" pos:column="31">cl<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ACLFilledChecklist<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">checklist<pos:position pos:line="4" pos:column="34"/></name> <init pos:line="4" pos:column="35">= <expr><call><name pos:line="4" pos:column="37">Filled<pos:position pos:line="4" pos:column="43"/></name><argument_list pos:line="4" pos:column="43">(<argument><expr><name pos:line="4" pos:column="44">cl<pos:position pos:line="4" pos:column="46"/></name></expr></argument>)<pos:position pos:line="4" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="48"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* IPv4 does not do EUI-64 (yet) */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name><name pos:line="7" pos:column="10">checklist<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">src_addr<pos:position pos:line="7" pos:column="29"/></name><operator pos:line="7" pos:column="29">.<pos:position pos:line="7" pos:column="30"/></operator><name pos:line="7" pos:column="30">isIPv6<pos:position pos:line="7" pos:column="36"/></name></name><argument_list pos:line="7" pos:column="36">()<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39"> <block pos:line="7" pos:column="40">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">14<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">3<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="23">"ACLEui64::match: IPv6 Required for EUI-64 Lookups. Skipping "<pos:position pos:line="8" pos:column="85"/></literal> <operator pos:line="8" pos:column="86">&lt;&lt;<pos:position pos:line="8" pos:column="94"/></operator> <name><name pos:line="8" pos:column="89">checklist<pos:position pos:line="8" pos:column="98"/></name><operator pos:line="8" pos:column="98">-&gt;<pos:position pos:line="8" pos:column="103"/></operator><name pos:line="8" pos:column="100">src_addr<pos:position pos:line="8" pos:column="108"/></name></name></expr></argument> )<pos:position pos:line="8" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="111"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>;<pos:position pos:line="9" pos:column="18"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="12" pos:column="5">Eui<pos:position pos:line="12" pos:column="8"/></name><operator pos:line="12" pos:column="8">::<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">Eui64<pos:position pos:line="12" pos:column="15"/></name></name></type> <name pos:line="12" pos:column="16">lookingFor<pos:position pos:line="12" pos:column="26"/></name></decl>;<pos:position pos:line="12" pos:column="27"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name><name pos:line="13" pos:column="9">lookingFor<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">.<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">lookup<pos:position pos:line="13" pos:column="26"/></name></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name><name pos:line="13" pos:column="27">checklist<pos:position pos:line="13" pos:column="36"/></name><operator pos:line="13" pos:column="36">-&gt;<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="38">src_addr<pos:position pos:line="13" pos:column="46"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48"> <block pos:line="13" pos:column="49">{
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">bool<pos:position pos:line="14" pos:column="13"/></name></type> <name pos:line="14" pos:column="14">found<pos:position pos:line="14" pos:column="19"/></name> <init pos:line="14" pos:column="20">= <expr><operator pos:line="14" pos:column="22">(<pos:position pos:line="14" pos:column="23"/></operator><call><name><name pos:line="14" pos:column="23">eui64Data<pos:position pos:line="14" pos:column="32"/></name><operator pos:line="14" pos:column="32">.<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="33">find<pos:position pos:line="14" pos:column="37"/></name></name><argument_list pos:line="14" pos:column="37">(<argument><expr><name pos:line="14" pos:column="38">lookingFor<pos:position pos:line="14" pos:column="48"/></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call> <operator pos:line="14" pos:column="50">!=<pos:position pos:line="14" pos:column="52"/></operator> <call><name><name pos:line="14" pos:column="53">eui64Data<pos:position pos:line="14" pos:column="62"/></name><operator pos:line="14" pos:column="62">.<pos:position pos:line="14" pos:column="63"/></operator><name pos:line="14" pos:column="63">end<pos:position pos:line="14" pos:column="66"/></name></name><argument_list pos:line="14" pos:column="66">()<pos:position pos:line="14" pos:column="68"/></argument_list></call><operator pos:line="14" pos:column="68">)<pos:position pos:line="14" pos:column="69"/></operator></expr></init></decl>;<pos:position pos:line="14" pos:column="70"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">28<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="20">3<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>,  <argument><expr><name><name pos:line="15" pos:column="24">checklist<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">-&gt;<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="35">src_addr<pos:position pos:line="15" pos:column="43"/></name></name> <operator pos:line="15" pos:column="44">&lt;&lt;<pos:position pos:line="15" pos:column="52"/></operator> <literal type="string" pos:line="15" pos:column="47">"' "<pos:position pos:line="15" pos:column="51"/></literal> <operator pos:line="15" pos:column="52">&lt;&lt;<pos:position pos:line="15" pos:column="60"/></operator> <operator pos:line="15" pos:column="55">(<pos:position pos:line="15" pos:column="56"/></operator><ternary><condition><expr><name pos:line="15" pos:column="56">found<pos:position pos:line="15" pos:column="61"/></name></expr> ?<pos:position pos:line="15" pos:column="63"/></condition><then pos:line="15" pos:column="63"> <expr><literal type="string" pos:line="15" pos:column="64">"found"<pos:position pos:line="15" pos:column="71"/></literal></expr> <pos:position pos:line="15" pos:column="72"/></then><else pos:line="15" pos:column="72">: <expr><literal type="string" pos:line="15" pos:column="74">"NOT found"<pos:position pos:line="15" pos:column="85"/></literal></expr></else></ternary><operator pos:line="15" pos:column="85">)<pos:position pos:line="15" pos:column="86"/></operator></expr></argument>)<pos:position pos:line="15" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="88"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">found<pos:position pos:line="16" pos:column="21"/></name></expr>;<pos:position pos:line="16" pos:column="22"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">28<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="16">3<pos:position pos:line="19" pos:column="17"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="19">checklist<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">-&gt;<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="30">src_addr<pos:position pos:line="19" pos:column="38"/></name></name> <operator pos:line="19" pos:column="39">&lt;&lt;<pos:position pos:line="19" pos:column="47"/></operator> <literal type="string" pos:line="19" pos:column="42">" NOT found"<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="56"/></expr_stmt>
    <return pos:line="20" pos:column="5">return <expr><literal type="number" pos:line="20" pos:column="12">0<pos:position pos:line="20" pos:column="13"/></literal></expr>;<pos:position pos:line="20" pos:column="14"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

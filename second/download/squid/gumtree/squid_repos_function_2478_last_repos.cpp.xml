<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2478_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreEntry<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">getPublicByRequestMethod<pos:position pos:line="2" pos:column="37"/></name></name>  <parameter_list pos:line="2" pos:column="39">(<parameter><decl><type><name pos:line="2" pos:column="40">StoreClient<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">aClient<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">HttpRequest<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type> <name pos:line="2" pos:column="76">request<pos:position pos:line="2" pos:column="83"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="85">const<pos:position pos:line="2" pos:column="90"/></specifier> <name pos:line="2" pos:column="91">HttpRequestMethod<pos:position pos:line="2" pos:column="108"/></name><modifier pos:line="2" pos:column="108">&amp;<pos:position pos:line="2" pos:column="113"/></modifier></type> <name pos:line="2" pos:column="110">method<pos:position pos:line="2" pos:column="116"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="117"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">aClient<pos:position pos:line="4" pos:column="20"/></name></expr></argument>)<pos:position pos:line="4" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="22"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StoreEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">result<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><call><name pos:line="5" pos:column="26">storeGetPublicByRequestMethod<pos:position pos:line="5" pos:column="55"/></name><argument_list pos:line="5" pos:column="55">( <argument><expr><name pos:line="5" pos:column="57">request<pos:position pos:line="5" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="66">method<pos:position pos:line="5" pos:column="72"/></name></expr></argument>)<pos:position pos:line="5" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="74"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">result<pos:position pos:line="7" pos:column="16"/></name></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="8" pos:column="9">aClient<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">created<pos:position pos:line="8" pos:column="25"/></name></name> <argument_list pos:line="8" pos:column="26">(<argument><expr><call><name><name pos:line="8" pos:column="27">NullStoreEntry<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">::<pos:position pos:line="8" pos:column="43"/></operator><name pos:line="8" pos:column="43">getInstance<pos:position pos:line="8" pos:column="54"/></name></name><argument_list pos:line="8" pos:column="54">()<pos:position pos:line="8" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt></block></then>
    <else pos:line="9" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="9">aClient<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">-&gt;<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="18">created<pos:position pos:line="10" pos:column="25"/></name></name> <argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">result<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt></block></else></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

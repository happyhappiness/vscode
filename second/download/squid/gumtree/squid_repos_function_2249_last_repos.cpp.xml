<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2249_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHeader<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">needUpdate<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">HttpHeader<pos:position pos:line="2" pos:column="34"/></name> <specifier pos:line="2" pos:column="35">const<pos:position pos:line="2" pos:column="40"/></specifier> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">fresh<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list> <specifier pos:line="2" pos:column="49">const<pos:position pos:line="2" pos:column="54"/></specifier>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><specifier pos:line="4" pos:column="10">const<pos:position pos:line="4" pos:column="15"/></specifier> <specifier pos:line="4" pos:column="16">auto<pos:position pos:line="4" pos:column="20"/></specifier></type> <name pos:line="4" pos:column="21">e<pos:position pos:line="4" pos:column="22"/></name><range pos:line="4" pos:column="22">: <expr><name><name pos:line="4" pos:column="24">fresh<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">-&gt;<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="31">entries<pos:position pos:line="4" pos:column="38"/></name></name></expr></range></decl></init>)<pos:position pos:line="4" pos:column="39"/></control> <block pos:line="4" pos:column="40">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><operator pos:line="5" pos:column="13">!<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">e<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">||<pos:position pos:line="5" pos:column="18"/></operator> <call><name pos:line="5" pos:column="19">skipUpdateHeader<pos:position pos:line="5" pos:column="35"/></name><argument_list pos:line="5" pos:column="35">(<argument><expr><name><name pos:line="5" pos:column="36">e<pos:position pos:line="5" pos:column="37"/></name><operator pos:line="5" pos:column="37">-&gt;<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="39">id<pos:position pos:line="5" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="43"/></condition><then pos:line="5" pos:column="43">
            <block type="pseudo"><continue pos:line="6" pos:column="13">continue;<pos:position pos:line="6" pos:column="22"/></continue></block></then></if>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">String<pos:position pos:line="7" pos:column="15"/></name></type> <name pos:line="7" pos:column="16">value<pos:position pos:line="7" pos:column="21"/></name></decl>;<pos:position pos:line="7" pos:column="22"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">name<pos:position pos:line="8" pos:column="25"/></name> <init pos:line="8" pos:column="26">= <expr><call><name><name pos:line="8" pos:column="28">e<pos:position pos:line="8" pos:column="29"/></name><operator pos:line="8" pos:column="29">-&gt;<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="31">name<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">.<pos:position pos:line="8" pos:column="36"/></operator><name pos:line="8" pos:column="36">termedBuf<pos:position pos:line="8" pos:column="45"/></name></name><argument_list pos:line="8" pos:column="45">()<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></decl_stmt>
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><operator pos:line="9" pos:column="13">!<pos:position pos:line="9" pos:column="14"/></operator><call><name pos:line="9" pos:column="14">hasNamed<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">(<argument><expr><name pos:line="9" pos:column="23">name<pos:position pos:line="9" pos:column="27"/></name></expr></argument>, <argument><expr><call><name pos:line="9" pos:column="29">strlen<pos:position pos:line="9" pos:column="35"/></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">name<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="9" pos:column="43">&amp;<pos:position pos:line="9" pos:column="48"/></operator><name pos:line="9" pos:column="44">value<pos:position pos:line="9" pos:column="49"/></name></expr></argument>)<pos:position pos:line="9" pos:column="50"/></argument_list></call> <operator pos:line="9" pos:column="51">||<pos:position pos:line="9" pos:column="53"/></operator>
                <operator pos:line="10" pos:column="17">(<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="18">value<pos:position pos:line="10" pos:column="23"/></name> <operator pos:line="10" pos:column="24">!=<pos:position pos:line="10" pos:column="26"/></operator> <call><name><name pos:line="10" pos:column="27">fresh<pos:position pos:line="10" pos:column="32"/></name><operator pos:line="10" pos:column="32">-&gt;<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="34">getByName<pos:position pos:line="10" pos:column="43"/></name></name><argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">name<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call><operator pos:line="10" pos:column="49">)<pos:position pos:line="10" pos:column="50"/></operator></expr>)<pos:position pos:line="10" pos:column="51"/></condition><then pos:line="10" pos:column="51">
            <block type="pseudo"><return pos:line="11" pos:column="13">return <expr><literal type="boolean" pos:line="11" pos:column="20">true<pos:position pos:line="11" pos:column="24"/></literal></expr>;<pos:position pos:line="11" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="12" pos:column="6"/></block></for>
    <return pos:line="13" pos:column="5">return <expr><literal type="boolean" pos:line="13" pos:column="12">false<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

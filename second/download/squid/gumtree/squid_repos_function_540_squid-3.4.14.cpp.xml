<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_540_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">get_token<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><specifier pos:line="2" pos:column="11">register<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">FILE<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">fp<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="30">register<pos:position pos:line="2" pos:column="38"/></specifier> <name pos:line="2" pos:column="39">char<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">token<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">register<pos:position pos:line="4" pos:column="13"/></specifier> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">ch<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">register<pos:position pos:line="5" pos:column="13"/></specifier> <name pos:line="5" pos:column="14">char<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">cp<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name pos:line="5" pos:column="25">token<pos:position pos:line="5" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">register<pos:position pos:line="6" pos:column="13"/></specifier> <name pos:line="6" pos:column="14">int<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">hash<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><literal type="number" pos:line="6" pos:column="25">0<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">register<pos:position pos:line="7" pos:column="13"/></specifier> <name><name pos:line="7" pos:column="14">struct<pos:position pos:line="7" pos:column="20"/></name> <name pos:line="7" pos:column="21">tok<pos:position pos:line="7" pos:column="24"/></name></name> <modifier pos:line="7" pos:column="25">*<pos:position pos:line="7" pos:column="26"/></modifier></type><name pos:line="7" pos:column="26">tp<pos:position pos:line="7" pos:column="28"/></name></decl>;<pos:position pos:line="7" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">cp<pos:position pos:line="9" pos:column="8"/></name> <operator pos:line="9" pos:column="9">=<pos:position pos:line="9" pos:column="10"/></operator> <literal type="number" pos:line="9" pos:column="11">0<pos:position pos:line="9" pos:column="12"/></literal></expr>;<pos:position pos:line="9" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="10" pos:column="5">ch<pos:position pos:line="10" pos:column="7"/></name> <operator pos:line="10" pos:column="8">=<pos:position pos:line="10" pos:column="9"/></operator> <operator pos:line="10" pos:column="10">(<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">unsigned<pos:position pos:line="10" pos:column="19"/></name> <name pos:line="10" pos:column="20">char<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">)<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">last<pos:position pos:line="10" pos:column="29"/></name></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
    <comment type="block" pos:line="11" pos:column="5">/* skip all white space */</comment>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><call><name pos:line="12" pos:column="12">xisspace<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">ch<pos:position pos:line="12" pos:column="23"/></name></expr></argument>)<pos:position pos:line="12" pos:column="24"/></argument_list></call> <operator pos:line="12" pos:column="25">&amp;&amp;<pos:position pos:line="12" pos:column="35"/></operator> <name pos:line="12" pos:column="28">ch<pos:position pos:line="12" pos:column="30"/></name> <operator pos:line="12" pos:column="31">!=<pos:position pos:line="12" pos:column="33"/></operator> <operator pos:line="12" pos:column="34">-<pos:position pos:line="12" pos:column="35"/></operator><literal type="number" pos:line="12" pos:column="35">1<pos:position pos:line="12" pos:column="36"/></literal></expr>)<pos:position pos:line="12" pos:column="37"/></condition> <block pos:line="12" pos:column="38">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">ch<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name pos:line="13" pos:column="14">getc<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">fp<pos:position pos:line="13" pos:column="21"/></name></expr></argument>)<pos:position pos:line="13" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="23"/></expr_stmt>
        <if pos:line="14" pos:column="9">if <condition pos:line="14" pos:column="12">(<expr><name pos:line="14" pos:column="13">ch<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">==<pos:position pos:line="14" pos:column="18"/></operator> <literal type="char" pos:line="14" pos:column="19">'\n'<pos:position pos:line="14" pos:column="23"/></literal></expr>)<pos:position pos:line="14" pos:column="24"/></condition><then pos:line="14" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="13">Line<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">++<pos:position pos:line="15" pos:column="19"/></operator></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></while>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">ch<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">==<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">-<pos:position pos:line="17" pos:column="16"/></operator><literal type="number" pos:line="17" pos:column="16">1<pos:position pos:line="17" pos:column="17"/></literal></expr>)<pos:position pos:line="17" pos:column="18"/></condition><then pos:line="17" pos:column="18">
        <block type="pseudo"><return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">ENDOFFILE<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></return></block></then></if>

    <comment type="block" pos:line="20" pos:column="5">/*
     * Accumulate characters until end of token is found.  Then attempt to match this
     * token as a reserved word.  If a match is found, return the type.  Else it is
     * a label.
     */</comment>
    <do pos:line="25" pos:column="5">do <block pos:line="25" pos:column="8">{
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">ch<pos:position pos:line="26" pos:column="15"/></name> <operator pos:line="26" pos:column="16">==<pos:position pos:line="26" pos:column="18"/></operator> <literal type="char" pos:line="26" pos:column="19">'\n'<pos:position pos:line="26" pos:column="23"/></literal></expr>)<pos:position pos:line="26" pos:column="24"/></condition><then pos:line="26" pos:column="24">
            <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="13">Line<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">++<pos:position pos:line="27" pos:column="19"/></operator></expr>;<pos:position pos:line="27" pos:column="20"/></expr_stmt></block></then></if>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name pos:line="28" pos:column="13">xisspace<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">ch<pos:position pos:line="28" pos:column="24"/></name></expr></argument>)<pos:position pos:line="28" pos:column="25"/></argument_list></call> <operator pos:line="28" pos:column="26">||<pos:position pos:line="28" pos:column="28"/></operator> <name pos:line="28" pos:column="29">ch<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">==<pos:position pos:line="28" pos:column="34"/></operator> <literal type="char" pos:line="28" pos:column="35">'('<pos:position pos:line="28" pos:column="38"/></literal> <operator pos:line="28" pos:column="39">||<pos:position pos:line="28" pos:column="41"/></operator> <name pos:line="28" pos:column="42">ch<pos:position pos:line="28" pos:column="44"/></name> <operator pos:line="28" pos:column="45">==<pos:position pos:line="28" pos:column="47"/></operator> <literal type="char" pos:line="28" pos:column="48">')'<pos:position pos:line="28" pos:column="51"/></literal> <operator pos:line="28" pos:column="52">||<pos:position pos:line="28" pos:column="54"/></operator>
                <name pos:line="29" pos:column="17">ch<pos:position pos:line="29" pos:column="19"/></name> <operator pos:line="29" pos:column="20">==<pos:position pos:line="29" pos:column="22"/></operator> <literal type="char" pos:line="29" pos:column="23">'{'<pos:position pos:line="29" pos:column="26"/></literal> <operator pos:line="29" pos:column="27">||<pos:position pos:line="29" pos:column="29"/></operator> <name pos:line="29" pos:column="30">ch<pos:position pos:line="29" pos:column="32"/></name> <operator pos:line="29" pos:column="33">==<pos:position pos:line="29" pos:column="35"/></operator> <literal type="char" pos:line="29" pos:column="36">'}'<pos:position pos:line="29" pos:column="39"/></literal> <operator pos:line="29" pos:column="40">||<pos:position pos:line="29" pos:column="42"/></operator> <name pos:line="29" pos:column="43">ch<pos:position pos:line="29" pos:column="45"/></name> <operator pos:line="29" pos:column="46">==<pos:position pos:line="29" pos:column="48"/></operator> <literal type="char" pos:line="29" pos:column="49">','<pos:position pos:line="29" pos:column="52"/></literal> <operator pos:line="29" pos:column="53">||<pos:position pos:line="29" pos:column="55"/></operator>
                <name pos:line="30" pos:column="17">ch<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">==<pos:position pos:line="30" pos:column="22"/></operator> <literal type="char" pos:line="30" pos:column="23">'"'<pos:position pos:line="30" pos:column="26"/></literal></expr>)<pos:position pos:line="30" pos:column="27"/></condition><then pos:line="30" pos:column="27"> <block pos:line="30" pos:column="28">{
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><operator pos:line="31" pos:column="17">!<pos:position pos:line="31" pos:column="18"/></operator><call><name pos:line="31" pos:column="18">xisspace<pos:position pos:line="31" pos:column="26"/></name><argument_list pos:line="31" pos:column="26">(<argument><expr><name pos:line="31" pos:column="27">ch<pos:position pos:line="31" pos:column="29"/></name></expr></argument>)<pos:position pos:line="31" pos:column="30"/></argument_list></call> <operator pos:line="31" pos:column="31">&amp;&amp;<pos:position pos:line="31" pos:column="41"/></operator> <operator pos:line="31" pos:column="34">*<pos:position pos:line="31" pos:column="35"/></operator><name pos:line="31" pos:column="35">token<pos:position pos:line="31" pos:column="40"/></name> <operator pos:line="31" pos:column="41">==<pos:position pos:line="31" pos:column="43"/></operator> <literal type="number" pos:line="31" pos:column="44">0<pos:position pos:line="31" pos:column="45"/></literal></expr>)<pos:position pos:line="31" pos:column="46"/></condition><then pos:line="31" pos:column="46"> <block pos:line="31" pos:column="47">{
                <expr_stmt><expr><name pos:line="32" pos:column="17">hash<pos:position pos:line="32" pos:column="21"/></name> <operator pos:line="32" pos:column="22">+=<pos:position pos:line="32" pos:column="24"/></operator> <name pos:line="32" pos:column="25">ch<pos:position pos:line="32" pos:column="27"/></name></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="33" pos:column="17">*<pos:position pos:line="33" pos:column="18"/></operator><name pos:line="33" pos:column="18">cp<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">++<pos:position pos:line="33" pos:column="22"/></operator> <operator pos:line="33" pos:column="23">=<pos:position pos:line="33" pos:column="24"/></operator> <name pos:line="33" pos:column="25">ch<pos:position pos:line="33" pos:column="27"/></name></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><name pos:line="34" pos:column="17">last<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <literal type="char" pos:line="34" pos:column="24">' '<pos:position pos:line="34" pos:column="27"/></literal></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
            }<pos:position pos:line="35" pos:column="14"/></block></then> <else pos:line="35" pos:column="15">else <block pos:line="35" pos:column="20">{
                <expr_stmt><expr><name pos:line="36" pos:column="17">last<pos:position pos:line="36" pos:column="21"/></name> <operator pos:line="36" pos:column="22">=<pos:position pos:line="36" pos:column="23"/></operator> <name pos:line="36" pos:column="24">ch<pos:position pos:line="36" pos:column="26"/></name></expr>;<pos:position pos:line="36" pos:column="27"/></expr_stmt>
            }<pos:position pos:line="37" pos:column="14"/></block></else></if>
            <expr_stmt><expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><name pos:line="38" pos:column="14">cp<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <literal type="char" pos:line="38" pos:column="19">'\0'<pos:position pos:line="38" pos:column="23"/></literal></expr>;<pos:position pos:line="38" pos:column="24"/></expr_stmt>

            <for pos:line="40" pos:column="13">for <control pos:line="40" pos:column="17">(<init><expr><name pos:line="40" pos:column="18">tp<pos:position pos:line="40" pos:column="20"/></name> <operator pos:line="40" pos:column="21">=<pos:position pos:line="40" pos:column="22"/></operator> <name><name pos:line="40" pos:column="23">buckets<pos:position pos:line="40" pos:column="30"/></name><index pos:line="40" pos:column="30">[<expr><call><name pos:line="40" pos:column="31">BUCKET<pos:position pos:line="40" pos:column="37"/></name><argument_list pos:line="40" pos:column="37">(<argument><expr><name pos:line="40" pos:column="38">hash<pos:position pos:line="40" pos:column="42"/></name></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>]<pos:position pos:line="40" pos:column="44"/></index></name></expr>;<pos:position pos:line="40" pos:column="45"/></init> <condition><expr><name pos:line="40" pos:column="46">tp<pos:position pos:line="40" pos:column="48"/></name></expr>;<pos:position pos:line="40" pos:column="49"/></condition> <incr><expr><name pos:line="40" pos:column="50">tp<pos:position pos:line="40" pos:column="52"/></name> <operator pos:line="40" pos:column="53">=<pos:position pos:line="40" pos:column="54"/></operator> <name><name pos:line="40" pos:column="55">tp<pos:position pos:line="40" pos:column="57"/></name><operator pos:line="40" pos:column="57">-&gt;<pos:position pos:line="40" pos:column="62"/></operator><name pos:line="40" pos:column="59">next<pos:position pos:line="40" pos:column="63"/></name></name></expr></incr>)<pos:position pos:line="40" pos:column="64"/></control> <block pos:line="40" pos:column="65">{
                <if pos:line="41" pos:column="17">if <condition pos:line="41" pos:column="20">(<expr><operator pos:line="41" pos:column="21">(<pos:position pos:line="41" pos:column="22"/></operator><name><name pos:line="41" pos:column="22">tp<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">-&gt;<pos:position pos:line="41" pos:column="29"/></operator><name pos:line="41" pos:column="26">hash<pos:position pos:line="41" pos:column="30"/></name></name> <operator pos:line="41" pos:column="31">==<pos:position pos:line="41" pos:column="33"/></operator> <name pos:line="41" pos:column="34">hash<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">)<pos:position pos:line="41" pos:column="39"/></operator> <operator pos:line="41" pos:column="40">&amp;&amp;<pos:position pos:line="41" pos:column="50"/></operator> <operator pos:line="41" pos:column="43">(<pos:position pos:line="41" pos:column="44"/></operator><call><name pos:line="41" pos:column="44">strcmp<pos:position pos:line="41" pos:column="50"/></name><argument_list pos:line="41" pos:column="50">(<argument><expr><name><name pos:line="41" pos:column="51">tp<pos:position pos:line="41" pos:column="53"/></name><operator pos:line="41" pos:column="53">-&gt;<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="55">name<pos:position pos:line="41" pos:column="59"/></name></name></expr></argument>, <argument><expr><name pos:line="41" pos:column="61">token<pos:position pos:line="41" pos:column="66"/></name></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call> <operator pos:line="41" pos:column="68">==<pos:position pos:line="41" pos:column="70"/></operator> <literal type="number" pos:line="41" pos:column="71">0<pos:position pos:line="41" pos:column="72"/></literal><operator pos:line="41" pos:column="72">)<pos:position pos:line="41" pos:column="73"/></operator></expr>)<pos:position pos:line="41" pos:column="74"/></condition><then pos:line="41" pos:column="74">
                    <block type="pseudo"><break pos:line="42" pos:column="21">break;<pos:position pos:line="42" pos:column="27"/></break></block></then></if>
            }<pos:position pos:line="43" pos:column="14"/></block></for>
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><name pos:line="44" pos:column="17">tp<pos:position pos:line="44" pos:column="19"/></name></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20"> <block pos:line="44" pos:column="21">{
                <if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name><name pos:line="45" pos:column="21">tp<pos:position pos:line="45" pos:column="23"/></name><operator pos:line="45" pos:column="23">-&gt;<pos:position pos:line="45" pos:column="28"/></operator><name pos:line="45" pos:column="25">token<pos:position pos:line="45" pos:column="30"/></name></name> <operator pos:line="45" pos:column="31">==<pos:position pos:line="45" pos:column="33"/></operator> <name pos:line="45" pos:column="34">CONTINUE<pos:position pos:line="45" pos:column="42"/></name></expr>)<pos:position pos:line="45" pos:column="43"/></condition><then pos:line="45" pos:column="43">
                    <block type="pseudo"><continue pos:line="46" pos:column="21">continue;<pos:position pos:line="46" pos:column="30"/></continue></block></then></if>
                <return pos:line="47" pos:column="17">return <expr><operator pos:line="47" pos:column="24">(<pos:position pos:line="47" pos:column="25"/></operator><name><name pos:line="47" pos:column="25">tp<pos:position pos:line="47" pos:column="27"/></name><operator pos:line="47" pos:column="27">-&gt;<pos:position pos:line="47" pos:column="32"/></operator><name pos:line="47" pos:column="29">token<pos:position pos:line="47" pos:column="34"/></name></name><operator pos:line="47" pos:column="34">)<pos:position pos:line="47" pos:column="35"/></operator></expr>;<pos:position pos:line="47" pos:column="36"/></return>
            }<pos:position pos:line="48" pos:column="14"/></block></then></if>
            <if pos:line="49" pos:column="13">if <condition pos:line="49" pos:column="16">(<expr><name><name pos:line="49" pos:column="17">token<pos:position pos:line="49" pos:column="22"/></name><index pos:line="49" pos:column="22">[<expr><literal type="number" pos:line="49" pos:column="23">0<pos:position pos:line="49" pos:column="24"/></literal></expr>]<pos:position pos:line="49" pos:column="25"/></index></name> <operator pos:line="49" pos:column="26">==<pos:position pos:line="49" pos:column="28"/></operator> <literal type="char" pos:line="49" pos:column="29">'-'<pos:position pos:line="49" pos:column="32"/></literal> <operator pos:line="49" pos:column="33">&amp;&amp;<pos:position pos:line="49" pos:column="43"/></operator> <name><name pos:line="49" pos:column="36">token<pos:position pos:line="49" pos:column="41"/></name><index pos:line="49" pos:column="41">[<expr><literal type="number" pos:line="49" pos:column="42">1<pos:position pos:line="49" pos:column="43"/></literal></expr>]<pos:position pos:line="49" pos:column="44"/></index></name> <operator pos:line="49" pos:column="45">==<pos:position pos:line="49" pos:column="47"/></operator> <literal type="char" pos:line="49" pos:column="48">'-'<pos:position pos:line="49" pos:column="51"/></literal></expr>)<pos:position pos:line="49" pos:column="52"/></condition><then pos:line="49" pos:column="52"> <block pos:line="49" pos:column="53">{
                <comment type="block" pos:line="50" pos:column="17">/* strip comment */</comment>
                <while pos:line="51" pos:column="17">while <condition pos:line="51" pos:column="23">(<expr><operator pos:line="51" pos:column="24">(<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="25">ch<pos:position pos:line="51" pos:column="27"/></name> <operator pos:line="51" pos:column="28">=<pos:position pos:line="51" pos:column="29"/></operator> <call><name pos:line="51" pos:column="30">getc<pos:position pos:line="51" pos:column="34"/></name><argument_list pos:line="51" pos:column="34">(<argument><expr><name pos:line="51" pos:column="35">fp<pos:position pos:line="51" pos:column="37"/></name></expr></argument>)<pos:position pos:line="51" pos:column="38"/></argument_list></call><operator pos:line="51" pos:column="38">)<pos:position pos:line="51" pos:column="39"/></operator> <operator pos:line="51" pos:column="40">!=<pos:position pos:line="51" pos:column="42"/></operator> <operator pos:line="51" pos:column="43">-<pos:position pos:line="51" pos:column="44"/></operator><literal type="number" pos:line="51" pos:column="44">1<pos:position pos:line="51" pos:column="45"/></literal></expr>)<pos:position pos:line="51" pos:column="46"/></condition>
                    <block type="pseudo"><if pos:line="52" pos:column="21">if <condition pos:line="52" pos:column="24">(<expr><name pos:line="52" pos:column="25">ch<pos:position pos:line="52" pos:column="27"/></name> <operator pos:line="52" pos:column="28">==<pos:position pos:line="52" pos:column="30"/></operator> <literal type="char" pos:line="52" pos:column="31">'\n'<pos:position pos:line="52" pos:column="35"/></literal></expr>)<pos:position pos:line="52" pos:column="36"/></condition><then pos:line="52" pos:column="36"> <block pos:line="52" pos:column="37">{
                        <expr_stmt><expr><name pos:line="53" pos:column="25">Line<pos:position pos:line="53" pos:column="29"/></name><operator pos:line="53" pos:column="29">++<pos:position pos:line="53" pos:column="31"/></operator></expr>;<pos:position pos:line="53" pos:column="32"/></expr_stmt>
                        <break pos:line="54" pos:column="25">break;<pos:position pos:line="54" pos:column="31"/></break>
                    }<pos:position pos:line="55" pos:column="22"/></block></then></if></block></while>
                <if pos:line="56" pos:column="17">if <condition pos:line="56" pos:column="20">(<expr><name pos:line="56" pos:column="21">ch<pos:position pos:line="56" pos:column="23"/></name> <operator pos:line="56" pos:column="24">==<pos:position pos:line="56" pos:column="26"/></operator> <operator pos:line="56" pos:column="27">-<pos:position pos:line="56" pos:column="28"/></operator><literal type="number" pos:line="56" pos:column="28">1<pos:position pos:line="56" pos:column="29"/></literal></expr>)<pos:position pos:line="56" pos:column="30"/></condition><then pos:line="56" pos:column="30">
                    <block type="pseudo"><return pos:line="57" pos:column="21">return <expr><name pos:line="57" pos:column="28">ENDOFFILE<pos:position pos:line="57" pos:column="37"/></name></expr>;<pos:position pos:line="57" pos:column="38"/></return></block></then></if>
                <expr_stmt><expr><name pos:line="58" pos:column="17">last<pos:position pos:line="58" pos:column="21"/></name> <operator pos:line="58" pos:column="22">=<pos:position pos:line="58" pos:column="23"/></operator> <name pos:line="58" pos:column="24">ch<pos:position pos:line="58" pos:column="26"/></name></expr>;<pos:position pos:line="58" pos:column="27"/></expr_stmt>
                <return pos:line="59" pos:column="17">return <expr><call><name pos:line="59" pos:column="24">get_token<pos:position pos:line="59" pos:column="33"/></name><argument_list pos:line="59" pos:column="33">(<argument><expr><name pos:line="59" pos:column="34">fp<pos:position pos:line="59" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="59" pos:column="38">token<pos:position pos:line="59" pos:column="43"/></name></expr></argument>)<pos:position pos:line="59" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="45"/></return>
            }<pos:position pos:line="60" pos:column="14"/></block></then></if>
            <for pos:line="61" pos:column="13">for <control pos:line="61" pos:column="17">(<init><expr><name pos:line="61" pos:column="18">cp<pos:position pos:line="61" pos:column="20"/></name> <operator pos:line="61" pos:column="21">=<pos:position pos:line="61" pos:column="22"/></operator> <name pos:line="61" pos:column="23">token<pos:position pos:line="61" pos:column="28"/></name></expr>;<pos:position pos:line="61" pos:column="29"/></init> <condition><expr><operator pos:line="61" pos:column="30">*<pos:position pos:line="61" pos:column="31"/></operator><name pos:line="61" pos:column="31">cp<pos:position pos:line="61" pos:column="33"/></name></expr>;<pos:position pos:line="61" pos:column="34"/></condition> <incr><expr><name pos:line="61" pos:column="35">cp<pos:position pos:line="61" pos:column="37"/></name><operator pos:line="61" pos:column="37">++<pos:position pos:line="61" pos:column="39"/></operator></expr></incr>)<pos:position pos:line="61" pos:column="40"/></control>
                <block type="pseudo"><if pos:line="62" pos:column="17">if <condition pos:line="62" pos:column="20">(<expr><operator pos:line="62" pos:column="21">!<pos:position pos:line="62" pos:column="22"/></operator><call><name pos:line="62" pos:column="22">xisdigit<pos:position pos:line="62" pos:column="30"/></name><argument_list pos:line="62" pos:column="30">(<argument><expr><operator pos:line="62" pos:column="31">*<pos:position pos:line="62" pos:column="32"/></operator><name pos:line="62" pos:column="32">cp<pos:position pos:line="62" pos:column="34"/></name></expr></argument>)<pos:position pos:line="62" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="36"/></condition><then pos:line="62" pos:column="36">
                    <block type="pseudo"><return pos:line="63" pos:column="21">return <expr><name pos:line="63" pos:column="28">LABEL<pos:position pos:line="63" pos:column="33"/></name></expr>;<pos:position pos:line="63" pos:column="34"/></return></block></then></if></block></for>
            <return pos:line="64" pos:column="13">return <expr><name pos:line="64" pos:column="20">NUMBER<pos:position pos:line="64" pos:column="26"/></name></expr>;<pos:position pos:line="64" pos:column="27"/></return>
        }<pos:position pos:line="65" pos:column="10"/></block></then> <else pos:line="65" pos:column="11">else <block pos:line="65" pos:column="16">{
            <expr_stmt><expr><name pos:line="66" pos:column="13">hash<pos:position pos:line="66" pos:column="17"/></name> <operator pos:line="66" pos:column="18">+=<pos:position pos:line="66" pos:column="20"/></operator> <name pos:line="66" pos:column="21">ch<pos:position pos:line="66" pos:column="23"/></name></expr>;<pos:position pos:line="66" pos:column="24"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="67" pos:column="13">*<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="14">cp<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">++<pos:position pos:line="67" pos:column="18"/></operator> <operator pos:line="67" pos:column="19">=<pos:position pos:line="67" pos:column="20"/></operator> <name pos:line="67" pos:column="21">ch<pos:position pos:line="67" pos:column="23"/></name></expr>;<pos:position pos:line="67" pos:column="24"/></expr_stmt>
            <if pos:line="68" pos:column="13">if <condition pos:line="68" pos:column="16">(<expr><name pos:line="68" pos:column="17">ch<pos:position pos:line="68" pos:column="19"/></name> <operator pos:line="68" pos:column="20">==<pos:position pos:line="68" pos:column="22"/></operator> <literal type="char" pos:line="68" pos:column="23">'\n'<pos:position pos:line="68" pos:column="27"/></literal></expr>)<pos:position pos:line="68" pos:column="28"/></condition><then pos:line="68" pos:column="28">
                <block type="pseudo"><expr_stmt><expr><name pos:line="69" pos:column="17">Line<pos:position pos:line="69" pos:column="21"/></name><operator pos:line="69" pos:column="21">++<pos:position pos:line="69" pos:column="23"/></operator></expr>;<pos:position pos:line="69" pos:column="24"/></expr_stmt></block></then></if>
        }<pos:position pos:line="70" pos:column="10"/></block></else></if>

    }<pos:position pos:line="72" pos:column="6"/></block> while <condition pos:line="72" pos:column="13">(<expr><operator pos:line="72" pos:column="14">(<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">ch<pos:position pos:line="72" pos:column="17"/></name> <operator pos:line="72" pos:column="18">=<pos:position pos:line="72" pos:column="19"/></operator> <call><name pos:line="72" pos:column="20">getc<pos:position pos:line="72" pos:column="24"/></name><argument_list pos:line="72" pos:column="24">(<argument><expr><name pos:line="72" pos:column="25">fp<pos:position pos:line="72" pos:column="27"/></name></expr></argument>)<pos:position pos:line="72" pos:column="28"/></argument_list></call><operator pos:line="72" pos:column="28">)<pos:position pos:line="72" pos:column="29"/></operator> <operator pos:line="72" pos:column="30">!=<pos:position pos:line="72" pos:column="32"/></operator> <operator pos:line="72" pos:column="33">-<pos:position pos:line="72" pos:column="34"/></operator><literal type="number" pos:line="72" pos:column="34">1<pos:position pos:line="72" pos:column="35"/></literal></expr>)<pos:position pos:line="72" pos:column="36"/></condition>;<pos:position pos:line="72" pos:column="37"/></do>
    <return pos:line="73" pos:column="5">return <expr><name pos:line="73" pos:column="12">ENDOFFILE<pos:position pos:line="73" pos:column="21"/></name></expr>;<pos:position pos:line="73" pos:column="22"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

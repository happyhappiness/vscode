<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2112_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">diskCombineWrites<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">_fde_disk<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">fdd<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/*
     * We need to combine multiple write requests on an FD's write
     * queue But only if we don't need to seek() in between them, ugh!
     * XXX This currently ignores any seeks (file_offset)
     */</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">fdd<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">write_q<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">!=<pos:position pos:line="10" pos:column="24"/></operator> <name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name> <operator pos:line="10" pos:column="30">&amp;&amp;<pos:position pos:line="10" pos:column="40"/></operator> <name><name pos:line="10" pos:column="33">fdd<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">-&gt;<pos:position pos:line="10" pos:column="41"/></operator><name pos:line="10" pos:column="38">write_q<pos:position pos:line="10" pos:column="45"/></name><operator pos:line="10" pos:column="45">-&gt;<pos:position pos:line="10" pos:column="50"/></operator><name pos:line="10" pos:column="47">next<pos:position pos:line="10" pos:column="51"/></name></name> <operator pos:line="10" pos:column="52">!=<pos:position pos:line="10" pos:column="54"/></operator> <name pos:line="10" pos:column="55">NULL<pos:position pos:line="10" pos:column="59"/></name></expr>)<pos:position pos:line="10" pos:column="60"/></condition><then pos:line="10" pos:column="60"> <block pos:line="10" pos:column="61">{
        <decl_stmt><decl><type><name pos:line="11" pos:column="9">int<pos:position pos:line="11" pos:column="12"/></name></type> <name pos:line="11" pos:column="13">len<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><literal type="number" pos:line="11" pos:column="19">0<pos:position pos:line="11" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>

        <for pos:line="13" pos:column="9">for <control pos:line="13" pos:column="13">(<init><decl><type><name pos:line="13" pos:column="14">dwrite_q<pos:position pos:line="13" pos:column="22"/></name> <modifier pos:line="13" pos:column="23">*<pos:position pos:line="13" pos:column="24"/></modifier></type><name pos:line="13" pos:column="24">q<pos:position pos:line="13" pos:column="25"/></name> <init pos:line="13" pos:column="26">= <expr><name><name pos:line="13" pos:column="28">fdd<pos:position pos:line="13" pos:column="31"/></name><operator pos:line="13" pos:column="31">-&gt;<pos:position pos:line="13" pos:column="36"/></operator><name pos:line="13" pos:column="33">write_q<pos:position pos:line="13" pos:column="40"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="41"/></init> <condition><expr><name pos:line="13" pos:column="42">q<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">!=<pos:position pos:line="13" pos:column="46"/></operator> <name pos:line="13" pos:column="47">NULL<pos:position pos:line="13" pos:column="51"/></name></expr>;<pos:position pos:line="13" pos:column="52"/></condition> <incr><expr><name pos:line="13" pos:column="53">q<pos:position pos:line="13" pos:column="54"/></name> <operator pos:line="13" pos:column="55">=<pos:position pos:line="13" pos:column="56"/></operator> <name><name pos:line="13" pos:column="57">q<pos:position pos:line="13" pos:column="58"/></name><operator pos:line="13" pos:column="58">-&gt;<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="60">next<pos:position pos:line="13" pos:column="64"/></name></name></expr></incr>)<pos:position pos:line="13" pos:column="65"/></control>
            <block type="pseudo"><expr_stmt><expr><name pos:line="14" pos:column="13">len<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">+=<pos:position pos:line="14" pos:column="19"/></operator> <name><name pos:line="14" pos:column="20">q<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">len<pos:position pos:line="14" pos:column="26"/></name></name> <operator pos:line="14" pos:column="27">-<pos:position pos:line="14" pos:column="28"/></operator> <name><name pos:line="14" pos:column="29">q<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">buf_offset<pos:position pos:line="14" pos:column="42"/></name></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt></block></for>

        <decl_stmt><decl><type><name pos:line="16" pos:column="9">dwrite_q<pos:position pos:line="16" pos:column="17"/></name> <modifier pos:line="16" pos:column="18">*<pos:position pos:line="16" pos:column="19"/></modifier></type><name pos:line="16" pos:column="19">wq<pos:position pos:line="16" pos:column="21"/></name> <init pos:line="16" pos:column="22">= <expr><operator pos:line="16" pos:column="24">(<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">dwrite_q<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">*<pos:position pos:line="16" pos:column="35"/></operator><operator pos:line="16" pos:column="35">)<pos:position pos:line="16" pos:column="36"/></operator><call><name pos:line="16" pos:column="36">memAllocate<pos:position pos:line="16" pos:column="47"/></name><argument_list pos:line="16" pos:column="47">(<argument><expr><name pos:line="16" pos:column="48">MEM_DWRITE_Q<pos:position pos:line="16" pos:column="60"/></name></expr></argument>)<pos:position pos:line="16" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="62"/></decl_stmt>

        <expr_stmt><expr><name><name pos:line="18" pos:column="9">wq<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">-&gt;<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="13">buf<pos:position pos:line="18" pos:column="16"/></name></name> <operator pos:line="18" pos:column="17">=<pos:position pos:line="18" pos:column="18"/></operator> <operator pos:line="18" pos:column="19">(<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">char<pos:position pos:line="18" pos:column="24"/></name> <operator pos:line="18" pos:column="25">*<pos:position pos:line="18" pos:column="26"/></operator><operator pos:line="18" pos:column="26">)<pos:position pos:line="18" pos:column="27"/></operator><call><name pos:line="18" pos:column="27">xmalloc<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">(<argument><expr><name pos:line="18" pos:column="35">len<pos:position pos:line="18" pos:column="38"/></name></expr></argument>)<pos:position pos:line="18" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="40"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="20" pos:column="9">wq<pos:position pos:line="20" pos:column="11"/></name><operator pos:line="20" pos:column="11">-&gt;<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="13">len<pos:position pos:line="20" pos:column="16"/></name></name> <operator pos:line="20" pos:column="17">=<pos:position pos:line="20" pos:column="18"/></operator> <literal type="number" pos:line="20" pos:column="19">0<pos:position pos:line="20" pos:column="20"/></literal></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="22" pos:column="9">wq<pos:position pos:line="22" pos:column="11"/></name><operator pos:line="22" pos:column="11">-&gt;<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="13">buf_offset<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="24" pos:column="9">wq<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">next<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <name pos:line="24" pos:column="20">NULL<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="26" pos:column="9">wq<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">-&gt;<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="13">free_func<pos:position pos:line="26" pos:column="22"/></name></name> <operator pos:line="26" pos:column="23">=<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="25">cxx_xfree<pos:position pos:line="26" pos:column="34"/></name></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>

        <while pos:line="28" pos:column="9">while <condition pos:line="28" pos:column="15">(<expr><name><name pos:line="28" pos:column="16">fdd<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">-&gt;<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="21">write_q<pos:position pos:line="28" pos:column="28"/></name></name> <operator pos:line="28" pos:column="29">!=<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="32">NULL<pos:position pos:line="28" pos:column="36"/></name></expr>)<pos:position pos:line="28" pos:column="37"/></condition> <block pos:line="28" pos:column="38">{
            <decl_stmt><decl><type><name pos:line="29" pos:column="13">dwrite_q<pos:position pos:line="29" pos:column="21"/></name> <modifier pos:line="29" pos:column="22">*<pos:position pos:line="29" pos:column="23"/></modifier></type><name pos:line="29" pos:column="23">q<pos:position pos:line="29" pos:column="24"/></name> <init pos:line="29" pos:column="25">= <expr><name><name pos:line="29" pos:column="27">fdd<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">write_q<pos:position pos:line="29" pos:column="39"/></name></name></expr></init></decl>;<pos:position pos:line="29" pos:column="40"/></decl_stmt>

            <expr_stmt><expr><name pos:line="31" pos:column="13">len<pos:position pos:line="31" pos:column="16"/></name> <operator pos:line="31" pos:column="17">=<pos:position pos:line="31" pos:column="18"/></operator> <name><name pos:line="31" pos:column="19">q<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">-&gt;<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="22">len<pos:position pos:line="31" pos:column="25"/></name></name> <operator pos:line="31" pos:column="26">-<pos:position pos:line="31" pos:column="27"/></operator> <name><name pos:line="31" pos:column="28">q<pos:position pos:line="31" pos:column="29"/></name><operator pos:line="31" pos:column="29">-&gt;<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="31">buf_offset<pos:position pos:line="31" pos:column="41"/></name></name></expr>;<pos:position pos:line="31" pos:column="42"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">memcpy<pos:position pos:line="32" pos:column="19"/></name><argument_list pos:line="32" pos:column="19">(<argument><expr><name><name pos:line="32" pos:column="20">wq<pos:position pos:line="32" pos:column="22"/></name><operator pos:line="32" pos:column="22">-&gt;<pos:position pos:line="32" pos:column="27"/></operator><name pos:line="32" pos:column="24">buf<pos:position pos:line="32" pos:column="27"/></name></name> <operator pos:line="32" pos:column="28">+<pos:position pos:line="32" pos:column="29"/></operator> <name><name pos:line="32" pos:column="30">wq<pos:position pos:line="32" pos:column="32"/></name><operator pos:line="32" pos:column="32">-&gt;<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="34">len<pos:position pos:line="32" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="39">q<pos:position pos:line="32" pos:column="40"/></name><operator pos:line="32" pos:column="40">-&gt;<pos:position pos:line="32" pos:column="45"/></operator><name pos:line="32" pos:column="42">buf<pos:position pos:line="32" pos:column="45"/></name></name> <operator pos:line="32" pos:column="46">+<pos:position pos:line="32" pos:column="47"/></operator> <name><name pos:line="32" pos:column="48">q<pos:position pos:line="32" pos:column="49"/></name><operator pos:line="32" pos:column="49">-&gt;<pos:position pos:line="32" pos:column="54"/></operator><name pos:line="32" pos:column="51">buf_offset<pos:position pos:line="32" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="63">len<pos:position pos:line="32" pos:column="66"/></name></expr></argument>)<pos:position pos:line="32" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="33" pos:column="13">wq<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">len<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">+=<pos:position pos:line="33" pos:column="23"/></operator> <name pos:line="33" pos:column="24">len<pos:position pos:line="33" pos:column="27"/></name></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="34" pos:column="13">fdd<pos:position pos:line="34" pos:column="16"/></name><operator pos:line="34" pos:column="16">-&gt;<pos:position pos:line="34" pos:column="21"/></operator><name pos:line="34" pos:column="18">write_q<pos:position pos:line="34" pos:column="25"/></name></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <name><name pos:line="34" pos:column="28">q<pos:position pos:line="34" pos:column="29"/></name><operator pos:line="34" pos:column="29">-&gt;<pos:position pos:line="34" pos:column="34"/></operator><name pos:line="34" pos:column="31">next<pos:position pos:line="34" pos:column="35"/></name></name></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>

            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name><name pos:line="36" pos:column="17">q<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">free_func<pos:position pos:line="36" pos:column="29"/></name></name></expr>)<pos:position pos:line="36" pos:column="30"/></condition><then pos:line="36" pos:column="30">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="37" pos:column="17">q<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">-&gt;<pos:position pos:line="37" pos:column="23"/></operator><name pos:line="37" pos:column="20">free_func<pos:position pos:line="37" pos:column="29"/></name></name><argument_list pos:line="37" pos:column="29">(<argument><expr><name><name pos:line="37" pos:column="30">q<pos:position pos:line="37" pos:column="31"/></name><operator pos:line="37" pos:column="31">-&gt;<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="33">buf<pos:position pos:line="37" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="38"/></expr_stmt></block></then></if>

            <expr_stmt><expr><call><name pos:line="39" pos:column="13">memFree<pos:position pos:line="39" pos:column="20"/></name><argument_list pos:line="39" pos:column="20">(<argument><expr><name pos:line="39" pos:column="21">q<pos:position pos:line="39" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="24">MEM_DWRITE_Q<pos:position pos:line="39" pos:column="36"/></name></expr></argument>)<pos:position pos:line="39" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></while><empty_stmt pos:line="40" pos:column="10">;<pos:position pos:line="40" pos:column="11"/></empty_stmt>

        <expr_stmt><expr><name><name pos:line="42" pos:column="9">fdd<pos:position pos:line="42" pos:column="12"/></name><operator pos:line="42" pos:column="12">-&gt;<pos:position pos:line="42" pos:column="17"/></operator><name pos:line="42" pos:column="14">write_q_tail<pos:position pos:line="42" pos:column="26"/></name></name> <operator pos:line="42" pos:column="27">=<pos:position pos:line="42" pos:column="28"/></operator> <name pos:line="42" pos:column="29">wq<pos:position pos:line="42" pos:column="31"/></name></expr>;<pos:position pos:line="42" pos:column="32"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="44" pos:column="9">fdd<pos:position pos:line="44" pos:column="12"/></name><operator pos:line="44" pos:column="12">-&gt;<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="14">write_q<pos:position pos:line="44" pos:column="21"/></name></name> <operator pos:line="44" pos:column="22">=<pos:position pos:line="44" pos:column="23"/></operator> <name pos:line="44" pos:column="24">wq<pos:position pos:line="44" pos:column="26"/></name></expr>;<pos:position pos:line="44" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>
}<pos:position pos:line="46" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4974_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSStoreState<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">doWrite<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">79<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <name pos:line="4" pos:column="27">this<pos:position pos:line="4" pos:column="31"/></name> <operator pos:line="4" pos:column="32">&lt;&lt;<pos:position pos:line="4" pos:column="40"/></operator> <literal type="string" pos:line="4" pos:column="35">" UFSStoreState::doWrite"<pos:position pos:line="4" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="62"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><call><name><name pos:line="6" pos:column="12">theFile<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">-&gt;<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="21">canWrite<pos:position pos:line="6" pos:column="29"/></name></name><argument_list pos:line="6" pos:column="29">()<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="33"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">_queued_write<pos:position pos:line="8" pos:column="18"/></name> <modifier pos:line="8" pos:column="19">*<pos:position pos:line="8" pos:column="20"/></modifier></type><name pos:line="8" pos:column="20">q<pos:position pos:line="8" pos:column="21"/></name> <init pos:line="8" pos:column="22">= <expr><operator pos:line="8" pos:column="24">(<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="25">_queued_write<pos:position pos:line="8" pos:column="38"/></name> <operator pos:line="8" pos:column="39">*<pos:position pos:line="8" pos:column="40"/></operator><operator pos:line="8" pos:column="40">)<pos:position pos:line="8" pos:column="41"/></operator><call><name pos:line="8" pos:column="41">linklistShift<pos:position pos:line="8" pos:column="54"/></name><argument_list pos:line="8" pos:column="54">(<argument><expr><operator pos:line="8" pos:column="55">&amp;<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="56">pending_writes<pos:position pos:line="8" pos:column="70"/></name></expr></argument>)<pos:position pos:line="8" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="72"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">q<pos:position pos:line="10" pos:column="10"/></name> <operator pos:line="10" pos:column="11">==<pos:position pos:line="10" pos:column="13"/></operator> <name pos:line="10" pos:column="14">NULL<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19"> <block pos:line="10" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">79<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">3<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="23">HERE<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">&lt;&lt;<pos:position pos:line="11" pos:column="36"/></operator> <name pos:line="11" pos:column="31">this<pos:position pos:line="11" pos:column="35"/></name> <operator pos:line="11" pos:column="36">&lt;&lt;<pos:position pos:line="11" pos:column="44"/></operator> <literal type="string" pos:line="11" pos:column="39">" UFSStoreState::doWrite queue is empty"<pos:position pos:line="11" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="81"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name><name pos:line="15" pos:column="9">theFile<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">error<pos:position pos:line="15" pos:column="23"/></name></name><argument_list pos:line="15" pos:column="23">()<pos:position pos:line="15" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="26"/></condition><then pos:line="15" pos:column="26"> <block pos:line="15" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">79<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="20">DBG_IMPORTANT<pos:position pos:line="16" pos:column="33"/></name></expr></argument>,<argument><expr><name pos:line="16" pos:column="34">HERE<pos:position pos:line="16" pos:column="38"/></name> <operator pos:line="16" pos:column="39">&lt;&lt;<pos:position pos:line="16" pos:column="47"/></operator> <literal type="string" pos:line="16" pos:column="42">"avoid write on theFile with error"<pos:position pos:line="16" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">79<pos:position pos:line="17" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="17" pos:column="19">3<pos:position pos:line="17" pos:column="20"/></literal></expr></argument>,<argument><expr><name pos:line="17" pos:column="21">HERE<pos:position pos:line="17" pos:column="25"/></name> <operator pos:line="17" pos:column="26">&lt;&lt;<pos:position pos:line="17" pos:column="34"/></operator> <literal type="string" pos:line="17" pos:column="29">"calling free_func for "<pos:position pos:line="17" pos:column="53"/></literal> <operator pos:line="17" pos:column="54">&lt;&lt;<pos:position pos:line="17" pos:column="62"/></operator> <operator pos:line="17" pos:column="57">(<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="58">void<pos:position pos:line="17" pos:column="62"/></name><operator pos:line="17" pos:column="62">*<pos:position pos:line="17" pos:column="63"/></operator><operator pos:line="17" pos:column="63">)<pos:position pos:line="17" pos:column="64"/></operator> <name><name pos:line="17" pos:column="65">q<pos:position pos:line="17" pos:column="66"/></name><operator pos:line="17" pos:column="66">-&gt;<pos:position pos:line="17" pos:column="71"/></operator><name pos:line="17" pos:column="68">buf<pos:position pos:line="17" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="73"/></expr_stmt>
        <comment type="block" pos:line="18" pos:column="9">/*
         * DPW 2006-05-24
         * Note "free_func" is memNodeWriteComplete(), which doesn't
         * really free the memory.  Instead it clears the node's
         * write_pending flag.
         */</comment>
        <expr_stmt><expr><call><name><name pos:line="24" pos:column="9">q<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">free_func<pos:position pos:line="24" pos:column="21"/></name></name><argument_list pos:line="24" pos:column="21">(<argument><expr><operator pos:line="24" pos:column="22">(<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">void<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">*<pos:position pos:line="24" pos:column="28"/></operator><operator pos:line="24" pos:column="28">)<pos:position pos:line="24" pos:column="29"/></operator><name><name pos:line="24" pos:column="29">q<pos:position pos:line="24" pos:column="30"/></name><operator pos:line="24" pos:column="30">-&gt;<pos:position pos:line="24" pos:column="35"/></operator><name pos:line="24" pos:column="32">buf<pos:position pos:line="24" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="25" pos:column="9">delete<pos:position pos:line="25" pos:column="15"/></operator> <name pos:line="25" pos:column="16">q<pos:position pos:line="25" pos:column="17"/></name></expr>;<pos:position pos:line="25" pos:column="18"/></expr_stmt>
        <return pos:line="26" pos:column="9">return;<pos:position pos:line="26" pos:column="16"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/*
     * DPW 2006-05-24
     * UFSStoreState has a 'writing' flag that we used to set here,
     * but it wasn't really used anywhere.  In fact, some lower
     * layers such as DISKD allow multiple outstanding writes, which
     * makes the boolean writing flag meaningless.  We would need
     * a counter to keep track of writes going out and write callbacks
     * coming in.  For now let's just not use the writing flag at
     * all.
     */</comment>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">debugs<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><literal type="number" pos:line="39" pos:column="12">79<pos:position pos:line="39" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="16">3<pos:position pos:line="39" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="19">HERE<pos:position pos:line="39" pos:column="23"/></name> <operator pos:line="39" pos:column="24">&lt;&lt;<pos:position pos:line="39" pos:column="32"/></operator> <name pos:line="39" pos:column="27">this<pos:position pos:line="39" pos:column="31"/></name> <operator pos:line="39" pos:column="32">&lt;&lt;<pos:position pos:line="39" pos:column="40"/></operator> <literal type="string" pos:line="39" pos:column="35">" calling theFile-&gt;write("<pos:position pos:line="39" pos:column="64"/></literal> <operator pos:line="39" pos:column="62">&lt;&lt;<pos:position pos:line="39" pos:column="70"/></operator> <name><name pos:line="39" pos:column="65">q<pos:position pos:line="39" pos:column="66"/></name><operator pos:line="39" pos:column="66">-&gt;<pos:position pos:line="39" pos:column="71"/></operator><name pos:line="39" pos:column="68">size<pos:position pos:line="39" pos:column="72"/></name></name> <operator pos:line="39" pos:column="73">&lt;&lt;<pos:position pos:line="39" pos:column="81"/></operator> <literal type="string" pos:line="39" pos:column="76">")"<pos:position pos:line="39" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="81"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="41" pos:column="5">theFile<pos:position pos:line="41" pos:column="12"/></name><operator pos:line="41" pos:column="12">-&gt;<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="14">write<pos:position pos:line="41" pos:column="19"/></name></name><argument_list pos:line="41" pos:column="19">(<argument><expr><operator pos:line="41" pos:column="20">new<pos:position pos:line="41" pos:column="23"/></operator> <call><name pos:line="41" pos:column="24">WriteRequest<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name><name pos:line="41" pos:column="37">q<pos:position pos:line="41" pos:column="38"/></name><operator pos:line="41" pos:column="38">-&gt;<pos:position pos:line="41" pos:column="43"/></operator><name pos:line="41" pos:column="40">buf<pos:position pos:line="41" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="45">q<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">offset<pos:position pos:line="41" pos:column="54"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="56">q<pos:position pos:line="41" pos:column="57"/></name><operator pos:line="41" pos:column="57">-&gt;<pos:position pos:line="41" pos:column="62"/></operator><name pos:line="41" pos:column="59">size<pos:position pos:line="41" pos:column="63"/></name></name></expr></argument>, <argument><expr><name><name pos:line="41" pos:column="65">q<pos:position pos:line="41" pos:column="66"/></name><operator pos:line="41" pos:column="66">-&gt;<pos:position pos:line="41" pos:column="71"/></operator><name pos:line="41" pos:column="68">free_func<pos:position pos:line="41" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="80"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="42" pos:column="5">delete<pos:position pos:line="42" pos:column="11"/></operator> <name pos:line="42" pos:column="12">q<pos:position pos:line="42" pos:column="13"/></name></expr>;<pos:position pos:line="42" pos:column="14"/></expr_stmt>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

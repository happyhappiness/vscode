<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_23_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">check_target_acl<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">hostname<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">port<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">config_line<pos:position pos:line="4" pos:column="21"/></name><index pos:line="4" pos:column="21">[<expr><name pos:line="4" pos:column="22">BUFSIZ<pos:position pos:line="4" pos:column="28"/></name></expr>]<pos:position pos:line="4" pos:column="29"/></index></name></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">FILE<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">fp<pos:position pos:line="5" pos:column="13"/></name> <init pos:line="5" pos:column="14">= <expr><name pos:line="5" pos:column="16">NULL<pos:position pos:line="5" pos:column="20"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">ret<pos:position pos:line="6" pos:column="12"/></name> <init pos:line="6" pos:column="13">= <expr><literal type="number" pos:line="6" pos:column="15">0<pos:position pos:line="6" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="17"/></decl_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">fp<pos:position pos:line="7" pos:column="7"/></name> <operator pos:line="7" pos:column="8">=<pos:position pos:line="7" pos:column="9"/></operator> <call><name pos:line="7" pos:column="10">fopen<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="string" pos:line="7" pos:column="16">"cachemgr.conf"<pos:position pos:line="7" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="33">"r"<pos:position pos:line="7" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="38"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">fp<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">==<pos:position pos:line="9" pos:column="14"/></operator> <name pos:line="9" pos:column="15">NULL<pos:position pos:line="9" pos:column="19"/></name></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">fp<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <call><name pos:line="10" pos:column="14">fopen<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">DEFAULT_CACHEMGR_CONFIG<pos:position pos:line="10" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="45">"r"<pos:position pos:line="10" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="50"/></expr_stmt></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">fp<pos:position pos:line="12" pos:column="11"/></name> <operator pos:line="12" pos:column="12">==<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name></expr>)<pos:position pos:line="12" pos:column="20"/></condition><then pos:line="12" pos:column="20"> <block pos:line="12" pos:column="21">{
<cpp:ifdef pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">ifdef<pos:position pos:line="13" pos:column="7"/></cpp:directive> <name pos:line="13" pos:column="8">CACHEMGR_HOSTNAME_DEFINED<pos:position pos:line="13" pos:column="33"/></name></cpp:ifdef>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">strcmp<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name pos:line="15" pos:column="20">hostname<pos:position pos:line="15" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="30">CACHEMGR_HOSTNAME<pos:position pos:line="15" pos:column="47"/></name></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call> <operator pos:line="15" pos:column="49">==<pos:position pos:line="15" pos:column="51"/></operator> <literal type="number" pos:line="15" pos:column="52">0<pos:position pos:line="15" pos:column="53"/></literal> <operator pos:line="15" pos:column="54">&amp;&amp;<pos:position pos:line="15" pos:column="64"/></operator> <name pos:line="15" pos:column="57">port<pos:position pos:line="15" pos:column="61"/></name> <operator pos:line="15" pos:column="62">==<pos:position pos:line="15" pos:column="64"/></operator> <name pos:line="15" pos:column="65">CACHE_HTTP_PORT<pos:position pos:line="15" pos:column="80"/></name></expr>)<pos:position pos:line="15" pos:column="81"/></condition><then pos:line="15" pos:column="81">
            <block type="pseudo"><return pos:line="16" pos:column="13">return <expr><literal type="number" pos:line="16" pos:column="20">1<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></return></block></then></if>

<cpp:else pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">else<pos:position pos:line="18" pos:column="6"/></cpp:directive></cpp:else>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><call><name pos:line="20" pos:column="13">strcmp<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">hostname<pos:position pos:line="20" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="30">"localhost"<pos:position pos:line="20" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="42"/></argument_list></call> <operator pos:line="20" pos:column="43">==<pos:position pos:line="20" pos:column="45"/></operator> <literal type="number" pos:line="20" pos:column="46">0<pos:position pos:line="20" pos:column="47"/></literal></expr>)<pos:position pos:line="20" pos:column="48"/></condition><then pos:line="20" pos:column="48">
            <block type="pseudo"><return pos:line="21" pos:column="13">return <expr><literal type="number" pos:line="21" pos:column="20">1<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></return></block></then></if>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><call><name pos:line="23" pos:column="13">strcmp<pos:position pos:line="23" pos:column="19"/></name><argument_list pos:line="23" pos:column="19">(<argument><expr><name pos:line="23" pos:column="20">hostname<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><call><name pos:line="23" pos:column="30">getfullhostname<pos:position pos:line="23" pos:column="45"/></name><argument_list pos:line="23" pos:column="45">()<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="48"/></argument_list></call> <operator pos:line="23" pos:column="49">==<pos:position pos:line="23" pos:column="51"/></operator> <literal type="number" pos:line="23" pos:column="52">0<pos:position pos:line="23" pos:column="53"/></literal></expr>)<pos:position pos:line="23" pos:column="54"/></condition><then pos:line="23" pos:column="54">
            <block type="pseudo"><return pos:line="24" pos:column="13">return <expr><literal type="number" pos:line="24" pos:column="20">1<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></return></block></then></if>

<cpp:endif pos:line="26" pos:column="1">#<cpp:directive pos:line="26" pos:column="2">endif<pos:position pos:line="26" pos:column="7"/></cpp:directive></cpp:endif>

        <return pos:line="28" pos:column="9">return <expr><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

    <while pos:line="31" pos:column="5">while <condition pos:line="31" pos:column="11">(<expr><call><name pos:line="31" pos:column="12">fgets<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">config_line<pos:position pos:line="31" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="31">BUFSIZ<pos:position pos:line="31" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="39">fp<pos:position pos:line="31" pos:column="41"/></name></expr></argument>)<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="31" pos:column="43"/></condition> <block pos:line="31" pos:column="44">{
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">char<pos:position pos:line="32" pos:column="13"/></name> <modifier pos:line="32" pos:column="14">*<pos:position pos:line="32" pos:column="15"/></modifier></type><name pos:line="32" pos:column="15">token<pos:position pos:line="32" pos:column="20"/></name> <init pos:line="32" pos:column="21">= <expr><name pos:line="32" pos:column="23">NULL<pos:position pos:line="32" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="32" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">strtok<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><name pos:line="33" pos:column="16">config_line<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="29">" \r\n\t"<pos:position pos:line="33" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name><name pos:line="35" pos:column="13">config_line<pos:position pos:line="35" pos:column="24"/></name><index pos:line="35" pos:column="24">[<expr><literal type="number" pos:line="35" pos:column="25">0<pos:position pos:line="35" pos:column="26"/></literal></expr>]<pos:position pos:line="35" pos:column="27"/></index></name> <operator pos:line="35" pos:column="28">==<pos:position pos:line="35" pos:column="30"/></operator> <literal type="char" pos:line="35" pos:column="31">'#'<pos:position pos:line="35" pos:column="34"/></literal></expr>)<pos:position pos:line="35" pos:column="35"/></condition><then pos:line="35" pos:column="35">
            <block type="pseudo"><continue pos:line="36" pos:column="13">continue;<pos:position pos:line="36" pos:column="22"/></continue></block></then></if>

        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name><name pos:line="38" pos:column="13">config_line<pos:position pos:line="38" pos:column="24"/></name><index pos:line="38" pos:column="24">[<expr><literal type="number" pos:line="38" pos:column="25">0<pos:position pos:line="38" pos:column="26"/></literal></expr>]<pos:position pos:line="38" pos:column="27"/></index></name> <operator pos:line="38" pos:column="28">==<pos:position pos:line="38" pos:column="30"/></operator> <literal type="char" pos:line="38" pos:column="31">'\0'<pos:position pos:line="38" pos:column="35"/></literal></expr>)<pos:position pos:line="38" pos:column="36"/></condition><then pos:line="38" pos:column="36">
            <block type="pseudo"><continue pos:line="39" pos:column="13">continue;<pos:position pos:line="39" pos:column="22"/></continue></block></then></if>

        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><operator pos:line="41" pos:column="13">(<pos:position pos:line="41" pos:column="14"/></operator><name pos:line="41" pos:column="14">token<pos:position pos:line="41" pos:column="19"/></name> <operator pos:line="41" pos:column="20">=<pos:position pos:line="41" pos:column="21"/></operator> <call><name pos:line="41" pos:column="22">strtok<pos:position pos:line="41" pos:column="28"/></name><argument_list pos:line="41" pos:column="28">(<argument><expr><name pos:line="41" pos:column="29">config_line<pos:position pos:line="41" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="42">":"<pos:position pos:line="41" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="46"/></argument_list></call><operator pos:line="41" pos:column="46">)<pos:position pos:line="41" pos:column="47"/></operator> <operator pos:line="41" pos:column="48">==<pos:position pos:line="41" pos:column="50"/></operator> <name pos:line="41" pos:column="51">NULL<pos:position pos:line="41" pos:column="55"/></name></expr>)<pos:position pos:line="41" pos:column="56"/></condition><then pos:line="41" pos:column="56">
            <block type="pseudo"><continue pos:line="42" pos:column="13">continue;<pos:position pos:line="42" pos:column="22"/></continue></block></then></if>

<cpp:if pos:line="44" pos:column="1">#<cpp:directive pos:line="44" pos:column="2">if<pos:position pos:line="44" pos:column="4"/></cpp:directive> <expr><name pos:line="44" pos:column="5">HAVE_FNMATCH_H<pos:position pos:line="44" pos:column="19"/></name></expr></cpp:if>

        <if pos:line="46" pos:column="9">if <condition pos:line="46" pos:column="12">(<expr><call><name pos:line="46" pos:column="13">fnmatch<pos:position pos:line="46" pos:column="20"/></name><argument_list pos:line="46" pos:column="20">(<argument><expr><name pos:line="46" pos:column="21">token<pos:position pos:line="46" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="28">hostname<pos:position pos:line="46" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="38">0<pos:position pos:line="46" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call> <operator pos:line="46" pos:column="41">!=<pos:position pos:line="46" pos:column="43"/></operator> <literal type="number" pos:line="46" pos:column="44">0<pos:position pos:line="46" pos:column="45"/></literal></expr>)<pos:position pos:line="46" pos:column="46"/></condition><then pos:line="46" pos:column="46">
            <block type="pseudo"><continue pos:line="47" pos:column="13">continue;<pos:position pos:line="47" pos:column="22"/></continue></block></then></if>

<cpp:else pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">else<pos:position pos:line="49" pos:column="6"/></cpp:directive></cpp:else>

        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><call><name pos:line="51" pos:column="13">strcmp<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><name pos:line="51" pos:column="20">token<pos:position pos:line="51" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="51" pos:column="27">hostname<pos:position pos:line="51" pos:column="35"/></name></expr></argument>)<pos:position pos:line="51" pos:column="36"/></argument_list></call> <operator pos:line="51" pos:column="37">!=<pos:position pos:line="51" pos:column="39"/></operator> <literal type="number" pos:line="51" pos:column="40">0<pos:position pos:line="51" pos:column="41"/></literal></expr>)<pos:position pos:line="51" pos:column="42"/></condition><then pos:line="51" pos:column="42">
            <block type="pseudo"><continue pos:line="52" pos:column="13">continue;<pos:position pos:line="52" pos:column="22"/></continue></block></then></if>

<cpp:endif pos:line="54" pos:column="1">#<cpp:directive pos:line="54" pos:column="2">endif<pos:position pos:line="54" pos:column="7"/></cpp:directive></cpp:endif>

        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">(<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">token<pos:position pos:line="56" pos:column="19"/></name> <operator pos:line="56" pos:column="20">=<pos:position pos:line="56" pos:column="21"/></operator> <call><name pos:line="56" pos:column="22">strtok<pos:position pos:line="56" pos:column="28"/></name><argument_list pos:line="56" pos:column="28">(<argument><expr><name pos:line="56" pos:column="29">NULL<pos:position pos:line="56" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="56" pos:column="35">":"<pos:position pos:line="56" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="39"/></argument_list></call><operator pos:line="56" pos:column="39">)<pos:position pos:line="56" pos:column="40"/></operator> <operator pos:line="56" pos:column="41">!=<pos:position pos:line="56" pos:column="43"/></operator> <name pos:line="56" pos:column="44">NULL<pos:position pos:line="56" pos:column="48"/></name></expr>)<pos:position pos:line="56" pos:column="49"/></condition><then pos:line="56" pos:column="49"> <block pos:line="56" pos:column="50">{
            <decl_stmt><decl><type><name pos:line="57" pos:column="13">int<pos:position pos:line="57" pos:column="16"/></name></type> <name pos:line="57" pos:column="17">i<pos:position pos:line="57" pos:column="18"/></name></decl>;<pos:position pos:line="57" pos:column="19"/></decl_stmt>

            <if pos:line="59" pos:column="13">if <condition pos:line="59" pos:column="16">(<expr><call><name pos:line="59" pos:column="17">strcmp<pos:position pos:line="59" pos:column="23"/></name><argument_list pos:line="59" pos:column="23">(<argument><expr><name pos:line="59" pos:column="24">token<pos:position pos:line="59" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="31">"*"<pos:position pos:line="59" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="35"/></argument_list></call> <operator pos:line="59" pos:column="36">==<pos:position pos:line="59" pos:column="38"/></operator> <literal type="number" pos:line="59" pos:column="39">0<pos:position pos:line="59" pos:column="40"/></literal></expr>)<pos:position pos:line="59" pos:column="41"/></condition><then pos:line="59" pos:column="41">

                <block type="pseudo"><empty_stmt pos:line="61" pos:column="17">;<pos:position pos:line="61" pos:column="18"/></empty_stmt></block></then>   <comment type="block" pos:line="61" pos:column="21">/* Wildcard port specification */</comment>
            <elseif pos:line="62" pos:column="13">else <if pos:line="62" pos:column="18">if <condition pos:line="62" pos:column="21">(<expr><call><name pos:line="62" pos:column="22">strcasecmp<pos:position pos:line="62" pos:column="32"/></name><argument_list pos:line="62" pos:column="32">(<argument><expr><name pos:line="62" pos:column="33">token<pos:position pos:line="62" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="40">"any"<pos:position pos:line="62" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="46"/></argument_list></call> <operator pos:line="62" pos:column="47">==<pos:position pos:line="62" pos:column="49"/></operator> <literal type="number" pos:line="62" pos:column="50">0<pos:position pos:line="62" pos:column="51"/></literal></expr>)<pos:position pos:line="62" pos:column="52"/></condition><then pos:line="62" pos:column="52">

                <block type="pseudo"><empty_stmt pos:line="64" pos:column="17">;<pos:position pos:line="64" pos:column="18"/></empty_stmt></block></then></if></elseif>   <comment type="block" pos:line="64" pos:column="21">/* Wildcard port specification */</comment>
            <elseif pos:line="65" pos:column="13">else <if pos:line="65" pos:column="18">if <condition pos:line="65" pos:column="21">(<expr><call><name pos:line="65" pos:column="22">sscanf<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><name pos:line="65" pos:column="29">token<pos:position pos:line="65" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="36">"%d"<pos:position pos:line="65" pos:column="40"/></literal></expr></argument>, <argument><expr><operator pos:line="65" pos:column="42">&amp;<pos:position pos:line="65" pos:column="47"/></operator><name pos:line="65" pos:column="43">i<pos:position pos:line="65" pos:column="44"/></name></expr></argument>)<pos:position pos:line="65" pos:column="45"/></argument_list></call> <operator pos:line="65" pos:column="46">!=<pos:position pos:line="65" pos:column="48"/></operator> <literal type="number" pos:line="65" pos:column="49">1<pos:position pos:line="65" pos:column="50"/></literal></expr>)<pos:position pos:line="65" pos:column="51"/></condition><then pos:line="65" pos:column="51">
                <block type="pseudo"><continue pos:line="66" pos:column="17">continue;<pos:position pos:line="66" pos:column="26"/></continue></block></then></if></elseif>

            <elseif pos:line="68" pos:column="13">else <if pos:line="68" pos:column="18">if <condition pos:line="68" pos:column="21">(<expr><name pos:line="68" pos:column="22">i<pos:position pos:line="68" pos:column="23"/></name> <operator pos:line="68" pos:column="24">!=<pos:position pos:line="68" pos:column="26"/></operator> <name pos:line="68" pos:column="27">port<pos:position pos:line="68" pos:column="31"/></name></expr>)<pos:position pos:line="68" pos:column="32"/></condition><then pos:line="68" pos:column="32">
                <block type="pseudo"><continue pos:line="69" pos:column="17">continue;<pos:position pos:line="69" pos:column="26"/></continue></block></then></if></elseif></if>
        }<pos:position pos:line="70" pos:column="10"/></block></then> <elseif pos:line="70" pos:column="11">else <if pos:line="70" pos:column="16">if <condition pos:line="70" pos:column="19">(<expr><name pos:line="70" pos:column="20">port<pos:position pos:line="70" pos:column="24"/></name> <operator pos:line="70" pos:column="25">!=<pos:position pos:line="70" pos:column="27"/></operator> <name pos:line="70" pos:column="28">CACHE_HTTP_PORT<pos:position pos:line="70" pos:column="43"/></name></expr>)<pos:position pos:line="70" pos:column="44"/></condition><then pos:line="70" pos:column="44">
            <block type="pseudo"><continue pos:line="71" pos:column="13">continue;<pos:position pos:line="71" pos:column="22"/></continue></block></then></if></elseif></if>

        <expr_stmt><expr><name pos:line="73" pos:column="9">ret<pos:position pos:line="73" pos:column="12"/></name> <operator pos:line="73" pos:column="13">=<pos:position pos:line="73" pos:column="14"/></operator> <literal type="number" pos:line="73" pos:column="15">1<pos:position pos:line="73" pos:column="16"/></literal></expr>;<pos:position pos:line="73" pos:column="17"/></expr_stmt>

        <break pos:line="75" pos:column="9">break;<pos:position pos:line="75" pos:column="15"/></break>
    }<pos:position pos:line="76" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="78" pos:column="5">fclose<pos:position pos:line="78" pos:column="11"/></name><argument_list pos:line="78" pos:column="11">(<argument><expr><name pos:line="78" pos:column="12">fp<pos:position pos:line="78" pos:column="14"/></name></expr></argument>)<pos:position pos:line="78" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="16"/></expr_stmt>
    <return pos:line="79" pos:column="5">return <expr><name pos:line="79" pos:column="12">ret<pos:position pos:line="79" pos:column="15"/></name></expr>;<pos:position pos:line="79" pos:column="16"/></return>
}<pos:position pos:line="80" pos:column="2"/></block></function></unit>

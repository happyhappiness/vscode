<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1283_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">DelayIdComposite<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">Pointer<pos:position pos:line="1" pos:column="26"/></name></name></type>
<name><name pos:line="2" pos:column="1">VectorPool<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">id<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">CompositeSelectionDetails<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">&amp;<pos:position pos:line="2" pos:column="47"/></modifier></type><name pos:line="2" pos:column="43">details<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">rate<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">()<pos:position pos:line="4" pos:column="15"/></argument_list></call><operator pos:line="4" pos:column="15">-&gt;<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="17">restore_bps<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">==<pos:position pos:line="4" pos:column="31"/></operator> <operator pos:line="4" pos:column="32">-<pos:position pos:line="4" pos:column="33"/></operator><literal type="number" pos:line="4" pos:column="33">1<pos:position pos:line="4" pos:column="34"/></literal></expr>)<pos:position pos:line="4" pos:column="35"/></condition><then pos:line="4" pos:column="35">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><operator pos:line="5" pos:column="16">new<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NullDelayId<pos:position pos:line="5" pos:column="31"/></name></expr>;<pos:position pos:line="5" pos:column="32"/></return></block></then></if>

    <comment type="block" pos:line="7" pos:column="5">/* non-IPv4 are not able to provide IPv4-bitmask for this pool type key. */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">( <expr><operator pos:line="8" pos:column="10">!<pos:position pos:line="8" pos:column="11"/></operator><call><name><name pos:line="8" pos:column="11">details<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">src_addr<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">isIPv4<pos:position pos:line="8" pos:column="34"/></name></name><argument_list pos:line="8" pos:column="34">()<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr> )<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><operator pos:line="9" pos:column="16">new<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">NullDelayId<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">unsigned<pos:position pos:line="11" pos:column="13"/></name> <name pos:line="11" pos:column="14">int<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">key<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><call><name pos:line="11" pos:column="24">makeKey<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name><name pos:line="11" pos:column="32">details<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">.<pos:position pos:line="11" pos:column="40"/></operator><name pos:line="11" pos:column="40">src_addr<pos:position pos:line="11" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="50"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">keyAllocated<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">key<pos:position pos:line="13" pos:column="25"/></name></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="27"/></condition><then pos:line="13" pos:column="27">
        <block type="pseudo"><return pos:line="14" pos:column="9">return <expr><operator pos:line="14" pos:column="16">new<pos:position pos:line="14" pos:column="19"/></operator> <call><name pos:line="14" pos:column="20">Id<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">this<pos:position pos:line="14" pos:column="27"/></name></expr></argument>, <argument><expr><call><name><name pos:line="14" pos:column="29">buckets<pos:position pos:line="14" pos:column="36"/></name><operator pos:line="14" pos:column="36">.<pos:position pos:line="14" pos:column="37"/></operator><name pos:line="14" pos:column="37">findKeyIndex<pos:position pos:line="14" pos:column="49"/></name></name><argument_list pos:line="14" pos:column="49">(<argument><expr><name pos:line="14" pos:column="50">key<pos:position pos:line="14" pos:column="53"/></name></expr></argument>)<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="56"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">unsigned<pos:position pos:line="16" pos:column="13"/></name> <name pos:line="16" pos:column="14">char<pos:position pos:line="16" pos:column="18"/></name> <specifier pos:line="16" pos:column="19">const<pos:position pos:line="16" pos:column="24"/></specifier></type> <name pos:line="16" pos:column="25">resultIndex<pos:position pos:line="16" pos:column="36"/></name> <init pos:line="16" pos:column="37">= <expr><call><name><name pos:line="16" pos:column="39">buckets<pos:position pos:line="16" pos:column="46"/></name><operator pos:line="16" pos:column="46">.<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="47">insert<pos:position pos:line="16" pos:column="53"/></name></name><argument_list pos:line="16" pos:column="53">(<argument><expr><name pos:line="16" pos:column="54">key<pos:position pos:line="16" pos:column="57"/></name></expr></argument>)<pos:position pos:line="16" pos:column="58"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="59"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="18" pos:column="5">buckets<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">.<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">values<pos:position pos:line="18" pos:column="19"/></name><index pos:line="18" pos:column="19">[<expr><name pos:line="18" pos:column="20">resultIndex<pos:position pos:line="18" pos:column="31"/></name></expr>]<pos:position pos:line="18" pos:column="32"/></index></name><operator pos:line="18" pos:column="32">.<pos:position pos:line="18" pos:column="33"/></operator><call><name pos:line="18" pos:column="33">init<pos:position pos:line="18" pos:column="37"/></name><argument_list pos:line="18" pos:column="37">(<argument><expr><operator pos:line="18" pos:column="38">*<pos:position pos:line="18" pos:column="39"/></operator><call><name pos:line="18" pos:column="39">rate<pos:position pos:line="18" pos:column="43"/></name><argument_list pos:line="18" pos:column="43">()<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="47"/></expr_stmt>

    <return pos:line="20" pos:column="5">return <expr><operator pos:line="20" pos:column="12">new<pos:position pos:line="20" pos:column="15"/></operator> <call><name pos:line="20" pos:column="16">Id<pos:position pos:line="20" pos:column="18"/></name><argument_list pos:line="20" pos:column="18">(<argument><expr><name pos:line="20" pos:column="19">this<pos:position pos:line="20" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="25">resultIndex<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

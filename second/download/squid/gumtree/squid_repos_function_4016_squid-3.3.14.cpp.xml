<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4016_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">writeMore<pos:position pos:line="1" pos:column="42"/></name></name><parameter_list pos:line="1" pos:column="42">()<pos:position pos:line="1" pos:column="44"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">debugs<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><literal type="number" pos:line="3" pos:column="12">93<pos:position pos:line="3" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="3" pos:column="16">5<pos:position pos:line="3" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="3" pos:column="19">HERE<pos:position pos:line="3" pos:column="23"/></name> <operator pos:line="3" pos:column="24">&lt;&lt;<pos:position pos:line="3" pos:column="32"/></operator> <literal type="string" pos:line="3" pos:column="27">"checking whether to write more"<pos:position pos:line="3" pos:column="59"/></literal> <operator pos:line="3" pos:column="60">&lt;&lt;<pos:position pos:line="3" pos:column="68"/></operator> <call><name pos:line="3" pos:column="63">status<pos:position pos:line="3" pos:column="69"/></name><argument_list pos:line="3" pos:column="69">()<pos:position pos:line="3" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="73"/></expr_stmt>

    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">writer<pos:position pos:line="5" pos:column="15"/></name> <operator pos:line="5" pos:column="16">!=<pos:position pos:line="5" pos:column="18"/></operator> <name pos:line="5" pos:column="19">NULL<pos:position pos:line="5" pos:column="23"/></name></expr>)<pos:position pos:line="5" pos:column="24"/></condition><then pos:line="5" pos:column="24"> <comment type="line" pos:line="5" pos:column="25">// already writing something</comment>
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <switch pos:line="8" pos:column="5">switch <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">state<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">writing<pos:position pos:line="8" pos:column="26"/></name></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition> <block pos:line="8" pos:column="28">{

    <case pos:line="10" pos:column="5">case <expr><name><name pos:line="10" pos:column="10">State<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">::<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">writingInit<pos:position pos:line="10" pos:column="28"/></name></name></expr>:<pos:position pos:line="10" pos:column="29"/></case>    <comment type="line" pos:line="10" pos:column="33">// waiting for service OPTIONS</comment>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">Must<pos:position pos:line="11" pos:column="13"/></name><argument_list pos:line="11" pos:column="13">(<argument><expr><name><name pos:line="11" pos:column="14">state<pos:position pos:line="11" pos:column="19"/></name><operator pos:line="11" pos:column="19">.<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">serviceWaiting<pos:position pos:line="11" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>

    <case pos:line="13" pos:column="5">case <expr><name><name pos:line="13" pos:column="10">State<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">::<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">writingConnect<pos:position pos:line="13" pos:column="31"/></name></name></expr>:<pos:position pos:line="13" pos:column="32"/></case> <comment type="line" pos:line="13" pos:column="33">// waiting for the connection to establish</comment>

    <case pos:line="15" pos:column="5">case <expr><name><name pos:line="15" pos:column="10">State<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">::<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="17">writingHeaders<pos:position pos:line="15" pos:column="31"/></name></name></expr>:<pos:position pos:line="15" pos:column="32"/></case> <comment type="line" pos:line="15" pos:column="33">// waiting for the headers to be written</comment>

    <case pos:line="17" pos:column="5">case <expr><name><name pos:line="17" pos:column="10">State<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">::<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">writingPaused<pos:position pos:line="17" pos:column="30"/></name></name></expr>:<pos:position pos:line="17" pos:column="31"/></case>  <comment type="line" pos:line="17" pos:column="33">// waiting for the ICAP server response</comment>

    <case pos:line="19" pos:column="5">case <expr><name><name pos:line="19" pos:column="10">State<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">::<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">writingReallyDone<pos:position pos:line="19" pos:column="34"/></name></name></expr>:<pos:position pos:line="19" pos:column="35"/></case> <comment type="line" pos:line="19" pos:column="36">// nothing more to write</comment>
        <return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return>

    <case pos:line="22" pos:column="5">case <expr><name><name pos:line="22" pos:column="10">State<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">::<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="17">writingAlmostDone<pos:position pos:line="22" pos:column="34"/></name></name></expr>:<pos:position pos:line="22" pos:column="35"/></case> <comment type="line" pos:line="22" pos:column="36">// was waiting for the last write</comment>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">stopWriting<pos:position pos:line="23" pos:column="20"/></name><argument_list pos:line="23" pos:column="20">(<argument><expr><literal type="boolean" pos:line="23" pos:column="21">false<pos:position pos:line="23" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="28"/></expr_stmt>
        <return pos:line="24" pos:column="9">return;<pos:position pos:line="24" pos:column="16"/></return>

    <case pos:line="26" pos:column="5">case <expr><name><name pos:line="26" pos:column="10">State<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">::<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">writingPreview<pos:position pos:line="26" pos:column="31"/></name></name></expr>:<pos:position pos:line="26" pos:column="32"/></case>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">writePreviewBody<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">()<pos:position pos:line="27" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="28"/></expr_stmt>
        <return pos:line="28" pos:column="9">return;<pos:position pos:line="28" pos:column="16"/></return>

    <case pos:line="30" pos:column="5">case <expr><name><name pos:line="30" pos:column="10">State<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">::<pos:position pos:line="30" pos:column="17"/></operator><name pos:line="30" pos:column="17">writingPrime<pos:position pos:line="30" pos:column="29"/></name></name></expr>:<pos:position pos:line="30" pos:column="30"/></case>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">writePrimeBody<pos:position pos:line="31" pos:column="23"/></name><argument_list pos:line="31" pos:column="23">()<pos:position pos:line="31" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="26"/></expr_stmt>
        <return pos:line="32" pos:column="9">return;<pos:position pos:line="32" pos:column="16"/></return>

    <default pos:line="34" pos:column="5">default:<pos:position pos:line="34" pos:column="13"/></default>
        <throw pos:line="35" pos:column="9">throw <expr><call><name pos:line="35" pos:column="15">TexcHere<pos:position pos:line="35" pos:column="23"/></name><argument_list pos:line="35" pos:column="23">(<argument><expr><literal type="string" pos:line="35" pos:column="24">"Adaptation::Icap::ModXact in bad writing state"<pos:position pos:line="35" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="74"/></throw>
    }<pos:position pos:line="36" pos:column="6"/></block></switch>
}<pos:position pos:line="37" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6218_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Log<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">TcpLogger<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">appendRecord<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">record<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="50">const<pos:position pos:line="2" pos:column="55"/></specifier> <name pos:line="2" pos:column="56">size_t<pos:position pos:line="2" pos:column="62"/></name></type> <name pos:line="2" pos:column="63">len<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="67"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// they should not happen, but to be safe, let's protect drop start/stop</comment>
    <comment type="line" pos:line="5" pos:column="5">// monitoring algorithm from empty records (which can never be dropped)</comment>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">len<pos:position pos:line="6" pos:column="13"/></name></expr>)<pos:position pos:line="6" pos:column="14"/></condition><then pos:line="6" pos:column="14">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><call><name pos:line="9" pos:column="10">canFit<pos:position pos:line="9" pos:column="16"/></name><argument_list pos:line="9" pos:column="16">(<argument><expr><name pos:line="9" pos:column="17">len<pos:position pos:line="9" pos:column="20"/></name></expr></argument>)<pos:position pos:line="9" pos:column="21"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22"> <block pos:line="9" pos:column="23">{
        <expr_stmt><expr><operator pos:line="10" pos:column="9">++<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">drops<pos:position pos:line="10" pos:column="16"/></name></expr>;<pos:position pos:line="10" pos:column="17"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">drops<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">=<pos:position pos:line="14" pos:column="12"/></operator> <literal type="number" pos:line="14" pos:column="13">0<pos:position pos:line="14" pos:column="14"/></literal></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt>
    <comment type="line" pos:line="15" pos:column="5">// append without spliting buf, unless it exceeds IoBufSize</comment>
    <for pos:line="16" pos:column="5">for <control pos:line="16" pos:column="9">(<init><decl><type><name pos:line="16" pos:column="10">size_t<pos:position pos:line="16" pos:column="16"/></name></type> <name pos:line="16" pos:column="17">off<pos:position pos:line="16" pos:column="20"/></name> <init pos:line="16" pos:column="21">= <expr><literal type="number" pos:line="16" pos:column="23">0<pos:position pos:line="16" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="25"/></init> <condition><expr><name pos:line="16" pos:column="26">off<pos:position pos:line="16" pos:column="29"/></name> <operator pos:line="16" pos:column="30">&lt;<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="32">len<pos:position pos:line="16" pos:column="35"/></name></expr>;<pos:position pos:line="16" pos:column="36"/></condition> <incr><expr><name pos:line="16" pos:column="37">off<pos:position pos:line="16" pos:column="40"/></name> <operator pos:line="16" pos:column="41">+=<pos:position pos:line="16" pos:column="43"/></operator> <name pos:line="16" pos:column="44">IoBufSize<pos:position pos:line="16" pos:column="53"/></name></expr></incr>)<pos:position pos:line="16" pos:column="54"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="17" pos:column="9">appendChunk<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">record<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">+<pos:position pos:line="17" pos:column="29"/></operator> <name pos:line="17" pos:column="30">off<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="17" pos:column="35">min<pos:position pos:line="17" pos:column="38"/></name><argument_list pos:line="17" pos:column="38">(<argument><expr><name pos:line="17" pos:column="39">len<pos:position pos:line="17" pos:column="42"/></name> <operator pos:line="17" pos:column="43">-<pos:position pos:line="17" pos:column="44"/></operator> <name pos:line="17" pos:column="45">off<pos:position pos:line="17" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="50">IoBufSize<pos:position pos:line="17" pos:column="59"/></name></expr></argument>)<pos:position pos:line="17" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="62"/></expr_stmt></block></for>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7311_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Mgr<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Action<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">respond<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name pos:line="2" pos:column="28">Request<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">&amp;<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="37">request<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">16<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">5<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>

    <comment type="line" pos:line="6" pos:column="5">// Assume most kid classes are fully aggregatable (i.e., they do not dump</comment>
    <comment type="line" pos:line="7" pos:column="5">// local info at all). Do not import the remote HTTP fd into our Comm</comment>
    <comment type="line" pos:line="8" pos:column="5">// space; collect and send an IPC msg with collected info to Coordinator.</comment>
    <expr_stmt><expr><call><name><operator pos:line="9" pos:column="5">::<pos:position pos:line="9" pos:column="7"/></operator><name pos:line="9" pos:column="7">close<pos:position pos:line="9" pos:column="12"/></name></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name><name pos:line="9" pos:column="13">request<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">.<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="21">conn<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">-&gt;<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="27">fd<pos:position pos:line="9" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">request<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">.<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">conn<pos:position pos:line="10" pos:column="17"/></name><operator pos:line="10" pos:column="17">-&gt;<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="19">fd<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">collect<pos:position pos:line="11" pos:column="12"/></name><argument_list pos:line="11" pos:column="12">()<pos:position pos:line="11" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">sendResponse<pos:position pos:line="12" pos:column="17"/></name><argument_list pos:line="12" pos:column="17">(<argument><expr><name><name pos:line="12" pos:column="18">request<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">.<pos:position pos:line="12" pos:column="26"/></operator><name pos:line="12" pos:column="26">requestId<pos:position pos:line="12" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="37"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

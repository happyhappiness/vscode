<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4219_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Icap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">Xaction<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">dnsLookupDone<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">(<parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">ipcache_addrs<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">ia<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Adaptation<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">Icap<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">::<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">ServiceRep<pos:position pos:line="4" pos:column="33"/></name></name> <modifier pos:line="4" pos:column="34">&amp;<pos:position pos:line="4" pos:column="39"/></modifier></type><name pos:line="4" pos:column="35">s<pos:position pos:line="4" pos:column="36"/></name> <init pos:line="4" pos:column="37">= <expr><call><name pos:line="4" pos:column="39">service<pos:position pos:line="4" pos:column="46"/></name><argument_list pos:line="4" pos:column="46">()<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="49"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">ia<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">==<pos:position pos:line="6" pos:column="14"/></operator> <name pos:line="6" pos:column="15">NULL<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <block pos:line="6" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">44<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="20">DBG_IMPORTANT<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="35">"ICAP: Unknown service host: "<pos:position pos:line="7" pos:column="65"/></literal> <operator pos:line="7" pos:column="66">&lt;&lt;<pos:position pos:line="7" pos:column="74"/></operator> <call><name><name pos:line="7" pos:column="69">s<pos:position pos:line="7" pos:column="70"/></name><operator pos:line="7" pos:column="70">.<pos:position pos:line="7" pos:column="71"/></operator><name pos:line="7" pos:column="71">cfg<pos:position pos:line="7" pos:column="74"/></name></name><argument_list pos:line="7" pos:column="74">()<pos:position pos:line="7" pos:column="76"/></argument_list></call><operator pos:line="7" pos:column="76">.<pos:position pos:line="7" pos:column="77"/></operator><name pos:line="7" pos:column="77">host<pos:position pos:line="7" pos:column="81"/></name></expr></argument>)<pos:position pos:line="7" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="83"/></expr_stmt>

<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><name pos:line="9" pos:column="5">WHEN_IPCACHE_NBGETHOSTBYNAME_USES_ASYNC_CALLS<pos:position pos:line="9" pos:column="50"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">dieOnConnectionFailure<pos:position pos:line="10" pos:column="31"/></name><argument_list pos:line="10" pos:column="31">()<pos:position pos:line="10" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="34"/></expr_stmt> <comment type="line" pos:line="10" pos:column="35">// throws</comment>
<cpp:else pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">else<pos:position pos:line="11" pos:column="6"/></cpp:directive></cpp:else> <comment type="line" pos:line="11" pos:column="7">// take a step back into protected Async call dialing.</comment>
        <comment type="line" pos:line="12" pos:column="9">// fake the connect callback</comment>
        <typedef pos:line="13" pos:column="9">typedef <type><name><name pos:line="13" pos:column="17">CommCbMemFunT<pos:position pos:line="13" pos:column="30"/></name><argument_list type="generic" pos:line="13" pos:column="30">&lt;<argument><expr><name><name pos:line="13" pos:column="31">Adaptation<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">::<pos:position pos:line="13" pos:column="43"/></operator><name pos:line="13" pos:column="43">Icap<pos:position pos:line="13" pos:column="47"/></name><operator pos:line="13" pos:column="47">::<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="49">Xaction<pos:position pos:line="13" pos:column="56"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="58">CommConnectCbParams<pos:position pos:line="13" pos:column="77"/></name></expr></argument>&gt;<pos:position pos:line="13" pos:column="81"/></argument_list></name></type> <name pos:line="13" pos:column="79">Dialer<pos:position pos:line="13" pos:column="85"/></name>;<pos:position pos:line="13" pos:column="86"/></typedef>
        <decl_stmt><decl><type><name><name pos:line="14" pos:column="9">CbcPointer<pos:position pos:line="14" pos:column="19"/></name><argument_list type="generic" pos:line="14" pos:column="19">&lt;<argument><expr><name pos:line="14" pos:column="20">Xaction<pos:position pos:line="14" pos:column="27"/></name></expr></argument>&gt;<pos:position pos:line="14" pos:column="31"/></argument_list></name></type> <name pos:line="14" pos:column="29">self<pos:position pos:line="14" pos:column="33"/></name><argument_list pos:line="14" pos:column="33">(<argument><expr><name pos:line="14" pos:column="34">this<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></decl>;<pos:position pos:line="14" pos:column="40"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">Dialer<pos:position pos:line="15" pos:column="15"/></name></type> <name pos:line="15" pos:column="16">dialer<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">self<pos:position pos:line="15" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="15" pos:column="29">&amp;<pos:position pos:line="15" pos:column="34"/></operator><name><name pos:line="15" pos:column="30">Adaptation<pos:position pos:line="15" pos:column="40"/></name><operator pos:line="15" pos:column="40">::<pos:position pos:line="15" pos:column="42"/></operator><name pos:line="15" pos:column="42">Icap<pos:position pos:line="15" pos:column="46"/></name><operator pos:line="15" pos:column="46">::<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="48">Xaction<pos:position pos:line="15" pos:column="55"/></name><operator pos:line="15" pos:column="55">::<pos:position pos:line="15" pos:column="57"/></operator><name pos:line="15" pos:column="57">noteCommConnected<pos:position pos:line="15" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="75"/></argument_list></decl>;<pos:position pos:line="15" pos:column="76"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">dialer<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">.<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">params<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">.<pos:position pos:line="16" pos:column="23"/></operator><name pos:line="16" pos:column="23">conn<pos:position pos:line="16" pos:column="27"/></name></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">connection<pos:position pos:line="16" pos:column="40"/></name></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">dialer<pos:position pos:line="17" pos:column="15"/></name><operator pos:line="17" pos:column="15">.<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">params<pos:position pos:line="17" pos:column="22"/></name><operator pos:line="17" pos:column="22">.<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">flag<pos:position pos:line="17" pos:column="27"/></name></name> <operator pos:line="17" pos:column="28">=<pos:position pos:line="17" pos:column="29"/></operator> <name><name pos:line="17" pos:column="30">Comm<pos:position pos:line="17" pos:column="34"/></name><operator pos:line="17" pos:column="34">::<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="36">COMM_ERROR<pos:position pos:line="17" pos:column="46"/></name></name></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
        <comment type="line" pos:line="18" pos:column="9">// fake other parameters by copying from the existing connection</comment>
        <expr_stmt><expr><name pos:line="19" pos:column="9">connector<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">=<pos:position pos:line="19" pos:column="20"/></operator> <call><name pos:line="19" pos:column="21">asyncCall<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="number" pos:line="19" pos:column="31">93<pos:position pos:line="19" pos:column="33"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="19" pos:column="34">3<pos:position pos:line="19" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="37">"Adaptation::Icap::Xaction::noteCommConnected"<pos:position pos:line="19" pos:column="83"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="85">dialer<pos:position pos:line="19" pos:column="91"/></name></expr></argument>)<pos:position pos:line="19" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="93"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">ScheduleCallHere<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">(<argument><expr><name pos:line="20" pos:column="26">connector<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt>
<cpp:endif pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">endif<pos:position pos:line="21" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="25" pos:column="5">assert<pos:position pos:line="25" pos:column="11"/></name><argument_list pos:line="25" pos:column="11">(<argument><expr><name><name pos:line="25" pos:column="12">ia<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">cur<pos:position pos:line="25" pos:column="19"/></name></name> <operator pos:line="25" pos:column="20">&lt;<pos:position pos:line="25" pos:column="24"/></operator> <name><name pos:line="25" pos:column="22">ia<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">-&gt;<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="26">count<pos:position pos:line="25" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name pos:line="27" pos:column="5">connection<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <operator pos:line="27" pos:column="18">new<pos:position pos:line="27" pos:column="21"/></operator> <name><name pos:line="27" pos:column="22">Comm<pos:position pos:line="27" pos:column="26"/></name><operator pos:line="27" pos:column="26">::<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">Connection<pos:position pos:line="27" pos:column="38"/></name></name></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">connection<pos:position pos:line="28" pos:column="15"/></name><operator pos:line="28" pos:column="15">-&gt;<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="17">remote<pos:position pos:line="28" pos:column="23"/></name></name> <operator pos:line="28" pos:column="24">=<pos:position pos:line="28" pos:column="25"/></operator> <name><name pos:line="28" pos:column="26">ia<pos:position pos:line="28" pos:column="28"/></name><operator pos:line="28" pos:column="28">-&gt;<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="30">in_addrs<pos:position pos:line="28" pos:column="38"/></name><index pos:line="28" pos:column="38">[<expr><name><name pos:line="28" pos:column="39">ia<pos:position pos:line="28" pos:column="41"/></name><operator pos:line="28" pos:column="41">-&gt;<pos:position pos:line="28" pos:column="46"/></operator><name pos:line="28" pos:column="43">cur<pos:position pos:line="28" pos:column="46"/></name></name></expr>]<pos:position pos:line="28" pos:column="47"/></index></name></expr>;<pos:position pos:line="28" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="29" pos:column="5">connection<pos:position pos:line="29" pos:column="15"/></name><operator pos:line="29" pos:column="15">-&gt;<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="17">remote<pos:position pos:line="29" pos:column="23"/></name><operator pos:line="29" pos:column="23">.<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="24">port<pos:position pos:line="29" pos:column="28"/></name></name><argument_list pos:line="29" pos:column="28">(<argument><expr><call><name><name pos:line="29" pos:column="29">s<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">.<pos:position pos:line="29" pos:column="31"/></operator><name pos:line="29" pos:column="31">cfg<pos:position pos:line="29" pos:column="34"/></name></name><argument_list pos:line="29" pos:column="34">()<pos:position pos:line="29" pos:column="36"/></argument_list></call><operator pos:line="29" pos:column="36">.<pos:position pos:line="29" pos:column="37"/></operator><name pos:line="29" pos:column="37">port<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">getOutgoingAddress<pos:position pos:line="30" pos:column="23"/></name><argument_list pos:line="30" pos:column="23">(<argument><expr><name pos:line="30" pos:column="24">NULL<pos:position pos:line="30" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="30">connection<pos:position pos:line="30" pos:column="40"/></name></expr></argument>)<pos:position pos:line="30" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="42"/></expr_stmt>

    <comment type="line" pos:line="32" pos:column="5">// TODO: service bypass status may differ from that of a transaction</comment>
    <typedef pos:line="33" pos:column="5">typedef <type><name><name pos:line="33" pos:column="13">CommCbMemFunT<pos:position pos:line="33" pos:column="26"/></name><argument_list type="generic" pos:line="33" pos:column="26">&lt;<argument><expr><name><name pos:line="33" pos:column="27">Adaptation<pos:position pos:line="33" pos:column="37"/></name><operator pos:line="33" pos:column="37">::<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="39">Icap<pos:position pos:line="33" pos:column="43"/></name><operator pos:line="33" pos:column="43">::<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="45">Xaction<pos:position pos:line="33" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="54">CommConnectCbParams<pos:position pos:line="33" pos:column="73"/></name></expr></argument>&gt;<pos:position pos:line="33" pos:column="77"/></argument_list></name></type> <name pos:line="33" pos:column="75">ConnectDialer<pos:position pos:line="33" pos:column="88"/></name>;<pos:position pos:line="33" pos:column="89"/></typedef>
    <expr_stmt><expr><name pos:line="34" pos:column="5">connector<pos:position pos:line="34" pos:column="14"/></name> <operator pos:line="34" pos:column="15">=<pos:position pos:line="34" pos:column="16"/></operator> <call><name pos:line="34" pos:column="17">JobCallback<pos:position pos:line="34" pos:column="28"/></name><argument_list pos:line="34" pos:column="28">(<argument><expr><literal type="number" pos:line="34" pos:column="29">93<pos:position pos:line="34" pos:column="31"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="34" pos:column="32">3<pos:position pos:line="34" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="35">ConnectDialer<pos:position pos:line="34" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="50">this<pos:position pos:line="34" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="56">Adaptation<pos:position pos:line="34" pos:column="66"/></name><operator pos:line="34" pos:column="66">::<pos:position pos:line="34" pos:column="68"/></operator><name pos:line="34" pos:column="68">Icap<pos:position pos:line="34" pos:column="72"/></name><operator pos:line="34" pos:column="72">::<pos:position pos:line="34" pos:column="74"/></operator><name pos:line="34" pos:column="74">Xaction<pos:position pos:line="34" pos:column="81"/></name><operator pos:line="34" pos:column="81">::<pos:position pos:line="34" pos:column="83"/></operator><name pos:line="34" pos:column="83">noteCommConnected<pos:position pos:line="34" pos:column="100"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="102"/></expr_stmt>
    <expr_stmt><expr><name pos:line="35" pos:column="5">cs<pos:position pos:line="35" pos:column="7"/></name> <operator pos:line="35" pos:column="8">=<pos:position pos:line="35" pos:column="9"/></operator> <operator pos:line="35" pos:column="10">new<pos:position pos:line="35" pos:column="13"/></operator> <call><name><name pos:line="35" pos:column="14">Comm<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">::<pos:position pos:line="35" pos:column="20"/></operator><name pos:line="35" pos:column="20">ConnOpener<pos:position pos:line="35" pos:column="30"/></name></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">connection<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="43">connector<pos:position pos:line="35" pos:column="52"/></name></expr></argument>, <argument><expr><call><name><name pos:line="35" pos:column="54">TheConfig<pos:position pos:line="35" pos:column="63"/></name><operator pos:line="35" pos:column="63">.<pos:position pos:line="35" pos:column="64"/></operator><name pos:line="35" pos:column="64">connect_timeout<pos:position pos:line="35" pos:column="79"/></name></name><argument_list pos:line="35" pos:column="79">(<argument><expr><call><name pos:line="35" pos:column="80">service<pos:position pos:line="35" pos:column="87"/></name><argument_list pos:line="35" pos:column="87">()<pos:position pos:line="35" pos:column="89"/></argument_list></call><operator pos:line="35" pos:column="89">.<pos:position pos:line="35" pos:column="90"/></operator><call><name pos:line="35" pos:column="90">cfg<pos:position pos:line="35" pos:column="93"/></name><argument_list pos:line="35" pos:column="93">()<pos:position pos:line="35" pos:column="95"/></argument_list></call><operator pos:line="35" pos:column="95">.<pos:position pos:line="35" pos:column="96"/></operator><name pos:line="35" pos:column="96">bypass<pos:position pos:line="35" pos:column="102"/></name></expr></argument>)<pos:position pos:line="35" pos:column="103"/></argument_list></call></expr></argument>)<pos:position pos:line="35" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="105"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="36" pos:column="5">cs<pos:position pos:line="36" pos:column="7"/></name><operator pos:line="36" pos:column="7">-&gt;<pos:position pos:line="36" pos:column="12"/></operator><name pos:line="36" pos:column="9">setHost<pos:position pos:line="36" pos:column="16"/></name></name><argument_list pos:line="36" pos:column="16">(<argument><expr><call><name><name pos:line="36" pos:column="17">s<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">.<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">cfg<pos:position pos:line="36" pos:column="22"/></name></name><argument_list pos:line="36" pos:column="22">()<pos:position pos:line="36" pos:column="24"/></argument_list></call><operator pos:line="36" pos:column="24">.<pos:position pos:line="36" pos:column="25"/></operator><call><name><name pos:line="36" pos:column="25">host<pos:position pos:line="36" pos:column="29"/></name><operator pos:line="36" pos:column="29">.<pos:position pos:line="36" pos:column="30"/></operator><name pos:line="36" pos:column="30">termedBuf<pos:position pos:line="36" pos:column="39"/></name></name><argument_list pos:line="36" pos:column="39">()<pos:position pos:line="36" pos:column="41"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="37" pos:column="5">AsyncJob<pos:position pos:line="37" pos:column="13"/></name><operator pos:line="37" pos:column="13">::<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">Start<pos:position pos:line="37" pos:column="20"/></name></name><argument_list pos:line="37" pos:column="20">(<argument><expr><call><name><name pos:line="37" pos:column="21">cs<pos:position pos:line="37" pos:column="23"/></name><operator pos:line="37" pos:column="23">.<pos:position pos:line="37" pos:column="24"/></operator><name pos:line="37" pos:column="24">get<pos:position pos:line="37" pos:column="27"/></name></name><argument_list pos:line="37" pos:column="27">()<pos:position pos:line="37" pos:column="29"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4586_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Store<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">Controller<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">updateOnNotModified<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">(<parameter><decl><type><name pos:line="2" pos:column="40">StoreEntry<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">old<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="57">const<pos:position pos:line="2" pos:column="62"/></specifier> <name pos:line="2" pos:column="63">StoreEntry<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">&amp;<pos:position pos:line="2" pos:column="79"/></modifier></type><name pos:line="2" pos:column="75">newer<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="81"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* update the old entry object */</comment>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">old<pos:position pos:line="5" pos:column="13"/></name></expr></argument>)<pos:position pos:line="5" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="15"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HttpReply<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">oldReply<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><cast type="const" pos:line="6" pos:column="27">const_cast<argument_list type="generic" pos:line="6" pos:column="37">&lt;<argument><expr><name pos:line="6" pos:column="38">HttpReply<pos:position pos:line="6" pos:column="47"/></name><operator pos:line="6" pos:column="47">*<pos:position pos:line="6" pos:column="48"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="52"/></argument_list><argument_list pos:line="6" pos:column="49">(<argument><expr><call><name><name pos:line="6" pos:column="50">old<pos:position pos:line="6" pos:column="53"/></name><operator pos:line="6" pos:column="53">-&gt;<pos:position pos:line="6" pos:column="58"/></operator><name pos:line="6" pos:column="55">getReply<pos:position pos:line="6" pos:column="63"/></name></name><argument_list pos:line="6" pos:column="63">()<pos:position pos:line="6" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="6" pos:column="67"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">Must<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">oldReply<pos:position pos:line="7" pos:column="18"/></name></expr></argument>)<pos:position pos:line="7" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">bool<pos:position pos:line="9" pos:column="15"/></name></type> <name pos:line="9" pos:column="16">modified<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><call><name><name pos:line="9" pos:column="27">oldReply<pos:position pos:line="9" pos:column="35"/></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="37">updateOnNotModified<pos:position pos:line="9" pos:column="56"/></name></name><argument_list pos:line="9" pos:column="56">(<argument><expr><call><name><name pos:line="9" pos:column="57">newer<pos:position pos:line="9" pos:column="62"/></name><operator pos:line="9" pos:column="62">.<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="63">getReply<pos:position pos:line="9" pos:column="71"/></name></name><argument_list pos:line="9" pos:column="71">()<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="75"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name><name pos:line="10" pos:column="10">old<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">timestampsSet<pos:position pos:line="10" pos:column="28"/></name></name><argument_list pos:line="10" pos:column="28">()<pos:position pos:line="10" pos:column="30"/></argument_list></call> <operator pos:line="10" pos:column="31">&amp;&amp;<pos:position pos:line="10" pos:column="41"/></operator> <operator pos:line="10" pos:column="34">!<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">modified<pos:position pos:line="10" pos:column="43"/></name></expr>)<pos:position pos:line="10" pos:column="44"/></condition><then pos:line="10" pos:column="44">
        <block type="pseudo"><return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/* update stored image of the old entry */</comment>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">memStore<pos:position pos:line="15" pos:column="17"/></name> <operator pos:line="15" pos:column="18">&amp;&amp;<pos:position pos:line="15" pos:column="28"/></operator> <name><name pos:line="15" pos:column="21">old<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">-&gt;<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="26">mem_status<pos:position pos:line="15" pos:column="36"/></name></name> <operator pos:line="15" pos:column="37">==<pos:position pos:line="15" pos:column="39"/></operator> <name pos:line="15" pos:column="40">IN_MEMORY<pos:position pos:line="15" pos:column="49"/></name> <operator pos:line="15" pos:column="50">&amp;&amp;<pos:position pos:line="15" pos:column="60"/></operator> <operator pos:line="15" pos:column="53">!<pos:position pos:line="15" pos:column="54"/></operator><call><name pos:line="15" pos:column="54">EBIT_TEST<pos:position pos:line="15" pos:column="63"/></name><argument_list pos:line="15" pos:column="63">(<argument><expr><name><name pos:line="15" pos:column="64">old<pos:position pos:line="15" pos:column="67"/></name><operator pos:line="15" pos:column="67">-&gt;<pos:position pos:line="15" pos:column="72"/></operator><name pos:line="15" pos:column="69">flags<pos:position pos:line="15" pos:column="74"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="76">ENTRY_SPECIAL<pos:position pos:line="15" pos:column="89"/></name></expr></argument>)<pos:position pos:line="15" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="91"/></condition><then pos:line="15" pos:column="91">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="16" pos:column="9">memStore<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">-&gt;<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="19">updateHeaders<pos:position pos:line="16" pos:column="32"/></name></name><argument_list pos:line="16" pos:column="32">(<argument><expr><name pos:line="16" pos:column="33">old<pos:position pos:line="16" pos:column="36"/></name></expr></argument>)<pos:position pos:line="16" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="38"/></expr_stmt></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">old<pos:position pos:line="18" pos:column="12"/></name><operator pos:line="18" pos:column="12">-&gt;<pos:position pos:line="18" pos:column="17"/></operator><name pos:line="18" pos:column="14">swap_dirn<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">&gt;<pos:position pos:line="18" pos:column="28"/></operator> <operator pos:line="18" pos:column="26">-<pos:position pos:line="18" pos:column="27"/></operator><literal type="number" pos:line="18" pos:column="27">1<pos:position pos:line="18" pos:column="28"/></literal></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="19" pos:column="9">swapDir<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">updateHeaders<pos:position pos:line="19" pos:column="31"/></name></name><argument_list pos:line="19" pos:column="31">(<argument><expr><name pos:line="19" pos:column="32">old<pos:position pos:line="19" pos:column="35"/></name></expr></argument>)<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt></block></then></if>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

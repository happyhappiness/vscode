<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_241_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">wchar_t<pos:position pos:line="1" pos:column="8"/></name> <modifier pos:line="1" pos:column="9">*<pos:position pos:line="1" pos:column="10"/></modifier></type>
<name pos:line="2" pos:column="1">Get_primaryGroup<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">IADs<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type> <name pos:line="2" pos:column="25">pUser<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HRESULT<pos:position pos:line="4" pos:column="12"/></name></type> <name pos:line="4" pos:column="13">hr<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">VARIANT<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">var<pos:position pos:line="5" pos:column="16"/></name></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">unsigned<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">User_primaryGroupID<pos:position pos:line="6" pos:column="33"/></name></decl>;<pos:position pos:line="6" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name></type> <name><name pos:line="7" pos:column="10">tmpSID<pos:position pos:line="7" pos:column="16"/></name><index pos:line="7" pos:column="16">[<expr><name pos:line="7" pos:column="17">SECURITY_MAX_SID_SIZE<pos:position pos:line="7" pos:column="38"/></name> <operator pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></operator> <literal type="number" pos:line="7" pos:column="41">2<pos:position pos:line="7" pos:column="42"/></literal></expr>]<pos:position pos:line="7" pos:column="43"/></index></name></decl>;<pos:position pos:line="7" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">wchar_t<pos:position pos:line="8" pos:column="12"/></name> <modifier pos:line="8" pos:column="13">*<pos:position pos:line="8" pos:column="14"/></modifier></type><name pos:line="8" pos:column="14">wc<pos:position pos:line="8" pos:column="16"/></name> <init pos:line="8" pos:column="17">= <expr><name pos:line="8" pos:column="19">NULL<pos:position pos:line="8" pos:column="23"/></name></expr></init></decl>, <modifier pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="26">result<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><name pos:line="8" pos:column="35">NULL<pos:position pos:line="8" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">wcsize<pos:position pos:line="9" pos:column="15"/></name></decl>;<pos:position pos:line="9" pos:column="16"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">VariantInit<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><operator pos:line="11" pos:column="17">&amp;<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="18">var<pos:position pos:line="11" pos:column="21"/></name></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* Get the primaryGroupID property */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">hr<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name><name pos:line="14" pos:column="10">pUser<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">lpVtbl<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">Get<pos:position pos:line="14" pos:column="28"/></name></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">pUser<pos:position pos:line="14" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="36">L"primaryGroupID"<pos:position pos:line="14" pos:column="53"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="55">&amp;<pos:position pos:line="14" pos:column="60"/></operator><name pos:line="14" pos:column="56">var<pos:position pos:line="14" pos:column="59"/></name></expr></argument>)<pos:position pos:line="14" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="61"/></expr_stmt>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name pos:line="15" pos:column="9">SUCCEEDED<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><name pos:line="15" pos:column="19">hr<pos:position pos:line="15" pos:column="21"/></name></expr></argument>)<pos:position pos:line="15" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="23"/></condition><then pos:line="15" pos:column="23"> <block pos:line="15" pos:column="24">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">User_primaryGroupID<pos:position pos:line="16" pos:column="28"/></name> <operator pos:line="16" pos:column="29">=<pos:position pos:line="16" pos:column="30"/></operator> <name><name pos:line="16" pos:column="31">var<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">.<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="35">n1<pos:position pos:line="16" pos:column="37"/></name><operator pos:line="16" pos:column="37">.<pos:position pos:line="16" pos:column="38"/></operator><name pos:line="16" pos:column="38">n2<pos:position pos:line="16" pos:column="40"/></name><operator pos:line="16" pos:column="40">.<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="41">n3<pos:position pos:line="16" pos:column="43"/></name><operator pos:line="16" pos:column="43">.<pos:position pos:line="16" pos:column="44"/></operator><name pos:line="16" pos:column="44">uintVal<pos:position pos:line="16" pos:column="51"/></name></name></expr>;<pos:position pos:line="16" pos:column="52"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then> <else pos:line="17" pos:column="7">else <block pos:line="17" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debug<pos:position pos:line="18" pos:column="14"/></name><argument_list pos:line="18" pos:column="14">(<argument><expr><literal type="string" pos:line="18" pos:column="15">"Get_primaryGroup: cannot get primaryGroupID, ERROR: %s\n"<pos:position pos:line="18" pos:column="73"/></literal></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="75">Get_WIN32_ErrorMessage<pos:position pos:line="18" pos:column="97"/></name><argument_list pos:line="18" pos:column="97">(<argument><expr><name pos:line="18" pos:column="98">hr<pos:position pos:line="18" pos:column="100"/></name></expr></argument>)<pos:position pos:line="18" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="103"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">VariantClear<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><operator pos:line="19" pos:column="22">&amp;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="23">var<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><name pos:line="20" pos:column="16">result<pos:position pos:line="20" pos:column="22"/></name></expr>;<pos:position pos:line="20" pos:column="23"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">VariantClear<pos:position pos:line="22" pos:column="17"/></name><argument_list pos:line="22" pos:column="17">(<argument><expr><operator pos:line="22" pos:column="18">&amp;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="19">var<pos:position pos:line="22" pos:column="22"/></name></expr></argument>)<pos:position pos:line="22" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="24"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/*Get the objectSid property */</comment>
    <expr_stmt><expr><name pos:line="25" pos:column="5">hr<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <call><name><name pos:line="25" pos:column="10">pUser<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">-&gt;<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="17">lpVtbl<pos:position pos:line="25" pos:column="23"/></name><operator pos:line="25" pos:column="23">-&gt;<pos:position pos:line="25" pos:column="28"/></operator><name pos:line="25" pos:column="25">Get<pos:position pos:line="25" pos:column="28"/></name></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name pos:line="25" pos:column="29">pUser<pos:position pos:line="25" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="36">L"objectSid"<pos:position pos:line="25" pos:column="48"/></literal></expr></argument>, <argument><expr><operator pos:line="25" pos:column="50">&amp;<pos:position pos:line="25" pos:column="55"/></operator><name pos:line="25" pos:column="51">var<pos:position pos:line="25" pos:column="54"/></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><call><name pos:line="26" pos:column="9">SUCCEEDED<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name pos:line="26" pos:column="19">hr<pos:position pos:line="26" pos:column="21"/></name></expr></argument>)<pos:position pos:line="26" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="23"/></condition><then pos:line="26" pos:column="23"> <block pos:line="26" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">PSID<pos:position pos:line="27" pos:column="13"/></name></type> <name pos:line="27" pos:column="14">pObjectSID<pos:position pos:line="27" pos:column="24"/></name></decl>;<pos:position pos:line="27" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">LPBYTE<pos:position pos:line="28" pos:column="15"/></name></type> <name pos:line="28" pos:column="16">pByte<pos:position pos:line="28" pos:column="21"/></name> <init pos:line="28" pos:column="22">= <expr><name pos:line="28" pos:column="24">NULL<pos:position pos:line="28" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="28" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">char<pos:position pos:line="29" pos:column="13"/></name> <modifier pos:line="29" pos:column="14">*<pos:position pos:line="29" pos:column="15"/></modifier></type><name pos:line="29" pos:column="15">szSID<pos:position pos:line="29" pos:column="20"/></name> <init pos:line="29" pos:column="21">= <expr><name pos:line="29" pos:column="23">NULL<pos:position pos:line="29" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><name pos:line="30" pos:column="9">hr<pos:position pos:line="30" pos:column="11"/></name> <operator pos:line="30" pos:column="12">=<pos:position pos:line="30" pos:column="13"/></operator> <call><name pos:line="30" pos:column="14">GetLPBYTEtoOctetString<pos:position pos:line="30" pos:column="36"/></name><argument_list pos:line="30" pos:column="36">(<argument><expr><operator pos:line="30" pos:column="37">&amp;<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="38">var<pos:position pos:line="30" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="43">&amp;<pos:position pos:line="30" pos:column="48"/></operator><name pos:line="30" pos:column="44">pByte<pos:position pos:line="30" pos:column="49"/></name></expr></argument>)<pos:position pos:line="30" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="51"/></expr_stmt>

        <expr_stmt><expr><name pos:line="32" pos:column="9">pObjectSID<pos:position pos:line="32" pos:column="19"/></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <operator pos:line="32" pos:column="22">(<pos:position pos:line="32" pos:column="23"/></operator><name pos:line="32" pos:column="23">PSID<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">)<pos:position pos:line="32" pos:column="28"/></operator> <name pos:line="32" pos:column="29">pByte<pos:position pos:line="32" pos:column="34"/></name></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>

        <comment type="block" pos:line="34" pos:column="9">/* Convert SID to string. */</comment>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">ConvertSidToStringSid<pos:position pos:line="35" pos:column="30"/></name><argument_list pos:line="35" pos:column="30">(<argument><expr><name pos:line="35" pos:column="31">pObjectSID<pos:position pos:line="35" pos:column="41"/></name></expr></argument>, <argument><expr><operator pos:line="35" pos:column="43">&amp;<pos:position pos:line="35" pos:column="48"/></operator><name pos:line="35" pos:column="44">szSID<pos:position pos:line="35" pos:column="49"/></name></expr></argument>)<pos:position pos:line="35" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="36" pos:column="9">CoTaskMemFree<pos:position pos:line="36" pos:column="22"/></name><argument_list pos:line="36" pos:column="22">(<argument><expr><name pos:line="36" pos:column="23">pByte<pos:position pos:line="36" pos:column="28"/></name></expr></argument>)<pos:position pos:line="36" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="30"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="38" pos:column="9">*<pos:position pos:line="38" pos:column="10"/></operator><operator pos:line="38" pos:column="10">(<pos:position pos:line="38" pos:column="11"/></operator><call><name pos:line="38" pos:column="11">strrchr<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><name pos:line="38" pos:column="19">szSID<pos:position pos:line="38" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="38" pos:column="26">'-'<pos:position pos:line="38" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="30"/></argument_list></call> <operator pos:line="38" pos:column="31">+<pos:position pos:line="38" pos:column="32"/></operator> <literal type="number" pos:line="38" pos:column="33">1<pos:position pos:line="38" pos:column="34"/></literal><operator pos:line="38" pos:column="34">)<pos:position pos:line="38" pos:column="35"/></operator> <operator pos:line="38" pos:column="36">=<pos:position pos:line="38" pos:column="37"/></operator> <literal type="char" pos:line="38" pos:column="38">'\0'<pos:position pos:line="38" pos:column="42"/></literal></expr>;<pos:position pos:line="38" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">sprintf<pos:position pos:line="39" pos:column="16"/></name><argument_list pos:line="39" pos:column="16">(<argument><expr><name pos:line="39" pos:column="17">tmpSID<pos:position pos:line="39" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="25">"%s%u"<pos:position pos:line="39" pos:column="31"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="33">szSID<pos:position pos:line="39" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="40">User_primaryGroupID<pos:position pos:line="39" pos:column="59"/></name></expr></argument>)<pos:position pos:line="39" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="61"/></expr_stmt>

        <expr_stmt><expr><name pos:line="41" pos:column="9">wcsize<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <call><name pos:line="41" pos:column="18">MultiByteToWideChar<pos:position pos:line="41" pos:column="37"/></name><argument_list pos:line="41" pos:column="37">(<argument><expr><name pos:line="41" pos:column="38">CP_ACP<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="46">0<pos:position pos:line="41" pos:column="47"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="49">tmpSID<pos:position pos:line="41" pos:column="55"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="57">-<pos:position pos:line="41" pos:column="58"/></operator><literal type="number" pos:line="41" pos:column="58">1<pos:position pos:line="41" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="41" pos:column="61">wc<pos:position pos:line="41" pos:column="63"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="65">0<pos:position pos:line="41" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name pos:line="42" pos:column="9">wc<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <operator pos:line="42" pos:column="14">(<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="15">wchar_t<pos:position pos:line="42" pos:column="22"/></name> <operator pos:line="42" pos:column="23">*<pos:position pos:line="42" pos:column="24"/></operator><operator pos:line="42" pos:column="24">)<pos:position pos:line="42" pos:column="25"/></operator> <call><name pos:line="42" pos:column="26">xmalloc<pos:position pos:line="42" pos:column="33"/></name><argument_list pos:line="42" pos:column="33">(<argument><expr><name pos:line="42" pos:column="34">wcsize<pos:position pos:line="42" pos:column="40"/></name> <operator pos:line="42" pos:column="41">*<pos:position pos:line="42" pos:column="42"/></operator> <sizeof pos:line="42" pos:column="43">sizeof<argument_list pos:line="42" pos:column="49">(<argument><expr><name pos:line="42" pos:column="50">wchar_t<pos:position pos:line="42" pos:column="57"/></name></expr></argument>)<pos:position pos:line="42" pos:column="58"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">MultiByteToWideChar<pos:position pos:line="43" pos:column="28"/></name><argument_list pos:line="43" pos:column="28">(<argument><expr><name pos:line="43" pos:column="29">CP_ACP<pos:position pos:line="43" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="37">0<pos:position pos:line="43" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="40">tmpSID<pos:position pos:line="43" pos:column="46"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="48">-<pos:position pos:line="43" pos:column="49"/></operator><literal type="number" pos:line="43" pos:column="49">1<pos:position pos:line="43" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="43" pos:column="52">wc<pos:position pos:line="43" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="56">wcsize<pos:position pos:line="43" pos:column="62"/></name></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">LocalFree<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><name pos:line="44" pos:column="19">szSID<pos:position pos:line="44" pos:column="24"/></name></expr></argument>)<pos:position pos:line="44" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><name pos:line="46" pos:column="9">result<pos:position pos:line="46" pos:column="15"/></name> <operator pos:line="46" pos:column="16">=<pos:position pos:line="46" pos:column="17"/></operator> <call><name pos:line="46" pos:column="18">My_NameTranslate<pos:position pos:line="46" pos:column="34"/></name><argument_list pos:line="46" pos:column="34">(<argument><expr><name pos:line="46" pos:column="35">wc<pos:position pos:line="46" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="39">ADS_NAME_TYPE_SID_OR_SID_HISTORY_NAME<pos:position pos:line="46" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="78">ADS_NAME_TYPE_1779<pos:position pos:line="46" pos:column="96"/></name></expr></argument>)<pos:position pos:line="46" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="98"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">safe_free<pos:position pos:line="47" pos:column="18"/></name><argument_list pos:line="47" pos:column="18">(<argument><expr><name pos:line="47" pos:column="19">wc<pos:position pos:line="47" pos:column="21"/></name></expr></argument>)<pos:position pos:line="47" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="23"/></expr_stmt>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name pos:line="49" pos:column="13">result<pos:position pos:line="49" pos:column="19"/></name> <operator pos:line="49" pos:column="20">==<pos:position pos:line="49" pos:column="22"/></operator> <name pos:line="49" pos:column="23">NULL<pos:position pos:line="49" pos:column="27"/></name></expr>)<pos:position pos:line="49" pos:column="28"/></condition><then pos:line="49" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="13">debug<pos:position pos:line="50" pos:column="18"/></name><argument_list pos:line="50" pos:column="18">(<argument><expr><literal type="string" pos:line="50" pos:column="19">"Get_primaryGroup: cannot get DN for %s.\n"<pos:position pos:line="50" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="50" pos:column="64">tmpSID<pos:position pos:line="50" pos:column="70"/></name></expr></argument>)<pos:position pos:line="50" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="72"/></expr_stmt></block></then>
        <else pos:line="51" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="52" pos:column="13">debug<pos:position pos:line="52" pos:column="18"/></name><argument_list pos:line="52" pos:column="18">(<argument><expr><literal type="string" pos:line="52" pos:column="19">"Get_primaryGroup: Primary group DN: %S.\n"<pos:position pos:line="52" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="64">result<pos:position pos:line="52" pos:column="70"/></name></expr></argument>)<pos:position pos:line="52" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="72"/></expr_stmt></block></else></if>
    }<pos:position pos:line="53" pos:column="6"/></block></then> <else pos:line="53" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="54" pos:column="9">debug<pos:position pos:line="54" pos:column="14"/></name><argument_list pos:line="54" pos:column="14">(<argument><expr><literal type="string" pos:line="54" pos:column="15">"Get_primaryGroup: cannot get objectSid, ERROR: %s\n"<pos:position pos:line="54" pos:column="68"/></literal></expr></argument>, <argument><expr><call><name pos:line="54" pos:column="70">Get_WIN32_ErrorMessage<pos:position pos:line="54" pos:column="92"/></name><argument_list pos:line="54" pos:column="92">(<argument><expr><name pos:line="54" pos:column="93">hr<pos:position pos:line="54" pos:column="95"/></name></expr></argument>)<pos:position pos:line="54" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="98"/></expr_stmt></block></else></if>
    <expr_stmt><expr><call><name pos:line="55" pos:column="5">VariantClear<pos:position pos:line="55" pos:column="17"/></name><argument_list pos:line="55" pos:column="17">(<argument><expr><operator pos:line="55" pos:column="18">&amp;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="19">var<pos:position pos:line="55" pos:column="22"/></name></expr></argument>)<pos:position pos:line="55" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>
    <return pos:line="56" pos:column="5">return <expr><name pos:line="56" pos:column="12">result<pos:position pos:line="56" pos:column="18"/></name></expr>;<pos:position pos:line="56" pos:column="19"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

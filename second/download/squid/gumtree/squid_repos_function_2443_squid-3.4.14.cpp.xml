<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2443_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpHdrCc<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">packInto<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">Packer<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type> <name pos:line="2" pos:column="30">p<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list> <specifier pos:line="2" pos:column="33">const<pos:position pos:line="2" pos:column="38"/></specifier>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// optimization: if the mask is empty do nothing</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">mask<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">==<pos:position pos:line="5" pos:column="15"/></operator><literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr>)<pos:position pos:line="5" pos:column="17"/></condition><then pos:line="5" pos:column="17">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">http_hdr_cc_type<pos:position pos:line="8" pos:column="21"/></name></type> <name pos:line="8" pos:column="22">flag<pos:position pos:line="8" pos:column="26"/></name></decl>;<pos:position pos:line="8" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">pcount<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">assert<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><name pos:line="10" pos:column="12">p<pos:position pos:line="10" pos:column="13"/></name></expr></argument>)<pos:position pos:line="10" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="15"/></expr_stmt>

    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><expr><name pos:line="12" pos:column="10">flag<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <name pos:line="12" pos:column="17">CC_PUBLIC<pos:position pos:line="12" pos:column="26"/></name></expr>;<pos:position pos:line="12" pos:column="27"/></init> <condition><expr><name pos:line="12" pos:column="28">flag<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">&lt;<pos:position pos:line="12" pos:column="37"/></operator> <name pos:line="12" pos:column="35">CC_ENUM_END<pos:position pos:line="12" pos:column="46"/></name></expr>;<pos:position pos:line="12" pos:column="47"/></condition> <incr><expr><operator pos:line="12" pos:column="48">++<pos:position pos:line="12" pos:column="50"/></operator><name pos:line="12" pos:column="50">flag<pos:position pos:line="12" pos:column="54"/></name></expr></incr>)<pos:position pos:line="12" pos:column="55"/></control> <block pos:line="12" pos:column="56">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">isSet<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><name pos:line="13" pos:column="19">flag<pos:position pos:line="13" pos:column="23"/></name></expr></argument>)<pos:position pos:line="13" pos:column="24"/></argument_list></call> <operator pos:line="13" pos:column="25">&amp;&amp;<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="28">flag<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">!=<pos:position pos:line="13" pos:column="35"/></operator> <name pos:line="13" pos:column="36">CC_OTHER<pos:position pos:line="13" pos:column="44"/></name></expr>)<pos:position pos:line="13" pos:column="45"/></condition><then pos:line="13" pos:column="45"> <block pos:line="13" pos:column="46">{

            <comment type="block" pos:line="15" pos:column="13">/* print option name for all options */</comment>
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">packerPrintf<pos:position pos:line="16" pos:column="25"/></name><argument_list pos:line="16" pos:column="25">(<argument><expr><name pos:line="16" pos:column="26">p<pos:position pos:line="16" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="16" pos:column="29">(<pos:position pos:line="16" pos:column="30"/></operator><ternary><condition><expr><name pos:line="16" pos:column="30">pcount<pos:position pos:line="16" pos:column="36"/></name></expr> ?<pos:position pos:line="16" pos:column="38"/></condition><then pos:line="16" pos:column="38"> <expr><literal type="string" pos:line="16" pos:column="39">", %s"<pos:position pos:line="16" pos:column="45"/></literal></expr></then><else pos:line="16" pos:column="45">: <expr><literal type="string" pos:line="16" pos:column="47">"%s"<pos:position pos:line="16" pos:column="51"/></literal></expr></else></ternary><operator pos:line="16" pos:column="51">)<pos:position pos:line="16" pos:column="52"/></operator></expr></argument> , <argument><expr><name><name pos:line="16" pos:column="55">CcAttrs<pos:position pos:line="16" pos:column="62"/></name><index pos:line="16" pos:column="62">[<expr><name pos:line="16" pos:column="63">flag<pos:position pos:line="16" pos:column="67"/></name></expr>]<pos:position pos:line="16" pos:column="68"/></index></name><operator pos:line="16" pos:column="68">.<pos:position pos:line="16" pos:column="69"/></operator><name pos:line="16" pos:column="69">name<pos:position pos:line="16" pos:column="73"/></name></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt>

            <comment type="block" pos:line="18" pos:column="13">/* for all options having values, "=value" after the name */</comment>
            <switch pos:line="19" pos:column="13">switch <condition pos:line="19" pos:column="20">(<expr><name pos:line="19" pos:column="21">flag<pos:position pos:line="19" pos:column="25"/></name></expr>)<pos:position pos:line="19" pos:column="26"/></condition> <block pos:line="19" pos:column="27">{
            <case pos:line="20" pos:column="13">case <expr><name pos:line="20" pos:column="18">CC_MAX_AGE<pos:position pos:line="20" pos:column="28"/></name></expr>:<pos:position pos:line="20" pos:column="29"/></case>
                <expr_stmt><expr><call><name pos:line="21" pos:column="17">packerPrintf<pos:position pos:line="21" pos:column="29"/></name><argument_list pos:line="21" pos:column="29">(<argument><expr><name pos:line="21" pos:column="30">p<pos:position pos:line="21" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="33">"=%d"<pos:position pos:line="21" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="21" pos:column="40">(<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">int<pos:position pos:line="21" pos:column="44"/></name><operator pos:line="21" pos:column="44">)<pos:position pos:line="21" pos:column="45"/></operator> <call><name pos:line="21" pos:column="46">maxAge<pos:position pos:line="21" pos:column="52"/></name><argument_list pos:line="21" pos:column="52">()<pos:position pos:line="21" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="56"/></expr_stmt>
                <break pos:line="22" pos:column="17">break;<pos:position pos:line="22" pos:column="23"/></break>
            <case pos:line="23" pos:column="13">case <expr><name pos:line="23" pos:column="18">CC_S_MAXAGE<pos:position pos:line="23" pos:column="29"/></name></expr>:<pos:position pos:line="23" pos:column="30"/></case>
                <expr_stmt><expr><call><name pos:line="24" pos:column="17">packerPrintf<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">p<pos:position pos:line="24" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="33">"=%d"<pos:position pos:line="24" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="40">(<pos:position pos:line="24" pos:column="41"/></operator><name pos:line="24" pos:column="41">int<pos:position pos:line="24" pos:column="44"/></name><operator pos:line="24" pos:column="44">)<pos:position pos:line="24" pos:column="45"/></operator> <call><name pos:line="24" pos:column="46">sMaxAge<pos:position pos:line="24" pos:column="53"/></name><argument_list pos:line="24" pos:column="53">()<pos:position pos:line="24" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="57"/></expr_stmt>
                <break pos:line="25" pos:column="17">break;<pos:position pos:line="25" pos:column="23"/></break>
            <case pos:line="26" pos:column="13">case <expr><name pos:line="26" pos:column="18">CC_MAX_STALE<pos:position pos:line="26" pos:column="30"/></name></expr>:<pos:position pos:line="26" pos:column="31"/></case>
                <comment type="block" pos:line="27" pos:column="17">/* max-stale's value is optional.
                  If we didn't receive it, don't send it */</comment>
                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name pos:line="29" pos:column="21">maxStale<pos:position pos:line="29" pos:column="29"/></name><argument_list pos:line="29" pos:column="29">()<pos:position pos:line="29" pos:column="31"/></argument_list></call><operator pos:line="29" pos:column="31">!=<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">MAX_STALE_ANY<pos:position pos:line="29" pos:column="46"/></name></expr>)<pos:position pos:line="29" pos:column="47"/></condition><then pos:line="29" pos:column="47">
                    <block type="pseudo"><expr_stmt><expr><call><name pos:line="30" pos:column="21">packerPrintf<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">p<pos:position pos:line="30" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="37">"=%d"<pos:position pos:line="30" pos:column="42"/></literal></expr></argument>, <argument><expr><operator pos:line="30" pos:column="44">(<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="45">int<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">)<pos:position pos:line="30" pos:column="49"/></operator> <call><name pos:line="30" pos:column="50">maxStale<pos:position pos:line="30" pos:column="58"/></name><argument_list pos:line="30" pos:column="58">()<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt></block></then></if>
                <break pos:line="31" pos:column="17">break;<pos:position pos:line="31" pos:column="23"/></break>
            <case pos:line="32" pos:column="13">case <expr><name pos:line="32" pos:column="18">CC_MIN_FRESH<pos:position pos:line="32" pos:column="30"/></name></expr>:<pos:position pos:line="32" pos:column="31"/></case>
                <expr_stmt><expr><call><name pos:line="33" pos:column="17">packerPrintf<pos:position pos:line="33" pos:column="29"/></name><argument_list pos:line="33" pos:column="29">(<argument><expr><name pos:line="33" pos:column="30">p<pos:position pos:line="33" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="33">"=%d"<pos:position pos:line="33" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="33" pos:column="40">(<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="41">int<pos:position pos:line="33" pos:column="44"/></name><operator pos:line="33" pos:column="44">)<pos:position pos:line="33" pos:column="45"/></operator> <call><name pos:line="33" pos:column="46">minFresh<pos:position pos:line="33" pos:column="54"/></name><argument_list pos:line="33" pos:column="54">()<pos:position pos:line="33" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="58"/></expr_stmt>
                <break pos:line="34" pos:column="17">break;<pos:position pos:line="34" pos:column="23"/></break>
            <default pos:line="35" pos:column="13">default:<pos:position pos:line="35" pos:column="21"/></default>
                <comment type="block" pos:line="36" pos:column="17">/* do nothing, directive was already printed */</comment>
                <break pos:line="37" pos:column="17">break;<pos:position pos:line="37" pos:column="23"/></break>
            }<pos:position pos:line="38" pos:column="14"/></block></switch>

            <expr_stmt><expr><operator pos:line="40" pos:column="13">++<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">pcount<pos:position pos:line="40" pos:column="21"/></name></expr>;<pos:position pos:line="40" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></then></if>
    }<pos:position pos:line="42" pos:column="6"/></block></for>

    <if pos:line="44" pos:column="5">if <condition pos:line="44" pos:column="8">(<expr><call><name><name pos:line="44" pos:column="9">other<pos:position pos:line="44" pos:column="14"/></name><operator pos:line="44" pos:column="14">.<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="15">size<pos:position pos:line="44" pos:column="19"/></name></name><argument_list pos:line="44" pos:column="19">()<pos:position pos:line="44" pos:column="21"/></argument_list></call> <operator pos:line="44" pos:column="22">!=<pos:position pos:line="44" pos:column="24"/></operator> <literal type="number" pos:line="44" pos:column="25">0<pos:position pos:line="44" pos:column="26"/></literal></expr>)<pos:position pos:line="44" pos:column="27"/></condition><then pos:line="44" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="9">packerPrintf<pos:position pos:line="45" pos:column="21"/></name><argument_list pos:line="45" pos:column="21">(<argument><expr><name pos:line="45" pos:column="22">p<pos:position pos:line="45" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="45" pos:column="25">(<pos:position pos:line="45" pos:column="26"/></operator><ternary><condition><expr><name pos:line="45" pos:column="26">pcount<pos:position pos:line="45" pos:column="32"/></name></expr> ?<pos:position pos:line="45" pos:column="34"/></condition><then pos:line="45" pos:column="34"> <expr><literal type="string" pos:line="45" pos:column="35">", "<pos:position pos:line="45" pos:column="39"/></literal> <name pos:line="45" pos:column="40">SQUIDSTRINGPH<pos:position pos:line="45" pos:column="53"/></name></expr> <pos:position pos:line="45" pos:column="54"/></then><else pos:line="45" pos:column="54">: <expr><name pos:line="45" pos:column="56">SQUIDSTRINGPH<pos:position pos:line="45" pos:column="69"/></name></expr></else></ternary><operator pos:line="45" pos:column="69">)<pos:position pos:line="45" pos:column="70"/></operator></expr></argument>,
                     <argument><expr><call><name pos:line="46" pos:column="22">SQUIDSTRINGPRINT<pos:position pos:line="46" pos:column="38"/></name><argument_list pos:line="46" pos:column="38">(<argument><expr><name pos:line="46" pos:column="39">other<pos:position pos:line="46" pos:column="44"/></name></expr></argument>)<pos:position pos:line="46" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="47"/></expr_stmt></block></then></if>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

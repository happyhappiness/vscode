<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1294_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">EventScheduler<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">dump<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">StoreEntry<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type> <name pos:line="2" pos:column="35">sentry<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{

    <decl_stmt><decl><type><name pos:line="5" pos:column="5">ev_entry<pos:position pos:line="5" pos:column="13"/></name> <modifier pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></modifier></type><name pos:line="5" pos:column="15">e<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><name pos:line="5" pos:column="19">tasks<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">last_event_ran<pos:position pos:line="7" pos:column="23"/></name></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">storeAppendPrintf<pos:position pos:line="8" pos:column="26"/></name><argument_list pos:line="8" pos:column="26">(<argument><expr><name pos:line="8" pos:column="27">sentry<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="35">"Last event to run: %s\n\n"<pos:position pos:line="8" pos:column="62"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="64">last_event_ran<pos:position pos:line="8" pos:column="78"/></name></expr></argument>)<pos:position pos:line="8" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="80"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">storeAppendPrintf<pos:position pos:line="10" pos:column="22"/></name><argument_list pos:line="10" pos:column="22">(<argument><expr><name pos:line="10" pos:column="23">sentry<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="31">"%-25s\t%-15s\t%s\t%s\n"<pos:position pos:line="10" pos:column="55"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="11" pos:column="23">"Operation"<pos:position pos:line="11" pos:column="34"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="12" pos:column="23">"Next Execution"<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="13" pos:column="23">"Weight"<pos:position pos:line="13" pos:column="31"/></literal></expr></argument>,
                      <argument><expr><literal type="string" pos:line="14" pos:column="23">"Callback Valid?"<pos:position pos:line="14" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>

    <while pos:line="16" pos:column="5">while <condition pos:line="16" pos:column="11">(<expr><name pos:line="16" pos:column="12">e<pos:position pos:line="16" pos:column="13"/></name> <operator pos:line="16" pos:column="14">!=<pos:position pos:line="16" pos:column="16"/></operator> <name pos:line="16" pos:column="17">NULL<pos:position pos:line="16" pos:column="21"/></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition> <block pos:line="16" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">storeAppendPrintf<pos:position pos:line="17" pos:column="26"/></name><argument_list pos:line="17" pos:column="26">(<argument><expr><name pos:line="17" pos:column="27">sentry<pos:position pos:line="17" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="35">"%-25s\t%0.3f sec\t%5d\t %s\n"<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>,
                          <argument><expr><name><name pos:line="18" pos:column="27">e<pos:position pos:line="18" pos:column="28"/></name><operator pos:line="18" pos:column="28">-&gt;<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="30">name<pos:position pos:line="18" pos:column="34"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="18" pos:column="36">e<pos:position pos:line="18" pos:column="37"/></name><operator pos:line="18" pos:column="37">-&gt;<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="39">when<pos:position pos:line="18" pos:column="43"/></name></name></expr> ?<pos:position pos:line="18" pos:column="45"/></condition><then pos:line="18" pos:column="45"> <expr><name><name pos:line="18" pos:column="46">e<pos:position pos:line="18" pos:column="47"/></name><operator pos:line="18" pos:column="47">-&gt;<pos:position pos:line="18" pos:column="52"/></operator><name pos:line="18" pos:column="49">when<pos:position pos:line="18" pos:column="53"/></name></name> <operator pos:line="18" pos:column="54">-<pos:position pos:line="18" pos:column="55"/></operator> <name pos:line="18" pos:column="56">current_dtime<pos:position pos:line="18" pos:column="69"/></name></expr> <pos:position pos:line="18" pos:column="70"/></then><else pos:line="18" pos:column="70">: <expr><literal type="number" pos:line="18" pos:column="72">0<pos:position pos:line="18" pos:column="73"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name><name pos:line="18" pos:column="75">e<pos:position pos:line="18" pos:column="76"/></name><operator pos:line="18" pos:column="76">-&gt;<pos:position pos:line="18" pos:column="81"/></operator><name pos:line="18" pos:column="78">weight<pos:position pos:line="18" pos:column="84"/></name></name></expr></argument>,
                  <argument><expr><ternary><condition><expr><operator pos:line="19" pos:column="19">(<pos:position pos:line="19" pos:column="20"/></operator><name><name pos:line="19" pos:column="20">e<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">-&gt;<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="23">arg<pos:position pos:line="19" pos:column="26"/></name></name> <operator pos:line="19" pos:column="27">&amp;&amp;<pos:position pos:line="19" pos:column="37"/></operator> <name><name pos:line="19" pos:column="30">e<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">-&gt;<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="33">cbdata<pos:position pos:line="19" pos:column="39"/></name></name><operator pos:line="19" pos:column="39">)<pos:position pos:line="19" pos:column="40"/></operator></expr> ?<pos:position pos:line="19" pos:column="42"/></condition><then pos:line="19" pos:column="42"> <expr><ternary><condition><expr><call><name pos:line="19" pos:column="43">cbdataReferenceValid<pos:position pos:line="19" pos:column="63"/></name><argument_list pos:line="19" pos:column="63">(<argument><expr><name><name pos:line="19" pos:column="64">e<pos:position pos:line="19" pos:column="65"/></name><operator pos:line="19" pos:column="65">-&gt;<pos:position pos:line="19" pos:column="70"/></operator><name pos:line="19" pos:column="67">arg<pos:position pos:line="19" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="71"/></argument_list></call></expr> ?<pos:position pos:line="19" pos:column="73"/></condition><then pos:line="19" pos:column="73"> <expr><literal type="string" pos:line="19" pos:column="74">"yes"<pos:position pos:line="19" pos:column="79"/></literal></expr> <pos:position pos:line="19" pos:column="80"/></then><else pos:line="19" pos:column="80">: <expr><literal type="string" pos:line="19" pos:column="82">"no"<pos:position pos:line="19" pos:column="86"/></literal></expr></else></ternary></expr> <pos:position pos:line="19" pos:column="87"/></then><else pos:line="19" pos:column="87">: <expr><literal type="string" pos:line="19" pos:column="89">"N/A"<pos:position pos:line="19" pos:column="94"/></literal></expr></else></ternary></expr></argument>)<pos:position pos:line="19" pos:column="95"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="96"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">e<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <name><name pos:line="20" pos:column="13">e<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">next<pos:position pos:line="20" pos:column="20"/></name></name></expr>;<pos:position pos:line="20" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></while>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

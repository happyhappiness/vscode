<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4649_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Server<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">handleUploadRequest<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">(<parameter><decl><type><name pos:line="2" pos:column="34">String<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">&amp;<pos:position pos:line="2" pos:column="46"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">String<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">&amp;<pos:position pos:line="2" pos:column="56"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">checkDataConnPre<pos:position pos:line="4" pos:column="26"/></name><argument_list pos:line="4" pos:column="26">()<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="29"/></condition><then pos:line="4" pos:column="29">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><literal type="boolean" pos:line="5" pos:column="16">false<pos:position pos:line="5" pos:column="21"/></literal></expr>;<pos:position pos:line="5" pos:column="22"/></return></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">Config<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">.<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">accessList<pos:position pos:line="7" pos:column="26"/></name><operator pos:line="7" pos:column="26">.<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">forceRequestBodyContinuation<pos:position pos:line="7" pos:column="55"/></name></name></expr>)<pos:position pos:line="7" pos:column="56"/></condition><then pos:line="7" pos:column="56"> <block pos:line="7" pos:column="57">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">ClientHttpRequest<pos:position pos:line="8" pos:column="26"/></name> <modifier pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></modifier></type><name pos:line="8" pos:column="28">http<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><call><name><name pos:line="8" pos:column="35">pipeline<pos:position pos:line="8" pos:column="43"/></name><operator pos:line="8" pos:column="43">.<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="44">front<pos:position pos:line="8" pos:column="49"/></name></name><argument_list pos:line="8" pos:column="49">()<pos:position pos:line="8" pos:column="51"/></argument_list></call><operator pos:line="8" pos:column="51">-&gt;<pos:position pos:line="8" pos:column="56"/></operator><name pos:line="8" pos:column="53">http<pos:position pos:line="8" pos:column="57"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="58"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">HttpRequest<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">request<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><name><name pos:line="9" pos:column="32">http<pos:position pos:line="9" pos:column="36"/></name><operator pos:line="9" pos:column="36">-&gt;<pos:position pos:line="9" pos:column="41"/></operator><name pos:line="9" pos:column="38">request<pos:position pos:line="9" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="9" pos:column="46"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">ACLFilledChecklist<pos:position pos:line="10" pos:column="27"/></name></type> <name pos:line="10" pos:column="28">bodyContinuationCheck<pos:position pos:line="10" pos:column="49"/></name><argument_list pos:line="10" pos:column="49">(<argument><expr><name><name pos:line="10" pos:column="50">Config<pos:position pos:line="10" pos:column="56"/></name><operator pos:line="10" pos:column="56">.<pos:position pos:line="10" pos:column="57"/></operator><name pos:line="10" pos:column="57">accessList<pos:position pos:line="10" pos:column="67"/></name><operator pos:line="10" pos:column="67">.<pos:position pos:line="10" pos:column="68"/></operator><name pos:line="10" pos:column="68">forceRequestBodyContinuation<pos:position pos:line="10" pos:column="96"/></name></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="98">request<pos:position pos:line="10" pos:column="105"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="107">NULL<pos:position pos:line="10" pos:column="111"/></name></expr></argument>)<pos:position pos:line="10" pos:column="112"/></argument_list></decl>;<pos:position pos:line="10" pos:column="113"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name><name pos:line="11" pos:column="13">bodyContinuationCheck<pos:position pos:line="11" pos:column="34"/></name><operator pos:line="11" pos:column="34">.<pos:position pos:line="11" pos:column="35"/></operator><name pos:line="11" pos:column="35">fastCheck<pos:position pos:line="11" pos:column="44"/></name></name><argument_list pos:line="11" pos:column="44">()<pos:position pos:line="11" pos:column="46"/></argument_list></call><operator pos:line="11" pos:column="46">.<pos:position pos:line="11" pos:column="47"/></operator><call><name pos:line="11" pos:column="47">allowed<pos:position pos:line="11" pos:column="54"/></name><argument_list pos:line="11" pos:column="54">()<pos:position pos:line="11" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="57"/></condition><then pos:line="11" pos:column="57"> <block pos:line="11" pos:column="58">{
            <expr_stmt><expr><name><name pos:line="12" pos:column="13">request<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">forcedBodyContinuation<pos:position pos:line="12" pos:column="44"/></name></name> <operator pos:line="12" pos:column="45">=<pos:position pos:line="12" pos:column="46"/></operator> <literal type="boolean" pos:line="12" pos:column="47">true<pos:position pos:line="12" pos:column="51"/></literal></expr>;<pos:position pos:line="12" pos:column="52"/></expr_stmt>
            <if pos:line="13" pos:column="13">if <condition pos:line="13" pos:column="16">(<expr><call><name pos:line="13" pos:column="17">checkDataConnPost<pos:position pos:line="13" pos:column="34"/></name><argument_list pos:line="13" pos:column="34">()<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="37"/></condition><then pos:line="13" pos:column="37"> <block pos:line="13" pos:column="38">{
                <comment type="line" pos:line="14" pos:column="17">// Write control Msg</comment>
                <expr_stmt><expr><call><name pos:line="15" pos:column="17">writeEarlyReply<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><literal type="number" pos:line="15" pos:column="33">150<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="38">"Data connection opened"<pos:position pos:line="15" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="64"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="16" pos:column="17">maybeReadUploadData<pos:position pos:line="16" pos:column="36"/></name><argument_list pos:line="16" pos:column="36">()<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
            }<pos:position pos:line="17" pos:column="14"/></block></then> <else pos:line="17" pos:column="15">else <block pos:line="17" pos:column="20">{
                <comment type="line" pos:line="18" pos:column="17">// wait for acceptDataConnection but tell it to call wroteEarlyReply</comment>
                <comment type="line" pos:line="19" pos:column="17">// after writing "150 Data connection opened"</comment>
                <typedef pos:line="20" pos:column="17">typedef <type><name><name pos:line="20" pos:column="25">CommCbMemFunT<pos:position pos:line="20" pos:column="38"/></name><argument_list type="generic" pos:line="20" pos:column="38">&lt;<argument><expr><name pos:line="20" pos:column="39">Server<pos:position pos:line="20" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="47">CommIoCbParams<pos:position pos:line="20" pos:column="61"/></name></expr></argument>&gt;<pos:position pos:line="20" pos:column="65"/></argument_list></name></type> <name pos:line="20" pos:column="63">Dialer<pos:position pos:line="20" pos:column="69"/></name>;<pos:position pos:line="20" pos:column="70"/></typedef>
                <decl_stmt><decl><type><name><name pos:line="21" pos:column="17">AsyncCall<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">::<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">Pointer<pos:position pos:line="21" pos:column="35"/></name></name></type> <name pos:line="21" pos:column="36">call<pos:position pos:line="21" pos:column="40"/></name> <init pos:line="21" pos:column="41">= <expr><call><name pos:line="21" pos:column="43">JobCallback<pos:position pos:line="21" pos:column="54"/></name><argument_list pos:line="21" pos:column="54">(<argument><expr><literal type="number" pos:line="21" pos:column="55">33<pos:position pos:line="21" pos:column="57"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="59">5<pos:position pos:line="21" pos:column="60"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="62">Dialer<pos:position pos:line="21" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="70">this<pos:position pos:line="21" pos:column="74"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="76">Ftp<pos:position pos:line="21" pos:column="79"/></name><operator pos:line="21" pos:column="79">::<pos:position pos:line="21" pos:column="81"/></operator><name pos:line="21" pos:column="81">Server<pos:position pos:line="21" pos:column="87"/></name><operator pos:line="21" pos:column="87">::<pos:position pos:line="21" pos:column="89"/></operator><name pos:line="21" pos:column="89">wroteEarlyReply<pos:position pos:line="21" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="105"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="106"/></decl_stmt>
                <expr_stmt><expr><name pos:line="22" pos:column="17">onDataAcceptCall<pos:position pos:line="22" pos:column="33"/></name> <operator pos:line="22" pos:column="34">=<pos:position pos:line="22" pos:column="35"/></operator> <name pos:line="22" pos:column="36">call<pos:position pos:line="22" pos:column="40"/></name></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt>
            }<pos:position pos:line="23" pos:column="14"/></block></else></if>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">changeState<pos:position pos:line="27" pos:column="16"/></name><argument_list pos:line="27" pos:column="16">(<argument><expr><name pos:line="27" pos:column="17">fssHandleUploadRequest<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="41">"handleDataRequest"<pos:position pos:line="27" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>

    <return pos:line="29" pos:column="5">return <expr><literal type="boolean" pos:line="29" pos:column="12">true<pos:position pos:line="29" pos:column="16"/></literal></expr>;<pos:position pos:line="29" pos:column="17"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5019_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Rebuild<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">failure<pos:position pos:line="2" pos:column="23"/></name></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><specifier pos:line="2" pos:column="24">const<pos:position pos:line="2" pos:column="29"/></specifier> <name pos:line="2" pos:column="30">char<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">msg<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">errNo<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">47<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="18">sd<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">-&gt;<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="22">index<pos:position pos:line="4" pos:column="27"/></name></name> <operator pos:line="4" pos:column="28">&lt;&lt;<pos:position pos:line="4" pos:column="36"/></operator> <literal type="string" pos:line="4" pos:column="31">" slot "<pos:position pos:line="4" pos:column="39"/></literal> <operator pos:line="4" pos:column="40">&lt;&lt;<pos:position pos:line="4" pos:column="48"/></operator> <name pos:line="4" pos:column="43">loadingPos<pos:position pos:line="4" pos:column="53"/></name> <operator pos:line="4" pos:column="54">&lt;&lt;<pos:position pos:line="4" pos:column="62"/></operator> <literal type="string" pos:line="4" pos:column="57">" at "<pos:position pos:line="4" pos:column="63"/></literal> <operator pos:line="4" pos:column="64">&lt;&lt;<pos:position pos:line="4" pos:column="72"/></operator>
           <name pos:line="5" pos:column="12">dbOffset<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&lt;&lt;<pos:position pos:line="5" pos:column="29"/></operator> <literal type="string" pos:line="5" pos:column="24">" &lt;= "<pos:position pos:line="5" pos:column="33"/></literal> <operator pos:line="5" pos:column="31">&lt;&lt;<pos:position pos:line="5" pos:column="39"/></operator> <name pos:line="5" pos:column="34">dbSize<pos:position pos:line="5" pos:column="40"/></name></expr></argument>)<pos:position pos:line="5" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="42"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">errNo<pos:position pos:line="7" pos:column="14"/></name></expr>)<pos:position pos:line="7" pos:column="15"/></condition><then pos:line="7" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">47<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="20">DBG_CRITICAL<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">"ERROR: Rock cache_dir rebuild failure: "<pos:position pos:line="8" pos:column="75"/></literal> <operator pos:line="8" pos:column="76">&lt;&lt;<pos:position pos:line="8" pos:column="84"/></operator> <call><name pos:line="8" pos:column="79">xstrerr<pos:position pos:line="8" pos:column="86"/></name><argument_list pos:line="8" pos:column="86">(<argument><expr><name pos:line="8" pos:column="87">errNo<pos:position pos:line="8" pos:column="92"/></name></expr></argument>)<pos:position pos:line="8" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="95"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">47<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="16">DBG_CRITICAL<pos:position pos:line="9" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="30">"Do you need to run 'squid -z' to initialize storage?"<pos:position pos:line="9" pos:column="84"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="86"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name><argument_list pos:line="11" pos:column="11">(<argument><expr><name pos:line="11" pos:column="12">sd<pos:position pos:line="11" pos:column="14"/></name></expr></argument>)<pos:position pos:line="11" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">fatalf<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="string" pos:line="12" pos:column="12">"Rock cache_dir[%d] rebuild of %s failed: %s."<pos:position pos:line="12" pos:column="58"/></literal></expr></argument>,
           <argument><expr><name><name pos:line="13" pos:column="12">sd<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">-&gt;<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="16">index<pos:position pos:line="13" pos:column="21"/></name></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="23">sd<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">filePath<pos:position pos:line="13" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="37">msg<pos:position pos:line="13" pos:column="40"/></name></expr></argument>)<pos:position pos:line="13" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

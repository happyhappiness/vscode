<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7212_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name><name pos:line="2" pos:column="1">Ipc<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Mem<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">Segment<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">reserve<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">size_t<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">chunkSize<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">theMem<pos:position pos:line="4" pos:column="16"/></name></expr></argument>)<pos:position pos:line="4" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="18"/></expr_stmt>
    <comment type="line" pos:line="5" pos:column="5">// check for overflows</comment>
    <comment type="line" pos:line="6" pos:column="5">// chunkSize &gt;= 0 may result in warnings on systems where off_t is unsigned</comment>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><operator pos:line="7" pos:column="12">!<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="13">chunkSize<pos:position pos:line="7" pos:column="22"/></name> <operator pos:line="7" pos:column="23">||<pos:position pos:line="7" pos:column="25"/></operator> <cast type="static" pos:line="7" pos:column="26">static_cast<argument_list type="generic" pos:line="7" pos:column="37">&lt;<argument><expr><name pos:line="7" pos:column="38">off_t<pos:position pos:line="7" pos:column="43"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="47"/></argument_list><argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">chunkSize<pos:position pos:line="7" pos:column="54"/></name></expr></argument>)<pos:position pos:line="7" pos:column="55"/></argument_list></cast> <operator pos:line="7" pos:column="56">&gt;<pos:position pos:line="7" pos:column="60"/></operator> <literal type="number" pos:line="7" pos:column="58">0<pos:position pos:line="7" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><cast type="static" pos:line="8" pos:column="12">static_cast<argument_list type="generic" pos:line="8" pos:column="23">&lt;<argument><expr><name pos:line="8" pos:column="24">off_t<pos:position pos:line="8" pos:column="29"/></name></expr></argument>&gt;<pos:position pos:line="8" pos:column="33"/></argument_list><argument_list pos:line="8" pos:column="30">(<argument><expr><name pos:line="8" pos:column="31">chunkSize<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></cast> <operator pos:line="8" pos:column="42">&lt;=<pos:position pos:line="8" pos:column="47"/></operator> <name pos:line="8" pos:column="45">theSize<pos:position pos:line="8" pos:column="52"/></name></expr></argument>)<pos:position pos:line="8" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">theReserved<pos:position pos:line="9" pos:column="23"/></name> <operator pos:line="9" pos:column="24">&lt;=<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="27">theSize<pos:position pos:line="9" pos:column="34"/></name> <operator pos:line="9" pos:column="35">-<pos:position pos:line="9" pos:column="36"/></operator> <cast type="static" pos:line="9" pos:column="37">static_cast<argument_list type="generic" pos:line="9" pos:column="48">&lt;<argument><expr><name pos:line="9" pos:column="49">off_t<pos:position pos:line="9" pos:column="54"/></name></expr></argument>&gt;<pos:position pos:line="9" pos:column="58"/></argument_list><argument_list pos:line="9" pos:column="55">(<argument><expr><name pos:line="9" pos:column="56">chunkSize<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></cast></expr></argument>)<pos:position pos:line="9" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="68"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">void<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">result<pos:position pos:line="10" pos:column="17"/></name> <init pos:line="10" pos:column="18">= <expr><cast type="reinterpret" pos:line="10" pos:column="20">reinterpret_cast<argument_list type="generic" pos:line="10" pos:column="36">&lt;<argument><expr><name pos:line="10" pos:column="37">char<pos:position pos:line="10" pos:column="41"/></name><operator pos:line="10" pos:column="41">*<pos:position pos:line="10" pos:column="42"/></operator></expr></argument>&gt;<pos:position pos:line="10" pos:column="46"/></argument_list><argument_list pos:line="10" pos:column="43">(<argument><expr><name pos:line="10" pos:column="44">theMem<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></cast> <operator pos:line="10" pos:column="52">+<pos:position pos:line="10" pos:column="53"/></operator> <name pos:line="10" pos:column="54">theReserved<pos:position pos:line="10" pos:column="65"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="66"/></decl_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">theReserved<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">+=<pos:position pos:line="11" pos:column="19"/></operator> <name pos:line="11" pos:column="20">chunkSize<pos:position pos:line="11" pos:column="29"/></name></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">result<pos:position pos:line="12" pos:column="18"/></name></expr>;<pos:position pos:line="12" pos:column="19"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

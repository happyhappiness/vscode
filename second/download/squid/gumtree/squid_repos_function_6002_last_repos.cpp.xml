<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6002_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">berEncodeLoginData<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(
    <parameter><decl><type><name><name pos:line="2" pos:column="5">struct<pos:position pos:line="2" pos:column="11"/></name> <name pos:line="2" pos:column="12">berval<pos:position pos:line="2" pos:column="18"/></name></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">requestBV<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name>     <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">objectDN<pos:position pos:line="3" pos:column="23"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type>  <name pos:line="4" pos:column="19">methodIDLen<pos:position pos:line="4" pos:column="30"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">int<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">methodID<pos:position pos:line="5" pos:column="27"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name>     <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">tag<pos:position pos:line="6" pos:column="18"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="7" pos:column="5">size_t<pos:position pos:line="7" pos:column="11"/></name></type>   <name pos:line="7" pos:column="14">putDataLen<pos:position pos:line="7" pos:column="24"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="8" pos:column="5">void<pos:position pos:line="8" pos:column="9"/></name>     <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">putData<pos:position pos:line="8" pos:column="22"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="23"/></parameter_list>
<block pos:line="9" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">unsigned<pos:position pos:line="10" pos:column="13"/></name> <name pos:line="10" pos:column="14">int<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">elemCnt<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><name pos:line="10" pos:column="28">methodIDLen<pos:position pos:line="10" pos:column="39"/></name> <operator pos:line="10" pos:column="40">/<pos:position pos:line="10" pos:column="41"/></operator> sizeof<operator pos:line="10" pos:column="48">(<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="49">unsigned<pos:position pos:line="10" pos:column="57"/></name> <name pos:line="10" pos:column="58">int<pos:position pos:line="10" pos:column="61"/></name><operator pos:line="10" pos:column="61">)<pos:position pos:line="10" pos:column="62"/></operator></expr></init></decl>;<pos:position pos:line="10" pos:column="63"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name>    <modifier pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></modifier></type><name pos:line="12" pos:column="14">utf8ObjPtr<pos:position pos:line="12" pos:column="24"/></name><init pos:line="12" pos:column="24">=<expr><name pos:line="12" pos:column="25">NULL<pos:position pos:line="12" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">int<pos:position pos:line="13" pos:column="8"/></name></type>     <name pos:line="13" pos:column="13">utf8ObjSize<pos:position pos:line="13" pos:column="24"/></name> <init pos:line="13" pos:column="25">= <expr><literal type="number" pos:line="13" pos:column="27">0<pos:position pos:line="13" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="13" pos:column="29"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name>    <modifier pos:line="15" pos:column="13">*<pos:position pos:line="15" pos:column="14"/></modifier></type><name pos:line="15" pos:column="14">utf8TagPtr<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><name pos:line="15" pos:column="27">NULL<pos:position pos:line="15" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type>     <name pos:line="16" pos:column="13">utf8TagSize<pos:position pos:line="16" pos:column="24"/></name> <init pos:line="16" pos:column="25">= <expr><literal type="number" pos:line="16" pos:column="27">0<pos:position pos:line="16" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><name pos:line="18" pos:column="5">utf8ObjPtr<pos:position pos:line="18" pos:column="15"/></name> <operator pos:line="18" pos:column="16">=<pos:position pos:line="18" pos:column="17"/></operator> <name pos:line="18" pos:column="18">objectDN<pos:position pos:line="18" pos:column="26"/></name></expr>;<pos:position pos:line="18" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="19" pos:column="5">utf8ObjSize<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">=<pos:position pos:line="19" pos:column="18"/></operator> <call><name pos:line="19" pos:column="19">strlen<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">utf8ObjPtr<pos:position pos:line="19" pos:column="36"/></name></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call><operator pos:line="19" pos:column="37">+<pos:position pos:line="19" pos:column="38"/></operator><literal type="number" pos:line="19" pos:column="38">1<pos:position pos:line="19" pos:column="39"/></literal></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">utf8TagPtr<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">tag<pos:position pos:line="21" pos:column="21"/></name></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">utf8TagSize<pos:position pos:line="22" pos:column="16"/></name> <operator pos:line="22" pos:column="17">=<pos:position pos:line="22" pos:column="18"/></operator> <call><name pos:line="22" pos:column="19">strlen<pos:position pos:line="22" pos:column="25"/></name><argument_list pos:line="22" pos:column="25">(<argument><expr><name pos:line="22" pos:column="26">utf8TagPtr<pos:position pos:line="22" pos:column="36"/></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call><operator pos:line="22" pos:column="37">+<pos:position pos:line="22" pos:column="38"/></operator><literal type="number" pos:line="22" pos:column="38">1<pos:position pos:line="22" pos:column="39"/></literal></expr>;<pos:position pos:line="22" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="24" pos:column="5">/* Allocate a BerElement for the request parameters. */</comment>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">BerElement<pos:position pos:line="25" pos:column="15"/></name> <modifier pos:line="25" pos:column="16">*<pos:position pos:line="25" pos:column="17"/></modifier></type><name pos:line="25" pos:column="17">requestBer<pos:position pos:line="25" pos:column="27"/></name> <init pos:line="25" pos:column="28">= <expr><call><name pos:line="25" pos:column="30">ber_alloc<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">()<pos:position pos:line="25" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="42"/></decl_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">requestBer<pos:position pos:line="26" pos:column="20"/></name></expr>)<pos:position pos:line="26" pos:column="21"/></condition><then pos:line="26" pos:column="21">
        <block type="pseudo"><return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">LDAP_ENCODING_ERROR<pos:position pos:line="27" pos:column="35"/></name></expr>;<pos:position pos:line="27" pos:column="36"/></return></block></then></if>

    <comment type="block" pos:line="29" pos:column="5">/* BER encode the NMAS Version and the objectDN */</comment>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><call><name pos:line="30" pos:column="9">ber_printf<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">requestBer<pos:position pos:line="30" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="32">"{io"<pos:position pos:line="30" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="39">NMAS_LDAP_EXT_VERSION<pos:position pos:line="30" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="62">utf8ObjPtr<pos:position pos:line="30" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="74">utf8ObjSize<pos:position pos:line="30" pos:column="85"/></name></expr></argument>)<pos:position pos:line="30" pos:column="86"/></argument_list></call> <operator pos:line="30" pos:column="87">&lt;<pos:position pos:line="30" pos:column="91"/></operator> <literal type="number" pos:line="30" pos:column="89">0<pos:position pos:line="30" pos:column="90"/></literal></expr>)<pos:position pos:line="30" pos:column="91"/></condition><then pos:line="30" pos:column="91"> <block pos:line="30" pos:column="92">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">ber_free<pos:position pos:line="31" pos:column="17"/></name><argument_list pos:line="31" pos:column="17">(<argument><expr><name pos:line="31" pos:column="18">requestBer<pos:position pos:line="31" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="30">1<pos:position pos:line="31" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="33"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><name pos:line="32" pos:column="16">LDAP_ENCODING_ERROR<pos:position pos:line="32" pos:column="35"/></name></expr>;<pos:position pos:line="32" pos:column="36"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="35" pos:column="5">/* BER encode the MethodID Length and value */</comment>
    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><call><name pos:line="36" pos:column="9">ber_printf<pos:position pos:line="36" pos:column="19"/></name><argument_list pos:line="36" pos:column="19">(<argument><expr><name pos:line="36" pos:column="20">requestBer<pos:position pos:line="36" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="32">"{i{"<pos:position pos:line="36" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="36" pos:column="39">methodIDLen<pos:position pos:line="36" pos:column="50"/></name></expr></argument>)<pos:position pos:line="36" pos:column="51"/></argument_list></call> <operator pos:line="36" pos:column="52">&lt;<pos:position pos:line="36" pos:column="56"/></operator> <literal type="number" pos:line="36" pos:column="54">0<pos:position pos:line="36" pos:column="55"/></literal></expr>)<pos:position pos:line="36" pos:column="56"/></condition><then pos:line="36" pos:column="56"> <block pos:line="36" pos:column="57">{
        <expr_stmt><expr><call><name pos:line="37" pos:column="9">ber_free<pos:position pos:line="37" pos:column="17"/></name><argument_list pos:line="37" pos:column="17">(<argument><expr><name pos:line="37" pos:column="18">requestBer<pos:position pos:line="37" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="30">1<pos:position pos:line="37" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="33"/></expr_stmt>
        <return pos:line="38" pos:column="9">return <expr><name pos:line="38" pos:column="16">LDAP_ENCODING_ERROR<pos:position pos:line="38" pos:column="35"/></name></expr>;<pos:position pos:line="38" pos:column="36"/></return>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if>

    <for pos:line="41" pos:column="5">for <control pos:line="41" pos:column="9">(<init><decl><type><name pos:line="41" pos:column="10">unsigned<pos:position pos:line="41" pos:column="18"/></name> <name pos:line="41" pos:column="19">int<pos:position pos:line="41" pos:column="22"/></name></type> <name pos:line="41" pos:column="23">i<pos:position pos:line="41" pos:column="24"/></name> <init pos:line="41" pos:column="25">= <expr><literal type="number" pos:line="41" pos:column="27">0<pos:position pos:line="41" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="29"/></init> <condition><expr><name pos:line="41" pos:column="30">i<pos:position pos:line="41" pos:column="31"/></name> <operator pos:line="41" pos:column="32">&lt;<pos:position pos:line="41" pos:column="36"/></operator> <name pos:line="41" pos:column="34">elemCnt<pos:position pos:line="41" pos:column="41"/></name></expr>;<pos:position pos:line="41" pos:column="42"/></condition> <incr><expr><operator pos:line="41" pos:column="43">++<pos:position pos:line="41" pos:column="45"/></operator><name pos:line="41" pos:column="45">i<pos:position pos:line="41" pos:column="46"/></name></expr></incr>)<pos:position pos:line="41" pos:column="47"/></control> <block pos:line="41" pos:column="48">{
        <if pos:line="42" pos:column="9">if <condition pos:line="42" pos:column="12">(<expr><call><name pos:line="42" pos:column="13">ber_printf<pos:position pos:line="42" pos:column="23"/></name><argument_list pos:line="42" pos:column="23">(<argument><expr><name pos:line="42" pos:column="24">requestBer<pos:position pos:line="42" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="36">"i"<pos:position pos:line="42" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="41">methodID<pos:position pos:line="42" pos:column="49"/></name><index pos:line="42" pos:column="49">[<expr><name pos:line="42" pos:column="50">i<pos:position pos:line="42" pos:column="51"/></name></expr>]<pos:position pos:line="42" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="53"/></argument_list></call> <operator pos:line="42" pos:column="54">&lt;<pos:position pos:line="42" pos:column="58"/></operator> <literal type="number" pos:line="42" pos:column="56">0<pos:position pos:line="42" pos:column="57"/></literal></expr>)<pos:position pos:line="42" pos:column="58"/></condition><then pos:line="42" pos:column="58"> <block pos:line="42" pos:column="59">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">ber_free<pos:position pos:line="43" pos:column="21"/></name><argument_list pos:line="43" pos:column="21">(<argument><expr><name pos:line="43" pos:column="22">requestBer<pos:position pos:line="43" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="34">1<pos:position pos:line="43" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="37"/></expr_stmt>
            <return pos:line="44" pos:column="13">return <expr><name pos:line="44" pos:column="20">LDAP_ENCODING_ERROR<pos:position pos:line="44" pos:column="39"/></name></expr>;<pos:position pos:line="44" pos:column="40"/></return>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></for>

    <if pos:line="48" pos:column="5">if <condition pos:line="48" pos:column="8">(<expr><call><name pos:line="48" pos:column="9">ber_printf<pos:position pos:line="48" pos:column="19"/></name><argument_list pos:line="48" pos:column="19">(<argument><expr><name pos:line="48" pos:column="20">requestBer<pos:position pos:line="48" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="32">"}}"<pos:position pos:line="48" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="38">0<pos:position pos:line="48" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="40"/></argument_list></call> <operator pos:line="48" pos:column="41">&lt;<pos:position pos:line="48" pos:column="45"/></operator> <literal type="number" pos:line="48" pos:column="43">0<pos:position pos:line="48" pos:column="44"/></literal></expr>)<pos:position pos:line="48" pos:column="45"/></condition><then pos:line="48" pos:column="45"> <block pos:line="48" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">ber_free<pos:position pos:line="49" pos:column="17"/></name><argument_list pos:line="49" pos:column="17">(<argument><expr><name pos:line="49" pos:column="18">requestBer<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="30">1<pos:position pos:line="49" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="33"/></expr_stmt>
        <return pos:line="50" pos:column="9">return <expr><name pos:line="50" pos:column="16">LDAP_ENCODING_ERROR<pos:position pos:line="50" pos:column="35"/></name></expr>;<pos:position pos:line="50" pos:column="36"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<expr><name pos:line="53" pos:column="9">putData<pos:position pos:line="53" pos:column="16"/></name></expr>)<pos:position pos:line="53" pos:column="17"/></condition><then pos:line="53" pos:column="17"> <block pos:line="53" pos:column="18">{
        <comment type="block" pos:line="54" pos:column="9">/* BER Encode the the tag and data */</comment>
        <if pos:line="55" pos:column="9">if <condition pos:line="55" pos:column="12">(<expr><call><name pos:line="55" pos:column="13">ber_printf<pos:position pos:line="55" pos:column="23"/></name><argument_list pos:line="55" pos:column="23">(<argument><expr><name pos:line="55" pos:column="24">requestBer<pos:position pos:line="55" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="36">"oio}"<pos:position pos:line="55" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="44">utf8TagPtr<pos:position pos:line="55" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="56">utf8TagSize<pos:position pos:line="55" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="69">putDataLen<pos:position pos:line="55" pos:column="79"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="81">putData<pos:position pos:line="55" pos:column="88"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="90">putDataLen<pos:position pos:line="55" pos:column="100"/></name></expr></argument>)<pos:position pos:line="55" pos:column="101"/></argument_list></call> <operator pos:line="55" pos:column="102">&lt;<pos:position pos:line="55" pos:column="106"/></operator> <literal type="number" pos:line="55" pos:column="104">0<pos:position pos:line="55" pos:column="105"/></literal></expr>)<pos:position pos:line="55" pos:column="106"/></condition><then pos:line="55" pos:column="106"> <block pos:line="55" pos:column="107">{
            <expr_stmt><expr><call><name pos:line="56" pos:column="13">ber_free<pos:position pos:line="56" pos:column="21"/></name><argument_list pos:line="56" pos:column="21">(<argument><expr><name pos:line="56" pos:column="22">requestBer<pos:position pos:line="56" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="56" pos:column="34">1<pos:position pos:line="56" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt>
            <return pos:line="57" pos:column="13">return <expr><name pos:line="57" pos:column="20">LDAP_ENCODING_ERROR<pos:position pos:line="57" pos:column="39"/></name></expr>;<pos:position pos:line="57" pos:column="40"/></return>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></then> <else pos:line="59" pos:column="7">else <block pos:line="59" pos:column="12">{
        <comment type="block" pos:line="60" pos:column="9">/* BER Encode the the tag */</comment>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><call><name pos:line="61" pos:column="13">ber_printf<pos:position pos:line="61" pos:column="23"/></name><argument_list pos:line="61" pos:column="23">(<argument><expr><name pos:line="61" pos:column="24">requestBer<pos:position pos:line="61" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="36">"o}"<pos:position pos:line="61" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="61" pos:column="42">utf8TagPtr<pos:position pos:line="61" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="61" pos:column="54">utf8TagSize<pos:position pos:line="61" pos:column="65"/></name></expr></argument>)<pos:position pos:line="61" pos:column="66"/></argument_list></call> <operator pos:line="61" pos:column="67">&lt;<pos:position pos:line="61" pos:column="71"/></operator> <literal type="number" pos:line="61" pos:column="69">0<pos:position pos:line="61" pos:column="70"/></literal></expr>)<pos:position pos:line="61" pos:column="71"/></condition><then pos:line="61" pos:column="71"> <block pos:line="61" pos:column="72">{
            <expr_stmt><expr><call><name pos:line="62" pos:column="13">ber_free<pos:position pos:line="62" pos:column="21"/></name><argument_list pos:line="62" pos:column="21">(<argument><expr><name pos:line="62" pos:column="22">requestBer<pos:position pos:line="62" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="62" pos:column="34">1<pos:position pos:line="62" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="37"/></expr_stmt>
            <return pos:line="63" pos:column="13">return <expr><name pos:line="63" pos:column="20">LDAP_ENCODING_ERROR<pos:position pos:line="63" pos:column="39"/></name></expr>;<pos:position pos:line="63" pos:column="40"/></return>
        }<pos:position pos:line="64" pos:column="10"/></block></then></if>
    }<pos:position pos:line="65" pos:column="6"/></block></else></if>

    <comment type="block" pos:line="67" pos:column="5">/* Convert the BER we just built to a berval that we'll send with the extended request. */</comment>
    <if pos:line="68" pos:column="5">if <condition pos:line="68" pos:column="8">(<expr><cast type="static" pos:line="68" pos:column="9">static_cast<argument_list type="generic" pos:line="68" pos:column="20">&lt;<argument><expr><name pos:line="68" pos:column="21">ber_tag_t<pos:position pos:line="68" pos:column="30"/></name></expr></argument>&gt;<pos:position pos:line="68" pos:column="34"/></argument_list><argument_list pos:line="68" pos:column="31">(<argument><expr><call><name pos:line="68" pos:column="32">ber_flatten<pos:position pos:line="68" pos:column="43"/></name><argument_list pos:line="68" pos:column="43">(<argument><expr><name pos:line="68" pos:column="44">requestBer<pos:position pos:line="68" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="56">requestBV<pos:position pos:line="68" pos:column="65"/></name></expr></argument>)<pos:position pos:line="68" pos:column="66"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="67"/></argument_list></cast> <operator pos:line="68" pos:column="68">==<pos:position pos:line="68" pos:column="70"/></operator> <name pos:line="68" pos:column="71">LBER_ERROR<pos:position pos:line="68" pos:column="81"/></name></expr>)<pos:position pos:line="68" pos:column="82"/></condition><then pos:line="68" pos:column="82"> <block pos:line="68" pos:column="83">{
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">ber_free<pos:position pos:line="69" pos:column="17"/></name><argument_list pos:line="69" pos:column="17">(<argument><expr><name pos:line="69" pos:column="18">requestBer<pos:position pos:line="69" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="30">1<pos:position pos:line="69" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="33"/></expr_stmt>
        <return pos:line="70" pos:column="9">return <expr><name pos:line="70" pos:column="16">LDAP_ENCODING_ERROR<pos:position pos:line="70" pos:column="35"/></name></expr>;<pos:position pos:line="70" pos:column="36"/></return>
    }<pos:position pos:line="71" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">ber_free<pos:position pos:line="73" pos:column="13"/></name><argument_list pos:line="73" pos:column="13">(<argument><expr><name pos:line="73" pos:column="14">requestBer<pos:position pos:line="73" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="73" pos:column="26">1<pos:position pos:line="73" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="29"/></expr_stmt>
    <return pos:line="74" pos:column="5">return <expr><literal type="number" pos:line="74" pos:column="12">0<pos:position pos:line="74" pos:column="13"/></literal></expr>;<pos:position pos:line="74" pos:column="14"/></return> <comment type="block" pos:line="74" pos:column="15">/* no error */</comment>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5983_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Snmp<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Pdu<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">fixAggregate<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">()<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">aggrCount<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">&lt;<pos:position pos:line="4" pos:column="23"/></operator> <literal type="number" pos:line="4" pos:column="21">2<pos:position pos:line="4" pos:column="22"/></literal></expr>)<pos:position pos:line="4" pos:column="23"/></condition><then pos:line="4" pos:column="23">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>
    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><decl><type><name pos:line="6" pos:column="10">variable_list<pos:position pos:line="6" pos:column="23"/></name><modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier></type> <name pos:line="6" pos:column="25">p_aggr<pos:position pos:line="6" pos:column="31"/></name> <init pos:line="6" pos:column="32">= <expr><name pos:line="6" pos:column="34">variables<pos:position pos:line="6" pos:column="43"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="44"/></init> <condition><expr><name pos:line="6" pos:column="45">p_aggr<pos:position pos:line="6" pos:column="51"/></name> <operator pos:line="6" pos:column="52">!=<pos:position pos:line="6" pos:column="54"/></operator> <name pos:line="6" pos:column="55">NULL<pos:position pos:line="6" pos:column="59"/></name></expr>;<pos:position pos:line="6" pos:column="60"/></condition> <incr><expr><name pos:line="6" pos:column="61">p_aggr<pos:position pos:line="6" pos:column="67"/></name> <operator pos:line="6" pos:column="68">=<pos:position pos:line="6" pos:column="69"/></operator> <name><name pos:line="6" pos:column="70">p_aggr<pos:position pos:line="6" pos:column="76"/></name><operator pos:line="6" pos:column="76">-&gt;<pos:position pos:line="6" pos:column="81"/></operator><name pos:line="6" pos:column="78">next_variable<pos:position pos:line="6" pos:column="91"/></name></name></expr></incr>)<pos:position pos:line="6" pos:column="92"/></control> <block pos:line="6" pos:column="93">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">Var<pos:position pos:line="7" pos:column="12"/></name><modifier pos:line="7" pos:column="12">&amp;<pos:position pos:line="7" pos:column="17"/></modifier></type> <name pos:line="7" pos:column="14">aggr<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><cast type="static" pos:line="7" pos:column="21">static_cast<argument_list type="generic" pos:line="7" pos:column="32">&lt;<argument><expr><name pos:line="7" pos:column="33">Var<pos:position pos:line="7" pos:column="36"/></name><operator pos:line="7" pos:column="36">&amp;<pos:position pos:line="7" pos:column="41"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="41"/></argument_list><argument_list pos:line="7" pos:column="38">(<argument><expr><operator pos:line="7" pos:column="39">*<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">p_aggr<pos:position pos:line="7" pos:column="46"/></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">snmpAggrType<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name><name pos:line="8" pos:column="26">aggr<pos:position pos:line="8" pos:column="30"/></name><operator pos:line="8" pos:column="30">.<pos:position pos:line="8" pos:column="31"/></operator><name pos:line="8" pos:column="31">name<pos:position pos:line="8" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="37">aggr<pos:position pos:line="8" pos:column="41"/></name><operator pos:line="8" pos:column="41">.<pos:position pos:line="8" pos:column="42"/></operator><name pos:line="8" pos:column="42">name_length<pos:position pos:line="8" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="54"/></argument_list></call> <operator pos:line="8" pos:column="55">==<pos:position pos:line="8" pos:column="57"/></operator> <name pos:line="8" pos:column="58">atAverage<pos:position pos:line="8" pos:column="67"/></name></expr>)<pos:position pos:line="8" pos:column="68"/></condition><then pos:line="8" pos:column="68"> <block pos:line="8" pos:column="69">{
            <expr_stmt><expr><name pos:line="9" pos:column="13">aggr<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">/=<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">aggrCount<pos:position pos:line="9" pos:column="30"/></name></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>
    }<pos:position pos:line="11" pos:column="6"/></block></for>
    <expr_stmt><expr><name pos:line="12" pos:column="5">aggrCount<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">=<pos:position pos:line="12" pos:column="16"/></operator> <literal type="number" pos:line="12" pos:column="17">0<pos:position pos:line="12" pos:column="18"/></literal></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

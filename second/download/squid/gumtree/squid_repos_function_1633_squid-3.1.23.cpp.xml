<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1633_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">helperHandleRead<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">int<pos:position pos:line="2" pos:column="21"/></name></type> <name pos:line="2" pos:column="22">fd<pos:position pos:line="2" pos:column="24"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">buf<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">size_t<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">len<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">comm_err_t<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">flag<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="66">int<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">xerrno<pos:position pos:line="2" pos:column="76"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="78">void<pos:position pos:line="2" pos:column="82"/></name> <modifier pos:line="2" pos:column="83">*<pos:position pos:line="2" pos:column="84"/></modifier></type><name pos:line="2" pos:column="84">data<pos:position pos:line="2" pos:column="88"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="89"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">t<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><name pos:line="4" pos:column="15">NULL<pos:position pos:line="4" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">helper_server<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">srv<pos:position pos:line="5" pos:column="23"/></name> <init pos:line="5" pos:column="24">= <expr><operator pos:line="5" pos:column="26">(<pos:position pos:line="5" pos:column="27"/></operator><name pos:line="5" pos:column="27">helper_server<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">*<pos:position pos:line="5" pos:column="42"/></operator><operator pos:line="5" pos:column="42">)<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">data<pos:position pos:line="5" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">helper<pos:position pos:line="6" pos:column="11"/></name> <modifier pos:line="6" pos:column="12">*<pos:position pos:line="6" pos:column="13"/></modifier></type><name pos:line="6" pos:column="13">hlp<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name><name pos:line="6" pos:column="19">srv<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">-&gt;<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="24">parent<pos:position pos:line="6" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="31"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><call><name pos:line="7" pos:column="12">cbdataReferenceValid<pos:position pos:line="7" pos:column="32"/></name><argument_list pos:line="7" pos:column="32">(<argument><expr><name pos:line="7" pos:column="33">data<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="9" pos:column="5">/* Bail out early on COMM_ERR_CLOSING - close handlers will tidy up for us */</comment>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">flag<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">==<pos:position pos:line="11" pos:column="16"/></operator> <name pos:line="11" pos:column="17">COMM_ERR_CLOSING<pos:position pos:line="11" pos:column="33"/></name></expr>)<pos:position pos:line="11" pos:column="34"/></condition><then pos:line="11" pos:column="34"> <block pos:line="11" pos:column="35">{
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><name pos:line="15" pos:column="12">fd<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">==<pos:position pos:line="15" pos:column="17"/></operator> <name><name pos:line="15" pos:column="18">srv<pos:position pos:line="15" pos:column="21"/></name><operator pos:line="15" pos:column="21">-&gt;<pos:position pos:line="15" pos:column="26"/></operator><name pos:line="15" pos:column="23">rfd<pos:position pos:line="15" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">84<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="16">5<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="19">"helperHandleRead: "<pos:position pos:line="17" pos:column="39"/></literal> <operator pos:line="17" pos:column="40">&lt;&lt;<pos:position pos:line="17" pos:column="48"/></operator> <name pos:line="17" pos:column="43">len<pos:position pos:line="17" pos:column="46"/></name> <operator pos:line="17" pos:column="47">&lt;&lt;<pos:position pos:line="17" pos:column="55"/></operator> <literal type="string" pos:line="17" pos:column="50">" bytes from "<pos:position pos:line="17" pos:column="64"/></literal> <operator pos:line="17" pos:column="65">&lt;&lt;<pos:position pos:line="17" pos:column="73"/></operator> <name><name pos:line="17" pos:column="68">hlp<pos:position pos:line="17" pos:column="71"/></name><operator pos:line="17" pos:column="71">-&gt;<pos:position pos:line="17" pos:column="76"/></operator><name pos:line="17" pos:column="73">id_name<pos:position pos:line="17" pos:column="80"/></name></name> <operator pos:line="17" pos:column="81">&lt;&lt;<pos:position pos:line="17" pos:column="89"/></operator> <literal type="string" pos:line="17" pos:column="84">" #"<pos:position pos:line="17" pos:column="88"/></literal> <operator pos:line="17" pos:column="89">&lt;&lt;<pos:position pos:line="17" pos:column="97"/></operator> <name><name pos:line="17" pos:column="92">srv<pos:position pos:line="17" pos:column="95"/></name><operator pos:line="17" pos:column="95">-&gt;<pos:position pos:line="17" pos:column="100"/></operator><name pos:line="17" pos:column="97">index<pos:position pos:line="17" pos:column="102"/></name></name> <operator pos:line="17" pos:column="103">+<pos:position pos:line="17" pos:column="104"/></operator> <literal type="number" pos:line="17" pos:column="105">1<pos:position pos:line="17" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="108"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">flag<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">!=<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">COMM_OK<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">||<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">len<pos:position pos:line="19" pos:column="31"/></name> <operator pos:line="19" pos:column="32">==<pos:position pos:line="19" pos:column="34"/></operator> <literal type="number" pos:line="19" pos:column="35">0<pos:position pos:line="19" pos:column="36"/></literal></expr>)<pos:position pos:line="19" pos:column="37"/></condition><then pos:line="19" pos:column="37"> <block pos:line="19" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">comm_close<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">fd<pos:position pos:line="20" pos:column="22"/></name></expr></argument>)<pos:position pos:line="20" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="24"/></expr_stmt>
        <return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="24" pos:column="5">srv<pos:position pos:line="24" pos:column="8"/></name><operator pos:line="24" pos:column="8">-&gt;<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="10">roffset<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">+=<pos:position pos:line="24" pos:column="20"/></operator> <name pos:line="24" pos:column="21">len<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">srv<pos:position pos:line="25" pos:column="8"/></name><operator pos:line="25" pos:column="8">-&gt;<pos:position pos:line="25" pos:column="13"/></operator><name pos:line="25" pos:column="10">rbuf<pos:position pos:line="25" pos:column="14"/></name><index pos:line="25" pos:column="14">[<expr><name><name pos:line="25" pos:column="15">srv<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">-&gt;<pos:position pos:line="25" pos:column="23"/></operator><name pos:line="25" pos:column="20">roffset<pos:position pos:line="25" pos:column="27"/></name></name></expr>]<pos:position pos:line="25" pos:column="28"/></index></name> <operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator> <literal type="char" pos:line="25" pos:column="31">'\0'<pos:position pos:line="25" pos:column="35"/></literal></expr>;<pos:position pos:line="25" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">84<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="16">9<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="19">"helperHandleRead: '"<pos:position pos:line="26" pos:column="40"/></literal> <operator pos:line="26" pos:column="41">&lt;&lt;<pos:position pos:line="26" pos:column="49"/></operator> <name><name pos:line="26" pos:column="44">srv<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">-&gt;<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="49">rbuf<pos:position pos:line="26" pos:column="53"/></name></name> <operator pos:line="26" pos:column="54">&lt;&lt;<pos:position pos:line="26" pos:column="62"/></operator> <literal type="string" pos:line="26" pos:column="57">"'"<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="62"/></expr_stmt>

    <if pos:line="28" pos:column="5">if <condition pos:line="28" pos:column="8">(<expr><operator pos:line="28" pos:column="9">!<pos:position pos:line="28" pos:column="10"/></operator><name><name pos:line="28" pos:column="10">srv<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">-&gt;<pos:position pos:line="28" pos:column="18"/></operator><name pos:line="28" pos:column="15">stats<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">.<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">pending<pos:position pos:line="28" pos:column="28"/></name></name></expr>)<pos:position pos:line="28" pos:column="29"/></condition><then pos:line="28" pos:column="29"> <block pos:line="28" pos:column="30">{
        <comment type="block" pos:line="29" pos:column="9">/* someone spoke without being spoken to */</comment>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">84<pos:position pos:line="30" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="20">1<pos:position pos:line="30" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="23">"helperHandleRead: unexpected read from "<pos:position pos:line="30" pos:column="64"/></literal> <operator pos:line="30" pos:column="65">&lt;&lt;<pos:position pos:line="30" pos:column="73"/></operator>
               <name><name pos:line="31" pos:column="16">hlp<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">-&gt;<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="21">id_name<pos:position pos:line="31" pos:column="28"/></name></name> <operator pos:line="31" pos:column="29">&lt;&lt;<pos:position pos:line="31" pos:column="37"/></operator> <literal type="string" pos:line="31" pos:column="32">" #"<pos:position pos:line="31" pos:column="36"/></literal> <operator pos:line="31" pos:column="37">&lt;&lt;<pos:position pos:line="31" pos:column="45"/></operator> <name><name pos:line="31" pos:column="40">srv<pos:position pos:line="31" pos:column="43"/></name><operator pos:line="31" pos:column="43">-&gt;<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="45">index<pos:position pos:line="31" pos:column="50"/></name></name> <operator pos:line="31" pos:column="51">+<pos:position pos:line="31" pos:column="52"/></operator> <literal type="number" pos:line="31" pos:column="53">1<pos:position pos:line="31" pos:column="54"/></literal> <operator pos:line="31" pos:column="55">&lt;&lt;<pos:position pos:line="31" pos:column="63"/></operator> <literal type="string" pos:line="31" pos:column="58">", "<pos:position pos:line="31" pos:column="62"/></literal> <operator pos:line="31" pos:column="63">&lt;&lt;<pos:position pos:line="31" pos:column="71"/></operator> <operator pos:line="31" pos:column="66">(<pos:position pos:line="31" pos:column="67"/></operator><name pos:line="31" pos:column="67">int<pos:position pos:line="31" pos:column="70"/></name><operator pos:line="31" pos:column="70">)<pos:position pos:line="31" pos:column="71"/></operator><name pos:line="31" pos:column="71">len<pos:position pos:line="31" pos:column="74"/></name> <operator pos:line="31" pos:column="75">&lt;&lt;<pos:position pos:line="31" pos:column="83"/></operator>
               <literal type="string" pos:line="32" pos:column="16">" bytes '"<pos:position pos:line="32" pos:column="26"/></literal> <operator pos:line="32" pos:column="27">&lt;&lt;<pos:position pos:line="32" pos:column="35"/></operator> <name><name pos:line="32" pos:column="30">srv<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">-&gt;<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="35">rbuf<pos:position pos:line="32" pos:column="39"/></name></name> <operator pos:line="32" pos:column="40">&lt;&lt;<pos:position pos:line="32" pos:column="48"/></operator> <literal type="string" pos:line="32" pos:column="43">"'"<pos:position pos:line="32" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="34" pos:column="9">srv<pos:position pos:line="34" pos:column="12"/></name><operator pos:line="34" pos:column="12">-&gt;<pos:position pos:line="34" pos:column="17"/></operator><name pos:line="34" pos:column="14">roffset<pos:position pos:line="34" pos:column="21"/></name></name> <operator pos:line="34" pos:column="22">=<pos:position pos:line="34" pos:column="23"/></operator> <literal type="number" pos:line="34" pos:column="24">0<pos:position pos:line="34" pos:column="25"/></literal></expr>;<pos:position pos:line="34" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="35" pos:column="9">srv<pos:position pos:line="35" pos:column="12"/></name><operator pos:line="35" pos:column="12">-&gt;<pos:position pos:line="35" pos:column="17"/></operator><name pos:line="35" pos:column="14">rbuf<pos:position pos:line="35" pos:column="18"/></name><index pos:line="35" pos:column="18">[<expr><literal type="number" pos:line="35" pos:column="19">0<pos:position pos:line="35" pos:column="20"/></literal></expr>]<pos:position pos:line="35" pos:column="21"/></index></name> <operator pos:line="35" pos:column="22">=<pos:position pos:line="35" pos:column="23"/></operator> <literal type="char" pos:line="35" pos:column="24">'\0'<pos:position pos:line="35" pos:column="28"/></literal></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <while pos:line="38" pos:column="5">while <condition pos:line="38" pos:column="11">(<expr><operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">t<pos:position pos:line="38" pos:column="14"/></name> <operator pos:line="38" pos:column="15">=<pos:position pos:line="38" pos:column="16"/></operator> <call><name pos:line="38" pos:column="17">strchr<pos:position pos:line="38" pos:column="23"/></name><argument_list pos:line="38" pos:column="23">(<argument><expr><name><name pos:line="38" pos:column="24">srv<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">-&gt;<pos:position pos:line="38" pos:column="32"/></operator><name pos:line="38" pos:column="29">rbuf<pos:position pos:line="38" pos:column="33"/></name></name></expr></argument>, <argument><expr><name><name pos:line="38" pos:column="35">hlp<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">-&gt;<pos:position pos:line="38" pos:column="43"/></operator><name pos:line="38" pos:column="40">eom<pos:position pos:line="38" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="44"/></argument_list></call><operator pos:line="38" pos:column="44">)<pos:position pos:line="38" pos:column="45"/></operator></expr>)<pos:position pos:line="38" pos:column="46"/></condition> <block pos:line="38" pos:column="47">{
        <comment type="block" pos:line="39" pos:column="9">/* end of reply found */</comment>
        <decl_stmt><decl><type><name pos:line="40" pos:column="9">char<pos:position pos:line="40" pos:column="13"/></name> <modifier pos:line="40" pos:column="14">*<pos:position pos:line="40" pos:column="15"/></modifier></type><name pos:line="40" pos:column="15">msg<pos:position pos:line="40" pos:column="18"/></name> <init pos:line="40" pos:column="19">= <expr><name><name pos:line="40" pos:column="21">srv<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">-&gt;<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="26">rbuf<pos:position pos:line="40" pos:column="30"/></name></name></expr></init></decl>;<pos:position pos:line="40" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="41" pos:column="9">int<pos:position pos:line="41" pos:column="12"/></name></type> <name pos:line="41" pos:column="13">i<pos:position pos:line="41" pos:column="14"/></name> <init pos:line="41" pos:column="15">= <expr><literal type="number" pos:line="41" pos:column="17">0<pos:position pos:line="41" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="41" pos:column="19"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">debugs<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="number" pos:line="42" pos:column="16">84<pos:position pos:line="42" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="20">3<pos:position pos:line="42" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="23">"helperHandleRead: end of reply found"<pos:position pos:line="42" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="63"/></expr_stmt>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">t<pos:position pos:line="44" pos:column="14"/></name> <operator pos:line="44" pos:column="15">&gt;<pos:position pos:line="44" pos:column="19"/></operator> <name><name pos:line="44" pos:column="17">srv<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">rbuf<pos:position pos:line="44" pos:column="26"/></name></name> <operator pos:line="44" pos:column="27">&amp;&amp;<pos:position pos:line="44" pos:column="37"/></operator> <name><name pos:line="44" pos:column="30">t<pos:position pos:line="44" pos:column="31"/></name><index pos:line="44" pos:column="31">[<expr><operator pos:line="44" pos:column="32">-<pos:position pos:line="44" pos:column="33"/></operator><literal type="number" pos:line="44" pos:column="33">1<pos:position pos:line="44" pos:column="34"/></literal></expr>]<pos:position pos:line="44" pos:column="35"/></index></name> <operator pos:line="44" pos:column="36">==<pos:position pos:line="44" pos:column="38"/></operator> <literal type="char" pos:line="44" pos:column="39">'\r'<pos:position pos:line="44" pos:column="43"/></literal> <operator pos:line="44" pos:column="44">&amp;&amp;<pos:position pos:line="44" pos:column="54"/></operator> <name><name pos:line="44" pos:column="47">hlp<pos:position pos:line="44" pos:column="50"/></name><operator pos:line="44" pos:column="50">-&gt;<pos:position pos:line="44" pos:column="55"/></operator><name pos:line="44" pos:column="52">eom<pos:position pos:line="44" pos:column="55"/></name></name> <operator pos:line="44" pos:column="56">==<pos:position pos:line="44" pos:column="58"/></operator> <literal type="char" pos:line="44" pos:column="59">'\n'<pos:position pos:line="44" pos:column="63"/></literal></expr>)<pos:position pos:line="44" pos:column="64"/></condition><then pos:line="44" pos:column="64">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="45" pos:column="13">t<pos:position pos:line="45" pos:column="14"/></name><index pos:line="45" pos:column="14">[<expr><operator pos:line="45" pos:column="15">-<pos:position pos:line="45" pos:column="16"/></operator><literal type="number" pos:line="45" pos:column="16">1<pos:position pos:line="45" pos:column="17"/></literal></expr>]<pos:position pos:line="45" pos:column="18"/></index></name> <operator pos:line="45" pos:column="19">=<pos:position pos:line="45" pos:column="20"/></operator> <literal type="char" pos:line="45" pos:column="21">'\0'<pos:position pos:line="45" pos:column="25"/></literal></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt></block></then></if>

        <expr_stmt><expr><operator pos:line="47" pos:column="9">*<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">t<pos:position pos:line="47" pos:column="11"/></name><operator pos:line="47" pos:column="11">++<pos:position pos:line="47" pos:column="13"/></operator> <operator pos:line="47" pos:column="14">=<pos:position pos:line="47" pos:column="15"/></operator> <literal type="char" pos:line="47" pos:column="16">'\0'<pos:position pos:line="47" pos:column="20"/></literal></expr>;<pos:position pos:line="47" pos:column="21"/></expr_stmt>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><name><name pos:line="49" pos:column="13">hlp<pos:position pos:line="49" pos:column="16"/></name><operator pos:line="49" pos:column="16">-&gt;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="18">concurrency<pos:position pos:line="49" pos:column="29"/></name></name></expr>)<pos:position pos:line="49" pos:column="30"/></condition><then pos:line="49" pos:column="30"> <block pos:line="49" pos:column="31">{
            <expr_stmt><expr><name pos:line="50" pos:column="13">i<pos:position pos:line="50" pos:column="14"/></name> <operator pos:line="50" pos:column="15">=<pos:position pos:line="50" pos:column="16"/></operator> <call><name pos:line="50" pos:column="17">strtol<pos:position pos:line="50" pos:column="23"/></name><argument_list pos:line="50" pos:column="23">(<argument><expr><name pos:line="50" pos:column="24">msg<pos:position pos:line="50" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="29">&amp;<pos:position pos:line="50" pos:column="34"/></operator><name pos:line="50" pos:column="30">msg<pos:position pos:line="50" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="35">10<pos:position pos:line="50" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="39"/></expr_stmt>

            <while pos:line="52" pos:column="13">while <condition pos:line="52" pos:column="19">(<expr><operator pos:line="52" pos:column="20">*<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="21">msg<pos:position pos:line="52" pos:column="24"/></name> <operator pos:line="52" pos:column="25">&amp;&amp;<pos:position pos:line="52" pos:column="35"/></operator> <call><name pos:line="52" pos:column="28">xisspace<pos:position pos:line="52" pos:column="36"/></name><argument_list pos:line="52" pos:column="36">(<argument><expr><operator pos:line="52" pos:column="37">*<pos:position pos:line="52" pos:column="38"/></operator><name pos:line="52" pos:column="38">msg<pos:position pos:line="52" pos:column="41"/></name></expr></argument>)<pos:position pos:line="52" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="52" pos:column="43"/></condition>
                <block type="pseudo"><expr_stmt><expr><name pos:line="53" pos:column="17">msg<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">++<pos:position pos:line="53" pos:column="22"/></operator></expr>;<pos:position pos:line="53" pos:column="23"/></expr_stmt></block></while>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="56" pos:column="9">helperReturnBuffer<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><name pos:line="56" pos:column="28">i<pos:position pos:line="56" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="31">srv<pos:position pos:line="56" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="36">hlp<pos:position pos:line="56" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="41">msg<pos:position pos:line="56" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="46">t<pos:position pos:line="56" pos:column="47"/></name></expr></argument>)<pos:position pos:line="56" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="49"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></while>

    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><name><name pos:line="59" pos:column="9">srv<pos:position pos:line="59" pos:column="12"/></name><operator pos:line="59" pos:column="12">-&gt;<pos:position pos:line="59" pos:column="17"/></operator><name pos:line="59" pos:column="14">rfd<pos:position pos:line="59" pos:column="17"/></name></name> <operator pos:line="59" pos:column="18">!=<pos:position pos:line="59" pos:column="20"/></operator> <operator pos:line="59" pos:column="21">-<pos:position pos:line="59" pos:column="22"/></operator><literal type="number" pos:line="59" pos:column="22">1<pos:position pos:line="59" pos:column="23"/></literal></expr>)<pos:position pos:line="59" pos:column="24"/></condition><then pos:line="59" pos:column="24"> <block pos:line="59" pos:column="25">{
        <decl_stmt><decl><type><name pos:line="60" pos:column="9">int<pos:position pos:line="60" pos:column="12"/></name></type> <name pos:line="60" pos:column="13">spaceSize<pos:position pos:line="60" pos:column="22"/></name> <init pos:line="60" pos:column="23">= <expr><name><name pos:line="60" pos:column="25">srv<pos:position pos:line="60" pos:column="28"/></name><operator pos:line="60" pos:column="28">-&gt;<pos:position pos:line="60" pos:column="33"/></operator><name pos:line="60" pos:column="30">rbuf_sz<pos:position pos:line="60" pos:column="37"/></name></name> <operator pos:line="60" pos:column="38">-<pos:position pos:line="60" pos:column="39"/></operator> <name><name pos:line="60" pos:column="40">srv<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">-&gt;<pos:position pos:line="60" pos:column="48"/></operator><name pos:line="60" pos:column="45">roffset<pos:position pos:line="60" pos:column="52"/></name></name> <operator pos:line="60" pos:column="53">-<pos:position pos:line="60" pos:column="54"/></operator> <literal type="number" pos:line="60" pos:column="55">1<pos:position pos:line="60" pos:column="56"/></literal></expr></init></decl>;<pos:position pos:line="60" pos:column="57"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">assert<pos:position pos:line="61" pos:column="15"/></name><argument_list pos:line="61" pos:column="15">(<argument><expr><name pos:line="61" pos:column="16">spaceSize<pos:position pos:line="61" pos:column="25"/></name> <operator pos:line="61" pos:column="26">&gt;=<pos:position pos:line="61" pos:column="31"/></operator> <literal type="number" pos:line="61" pos:column="29">0<pos:position pos:line="61" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="32"/></expr_stmt>

        <comment type="line" pos:line="63" pos:column="9">// grow the input buffer if needed and possible</comment>
        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">!<pos:position pos:line="64" pos:column="14"/></operator><name pos:line="64" pos:column="14">spaceSize<pos:position pos:line="64" pos:column="23"/></name> <operator pos:line="64" pos:column="24">&amp;&amp;<pos:position pos:line="64" pos:column="34"/></operator> <name><name pos:line="64" pos:column="27">srv<pos:position pos:line="64" pos:column="30"/></name><operator pos:line="64" pos:column="30">-&gt;<pos:position pos:line="64" pos:column="35"/></operator><name pos:line="64" pos:column="32">rbuf_sz<pos:position pos:line="64" pos:column="39"/></name></name> <operator pos:line="64" pos:column="40">+<pos:position pos:line="64" pos:column="41"/></operator> <literal type="number" pos:line="64" pos:column="42">4096<pos:position pos:line="64" pos:column="46"/></literal> <operator pos:line="64" pos:column="47">&lt;=<pos:position pos:line="64" pos:column="52"/></operator> <name pos:line="64" pos:column="50">ReadBufMaxSize<pos:position pos:line="64" pos:column="64"/></name></expr>)<pos:position pos:line="64" pos:column="65"/></condition><then pos:line="64" pos:column="65"> <block pos:line="64" pos:column="66">{
            <expr_stmt><expr><name><name pos:line="65" pos:column="13">srv<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">rbuf<pos:position pos:line="65" pos:column="22"/></name></name> <operator pos:line="65" pos:column="23">=<pos:position pos:line="65" pos:column="24"/></operator> <operator pos:line="65" pos:column="25">(<pos:position pos:line="65" pos:column="26"/></operator><name pos:line="65" pos:column="26">char<pos:position pos:line="65" pos:column="30"/></name> <operator pos:line="65" pos:column="31">*<pos:position pos:line="65" pos:column="32"/></operator><operator pos:line="65" pos:column="32">)<pos:position pos:line="65" pos:column="33"/></operator><call><name pos:line="65" pos:column="33">memReallocBuf<pos:position pos:line="65" pos:column="46"/></name><argument_list pos:line="65" pos:column="46">(<argument><expr><name><name pos:line="65" pos:column="47">srv<pos:position pos:line="65" pos:column="50"/></name><operator pos:line="65" pos:column="50">-&gt;<pos:position pos:line="65" pos:column="55"/></operator><name pos:line="65" pos:column="52">rbuf<pos:position pos:line="65" pos:column="56"/></name></name></expr></argument>, <argument><expr><name><name pos:line="65" pos:column="58">srv<pos:position pos:line="65" pos:column="61"/></name><operator pos:line="65" pos:column="61">-&gt;<pos:position pos:line="65" pos:column="66"/></operator><name pos:line="65" pos:column="63">rbuf_sz<pos:position pos:line="65" pos:column="70"/></name></name> <operator pos:line="65" pos:column="71">+<pos:position pos:line="65" pos:column="72"/></operator> <literal type="number" pos:line="65" pos:column="73">4096<pos:position pos:line="65" pos:column="77"/></literal></expr></argument>, <argument><expr><operator pos:line="65" pos:column="79">&amp;<pos:position pos:line="65" pos:column="84"/></operator><name><name pos:line="65" pos:column="80">srv<pos:position pos:line="65" pos:column="83"/></name><operator pos:line="65" pos:column="83">-&gt;<pos:position pos:line="65" pos:column="88"/></operator><name pos:line="65" pos:column="85">rbuf_sz<pos:position pos:line="65" pos:column="92"/></name></name></expr></argument>)<pos:position pos:line="65" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="94"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">debugs<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><literal type="number" pos:line="66" pos:column="20">84<pos:position pos:line="66" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="24">3<pos:position pos:line="66" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="27">HERE<pos:position pos:line="66" pos:column="31"/></name> <operator pos:line="66" pos:column="32">&lt;&lt;<pos:position pos:line="66" pos:column="40"/></operator> <literal type="string" pos:line="66" pos:column="35">"Grew read buffer to "<pos:position pos:line="66" pos:column="57"/></literal> <operator pos:line="66" pos:column="58">&lt;&lt;<pos:position pos:line="66" pos:column="66"/></operator> <name><name pos:line="66" pos:column="61">srv<pos:position pos:line="66" pos:column="64"/></name><operator pos:line="66" pos:column="64">-&gt;<pos:position pos:line="66" pos:column="69"/></operator><name pos:line="66" pos:column="66">rbuf_sz<pos:position pos:line="66" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><name pos:line="67" pos:column="13">spaceSize<pos:position pos:line="67" pos:column="22"/></name> <operator pos:line="67" pos:column="23">=<pos:position pos:line="67" pos:column="24"/></operator> <name><name pos:line="67" pos:column="25">srv<pos:position pos:line="67" pos:column="28"/></name><operator pos:line="67" pos:column="28">-&gt;<pos:position pos:line="67" pos:column="33"/></operator><name pos:line="67" pos:column="30">rbuf_sz<pos:position pos:line="67" pos:column="37"/></name></name> <operator pos:line="67" pos:column="38">-<pos:position pos:line="67" pos:column="39"/></operator> <name><name pos:line="67" pos:column="40">srv<pos:position pos:line="67" pos:column="43"/></name><operator pos:line="67" pos:column="43">-&gt;<pos:position pos:line="67" pos:column="48"/></operator><name pos:line="67" pos:column="45">roffset<pos:position pos:line="67" pos:column="52"/></name></name> <operator pos:line="67" pos:column="53">-<pos:position pos:line="67" pos:column="54"/></operator> <literal type="number" pos:line="67" pos:column="55">1<pos:position pos:line="67" pos:column="56"/></literal></expr>;<pos:position pos:line="67" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="68" pos:column="13">assert<pos:position pos:line="68" pos:column="19"/></name><argument_list pos:line="68" pos:column="19">(<argument><expr><name pos:line="68" pos:column="20">spaceSize<pos:position pos:line="68" pos:column="29"/></name> <operator pos:line="68" pos:column="30">&gt;=<pos:position pos:line="68" pos:column="35"/></operator> <literal type="number" pos:line="68" pos:column="33">0<pos:position pos:line="68" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="68" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="71" pos:column="9">// quit reading if there is no space left</comment>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><operator pos:line="72" pos:column="13">!<pos:position pos:line="72" pos:column="14"/></operator><name pos:line="72" pos:column="14">spaceSize<pos:position pos:line="72" pos:column="23"/></name></expr>)<pos:position pos:line="72" pos:column="24"/></condition><then pos:line="72" pos:column="24"> <block pos:line="72" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="73" pos:column="13">debugs<pos:position pos:line="73" pos:column="19"/></name><argument_list pos:line="73" pos:column="19">(<argument><expr><literal type="number" pos:line="73" pos:column="20">84<pos:position pos:line="73" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="73" pos:column="24">DBG_IMPORTANT<pos:position pos:line="73" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="73" pos:column="39">"ERROR: Disconnecting from a "<pos:position pos:line="73" pos:column="69"/></literal> <operator pos:line="73" pos:column="70">&lt;&lt;<pos:position pos:line="73" pos:column="78"/></operator>
                   <literal type="string" pos:line="74" pos:column="20">"helper that overflowed "<pos:position pos:line="74" pos:column="45"/></literal> <operator pos:line="74" pos:column="46">&lt;&lt;<pos:position pos:line="74" pos:column="54"/></operator> <name><name pos:line="74" pos:column="49">srv<pos:position pos:line="74" pos:column="52"/></name><operator pos:line="74" pos:column="52">-&gt;<pos:position pos:line="74" pos:column="57"/></operator><name pos:line="74" pos:column="54">rbuf_sz<pos:position pos:line="74" pos:column="61"/></name></name> <operator pos:line="74" pos:column="62">&lt;&lt;<pos:position pos:line="74" pos:column="70"/></operator> <literal type="string" pos:line="74" pos:column="65">"-byte "<pos:position pos:line="74" pos:column="73"/></literal> <operator pos:line="74" pos:column="74">&lt;&lt;<pos:position pos:line="74" pos:column="82"/></operator>
                   <literal type="string" pos:line="75" pos:column="20">"Squid input buffer: "<pos:position pos:line="75" pos:column="42"/></literal> <operator pos:line="75" pos:column="43">&lt;&lt;<pos:position pos:line="75" pos:column="51"/></operator> <name><name pos:line="75" pos:column="46">hlp<pos:position pos:line="75" pos:column="49"/></name><operator pos:line="75" pos:column="49">-&gt;<pos:position pos:line="75" pos:column="54"/></operator><name pos:line="75" pos:column="51">id_name<pos:position pos:line="75" pos:column="58"/></name></name> <operator pos:line="75" pos:column="59">&lt;&lt;<pos:position pos:line="75" pos:column="67"/></operator> <literal type="string" pos:line="75" pos:column="62">" #"<pos:position pos:line="75" pos:column="66"/></literal> <operator pos:line="75" pos:column="67">&lt;&lt;<pos:position pos:line="75" pos:column="75"/></operator>
                   <operator pos:line="76" pos:column="20">(<pos:position pos:line="76" pos:column="21"/></operator><name><name pos:line="76" pos:column="21">srv<pos:position pos:line="76" pos:column="24"/></name><operator pos:line="76" pos:column="24">-&gt;<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="26">index<pos:position pos:line="76" pos:column="31"/></name></name> <operator pos:line="76" pos:column="32">+<pos:position pos:line="76" pos:column="33"/></operator> <literal type="number" pos:line="76" pos:column="34">1<pos:position pos:line="76" pos:column="35"/></literal><operator pos:line="76" pos:column="35">)<pos:position pos:line="76" pos:column="36"/></operator></expr></argument>)<pos:position pos:line="76" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="38"/></expr_stmt>

            <decl_stmt><decl><type><name pos:line="78" pos:column="13">int<pos:position pos:line="78" pos:column="16"/></name></type> <name pos:line="78" pos:column="17">wfd<pos:position pos:line="78" pos:column="20"/></name> <init pos:line="78" pos:column="21">= <expr><name><name pos:line="78" pos:column="23">srv<pos:position pos:line="78" pos:column="26"/></name><operator pos:line="78" pos:column="26">-&gt;<pos:position pos:line="78" pos:column="31"/></operator><name pos:line="78" pos:column="28">wfd<pos:position pos:line="78" pos:column="31"/></name></name></expr></init></decl>;<pos:position pos:line="78" pos:column="32"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="79" pos:column="13">srv<pos:position pos:line="79" pos:column="16"/></name><operator pos:line="79" pos:column="16">-&gt;<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="18">wfd<pos:position pos:line="79" pos:column="21"/></name></name> <operator pos:line="79" pos:column="22">=<pos:position pos:line="79" pos:column="23"/></operator> <operator pos:line="79" pos:column="24">-<pos:position pos:line="79" pos:column="25"/></operator><literal type="number" pos:line="79" pos:column="25">1<pos:position pos:line="79" pos:column="26"/></literal></expr>;<pos:position pos:line="79" pos:column="27"/></expr_stmt>
            <if pos:line="80" pos:column="13">if <condition pos:line="80" pos:column="16">(<expr><name><name pos:line="80" pos:column="17">srv<pos:position pos:line="80" pos:column="20"/></name><operator pos:line="80" pos:column="20">-&gt;<pos:position pos:line="80" pos:column="25"/></operator><name pos:line="80" pos:column="22">rfd<pos:position pos:line="80" pos:column="25"/></name></name> <operator pos:line="80" pos:column="26">==<pos:position pos:line="80" pos:column="28"/></operator> <name pos:line="80" pos:column="29">wfd<pos:position pos:line="80" pos:column="32"/></name></expr>)<pos:position pos:line="80" pos:column="33"/></condition><then pos:line="80" pos:column="33">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="81" pos:column="17">srv<pos:position pos:line="81" pos:column="20"/></name><operator pos:line="81" pos:column="20">-&gt;<pos:position pos:line="81" pos:column="25"/></operator><name pos:line="81" pos:column="22">rfd<pos:position pos:line="81" pos:column="25"/></name></name> <operator pos:line="81" pos:column="26">=<pos:position pos:line="81" pos:column="27"/></operator> <operator pos:line="81" pos:column="28">-<pos:position pos:line="81" pos:column="29"/></operator><literal type="number" pos:line="81" pos:column="29">1<pos:position pos:line="81" pos:column="30"/></literal></expr>;<pos:position pos:line="81" pos:column="31"/></expr_stmt></block></then></if>
            <expr_stmt><expr><name><name pos:line="82" pos:column="13">srv<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">-&gt;<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="18">flags<pos:position pos:line="82" pos:column="23"/></name><operator pos:line="82" pos:column="23">.<pos:position pos:line="82" pos:column="24"/></operator><name pos:line="82" pos:column="24">closing<pos:position pos:line="82" pos:column="31"/></name></name><operator pos:line="82" pos:column="31">=<pos:position pos:line="82" pos:column="32"/></operator><literal type="number" pos:line="82" pos:column="32">1<pos:position pos:line="82" pos:column="33"/></literal></expr>;<pos:position pos:line="82" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="83" pos:column="13">comm_close<pos:position pos:line="83" pos:column="23"/></name><argument_list pos:line="83" pos:column="23">(<argument><expr><name pos:line="83" pos:column="24">wfd<pos:position pos:line="83" pos:column="27"/></name></expr></argument>)<pos:position pos:line="83" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="29"/></expr_stmt>

<cpp:if pos:line="85" pos:column="1">#<cpp:directive pos:line="85" pos:column="2">if<pos:position pos:line="85" pos:column="4"/></cpp:directive> <expr><name pos:line="85" pos:column="5">_SQUID_MSWIN_<pos:position pos:line="85" pos:column="18"/></name></expr></cpp:if>
            <if pos:line="86" pos:column="13">if <condition pos:line="86" pos:column="16">(<expr><name><name pos:line="86" pos:column="17">srv<pos:position pos:line="86" pos:column="20"/></name><operator pos:line="86" pos:column="20">-&gt;<pos:position pos:line="86" pos:column="25"/></operator><name pos:line="86" pos:column="22">hIpc<pos:position pos:line="86" pos:column="26"/></name></name></expr>)<pos:position pos:line="86" pos:column="27"/></condition><then pos:line="86" pos:column="27"> <block pos:line="86" pos:column="28">{
                <if pos:line="87" pos:column="17">if <condition pos:line="87" pos:column="20">(<expr><call><name pos:line="87" pos:column="21">WaitForSingleObject<pos:position pos:line="87" pos:column="40"/></name><argument_list pos:line="87" pos:column="40">(<argument><expr><name><name pos:line="87" pos:column="41">srv<pos:position pos:line="87" pos:column="44"/></name><operator pos:line="87" pos:column="44">-&gt;<pos:position pos:line="87" pos:column="49"/></operator><name pos:line="87" pos:column="46">hIpc<pos:position pos:line="87" pos:column="50"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="52">5000<pos:position pos:line="87" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="87" pos:column="57"/></argument_list></call> <operator pos:line="87" pos:column="58">!=<pos:position pos:line="87" pos:column="60"/></operator> <name pos:line="87" pos:column="61">WAIT_OBJECT_0<pos:position pos:line="87" pos:column="74"/></name></expr>)<pos:position pos:line="87" pos:column="75"/></condition><then pos:line="87" pos:column="75"> <block pos:line="87" pos:column="76">{
                    <expr_stmt><expr><call><name pos:line="88" pos:column="21">getCurrentTime<pos:position pos:line="88" pos:column="35"/></name><argument_list pos:line="88" pos:column="35">()<pos:position pos:line="88" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="38"/></expr_stmt>
                    <expr_stmt><expr><call><name pos:line="89" pos:column="21">debugs<pos:position pos:line="89" pos:column="27"/></name><argument_list pos:line="89" pos:column="27">(<argument><expr><literal type="number" pos:line="89" pos:column="28">84<pos:position pos:line="89" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="89" pos:column="32">1<pos:position pos:line="89" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="35">"helperShutdown: WARNING: "<pos:position pos:line="89" pos:column="62"/></literal> <operator pos:line="89" pos:column="63">&lt;&lt;<pos:position pos:line="89" pos:column="71"/></operator> <name><name pos:line="89" pos:column="66">hlp<pos:position pos:line="89" pos:column="69"/></name><operator pos:line="89" pos:column="69">-&gt;<pos:position pos:line="89" pos:column="74"/></operator><name pos:line="89" pos:column="71">id_name<pos:position pos:line="89" pos:column="78"/></name></name> <operator pos:line="89" pos:column="79">&lt;&lt;<pos:position pos:line="89" pos:column="87"/></operator>
                           <literal type="string" pos:line="90" pos:column="28">" #"<pos:position pos:line="90" pos:column="32"/></literal> <operator pos:line="90" pos:column="33">&lt;&lt;<pos:position pos:line="90" pos:column="41"/></operator> <name pos:line="90" pos:column="36">no<pos:position pos:line="90" pos:column="38"/></name> <operator pos:line="90" pos:column="39">&lt;&lt;<pos:position pos:line="90" pos:column="47"/></operator> <literal type="string" pos:line="90" pos:column="42">" ("<pos:position pos:line="90" pos:column="46"/></literal> <operator pos:line="90" pos:column="47">&lt;&lt;<pos:position pos:line="90" pos:column="55"/></operator> <name><name pos:line="90" pos:column="50">hlp<pos:position pos:line="90" pos:column="53"/></name><operator pos:line="90" pos:column="53">-&gt;<pos:position pos:line="90" pos:column="58"/></operator><name pos:line="90" pos:column="55">cmdline<pos:position pos:line="90" pos:column="62"/></name><operator pos:line="90" pos:column="62">-&gt;<pos:position pos:line="90" pos:column="67"/></operator><name pos:line="90" pos:column="64">key<pos:position pos:line="90" pos:column="67"/></name></name> <operator pos:line="90" pos:column="68">&lt;&lt;<pos:position pos:line="90" pos:column="76"/></operator> <literal type="string" pos:line="90" pos:column="71">","<pos:position pos:line="90" pos:column="74"/></literal> <operator pos:line="90" pos:column="75">&lt;&lt;<pos:position pos:line="90" pos:column="83"/></operator>
                           <operator pos:line="91" pos:column="28">(<pos:position pos:line="91" pos:column="29"/></operator><name pos:line="91" pos:column="29">long<pos:position pos:line="91" pos:column="33"/></name> <name pos:line="91" pos:column="34">int<pos:position pos:line="91" pos:column="37"/></name><operator pos:line="91" pos:column="37">)<pos:position pos:line="91" pos:column="38"/></operator><name><name pos:line="91" pos:column="38">srv<pos:position pos:line="91" pos:column="41"/></name><operator pos:line="91" pos:column="41">-&gt;<pos:position pos:line="91" pos:column="46"/></operator><name pos:line="91" pos:column="43">pid<pos:position pos:line="91" pos:column="46"/></name></name> <operator pos:line="91" pos:column="47">&lt;&lt;<pos:position pos:line="91" pos:column="55"/></operator> <literal type="string" pos:line="91" pos:column="50">") didn't exit in 5 seconds"<pos:position pos:line="91" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="91" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="80"/></expr_stmt>
                }<pos:position pos:line="92" pos:column="18"/></block></then></if>
                <expr_stmt><expr><call><name pos:line="93" pos:column="17">CloseHandle<pos:position pos:line="93" pos:column="28"/></name><argument_list pos:line="93" pos:column="28">(<argument><expr><name><name pos:line="93" pos:column="29">srv<pos:position pos:line="93" pos:column="32"/></name><operator pos:line="93" pos:column="32">-&gt;<pos:position pos:line="93" pos:column="37"/></operator><name pos:line="93" pos:column="34">hIpc<pos:position pos:line="93" pos:column="38"/></name></name></expr></argument>)<pos:position pos:line="93" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="40"/></expr_stmt>
            }<pos:position pos:line="94" pos:column="14"/></block></then></if>
<cpp:endif pos:line="95" pos:column="1">#<cpp:directive pos:line="95" pos:column="2">endif<pos:position pos:line="95" pos:column="7"/></cpp:directive></cpp:endif>
            <return pos:line="96" pos:column="13">return;<pos:position pos:line="96" pos:column="20"/></return>
        }<pos:position pos:line="97" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="99" pos:column="9">comm_read<pos:position pos:line="99" pos:column="18"/></name><argument_list pos:line="99" pos:column="18">(<argument><expr><name pos:line="99" pos:column="19">fd<pos:position pos:line="99" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="23">srv<pos:position pos:line="99" pos:column="26"/></name><operator pos:line="99" pos:column="26">-&gt;<pos:position pos:line="99" pos:column="31"/></operator><name pos:line="99" pos:column="28">rbuf<pos:position pos:line="99" pos:column="32"/></name></name> <operator pos:line="99" pos:column="33">+<pos:position pos:line="99" pos:column="34"/></operator> <name><name pos:line="99" pos:column="35">srv<pos:position pos:line="99" pos:column="38"/></name><operator pos:line="99" pos:column="38">-&gt;<pos:position pos:line="99" pos:column="43"/></operator><name pos:line="99" pos:column="40">roffset<pos:position pos:line="99" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="49">spaceSize<pos:position pos:line="99" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="60">helperHandleRead<pos:position pos:line="99" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="78">srv<pos:position pos:line="99" pos:column="81"/></name></expr></argument>)<pos:position pos:line="99" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="83"/></expr_stmt>
    }<pos:position pos:line="100" pos:column="6"/></block></then></if>
}<pos:position pos:line="101" pos:column="2"/></block></function></unit>

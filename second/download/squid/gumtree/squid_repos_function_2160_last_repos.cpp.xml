<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2160_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">htcpRecv<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">int<pos:position pos:line="2" pos:column="13"/></name></type> <name pos:line="2" pos:column="14">fd<pos:position pos:line="2" pos:column="16"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="18">void<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="25"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name></type> <name><name pos:line="4" pos:column="17">buf<pos:position pos:line="4" pos:column="20"/></name><index pos:line="4" pos:column="20">[<expr><literal type="number" pos:line="4" pos:column="21">8192<pos:position pos:line="4" pos:column="25"/></literal></expr>]<pos:position pos:line="4" pos:column="26"/></index></name></decl>;<pos:position pos:line="4" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">len<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="6" pos:column="5">static<pos:position pos:line="6" pos:column="11"/></specifier> <type><name><name pos:line="6" pos:column="12">Ip<pos:position pos:line="6" pos:column="14"/></name><operator pos:line="6" pos:column="14">::<pos:position pos:line="6" pos:column="16"/></operator><name pos:line="6" pos:column="16">Address<pos:position pos:line="6" pos:column="23"/></name></name></type> <name pos:line="6" pos:column="24">from<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

    <comment type="block" pos:line="8" pos:column="5">/* Receive up to 8191 bytes, leaving room for a null */</comment>

    <expr_stmt><expr><name pos:line="10" pos:column="5">len<pos:position pos:line="10" pos:column="8"/></name> <operator pos:line="10" pos:column="9">=<pos:position pos:line="10" pos:column="10"/></operator> <call><name pos:line="10" pos:column="11">comm_udp_recvfrom<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">fd<pos:position pos:line="10" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="33">buf<pos:position pos:line="10" pos:column="36"/></name></expr></argument>, <argument><expr><sizeof pos:line="10" pos:column="38">sizeof<argument_list pos:line="10" pos:column="44">(<argument><expr><name pos:line="10" pos:column="45">buf<pos:position pos:line="10" pos:column="48"/></name></expr></argument>)<pos:position pos:line="10" pos:column="49"/></argument_list></sizeof> <operator pos:line="10" pos:column="50">-<pos:position pos:line="10" pos:column="51"/></operator> <literal type="number" pos:line="10" pos:column="52">1<pos:position pos:line="10" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="55">0<pos:position pos:line="10" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="58">from<pos:position pos:line="10" pos:column="62"/></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><literal type="number" pos:line="12" pos:column="12">31<pos:position pos:line="12" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="16">3<pos:position pos:line="12" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="19">"htcpRecv: FD "<pos:position pos:line="12" pos:column="34"/></literal> <operator pos:line="12" pos:column="35">&lt;&lt;<pos:position pos:line="12" pos:column="43"/></operator> <name pos:line="12" pos:column="38">fd<pos:position pos:line="12" pos:column="40"/></name> <operator pos:line="12" pos:column="41">&lt;&lt;<pos:position pos:line="12" pos:column="49"/></operator> <literal type="string" pos:line="12" pos:column="44">", "<pos:position pos:line="12" pos:column="48"/></literal> <operator pos:line="12" pos:column="49">&lt;&lt;<pos:position pos:line="12" pos:column="57"/></operator> <name pos:line="12" pos:column="52">len<pos:position pos:line="12" pos:column="55"/></name> <operator pos:line="12" pos:column="56">&lt;&lt;<pos:position pos:line="12" pos:column="64"/></operator> <literal type="string" pos:line="12" pos:column="59">" bytes from "<pos:position pos:line="12" pos:column="73"/></literal> <operator pos:line="12" pos:column="74">&lt;&lt;<pos:position pos:line="12" pos:column="82"/></operator> <name pos:line="12" pos:column="77">from<pos:position pos:line="12" pos:column="81"/></name></expr></argument> )<pos:position pos:line="12" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="84"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">len<pos:position pos:line="14" pos:column="12"/></name></expr>)<pos:position pos:line="14" pos:column="13"/></condition><then pos:line="14" pos:column="13">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="15" pos:column="9">++<pos:position pos:line="15" pos:column="11"/></operator><name><name pos:line="15" pos:column="11">statCounter<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">.<pos:position pos:line="15" pos:column="23"/></operator><name pos:line="15" pos:column="23">htcp<pos:position pos:line="15" pos:column="27"/></name><operator pos:line="15" pos:column="27">.<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="28">pkts_recv<pos:position pos:line="15" pos:column="37"/></name></name></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">htcpHandleMsg<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">buf<pos:position pos:line="17" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">len<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="29">from<pos:position pos:line="17" pos:column="33"/></name></expr></argument>)<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">Comm<pos:position pos:line="19" pos:column="9"/></name><operator pos:line="19" pos:column="9">::<pos:position pos:line="19" pos:column="11"/></operator><name pos:line="19" pos:column="11">SetSelect<pos:position pos:line="19" pos:column="20"/></name></name><argument_list pos:line="19" pos:column="20">(<argument><expr><name pos:line="19" pos:column="21">fd<pos:position pos:line="19" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="25">COMM_SELECT_READ<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="43">htcpRecv<pos:position pos:line="19" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="19" pos:column="53">NULL<pos:position pos:line="19" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="59">0<pos:position pos:line="19" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="62"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1239_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">size_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name pos:line="2" pos:column="1">memStringCount<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">()<pos:position pos:line="2" pos:column="17"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">result<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><literal type="number" pos:line="4" pos:column="21">0<pos:position pos:line="4" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><decl><type><name pos:line="6" pos:column="10">int<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">counter<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><literal type="number" pos:line="6" pos:column="24">0<pos:position pos:line="6" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="26"/></init> <condition><expr><name pos:line="6" pos:column="27">counter<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">&lt;<pos:position pos:line="6" pos:column="39"/></operator> <name pos:line="6" pos:column="37">mem_str_pool_count<pos:position pos:line="6" pos:column="55"/></name></expr>;<pos:position pos:line="6" pos:column="56"/></condition> <incr><expr><operator pos:line="6" pos:column="57">++<pos:position pos:line="6" pos:column="59"/></operator><name pos:line="6" pos:column="59">counter<pos:position pos:line="6" pos:column="66"/></name></expr></incr>)<pos:position pos:line="6" pos:column="67"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="7" pos:column="9">result<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">+=<pos:position pos:line="7" pos:column="18"/></operator> <call><name pos:line="7" pos:column="19">memPoolInUseCount<pos:position pos:line="7" pos:column="36"/></name><argument_list pos:line="7" pos:column="36">(<argument><expr><name><name pos:line="7" pos:column="37">StrPools<pos:position pos:line="7" pos:column="45"/></name><index pos:line="7" pos:column="45">[<expr><name pos:line="7" pos:column="46">counter<pos:position pos:line="7" pos:column="53"/></name></expr>]<pos:position pos:line="7" pos:column="54"/></index></name><operator pos:line="7" pos:column="54">.<pos:position pos:line="7" pos:column="55"/></operator><name pos:line="7" pos:column="55">pool<pos:position pos:line="7" pos:column="59"/></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="61"/></expr_stmt></block></for>

    <return pos:line="9" pos:column="5">return <expr><name pos:line="9" pos:column="12">result<pos:position pos:line="9" pos:column="18"/></name></expr>;<pos:position pos:line="9" pos:column="19"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

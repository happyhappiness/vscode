<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3657_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">httpsSslBumpAccessCheckDone<pos:position pos:line="2" pos:column="28"/></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">allow_t<pos:position pos:line="2" pos:column="36"/></name></type> <name pos:line="2" pos:column="37">answer<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">void<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">data<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ConnStateData<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">connState<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><operator pos:line="4" pos:column="32">(<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">ConnStateData<pos:position pos:line="4" pos:column="46"/></name> <operator pos:line="4" pos:column="47">*<pos:position pos:line="4" pos:column="48"/></operator><operator pos:line="4" pos:column="48">)<pos:position pos:line="4" pos:column="49"/></operator> <name pos:line="4" pos:column="50">data<pos:position pos:line="4" pos:column="54"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="55"/></decl_stmt>

    <comment type="line" pos:line="6" pos:column="5">// if the connection is closed or closing, just return.</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><call><name><name pos:line="7" pos:column="10">connState<pos:position pos:line="7" pos:column="19"/></name><operator pos:line="7" pos:column="19">-&gt;<pos:position pos:line="7" pos:column="24"/></operator><name pos:line="7" pos:column="21">isOpen<pos:position pos:line="7" pos:column="27"/></name></name><argument_list pos:line="7" pos:column="27">()<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="30"/></condition><then pos:line="7" pos:column="30">
        <block type="pseudo"><return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return></block></then></if>

    <comment type="line" pos:line="10" pos:column="5">// Require both a match and a positive bump mode to work around exceptional</comment>
    <comment type="line" pos:line="11" pos:column="5">// cases where ACL code may return ACCESS_ALLOWED with zero answer.kind.</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">answer<pos:position pos:line="12" pos:column="15"/></name> <operator pos:line="12" pos:column="16">==<pos:position pos:line="12" pos:column="18"/></operator> <name pos:line="12" pos:column="19">ACCESS_ALLOWED<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">&amp;&amp;<pos:position pos:line="12" pos:column="44"/></operator> <operator pos:line="12" pos:column="37">(<pos:position pos:line="12" pos:column="38"/></operator><name><name pos:line="12" pos:column="38">answer<pos:position pos:line="12" pos:column="44"/></name><operator pos:line="12" pos:column="44">.<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="45">kind<pos:position pos:line="12" pos:column="49"/></name></name> <operator pos:line="12" pos:column="50">!=<pos:position pos:line="12" pos:column="52"/></operator> <name><name pos:line="12" pos:column="53">Ssl<pos:position pos:line="12" pos:column="56"/></name><operator pos:line="12" pos:column="56">::<pos:position pos:line="12" pos:column="58"/></operator><name pos:line="12" pos:column="58">bumpNone<pos:position pos:line="12" pos:column="66"/></name></name> <operator pos:line="12" pos:column="67">&amp;&amp;<pos:position pos:line="12" pos:column="77"/></operator> <name><name pos:line="12" pos:column="70">answer<pos:position pos:line="12" pos:column="76"/></name><operator pos:line="12" pos:column="76">.<pos:position pos:line="12" pos:column="77"/></operator><name pos:line="12" pos:column="77">kind<pos:position pos:line="12" pos:column="81"/></name></name> <operator pos:line="12" pos:column="82">!=<pos:position pos:line="12" pos:column="84"/></operator> <name><name pos:line="12" pos:column="85">Ssl<pos:position pos:line="12" pos:column="88"/></name><operator pos:line="12" pos:column="88">::<pos:position pos:line="12" pos:column="90"/></operator><name pos:line="12" pos:column="90">bumpSplice<pos:position pos:line="12" pos:column="100"/></name></name><operator pos:line="12" pos:column="100">)<pos:position pos:line="12" pos:column="101"/></operator></expr>)<pos:position pos:line="12" pos:column="102"/></condition><then pos:line="12" pos:column="102"> <block pos:line="12" pos:column="103">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">33<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="20">2<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="23">"sslBump needed for "<pos:position pos:line="13" pos:column="44"/></literal> <operator pos:line="13" pos:column="45">&lt;&lt;<pos:position pos:line="13" pos:column="53"/></operator> <name><name pos:line="13" pos:column="48">connState<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">-&gt;<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="59">clientConnection<pos:position pos:line="13" pos:column="75"/></name></name> <operator pos:line="13" pos:column="76">&lt;&lt;<pos:position pos:line="13" pos:column="84"/></operator> <literal type="string" pos:line="13" pos:column="79">" method "<pos:position pos:line="13" pos:column="89"/></literal> <operator pos:line="13" pos:column="90">&lt;&lt;<pos:position pos:line="13" pos:column="98"/></operator> <name><name pos:line="13" pos:column="93">answer<pos:position pos:line="13" pos:column="99"/></name><operator pos:line="13" pos:column="99">.<pos:position pos:line="13" pos:column="100"/></operator><name pos:line="13" pos:column="100">kind<pos:position pos:line="13" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="106"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">connState<pos:position pos:line="14" pos:column="18"/></name><operator pos:line="14" pos:column="18">-&gt;<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="20">sslBumpMode<pos:position pos:line="14" pos:column="31"/></name></name> <operator pos:line="14" pos:column="32">=<pos:position pos:line="14" pos:column="33"/></operator> <cast type="static" pos:line="14" pos:column="34">static_cast<argument_list type="generic" pos:line="14" pos:column="45">&lt;<argument><expr><name><name pos:line="14" pos:column="46">Ssl<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">::<pos:position pos:line="14" pos:column="51"/></operator><name pos:line="14" pos:column="51">BumpMode<pos:position pos:line="14" pos:column="59"/></name></name></expr></argument>&gt;<pos:position pos:line="14" pos:column="63"/></argument_list><argument_list pos:line="14" pos:column="60">(<argument><expr><name><name pos:line="14" pos:column="61">answer<pos:position pos:line="14" pos:column="67"/></name><operator pos:line="14" pos:column="67">.<pos:position pos:line="14" pos:column="68"/></operator><name pos:line="14" pos:column="68">kind<pos:position pos:line="14" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="73"/></argument_list></cast></expr>;<pos:position pos:line="14" pos:column="74"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <else pos:line="15" pos:column="7">else <block pos:line="15" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">33<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">2<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="23">HERE<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">&lt;&lt;<pos:position pos:line="16" pos:column="36"/></operator> <literal type="string" pos:line="16" pos:column="31">"sslBump not needed for "<pos:position pos:line="16" pos:column="56"/></literal> <operator pos:line="16" pos:column="57">&lt;&lt;<pos:position pos:line="16" pos:column="65"/></operator> <name><name pos:line="16" pos:column="60">connState<pos:position pos:line="16" pos:column="69"/></name><operator pos:line="16" pos:column="69">-&gt;<pos:position pos:line="16" pos:column="74"/></operator><name pos:line="16" pos:column="71">clientConnection<pos:position pos:line="16" pos:column="87"/></name></name></expr></argument>)<pos:position pos:line="16" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="89"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">connState<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">-&gt;<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="20">sslBumpMode<pos:position pos:line="17" pos:column="31"/></name></name> <operator pos:line="17" pos:column="32">=<pos:position pos:line="17" pos:column="33"/></operator> <name><name pos:line="17" pos:column="34">Ssl<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">::<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">bumpNone<pos:position pos:line="17" pos:column="47"/></name></name></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>
    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">connState<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">fakeAConnectRequest<pos:position pos:line="19" pos:column="35"/></name></name><argument_list pos:line="19" pos:column="35">(<argument><expr><literal type="string" pos:line="19" pos:column="36">"ssl-bump"<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="48">connState<pos:position pos:line="19" pos:column="57"/></name><operator pos:line="19" pos:column="57">-&gt;<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="59">in<pos:position pos:line="19" pos:column="61"/></name><operator pos:line="19" pos:column="61">.<pos:position pos:line="19" pos:column="62"/></operator><name pos:line="19" pos:column="62">buf<pos:position pos:line="19" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt>
}<pos:position pos:line="20" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5826_squid-3.1.23.cpp" pos:tabs="8"><decl_stmt><decl><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">inet_pton6<pos:position pos:line="2" pos:column="11"/></name><argument_list pos:line="2" pos:column="11">(<argument><expr><name pos:line="2" pos:column="12">src<pos:position pos:line="2" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="2" pos:column="17">dst<pos:position pos:line="2" pos:column="20"/></name></expr></argument>)<pos:position pos:line="2" pos:column="21"/></argument_list>
const <name pos:line="3" pos:column="7">char<pos:position pos:line="3" pos:column="11"/></name> <modifier pos:line="3" pos:column="12">*<pos:position pos:line="3" pos:column="13"/></modifier><name pos:line="3" pos:column="13">src<pos:position pos:line="3" pos:column="16"/></name></decl>;<pos:position pos:line="3" pos:column="17"/></decl_stmt>
<decl_stmt><decl><type><name pos:line="4" pos:column="1">u_char<pos:position pos:line="4" pos:column="7"/></name> <modifier pos:line="4" pos:column="8">*<pos:position pos:line="4" pos:column="9"/></modifier></type><name pos:line="4" pos:column="9">dst<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>
<block pos:line="5" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="6" pos:column="5">static<pos:position pos:line="6" pos:column="11"/></specifier> <type><specifier pos:line="6" pos:column="12">const<pos:position pos:line="6" pos:column="17"/></specifier> <name pos:line="6" pos:column="18">char<pos:position pos:line="6" pos:column="22"/></name></type> <name><name pos:line="6" pos:column="23">xdigits_l<pos:position pos:line="6" pos:column="32"/></name><index pos:line="6" pos:column="32">[]<pos:position pos:line="6" pos:column="34"/></index></name> <init pos:line="6" pos:column="35">= <expr><literal type="string" pos:line="6" pos:column="37">"0123456789abcdef"<pos:position pos:line="6" pos:column="55"/></literal></expr></init></decl>,
                                    <decl><type ref="prev"/><name><name pos:line="7" pos:column="37">xdigits_u<pos:position pos:line="7" pos:column="46"/></name><index pos:line="7" pos:column="46">[]<pos:position pos:line="7" pos:column="48"/></index></name> <init pos:line="7" pos:column="49">= <expr><literal type="string" pos:line="7" pos:column="51">"0123456789ABCDEF"<pos:position pos:line="7" pos:column="69"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="70"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">u_char<pos:position pos:line="8" pos:column="11"/></name></type> <name><name pos:line="8" pos:column="12">tmp<pos:position pos:line="8" pos:column="15"/></name><index pos:line="8" pos:column="15">[<expr><name pos:line="8" pos:column="16">NS_IN6ADDRSZ<pos:position pos:line="8" pos:column="28"/></name></expr>]<pos:position pos:line="8" pos:column="29"/></index></name></decl>, <modifier pos:line="8" pos:column="31">*<pos:position pos:line="8" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="32">tp<pos:position pos:line="8" pos:column="34"/></name></decl>, <modifier pos:line="8" pos:column="36">*<pos:position pos:line="8" pos:column="37"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="37">endp<pos:position pos:line="8" pos:column="41"/></name></decl>, <modifier pos:line="8" pos:column="43">*<pos:position pos:line="8" pos:column="44"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="44">colonp<pos:position pos:line="8" pos:column="50"/></name></decl>;<pos:position pos:line="8" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name> <modifier pos:line="9" pos:column="16">*<pos:position pos:line="9" pos:column="17"/></modifier></type><name pos:line="9" pos:column="17">xdigits<pos:position pos:line="9" pos:column="24"/></name></decl>, <modifier pos:line="9" pos:column="26">*<pos:position pos:line="9" pos:column="27"/></modifier><decl><type ref="prev"/><name pos:line="9" pos:column="27">curtok<pos:position pos:line="9" pos:column="33"/></name></decl>;<pos:position pos:line="9" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">ch<pos:position pos:line="10" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="10" pos:column="13">seen_xdigits<pos:position pos:line="10" pos:column="25"/></name></decl>;<pos:position pos:line="10" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">u_int<pos:position pos:line="11" pos:column="10"/></name></type> <name pos:line="11" pos:column="11">val<pos:position pos:line="11" pos:column="14"/></name></decl>;<pos:position pos:line="11" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">memset<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><operator pos:line="13" pos:column="12">(<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">tp<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">=<pos:position pos:line="13" pos:column="17"/></operator> <name pos:line="13" pos:column="18">tmp<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">)<pos:position pos:line="13" pos:column="22"/></operator></expr></argument>, <argument><expr><literal type="char" pos:line="13" pos:column="24">'\0'<pos:position pos:line="13" pos:column="28"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="30">NS_IN6ADDRSZ<pos:position pos:line="13" pos:column="42"/></name></expr></argument>)<pos:position pos:line="13" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">endp<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <name pos:line="14" pos:column="12">tp<pos:position pos:line="14" pos:column="14"/></name> <operator pos:line="14" pos:column="15">+<pos:position pos:line="14" pos:column="16"/></operator> <name pos:line="14" pos:column="17">NS_IN6ADDRSZ<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name pos:line="15" pos:column="5">colonp<pos:position pos:line="15" pos:column="11"/></name> <operator pos:line="15" pos:column="12">=<pos:position pos:line="15" pos:column="13"/></operator> <name pos:line="15" pos:column="14">NULL<pos:position pos:line="15" pos:column="18"/></name></expr>;<pos:position pos:line="15" pos:column="19"/></expr_stmt>
    <comment type="block" pos:line="16" pos:column="5">/* Leading :: requires some special handling. */</comment>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">*<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">src<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator> <literal type="char" pos:line="17" pos:column="17">':'<pos:position pos:line="17" pos:column="20"/></literal></expr>)<pos:position pos:line="17" pos:column="21"/></condition><then pos:line="17" pos:column="21">
        <block type="pseudo"><if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><operator pos:line="18" pos:column="13">*<pos:position pos:line="18" pos:column="14"/></operator><operator pos:line="18" pos:column="14">++<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">src<pos:position pos:line="18" pos:column="19"/></name> <operator pos:line="18" pos:column="20">!=<pos:position pos:line="18" pos:column="22"/></operator> <literal type="char" pos:line="18" pos:column="23">':'<pos:position pos:line="18" pos:column="26"/></literal></expr>)<pos:position pos:line="18" pos:column="27"/></condition><then pos:line="18" pos:column="27">
            <block type="pseudo"><return pos:line="19" pos:column="13">return <expr><operator pos:line="19" pos:column="20">(<pos:position pos:line="19" pos:column="21"/></operator><literal type="number" pos:line="19" pos:column="21">0<pos:position pos:line="19" pos:column="22"/></literal><operator pos:line="19" pos:column="22">)<pos:position pos:line="19" pos:column="23"/></operator></expr>;<pos:position pos:line="19" pos:column="24"/></return></block></then></if></block></then></if>
    <expr_stmt><expr><name pos:line="20" pos:column="5">curtok<pos:position pos:line="20" pos:column="11"/></name> <operator pos:line="20" pos:column="12">=<pos:position pos:line="20" pos:column="13"/></operator> <name pos:line="20" pos:column="14">src<pos:position pos:line="20" pos:column="17"/></name></expr>;<pos:position pos:line="20" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">seen_xdigits<pos:position pos:line="21" pos:column="17"/></name> <operator pos:line="21" pos:column="18">=<pos:position pos:line="21" pos:column="19"/></operator> <literal type="number" pos:line="21" pos:column="20">0<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="22" pos:column="5">val<pos:position pos:line="22" pos:column="8"/></name> <operator pos:line="22" pos:column="9">=<pos:position pos:line="22" pos:column="10"/></operator> <literal type="number" pos:line="22" pos:column="11">0<pos:position pos:line="22" pos:column="12"/></literal></expr>;<pos:position pos:line="22" pos:column="13"/></expr_stmt>
    <while pos:line="23" pos:column="5">while <condition pos:line="23" pos:column="11">(<expr><operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">ch<pos:position pos:line="23" pos:column="15"/></name> <operator pos:line="23" pos:column="16">=<pos:position pos:line="23" pos:column="17"/></operator> <operator pos:line="23" pos:column="18">*<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">src<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">++<pos:position pos:line="23" pos:column="24"/></operator><operator pos:line="23" pos:column="24">)<pos:position pos:line="23" pos:column="25"/></operator> <operator pos:line="23" pos:column="26">!=<pos:position pos:line="23" pos:column="28"/></operator> <literal type="char" pos:line="23" pos:column="29">'\0'<pos:position pos:line="23" pos:column="33"/></literal></expr>)<pos:position pos:line="23" pos:column="34"/></condition> <block pos:line="23" pos:column="35">{
        <decl_stmt><decl><type><specifier pos:line="24" pos:column="9">const<pos:position pos:line="24" pos:column="14"/></specifier> <name pos:line="24" pos:column="15">char<pos:position pos:line="24" pos:column="19"/></name> <modifier pos:line="24" pos:column="20">*<pos:position pos:line="24" pos:column="21"/></modifier></type><name pos:line="24" pos:column="21">pch<pos:position pos:line="24" pos:column="24"/></name></decl>;<pos:position pos:line="24" pos:column="25"/></decl_stmt>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><operator pos:line="26" pos:column="13">(<pos:position pos:line="26" pos:column="14"/></operator><name pos:line="26" pos:column="14">pch<pos:position pos:line="26" pos:column="17"/></name> <operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <call><name pos:line="26" pos:column="20">strchr<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><operator pos:line="26" pos:column="27">(<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="28">xdigits<pos:position pos:line="26" pos:column="35"/></name> <operator pos:line="26" pos:column="36">=<pos:position pos:line="26" pos:column="37"/></operator> <name pos:line="26" pos:column="38">xdigits_l<pos:position pos:line="26" pos:column="47"/></name><operator pos:line="26" pos:column="47">)<pos:position pos:line="26" pos:column="48"/></operator></expr></argument>, <argument><expr><name pos:line="26" pos:column="50">ch<pos:position pos:line="26" pos:column="52"/></name></expr></argument>)<pos:position pos:line="26" pos:column="53"/></argument_list></call><operator pos:line="26" pos:column="53">)<pos:position pos:line="26" pos:column="54"/></operator> <operator pos:line="26" pos:column="55">==<pos:position pos:line="26" pos:column="57"/></operator> <name pos:line="26" pos:column="58">NULL<pos:position pos:line="26" pos:column="62"/></name></expr>)<pos:position pos:line="26" pos:column="63"/></condition><then pos:line="26" pos:column="63">
            <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="13">pch<pos:position pos:line="27" pos:column="16"/></name> <operator pos:line="27" pos:column="17">=<pos:position pos:line="27" pos:column="18"/></operator> <call><name pos:line="27" pos:column="19">strchr<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><operator pos:line="27" pos:column="26">(<pos:position pos:line="27" pos:column="27"/></operator><name pos:line="27" pos:column="27">xdigits<pos:position pos:line="27" pos:column="34"/></name> <operator pos:line="27" pos:column="35">=<pos:position pos:line="27" pos:column="36"/></operator> <name pos:line="27" pos:column="37">xdigits_u<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">)<pos:position pos:line="27" pos:column="47"/></operator></expr></argument>, <argument><expr><name pos:line="27" pos:column="49">ch<pos:position pos:line="27" pos:column="51"/></name></expr></argument>)<pos:position pos:line="27" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="53"/></expr_stmt></block></then></if>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><name pos:line="28" pos:column="13">pch<pos:position pos:line="28" pos:column="16"/></name> <operator pos:line="28" pos:column="17">!=<pos:position pos:line="28" pos:column="19"/></operator> <name pos:line="28" pos:column="20">NULL<pos:position pos:line="28" pos:column="24"/></name></expr>)<pos:position pos:line="28" pos:column="25"/></condition><then pos:line="28" pos:column="25"> <block pos:line="28" pos:column="26">{
            <expr_stmt><expr><name pos:line="29" pos:column="13">val<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">&lt;&lt;=<pos:position pos:line="29" pos:column="26"/></operator> <literal type="number" pos:line="29" pos:column="21">4<pos:position pos:line="29" pos:column="22"/></literal></expr>;<pos:position pos:line="29" pos:column="23"/></expr_stmt>
            <expr_stmt><expr><name pos:line="30" pos:column="13">val<pos:position pos:line="30" pos:column="16"/></name> <operator pos:line="30" pos:column="17">|=<pos:position pos:line="30" pos:column="19"/></operator> <operator pos:line="30" pos:column="20">(<pos:position pos:line="30" pos:column="21"/></operator><name pos:line="30" pos:column="21">pch<pos:position pos:line="30" pos:column="24"/></name> <operator pos:line="30" pos:column="25">-<pos:position pos:line="30" pos:column="26"/></operator> <name pos:line="30" pos:column="27">xdigits<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">)<pos:position pos:line="30" pos:column="35"/></operator></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>
            <if pos:line="31" pos:column="13">if <condition pos:line="31" pos:column="16">(<expr><operator pos:line="31" pos:column="17">++<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">seen_xdigits<pos:position pos:line="31" pos:column="31"/></name> <operator pos:line="31" pos:column="32">&gt;<pos:position pos:line="31" pos:column="36"/></operator> <literal type="number" pos:line="31" pos:column="34">4<pos:position pos:line="31" pos:column="35"/></literal></expr>)<pos:position pos:line="31" pos:column="36"/></condition><then pos:line="31" pos:column="36">
                <block type="pseudo"><return pos:line="32" pos:column="17">return <expr><operator pos:line="32" pos:column="24">(<pos:position pos:line="32" pos:column="25"/></operator><literal type="number" pos:line="32" pos:column="25">0<pos:position pos:line="32" pos:column="26"/></literal><operator pos:line="32" pos:column="26">)<pos:position pos:line="32" pos:column="27"/></operator></expr>;<pos:position pos:line="32" pos:column="28"/></return></block></then></if>
            <continue pos:line="33" pos:column="13">continue;<pos:position pos:line="33" pos:column="22"/></continue>
        }<pos:position pos:line="34" pos:column="10"/></block></then></if>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">ch<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">==<pos:position pos:line="35" pos:column="18"/></operator> <literal type="char" pos:line="35" pos:column="19">':'<pos:position pos:line="35" pos:column="22"/></literal></expr>)<pos:position pos:line="35" pos:column="23"/></condition><then pos:line="35" pos:column="23"> <block pos:line="35" pos:column="24">{
            <expr_stmt><expr><name pos:line="36" pos:column="13">curtok<pos:position pos:line="36" pos:column="19"/></name> <operator pos:line="36" pos:column="20">=<pos:position pos:line="36" pos:column="21"/></operator> <name pos:line="36" pos:column="22">src<pos:position pos:line="36" pos:column="25"/></name></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt>
            <if pos:line="37" pos:column="13">if <condition pos:line="37" pos:column="16">(<expr><operator pos:line="37" pos:column="17">!<pos:position pos:line="37" pos:column="18"/></operator><name pos:line="37" pos:column="18">seen_xdigits<pos:position pos:line="37" pos:column="30"/></name></expr>)<pos:position pos:line="37" pos:column="31"/></condition><then pos:line="37" pos:column="31"> <block pos:line="37" pos:column="32">{
                <if pos:line="38" pos:column="17">if <condition pos:line="38" pos:column="20">(<expr><name pos:line="38" pos:column="21">colonp<pos:position pos:line="38" pos:column="27"/></name></expr>)<pos:position pos:line="38" pos:column="28"/></condition><then pos:line="38" pos:column="28">
                    <block type="pseudo"><return pos:line="39" pos:column="21">return <expr><operator pos:line="39" pos:column="28">(<pos:position pos:line="39" pos:column="29"/></operator><literal type="number" pos:line="39" pos:column="29">0<pos:position pos:line="39" pos:column="30"/></literal><operator pos:line="39" pos:column="30">)<pos:position pos:line="39" pos:column="31"/></operator></expr>;<pos:position pos:line="39" pos:column="32"/></return></block></then></if>
                <expr_stmt><expr><name pos:line="40" pos:column="17">colonp<pos:position pos:line="40" pos:column="23"/></name> <operator pos:line="40" pos:column="24">=<pos:position pos:line="40" pos:column="25"/></operator> <name pos:line="40" pos:column="26">tp<pos:position pos:line="40" pos:column="28"/></name></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt>
                <continue pos:line="41" pos:column="17">continue;<pos:position pos:line="41" pos:column="26"/></continue>
            }<pos:position pos:line="42" pos:column="14"/></block></then> <elseif pos:line="42" pos:column="15">else <if pos:line="42" pos:column="20">if <condition pos:line="42" pos:column="23">(<expr><operator pos:line="42" pos:column="24">*<pos:position pos:line="42" pos:column="25"/></operator><name pos:line="42" pos:column="25">src<pos:position pos:line="42" pos:column="28"/></name> <operator pos:line="42" pos:column="29">==<pos:position pos:line="42" pos:column="31"/></operator> <literal type="char" pos:line="42" pos:column="32">'\0'<pos:position pos:line="42" pos:column="36"/></literal></expr>)<pos:position pos:line="42" pos:column="37"/></condition><then pos:line="42" pos:column="37"> <block pos:line="42" pos:column="38">{
                <return pos:line="43" pos:column="17">return <expr><operator pos:line="43" pos:column="24">(<pos:position pos:line="43" pos:column="25"/></operator><literal type="number" pos:line="43" pos:column="25">0<pos:position pos:line="43" pos:column="26"/></literal><operator pos:line="43" pos:column="26">)<pos:position pos:line="43" pos:column="27"/></operator></expr>;<pos:position pos:line="43" pos:column="28"/></return>
            }<pos:position pos:line="44" pos:column="14"/></block></then></if></elseif></if>
            <if pos:line="45" pos:column="13">if <condition pos:line="45" pos:column="16">(<expr><name pos:line="45" pos:column="17">tp<pos:position pos:line="45" pos:column="19"/></name> <operator pos:line="45" pos:column="20">+<pos:position pos:line="45" pos:column="21"/></operator> <name pos:line="45" pos:column="22">NS_INT16SZ<pos:position pos:line="45" pos:column="32"/></name> <operator pos:line="45" pos:column="33">&gt;<pos:position pos:line="45" pos:column="37"/></operator> <name pos:line="45" pos:column="35">endp<pos:position pos:line="45" pos:column="39"/></name></expr>)<pos:position pos:line="45" pos:column="40"/></condition><then pos:line="45" pos:column="40">
                <block type="pseudo"><return pos:line="46" pos:column="17">return <expr><operator pos:line="46" pos:column="24">(<pos:position pos:line="46" pos:column="25"/></operator><literal type="number" pos:line="46" pos:column="25">0<pos:position pos:line="46" pos:column="26"/></literal><operator pos:line="46" pos:column="26">)<pos:position pos:line="46" pos:column="27"/></operator></expr>;<pos:position pos:line="46" pos:column="28"/></return></block></then></if>
            <expr_stmt><expr><operator pos:line="47" pos:column="13">*<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">tp<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">++<pos:position pos:line="47" pos:column="18"/></operator> <operator pos:line="47" pos:column="19">=<pos:position pos:line="47" pos:column="20"/></operator> <call pos:line="47" pos:column="21">(<name pos:line="47" pos:column="22">u_char<pos:position pos:line="47" pos:column="28"/></name>) <argument_list pos:line="47" pos:column="30">(<argument><expr><name pos:line="47" pos:column="31">val<pos:position pos:line="47" pos:column="34"/></name> <operator pos:line="47" pos:column="35">&gt;&gt;<pos:position pos:line="47" pos:column="40"/></operator> <literal type="number" pos:line="47" pos:column="38">8<pos:position pos:line="47" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="40"/></argument_list></call> <operator pos:line="47" pos:column="41">&amp;<pos:position pos:line="47" pos:column="46"/></operator> <literal type="number" pos:line="47" pos:column="43">0xff<pos:position pos:line="47" pos:column="47"/></literal></expr>;<pos:position pos:line="47" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="48" pos:column="13">*<pos:position pos:line="48" pos:column="14"/></operator><name pos:line="48" pos:column="14">tp<pos:position pos:line="48" pos:column="16"/></name><operator pos:line="48" pos:column="16">++<pos:position pos:line="48" pos:column="18"/></operator> <operator pos:line="48" pos:column="19">=<pos:position pos:line="48" pos:column="20"/></operator> <operator pos:line="48" pos:column="21">(<pos:position pos:line="48" pos:column="22"/></operator><name pos:line="48" pos:column="22">u_char<pos:position pos:line="48" pos:column="28"/></name><operator pos:line="48" pos:column="28">)<pos:position pos:line="48" pos:column="29"/></operator> <name pos:line="48" pos:column="30">val<pos:position pos:line="48" pos:column="33"/></name> <operator pos:line="48" pos:column="34">&amp;<pos:position pos:line="48" pos:column="39"/></operator> <literal type="number" pos:line="48" pos:column="36">0xff<pos:position pos:line="48" pos:column="40"/></literal></expr>;<pos:position pos:line="48" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="49" pos:column="13">seen_xdigits<pos:position pos:line="49" pos:column="25"/></name> <operator pos:line="49" pos:column="26">=<pos:position pos:line="49" pos:column="27"/></operator> <literal type="number" pos:line="49" pos:column="28">0<pos:position pos:line="49" pos:column="29"/></literal></expr>;<pos:position pos:line="49" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><name pos:line="50" pos:column="13">val<pos:position pos:line="50" pos:column="16"/></name> <operator pos:line="50" pos:column="17">=<pos:position pos:line="50" pos:column="18"/></operator> <literal type="number" pos:line="50" pos:column="19">0<pos:position pos:line="50" pos:column="20"/></literal></expr>;<pos:position pos:line="50" pos:column="21"/></expr_stmt>
            <continue pos:line="51" pos:column="13">continue;<pos:position pos:line="51" pos:column="22"/></continue>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">ch<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">==<pos:position pos:line="53" pos:column="18"/></operator> <literal type="char" pos:line="53" pos:column="19">'.'<pos:position pos:line="53" pos:column="22"/></literal> <operator pos:line="53" pos:column="23">&amp;&amp;<pos:position pos:line="53" pos:column="33"/></operator> <operator pos:line="53" pos:column="26">(<pos:position pos:line="53" pos:column="27"/></operator><operator pos:line="53" pos:column="27">(<pos:position pos:line="53" pos:column="28"/></operator><name pos:line="53" pos:column="28">tp<pos:position pos:line="53" pos:column="30"/></name> <operator pos:line="53" pos:column="31">+<pos:position pos:line="53" pos:column="32"/></operator> <name pos:line="53" pos:column="33">NS_INADDRSZ<pos:position pos:line="53" pos:column="44"/></name><operator pos:line="53" pos:column="44">)<pos:position pos:line="53" pos:column="45"/></operator> <operator pos:line="53" pos:column="46">&lt;=<pos:position pos:line="53" pos:column="51"/></operator> <name pos:line="53" pos:column="49">endp<pos:position pos:line="53" pos:column="53"/></name><operator pos:line="53" pos:column="53">)<pos:position pos:line="53" pos:column="54"/></operator> <operator pos:line="53" pos:column="55">&amp;&amp;<pos:position pos:line="53" pos:column="65"/></operator>
                <call><name pos:line="54" pos:column="17">inet_pton4<pos:position pos:line="54" pos:column="27"/></name><argument_list pos:line="54" pos:column="27">(<argument><expr><name pos:line="54" pos:column="28">curtok<pos:position pos:line="54" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="36">tp<pos:position pos:line="54" pos:column="38"/></name></expr></argument>)<pos:position pos:line="54" pos:column="39"/></argument_list></call> <operator pos:line="54" pos:column="40">&gt;<pos:position pos:line="54" pos:column="44"/></operator> <literal type="number" pos:line="54" pos:column="42">0<pos:position pos:line="54" pos:column="43"/></literal></expr>)<pos:position pos:line="54" pos:column="44"/></condition><then pos:line="54" pos:column="44"> <block pos:line="54" pos:column="45">{
            <expr_stmt><expr><name pos:line="55" pos:column="13">tp<pos:position pos:line="55" pos:column="15"/></name> <operator pos:line="55" pos:column="16">+=<pos:position pos:line="55" pos:column="18"/></operator> <name pos:line="55" pos:column="19">NS_INADDRSZ<pos:position pos:line="55" pos:column="30"/></name></expr>;<pos:position pos:line="55" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name pos:line="56" pos:column="13">seen_xdigits<pos:position pos:line="56" pos:column="25"/></name> <operator pos:line="56" pos:column="26">=<pos:position pos:line="56" pos:column="27"/></operator> <literal type="number" pos:line="56" pos:column="28">0<pos:position pos:line="56" pos:column="29"/></literal></expr>;<pos:position pos:line="56" pos:column="30"/></expr_stmt>
            <break pos:line="57" pos:column="13">break;<pos:position pos:line="57" pos:column="19"/></break>	<comment type="block" pos:line="57" pos:column="25">/* '\0' was seen by inet_pton4(). */</comment>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
        <return pos:line="59" pos:column="9">return <expr><operator pos:line="59" pos:column="16">(<pos:position pos:line="59" pos:column="17"/></operator><literal type="number" pos:line="59" pos:column="17">0<pos:position pos:line="59" pos:column="18"/></literal><operator pos:line="59" pos:column="18">)<pos:position pos:line="59" pos:column="19"/></operator></expr>;<pos:position pos:line="59" pos:column="20"/></return>
    }<pos:position pos:line="60" pos:column="6"/></block></while>
    <if pos:line="61" pos:column="5">if <condition pos:line="61" pos:column="8">(<expr><name pos:line="61" pos:column="9">seen_xdigits<pos:position pos:line="61" pos:column="21"/></name></expr>)<pos:position pos:line="61" pos:column="22"/></condition><then pos:line="61" pos:column="22"> <block pos:line="61" pos:column="23">{
        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><name pos:line="62" pos:column="13">tp<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">+<pos:position pos:line="62" pos:column="17"/></operator> <name pos:line="62" pos:column="18">NS_INT16SZ<pos:position pos:line="62" pos:column="28"/></name> <operator pos:line="62" pos:column="29">&gt;<pos:position pos:line="62" pos:column="33"/></operator> <name pos:line="62" pos:column="31">endp<pos:position pos:line="62" pos:column="35"/></name></expr>)<pos:position pos:line="62" pos:column="36"/></condition><then pos:line="62" pos:column="36">
            <block type="pseudo"><return pos:line="63" pos:column="13">return <expr><operator pos:line="63" pos:column="20">(<pos:position pos:line="63" pos:column="21"/></operator><literal type="number" pos:line="63" pos:column="21">0<pos:position pos:line="63" pos:column="22"/></literal><operator pos:line="63" pos:column="22">)<pos:position pos:line="63" pos:column="23"/></operator></expr>;<pos:position pos:line="63" pos:column="24"/></return></block></then></if>
        <expr_stmt><expr><operator pos:line="64" pos:column="9">*<pos:position pos:line="64" pos:column="10"/></operator><name pos:line="64" pos:column="10">tp<pos:position pos:line="64" pos:column="12"/></name><operator pos:line="64" pos:column="12">++<pos:position pos:line="64" pos:column="14"/></operator> <operator pos:line="64" pos:column="15">=<pos:position pos:line="64" pos:column="16"/></operator> <call pos:line="64" pos:column="17">(<name pos:line="64" pos:column="18">u_char<pos:position pos:line="64" pos:column="24"/></name>) <argument_list pos:line="64" pos:column="26">(<argument><expr><name pos:line="64" pos:column="27">val<pos:position pos:line="64" pos:column="30"/></name> <operator pos:line="64" pos:column="31">&gt;&gt;<pos:position pos:line="64" pos:column="36"/></operator> <literal type="number" pos:line="64" pos:column="34">8<pos:position pos:line="64" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="36"/></argument_list></call> <operator pos:line="64" pos:column="37">&amp;<pos:position pos:line="64" pos:column="42"/></operator> <literal type="number" pos:line="64" pos:column="39">0xff<pos:position pos:line="64" pos:column="43"/></literal></expr>;<pos:position pos:line="64" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="65" pos:column="9">*<pos:position pos:line="65" pos:column="10"/></operator><name pos:line="65" pos:column="10">tp<pos:position pos:line="65" pos:column="12"/></name><operator pos:line="65" pos:column="12">++<pos:position pos:line="65" pos:column="14"/></operator> <operator pos:line="65" pos:column="15">=<pos:position pos:line="65" pos:column="16"/></operator> <operator pos:line="65" pos:column="17">(<pos:position pos:line="65" pos:column="18"/></operator><name pos:line="65" pos:column="18">u_char<pos:position pos:line="65" pos:column="24"/></name><operator pos:line="65" pos:column="24">)<pos:position pos:line="65" pos:column="25"/></operator> <name pos:line="65" pos:column="26">val<pos:position pos:line="65" pos:column="29"/></name> <operator pos:line="65" pos:column="30">&amp;<pos:position pos:line="65" pos:column="35"/></operator> <literal type="number" pos:line="65" pos:column="32">0xff<pos:position pos:line="65" pos:column="36"/></literal></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>
    <if pos:line="67" pos:column="5">if <condition pos:line="67" pos:column="8">(<expr><name pos:line="67" pos:column="9">colonp<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">!=<pos:position pos:line="67" pos:column="18"/></operator> <name pos:line="67" pos:column="19">NULL<pos:position pos:line="67" pos:column="23"/></name></expr>)<pos:position pos:line="67" pos:column="24"/></condition><then pos:line="67" pos:column="24"> <block pos:line="67" pos:column="25">{
        <comment type="block" pos:line="68" pos:column="9">/*
         * Since some memmove()'s erroneously fail to handle
         * overlapping regions, we'll do the shift by hand.
         */</comment>
        <decl_stmt><decl><type><specifier pos:line="72" pos:column="9">const<pos:position pos:line="72" pos:column="14"/></specifier> <name pos:line="72" pos:column="15">int<pos:position pos:line="72" pos:column="18"/></name></type> <name pos:line="72" pos:column="19">n<pos:position pos:line="72" pos:column="20"/></name> <init pos:line="72" pos:column="21">= <expr><name pos:line="72" pos:column="23">tp<pos:position pos:line="72" pos:column="25"/></name> <operator pos:line="72" pos:column="26">-<pos:position pos:line="72" pos:column="27"/></operator> <name pos:line="72" pos:column="28">colonp<pos:position pos:line="72" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="72" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="73" pos:column="9">int<pos:position pos:line="73" pos:column="12"/></name></type> <name pos:line="73" pos:column="13">i<pos:position pos:line="73" pos:column="14"/></name></decl>;<pos:position pos:line="73" pos:column="15"/></decl_stmt>

        <if pos:line="75" pos:column="9">if <condition pos:line="75" pos:column="12">(<expr><name pos:line="75" pos:column="13">tp<pos:position pos:line="75" pos:column="15"/></name> <operator pos:line="75" pos:column="16">==<pos:position pos:line="75" pos:column="18"/></operator> <name pos:line="75" pos:column="19">endp<pos:position pos:line="75" pos:column="23"/></name></expr>)<pos:position pos:line="75" pos:column="24"/></condition><then pos:line="75" pos:column="24">
            <block type="pseudo"><return pos:line="76" pos:column="13">return <expr><operator pos:line="76" pos:column="20">(<pos:position pos:line="76" pos:column="21"/></operator><literal type="number" pos:line="76" pos:column="21">0<pos:position pos:line="76" pos:column="22"/></literal><operator pos:line="76" pos:column="22">)<pos:position pos:line="76" pos:column="23"/></operator></expr>;<pos:position pos:line="76" pos:column="24"/></return></block></then></if>
        <for pos:line="77" pos:column="9">for <control pos:line="77" pos:column="13">(<init><expr><name pos:line="77" pos:column="14">i<pos:position pos:line="77" pos:column="15"/></name> <operator pos:line="77" pos:column="16">=<pos:position pos:line="77" pos:column="17"/></operator> <literal type="number" pos:line="77" pos:column="18">1<pos:position pos:line="77" pos:column="19"/></literal></expr>;<pos:position pos:line="77" pos:column="20"/></init> <condition><expr><name pos:line="77" pos:column="21">i<pos:position pos:line="77" pos:column="22"/></name> <operator pos:line="77" pos:column="23">&lt;=<pos:position pos:line="77" pos:column="28"/></operator> <name pos:line="77" pos:column="26">n<pos:position pos:line="77" pos:column="27"/></name></expr>;<pos:position pos:line="77" pos:column="28"/></condition> <incr><expr><name pos:line="77" pos:column="29">i<pos:position pos:line="77" pos:column="30"/></name><operator pos:line="77" pos:column="30">++<pos:position pos:line="77" pos:column="32"/></operator></expr></incr>)<pos:position pos:line="77" pos:column="33"/></control> <block pos:line="77" pos:column="34">{
            <expr_stmt><expr><name><name pos:line="78" pos:column="13">endp<pos:position pos:line="78" pos:column="17"/></name><index pos:line="78" pos:column="17">[<expr><operator pos:line="78" pos:column="18">-<pos:position pos:line="78" pos:column="19"/></operator> <name pos:line="78" pos:column="20">i<pos:position pos:line="78" pos:column="21"/></name></expr>]<pos:position pos:line="78" pos:column="22"/></index></name> <operator pos:line="78" pos:column="23">=<pos:position pos:line="78" pos:column="24"/></operator> <name><name pos:line="78" pos:column="25">colonp<pos:position pos:line="78" pos:column="31"/></name><index pos:line="78" pos:column="31">[<expr><name pos:line="78" pos:column="32">n<pos:position pos:line="78" pos:column="33"/></name> <operator pos:line="78" pos:column="34">-<pos:position pos:line="78" pos:column="35"/></operator> <name pos:line="78" pos:column="36">i<pos:position pos:line="78" pos:column="37"/></name></expr>]<pos:position pos:line="78" pos:column="38"/></index></name></expr>;<pos:position pos:line="78" pos:column="39"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="79" pos:column="13">colonp<pos:position pos:line="79" pos:column="19"/></name><index pos:line="79" pos:column="19">[<expr><name pos:line="79" pos:column="20">n<pos:position pos:line="79" pos:column="21"/></name> <operator pos:line="79" pos:column="22">-<pos:position pos:line="79" pos:column="23"/></operator> <name pos:line="79" pos:column="24">i<pos:position pos:line="79" pos:column="25"/></name></expr>]<pos:position pos:line="79" pos:column="26"/></index></name> <operator pos:line="79" pos:column="27">=<pos:position pos:line="79" pos:column="28"/></operator> <literal type="number" pos:line="79" pos:column="29">0<pos:position pos:line="79" pos:column="30"/></literal></expr>;<pos:position pos:line="79" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="80" pos:column="10"/></block></for>
        <expr_stmt><expr><name pos:line="81" pos:column="9">tp<pos:position pos:line="81" pos:column="11"/></name> <operator pos:line="81" pos:column="12">=<pos:position pos:line="81" pos:column="13"/></operator> <name pos:line="81" pos:column="14">endp<pos:position pos:line="81" pos:column="18"/></name></expr>;<pos:position pos:line="81" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="82" pos:column="6"/></block></then></if>
    <if pos:line="83" pos:column="5">if <condition pos:line="83" pos:column="8">(<expr><name pos:line="83" pos:column="9">tp<pos:position pos:line="83" pos:column="11"/></name> <operator pos:line="83" pos:column="12">!=<pos:position pos:line="83" pos:column="14"/></operator> <name pos:line="83" pos:column="15">endp<pos:position pos:line="83" pos:column="19"/></name></expr>)<pos:position pos:line="83" pos:column="20"/></condition><then pos:line="83" pos:column="20">
        <block type="pseudo"><return pos:line="84" pos:column="9">return <expr><operator pos:line="84" pos:column="16">(<pos:position pos:line="84" pos:column="17"/></operator><literal type="number" pos:line="84" pos:column="17">0<pos:position pos:line="84" pos:column="18"/></literal><operator pos:line="84" pos:column="18">)<pos:position pos:line="84" pos:column="19"/></operator></expr>;<pos:position pos:line="84" pos:column="20"/></return></block></then></if>
    <expr_stmt><expr><call><name pos:line="85" pos:column="5">memcpy<pos:position pos:line="85" pos:column="11"/></name><argument_list pos:line="85" pos:column="11">(<argument><expr><name pos:line="85" pos:column="12">dst<pos:position pos:line="85" pos:column="15"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="17">tmp<pos:position pos:line="85" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="22">NS_IN6ADDRSZ<pos:position pos:line="85" pos:column="34"/></name></expr></argument>)<pos:position pos:line="85" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="36"/></expr_stmt>
    <return pos:line="86" pos:column="5">return <expr><operator pos:line="86" pos:column="12">(<pos:position pos:line="86" pos:column="13"/></operator><literal type="number" pos:line="86" pos:column="13">1<pos:position pos:line="86" pos:column="14"/></literal><operator pos:line="86" pos:column="14">)<pos:position pos:line="86" pos:column="15"/></operator></expr>;<pos:position pos:line="86" pos:column="16"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></unit>

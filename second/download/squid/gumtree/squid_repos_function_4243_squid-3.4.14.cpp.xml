<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4243_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">OptXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">makeRequest<pos:position pos:line="1" pos:column="44"/></name></name><parameter_list pos:line="1" pos:column="44">(<parameter><decl><type><name pos:line="1" pos:column="45">MemBuf<pos:position pos:line="1" pos:column="51"/></name> <modifier pos:line="1" pos:column="52">&amp;<pos:position pos:line="1" pos:column="57"/></modifier></type><name pos:line="1" pos:column="53">buf<pos:position pos:line="1" pos:column="56"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="57"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name><name pos:line="3" pos:column="11">Adaptation<pos:position pos:line="3" pos:column="21"/></name><operator pos:line="3" pos:column="21">::<pos:position pos:line="3" pos:column="23"/></operator><name pos:line="3" pos:column="23">Service<pos:position pos:line="3" pos:column="30"/></name></name> <modifier pos:line="3" pos:column="31">&amp;<pos:position pos:line="3" pos:column="36"/></modifier></type><name pos:line="3" pos:column="32">s<pos:position pos:line="3" pos:column="33"/></name> <init pos:line="3" pos:column="34">= <expr><call><name pos:line="3" pos:column="36">service<pos:position pos:line="3" pos:column="43"/></name><argument_list pos:line="3" pos:column="43">()<pos:position pos:line="3" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">String<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">uri<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><call><name><name pos:line="4" pos:column="24">s<pos:position pos:line="4" pos:column="25"/></name><operator pos:line="4" pos:column="25">.<pos:position pos:line="4" pos:column="26"/></operator><name pos:line="4" pos:column="26">cfg<pos:position pos:line="4" pos:column="29"/></name></name><argument_list pos:line="4" pos:column="29">()<pos:position pos:line="4" pos:column="31"/></argument_list></call><operator pos:line="4" pos:column="31">.<pos:position pos:line="4" pos:column="32"/></operator><name pos:line="4" pos:column="32">uri<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">buf<pos:position pos:line="5" pos:column="8"/></name><operator pos:line="5" pos:column="8">.<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">Printf<pos:position pos:line="5" pos:column="15"/></name></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="string" pos:line="5" pos:column="16">"OPTIONS "<pos:position pos:line="5" pos:column="26"/></literal> <name pos:line="5" pos:column="27">SQUIDSTRINGPH<pos:position pos:line="5" pos:column="40"/></name> <literal type="string" pos:line="5" pos:column="41">" ICAP/1.0\r\n"<pos:position pos:line="5" pos:column="56"/></literal></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="58">SQUIDSTRINGPRINT<pos:position pos:line="5" pos:column="74"/></name><argument_list pos:line="5" pos:column="74">(<argument><expr><name pos:line="5" pos:column="75">uri<pos:position pos:line="5" pos:column="78"/></name></expr></argument>)<pos:position pos:line="5" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="81"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">String<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">host<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><call><name><name pos:line="6" pos:column="25">s<pos:position pos:line="6" pos:column="26"/></name><operator pos:line="6" pos:column="26">.<pos:position pos:line="6" pos:column="27"/></operator><name pos:line="6" pos:column="27">cfg<pos:position pos:line="6" pos:column="30"/></name></name><argument_list pos:line="6" pos:column="30">()<pos:position pos:line="6" pos:column="32"/></argument_list></call><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">host<pos:position pos:line="6" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="38"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">buf<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">.<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">Printf<pos:position pos:line="7" pos:column="15"/></name></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="string" pos:line="7" pos:column="16">"Host: "<pos:position pos:line="7" pos:column="24"/></literal> <name pos:line="7" pos:column="25">SQUIDSTRINGPH<pos:position pos:line="7" pos:column="38"/></name> <literal type="string" pos:line="7" pos:column="39">":%d\r\n"<pos:position pos:line="7" pos:column="48"/></literal></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="50">SQUIDSTRINGPRINT<pos:position pos:line="7" pos:column="66"/></name><argument_list pos:line="7" pos:column="66">(<argument><expr><name pos:line="7" pos:column="67">host<pos:position pos:line="7" pos:column="71"/></name></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="7" pos:column="74">s<pos:position pos:line="7" pos:column="75"/></name><operator pos:line="7" pos:column="75">.<pos:position pos:line="7" pos:column="76"/></operator><name pos:line="7" pos:column="76">cfg<pos:position pos:line="7" pos:column="79"/></name></name><argument_list pos:line="7" pos:column="79">()<pos:position pos:line="7" pos:column="81"/></argument_list></call><operator pos:line="7" pos:column="81">.<pos:position pos:line="7" pos:column="82"/></operator><name pos:line="7" pos:column="82">port<pos:position pos:line="7" pos:column="86"/></name></expr></argument>)<pos:position pos:line="7" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="88"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name><name pos:line="9" pos:column="10">TheConfig<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">.<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">reuse_connections<pos:position pos:line="9" pos:column="37"/></name></name></expr>)<pos:position pos:line="9" pos:column="38"/></condition><then pos:line="9" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="9">buf<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">.<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">Printf<pos:position pos:line="10" pos:column="19"/></name></name><argument_list pos:line="10" pos:column="19">(<argument><expr><literal type="string" pos:line="10" pos:column="20">"Connection: close\r\n"<pos:position pos:line="10" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="45"/></expr_stmt></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">TheConfig<pos:position pos:line="12" pos:column="18"/></name><operator pos:line="12" pos:column="18">.<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">allow206_enable<pos:position pos:line="12" pos:column="34"/></name></name></expr>)<pos:position pos:line="12" pos:column="35"/></condition><then pos:line="12" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="13" pos:column="9">buf<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">.<pos:position pos:line="13" pos:column="13"/></operator><name pos:line="13" pos:column="13">Printf<pos:position pos:line="13" pos:column="19"/></name></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="string" pos:line="13" pos:column="20">"Allow: 206\r\n"<pos:position pos:line="13" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="38"/></expr_stmt></block></then></if>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">buf<pos:position pos:line="14" pos:column="8"/></name><operator pos:line="14" pos:column="8">.<pos:position pos:line="14" pos:column="9"/></operator><name pos:line="14" pos:column="9">append<pos:position pos:line="14" pos:column="15"/></name></name><argument_list pos:line="14" pos:column="15">(<argument><expr><name><name pos:line="14" pos:column="16">ICAP<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">::<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">crlf<pos:position pos:line="14" pos:column="26"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="28">2<pos:position pos:line="14" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="31"/></expr_stmt>

    <comment type="line" pos:line="16" pos:column="5">// XXX: HttpRequest cannot fully parse ICAP Request-Line</comment>
    <decl_stmt><decl><type><name><name pos:line="17" pos:column="5">Http<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">::<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">StatusCode<pos:position pos:line="17" pos:column="21"/></name></name></type> <name pos:line="17" pos:column="22">reqStatus<pos:position pos:line="17" pos:column="31"/></name></decl>;<pos:position pos:line="17" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">Must<pos:position pos:line="18" pos:column="9"/></name><argument_list pos:line="18" pos:column="9">(<argument><expr><call><name><name pos:line="18" pos:column="10">icapRequest<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">-&gt;<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="23">parse<pos:position pos:line="18" pos:column="28"/></name></name><argument_list pos:line="18" pos:column="28">(<argument><expr><operator pos:line="18" pos:column="29">&amp;<pos:position pos:line="18" pos:column="34"/></operator><name pos:line="18" pos:column="30">buf<pos:position pos:line="18" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="18" pos:column="35">true<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="18" pos:column="41">&amp;<pos:position pos:line="18" pos:column="46"/></operator><name pos:line="18" pos:column="42">reqStatus<pos:position pos:line="18" pos:column="51"/></name></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call> <operator pos:line="18" pos:column="53">&gt;<pos:position pos:line="18" pos:column="57"/></operator> <literal type="number" pos:line="18" pos:column="55">0<pos:position pos:line="18" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="58"/></expr_stmt>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

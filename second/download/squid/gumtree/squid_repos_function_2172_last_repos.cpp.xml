<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2172_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name><name pos:line="2" pos:column="1">ConfigParser<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">UnQuote<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier> <name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">token<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="42">const<pos:position pos:line="2" pos:column="47"/></specifier> <name pos:line="2" pos:column="48">char<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier><modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">next<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="60"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">errorStr<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name pos:line="4" pos:column="28">NULL<pos:position pos:line="4" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">errorPos<pos:position pos:line="5" pos:column="25"/></name> <init pos:line="5" pos:column="26">= <expr><name pos:line="5" pos:column="28">NULL<pos:position pos:line="5" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">quoteChar<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><operator pos:line="6" pos:column="22">*<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">token<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">assert<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><name pos:line="7" pos:column="12">quoteChar<pos:position pos:line="7" pos:column="21"/></name> <operator pos:line="7" pos:column="22">==<pos:position pos:line="7" pos:column="24"/></operator> <literal type="char" pos:line="7" pos:column="25">'"'<pos:position pos:line="7" pos:column="28"/></literal> <operator pos:line="7" pos:column="29">||<pos:position pos:line="7" pos:column="31"/></operator> <name pos:line="7" pos:column="32">quoteChar<pos:position pos:line="7" pos:column="41"/></name> <operator pos:line="7" pos:column="42">==<pos:position pos:line="7" pos:column="44"/></operator> <literal type="char" pos:line="7" pos:column="45">'\''<pos:position pos:line="7" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">LOCAL_ARRAY<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="23">UnQuoted<pos:position pos:line="8" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="33">CONFIG_LINE_LIMIT<pos:position pos:line="8" pos:column="50"/></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="52"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">char<pos:position pos:line="9" pos:column="15"/></name>  <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">s<pos:position pos:line="9" pos:column="19"/></name> <init pos:line="9" pos:column="20">= <expr><name pos:line="9" pos:column="22">token<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">+<pos:position pos:line="9" pos:column="29"/></operator> <literal type="number" pos:line="9" pos:column="30">1<pos:position pos:line="9" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">d<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><name pos:line="10" pos:column="15">UnQuoted<pos:position pos:line="10" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <comment type="block" pos:line="11" pos:column="5">/* scan until the end of the quoted string, handling escape sequences*/</comment>
    <while pos:line="12" pos:column="5">while <condition pos:line="12" pos:column="11">(<expr><operator pos:line="12" pos:column="12">*<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">s<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">&amp;&amp;<pos:position pos:line="12" pos:column="25"/></operator> <operator pos:line="12" pos:column="18">*<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="19">s<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">!=<pos:position pos:line="12" pos:column="23"/></operator> <name pos:line="12" pos:column="24">quoteChar<pos:position pos:line="12" pos:column="33"/></name> <operator pos:line="12" pos:column="34">&amp;&amp;<pos:position pos:line="12" pos:column="44"/></operator> <operator pos:line="12" pos:column="37">!<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">errorStr<pos:position pos:line="12" pos:column="46"/></name> <operator pos:line="12" pos:column="47">&amp;&amp;<pos:position pos:line="12" pos:column="57"/></operator> <call pos:line="12" pos:column="50">(<name pos:line="12" pos:column="51">size_t<pos:position pos:line="12" pos:column="57"/></name>)<argument_list pos:line="12" pos:column="58">(<argument><expr><name pos:line="12" pos:column="59">d<pos:position pos:line="12" pos:column="60"/></name> <operator pos:line="12" pos:column="61">-<pos:position pos:line="12" pos:column="62"/></operator> <name pos:line="12" pos:column="63">UnQuoted<pos:position pos:line="12" pos:column="71"/></name></expr></argument>)<pos:position pos:line="12" pos:column="72"/></argument_list></call> <operator pos:line="12" pos:column="73">&lt;<pos:position pos:line="12" pos:column="77"/></operator> <sizeof pos:line="12" pos:column="75">sizeof<argument_list pos:line="12" pos:column="81">(<argument><expr><name pos:line="12" pos:column="82">UnQuoted<pos:position pos:line="12" pos:column="90"/></name></expr></argument>)<pos:position pos:line="12" pos:column="91"/></argument_list></sizeof></expr>)<pos:position pos:line="12" pos:column="92"/></condition> <block pos:line="12" pos:column="93">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">s<pos:position pos:line="13" pos:column="15"/></name> <operator pos:line="13" pos:column="16">==<pos:position pos:line="13" pos:column="18"/></operator> <literal type="char" pos:line="13" pos:column="19">'\\'<pos:position pos:line="13" pos:column="23"/></literal></expr>)<pos:position pos:line="13" pos:column="24"/></condition><then pos:line="13" pos:column="24"> <block pos:line="13" pos:column="25">{
            <expr_stmt><expr><name pos:line="14" pos:column="13">s<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">++<pos:position pos:line="14" pos:column="16"/></operator></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
            <switch pos:line="15" pos:column="13">switch <condition pos:line="15" pos:column="20">(<expr><operator pos:line="15" pos:column="21">*<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="22">s<pos:position pos:line="15" pos:column="23"/></name></expr>)<pos:position pos:line="15" pos:column="24"/></condition> <block pos:line="15" pos:column="25">{
            <case pos:line="16" pos:column="13">case <expr><literal type="char" pos:line="16" pos:column="18">'r'<pos:position pos:line="16" pos:column="21"/></literal></expr>:<pos:position pos:line="16" pos:column="22"/></case>
                <expr_stmt><expr><operator pos:line="17" pos:column="17">*<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">d<pos:position pos:line="17" pos:column="19"/></name> <operator pos:line="17" pos:column="20">=<pos:position pos:line="17" pos:column="21"/></operator> <literal type="char" pos:line="17" pos:column="22">'\r'<pos:position pos:line="17" pos:column="26"/></literal></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt>
                <break pos:line="18" pos:column="17">break;<pos:position pos:line="18" pos:column="23"/></break>
            <case pos:line="19" pos:column="13">case <expr><literal type="char" pos:line="19" pos:column="18">'n'<pos:position pos:line="19" pos:column="21"/></literal></expr>:<pos:position pos:line="19" pos:column="22"/></case>
                <expr_stmt><expr><operator pos:line="20" pos:column="17">*<pos:position pos:line="20" pos:column="18"/></operator><name pos:line="20" pos:column="18">d<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <literal type="char" pos:line="20" pos:column="22">'\n'<pos:position pos:line="20" pos:column="26"/></literal></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
                <break pos:line="21" pos:column="17">break;<pos:position pos:line="21" pos:column="23"/></break>
            <case pos:line="22" pos:column="13">case <expr><literal type="char" pos:line="22" pos:column="18">'t'<pos:position pos:line="22" pos:column="21"/></literal></expr>:<pos:position pos:line="22" pos:column="22"/></case>
                <expr_stmt><expr><operator pos:line="23" pos:column="17">*<pos:position pos:line="23" pos:column="18"/></operator><name pos:line="23" pos:column="18">d<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <literal type="char" pos:line="23" pos:column="22">'\t'<pos:position pos:line="23" pos:column="26"/></literal></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
                <break pos:line="24" pos:column="17">break;<pos:position pos:line="24" pos:column="23"/></break>
            <default pos:line="25" pos:column="13">default:<pos:position pos:line="25" pos:column="21"/></default>
                <if pos:line="26" pos:column="17">if <condition pos:line="26" pos:column="20">(<expr><call><name pos:line="26" pos:column="21">isalnum<pos:position pos:line="26" pos:column="28"/></name><argument_list pos:line="26" pos:column="28">(<argument><expr><operator pos:line="26" pos:column="29">*<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="30">s<pos:position pos:line="26" pos:column="31"/></name></expr></argument>)<pos:position pos:line="26" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="33"/></condition><then pos:line="26" pos:column="33"> <block pos:line="26" pos:column="34">{
                    <expr_stmt><expr><name pos:line="27" pos:column="21">errorStr<pos:position pos:line="27" pos:column="29"/></name> <operator pos:line="27" pos:column="30">=<pos:position pos:line="27" pos:column="31"/></operator> <literal type="string" pos:line="27" pos:column="32">"Unsupported escape sequence"<pos:position pos:line="27" pos:column="61"/></literal></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="28" pos:column="21">errorPos<pos:position pos:line="28" pos:column="29"/></name> <operator pos:line="28" pos:column="30">=<pos:position pos:line="28" pos:column="31"/></operator> <name pos:line="28" pos:column="32">s<pos:position pos:line="28" pos:column="33"/></name></expr>;<pos:position pos:line="28" pos:column="34"/></expr_stmt>
                }<pos:position pos:line="29" pos:column="18"/></block></then></if>
                <expr_stmt><expr><operator pos:line="30" pos:column="17">*<pos:position pos:line="30" pos:column="18"/></operator><name pos:line="30" pos:column="18">d<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">=<pos:position pos:line="30" pos:column="21"/></operator> <operator pos:line="30" pos:column="22">*<pos:position pos:line="30" pos:column="23"/></operator><name pos:line="30" pos:column="23">s<pos:position pos:line="30" pos:column="24"/></name></expr>;<pos:position pos:line="30" pos:column="25"/></expr_stmt>
                <break pos:line="31" pos:column="17">break;<pos:position pos:line="31" pos:column="23"/></break>
            }<pos:position pos:line="32" pos:column="14"/></block></switch>
<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="33" pos:column="5">0<pos:position pos:line="33" pos:column="6"/></literal></expr></cpp:if>
        } else if (*s == '$' &amp;&amp; quoteChar == '"') {
            errorStr = "Unsupported cfg macro";
            errorPos = s;
<cpp:endif pos:line="37" pos:column="1">#<cpp:directive pos:line="37" pos:column="2">endif<pos:position pos:line="37" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">if<pos:position pos:line="38" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="38" pos:column="5">0<pos:position pos:line="38" pos:column="6"/></literal></expr></cpp:if>
        } else if (*s == '%' &amp;&amp; quoteChar == '"' &amp;&amp; (!AllowMacros_ )) {
            errorStr = "Macros are not supported here";
            errorPos = s;
<cpp:endif pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">endif<pos:position pos:line="42" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="43" pos:column="10"/></block></then> <else pos:line="43" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><operator pos:line="44" pos:column="13">*<pos:position pos:line="44" pos:column="14"/></operator><name pos:line="44" pos:column="14">d<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">=<pos:position pos:line="44" pos:column="17"/></operator> <operator pos:line="44" pos:column="18">*<pos:position pos:line="44" pos:column="19"/></operator><name pos:line="44" pos:column="19">s<pos:position pos:line="44" pos:column="20"/></name></expr>;<pos:position pos:line="44" pos:column="21"/></expr_stmt></block></else></if>
        <expr_stmt><expr><operator pos:line="45" pos:column="9">++<pos:position pos:line="45" pos:column="11"/></operator><name pos:line="45" pos:column="11">s<pos:position pos:line="45" pos:column="12"/></name></expr>;<pos:position pos:line="45" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="46" pos:column="9">++<pos:position pos:line="46" pos:column="11"/></operator><name pos:line="46" pos:column="11">d<pos:position pos:line="46" pos:column="12"/></name></expr>;<pos:position pos:line="46" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="47" pos:column="6"/></block></while>

    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">*<pos:position pos:line="49" pos:column="10"/></operator><name pos:line="49" pos:column="10">s<pos:position pos:line="49" pos:column="11"/></name> <operator pos:line="49" pos:column="12">!=<pos:position pos:line="49" pos:column="14"/></operator> <name pos:line="49" pos:column="15">quoteChar<pos:position pos:line="49" pos:column="24"/></name> <operator pos:line="49" pos:column="25">&amp;&amp;<pos:position pos:line="49" pos:column="35"/></operator> <operator pos:line="49" pos:column="28">!<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="29">errorStr<pos:position pos:line="49" pos:column="37"/></name></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38"> <block pos:line="49" pos:column="39">{
        <expr_stmt><expr><name pos:line="50" pos:column="9">errorStr<pos:position pos:line="50" pos:column="17"/></name> <operator pos:line="50" pos:column="18">=<pos:position pos:line="50" pos:column="19"/></operator> <literal type="string" pos:line="50" pos:column="20">"missing quote char at the end of quoted string"<pos:position pos:line="50" pos:column="68"/></literal></expr>;<pos:position pos:line="50" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">errorPos<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <name pos:line="51" pos:column="20">s<pos:position pos:line="51" pos:column="21"/></name> <operator pos:line="51" pos:column="22">-<pos:position pos:line="51" pos:column="23"/></operator> <literal type="number" pos:line="51" pos:column="24">1<pos:position pos:line="51" pos:column="25"/></literal></expr>;<pos:position pos:line="51" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
    <comment type="line" pos:line="53" pos:column="5">// The end of token</comment>
    <expr_stmt><expr><operator pos:line="54" pos:column="5">*<pos:position pos:line="54" pos:column="6"/></operator><name pos:line="54" pos:column="6">d<pos:position pos:line="54" pos:column="7"/></name> <operator pos:line="54" pos:column="8">=<pos:position pos:line="54" pos:column="9"/></operator> <literal type="char" pos:line="54" pos:column="10">'\0'<pos:position pos:line="54" pos:column="14"/></literal></expr>;<pos:position pos:line="54" pos:column="15"/></expr_stmt>

    <comment type="line" pos:line="56" pos:column="5">// We are expecting a separator after quoted string, space or one of "()#"</comment>
    <if pos:line="57" pos:column="5">if <condition pos:line="57" pos:column="8">(<expr><operator pos:line="57" pos:column="9">*<pos:position pos:line="57" pos:column="10"/></operator><operator pos:line="57" pos:column="10">(<pos:position pos:line="57" pos:column="11"/></operator><name pos:line="57" pos:column="11">s<pos:position pos:line="57" pos:column="12"/></name> <operator pos:line="57" pos:column="13">+<pos:position pos:line="57" pos:column="14"/></operator> <literal type="number" pos:line="57" pos:column="15">1<pos:position pos:line="57" pos:column="16"/></literal><operator pos:line="57" pos:column="16">)<pos:position pos:line="57" pos:column="17"/></operator> <operator pos:line="57" pos:column="18">!=<pos:position pos:line="57" pos:column="20"/></operator> <literal type="char" pos:line="57" pos:column="21">'\0'<pos:position pos:line="57" pos:column="25"/></literal> <operator pos:line="57" pos:column="26">&amp;&amp;<pos:position pos:line="57" pos:column="36"/></operator> <operator pos:line="57" pos:column="29">!<pos:position pos:line="57" pos:column="30"/></operator><call><name pos:line="57" pos:column="30">strchr<pos:position pos:line="57" pos:column="36"/></name><argument_list pos:line="57" pos:column="36">(<argument><expr><name pos:line="57" pos:column="37">w_space<pos:position pos:line="57" pos:column="44"/></name> <literal type="string" pos:line="57" pos:column="45">"()#"<pos:position pos:line="57" pos:column="50"/></literal></expr></argument>, <argument><expr><operator pos:line="57" pos:column="52">*<pos:position pos:line="57" pos:column="53"/></operator><operator pos:line="57" pos:column="53">(<pos:position pos:line="57" pos:column="54"/></operator><name pos:line="57" pos:column="54">s<pos:position pos:line="57" pos:column="55"/></name> <operator pos:line="57" pos:column="56">+<pos:position pos:line="57" pos:column="57"/></operator> <literal type="number" pos:line="57" pos:column="58">1<pos:position pos:line="57" pos:column="59"/></literal><operator pos:line="57" pos:column="59">)<pos:position pos:line="57" pos:column="60"/></operator></expr></argument>)<pos:position pos:line="57" pos:column="61"/></argument_list></call> <operator pos:line="57" pos:column="62">&amp;&amp;<pos:position pos:line="57" pos:column="72"/></operator> <operator pos:line="57" pos:column="65">!<pos:position pos:line="57" pos:column="66"/></operator><name pos:line="57" pos:column="66">errorStr<pos:position pos:line="57" pos:column="74"/></name></expr>)<pos:position pos:line="57" pos:column="75"/></condition><then pos:line="57" pos:column="75"> <block pos:line="57" pos:column="76">{
        <expr_stmt><expr><name pos:line="58" pos:column="9">errorStr<pos:position pos:line="58" pos:column="17"/></name> <operator pos:line="58" pos:column="18">=<pos:position pos:line="58" pos:column="19"/></operator> <literal type="string" pos:line="58" pos:column="20">"Expecting space after the end of quoted token"<pos:position pos:line="58" pos:column="67"/></literal></expr>;<pos:position pos:line="58" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><name pos:line="59" pos:column="9">errorPos<pos:position pos:line="59" pos:column="17"/></name> <operator pos:line="59" pos:column="18">=<pos:position pos:line="59" pos:column="19"/></operator> <name pos:line="59" pos:column="20">token<pos:position pos:line="59" pos:column="25"/></name></expr>;<pos:position pos:line="59" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <if pos:line="62" pos:column="5">if <condition pos:line="62" pos:column="8">(<expr><name pos:line="62" pos:column="9">errorStr<pos:position pos:line="62" pos:column="17"/></name></expr>)<pos:position pos:line="62" pos:column="18"/></condition><then pos:line="62" pos:column="18"> <block pos:line="62" pos:column="19">{
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">(<expr><name pos:line="63" pos:column="13">PreviewMode_<pos:position pos:line="63" pos:column="25"/></name></expr>)<pos:position pos:line="63" pos:column="26"/></condition><then pos:line="63" pos:column="26">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="13">xstrncpy<pos:position pos:line="64" pos:column="21"/></name><argument_list pos:line="64" pos:column="21">(<argument><expr><name pos:line="64" pos:column="22">UnQuoted<pos:position pos:line="64" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="32">SQUID_ERROR_TOKEN<pos:position pos:line="64" pos:column="49"/></name></expr></argument>, <argument><expr><sizeof pos:line="64" pos:column="51">sizeof<argument_list pos:line="64" pos:column="57">(<argument><expr><name pos:line="64" pos:column="58">UnQuoted<pos:position pos:line="64" pos:column="66"/></name></expr></argument>)<pos:position pos:line="64" pos:column="67"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="64" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="69"/></expr_stmt></block></then>
        <else pos:line="65" pos:column="9">else <block pos:line="65" pos:column="14">{
            <expr_stmt><expr><call><name pos:line="66" pos:column="13">debugs<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><literal type="number" pos:line="66" pos:column="20">3<pos:position pos:line="66" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="66" pos:column="23">DBG_CRITICAL<pos:position pos:line="66" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="37">"FATAL: "<pos:position pos:line="66" pos:column="46"/></literal> <operator pos:line="66" pos:column="47">&lt;&lt;<pos:position pos:line="66" pos:column="55"/></operator> <name pos:line="66" pos:column="50">errorStr<pos:position pos:line="66" pos:column="58"/></name> <operator pos:line="66" pos:column="59">&lt;&lt;<pos:position pos:line="66" pos:column="67"/></operator> <literal type="string" pos:line="66" pos:column="62">": "<pos:position pos:line="66" pos:column="66"/></literal> <operator pos:line="66" pos:column="67">&lt;&lt;<pos:position pos:line="66" pos:column="75"/></operator> <name pos:line="66" pos:column="70">errorPos<pos:position pos:line="66" pos:column="78"/></name></expr></argument>)<pos:position pos:line="66" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="80"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="67" pos:column="13">self_destruct<pos:position pos:line="67" pos:column="26"/></name><argument_list pos:line="67" pos:column="26">()<pos:position pos:line="67" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="68" pos:column="10"/></block></else></if>
    }<pos:position pos:line="69" pos:column="6"/></block></then></if>

    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">next<pos:position pos:line="71" pos:column="13"/></name></expr>)<pos:position pos:line="71" pos:column="14"/></condition><then pos:line="71" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><operator pos:line="72" pos:column="9">*<pos:position pos:line="72" pos:column="10"/></operator><name pos:line="72" pos:column="10">next<pos:position pos:line="72" pos:column="14"/></name> <operator pos:line="72" pos:column="15">=<pos:position pos:line="72" pos:column="16"/></operator> <name pos:line="72" pos:column="17">s<pos:position pos:line="72" pos:column="18"/></name> <operator pos:line="72" pos:column="19">+<pos:position pos:line="72" pos:column="20"/></operator> <literal type="number" pos:line="72" pos:column="21">1<pos:position pos:line="72" pos:column="22"/></literal></expr>;<pos:position pos:line="72" pos:column="23"/></expr_stmt></block></then></if>
    <return pos:line="73" pos:column="5">return <expr><name pos:line="73" pos:column="12">UnQuoted<pos:position pos:line="73" pos:column="20"/></name></expr>;<pos:position pos:line="73" pos:column="21"/></return>
}<pos:position pos:line="74" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2731_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Ipc<pos:position pos:line="1" pos:column="4"/></name><operator pos:line="1" pos:column="4">::<pos:position pos:line="1" pos:column="6"/></operator><name pos:line="1" pos:column="6">StoreMap<pos:position pos:line="1" pos:column="14"/></name><operator pos:line="1" pos:column="14">::<pos:position pos:line="1" pos:column="16"/></operator><name pos:line="1" pos:column="16">Slice<pos:position pos:line="1" pos:column="21"/></name></name> <modifier pos:line="1" pos:column="22">&amp;<pos:position pos:line="1" pos:column="27"/></modifier></type>
<name><name pos:line="2" pos:column="1">MemStore<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">nextAppendableSlice<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier> <name pos:line="2" pos:column="37">sfileno<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">fileNo<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">sfileno<pos:position pos:line="2" pos:column="60"/></name> <modifier pos:line="2" pos:column="61">&amp;<pos:position pos:line="2" pos:column="66"/></modifier></type><name pos:line="2" pos:column="62">sliceOffset<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// allocate the very first slot for the entry if needed</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">sliceOffset<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&lt;<pos:position pos:line="5" pos:column="25"/></operator> <literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25"> <block pos:line="5" pos:column="26">{
        <decl_stmt><decl><type><name><name pos:line="6" pos:column="9">Ipc<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">::<pos:position pos:line="6" pos:column="14"/></operator><name pos:line="6" pos:column="14">StoreMapAnchor<pos:position pos:line="6" pos:column="28"/></name></name> <modifier pos:line="6" pos:column="29">&amp;<pos:position pos:line="6" pos:column="34"/></modifier></type><name pos:line="6" pos:column="30">anchor<pos:position pos:line="6" pos:column="36"/></name> <init pos:line="6" pos:column="37">= <expr><call><name><name pos:line="6" pos:column="39">map<pos:position pos:line="6" pos:column="42"/></name><operator pos:line="6" pos:column="42">-&gt;<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="44">writeableEntry<pos:position pos:line="6" pos:column="58"/></name></name><argument_list pos:line="6" pos:column="58">(<argument><expr><name pos:line="6" pos:column="59">fileNo<pos:position pos:line="6" pos:column="65"/></name></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="67"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">Must<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name><name pos:line="7" pos:column="14">anchor<pos:position pos:line="7" pos:column="20"/></name><operator pos:line="7" pos:column="20">.<pos:position pos:line="7" pos:column="21"/></operator><name pos:line="7" pos:column="21">start<pos:position pos:line="7" pos:column="26"/></name></name> <operator pos:line="7" pos:column="27">&lt;<pos:position pos:line="7" pos:column="31"/></operator> <literal type="number" pos:line="7" pos:column="29">0<pos:position pos:line="7" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="32"/></expr_stmt>
        <decl_stmt><decl><type><name><name pos:line="8" pos:column="9">Ipc<pos:position pos:line="8" pos:column="12"/></name><operator pos:line="8" pos:column="12">::<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">Mem<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">::<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">PageId<pos:position pos:line="8" pos:column="25"/></name></name></type> <name pos:line="8" pos:column="26">page<pos:position pos:line="8" pos:column="30"/></name></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">sliceOffset<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="23">reserveSapForWriting<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">(<argument><expr><name pos:line="9" pos:column="44">page<pos:position pos:line="9" pos:column="48"/></name></expr></argument>)<pos:position pos:line="9" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="50"/></expr_stmt> <comment type="line" pos:line="9" pos:column="51">// throws</comment>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">extras<pos:position pos:line="10" pos:column="15"/></name><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><name pos:line="10" pos:column="17">items<pos:position pos:line="10" pos:column="22"/></name><index pos:line="10" pos:column="22">[<expr><name pos:line="10" pos:column="23">sliceOffset<pos:position pos:line="10" pos:column="34"/></name></expr>]<pos:position pos:line="10" pos:column="35"/></index></name><operator pos:line="10" pos:column="35">.<pos:position pos:line="10" pos:column="36"/></operator><name pos:line="10" pos:column="36">page<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">=<pos:position pos:line="10" pos:column="42"/></operator> <name pos:line="10" pos:column="43">page<pos:position pos:line="10" pos:column="47"/></name></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">anchor<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">.<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">start<pos:position pos:line="11" pos:column="21"/></name></name> <operator pos:line="11" pos:column="22">=<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">sliceOffset<pos:position pos:line="11" pos:column="35"/></name></expr>;<pos:position pos:line="11" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">size_t<pos:position pos:line="14" pos:column="17"/></name></type> <name pos:line="14" pos:column="18">sliceCapacity<pos:position pos:line="14" pos:column="31"/></name> <init pos:line="14" pos:column="32">= <expr><call><name><name pos:line="14" pos:column="34">Ipc<pos:position pos:line="14" pos:column="37"/></name><operator pos:line="14" pos:column="37">::<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">Mem<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">::<pos:position pos:line="14" pos:column="44"/></operator><name pos:line="14" pos:column="44">PageSize<pos:position pos:line="14" pos:column="52"/></name></name><argument_list pos:line="14" pos:column="52">()<pos:position pos:line="14" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="14" pos:column="55"/></decl_stmt>
    <do pos:line="15" pos:column="5">do <block pos:line="15" pos:column="8">{
        <decl_stmt><decl><type><name><name pos:line="16" pos:column="9">Ipc<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">::<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">StoreMap<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">::<pos:position pos:line="16" pos:column="24"/></operator><name pos:line="16" pos:column="24">Slice<pos:position pos:line="16" pos:column="29"/></name></name> <modifier pos:line="16" pos:column="30">&amp;<pos:position pos:line="16" pos:column="35"/></modifier></type><name pos:line="16" pos:column="31">slice<pos:position pos:line="16" pos:column="36"/></name> <init pos:line="16" pos:column="37">= <expr><call><name><name pos:line="16" pos:column="39">map<pos:position pos:line="16" pos:column="42"/></name><operator pos:line="16" pos:column="42">-&gt;<pos:position pos:line="16" pos:column="47"/></operator><name pos:line="16" pos:column="44">writeableSlice<pos:position pos:line="16" pos:column="58"/></name></name><argument_list pos:line="16" pos:column="58">(<argument><expr><name pos:line="16" pos:column="59">fileNo<pos:position pos:line="16" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="67">sliceOffset<pos:position pos:line="16" pos:column="78"/></name></expr></argument>)<pos:position pos:line="16" pos:column="79"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="80"/></decl_stmt>

        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">slice<pos:position pos:line="18" pos:column="18"/></name><operator pos:line="18" pos:column="18">.<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="19">size<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">&gt;=<pos:position pos:line="18" pos:column="29"/></operator> <name pos:line="18" pos:column="27">sliceCapacity<pos:position pos:line="18" pos:column="40"/></name></expr>)<pos:position pos:line="18" pos:column="41"/></condition><then pos:line="18" pos:column="41"> <block pos:line="18" pos:column="42">{
            <if pos:line="19" pos:column="13">if <condition pos:line="19" pos:column="16">(<expr><name><name pos:line="19" pos:column="17">slice<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">.<pos:position pos:line="19" pos:column="23"/></operator><name pos:line="19" pos:column="23">next<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">&gt;=<pos:position pos:line="19" pos:column="33"/></operator> <literal type="number" pos:line="19" pos:column="31">0<pos:position pos:line="19" pos:column="32"/></literal></expr>)<pos:position pos:line="19" pos:column="33"/></condition><then pos:line="19" pos:column="33"> <block pos:line="19" pos:column="34">{
                <expr_stmt><expr><name pos:line="20" pos:column="17">sliceOffset<pos:position pos:line="20" pos:column="28"/></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <name><name pos:line="20" pos:column="31">slice<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">.<pos:position pos:line="20" pos:column="37"/></operator><name pos:line="20" pos:column="37">next<pos:position pos:line="20" pos:column="41"/></name></name></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>
                <continue pos:line="21" pos:column="17">continue;<pos:position pos:line="21" pos:column="26"/></continue>
            }<pos:position pos:line="22" pos:column="14"/></block></then></if>

            <decl_stmt><decl><type><name><name pos:line="24" pos:column="13">Ipc<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">::<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">Mem<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">::<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">PageId<pos:position pos:line="24" pos:column="29"/></name></name></type> <name pos:line="24" pos:column="30">page<pos:position pos:line="24" pos:column="34"/></name></decl>;<pos:position pos:line="24" pos:column="35"/></decl_stmt>
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">slice<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">next<pos:position pos:line="25" pos:column="23"/></name></name> <operator pos:line="25" pos:column="24">=<pos:position pos:line="25" pos:column="25"/></operator> <name pos:line="25" pos:column="26">sliceOffset<pos:position pos:line="25" pos:column="37"/></name> <operator pos:line="25" pos:column="38">=<pos:position pos:line="25" pos:column="39"/></operator> <call><name pos:line="25" pos:column="40">reserveSapForWriting<pos:position pos:line="25" pos:column="60"/></name><argument_list pos:line="25" pos:column="60">(<argument><expr><name pos:line="25" pos:column="61">page<pos:position pos:line="25" pos:column="65"/></name></expr></argument>)<pos:position pos:line="25" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="67"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="26" pos:column="13">extras<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">items<pos:position pos:line="26" pos:column="26"/></name><index pos:line="26" pos:column="26">[<expr><name pos:line="26" pos:column="27">sliceOffset<pos:position pos:line="26" pos:column="38"/></name></expr>]<pos:position pos:line="26" pos:column="39"/></index></name><operator pos:line="26" pos:column="39">.<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="40">page<pos:position pos:line="26" pos:column="44"/></name> <operator pos:line="26" pos:column="45">=<pos:position pos:line="26" pos:column="46"/></operator> <name pos:line="26" pos:column="47">page<pos:position pos:line="26" pos:column="51"/></name></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">debugs<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="number" pos:line="27" pos:column="20">20<pos:position pos:line="27" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="24">7<pos:position pos:line="27" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="27">"entry "<pos:position pos:line="27" pos:column="35"/></literal> <operator pos:line="27" pos:column="36">&lt;&lt;<pos:position pos:line="27" pos:column="44"/></operator> <name pos:line="27" pos:column="39">fileNo<pos:position pos:line="27" pos:column="45"/></name> <operator pos:line="27" pos:column="46">&lt;&lt;<pos:position pos:line="27" pos:column="54"/></operator> <literal type="string" pos:line="27" pos:column="49">" new slice: "<pos:position pos:line="27" pos:column="63"/></literal> <operator pos:line="27" pos:column="64">&lt;&lt;<pos:position pos:line="27" pos:column="72"/></operator> <name pos:line="27" pos:column="67">sliceOffset<pos:position pos:line="27" pos:column="78"/></name></expr></argument>)<pos:position pos:line="27" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="80"/></expr_stmt>
            <continue pos:line="28" pos:column="13">continue;<pos:position pos:line="28" pos:column="22"/></continue> <comment type="line" pos:line="28" pos:column="23">// to get and return the slice at the new sliceOffset</comment>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>

        <return pos:line="31" pos:column="9">return <expr><name pos:line="31" pos:column="16">slice<pos:position pos:line="31" pos:column="21"/></name></expr>;<pos:position pos:line="31" pos:column="22"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block> while <condition pos:line="32" pos:column="13">(<expr><literal type="boolean" pos:line="32" pos:column="14">true<pos:position pos:line="32" pos:column="18"/></literal></expr>)<pos:position pos:line="32" pos:column="19"/></condition>;<pos:position pos:line="32" pos:column="20"/></do>
    <comment type="block" pos:line="33" pos:column="5">/* not reached */</comment>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2641_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">DescriptorSet<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">add<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">fd<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">0<pos:position pos:line="4" pos:column="13"/></literal> <operator pos:line="4" pos:column="14">&lt;=<pos:position pos:line="4" pos:column="19"/></operator> <name pos:line="4" pos:column="17">fd<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">&amp;&amp;<pos:position pos:line="4" pos:column="30"/></operator> <name pos:line="4" pos:column="23">fd<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">&lt;<pos:position pos:line="4" pos:column="30"/></operator> <name pos:line="4" pos:column="28">capacity_<pos:position pos:line="4" pos:column="37"/></name></expr></argument>)<pos:position pos:line="4" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="39"/></expr_stmt> <comment type="line" pos:line="4" pos:column="40">// \todo: replace with Must()</comment>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">has<pos:position pos:line="6" pos:column="12"/></name><argument_list pos:line="6" pos:column="12">(<argument><expr><name pos:line="6" pos:column="13">fd<pos:position pos:line="6" pos:column="15"/></name></expr></argument>)<pos:position pos:line="6" pos:column="16"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="17"/></condition><then pos:line="6" pos:column="17">
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><literal type="boolean" pos:line="7" pos:column="16">false<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></return></block></then></if> <comment type="line" pos:line="7" pos:column="23">// already have it</comment>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">size_<pos:position pos:line="9" pos:column="17"/></name> <operator pos:line="9" pos:column="18">&lt;<pos:position pos:line="9" pos:column="22"/></operator> <name pos:line="9" pos:column="20">capacity_<pos:position pos:line="9" pos:column="29"/></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt> <comment type="line" pos:line="9" pos:column="32">// \todo: replace with Must()</comment>
    <decl_stmt><decl><type><specifier pos:line="10" pos:column="5">const<pos:position pos:line="10" pos:column="10"/></specifier> <name pos:line="10" pos:column="11">int<pos:position pos:line="10" pos:column="14"/></name></type> <name pos:line="10" pos:column="15">pos<pos:position pos:line="10" pos:column="18"/></name> <init pos:line="10" pos:column="19">= <expr><name pos:line="10" pos:column="21">size_<pos:position pos:line="10" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="11" pos:column="5">++<pos:position pos:line="11" pos:column="7"/></operator><name pos:line="11" pos:column="7">size_<pos:position pos:line="11" pos:column="12"/></name></expr>;<pos:position pos:line="11" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">index_<pos:position pos:line="12" pos:column="11"/></name><index pos:line="12" pos:column="11">[<expr><name pos:line="12" pos:column="12">fd<pos:position pos:line="12" pos:column="14"/></name></expr>]<pos:position pos:line="12" pos:column="15"/></index></name> <operator pos:line="12" pos:column="16">=<pos:position pos:line="12" pos:column="17"/></operator> <name pos:line="12" pos:column="18">pos<pos:position pos:line="12" pos:column="21"/></name></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">descriptors_<pos:position pos:line="13" pos:column="17"/></name><index pos:line="13" pos:column="17">[<expr><name pos:line="13" pos:column="18">pos<pos:position pos:line="13" pos:column="21"/></name></expr>]<pos:position pos:line="13" pos:column="22"/></index></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <name pos:line="13" pos:column="25">fd<pos:position pos:line="13" pos:column="27"/></name></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
    <return pos:line="14" pos:column="5">return <expr><literal type="boolean" pos:line="14" pos:column="12">true<pos:position pos:line="14" pos:column="16"/></literal></expr>;<pos:position pos:line="14" pos:column="17"/></return> <comment type="line" pos:line="14" pos:column="18">// really added</comment>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3233_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemStore<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">init<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">()<pos:position pos:line="2" pos:column="17"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">int64_t<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">entryLimit<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><call><name pos:line="4" pos:column="32">EntryLimit<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">()<pos:position pos:line="4" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">entryLimit<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">&lt;=<pos:position pos:line="5" pos:column="25"/></operator> <literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr>)<pos:position pos:line="5" pos:column="25"/></condition><then pos:line="5" pos:column="25">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if> <comment type="line" pos:line="6" pos:column="17">// no memory cache configured or a misconfiguration</comment>

    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">int64_t<pos:position pos:line="8" pos:column="18"/></name></type> <name pos:line="8" pos:column="19">diskMaxSize<pos:position pos:line="8" pos:column="30"/></name> <init pos:line="8" pos:column="31">= <expr><call><name><name pos:line="8" pos:column="33">Store<pos:position pos:line="8" pos:column="38"/></name><operator pos:line="8" pos:column="38">::<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="40">Root<pos:position pos:line="8" pos:column="44"/></name></name><argument_list pos:line="8" pos:column="44">()<pos:position pos:line="8" pos:column="46"/></argument_list></call><operator pos:line="8" pos:column="46">.<pos:position pos:line="8" pos:column="47"/></operator><call><name pos:line="8" pos:column="47">maxObjectSize<pos:position pos:line="8" pos:column="60"/></name><argument_list pos:line="8" pos:column="60">()<pos:position pos:line="8" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="9" pos:column="5">const<pos:position pos:line="9" pos:column="10"/></specifier> <name pos:line="9" pos:column="11">int64_t<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">memMaxSize<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><call><name pos:line="9" pos:column="32">maxObjectSize<pos:position pos:line="9" pos:column="45"/></name><argument_list pos:line="9" pos:column="45">()<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="48"/></decl_stmt>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">diskMaxSize<pos:position pos:line="10" pos:column="20"/></name> <operator pos:line="10" pos:column="21">==<pos:position pos:line="10" pos:column="23"/></operator> <operator pos:line="10" pos:column="24">-<pos:position pos:line="10" pos:column="25"/></operator><literal type="number" pos:line="10" pos:column="25">1<pos:position pos:line="10" pos:column="26"/></literal></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27"> <block pos:line="10" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">20<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">DBG_IMPORTANT<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"WARNING: disk-cache maximum object size "<pos:position pos:line="11" pos:column="77"/></literal>
               <literal type="string" pos:line="12" pos:column="16">"is unlimited but mem-cache maximum object size is "<pos:position pos:line="12" pos:column="68"/></literal> <operator pos:line="12" pos:column="69">&lt;&lt;<pos:position pos:line="12" pos:column="77"/></operator>
               <name pos:line="13" pos:column="16">memMaxSize<pos:position pos:line="13" pos:column="26"/></name> <operator pos:line="13" pos:column="27">/<pos:position pos:line="13" pos:column="28"/></operator> <literal type="number" pos:line="13" pos:column="29">1024.0<pos:position pos:line="13" pos:column="35"/></literal> <operator pos:line="13" pos:column="36">&lt;&lt;<pos:position pos:line="13" pos:column="44"/></operator> <literal type="string" pos:line="13" pos:column="39">" KB"<pos:position pos:line="13" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then> <elseif pos:line="14" pos:column="7">else <if pos:line="14" pos:column="12">if <condition pos:line="14" pos:column="15">(<expr><name pos:line="14" pos:column="16">diskMaxSize<pos:position pos:line="14" pos:column="27"/></name> <operator pos:line="14" pos:column="28">&gt;<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="30">memMaxSize<pos:position pos:line="14" pos:column="40"/></name></expr>)<pos:position pos:line="14" pos:column="41"/></condition><then pos:line="14" pos:column="41"> <block pos:line="14" pos:column="42">{
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">20<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="20">DBG_IMPORTANT<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"WARNING: disk-cache maximum object size "<pos:position pos:line="15" pos:column="77"/></literal>
               <literal type="string" pos:line="16" pos:column="16">"is too large for mem-cache: "<pos:position pos:line="16" pos:column="46"/></literal> <operator pos:line="16" pos:column="47">&lt;&lt;<pos:position pos:line="16" pos:column="55"/></operator>
               <name pos:line="17" pos:column="16">diskMaxSize<pos:position pos:line="17" pos:column="27"/></name> <operator pos:line="17" pos:column="28">/<pos:position pos:line="17" pos:column="29"/></operator> <literal type="number" pos:line="17" pos:column="30">1024.0<pos:position pos:line="17" pos:column="36"/></literal> <operator pos:line="17" pos:column="37">&lt;&lt;<pos:position pos:line="17" pos:column="45"/></operator> <literal type="string" pos:line="17" pos:column="40">" KB &gt; "<pos:position pos:line="17" pos:column="51"/></literal> <operator pos:line="17" pos:column="49">&lt;&lt;<pos:position pos:line="17" pos:column="57"/></operator>
               <name pos:line="18" pos:column="16">memMaxSize<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">/<pos:position pos:line="18" pos:column="28"/></operator> <literal type="number" pos:line="18" pos:column="29">1024.0<pos:position pos:line="18" pos:column="35"/></literal> <operator pos:line="18" pos:column="36">&lt;&lt;<pos:position pos:line="18" pos:column="44"/></operator> <literal type="string" pos:line="18" pos:column="39">" KB"<pos:position pos:line="18" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="21" pos:column="5">map<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <operator pos:line="21" pos:column="11">new<pos:position pos:line="21" pos:column="14"/></operator> <call><name pos:line="21" pos:column="15">MemStoreMap<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">ShmLabel<pos:position pos:line="21" pos:column="35"/></name></expr></argument>)<pos:position pos:line="21" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">map<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">-&gt;<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="10">cleaner<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <name pos:line="22" pos:column="20">this<pos:position pos:line="22" pos:column="24"/></name></expr>;<pos:position pos:line="22" pos:column="25"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

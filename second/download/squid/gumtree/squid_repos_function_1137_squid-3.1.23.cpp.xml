<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1137_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_http_port_option<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">http_port_list<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type> <name pos:line="2" pos:column="41">s<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">token<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">strncmp<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">token<pos:position pos:line="4" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="24">"defaultsite="<pos:position pos:line="4" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="40">12<pos:position pos:line="4" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="43"/></argument_list></call> <operator pos:line="4" pos:column="44">==<pos:position pos:line="4" pos:column="46"/></operator> <literal type="number" pos:line="4" pos:column="47">0<pos:position pos:line="4" pos:column="48"/></literal></expr>)<pos:position pos:line="4" pos:column="49"/></condition><then pos:line="4" pos:column="49"> <block pos:line="4" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">safe_free<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name><name pos:line="5" pos:column="19">s<pos:position pos:line="5" pos:column="20"/></name><operator pos:line="5" pos:column="20">-&gt;<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="22">defaultsite<pos:position pos:line="5" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">s<pos:position pos:line="6" pos:column="10"/></name><operator pos:line="6" pos:column="10">-&gt;<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="12">defaultsite<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <call><name pos:line="6" pos:column="26">xstrdup<pos:position pos:line="6" pos:column="33"/></name><argument_list pos:line="6" pos:column="33">(<argument><expr><name pos:line="6" pos:column="34">token<pos:position pos:line="6" pos:column="39"/></name> <operator pos:line="6" pos:column="40">+<pos:position pos:line="6" pos:column="41"/></operator> <literal type="number" pos:line="6" pos:column="42">12<pos:position pos:line="6" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">s<pos:position pos:line="7" pos:column="10"/></name><operator pos:line="7" pos:column="10">-&gt;<pos:position pos:line="7" pos:column="15"/></operator><name pos:line="7" pos:column="12">accel<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <literal type="number" pos:line="7" pos:column="20">1<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then> <elseif pos:line="8" pos:column="7">else <if pos:line="8" pos:column="12">if <condition pos:line="8" pos:column="15">(<expr><call><name pos:line="8" pos:column="16">strncmp<pos:position pos:line="8" pos:column="23"/></name><argument_list pos:line="8" pos:column="23">(<argument><expr><name pos:line="8" pos:column="24">token<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="31">"name="<pos:position pos:line="8" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="40">5<pos:position pos:line="8" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="42"/></argument_list></call> <operator pos:line="8" pos:column="43">==<pos:position pos:line="8" pos:column="45"/></operator> <literal type="number" pos:line="8" pos:column="46">0<pos:position pos:line="8" pos:column="47"/></literal></expr>)<pos:position pos:line="8" pos:column="48"/></condition><then pos:line="8" pos:column="48"> <block pos:line="8" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">safe_free<pos:position pos:line="9" pos:column="18"/></name><argument_list pos:line="9" pos:column="18">(<argument><expr><name><name pos:line="9" pos:column="19">s<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">name<pos:position pos:line="9" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">s<pos:position pos:line="10" pos:column="10"/></name><operator pos:line="10" pos:column="10">-&gt;<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="12">name<pos:position pos:line="10" pos:column="16"/></name></name> <operator pos:line="10" pos:column="17">=<pos:position pos:line="10" pos:column="18"/></operator> <call><name pos:line="10" pos:column="19">xstrdup<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><name pos:line="10" pos:column="27">token<pos:position pos:line="10" pos:column="32"/></name> <operator pos:line="10" pos:column="33">+<pos:position pos:line="10" pos:column="34"/></operator> <literal type="number" pos:line="10" pos:column="35">5<pos:position pos:line="10" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if></elseif> <elseif pos:line="11" pos:column="7">else <if pos:line="11" pos:column="12">if <condition pos:line="11" pos:column="15">(<expr><call><name pos:line="11" pos:column="16">strcmp<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">token<pos:position pos:line="11" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="30">"vhost"<pos:position pos:line="11" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call> <operator pos:line="11" pos:column="39">==<pos:position pos:line="11" pos:column="41"/></operator> <literal type="number" pos:line="11" pos:column="42">0<pos:position pos:line="11" pos:column="43"/></literal></expr>)<pos:position pos:line="11" pos:column="44"/></condition><then pos:line="11" pos:column="44"> <block pos:line="11" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">s<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">vhost<pos:position pos:line="12" pos:column="17"/></name></name> <operator pos:line="12" pos:column="18">=<pos:position pos:line="12" pos:column="19"/></operator> <literal type="number" pos:line="12" pos:column="20">1<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">s<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">accel<pos:position pos:line="13" pos:column="17"/></name></name> <operator pos:line="13" pos:column="18">=<pos:position pos:line="13" pos:column="19"/></operator> <literal type="number" pos:line="13" pos:column="20">1<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if></elseif> <elseif pos:line="14" pos:column="7">else <if pos:line="14" pos:column="12">if <condition pos:line="14" pos:column="15">(<expr><call><name pos:line="14" pos:column="16">strcmp<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><name pos:line="14" pos:column="23">token<pos:position pos:line="14" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="30">"vport"<pos:position pos:line="14" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call> <operator pos:line="14" pos:column="39">==<pos:position pos:line="14" pos:column="41"/></operator> <literal type="number" pos:line="14" pos:column="42">0<pos:position pos:line="14" pos:column="43"/></literal></expr>)<pos:position pos:line="14" pos:column="44"/></condition><then pos:line="14" pos:column="44"> <block pos:line="14" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">s<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">vport<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <operator pos:line="15" pos:column="20">-<pos:position pos:line="15" pos:column="21"/></operator><literal type="number" pos:line="15" pos:column="21">1<pos:position pos:line="15" pos:column="22"/></literal></expr>;<pos:position pos:line="15" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">s<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">accel<pos:position pos:line="16" pos:column="17"/></name></name> <operator pos:line="16" pos:column="18">=<pos:position pos:line="16" pos:column="19"/></operator> <literal type="number" pos:line="16" pos:column="20">1<pos:position pos:line="16" pos:column="21"/></literal></expr>;<pos:position pos:line="16" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif> <elseif pos:line="17" pos:column="7">else <if pos:line="17" pos:column="12">if <condition pos:line="17" pos:column="15">(<expr><call><name pos:line="17" pos:column="16">strncmp<pos:position pos:line="17" pos:column="23"/></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name pos:line="17" pos:column="24">token<pos:position pos:line="17" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="31">"vport="<pos:position pos:line="17" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="41">6<pos:position pos:line="17" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="43"/></argument_list></call> <operator pos:line="17" pos:column="44">==<pos:position pos:line="17" pos:column="46"/></operator> <literal type="number" pos:line="17" pos:column="47">0<pos:position pos:line="17" pos:column="48"/></literal></expr>)<pos:position pos:line="17" pos:column="49"/></condition><then pos:line="17" pos:column="49"> <block pos:line="17" pos:column="50">{
        <expr_stmt><expr><name><name pos:line="18" pos:column="9">s<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">vport<pos:position pos:line="18" pos:column="17"/></name></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <call><name pos:line="18" pos:column="20">xatos<pos:position pos:line="18" pos:column="25"/></name><argument_list pos:line="18" pos:column="25">(<argument><expr><name pos:line="18" pos:column="26">token<pos:position pos:line="18" pos:column="31"/></name> <operator pos:line="18" pos:column="32">+<pos:position pos:line="18" pos:column="33"/></operator> <literal type="number" pos:line="18" pos:column="34">6<pos:position pos:line="18" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">s<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">accel<pos:position pos:line="19" pos:column="17"/></name></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <literal type="number" pos:line="19" pos:column="20">1<pos:position pos:line="19" pos:column="21"/></literal></expr>;<pos:position pos:line="19" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if></elseif> <elseif pos:line="20" pos:column="7">else <if pos:line="20" pos:column="12">if <condition pos:line="20" pos:column="15">(<expr><call><name pos:line="20" pos:column="16">strncmp<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><name pos:line="20" pos:column="24">token<pos:position pos:line="20" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="31">"protocol="<pos:position pos:line="20" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="44">9<pos:position pos:line="20" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call> <operator pos:line="20" pos:column="47">==<pos:position pos:line="20" pos:column="49"/></operator> <literal type="number" pos:line="20" pos:column="50">0<pos:position pos:line="20" pos:column="51"/></literal></expr>)<pos:position pos:line="20" pos:column="52"/></condition><then pos:line="20" pos:column="52"> <block pos:line="20" pos:column="53">{
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">s<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">protocol<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name pos:line="21" pos:column="23">xstrdup<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><name pos:line="21" pos:column="31">token<pos:position pos:line="21" pos:column="36"/></name> <operator pos:line="21" pos:column="37">+<pos:position pos:line="21" pos:column="38"/></operator> <literal type="number" pos:line="21" pos:column="39">9<pos:position pos:line="21" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">s<pos:position pos:line="22" pos:column="10"/></name><operator pos:line="22" pos:column="10">-&gt;<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="12">accel<pos:position pos:line="22" pos:column="17"/></name></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <literal type="number" pos:line="22" pos:column="20">1<pos:position pos:line="22" pos:column="21"/></literal></expr>;<pos:position pos:line="22" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if></elseif> <elseif pos:line="23" pos:column="7">else <if pos:line="23" pos:column="12">if <condition pos:line="23" pos:column="15">(<expr><call><name pos:line="23" pos:column="16">strcmp<pos:position pos:line="23" pos:column="22"/></name><argument_list pos:line="23" pos:column="22">(<argument><expr><name pos:line="23" pos:column="23">token<pos:position pos:line="23" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="30">"accel"<pos:position pos:line="23" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="38"/></argument_list></call> <operator pos:line="23" pos:column="39">==<pos:position pos:line="23" pos:column="41"/></operator> <literal type="number" pos:line="23" pos:column="42">0<pos:position pos:line="23" pos:column="43"/></literal></expr>)<pos:position pos:line="23" pos:column="44"/></condition><then pos:line="23" pos:column="44"> <block pos:line="23" pos:column="45">{
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">s<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">accel<pos:position pos:line="24" pos:column="17"/></name></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <literal type="number" pos:line="24" pos:column="20">1<pos:position pos:line="24" pos:column="21"/></literal></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if></elseif> <elseif pos:line="25" pos:column="7">else <if pos:line="25" pos:column="12">if <condition pos:line="25" pos:column="15">(<expr><call><name pos:line="25" pos:column="16">strcmp<pos:position pos:line="25" pos:column="22"/></name><argument_list pos:line="25" pos:column="22">(<argument><expr><name pos:line="25" pos:column="23">token<pos:position pos:line="25" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="30">"allow-direct"<pos:position pos:line="25" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call> <operator pos:line="25" pos:column="46">==<pos:position pos:line="25" pos:column="48"/></operator> <literal type="number" pos:line="25" pos:column="49">0<pos:position pos:line="25" pos:column="50"/></literal></expr>)<pos:position pos:line="25" pos:column="51"/></condition><then pos:line="25" pos:column="51"> <block pos:line="25" pos:column="52">{
        <expr_stmt><expr><name><name pos:line="26" pos:column="9">s<pos:position pos:line="26" pos:column="10"/></name><operator pos:line="26" pos:column="10">-&gt;<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="12">allow_direct<pos:position pos:line="26" pos:column="24"/></name></name> <operator pos:line="26" pos:column="25">=<pos:position pos:line="26" pos:column="26"/></operator> <literal type="number" pos:line="26" pos:column="27">1<pos:position pos:line="26" pos:column="28"/></literal></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if></elseif> <elseif pos:line="27" pos:column="7">else <if pos:line="27" pos:column="12">if <condition pos:line="27" pos:column="15">(<expr><call><name pos:line="27" pos:column="16">strcmp<pos:position pos:line="27" pos:column="22"/></name><argument_list pos:line="27" pos:column="22">(<argument><expr><name pos:line="27" pos:column="23">token<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="30">"ignore-cc"<pos:position pos:line="27" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="42"/></argument_list></call> <operator pos:line="27" pos:column="43">==<pos:position pos:line="27" pos:column="45"/></operator> <literal type="number" pos:line="27" pos:column="46">0<pos:position pos:line="27" pos:column="47"/></literal></expr>)<pos:position pos:line="27" pos:column="48"/></condition><then pos:line="27" pos:column="48"> <block pos:line="27" pos:column="49">{
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">s<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">ignore_cc<pos:position pos:line="28" pos:column="21"/></name></name> <operator pos:line="28" pos:column="22">=<pos:position pos:line="28" pos:column="23"/></operator> <literal type="number" pos:line="28" pos:column="24">1<pos:position pos:line="28" pos:column="25"/></literal></expr>;<pos:position pos:line="28" pos:column="26"/></expr_stmt>
<cpp:if pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">if<pos:position pos:line="29" pos:column="4"/></cpp:directive> <expr><operator pos:line="29" pos:column="5">!<pos:position pos:line="29" pos:column="6"/></operator><name pos:line="29" pos:column="6">HTTP_VIOLATIONS<pos:position pos:line="29" pos:column="21"/></name></expr></cpp:if>
        <if pos:line="30" pos:column="9">if <condition pos:line="30" pos:column="12">(<expr><operator pos:line="30" pos:column="13">!<pos:position pos:line="30" pos:column="14"/></operator><name><name pos:line="30" pos:column="14">s<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">accel<pos:position pos:line="30" pos:column="22"/></name></name></expr>)<pos:position pos:line="30" pos:column="23"/></condition><then pos:line="30" pos:column="23"> <block pos:line="30" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="31" pos:column="13">debugs<pos:position pos:line="31" pos:column="19"/></name><argument_list pos:line="31" pos:column="19">(<argument><expr><literal type="number" pos:line="31" pos:column="20">3<pos:position pos:line="31" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="31" pos:column="23">DBG_CRITICAL<pos:position pos:line="31" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="37">"FATAL: ignore-cc is only valid in accelerator mode"<pos:position pos:line="31" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="91"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="32" pos:column="13">self_destruct<pos:position pos:line="32" pos:column="26"/></name><argument_list pos:line="32" pos:column="26">()<pos:position pos:line="32" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>
<cpp:endif pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">endif<pos:position pos:line="34" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if></elseif> <elseif pos:line="35" pos:column="7">else <if pos:line="35" pos:column="12">if <condition pos:line="35" pos:column="15">(<expr><call><name pos:line="35" pos:column="16">strcmp<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">token<pos:position pos:line="35" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="30">"no-connection-auth"<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call> <operator pos:line="35" pos:column="52">==<pos:position pos:line="35" pos:column="54"/></operator> <literal type="number" pos:line="35" pos:column="55">0<pos:position pos:line="35" pos:column="56"/></literal></expr>)<pos:position pos:line="35" pos:column="57"/></condition><then pos:line="35" pos:column="57"> <block pos:line="35" pos:column="58">{
        <expr_stmt><expr><name><name pos:line="36" pos:column="9">s<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">connection_auth_disabled<pos:position pos:line="36" pos:column="36"/></name></name> <operator pos:line="36" pos:column="37">=<pos:position pos:line="36" pos:column="38"/></operator> <literal type="boolean" pos:line="36" pos:column="39">true<pos:position pos:line="36" pos:column="43"/></literal></expr>;<pos:position pos:line="36" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if></elseif> <elseif pos:line="37" pos:column="7">else <if pos:line="37" pos:column="12">if <condition pos:line="37" pos:column="15">(<expr><call><name pos:line="37" pos:column="16">strcmp<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">token<pos:position pos:line="37" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="30">"connection-auth=off"<pos:position pos:line="37" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="52"/></argument_list></call> <operator pos:line="37" pos:column="53">==<pos:position pos:line="37" pos:column="55"/></operator> <literal type="number" pos:line="37" pos:column="56">0<pos:position pos:line="37" pos:column="57"/></literal></expr>)<pos:position pos:line="37" pos:column="58"/></condition><then pos:line="37" pos:column="58"> <block pos:line="37" pos:column="59">{
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">s<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">connection_auth_disabled<pos:position pos:line="38" pos:column="36"/></name></name> <operator pos:line="38" pos:column="37">=<pos:position pos:line="38" pos:column="38"/></operator> <literal type="boolean" pos:line="38" pos:column="39">true<pos:position pos:line="38" pos:column="43"/></literal></expr>;<pos:position pos:line="38" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="39" pos:column="6"/></block></then></if></elseif> <elseif pos:line="39" pos:column="7">else <if pos:line="39" pos:column="12">if <condition pos:line="39" pos:column="15">(<expr><call><name pos:line="39" pos:column="16">strcmp<pos:position pos:line="39" pos:column="22"/></name><argument_list pos:line="39" pos:column="22">(<argument><expr><name pos:line="39" pos:column="23">token<pos:position pos:line="39" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="30">"connection-auth"<pos:position pos:line="39" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="48"/></argument_list></call> <operator pos:line="39" pos:column="49">==<pos:position pos:line="39" pos:column="51"/></operator> <literal type="number" pos:line="39" pos:column="52">0<pos:position pos:line="39" pos:column="53"/></literal></expr>)<pos:position pos:line="39" pos:column="54"/></condition><then pos:line="39" pos:column="54"> <block pos:line="39" pos:column="55">{
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">s<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">-&gt;<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="12">connection_auth_disabled<pos:position pos:line="40" pos:column="36"/></name></name> <operator pos:line="40" pos:column="37">=<pos:position pos:line="40" pos:column="38"/></operator> <literal type="boolean" pos:line="40" pos:column="39">false<pos:position pos:line="40" pos:column="44"/></literal></expr>;<pos:position pos:line="40" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if></elseif> <elseif pos:line="41" pos:column="7">else <if pos:line="41" pos:column="12">if <condition pos:line="41" pos:column="15">(<expr><call><name pos:line="41" pos:column="16">strcmp<pos:position pos:line="41" pos:column="22"/></name><argument_list pos:line="41" pos:column="22">(<argument><expr><name pos:line="41" pos:column="23">token<pos:position pos:line="41" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="30">"connection-auth=on"<pos:position pos:line="41" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="51"/></argument_list></call> <operator pos:line="41" pos:column="52">==<pos:position pos:line="41" pos:column="54"/></operator> <literal type="number" pos:line="41" pos:column="55">0<pos:position pos:line="41" pos:column="56"/></literal></expr>)<pos:position pos:line="41" pos:column="57"/></condition><then pos:line="41" pos:column="57"> <block pos:line="41" pos:column="58">{
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">s<pos:position pos:line="42" pos:column="10"/></name><operator pos:line="42" pos:column="10">-&gt;<pos:position pos:line="42" pos:column="15"/></operator><name pos:line="42" pos:column="12">connection_auth_disabled<pos:position pos:line="42" pos:column="36"/></name></name> <operator pos:line="42" pos:column="37">=<pos:position pos:line="42" pos:column="38"/></operator> <literal type="boolean" pos:line="42" pos:column="39">false<pos:position pos:line="42" pos:column="44"/></literal></expr>;<pos:position pos:line="42" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if></elseif> <elseif pos:line="43" pos:column="7">else <if pos:line="43" pos:column="12">if <condition pos:line="43" pos:column="15">(<expr><call><name pos:line="43" pos:column="16">strncmp<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">token<pos:position pos:line="43" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="31">"disable-pmtu-discovery="<pos:position pos:line="43" pos:column="56"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="58">23<pos:position pos:line="43" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call> <operator pos:line="43" pos:column="62">==<pos:position pos:line="43" pos:column="64"/></operator> <literal type="number" pos:line="43" pos:column="65">0<pos:position pos:line="43" pos:column="66"/></literal></expr>)<pos:position pos:line="43" pos:column="67"/></condition><then pos:line="43" pos:column="67"> <block pos:line="43" pos:column="68">{
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><call><name pos:line="44" pos:column="14">strcasecmp<pos:position pos:line="44" pos:column="24"/></name><argument_list pos:line="44" pos:column="24">(<argument><expr><name pos:line="44" pos:column="25">token<pos:position pos:line="44" pos:column="30"/></name> <operator pos:line="44" pos:column="31">+<pos:position pos:line="44" pos:column="32"/></operator> <literal type="number" pos:line="44" pos:column="33">23<pos:position pos:line="44" pos:column="35"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="37">"off"<pos:position pos:line="44" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="44"/></condition><then pos:line="44" pos:column="44">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="45" pos:column="13">s<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">-&gt;<pos:position pos:line="45" pos:column="19"/></operator><name pos:line="45" pos:column="16">disable_pmtu_discovery<pos:position pos:line="45" pos:column="38"/></name></name> <operator pos:line="45" pos:column="39">=<pos:position pos:line="45" pos:column="40"/></operator> <name pos:line="45" pos:column="41">DISABLE_PMTU_OFF<pos:position pos:line="45" pos:column="57"/></name></expr>;<pos:position pos:line="45" pos:column="58"/></expr_stmt></block></then>
        <elseif pos:line="46" pos:column="9">else <if pos:line="46" pos:column="14">if <condition pos:line="46" pos:column="17">(<expr><operator pos:line="46" pos:column="18">!<pos:position pos:line="46" pos:column="19"/></operator><call><name pos:line="46" pos:column="19">strcasecmp<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name pos:line="46" pos:column="30">token<pos:position pos:line="46" pos:column="35"/></name> <operator pos:line="46" pos:column="36">+<pos:position pos:line="46" pos:column="37"/></operator> <literal type="number" pos:line="46" pos:column="38">23<pos:position pos:line="46" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="42">"transparent"<pos:position pos:line="46" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="57"/></condition><then pos:line="46" pos:column="57">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="47" pos:column="13">s<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">disable_pmtu_discovery<pos:position pos:line="47" pos:column="38"/></name></name> <operator pos:line="47" pos:column="39">=<pos:position pos:line="47" pos:column="40"/></operator> <name pos:line="47" pos:column="41">DISABLE_PMTU_TRANSPARENT<pos:position pos:line="47" pos:column="65"/></name></expr>;<pos:position pos:line="47" pos:column="66"/></expr_stmt></block></then></if></elseif>
        <elseif pos:line="48" pos:column="9">else <if pos:line="48" pos:column="14">if <condition pos:line="48" pos:column="17">(<expr><operator pos:line="48" pos:column="18">!<pos:position pos:line="48" pos:column="19"/></operator><call><name pos:line="48" pos:column="19">strcasecmp<pos:position pos:line="48" pos:column="29"/></name><argument_list pos:line="48" pos:column="29">(<argument><expr><name pos:line="48" pos:column="30">token<pos:position pos:line="48" pos:column="35"/></name> <operator pos:line="48" pos:column="36">+<pos:position pos:line="48" pos:column="37"/></operator> <literal type="number" pos:line="48" pos:column="38">23<pos:position pos:line="48" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="42">"always"<pos:position pos:line="48" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="48" pos:column="52"/></condition><then pos:line="48" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="49" pos:column="13">s<pos:position pos:line="49" pos:column="14"/></name><operator pos:line="49" pos:column="14">-&gt;<pos:position pos:line="49" pos:column="19"/></operator><name pos:line="49" pos:column="16">disable_pmtu_discovery<pos:position pos:line="49" pos:column="38"/></name></name> <operator pos:line="49" pos:column="39">=<pos:position pos:line="49" pos:column="40"/></operator> <name pos:line="49" pos:column="41">DISABLE_PMTU_ALWAYS<pos:position pos:line="49" pos:column="60"/></name></expr>;<pos:position pos:line="49" pos:column="61"/></expr_stmt></block></then></if></elseif>
        <else pos:line="50" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="51" pos:column="13">self_destruct<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">()<pos:position pos:line="51" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="29"/></expr_stmt></block></else></if>

    }<pos:position pos:line="53" pos:column="6"/></block></then></if></elseif> <elseif pos:line="53" pos:column="7">else <if pos:line="53" pos:column="12">if <condition pos:line="53" pos:column="15">(<expr><call><name pos:line="53" pos:column="16">strcmp<pos:position pos:line="53" pos:column="22"/></name><argument_list pos:line="53" pos:column="22">(<argument><expr><name pos:line="53" pos:column="23">token<pos:position pos:line="53" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="30">"transparent"<pos:position pos:line="53" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="44"/></argument_list></call> <operator pos:line="53" pos:column="45">==<pos:position pos:line="53" pos:column="47"/></operator> <literal type="number" pos:line="53" pos:column="48">0<pos:position pos:line="53" pos:column="49"/></literal> <operator pos:line="53" pos:column="50">||<pos:position pos:line="53" pos:column="52"/></operator> <call><name pos:line="53" pos:column="53">strcmp<pos:position pos:line="53" pos:column="59"/></name><argument_list pos:line="53" pos:column="59">(<argument><expr><name pos:line="53" pos:column="60">token<pos:position pos:line="53" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="67">"intercept"<pos:position pos:line="53" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="79"/></argument_list></call> <operator pos:line="53" pos:column="80">==<pos:position pos:line="53" pos:column="82"/></operator> <literal type="number" pos:line="53" pos:column="83">0<pos:position pos:line="53" pos:column="84"/></literal></expr>)<pos:position pos:line="53" pos:column="85"/></condition><then pos:line="53" pos:column="85"> <block pos:line="53" pos:column="86">{
        <expr_stmt><expr><name><name pos:line="54" pos:column="9">s<pos:position pos:line="54" pos:column="10"/></name><operator pos:line="54" pos:column="10">-&gt;<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="12">intercepted<pos:position pos:line="54" pos:column="23"/></name></name> <operator pos:line="54" pos:column="24">=<pos:position pos:line="54" pos:column="25"/></operator> <literal type="number" pos:line="54" pos:column="26">1<pos:position pos:line="54" pos:column="27"/></literal></expr>;<pos:position pos:line="54" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="55" pos:column="9">IpInterceptor<pos:position pos:line="55" pos:column="22"/></name><operator pos:line="55" pos:column="22">.<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="23">StartInterception<pos:position pos:line="55" pos:column="40"/></name></name><argument_list pos:line="55" pos:column="40">()<pos:position pos:line="55" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="43"/></expr_stmt>
        <comment type="block" pos:line="56" pos:column="9">/* Log information regarding the port modes under interception. */</comment>
        <expr_stmt><expr><call><name pos:line="57" pos:column="9">debugs<pos:position pos:line="57" pos:column="15"/></name><argument_list pos:line="57" pos:column="15">(<argument><expr><literal type="number" pos:line="57" pos:column="16">3<pos:position pos:line="57" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="19">DBG_IMPORTANT<pos:position pos:line="57" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="34">"Starting Authentication on port "<pos:position pos:line="57" pos:column="68"/></literal> <operator pos:line="57" pos:column="69">&lt;&lt;<pos:position pos:line="57" pos:column="77"/></operator> <name><name pos:line="57" pos:column="72">s<pos:position pos:line="57" pos:column="73"/></name><operator pos:line="57" pos:column="73">-&gt;<pos:position pos:line="57" pos:column="78"/></operator><name pos:line="57" pos:column="75">s<pos:position pos:line="57" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="57" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="78"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">debugs<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><literal type="number" pos:line="58" pos:column="16">3<pos:position pos:line="58" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="19">DBG_IMPORTANT<pos:position pos:line="58" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="34">"Disabling Authentication on port "<pos:position pos:line="58" pos:column="69"/></literal> <operator pos:line="58" pos:column="70">&lt;&lt;<pos:position pos:line="58" pos:column="78"/></operator> <name><name pos:line="58" pos:column="73">s<pos:position pos:line="58" pos:column="74"/></name><operator pos:line="58" pos:column="74">-&gt;<pos:position pos:line="58" pos:column="79"/></operator><name pos:line="58" pos:column="76">s<pos:position pos:line="58" pos:column="77"/></name></name> <operator pos:line="58" pos:column="78">&lt;&lt;<pos:position pos:line="58" pos:column="86"/></operator> <literal type="string" pos:line="58" pos:column="81">" (interception enabled)"<pos:position pos:line="58" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="108"/></expr_stmt>

        <comment type="block" pos:line="60" pos:column="9">/* INET6: until transparent REDIRECT works on IPv6 SOCKET, force wildcard to IPv4 */</comment>
        <if pos:line="61" pos:column="9">if <condition pos:line="61" pos:column="12">(<expr><name><name pos:line="61" pos:column="13">Ip<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">::<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="17">EnableIpv6<pos:position pos:line="61" pos:column="27"/></name></name></expr>)<pos:position pos:line="61" pos:column="28"/></condition><then pos:line="61" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="62" pos:column="13">debugs<pos:position pos:line="62" pos:column="19"/></name><argument_list pos:line="62" pos:column="19">(<argument><expr><literal type="number" pos:line="62" pos:column="20">3<pos:position pos:line="62" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="62" pos:column="23">DBG_IMPORTANT<pos:position pos:line="62" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="38">"Disabling IPv6 on port "<pos:position pos:line="62" pos:column="63"/></literal> <operator pos:line="62" pos:column="64">&lt;&lt;<pos:position pos:line="62" pos:column="72"/></operator> <name><name pos:line="62" pos:column="67">s<pos:position pos:line="62" pos:column="68"/></name><operator pos:line="62" pos:column="68">-&gt;<pos:position pos:line="62" pos:column="73"/></operator><name pos:line="62" pos:column="70">s<pos:position pos:line="62" pos:column="71"/></name></name> <operator pos:line="62" pos:column="72">&lt;&lt;<pos:position pos:line="62" pos:column="80"/></operator> <literal type="string" pos:line="62" pos:column="75">" (interception enabled)"<pos:position pos:line="62" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="62" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="102"/></expr_stmt></block></then></if>
        <if pos:line="63" pos:column="9">if <condition pos:line="63" pos:column="12">( <expr><operator pos:line="63" pos:column="14">!<pos:position pos:line="63" pos:column="15"/></operator><call><name><name pos:line="63" pos:column="15">s<pos:position pos:line="63" pos:column="16"/></name><operator pos:line="63" pos:column="16">-&gt;<pos:position pos:line="63" pos:column="21"/></operator><name pos:line="63" pos:column="18">s<pos:position pos:line="63" pos:column="19"/></name><operator pos:line="63" pos:column="19">.<pos:position pos:line="63" pos:column="20"/></operator><name pos:line="63" pos:column="20">SetIPv4<pos:position pos:line="63" pos:column="27"/></name></name><argument_list pos:line="63" pos:column="27">()<pos:position pos:line="63" pos:column="29"/></argument_list></call></expr> )<pos:position pos:line="63" pos:column="31"/></condition><then pos:line="63" pos:column="31"> <block pos:line="63" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="64" pos:column="13">debugs<pos:position pos:line="64" pos:column="19"/></name><argument_list pos:line="64" pos:column="19">(<argument><expr><literal type="number" pos:line="64" pos:column="20">3<pos:position pos:line="64" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="64" pos:column="23">DBG_CRITICAL<pos:position pos:line="64" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="37">"http(s)_port: IPv6 addresses cannot be transparent (protocol does not provide NAT)"<pos:position pos:line="64" pos:column="121"/></literal> <operator pos:line="64" pos:column="122">&lt;&lt;<pos:position pos:line="64" pos:column="130"/></operator> <name><name pos:line="64" pos:column="125">s<pos:position pos:line="64" pos:column="126"/></name><operator pos:line="64" pos:column="126">-&gt;<pos:position pos:line="64" pos:column="131"/></operator><name pos:line="64" pos:column="128">s<pos:position pos:line="64" pos:column="129"/></name></name></expr></argument> )<pos:position pos:line="64" pos:column="131"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="132"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">self_destruct<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">()<pos:position pos:line="65" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></then></if>
    }<pos:position pos:line="67" pos:column="6"/></block></then></if></elseif> <elseif pos:line="67" pos:column="7">else <if pos:line="67" pos:column="12">if <condition pos:line="67" pos:column="15">(<expr><call><name pos:line="67" pos:column="16">strcmp<pos:position pos:line="67" pos:column="22"/></name><argument_list pos:line="67" pos:column="22">(<argument><expr><name pos:line="67" pos:column="23">token<pos:position pos:line="67" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="30">"tproxy"<pos:position pos:line="67" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="39"/></argument_list></call> <operator pos:line="67" pos:column="40">==<pos:position pos:line="67" pos:column="42"/></operator> <literal type="number" pos:line="67" pos:column="43">0<pos:position pos:line="67" pos:column="44"/></literal></expr>)<pos:position pos:line="67" pos:column="45"/></condition><then pos:line="67" pos:column="45"> <block pos:line="67" pos:column="46">{
        <if pos:line="68" pos:column="9">if <condition pos:line="68" pos:column="12">(<expr><name><name pos:line="68" pos:column="13">s<pos:position pos:line="68" pos:column="14"/></name><operator pos:line="68" pos:column="14">-&gt;<pos:position pos:line="68" pos:column="19"/></operator><name pos:line="68" pos:column="16">intercepted<pos:position pos:line="68" pos:column="27"/></name></name> <operator pos:line="68" pos:column="28">||<pos:position pos:line="68" pos:column="30"/></operator> <name><name pos:line="68" pos:column="31">s<pos:position pos:line="68" pos:column="32"/></name><operator pos:line="68" pos:column="32">-&gt;<pos:position pos:line="68" pos:column="37"/></operator><name pos:line="68" pos:column="34">accel<pos:position pos:line="68" pos:column="39"/></name></name></expr>)<pos:position pos:line="68" pos:column="40"/></condition><then pos:line="68" pos:column="40"> <block pos:line="68" pos:column="41">{
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">debugs<pos:position pos:line="69" pos:column="19"/></name><argument_list pos:line="69" pos:column="19">(<argument><expr><literal type="number" pos:line="69" pos:column="20">3<pos:position pos:line="69" pos:column="21"/></literal></expr></argument>,<argument><expr><name pos:line="69" pos:column="22">DBG_CRITICAL<pos:position pos:line="69" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="36">"http(s)_port: TPROXY option requires its own interception port. It cannot be shared."<pos:position pos:line="69" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="124"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">self_destruct<pos:position pos:line="70" pos:column="26"/></name><argument_list pos:line="70" pos:column="26">()<pos:position pos:line="70" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name><name pos:line="72" pos:column="9">s<pos:position pos:line="72" pos:column="10"/></name><operator pos:line="72" pos:column="10">-&gt;<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="12">spoof_client_ip<pos:position pos:line="72" pos:column="27"/></name></name> <operator pos:line="72" pos:column="28">=<pos:position pos:line="72" pos:column="29"/></operator> <literal type="number" pos:line="72" pos:column="30">1<pos:position pos:line="72" pos:column="31"/></literal></expr>;<pos:position pos:line="72" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="73" pos:column="9">IpInterceptor<pos:position pos:line="73" pos:column="22"/></name><operator pos:line="73" pos:column="22">.<pos:position pos:line="73" pos:column="23"/></operator><name pos:line="73" pos:column="23">StartTransparency<pos:position pos:line="73" pos:column="40"/></name></name><argument_list pos:line="73" pos:column="40">()<pos:position pos:line="73" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="43"/></expr_stmt>
        <comment type="block" pos:line="74" pos:column="9">/* Log information regarding the port modes under transparency. */</comment>
        <expr_stmt><expr><call><name pos:line="75" pos:column="9">debugs<pos:position pos:line="75" pos:column="15"/></name><argument_list pos:line="75" pos:column="15">(<argument><expr><literal type="number" pos:line="75" pos:column="16">3<pos:position pos:line="75" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="75" pos:column="19">DBG_IMPORTANT<pos:position pos:line="75" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="34">"Starting IP Spoofing on port "<pos:position pos:line="75" pos:column="65"/></literal> <operator pos:line="75" pos:column="66">&lt;&lt;<pos:position pos:line="75" pos:column="74"/></operator> <name><name pos:line="75" pos:column="69">s<pos:position pos:line="75" pos:column="70"/></name><operator pos:line="75" pos:column="70">-&gt;<pos:position pos:line="75" pos:column="75"/></operator><name pos:line="75" pos:column="72">s<pos:position pos:line="75" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="75" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="76" pos:column="9">debugs<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><literal type="number" pos:line="76" pos:column="16">3<pos:position pos:line="76" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="76" pos:column="19">DBG_IMPORTANT<pos:position pos:line="76" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="34">"Disabling Authentication on port "<pos:position pos:line="76" pos:column="69"/></literal> <operator pos:line="76" pos:column="70">&lt;&lt;<pos:position pos:line="76" pos:column="78"/></operator> <name><name pos:line="76" pos:column="73">s<pos:position pos:line="76" pos:column="74"/></name><operator pos:line="76" pos:column="74">-&gt;<pos:position pos:line="76" pos:column="79"/></operator><name pos:line="76" pos:column="76">s<pos:position pos:line="76" pos:column="77"/></name></name> <operator pos:line="76" pos:column="78">&lt;&lt;<pos:position pos:line="76" pos:column="86"/></operator> <literal type="string" pos:line="76" pos:column="81">" (IP spoofing enabled)"<pos:position pos:line="76" pos:column="105"/></literal></expr></argument>)<pos:position pos:line="76" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="107"/></expr_stmt>

        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><operator pos:line="78" pos:column="13">!<pos:position pos:line="78" pos:column="14"/></operator><call><name><name pos:line="78" pos:column="14">IpInterceptor<pos:position pos:line="78" pos:column="27"/></name><operator pos:line="78" pos:column="27">.<pos:position pos:line="78" pos:column="28"/></operator><name pos:line="78" pos:column="28">ProbeForTproxy<pos:position pos:line="78" pos:column="42"/></name></name><argument_list pos:line="78" pos:column="42">(<argument><expr><name><name pos:line="78" pos:column="43">s<pos:position pos:line="78" pos:column="44"/></name><operator pos:line="78" pos:column="44">-&gt;<pos:position pos:line="78" pos:column="49"/></operator><name pos:line="78" pos:column="46">s<pos:position pos:line="78" pos:column="47"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="49"/></condition><then pos:line="78" pos:column="49"> <block pos:line="78" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">debugs<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><literal type="number" pos:line="79" pos:column="20">3<pos:position pos:line="79" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="23">DBG_CRITICAL<pos:position pos:line="79" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="37">"FATAL: http(s)_port: TPROXY support in the system does not work."<pos:position pos:line="79" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="105"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="80" pos:column="13">self_destruct<pos:position pos:line="80" pos:column="26"/></name><argument_list pos:line="80" pos:column="26">()<pos:position pos:line="80" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></then></if>

    }<pos:position pos:line="83" pos:column="6"/></block></then></if></elseif> <elseif pos:line="83" pos:column="7">else <if pos:line="83" pos:column="12">if <condition pos:line="83" pos:column="15">(<expr><call><name pos:line="83" pos:column="16">strcmp<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><name pos:line="83" pos:column="23">token<pos:position pos:line="83" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="30">"ipv4"<pos:position pos:line="83" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="37"/></argument_list></call> <operator pos:line="83" pos:column="38">==<pos:position pos:line="83" pos:column="40"/></operator> <literal type="number" pos:line="83" pos:column="41">0<pos:position pos:line="83" pos:column="42"/></literal></expr>)<pos:position pos:line="83" pos:column="43"/></condition><then pos:line="83" pos:column="43"> <block pos:line="83" pos:column="44">{
        <if pos:line="84" pos:column="9">if <condition pos:line="84" pos:column="12">( <expr><operator pos:line="84" pos:column="14">!<pos:position pos:line="84" pos:column="15"/></operator><call><name><name pos:line="84" pos:column="15">s<pos:position pos:line="84" pos:column="16"/></name><operator pos:line="84" pos:column="16">-&gt;<pos:position pos:line="84" pos:column="21"/></operator><name pos:line="84" pos:column="18">s<pos:position pos:line="84" pos:column="19"/></name><operator pos:line="84" pos:column="19">.<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="20">SetIPv4<pos:position pos:line="84" pos:column="27"/></name></name><argument_list pos:line="84" pos:column="27">()<pos:position pos:line="84" pos:column="29"/></argument_list></call></expr> )<pos:position pos:line="84" pos:column="31"/></condition><then pos:line="84" pos:column="31"> <block pos:line="84" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="85" pos:column="13">debugs<pos:position pos:line="85" pos:column="19"/></name><argument_list pos:line="85" pos:column="19">(<argument><expr><literal type="number" pos:line="85" pos:column="20">3<pos:position pos:line="85" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="23">DBG_CRITICAL<pos:position pos:line="85" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="37">"FATAL: http(s)_port: IPv6 addresses cannot be used as IPv4-Only. "<pos:position pos:line="85" pos:column="104"/></literal> <operator pos:line="85" pos:column="105">&lt;&lt;<pos:position pos:line="85" pos:column="113"/></operator> <name><name pos:line="85" pos:column="108">s<pos:position pos:line="85" pos:column="109"/></name><operator pos:line="85" pos:column="109">-&gt;<pos:position pos:line="85" pos:column="114"/></operator><name pos:line="85" pos:column="111">s<pos:position pos:line="85" pos:column="112"/></name></name></expr></argument> )<pos:position pos:line="85" pos:column="114"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="115"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">self_destruct<pos:position pos:line="86" pos:column="26"/></name><argument_list pos:line="86" pos:column="26">()<pos:position pos:line="86" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="87" pos:column="10"/></block></then></if>
    }<pos:position pos:line="88" pos:column="6"/></block></then></if></elseif> <elseif pos:line="88" pos:column="7">else <if pos:line="88" pos:column="12">if <condition pos:line="88" pos:column="15">(<expr><call><name pos:line="88" pos:column="16">strcmp<pos:position pos:line="88" pos:column="22"/></name><argument_list pos:line="88" pos:column="22">(<argument><expr><name pos:line="88" pos:column="23">token<pos:position pos:line="88" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="30">"tcpkeepalive"<pos:position pos:line="88" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="45"/></argument_list></call> <operator pos:line="88" pos:column="46">==<pos:position pos:line="88" pos:column="48"/></operator> <literal type="number" pos:line="88" pos:column="49">0<pos:position pos:line="88" pos:column="50"/></literal></expr>)<pos:position pos:line="88" pos:column="51"/></condition><then pos:line="88" pos:column="51"> <block pos:line="88" pos:column="52">{
        <expr_stmt><expr><name><name pos:line="89" pos:column="9">s<pos:position pos:line="89" pos:column="10"/></name><operator pos:line="89" pos:column="10">-&gt;<pos:position pos:line="89" pos:column="15"/></operator><name pos:line="89" pos:column="12">tcp_keepalive<pos:position pos:line="89" pos:column="25"/></name><operator pos:line="89" pos:column="25">.<pos:position pos:line="89" pos:column="26"/></operator><name pos:line="89" pos:column="26">enabled<pos:position pos:line="89" pos:column="33"/></name></name> <operator pos:line="89" pos:column="34">=<pos:position pos:line="89" pos:column="35"/></operator> <literal type="number" pos:line="89" pos:column="36">1<pos:position pos:line="89" pos:column="37"/></literal></expr>;<pos:position pos:line="89" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if></elseif> <elseif pos:line="90" pos:column="7">else <if pos:line="90" pos:column="12">if <condition pos:line="90" pos:column="15">(<expr><call><name pos:line="90" pos:column="16">strncmp<pos:position pos:line="90" pos:column="23"/></name><argument_list pos:line="90" pos:column="23">(<argument><expr><name pos:line="90" pos:column="24">token<pos:position pos:line="90" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="31">"tcpkeepalive="<pos:position pos:line="90" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="48">13<pos:position pos:line="90" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="51"/></argument_list></call> <operator pos:line="90" pos:column="52">==<pos:position pos:line="90" pos:column="54"/></operator> <literal type="number" pos:line="90" pos:column="55">0<pos:position pos:line="90" pos:column="56"/></literal></expr>)<pos:position pos:line="90" pos:column="57"/></condition><then pos:line="90" pos:column="57"> <block pos:line="90" pos:column="58">{
        <decl_stmt><decl><type><name pos:line="91" pos:column="9">char<pos:position pos:line="91" pos:column="13"/></name> <modifier pos:line="91" pos:column="14">*<pos:position pos:line="91" pos:column="15"/></modifier></type><name pos:line="91" pos:column="15">t<pos:position pos:line="91" pos:column="16"/></name> <init pos:line="91" pos:column="17">= <expr><name pos:line="91" pos:column="19">token<pos:position pos:line="91" pos:column="24"/></name> <operator pos:line="91" pos:column="25">+<pos:position pos:line="91" pos:column="26"/></operator> <literal type="number" pos:line="91" pos:column="27">13<pos:position pos:line="91" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="91" pos:column="30"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="92" pos:column="9">s<pos:position pos:line="92" pos:column="10"/></name><operator pos:line="92" pos:column="10">-&gt;<pos:position pos:line="92" pos:column="15"/></operator><name pos:line="92" pos:column="12">tcp_keepalive<pos:position pos:line="92" pos:column="25"/></name><operator pos:line="92" pos:column="25">.<pos:position pos:line="92" pos:column="26"/></operator><name pos:line="92" pos:column="26">enabled<pos:position pos:line="92" pos:column="33"/></name></name> <operator pos:line="92" pos:column="34">=<pos:position pos:line="92" pos:column="35"/></operator> <literal type="number" pos:line="92" pos:column="36">1<pos:position pos:line="92" pos:column="37"/></literal></expr>;<pos:position pos:line="92" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="93" pos:column="9">s<pos:position pos:line="93" pos:column="10"/></name><operator pos:line="93" pos:column="10">-&gt;<pos:position pos:line="93" pos:column="15"/></operator><name pos:line="93" pos:column="12">tcp_keepalive<pos:position pos:line="93" pos:column="25"/></name><operator pos:line="93" pos:column="25">.<pos:position pos:line="93" pos:column="26"/></operator><name pos:line="93" pos:column="26">idle<pos:position pos:line="93" pos:column="30"/></name></name> <operator pos:line="93" pos:column="31">=<pos:position pos:line="93" pos:column="32"/></operator> <call><name pos:line="93" pos:column="33">atoi<pos:position pos:line="93" pos:column="37"/></name><argument_list pos:line="93" pos:column="37">(<argument><expr><name pos:line="93" pos:column="38">t<pos:position pos:line="93" pos:column="39"/></name></expr></argument>)<pos:position pos:line="93" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name pos:line="94" pos:column="9">t<pos:position pos:line="94" pos:column="10"/></name> <operator pos:line="94" pos:column="11">=<pos:position pos:line="94" pos:column="12"/></operator> <call><name pos:line="94" pos:column="13">strchr<pos:position pos:line="94" pos:column="19"/></name><argument_list pos:line="94" pos:column="19">(<argument><expr><name pos:line="94" pos:column="20">t<pos:position pos:line="94" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="94" pos:column="23">','<pos:position pos:line="94" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="28"/></expr_stmt>
        <if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">(<expr><name pos:line="95" pos:column="13">t<pos:position pos:line="95" pos:column="14"/></name></expr>)<pos:position pos:line="95" pos:column="15"/></condition><then pos:line="95" pos:column="15"> <block pos:line="95" pos:column="16">{
            <expr_stmt><expr><name pos:line="96" pos:column="13">t<pos:position pos:line="96" pos:column="14"/></name><operator pos:line="96" pos:column="14">++<pos:position pos:line="96" pos:column="16"/></operator></expr>;<pos:position pos:line="96" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="97" pos:column="13">s<pos:position pos:line="97" pos:column="14"/></name><operator pos:line="97" pos:column="14">-&gt;<pos:position pos:line="97" pos:column="19"/></operator><name pos:line="97" pos:column="16">tcp_keepalive<pos:position pos:line="97" pos:column="29"/></name><operator pos:line="97" pos:column="29">.<pos:position pos:line="97" pos:column="30"/></operator><name pos:line="97" pos:column="30">interval<pos:position pos:line="97" pos:column="38"/></name></name> <operator pos:line="97" pos:column="39">=<pos:position pos:line="97" pos:column="40"/></operator> <call><name pos:line="97" pos:column="41">atoi<pos:position pos:line="97" pos:column="45"/></name><argument_list pos:line="97" pos:column="45">(<argument><expr><name pos:line="97" pos:column="46">t<pos:position pos:line="97" pos:column="47"/></name></expr></argument>)<pos:position pos:line="97" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="49"/></expr_stmt>
            <expr_stmt><expr><name pos:line="98" pos:column="13">t<pos:position pos:line="98" pos:column="14"/></name> <operator pos:line="98" pos:column="15">=<pos:position pos:line="98" pos:column="16"/></operator> <call><name pos:line="98" pos:column="17">strchr<pos:position pos:line="98" pos:column="23"/></name><argument_list pos:line="98" pos:column="23">(<argument><expr><name pos:line="98" pos:column="24">t<pos:position pos:line="98" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="98" pos:column="27">','<pos:position pos:line="98" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="99" pos:column="10"/></block></then></if>
        <if pos:line="100" pos:column="9">if <condition pos:line="100" pos:column="12">(<expr><name pos:line="100" pos:column="13">t<pos:position pos:line="100" pos:column="14"/></name></expr>)<pos:position pos:line="100" pos:column="15"/></condition><then pos:line="100" pos:column="15"> <block pos:line="100" pos:column="16">{
            <expr_stmt><expr><name pos:line="101" pos:column="13">t<pos:position pos:line="101" pos:column="14"/></name><operator pos:line="101" pos:column="14">++<pos:position pos:line="101" pos:column="16"/></operator></expr>;<pos:position pos:line="101" pos:column="17"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="102" pos:column="13">s<pos:position pos:line="102" pos:column="14"/></name><operator pos:line="102" pos:column="14">-&gt;<pos:position pos:line="102" pos:column="19"/></operator><name pos:line="102" pos:column="16">tcp_keepalive<pos:position pos:line="102" pos:column="29"/></name><operator pos:line="102" pos:column="29">.<pos:position pos:line="102" pos:column="30"/></operator><name pos:line="102" pos:column="30">timeout<pos:position pos:line="102" pos:column="37"/></name></name> <operator pos:line="102" pos:column="38">=<pos:position pos:line="102" pos:column="39"/></operator> <call><name pos:line="102" pos:column="40">atoi<pos:position pos:line="102" pos:column="44"/></name><argument_list pos:line="102" pos:column="44">(<argument><expr><name pos:line="102" pos:column="45">t<pos:position pos:line="102" pos:column="46"/></name></expr></argument>)<pos:position pos:line="102" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="48"/></expr_stmt>
            <expr_stmt><expr><name pos:line="103" pos:column="13">t<pos:position pos:line="103" pos:column="14"/></name> <operator pos:line="103" pos:column="15">=<pos:position pos:line="103" pos:column="16"/></operator> <call><name pos:line="103" pos:column="17">strchr<pos:position pos:line="103" pos:column="23"/></name><argument_list pos:line="103" pos:column="23">(<argument><expr><name pos:line="103" pos:column="24">t<pos:position pos:line="103" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="103" pos:column="27">','<pos:position pos:line="103" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="103" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="104" pos:column="10"/></block></then></if>
<cpp:if pos:line="105" pos:column="1">#<cpp:directive pos:line="105" pos:column="2">if<pos:position pos:line="105" pos:column="4"/></cpp:directive> <expr><name pos:line="105" pos:column="5">USE_SSL<pos:position pos:line="105" pos:column="12"/></name></expr></cpp:if>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if></elseif> <elseif pos:line="106" pos:column="7">else <if pos:line="106" pos:column="12">if <condition pos:line="106" pos:column="15">(<expr><call><name pos:line="106" pos:column="16">strncmp<pos:position pos:line="106" pos:column="23"/></name><argument_list pos:line="106" pos:column="23">(<argument><expr><name pos:line="106" pos:column="24">token<pos:position pos:line="106" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="31">"cert="<pos:position pos:line="106" pos:column="38"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="40">5<pos:position pos:line="106" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="42"/></argument_list></call> <operator pos:line="106" pos:column="43">==<pos:position pos:line="106" pos:column="45"/></operator> <literal type="number" pos:line="106" pos:column="46">0<pos:position pos:line="106" pos:column="47"/></literal></expr>)<pos:position pos:line="106" pos:column="48"/></condition><then pos:line="106" pos:column="48"> <block pos:line="106" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="107" pos:column="9">safe_free<pos:position pos:line="107" pos:column="18"/></name><argument_list pos:line="107" pos:column="18">(<argument><expr><name><name pos:line="107" pos:column="19">s<pos:position pos:line="107" pos:column="20"/></name><operator pos:line="107" pos:column="20">-&gt;<pos:position pos:line="107" pos:column="25"/></operator><name pos:line="107" pos:column="22">cert<pos:position pos:line="107" pos:column="26"/></name></name></expr></argument>)<pos:position pos:line="107" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="108" pos:column="9">s<pos:position pos:line="108" pos:column="10"/></name><operator pos:line="108" pos:column="10">-&gt;<pos:position pos:line="108" pos:column="15"/></operator><name pos:line="108" pos:column="12">cert<pos:position pos:line="108" pos:column="16"/></name></name> <operator pos:line="108" pos:column="17">=<pos:position pos:line="108" pos:column="18"/></operator> <call><name pos:line="108" pos:column="19">xstrdup<pos:position pos:line="108" pos:column="26"/></name><argument_list pos:line="108" pos:column="26">(<argument><expr><name pos:line="108" pos:column="27">token<pos:position pos:line="108" pos:column="32"/></name> <operator pos:line="108" pos:column="33">+<pos:position pos:line="108" pos:column="34"/></operator> <literal type="number" pos:line="108" pos:column="35">5<pos:position pos:line="108" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if></elseif> <elseif pos:line="109" pos:column="7">else <if pos:line="109" pos:column="12">if <condition pos:line="109" pos:column="15">(<expr><call><name pos:line="109" pos:column="16">strncmp<pos:position pos:line="109" pos:column="23"/></name><argument_list pos:line="109" pos:column="23">(<argument><expr><name pos:line="109" pos:column="24">token<pos:position pos:line="109" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="109" pos:column="31">"key="<pos:position pos:line="109" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="109" pos:column="39">4<pos:position pos:line="109" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="109" pos:column="41"/></argument_list></call> <operator pos:line="109" pos:column="42">==<pos:position pos:line="109" pos:column="44"/></operator> <literal type="number" pos:line="109" pos:column="45">0<pos:position pos:line="109" pos:column="46"/></literal></expr>)<pos:position pos:line="109" pos:column="47"/></condition><then pos:line="109" pos:column="47"> <block pos:line="109" pos:column="48">{
        <expr_stmt><expr><call><name pos:line="110" pos:column="9">safe_free<pos:position pos:line="110" pos:column="18"/></name><argument_list pos:line="110" pos:column="18">(<argument><expr><name><name pos:line="110" pos:column="19">s<pos:position pos:line="110" pos:column="20"/></name><operator pos:line="110" pos:column="20">-&gt;<pos:position pos:line="110" pos:column="25"/></operator><name pos:line="110" pos:column="22">key<pos:position pos:line="110" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="111" pos:column="9">s<pos:position pos:line="111" pos:column="10"/></name><operator pos:line="111" pos:column="10">-&gt;<pos:position pos:line="111" pos:column="15"/></operator><name pos:line="111" pos:column="12">key<pos:position pos:line="111" pos:column="15"/></name></name> <operator pos:line="111" pos:column="16">=<pos:position pos:line="111" pos:column="17"/></operator> <call><name pos:line="111" pos:column="18">xstrdup<pos:position pos:line="111" pos:column="25"/></name><argument_list pos:line="111" pos:column="25">(<argument><expr><name pos:line="111" pos:column="26">token<pos:position pos:line="111" pos:column="31"/></name> <operator pos:line="111" pos:column="32">+<pos:position pos:line="111" pos:column="33"/></operator> <literal type="number" pos:line="111" pos:column="34">4<pos:position pos:line="111" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if></elseif> <elseif pos:line="112" pos:column="7">else <if pos:line="112" pos:column="12">if <condition pos:line="112" pos:column="15">(<expr><call><name pos:line="112" pos:column="16">strncmp<pos:position pos:line="112" pos:column="23"/></name><argument_list pos:line="112" pos:column="23">(<argument><expr><name pos:line="112" pos:column="24">token<pos:position pos:line="112" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="31">"version="<pos:position pos:line="112" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="43">8<pos:position pos:line="112" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="112" pos:column="45"/></argument_list></call> <operator pos:line="112" pos:column="46">==<pos:position pos:line="112" pos:column="48"/></operator> <literal type="number" pos:line="112" pos:column="49">0<pos:position pos:line="112" pos:column="50"/></literal></expr>)<pos:position pos:line="112" pos:column="51"/></condition><then pos:line="112" pos:column="51"> <block pos:line="112" pos:column="52">{
        <expr_stmt><expr><name><name pos:line="113" pos:column="9">s<pos:position pos:line="113" pos:column="10"/></name><operator pos:line="113" pos:column="10">-&gt;<pos:position pos:line="113" pos:column="15"/></operator><name pos:line="113" pos:column="12">version<pos:position pos:line="113" pos:column="19"/></name></name> <operator pos:line="113" pos:column="20">=<pos:position pos:line="113" pos:column="21"/></operator> <call><name pos:line="113" pos:column="22">xatoi<pos:position pos:line="113" pos:column="27"/></name><argument_list pos:line="113" pos:column="27">(<argument><expr><name pos:line="113" pos:column="28">token<pos:position pos:line="113" pos:column="33"/></name> <operator pos:line="113" pos:column="34">+<pos:position pos:line="113" pos:column="35"/></operator> <literal type="number" pos:line="113" pos:column="36">8<pos:position pos:line="113" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="113" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="39"/></expr_stmt>

        <if pos:line="115" pos:column="9">if <condition pos:line="115" pos:column="12">(<expr><name><name pos:line="115" pos:column="13">s<pos:position pos:line="115" pos:column="14"/></name><operator pos:line="115" pos:column="14">-&gt;<pos:position pos:line="115" pos:column="19"/></operator><name><name pos:line="115" pos:column="16">version<pos:position pos:line="115" pos:column="23"/></name> <argument_list type="generic" pos:line="115" pos:column="24">&lt; <argument><expr><literal type="number" pos:line="115" pos:column="26">1<pos:position pos:line="115" pos:column="27"/></literal> <operator pos:line="115" pos:column="28">||<pos:position pos:line="115" pos:column="30"/></operator> <name><name pos:line="115" pos:column="31">s<pos:position pos:line="115" pos:column="32"/></name><operator pos:line="115" pos:column="32">-&gt;<pos:position pos:line="115" pos:column="37"/></operator><name pos:line="115" pos:column="34">version<pos:position pos:line="115" pos:column="41"/></name></name></expr></argument> &gt;<pos:position pos:line="115" pos:column="46"/></argument_list></name></name> <literal type="number" pos:line="115" pos:column="44">4<pos:position pos:line="115" pos:column="45"/></literal></expr>)<pos:position pos:line="115" pos:column="46"/></condition><then pos:line="115" pos:column="46">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="116" pos:column="13">self_destruct<pos:position pos:line="116" pos:column="26"/></name><argument_list pos:line="116" pos:column="26">()<pos:position pos:line="116" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="29"/></expr_stmt></block></then></if>
    }<pos:position pos:line="117" pos:column="6"/></block></then></if></elseif> <elseif pos:line="117" pos:column="7">else <if pos:line="117" pos:column="12">if <condition pos:line="117" pos:column="15">(<expr><call><name pos:line="117" pos:column="16">strncmp<pos:position pos:line="117" pos:column="23"/></name><argument_list pos:line="117" pos:column="23">(<argument><expr><name pos:line="117" pos:column="24">token<pos:position pos:line="117" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="117" pos:column="31">"options="<pos:position pos:line="117" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="117" pos:column="43">8<pos:position pos:line="117" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="117" pos:column="45"/></argument_list></call> <operator pos:line="117" pos:column="46">==<pos:position pos:line="117" pos:column="48"/></operator> <literal type="number" pos:line="117" pos:column="49">0<pos:position pos:line="117" pos:column="50"/></literal></expr>)<pos:position pos:line="117" pos:column="51"/></condition><then pos:line="117" pos:column="51"> <block pos:line="117" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="118" pos:column="9">safe_free<pos:position pos:line="118" pos:column="18"/></name><argument_list pos:line="118" pos:column="18">(<argument><expr><name><name pos:line="118" pos:column="19">s<pos:position pos:line="118" pos:column="20"/></name><operator pos:line="118" pos:column="20">-&gt;<pos:position pos:line="118" pos:column="25"/></operator><name pos:line="118" pos:column="22">options<pos:position pos:line="118" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="119" pos:column="9">s<pos:position pos:line="119" pos:column="10"/></name><operator pos:line="119" pos:column="10">-&gt;<pos:position pos:line="119" pos:column="15"/></operator><name pos:line="119" pos:column="12">options<pos:position pos:line="119" pos:column="19"/></name></name> <operator pos:line="119" pos:column="20">=<pos:position pos:line="119" pos:column="21"/></operator> <call><name pos:line="119" pos:column="22">xstrdup<pos:position pos:line="119" pos:column="29"/></name><argument_list pos:line="119" pos:column="29">(<argument><expr><name pos:line="119" pos:column="30">token<pos:position pos:line="119" pos:column="35"/></name> <operator pos:line="119" pos:column="36">+<pos:position pos:line="119" pos:column="37"/></operator> <literal type="number" pos:line="119" pos:column="38">8<pos:position pos:line="119" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="119" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="120" pos:column="6"/></block></then></if></elseif> <elseif pos:line="120" pos:column="7">else <if pos:line="120" pos:column="12">if <condition pos:line="120" pos:column="15">(<expr><call><name pos:line="120" pos:column="16">strncmp<pos:position pos:line="120" pos:column="23"/></name><argument_list pos:line="120" pos:column="23">(<argument><expr><name pos:line="120" pos:column="24">token<pos:position pos:line="120" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="31">"cipher="<pos:position pos:line="120" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="120" pos:column="42">7<pos:position pos:line="120" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="120" pos:column="44"/></argument_list></call> <operator pos:line="120" pos:column="45">==<pos:position pos:line="120" pos:column="47"/></operator> <literal type="number" pos:line="120" pos:column="48">0<pos:position pos:line="120" pos:column="49"/></literal></expr>)<pos:position pos:line="120" pos:column="50"/></condition><then pos:line="120" pos:column="50"> <block pos:line="120" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="121" pos:column="9">safe_free<pos:position pos:line="121" pos:column="18"/></name><argument_list pos:line="121" pos:column="18">(<argument><expr><name><name pos:line="121" pos:column="19">s<pos:position pos:line="121" pos:column="20"/></name><operator pos:line="121" pos:column="20">-&gt;<pos:position pos:line="121" pos:column="25"/></operator><name pos:line="121" pos:column="22">cipher<pos:position pos:line="121" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="121" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="121" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="122" pos:column="9">s<pos:position pos:line="122" pos:column="10"/></name><operator pos:line="122" pos:column="10">-&gt;<pos:position pos:line="122" pos:column="15"/></operator><name pos:line="122" pos:column="12">cipher<pos:position pos:line="122" pos:column="18"/></name></name> <operator pos:line="122" pos:column="19">=<pos:position pos:line="122" pos:column="20"/></operator> <call><name pos:line="122" pos:column="21">xstrdup<pos:position pos:line="122" pos:column="28"/></name><argument_list pos:line="122" pos:column="28">(<argument><expr><name pos:line="122" pos:column="29">token<pos:position pos:line="122" pos:column="34"/></name> <operator pos:line="122" pos:column="35">+<pos:position pos:line="122" pos:column="36"/></operator> <literal type="number" pos:line="122" pos:column="37">7<pos:position pos:line="122" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="122" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="123" pos:column="6"/></block></then></if></elseif> <elseif pos:line="123" pos:column="7">else <if pos:line="123" pos:column="12">if <condition pos:line="123" pos:column="15">(<expr><call><name pos:line="123" pos:column="16">strncmp<pos:position pos:line="123" pos:column="23"/></name><argument_list pos:line="123" pos:column="23">(<argument><expr><name pos:line="123" pos:column="24">token<pos:position pos:line="123" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="123" pos:column="31">"clientca="<pos:position pos:line="123" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="123" pos:column="44">9<pos:position pos:line="123" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="123" pos:column="46"/></argument_list></call> <operator pos:line="123" pos:column="47">==<pos:position pos:line="123" pos:column="49"/></operator> <literal type="number" pos:line="123" pos:column="50">0<pos:position pos:line="123" pos:column="51"/></literal></expr>)<pos:position pos:line="123" pos:column="52"/></condition><then pos:line="123" pos:column="52"> <block pos:line="123" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="124" pos:column="9">safe_free<pos:position pos:line="124" pos:column="18"/></name><argument_list pos:line="124" pos:column="18">(<argument><expr><name><name pos:line="124" pos:column="19">s<pos:position pos:line="124" pos:column="20"/></name><operator pos:line="124" pos:column="20">-&gt;<pos:position pos:line="124" pos:column="25"/></operator><name pos:line="124" pos:column="22">clientca<pos:position pos:line="124" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="125" pos:column="9">s<pos:position pos:line="125" pos:column="10"/></name><operator pos:line="125" pos:column="10">-&gt;<pos:position pos:line="125" pos:column="15"/></operator><name pos:line="125" pos:column="12">clientca<pos:position pos:line="125" pos:column="20"/></name></name> <operator pos:line="125" pos:column="21">=<pos:position pos:line="125" pos:column="22"/></operator> <call><name pos:line="125" pos:column="23">xstrdup<pos:position pos:line="125" pos:column="30"/></name><argument_list pos:line="125" pos:column="30">(<argument><expr><name pos:line="125" pos:column="31">token<pos:position pos:line="125" pos:column="36"/></name> <operator pos:line="125" pos:column="37">+<pos:position pos:line="125" pos:column="38"/></operator> <literal type="number" pos:line="125" pos:column="39">9<pos:position pos:line="125" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="125" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="126" pos:column="6"/></block></then></if></elseif> <elseif pos:line="126" pos:column="7">else <if pos:line="126" pos:column="12">if <condition pos:line="126" pos:column="15">(<expr><call><name pos:line="126" pos:column="16">strncmp<pos:position pos:line="126" pos:column="23"/></name><argument_list pos:line="126" pos:column="23">(<argument><expr><name pos:line="126" pos:column="24">token<pos:position pos:line="126" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="126" pos:column="31">"cafile="<pos:position pos:line="126" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="126" pos:column="42">7<pos:position pos:line="126" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="44"/></argument_list></call> <operator pos:line="126" pos:column="45">==<pos:position pos:line="126" pos:column="47"/></operator> <literal type="number" pos:line="126" pos:column="48">0<pos:position pos:line="126" pos:column="49"/></literal></expr>)<pos:position pos:line="126" pos:column="50"/></condition><then pos:line="126" pos:column="50"> <block pos:line="126" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="127" pos:column="9">safe_free<pos:position pos:line="127" pos:column="18"/></name><argument_list pos:line="127" pos:column="18">(<argument><expr><name><name pos:line="127" pos:column="19">s<pos:position pos:line="127" pos:column="20"/></name><operator pos:line="127" pos:column="20">-&gt;<pos:position pos:line="127" pos:column="25"/></operator><name pos:line="127" pos:column="22">cafile<pos:position pos:line="127" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="127" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="128" pos:column="9">s<pos:position pos:line="128" pos:column="10"/></name><operator pos:line="128" pos:column="10">-&gt;<pos:position pos:line="128" pos:column="15"/></operator><name pos:line="128" pos:column="12">cafile<pos:position pos:line="128" pos:column="18"/></name></name> <operator pos:line="128" pos:column="19">=<pos:position pos:line="128" pos:column="20"/></operator> <call><name pos:line="128" pos:column="21">xstrdup<pos:position pos:line="128" pos:column="28"/></name><argument_list pos:line="128" pos:column="28">(<argument><expr><name pos:line="128" pos:column="29">token<pos:position pos:line="128" pos:column="34"/></name> <operator pos:line="128" pos:column="35">+<pos:position pos:line="128" pos:column="36"/></operator> <literal type="number" pos:line="128" pos:column="37">7<pos:position pos:line="128" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="128" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="128" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="129" pos:column="6"/></block></then></if></elseif> <elseif pos:line="129" pos:column="7">else <if pos:line="129" pos:column="12">if <condition pos:line="129" pos:column="15">(<expr><call><name pos:line="129" pos:column="16">strncmp<pos:position pos:line="129" pos:column="23"/></name><argument_list pos:line="129" pos:column="23">(<argument><expr><name pos:line="129" pos:column="24">token<pos:position pos:line="129" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="31">"capath="<pos:position pos:line="129" pos:column="40"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="129" pos:column="42">7<pos:position pos:line="129" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="44"/></argument_list></call> <operator pos:line="129" pos:column="45">==<pos:position pos:line="129" pos:column="47"/></operator> <literal type="number" pos:line="129" pos:column="48">0<pos:position pos:line="129" pos:column="49"/></literal></expr>)<pos:position pos:line="129" pos:column="50"/></condition><then pos:line="129" pos:column="50"> <block pos:line="129" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="130" pos:column="9">safe_free<pos:position pos:line="130" pos:column="18"/></name><argument_list pos:line="130" pos:column="18">(<argument><expr><name><name pos:line="130" pos:column="19">s<pos:position pos:line="130" pos:column="20"/></name><operator pos:line="130" pos:column="20">-&gt;<pos:position pos:line="130" pos:column="25"/></operator><name pos:line="130" pos:column="22">capath<pos:position pos:line="130" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="131" pos:column="9">s<pos:position pos:line="131" pos:column="10"/></name><operator pos:line="131" pos:column="10">-&gt;<pos:position pos:line="131" pos:column="15"/></operator><name pos:line="131" pos:column="12">capath<pos:position pos:line="131" pos:column="18"/></name></name> <operator pos:line="131" pos:column="19">=<pos:position pos:line="131" pos:column="20"/></operator> <call><name pos:line="131" pos:column="21">xstrdup<pos:position pos:line="131" pos:column="28"/></name><argument_list pos:line="131" pos:column="28">(<argument><expr><name pos:line="131" pos:column="29">token<pos:position pos:line="131" pos:column="34"/></name> <operator pos:line="131" pos:column="35">+<pos:position pos:line="131" pos:column="36"/></operator> <literal type="number" pos:line="131" pos:column="37">7<pos:position pos:line="131" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="132" pos:column="6"/></block></then></if></elseif> <elseif pos:line="132" pos:column="7">else <if pos:line="132" pos:column="12">if <condition pos:line="132" pos:column="15">(<expr><call><name pos:line="132" pos:column="16">strncmp<pos:position pos:line="132" pos:column="23"/></name><argument_list pos:line="132" pos:column="23">(<argument><expr><name pos:line="132" pos:column="24">token<pos:position pos:line="132" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="132" pos:column="31">"crlfile="<pos:position pos:line="132" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="132" pos:column="43">8<pos:position pos:line="132" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="132" pos:column="45"/></argument_list></call> <operator pos:line="132" pos:column="46">==<pos:position pos:line="132" pos:column="48"/></operator> <literal type="number" pos:line="132" pos:column="49">0<pos:position pos:line="132" pos:column="50"/></literal></expr>)<pos:position pos:line="132" pos:column="51"/></condition><then pos:line="132" pos:column="51"> <block pos:line="132" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="133" pos:column="9">safe_free<pos:position pos:line="133" pos:column="18"/></name><argument_list pos:line="133" pos:column="18">(<argument><expr><name><name pos:line="133" pos:column="19">s<pos:position pos:line="133" pos:column="20"/></name><operator pos:line="133" pos:column="20">-&gt;<pos:position pos:line="133" pos:column="25"/></operator><name pos:line="133" pos:column="22">crlfile<pos:position pos:line="133" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="133" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="134" pos:column="9">s<pos:position pos:line="134" pos:column="10"/></name><operator pos:line="134" pos:column="10">-&gt;<pos:position pos:line="134" pos:column="15"/></operator><name pos:line="134" pos:column="12">crlfile<pos:position pos:line="134" pos:column="19"/></name></name> <operator pos:line="134" pos:column="20">=<pos:position pos:line="134" pos:column="21"/></operator> <call><name pos:line="134" pos:column="22">xstrdup<pos:position pos:line="134" pos:column="29"/></name><argument_list pos:line="134" pos:column="29">(<argument><expr><name pos:line="134" pos:column="30">token<pos:position pos:line="134" pos:column="35"/></name> <operator pos:line="134" pos:column="36">+<pos:position pos:line="134" pos:column="37"/></operator> <literal type="number" pos:line="134" pos:column="38">8<pos:position pos:line="134" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="135" pos:column="6"/></block></then></if></elseif> <elseif pos:line="135" pos:column="7">else <if pos:line="135" pos:column="12">if <condition pos:line="135" pos:column="15">(<expr><call><name pos:line="135" pos:column="16">strncmp<pos:position pos:line="135" pos:column="23"/></name><argument_list pos:line="135" pos:column="23">(<argument><expr><name pos:line="135" pos:column="24">token<pos:position pos:line="135" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="135" pos:column="31">"dhparams="<pos:position pos:line="135" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="135" pos:column="44">9<pos:position pos:line="135" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="135" pos:column="46"/></argument_list></call> <operator pos:line="135" pos:column="47">==<pos:position pos:line="135" pos:column="49"/></operator> <literal type="number" pos:line="135" pos:column="50">0<pos:position pos:line="135" pos:column="51"/></literal></expr>)<pos:position pos:line="135" pos:column="52"/></condition><then pos:line="135" pos:column="52"> <block pos:line="135" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="136" pos:column="9">safe_free<pos:position pos:line="136" pos:column="18"/></name><argument_list pos:line="136" pos:column="18">(<argument><expr><name><name pos:line="136" pos:column="19">s<pos:position pos:line="136" pos:column="20"/></name><operator pos:line="136" pos:column="20">-&gt;<pos:position pos:line="136" pos:column="25"/></operator><name pos:line="136" pos:column="22">dhfile<pos:position pos:line="136" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="136" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="137" pos:column="9">s<pos:position pos:line="137" pos:column="10"/></name><operator pos:line="137" pos:column="10">-&gt;<pos:position pos:line="137" pos:column="15"/></operator><name pos:line="137" pos:column="12">dhfile<pos:position pos:line="137" pos:column="18"/></name></name> <operator pos:line="137" pos:column="19">=<pos:position pos:line="137" pos:column="20"/></operator> <call><name pos:line="137" pos:column="21">xstrdup<pos:position pos:line="137" pos:column="28"/></name><argument_list pos:line="137" pos:column="28">(<argument><expr><name pos:line="137" pos:column="29">token<pos:position pos:line="137" pos:column="34"/></name> <operator pos:line="137" pos:column="35">+<pos:position pos:line="137" pos:column="36"/></operator> <literal type="number" pos:line="137" pos:column="37">9<pos:position pos:line="137" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="137" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="137" pos:column="40"/></expr_stmt>
    }<pos:position pos:line="138" pos:column="6"/></block></then></if></elseif> <elseif pos:line="138" pos:column="7">else <if pos:line="138" pos:column="12">if <condition pos:line="138" pos:column="15">(<expr><call><name pos:line="138" pos:column="16">strncmp<pos:position pos:line="138" pos:column="23"/></name><argument_list pos:line="138" pos:column="23">(<argument><expr><name pos:line="138" pos:column="24">token<pos:position pos:line="138" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="138" pos:column="31">"sslflags="<pos:position pos:line="138" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="138" pos:column="44">9<pos:position pos:line="138" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="138" pos:column="46"/></argument_list></call> <operator pos:line="138" pos:column="47">==<pos:position pos:line="138" pos:column="49"/></operator> <literal type="number" pos:line="138" pos:column="50">0<pos:position pos:line="138" pos:column="51"/></literal></expr>)<pos:position pos:line="138" pos:column="52"/></condition><then pos:line="138" pos:column="52"> <block pos:line="138" pos:column="53">{
        <expr_stmt><expr><call><name pos:line="139" pos:column="9">safe_free<pos:position pos:line="139" pos:column="18"/></name><argument_list pos:line="139" pos:column="18">(<argument><expr><name><name pos:line="139" pos:column="19">s<pos:position pos:line="139" pos:column="20"/></name><operator pos:line="139" pos:column="20">-&gt;<pos:position pos:line="139" pos:column="25"/></operator><name pos:line="139" pos:column="22">sslflags<pos:position pos:line="139" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="139" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="139" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="140" pos:column="9">s<pos:position pos:line="140" pos:column="10"/></name><operator pos:line="140" pos:column="10">-&gt;<pos:position pos:line="140" pos:column="15"/></operator><name pos:line="140" pos:column="12">sslflags<pos:position pos:line="140" pos:column="20"/></name></name> <operator pos:line="140" pos:column="21">=<pos:position pos:line="140" pos:column="22"/></operator> <call><name pos:line="140" pos:column="23">xstrdup<pos:position pos:line="140" pos:column="30"/></name><argument_list pos:line="140" pos:column="30">(<argument><expr><name pos:line="140" pos:column="31">token<pos:position pos:line="140" pos:column="36"/></name> <operator pos:line="140" pos:column="37">+<pos:position pos:line="140" pos:column="38"/></operator> <literal type="number" pos:line="140" pos:column="39">9<pos:position pos:line="140" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="141" pos:column="6"/></block></then></if></elseif> <elseif pos:line="141" pos:column="7">else <if pos:line="141" pos:column="12">if <condition pos:line="141" pos:column="15">(<expr><call><name pos:line="141" pos:column="16">strncmp<pos:position pos:line="141" pos:column="23"/></name><argument_list pos:line="141" pos:column="23">(<argument><expr><name pos:line="141" pos:column="24">token<pos:position pos:line="141" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="141" pos:column="31">"sslcontext="<pos:position pos:line="141" pos:column="44"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="141" pos:column="46">11<pos:position pos:line="141" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="141" pos:column="49"/></argument_list></call> <operator pos:line="141" pos:column="50">==<pos:position pos:line="141" pos:column="52"/></operator> <literal type="number" pos:line="141" pos:column="53">0<pos:position pos:line="141" pos:column="54"/></literal></expr>)<pos:position pos:line="141" pos:column="55"/></condition><then pos:line="141" pos:column="55"> <block pos:line="141" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="142" pos:column="9">safe_free<pos:position pos:line="142" pos:column="18"/></name><argument_list pos:line="142" pos:column="18">(<argument><expr><name><name pos:line="142" pos:column="19">s<pos:position pos:line="142" pos:column="20"/></name><operator pos:line="142" pos:column="20">-&gt;<pos:position pos:line="142" pos:column="25"/></operator><name pos:line="142" pos:column="22">sslContextSessionId<pos:position pos:line="142" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="142" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="143" pos:column="9">s<pos:position pos:line="143" pos:column="10"/></name><operator pos:line="143" pos:column="10">-&gt;<pos:position pos:line="143" pos:column="15"/></operator><name pos:line="143" pos:column="12">sslContextSessionId<pos:position pos:line="143" pos:column="31"/></name></name> <operator pos:line="143" pos:column="32">=<pos:position pos:line="143" pos:column="33"/></operator> <call><name pos:line="143" pos:column="34">xstrdup<pos:position pos:line="143" pos:column="41"/></name><argument_list pos:line="143" pos:column="41">(<argument><expr><name pos:line="143" pos:column="42">token<pos:position pos:line="143" pos:column="47"/></name> <operator pos:line="143" pos:column="48">+<pos:position pos:line="143" pos:column="49"/></operator> <literal type="number" pos:line="143" pos:column="50">11<pos:position pos:line="143" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="143" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="144" pos:column="6"/></block></then></if></elseif> <elseif pos:line="144" pos:column="7">else <if pos:line="144" pos:column="12">if <condition pos:line="144" pos:column="15">(<expr><call><name pos:line="144" pos:column="16">strcmp<pos:position pos:line="144" pos:column="22"/></name><argument_list pos:line="144" pos:column="22">(<argument><expr><name pos:line="144" pos:column="23">token<pos:position pos:line="144" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="30">"generate-host-certificates"<pos:position pos:line="144" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="144" pos:column="59"/></argument_list></call> <operator pos:line="144" pos:column="60">==<pos:position pos:line="144" pos:column="62"/></operator> <literal type="number" pos:line="144" pos:column="63">0<pos:position pos:line="144" pos:column="64"/></literal></expr>)<pos:position pos:line="144" pos:column="65"/></condition><then pos:line="144" pos:column="65"> <block pos:line="144" pos:column="66">{
        <expr_stmt><expr><name><name pos:line="145" pos:column="9">s<pos:position pos:line="145" pos:column="10"/></name><operator pos:line="145" pos:column="10">-&gt;<pos:position pos:line="145" pos:column="15"/></operator><name pos:line="145" pos:column="12">generateHostCertificates<pos:position pos:line="145" pos:column="36"/></name></name> <operator pos:line="145" pos:column="37">=<pos:position pos:line="145" pos:column="38"/></operator> <literal type="boolean" pos:line="145" pos:column="39">true<pos:position pos:line="145" pos:column="43"/></literal></expr>;<pos:position pos:line="145" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="146" pos:column="6"/></block></then></if></elseif> <elseif pos:line="146" pos:column="7">else <if pos:line="146" pos:column="12">if <condition pos:line="146" pos:column="15">(<expr><call><name pos:line="146" pos:column="16">strcmp<pos:position pos:line="146" pos:column="22"/></name><argument_list pos:line="146" pos:column="22">(<argument><expr><name pos:line="146" pos:column="23">token<pos:position pos:line="146" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="30">"generate-host-certificates=on"<pos:position pos:line="146" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="62"/></argument_list></call> <operator pos:line="146" pos:column="63">==<pos:position pos:line="146" pos:column="65"/></operator> <literal type="number" pos:line="146" pos:column="66">0<pos:position pos:line="146" pos:column="67"/></literal></expr>)<pos:position pos:line="146" pos:column="68"/></condition><then pos:line="146" pos:column="68"> <block pos:line="146" pos:column="69">{
        <expr_stmt><expr><name><name pos:line="147" pos:column="9">s<pos:position pos:line="147" pos:column="10"/></name><operator pos:line="147" pos:column="10">-&gt;<pos:position pos:line="147" pos:column="15"/></operator><name pos:line="147" pos:column="12">generateHostCertificates<pos:position pos:line="147" pos:column="36"/></name></name> <operator pos:line="147" pos:column="37">=<pos:position pos:line="147" pos:column="38"/></operator> <literal type="boolean" pos:line="147" pos:column="39">true<pos:position pos:line="147" pos:column="43"/></literal></expr>;<pos:position pos:line="147" pos:column="44"/></expr_stmt>
    }<pos:position pos:line="148" pos:column="6"/></block></then></if></elseif> <elseif pos:line="148" pos:column="7">else <if pos:line="148" pos:column="12">if <condition pos:line="148" pos:column="15">(<expr><call><name pos:line="148" pos:column="16">strcmp<pos:position pos:line="148" pos:column="22"/></name><argument_list pos:line="148" pos:column="22">(<argument><expr><name pos:line="148" pos:column="23">token<pos:position pos:line="148" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="148" pos:column="30">"generate-host-certificates=off"<pos:position pos:line="148" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="148" pos:column="63"/></argument_list></call> <operator pos:line="148" pos:column="64">==<pos:position pos:line="148" pos:column="66"/></operator> <literal type="number" pos:line="148" pos:column="67">0<pos:position pos:line="148" pos:column="68"/></literal></expr>)<pos:position pos:line="148" pos:column="69"/></condition><then pos:line="148" pos:column="69"> <block pos:line="148" pos:column="70">{
        <expr_stmt><expr><name><name pos:line="149" pos:column="9">s<pos:position pos:line="149" pos:column="10"/></name><operator pos:line="149" pos:column="10">-&gt;<pos:position pos:line="149" pos:column="15"/></operator><name pos:line="149" pos:column="12">generateHostCertificates<pos:position pos:line="149" pos:column="36"/></name></name> <operator pos:line="149" pos:column="37">=<pos:position pos:line="149" pos:column="38"/></operator> <literal type="boolean" pos:line="149" pos:column="39">false<pos:position pos:line="149" pos:column="44"/></literal></expr>;<pos:position pos:line="149" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="150" pos:column="6"/></block></then></if></elseif> <elseif pos:line="150" pos:column="7">else <if pos:line="150" pos:column="12">if <condition pos:line="150" pos:column="15">(<expr><call><name pos:line="150" pos:column="16">strncmp<pos:position pos:line="150" pos:column="23"/></name><argument_list pos:line="150" pos:column="23">(<argument><expr><name pos:line="150" pos:column="24">token<pos:position pos:line="150" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="150" pos:column="31">"dynamic_cert_mem_cache_size="<pos:position pos:line="150" pos:column="61"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="150" pos:column="63">28<pos:position pos:line="150" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="150" pos:column="66"/></argument_list></call> <operator pos:line="150" pos:column="67">==<pos:position pos:line="150" pos:column="69"/></operator> <literal type="number" pos:line="150" pos:column="70">0<pos:position pos:line="150" pos:column="71"/></literal></expr>)<pos:position pos:line="150" pos:column="72"/></condition><then pos:line="150" pos:column="72"> <block pos:line="150" pos:column="73">{
        <expr_stmt><expr><call><name pos:line="151" pos:column="9">parseBytesOptionValue<pos:position pos:line="151" pos:column="30"/></name><argument_list pos:line="151" pos:column="30">(<argument><expr><operator pos:line="151" pos:column="31">&amp;<pos:position pos:line="151" pos:column="36"/></operator><name><name pos:line="151" pos:column="32">s<pos:position pos:line="151" pos:column="33"/></name><operator pos:line="151" pos:column="33">-&gt;<pos:position pos:line="151" pos:column="38"/></operator><name pos:line="151" pos:column="35">dynamicCertMemCacheSize<pos:position pos:line="151" pos:column="58"/></name></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="60">B_BYTES_STR<pos:position pos:line="151" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="151" pos:column="73">token<pos:position pos:line="151" pos:column="78"/></name> <operator pos:line="151" pos:column="79">+<pos:position pos:line="151" pos:column="80"/></operator> <literal type="number" pos:line="151" pos:column="81">28<pos:position pos:line="151" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="151" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="151" pos:column="85"/></expr_stmt>
    }<pos:position pos:line="152" pos:column="6"/></block></then></if></elseif> <elseif pos:line="152" pos:column="7">else <if pos:line="152" pos:column="12">if <condition pos:line="152" pos:column="15">(<expr><call><name pos:line="152" pos:column="16">strcasecmp<pos:position pos:line="152" pos:column="26"/></name><argument_list pos:line="152" pos:column="26">(<argument><expr><name pos:line="152" pos:column="27">token<pos:position pos:line="152" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="152" pos:column="34">"sslBump"<pos:position pos:line="152" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="152" pos:column="44"/></argument_list></call> <operator pos:line="152" pos:column="45">==<pos:position pos:line="152" pos:column="47"/></operator> <literal type="number" pos:line="152" pos:column="48">0<pos:position pos:line="152" pos:column="49"/></literal></expr>)<pos:position pos:line="152" pos:column="50"/></condition><then pos:line="152" pos:column="50"> <block pos:line="152" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="153" pos:column="9">debugs<pos:position pos:line="153" pos:column="15"/></name><argument_list pos:line="153" pos:column="15">(<argument><expr><literal type="number" pos:line="153" pos:column="16">3<pos:position pos:line="153" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="153" pos:column="19">DBG_CRITICAL<pos:position pos:line="153" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="153" pos:column="33">"WARNING: '"<pos:position pos:line="153" pos:column="45"/></literal> <operator pos:line="153" pos:column="46">&lt;&lt;<pos:position pos:line="153" pos:column="54"/></operator> <name pos:line="153" pos:column="49">token<pos:position pos:line="153" pos:column="54"/></name> <operator pos:line="153" pos:column="55">&lt;&lt;<pos:position pos:line="153" pos:column="63"/></operator> <literal type="string" pos:line="153" pos:column="58">"' is deprecated "<pos:position pos:line="153" pos:column="76"/></literal> <operator pos:line="153" pos:column="77">&lt;&lt;<pos:position pos:line="153" pos:column="85"/></operator>
               <literal type="string" pos:line="154" pos:column="16">"in http_port. Use 'ssl-bump' instead."<pos:position pos:line="154" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="154" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="155" pos:column="9">s<pos:position pos:line="155" pos:column="10"/></name><operator pos:line="155" pos:column="10">-&gt;<pos:position pos:line="155" pos:column="15"/></operator><name pos:line="155" pos:column="12">sslBump<pos:position pos:line="155" pos:column="19"/></name></name> <operator pos:line="155" pos:column="20">=<pos:position pos:line="155" pos:column="21"/></operator> <literal type="number" pos:line="155" pos:column="22">1<pos:position pos:line="155" pos:column="23"/></literal></expr>;<pos:position pos:line="155" pos:column="24"/></expr_stmt> <comment type="line" pos:line="155" pos:column="25">// accelerated when bumped, otherwise not</comment>
    }<pos:position pos:line="156" pos:column="6"/></block></then></if></elseif> <elseif pos:line="156" pos:column="7">else <if pos:line="156" pos:column="12">if <condition pos:line="156" pos:column="15">(<expr><call><name pos:line="156" pos:column="16">strcmp<pos:position pos:line="156" pos:column="22"/></name><argument_list pos:line="156" pos:column="22">(<argument><expr><name pos:line="156" pos:column="23">token<pos:position pos:line="156" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="156" pos:column="30">"ssl-bump"<pos:position pos:line="156" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="156" pos:column="41"/></argument_list></call> <operator pos:line="156" pos:column="42">==<pos:position pos:line="156" pos:column="44"/></operator> <literal type="number" pos:line="156" pos:column="45">0<pos:position pos:line="156" pos:column="46"/></literal></expr>)<pos:position pos:line="156" pos:column="47"/></condition><then pos:line="156" pos:column="47"> <block pos:line="156" pos:column="48">{
        <expr_stmt><expr><name><name pos:line="157" pos:column="9">s<pos:position pos:line="157" pos:column="10"/></name><operator pos:line="157" pos:column="10">-&gt;<pos:position pos:line="157" pos:column="15"/></operator><name pos:line="157" pos:column="12">sslBump<pos:position pos:line="157" pos:column="19"/></name></name> <operator pos:line="157" pos:column="20">=<pos:position pos:line="157" pos:column="21"/></operator> <literal type="number" pos:line="157" pos:column="22">1<pos:position pos:line="157" pos:column="23"/></literal></expr>;<pos:position pos:line="157" pos:column="24"/></expr_stmt> <comment type="line" pos:line="157" pos:column="25">// accelerated when bumped, otherwise not</comment>
<cpp:endif pos:line="158" pos:column="1">#<cpp:directive pos:line="158" pos:column="2">endif<pos:position pos:line="158" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="159" pos:column="6"/></block></then></if></elseif> <else pos:line="159" pos:column="7">else <block pos:line="159" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="160" pos:column="9">self_destruct<pos:position pos:line="160" pos:column="22"/></name><argument_list pos:line="160" pos:column="22">()<pos:position pos:line="160" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="161" pos:column="6"/></block></else></if>

    <if pos:line="163" pos:column="5">if <condition pos:line="163" pos:column="8">( <expr><name><name pos:line="163" pos:column="10">s<pos:position pos:line="163" pos:column="11"/></name><operator pos:line="163" pos:column="11">-&gt;<pos:position pos:line="163" pos:column="16"/></operator><name pos:line="163" pos:column="13">spoof_client_ip<pos:position pos:line="163" pos:column="28"/></name></name> <operator pos:line="163" pos:column="29">&amp;&amp;<pos:position pos:line="163" pos:column="39"/></operator> <operator pos:line="163" pos:column="32">(<pos:position pos:line="163" pos:column="33"/></operator><name><name pos:line="163" pos:column="33">s<pos:position pos:line="163" pos:column="34"/></name><operator pos:line="163" pos:column="34">-&gt;<pos:position pos:line="163" pos:column="39"/></operator><name pos:line="163" pos:column="36">intercepted<pos:position pos:line="163" pos:column="47"/></name></name> <operator pos:line="163" pos:column="48">||<pos:position pos:line="163" pos:column="50"/></operator> <name><name pos:line="163" pos:column="51">s<pos:position pos:line="163" pos:column="52"/></name><operator pos:line="163" pos:column="52">-&gt;<pos:position pos:line="163" pos:column="57"/></operator><name pos:line="163" pos:column="54">accel<pos:position pos:line="163" pos:column="59"/></name></name><operator pos:line="163" pos:column="59">)<pos:position pos:line="163" pos:column="60"/></operator></expr> )<pos:position pos:line="163" pos:column="62"/></condition><then pos:line="163" pos:column="62"> <block pos:line="163" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="164" pos:column="9">debugs<pos:position pos:line="164" pos:column="15"/></name><argument_list pos:line="164" pos:column="15">(<argument><expr><literal type="number" pos:line="164" pos:column="16">3<pos:position pos:line="164" pos:column="17"/></literal></expr></argument>,<argument><expr><name pos:line="164" pos:column="18">DBG_CRITICAL<pos:position pos:line="164" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="164" pos:column="32">"http(s)_port: TPROXY option requires its own interception port. It cannot be shared."<pos:position pos:line="164" pos:column="118"/></literal></expr></argument>)<pos:position pos:line="164" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="164" pos:column="120"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="165" pos:column="9">self_destruct<pos:position pos:line="165" pos:column="22"/></name><argument_list pos:line="165" pos:column="22">()<pos:position pos:line="165" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="165" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="166" pos:column="6"/></block></then></if>
}<pos:position pos:line="167" pos:column="2"/></block></function></unit>

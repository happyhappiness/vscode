<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5839_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">validate_user<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">char<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">username<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">char<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">password<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name><name pos:line="4" pos:column="10">domaincontrollers_t<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">::<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">iterator<pos:position pos:line="4" pos:column="39"/></name></name></type> <name pos:line="4" pos:column="40">dc<pos:position pos:line="4" pos:column="42"/></name> <init pos:line="4" pos:column="43">= <expr><call><name><name pos:line="4" pos:column="45">domaincontrollers<pos:position pos:line="4" pos:column="62"/></name><operator pos:line="4" pos:column="62">.<pos:position pos:line="4" pos:column="63"/></operator><name pos:line="4" pos:column="63">begin<pos:position pos:line="4" pos:column="68"/></name></name><argument_list pos:line="4" pos:column="68">()<pos:position pos:line="4" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="71"/></init> <condition><expr><name pos:line="4" pos:column="72">dc<pos:position pos:line="4" pos:column="74"/></name> <operator pos:line="4" pos:column="75">!=<pos:position pos:line="4" pos:column="77"/></operator> <call><name><name pos:line="4" pos:column="78">domaincontrollers<pos:position pos:line="4" pos:column="95"/></name><operator pos:line="4" pos:column="95">.<pos:position pos:line="4" pos:column="96"/></operator><name pos:line="4" pos:column="96">end<pos:position pos:line="4" pos:column="99"/></name></name><argument_list pos:line="4" pos:column="99">()<pos:position pos:line="4" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="102"/></condition> <incr><expr><operator pos:line="4" pos:column="103">++<pos:position pos:line="4" pos:column="105"/></operator><name pos:line="4" pos:column="105">dc<pos:position pos:line="4" pos:column="107"/></name></expr></incr>)<pos:position pos:line="4" pos:column="108"/></control> <block pos:line="4" pos:column="109">{
        <comment type="line" pos:line="5" pos:column="9">//std::cerr &lt;&lt; "testing against " &lt;&lt; dc-&gt;server &lt;&lt; std::endl;</comment>
        <decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">int<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">rv<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><call><name pos:line="6" pos:column="24">Valid_User<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">username<pos:position pos:line="6" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="45">password<pos:position pos:line="6" pos:column="53"/></name></expr></argument>, <argument><expr><call><name><name pos:line="6" pos:column="55">dc<pos:position pos:line="6" pos:column="57"/></name><operator pos:line="6" pos:column="57">-&gt;<pos:position pos:line="6" pos:column="62"/></operator><name pos:line="6" pos:column="59">server<pos:position pos:line="6" pos:column="65"/></name><operator pos:line="6" pos:column="65">.<pos:position pos:line="6" pos:column="66"/></operator><name pos:line="6" pos:column="66">c_str<pos:position pos:line="6" pos:column="71"/></name></name><argument_list pos:line="6" pos:column="71">()<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="6" pos:column="75">NULL<pos:position pos:line="6" pos:column="79"/></name></expr></argument>, <argument><expr><call><name><name pos:line="6" pos:column="81">dc<pos:position pos:line="6" pos:column="83"/></name><operator pos:line="6" pos:column="83">-&gt;<pos:position pos:line="6" pos:column="88"/></operator><name pos:line="6" pos:column="85">domain<pos:position pos:line="6" pos:column="91"/></name><operator pos:line="6" pos:column="91">.<pos:position pos:line="6" pos:column="92"/></operator><name pos:line="6" pos:column="92">c_str<pos:position pos:line="6" pos:column="97"/></name></name><argument_list pos:line="6" pos:column="97">()<pos:position pos:line="6" pos:column="99"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="100"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="101"/></decl_stmt>
        <comment type="line" pos:line="7" pos:column="9">//std::cerr &lt;&lt; "check result: " &lt;&lt; rv &lt;&lt; std::endl;</comment>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name pos:line="8" pos:column="13">rv<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">NTV_NO_ERROR<pos:position pos:line="8" pos:column="31"/></name></expr>)<pos:position pos:line="8" pos:column="32"/></condition><then pos:line="8" pos:column="32">
            <block type="pseudo"><return pos:line="9" pos:column="13">return <expr><literal type="boolean" pos:line="9" pos:column="20">true<pos:position pos:line="9" pos:column="24"/></literal></expr>;<pos:position pos:line="9" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="10" pos:column="6"/></block></for>
    <return pos:line="11" pos:column="5">return <expr><literal type="boolean" pos:line="11" pos:column="12">false<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

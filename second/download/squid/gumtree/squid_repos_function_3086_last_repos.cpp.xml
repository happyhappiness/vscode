<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3086_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">sendControlMsg<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">HttpControlMsg<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">msg<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">isOpen<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">()<pos:position pos:line="4" pos:column="18"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="19"/></condition><then pos:line="4" pos:column="19"> <block pos:line="4" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">33<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">3<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">HERE<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">&lt;&lt;<pos:position pos:line="5" pos:column="36"/></operator> <literal type="string" pos:line="5" pos:column="31">"ignoring 1xx due to earlier closure"<pos:position pos:line="5" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="70"/></expr_stmt>
        <return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="9" pos:column="5">// HTTP/1 1xx status messages are only valid when there is a transaction to trigger them</comment>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><call><name><name pos:line="10" pos:column="10">pipeline<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">empty<pos:position pos:line="10" pos:column="24"/></name></name><argument_list pos:line="10" pos:column="24">()<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="27"/></condition><then pos:line="10" pos:column="27"> <block pos:line="10" pos:column="28">{
        <decl_stmt><decl><type><name><name pos:line="11" pos:column="9">HttpReply<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">::<pos:position pos:line="11" pos:column="20"/></operator><name pos:line="11" pos:column="20">Pointer<pos:position pos:line="11" pos:column="27"/></name></name></type> <name pos:line="11" pos:column="28">rep<pos:position pos:line="11" pos:column="31"/></name><argument_list pos:line="11" pos:column="31">(<argument><expr><name><name pos:line="11" pos:column="32">msg<pos:position pos:line="11" pos:column="35"/></name><operator pos:line="11" pos:column="35">.<pos:position pos:line="11" pos:column="36"/></operator><name pos:line="11" pos:column="36">reply<pos:position pos:line="11" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="42"/></argument_list></decl>;<pos:position pos:line="11" pos:column="43"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">Must<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">rep<pos:position pos:line="12" pos:column="17"/></name></expr></argument>)<pos:position pos:line="12" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="19"/></expr_stmt>
        <comment type="line" pos:line="13" pos:column="9">// remember the callback</comment>
        <expr_stmt><expr><name pos:line="14" pos:column="9">cbControlMsgSent<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">=<pos:position pos:line="14" pos:column="27"/></operator> <name><name pos:line="14" pos:column="28">msg<pos:position pos:line="14" pos:column="31"/></name><operator pos:line="14" pos:column="31">.<pos:position pos:line="14" pos:column="32"/></operator><name pos:line="14" pos:column="32">cbSuccess<pos:position pos:line="14" pos:column="41"/></name></name></expr>;<pos:position pos:line="14" pos:column="42"/></expr_stmt>

        <typedef pos:line="16" pos:column="9">typedef <type><name><name pos:line="16" pos:column="17">CommCbMemFunT<pos:position pos:line="16" pos:column="30"/></name><argument_list type="generic" pos:line="16" pos:column="30">&lt;<argument><expr><name pos:line="16" pos:column="31">HttpControlMsgSink<pos:position pos:line="16" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="51">CommIoCbParams<pos:position pos:line="16" pos:column="65"/></name></expr></argument>&gt;<pos:position pos:line="16" pos:column="69"/></argument_list></name></type> <name pos:line="16" pos:column="67">Dialer<pos:position pos:line="16" pos:column="73"/></name>;<pos:position pos:line="16" pos:column="74"/></typedef>
        <decl_stmt><decl><type><name><name pos:line="17" pos:column="9">AsyncCall<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">::<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">Pointer<pos:position pos:line="17" pos:column="27"/></name></name></type> <name pos:line="17" pos:column="28">call<pos:position pos:line="17" pos:column="32"/></name> <init pos:line="17" pos:column="33">= <expr><call><name pos:line="17" pos:column="35">JobCallback<pos:position pos:line="17" pos:column="46"/></name><argument_list pos:line="17" pos:column="46">(<argument><expr><literal type="number" pos:line="17" pos:column="47">33<pos:position pos:line="17" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="51">5<pos:position pos:line="17" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="54">Dialer<pos:position pos:line="17" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="62">this<pos:position pos:line="17" pos:column="66"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="68">HttpControlMsgSink<pos:position pos:line="17" pos:column="86"/></name><operator pos:line="17" pos:column="86">::<pos:position pos:line="17" pos:column="88"/></operator><name pos:line="17" pos:column="88">wroteControlMsg<pos:position pos:line="17" pos:column="103"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="104"/></argument_list></call></expr></init></decl>;<pos:position pos:line="17" pos:column="105"/></decl_stmt>

        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><operator pos:line="19" pos:column="13">!<pos:position pos:line="19" pos:column="14"/></operator><call><name pos:line="19" pos:column="14">writeControlMsgAndCall<pos:position pos:line="19" pos:column="36"/></name><argument_list pos:line="19" pos:column="36">(<argument><expr><call><name><name pos:line="19" pos:column="37">rep<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">.<pos:position pos:line="19" pos:column="41"/></operator><name pos:line="19" pos:column="41">getRaw<pos:position pos:line="19" pos:column="47"/></name></name><argument_list pos:line="19" pos:column="47">()<pos:position pos:line="19" pos:column="49"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="51">call<pos:position pos:line="19" pos:column="55"/></name></expr></argument>)<pos:position pos:line="19" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="57"/></condition><then pos:line="19" pos:column="57"> <block pos:line="19" pos:column="58">{
            <comment type="line" pos:line="20" pos:column="13">// but still inform the caller (so it may resume its operation)</comment>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">doneWithControlMsg<pos:position pos:line="21" pos:column="31"/></name><argument_list pos:line="21" pos:column="31">()<pos:position pos:line="21" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>
        <return pos:line="23" pos:column="9">return;<pos:position pos:line="23" pos:column="16"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">debugs<pos:position pos:line="26" pos:column="11"/></name><argument_list pos:line="26" pos:column="11">(<argument><expr><literal type="number" pos:line="26" pos:column="12">33<pos:position pos:line="26" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="16">3<pos:position pos:line="26" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="19">HERE<pos:position pos:line="26" pos:column="23"/></name> <operator pos:line="26" pos:column="24">&lt;&lt;<pos:position pos:line="26" pos:column="32"/></operator> <literal type="string" pos:line="26" pos:column="27">" closing due to missing context for 1xx"<pos:position pos:line="26" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="27" pos:column="5">clientConnection<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">-&gt;<pos:position pos:line="27" pos:column="26"/></operator><name pos:line="27" pos:column="23">close<pos:position pos:line="27" pos:column="28"/></name></name><argument_list pos:line="27" pos:column="28">()<pos:position pos:line="27" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="31"/></expr_stmt>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

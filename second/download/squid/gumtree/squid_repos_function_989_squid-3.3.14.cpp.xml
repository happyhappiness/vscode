<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_989_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">debugArg<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><specifier pos:line="2" pos:column="10">const<pos:position pos:line="2" pos:column="15"/></specifier> <name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name pos:line="2" pos:column="22">arg<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="26"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">s<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><literal type="number" pos:line="4" pos:column="13">0<pos:position pos:line="4" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">l<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">i<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><call><name pos:line="8" pos:column="10">strncasecmp<pos:position pos:line="8" pos:column="21"/></name><argument_list pos:line="8" pos:column="21">(<argument><expr><name pos:line="8" pos:column="22">arg<pos:position pos:line="8" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="27">"rotate="<pos:position pos:line="8" pos:column="36"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="38">7<pos:position pos:line="8" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="41"/></condition><then pos:line="8" pos:column="41"> <block pos:line="8" pos:column="42">{
        <expr_stmt><expr><name pos:line="9" pos:column="9">arg<pos:position pos:line="9" pos:column="12"/></name> <operator pos:line="9" pos:column="13">+=<pos:position pos:line="9" pos:column="15"/></operator> <literal type="number" pos:line="9" pos:column="16">7<pos:position pos:line="9" pos:column="17"/></literal></expr>;<pos:position pos:line="9" pos:column="18"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">Debug<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">::<pos:position pos:line="10" pos:column="16"/></operator><name pos:line="10" pos:column="16">rotateNumber<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <call><name pos:line="10" pos:column="31">atoi<pos:position pos:line="10" pos:column="35"/></name><argument_list pos:line="10" pos:column="35">(<argument><expr><name pos:line="10" pos:column="36">arg<pos:position pos:line="10" pos:column="39"/></name></expr></argument>)<pos:position pos:line="10" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="41"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <elseif pos:line="12" pos:column="7">else <if pos:line="12" pos:column="12">if <condition pos:line="12" pos:column="15">(<expr><operator pos:line="12" pos:column="16">!<pos:position pos:line="12" pos:column="17"/></operator><call><name pos:line="12" pos:column="17">strncasecmp<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">(<argument><expr><name pos:line="12" pos:column="29">arg<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="34">"ALL"<pos:position pos:line="12" pos:column="39"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="41">3<pos:position pos:line="12" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="44"/></condition><then pos:line="12" pos:column="44"> <block pos:line="12" pos:column="45">{
        <expr_stmt><expr><name pos:line="13" pos:column="9">s<pos:position pos:line="13" pos:column="10"/></name> <operator pos:line="13" pos:column="11">=<pos:position pos:line="13" pos:column="12"/></operator> <operator pos:line="13" pos:column="13">-<pos:position pos:line="13" pos:column="14"/></operator><literal type="number" pos:line="13" pos:column="14">1<pos:position pos:line="13" pos:column="15"/></literal></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">arg<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">+=<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="16">4<pos:position pos:line="14" pos:column="17"/></literal></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if></elseif> <else pos:line="15" pos:column="7">else <block pos:line="15" pos:column="12">{
        <expr_stmt><expr><name pos:line="16" pos:column="9">s<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <call><name pos:line="16" pos:column="13">atoi<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><name pos:line="16" pos:column="18">arg<pos:position pos:line="16" pos:column="21"/></name></expr></argument>)<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="23"/></expr_stmt>
        <while pos:line="17" pos:column="9">while <condition pos:line="17" pos:column="15">(<expr><operator pos:line="17" pos:column="16">*<pos:position pos:line="17" pos:column="17"/></operator><name pos:line="17" pos:column="17">arg<pos:position pos:line="17" pos:column="20"/></name> <operator pos:line="17" pos:column="21">&amp;&amp;<pos:position pos:line="17" pos:column="31"/></operator> <operator pos:line="17" pos:column="24">*<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="25">arg<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">++<pos:position pos:line="17" pos:column="30"/></operator> <operator pos:line="17" pos:column="31">!=<pos:position pos:line="17" pos:column="33"/></operator> <literal type="char" pos:line="17" pos:column="34">','<pos:position pos:line="17" pos:column="37"/></literal></expr>)<pos:position pos:line="17" pos:column="38"/></condition><block type="pseudo"><empty_stmt pos:line="17" pos:column="38">;<pos:position pos:line="17" pos:column="39"/></empty_stmt></block></while>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="20" pos:column="5">l<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <call><name pos:line="20" pos:column="9">atoi<pos:position pos:line="20" pos:column="13"/></name><argument_list pos:line="20" pos:column="13">(<argument><expr><name pos:line="20" pos:column="14">arg<pos:position pos:line="20" pos:column="17"/></name></expr></argument>)<pos:position pos:line="20" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">s<pos:position pos:line="21" pos:column="13"/></name> <operator pos:line="21" pos:column="14">&gt;=<pos:position pos:line="21" pos:column="19"/></operator> <operator pos:line="21" pos:column="17">-<pos:position pos:line="21" pos:column="18"/></operator><literal type="number" pos:line="21" pos:column="18">1<pos:position pos:line="21" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="21"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">s<pos:position pos:line="23" pos:column="10"/></name> <operator pos:line="23" pos:column="11">&gt;=<pos:position pos:line="23" pos:column="16"/></operator> <name pos:line="23" pos:column="14">MAX_DEBUG_SECTIONS<pos:position pos:line="23" pos:column="32"/></name></expr>)<pos:position pos:line="23" pos:column="33"/></condition><then pos:line="23" pos:column="33">
        <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="9">s<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <name pos:line="24" pos:column="13">MAX_DEBUG_SECTIONS<pos:position pos:line="24" pos:column="31"/></name><operator pos:line="24" pos:column="31">-<pos:position pos:line="24" pos:column="32"/></operator><literal type="number" pos:line="24" pos:column="32">1<pos:position pos:line="24" pos:column="33"/></literal></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">l<pos:position pos:line="26" pos:column="10"/></name> <operator pos:line="26" pos:column="11">&lt;<pos:position pos:line="26" pos:column="15"/></operator> <literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal></expr>)<pos:position pos:line="26" pos:column="15"/></condition><then pos:line="26" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name pos:line="27" pos:column="9">l<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <literal type="number" pos:line="27" pos:column="13">0<pos:position pos:line="27" pos:column="14"/></literal></expr>;<pos:position pos:line="27" pos:column="15"/></expr_stmt></block></then></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">l<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">&gt;<pos:position pos:line="29" pos:column="15"/></operator> <literal type="number" pos:line="29" pos:column="13">10<pos:position pos:line="29" pos:column="15"/></literal></expr>)<pos:position pos:line="29" pos:column="16"/></condition><then pos:line="29" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><name pos:line="30" pos:column="9">l<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <literal type="number" pos:line="30" pos:column="13">10<pos:position pos:line="30" pos:column="15"/></literal></expr>;<pos:position pos:line="30" pos:column="16"/></expr_stmt></block></then></if>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">s<pos:position pos:line="32" pos:column="10"/></name> <operator pos:line="32" pos:column="11">&gt;=<pos:position pos:line="32" pos:column="16"/></operator> <literal type="number" pos:line="32" pos:column="14">0<pos:position pos:line="32" pos:column="15"/></literal></expr>)<pos:position pos:line="32" pos:column="16"/></condition><then pos:line="32" pos:column="16"> <block pos:line="32" pos:column="17">{
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">Debug<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">::<pos:position pos:line="33" pos:column="16"/></operator><name pos:line="33" pos:column="16">Levels<pos:position pos:line="33" pos:column="22"/></name><index pos:line="33" pos:column="22">[<expr><name pos:line="33" pos:column="23">s<pos:position pos:line="33" pos:column="24"/></name></expr>]<pos:position pos:line="33" pos:column="25"/></index></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="28">l<pos:position pos:line="33" pos:column="29"/></name></expr>;<pos:position pos:line="33" pos:column="30"/></expr_stmt>
        <return pos:line="34" pos:column="9">return;<pos:position pos:line="34" pos:column="16"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>

    <for pos:line="37" pos:column="5">for <control pos:line="37" pos:column="9">(<init><expr><name pos:line="37" pos:column="10">i<pos:position pos:line="37" pos:column="11"/></name> <operator pos:line="37" pos:column="12">=<pos:position pos:line="37" pos:column="13"/></operator> <literal type="number" pos:line="37" pos:column="14">0<pos:position pos:line="37" pos:column="15"/></literal></expr>;<pos:position pos:line="37" pos:column="16"/></init> <condition><expr><name pos:line="37" pos:column="17">i<pos:position pos:line="37" pos:column="18"/></name> <operator pos:line="37" pos:column="19">&lt;<pos:position pos:line="37" pos:column="23"/></operator> <name pos:line="37" pos:column="21">MAX_DEBUG_SECTIONS<pos:position pos:line="37" pos:column="39"/></name></expr>;<pos:position pos:line="37" pos:column="40"/></condition> <incr><expr><operator pos:line="37" pos:column="41">++<pos:position pos:line="37" pos:column="43"/></operator><name pos:line="37" pos:column="43">i<pos:position pos:line="37" pos:column="44"/></name></expr></incr>)<pos:position pos:line="37" pos:column="45"/></control>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="38" pos:column="9">Debug<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">::<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">Levels<pos:position pos:line="38" pos:column="22"/></name><index pos:line="38" pos:column="22">[<expr><name pos:line="38" pos:column="23">i<pos:position pos:line="38" pos:column="24"/></name></expr>]<pos:position pos:line="38" pos:column="25"/></index></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <name pos:line="38" pos:column="28">l<pos:position pos:line="38" pos:column="29"/></name></expr>;<pos:position pos:line="38" pos:column="30"/></expr_stmt></block></for>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

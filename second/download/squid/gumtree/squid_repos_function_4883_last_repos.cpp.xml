<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4883_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Http<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">One<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">RequestParser<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">skipGarbageLines<pos:position pos:line="2" pos:column="43"/></name></name><parameter_list pos:line="2" pos:column="43">()<pos:position pos:line="2" pos:column="45"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">Config<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">onoff<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">.<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">relaxed_header_parser<pos:position pos:line="4" pos:column="43"/></name></name></expr>)<pos:position pos:line="4" pos:column="44"/></condition><then pos:line="4" pos:column="44"> <block pos:line="4" pos:column="45">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><name><name pos:line="5" pos:column="13">Config<pos:position pos:line="5" pos:column="19"/></name><operator pos:line="5" pos:column="19">.<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="20">onoff<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">.<pos:position pos:line="5" pos:column="26"/></operator><name pos:line="5" pos:column="26">relaxed_header_parser<pos:position pos:line="5" pos:column="47"/></name></name> <operator pos:line="5" pos:column="48">&lt;<pos:position pos:line="5" pos:column="52"/></operator> <literal type="number" pos:line="5" pos:column="50">0<pos:position pos:line="5" pos:column="51"/></literal> <operator pos:line="5" pos:column="52">&amp;&amp;<pos:position pos:line="5" pos:column="62"/></operator> <operator pos:line="5" pos:column="55">(<pos:position pos:line="5" pos:column="56"/></operator><name><name pos:line="5" pos:column="56">buf_<pos:position pos:line="5" pos:column="60"/></name><index pos:line="5" pos:column="60">[<expr><literal type="number" pos:line="5" pos:column="61">0<pos:position pos:line="5" pos:column="62"/></literal></expr>]<pos:position pos:line="5" pos:column="63"/></index></name> <operator pos:line="5" pos:column="64">==<pos:position pos:line="5" pos:column="66"/></operator> <literal type="char" pos:line="5" pos:column="67">'\r'<pos:position pos:line="5" pos:column="71"/></literal> <operator pos:line="5" pos:column="72">||<pos:position pos:line="5" pos:column="74"/></operator> <name><name pos:line="5" pos:column="75">buf_<pos:position pos:line="5" pos:column="79"/></name><index pos:line="5" pos:column="79">[<expr><literal type="number" pos:line="5" pos:column="80">0<pos:position pos:line="5" pos:column="81"/></literal></expr>]<pos:position pos:line="5" pos:column="82"/></index></name> <operator pos:line="5" pos:column="83">==<pos:position pos:line="5" pos:column="85"/></operator> <literal type="char" pos:line="5" pos:column="86">'\n'<pos:position pos:line="5" pos:column="90"/></literal><operator pos:line="5" pos:column="90">)<pos:position pos:line="5" pos:column="91"/></operator></expr>)<pos:position pos:line="5" pos:column="92"/></condition><then pos:line="5" pos:column="92">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="13">debugs<pos:position pos:line="6" pos:column="19"/></name><argument_list pos:line="6" pos:column="19">(<argument><expr><literal type="number" pos:line="6" pos:column="20">74<pos:position pos:line="6" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="24">DBG_IMPORTANT<pos:position pos:line="6" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="39">"WARNING: Invalid HTTP Request: "<pos:position pos:line="6" pos:column="72"/></literal> <operator pos:line="6" pos:column="73">&lt;&lt;<pos:position pos:line="6" pos:column="81"/></operator>
                   <literal type="string" pos:line="7" pos:column="20">"CRLF bytes received ahead of request-line. "<pos:position pos:line="7" pos:column="65"/></literal> <operator pos:line="7" pos:column="66">&lt;&lt;<pos:position pos:line="7" pos:column="74"/></operator>
                   <literal type="string" pos:line="8" pos:column="20">"Ignored due to relaxed_header_parser."<pos:position pos:line="8" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></expr_stmt></block></then></if>
        <comment type="line" pos:line="9" pos:column="9">// Be tolerant of prefix empty lines</comment>
        <comment type="line" pos:line="10" pos:column="9">// ie any series of either \n or \r\n with no other characters and no repeated \r</comment>
        <while pos:line="11" pos:column="9">while <condition pos:line="11" pos:column="15">(<expr><operator pos:line="11" pos:column="16">!<pos:position pos:line="11" pos:column="17"/></operator><call><name><name pos:line="11" pos:column="17">buf_<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">.<pos:position pos:line="11" pos:column="22"/></operator><name pos:line="11" pos:column="22">isEmpty<pos:position pos:line="11" pos:column="29"/></name></name><argument_list pos:line="11" pos:column="29">()<pos:position pos:line="11" pos:column="31"/></argument_list></call> <operator pos:line="11" pos:column="32">&amp;&amp;<pos:position pos:line="11" pos:column="42"/></operator> <operator pos:line="11" pos:column="35">(<pos:position pos:line="11" pos:column="36"/></operator><name><name pos:line="11" pos:column="36">buf_<pos:position pos:line="11" pos:column="40"/></name><index pos:line="11" pos:column="40">[<expr><literal type="number" pos:line="11" pos:column="41">0<pos:position pos:line="11" pos:column="42"/></literal></expr>]<pos:position pos:line="11" pos:column="43"/></index></name> <operator pos:line="11" pos:column="44">==<pos:position pos:line="11" pos:column="46"/></operator> <literal type="char" pos:line="11" pos:column="47">'\n'<pos:position pos:line="11" pos:column="51"/></literal> <operator pos:line="11" pos:column="52">||<pos:position pos:line="11" pos:column="54"/></operator> <operator pos:line="11" pos:column="55">(<pos:position pos:line="11" pos:column="56"/></operator><name><name pos:line="11" pos:column="56">buf_<pos:position pos:line="11" pos:column="60"/></name><index pos:line="11" pos:column="60">[<expr><literal type="number" pos:line="11" pos:column="61">0<pos:position pos:line="11" pos:column="62"/></literal></expr>]<pos:position pos:line="11" pos:column="63"/></index></name> <operator pos:line="11" pos:column="64">==<pos:position pos:line="11" pos:column="66"/></operator> <literal type="char" pos:line="11" pos:column="67">'\r'<pos:position pos:line="11" pos:column="71"/></literal> <operator pos:line="11" pos:column="72">&amp;&amp;<pos:position pos:line="11" pos:column="82"/></operator> <name><name pos:line="11" pos:column="75">buf_<pos:position pos:line="11" pos:column="79"/></name><index pos:line="11" pos:column="79">[<expr><literal type="number" pos:line="11" pos:column="80">1<pos:position pos:line="11" pos:column="81"/></literal></expr>]<pos:position pos:line="11" pos:column="82"/></index></name> <operator pos:line="11" pos:column="83">==<pos:position pos:line="11" pos:column="85"/></operator> <literal type="char" pos:line="11" pos:column="86">'\n'<pos:position pos:line="11" pos:column="90"/></literal><operator pos:line="11" pos:column="90">)<pos:position pos:line="11" pos:column="91"/></operator><operator pos:line="11" pos:column="91">)<pos:position pos:line="11" pos:column="92"/></operator></expr>)<pos:position pos:line="11" pos:column="93"/></condition> <block pos:line="11" pos:column="94">{
            <expr_stmt><expr><call><name><name pos:line="12" pos:column="13">buf_<pos:position pos:line="12" pos:column="17"/></name><operator pos:line="12" pos:column="17">.<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">consume<pos:position pos:line="12" pos:column="25"/></name></name><argument_list pos:line="12" pos:column="25">(<argument><expr><literal type="number" pos:line="12" pos:column="26">1<pos:position pos:line="12" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="13" pos:column="10"/></block></while>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

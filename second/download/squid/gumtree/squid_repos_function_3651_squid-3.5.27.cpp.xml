<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3651_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">start<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">BodyProducer<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">::<pos:position pos:line="4" pos:column="19"/></operator><name pos:line="4" pos:column="19">start<pos:position pos:line="4" pos:column="24"/></name></name><argument_list pos:line="4" pos:column="24">()<pos:position pos:line="4" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">HttpControlMsgSink<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">::<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">start<pos:position pos:line="5" pos:column="30"/></name></name><argument_list pos:line="5" pos:column="30">()<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="33"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">port<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">disable_pmtu_discovery<pos:position pos:line="7" pos:column="37"/></name></name> <operator pos:line="7" pos:column="38">!=<pos:position pos:line="7" pos:column="40"/></operator> <name pos:line="7" pos:column="41">DISABLE_PMTU_OFF<pos:position pos:line="7" pos:column="57"/></name> <operator pos:line="7" pos:column="58">&amp;&amp;<pos:position pos:line="7" pos:column="68"/></operator>
            <operator pos:line="8" pos:column="13">(<pos:position pos:line="8" pos:column="14"/></operator><call><name pos:line="8" pos:column="14">transparent<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">()<pos:position pos:line="8" pos:column="27"/></argument_list></call> <operator pos:line="8" pos:column="28">||<pos:position pos:line="8" pos:column="30"/></operator> <name><name pos:line="8" pos:column="31">port<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">-&gt;<pos:position pos:line="8" pos:column="40"/></operator><name pos:line="8" pos:column="37">disable_pmtu_discovery<pos:position pos:line="8" pos:column="59"/></name></name> <operator pos:line="8" pos:column="60">==<pos:position pos:line="8" pos:column="62"/></operator> <name pos:line="8" pos:column="63">DISABLE_PMTU_ALWAYS<pos:position pos:line="8" pos:column="82"/></name><operator pos:line="8" pos:column="82">)<pos:position pos:line="8" pos:column="83"/></operator></expr>)<pos:position pos:line="8" pos:column="84"/></condition><then pos:line="8" pos:column="84"> <block pos:line="8" pos:column="85">{
<cpp:if pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">if<pos:position pos:line="9" pos:column="4"/></cpp:directive> <expr><call><name pos:line="9" pos:column="5">defined<pos:position pos:line="9" pos:column="12"/></name><argument_list pos:line="9" pos:column="12">(<argument><expr><name pos:line="9" pos:column="13">IP_MTU_DISCOVER<pos:position pos:line="9" pos:column="28"/></name></expr></argument>)<pos:position pos:line="9" pos:column="29"/></argument_list></call> <operator pos:line="9" pos:column="30">&amp;&amp;<pos:position pos:line="9" pos:column="40"/></operator> <call><name pos:line="9" pos:column="33">defined<pos:position pos:line="9" pos:column="40"/></name><argument_list pos:line="9" pos:column="40">(<argument><expr><name pos:line="9" pos:column="41">IP_PMTUDISC_DONT<pos:position pos:line="9" pos:column="57"/></name></expr></argument>)<pos:position pos:line="9" pos:column="58"/></argument_list></call></expr></cpp:if>
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">int<pos:position pos:line="10" pos:column="12"/></name></type> <name pos:line="10" pos:column="13">i<pos:position pos:line="10" pos:column="14"/></name> <init pos:line="10" pos:column="15">= <expr><name pos:line="10" pos:column="17">IP_PMTUDISC_DONT<pos:position pos:line="10" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><call><name pos:line="11" pos:column="13">setsockopt<pos:position pos:line="11" pos:column="23"/></name><argument_list pos:line="11" pos:column="23">(<argument><expr><name><name pos:line="11" pos:column="24">clientConnection<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">-&gt;<pos:position pos:line="11" pos:column="45"/></operator><name pos:line="11" pos:column="42">fd<pos:position pos:line="11" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="46">SOL_IP<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="54">IP_MTU_DISCOVER<pos:position pos:line="11" pos:column="69"/></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="71">&amp;<pos:position pos:line="11" pos:column="76"/></operator><name pos:line="11" pos:column="72">i<pos:position pos:line="11" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="75">sizeof<argument_list pos:line="11" pos:column="81">(<argument><expr><name pos:line="11" pos:column="82">i<pos:position pos:line="11" pos:column="83"/></name></expr></argument>)<pos:position pos:line="11" pos:column="84"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="85"/></argument_list></call> <operator pos:line="11" pos:column="86">&lt;<pos:position pos:line="11" pos:column="90"/></operator> <literal type="number" pos:line="11" pos:column="88">0<pos:position pos:line="11" pos:column="89"/></literal></expr>)<pos:position pos:line="11" pos:column="90"/></condition><then pos:line="11" pos:column="90">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="13">debugs<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="number" pos:line="12" pos:column="20">33<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="24">2<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="27">"WARNING: Path MTU discovery disabling failed on "<pos:position pos:line="12" pos:column="77"/></literal> <operator pos:line="12" pos:column="78">&lt;&lt;<pos:position pos:line="12" pos:column="86"/></operator> <name pos:line="12" pos:column="81">clientConnection<pos:position pos:line="12" pos:column="97"/></name> <operator pos:line="12" pos:column="98">&lt;&lt;<pos:position pos:line="12" pos:column="106"/></operator> <literal type="string" pos:line="12" pos:column="101">" : "<pos:position pos:line="12" pos:column="106"/></literal> <operator pos:line="12" pos:column="107">&lt;&lt;<pos:position pos:line="12" pos:column="115"/></operator> <call><name pos:line="12" pos:column="110">xstrerror<pos:position pos:line="12" pos:column="119"/></name><argument_list pos:line="12" pos:column="119">()<pos:position pos:line="12" pos:column="121"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="123"/></expr_stmt></block></then></if>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>
        <decl_stmt><decl><specifier pos:line="14" pos:column="9">static<pos:position pos:line="14" pos:column="15"/></specifier> <type><name pos:line="14" pos:column="16">bool<pos:position pos:line="14" pos:column="20"/></name></type> <name pos:line="14" pos:column="21">reported<pos:position pos:line="14" pos:column="29"/></name> <init pos:line="14" pos:column="30">= <expr><literal type="boolean" pos:line="14" pos:column="32">false<pos:position pos:line="14" pos:column="37"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="38"/></decl_stmt>

        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><operator pos:line="16" pos:column="13">!<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">reported<pos:position pos:line="16" pos:column="22"/></name></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23"> <block pos:line="16" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">debugs<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><literal type="number" pos:line="17" pos:column="20">33<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="24">DBG_IMPORTANT<pos:position pos:line="17" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="39">"NOTICE: Path MTU discovery disabling is not supported on your platform."<pos:position pos:line="17" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="114"/></expr_stmt>
            <expr_stmt><expr><name pos:line="18" pos:column="13">reported<pos:position pos:line="18" pos:column="21"/></name> <operator pos:line="18" pos:column="22">=<pos:position pos:line="18" pos:column="23"/></operator> <literal type="boolean" pos:line="18" pos:column="24">true<pos:position pos:line="18" pos:column="28"/></literal></expr>;<pos:position pos:line="18" pos:column="29"/></expr_stmt>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
<cpp:endif pos:line="20" pos:column="1">#<cpp:directive pos:line="20" pos:column="2">endif<pos:position pos:line="20" pos:column="7"/></cpp:directive></cpp:endif>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <typedef pos:line="23" pos:column="5">typedef <type><name><name pos:line="23" pos:column="13">CommCbMemFunT<pos:position pos:line="23" pos:column="26"/></name><argument_list type="generic" pos:line="23" pos:column="26">&lt;<argument><expr><name pos:line="23" pos:column="27">ConnStateData<pos:position pos:line="23" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="42">CommCloseCbParams<pos:position pos:line="23" pos:column="59"/></name></expr></argument>&gt;<pos:position pos:line="23" pos:column="63"/></argument_list></name></type> <name pos:line="23" pos:column="61">Dialer<pos:position pos:line="23" pos:column="67"/></name>;<pos:position pos:line="23" pos:column="68"/></typedef>
    <decl_stmt><decl><type><name><name pos:line="24" pos:column="5">AsyncCall<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">::<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">Pointer<pos:position pos:line="24" pos:column="23"/></name></name></type> <name pos:line="24" pos:column="24">call<pos:position pos:line="24" pos:column="28"/></name> <init pos:line="24" pos:column="29">= <expr><call><name pos:line="24" pos:column="31">JobCallback<pos:position pos:line="24" pos:column="42"/></name><argument_list pos:line="24" pos:column="42">(<argument><expr><literal type="number" pos:line="24" pos:column="43">33<pos:position pos:line="24" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="47">5<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="50">Dialer<pos:position pos:line="24" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="58">this<pos:position pos:line="24" pos:column="62"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="64">ConnStateData<pos:position pos:line="24" pos:column="77"/></name><operator pos:line="24" pos:column="77">::<pos:position pos:line="24" pos:column="79"/></operator><name pos:line="24" pos:column="79">connStateClosed<pos:position pos:line="24" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="95"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="96"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">comm_add_close_handler<pos:position pos:line="25" pos:column="27"/></name><argument_list pos:line="25" pos:column="27">(<argument><expr><name><name pos:line="25" pos:column="28">clientConnection<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">-&gt;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="46">fd<pos:position pos:line="25" pos:column="48"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="50">call<pos:position pos:line="25" pos:column="54"/></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="56"/></expr_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">Config<pos:position pos:line="27" pos:column="15"/></name><operator pos:line="27" pos:column="15">.<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">onoff<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">log_fqdn<pos:position pos:line="27" pos:column="30"/></name></name></expr>)<pos:position pos:line="27" pos:column="31"/></condition><then pos:line="27" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="9">fqdncache_gethostbyaddr<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">(<argument><expr><name><name pos:line="28" pos:column="33">clientConnection<pos:position pos:line="28" pos:column="49"/></name><operator pos:line="28" pos:column="49">-&gt;<pos:position pos:line="28" pos:column="54"/></operator><name pos:line="28" pos:column="51">remote<pos:position pos:line="28" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="59">FQDN_LOOKUP_IF_MISS<pos:position pos:line="28" pos:column="78"/></name></expr></argument>)<pos:position pos:line="28" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="80"/></expr_stmt></block></then></if>

<cpp:if pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">if<pos:position pos:line="30" pos:column="4"/></cpp:directive> <expr><name pos:line="30" pos:column="5">USE_IDENT<pos:position pos:line="30" pos:column="14"/></name></expr></cpp:if>
    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">(<expr><name><name pos:line="31" pos:column="9">Ident<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">::<pos:position pos:line="31" pos:column="16"/></operator><name pos:line="31" pos:column="16">TheConfig<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">.<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="26">identLookup<pos:position pos:line="31" pos:column="37"/></name></name></expr>)<pos:position pos:line="31" pos:column="38"/></condition><then pos:line="31" pos:column="38"> <block pos:line="31" pos:column="39">{
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">ACLFilledChecklist<pos:position pos:line="32" pos:column="27"/></name></type> <name pos:line="32" pos:column="28">identChecklist<pos:position pos:line="32" pos:column="42"/></name><argument_list pos:line="32" pos:column="42">(<argument><expr><name><name pos:line="32" pos:column="43">Ident<pos:position pos:line="32" pos:column="48"/></name><operator pos:line="32" pos:column="48">::<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="50">TheConfig<pos:position pos:line="32" pos:column="59"/></name><operator pos:line="32" pos:column="59">.<pos:position pos:line="32" pos:column="60"/></operator><name pos:line="32" pos:column="60">identLookup<pos:position pos:line="32" pos:column="71"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="73">NULL<pos:position pos:line="32" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="79">NULL<pos:position pos:line="32" pos:column="83"/></name></expr></argument>)<pos:position pos:line="32" pos:column="84"/></argument_list></decl>;<pos:position pos:line="32" pos:column="85"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">identChecklist<pos:position pos:line="33" pos:column="23"/></name><operator pos:line="33" pos:column="23">.<pos:position pos:line="33" pos:column="24"/></operator><name pos:line="33" pos:column="24">src_addr<pos:position pos:line="33" pos:column="32"/></name></name> <operator pos:line="33" pos:column="33">=<pos:position pos:line="33" pos:column="34"/></operator> <name><name pos:line="33" pos:column="35">clientConnection<pos:position pos:line="33" pos:column="51"/></name><operator pos:line="33" pos:column="51">-&gt;<pos:position pos:line="33" pos:column="56"/></operator><name pos:line="33" pos:column="53">remote<pos:position pos:line="33" pos:column="59"/></name></name></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="34" pos:column="9">identChecklist<pos:position pos:line="34" pos:column="23"/></name><operator pos:line="34" pos:column="23">.<pos:position pos:line="34" pos:column="24"/></operator><name pos:line="34" pos:column="24">my_addr<pos:position pos:line="34" pos:column="31"/></name></name> <operator pos:line="34" pos:column="32">=<pos:position pos:line="34" pos:column="33"/></operator> <name><name pos:line="34" pos:column="34">clientConnection<pos:position pos:line="34" pos:column="50"/></name><operator pos:line="34" pos:column="50">-&gt;<pos:position pos:line="34" pos:column="55"/></operator><name pos:line="34" pos:column="52">local<pos:position pos:line="34" pos:column="57"/></name></name></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><call><name><name pos:line="35" pos:column="13">identChecklist<pos:position pos:line="35" pos:column="27"/></name><operator pos:line="35" pos:column="27">.<pos:position pos:line="35" pos:column="28"/></operator><name pos:line="35" pos:column="28">fastCheck<pos:position pos:line="35" pos:column="37"/></name></name><argument_list pos:line="35" pos:column="37">()<pos:position pos:line="35" pos:column="39"/></argument_list></call> <operator pos:line="35" pos:column="40">==<pos:position pos:line="35" pos:column="42"/></operator> <name pos:line="35" pos:column="43">ACCESS_ALLOWED<pos:position pos:line="35" pos:column="57"/></name></expr>)<pos:position pos:line="35" pos:column="58"/></condition><then pos:line="35" pos:column="58">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="36" pos:column="13">Ident<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">::<pos:position pos:line="36" pos:column="20"/></operator><name pos:line="36" pos:column="20">Start<pos:position pos:line="36" pos:column="25"/></name></name><argument_list pos:line="36" pos:column="25">(<argument><expr><name pos:line="36" pos:column="26">clientConnection<pos:position pos:line="36" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="44">clientIdentDone<pos:position pos:line="36" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="36" pos:column="61">this<pos:position pos:line="36" pos:column="65"/></name></expr></argument>)<pos:position pos:line="36" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="67"/></expr_stmt></block></then></if>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="40" pos:column="5">clientdbEstablished<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><name><name pos:line="40" pos:column="25">clientConnection<pos:position pos:line="40" pos:column="41"/></name><operator pos:line="40" pos:column="41">-&gt;<pos:position pos:line="40" pos:column="46"/></operator><name pos:line="40" pos:column="43">remote<pos:position pos:line="40" pos:column="49"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="51">1<pos:position pos:line="40" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="54"/></expr_stmt>

    <expr_stmt><expr><name pos:line="42" pos:column="5">needProxyProtocolHeader_<pos:position pos:line="42" pos:column="29"/></name> <operator pos:line="42" pos:column="30">=<pos:position pos:line="42" pos:column="31"/></operator> <name><name pos:line="42" pos:column="32">port<pos:position pos:line="42" pos:column="36"/></name><operator pos:line="42" pos:column="36">-&gt;<pos:position pos:line="42" pos:column="41"/></operator><name pos:line="42" pos:column="38">flags<pos:position pos:line="42" pos:column="43"/></name><operator pos:line="42" pos:column="43">.<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="44">proxySurrogate<pos:position pos:line="42" pos:column="58"/></name></name></expr>;<pos:position pos:line="42" pos:column="59"/></expr_stmt>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name pos:line="43" pos:column="9">needProxyProtocolHeader_<pos:position pos:line="43" pos:column="33"/></name></expr>)<pos:position pos:line="43" pos:column="34"/></condition><then pos:line="43" pos:column="34"> <block pos:line="43" pos:column="35">{
        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><call><name pos:line="44" pos:column="14">proxyProtocolValidateClient<pos:position pos:line="44" pos:column="41"/></name><argument_list pos:line="44" pos:column="41">()<pos:position pos:line="44" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="44" pos:column="44"/></condition><then pos:line="44" pos:column="44"> <comment type="line" pos:line="44" pos:column="45">// will close the connection on failure</comment>
            <block type="pseudo"><return pos:line="45" pos:column="13">return;<pos:position pos:line="45" pos:column="20"/></return></block></then></if>
    }<pos:position pos:line="46" pos:column="6"/></block></then></if>

<cpp:if pos:line="48" pos:column="1">#<cpp:directive pos:line="48" pos:column="2">if<pos:position pos:line="48" pos:column="4"/></cpp:directive> <expr><name pos:line="48" pos:column="5">USE_DELAY_POOLS<pos:position pos:line="48" pos:column="20"/></name></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">fd_table<pos:position pos:line="49" pos:column="13"/></name><index pos:line="49" pos:column="13">[<expr><name><name pos:line="49" pos:column="14">clientConnection<pos:position pos:line="49" pos:column="30"/></name><operator pos:line="49" pos:column="30">-&gt;<pos:position pos:line="49" pos:column="35"/></operator><name pos:line="49" pos:column="32">fd<pos:position pos:line="49" pos:column="34"/></name></name></expr>]<pos:position pos:line="49" pos:column="35"/></index></name><operator pos:line="49" pos:column="35">.<pos:position pos:line="49" pos:column="36"/></operator><name pos:line="49" pos:column="36">clientInfo<pos:position pos:line="49" pos:column="46"/></name> <operator pos:line="49" pos:column="47">=<pos:position pos:line="49" pos:column="48"/></operator> <name pos:line="49" pos:column="49">NULL<pos:position pos:line="49" pos:column="53"/></name></expr>;<pos:position pos:line="49" pos:column="54"/></expr_stmt>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name><name pos:line="51" pos:column="9">Config<pos:position pos:line="51" pos:column="15"/></name><operator pos:line="51" pos:column="15">.<pos:position pos:line="51" pos:column="16"/></operator><name pos:line="51" pos:column="16">onoff<pos:position pos:line="51" pos:column="21"/></name><operator pos:line="51" pos:column="21">.<pos:position pos:line="51" pos:column="22"/></operator><name pos:line="51" pos:column="22">client_db<pos:position pos:line="51" pos:column="31"/></name></name></expr>)<pos:position pos:line="51" pos:column="32"/></condition><then pos:line="51" pos:column="32"> <block pos:line="51" pos:column="33">{
        <comment type="block" pos:line="52" pos:column="9">/* it was said several times that client write limiter does not work if client_db is disabled */</comment>

        <decl_stmt><decl><type><name pos:line="54" pos:column="9">ClientDelayPools<pos:position pos:line="54" pos:column="25"/></name><modifier pos:line="54" pos:column="25">&amp;<pos:position pos:line="54" pos:column="30"/></modifier></type> <name pos:line="54" pos:column="27">pools<pos:position pos:line="54" pos:column="32"/></name><argument_list pos:line="54" pos:column="32">(<argument><expr><name><name pos:line="54" pos:column="33">Config<pos:position pos:line="54" pos:column="39"/></name><operator pos:line="54" pos:column="39">.<pos:position pos:line="54" pos:column="40"/></operator><name pos:line="54" pos:column="40">ClientDelay<pos:position pos:line="54" pos:column="51"/></name><operator pos:line="54" pos:column="51">.<pos:position pos:line="54" pos:column="52"/></operator><name pos:line="54" pos:column="52">pools<pos:position pos:line="54" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="54" pos:column="58"/></argument_list></decl>;<pos:position pos:line="54" pos:column="59"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="55" pos:column="9">ACLFilledChecklist<pos:position pos:line="55" pos:column="27"/></name></type> <name pos:line="55" pos:column="28">ch<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">NULL<pos:position pos:line="55" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="37">NULL<pos:position pos:line="55" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="43">NULL<pos:position pos:line="55" pos:column="47"/></name></expr></argument>)<pos:position pos:line="55" pos:column="48"/></argument_list></decl>;<pos:position pos:line="55" pos:column="49"/></decl_stmt>

        <comment type="line" pos:line="57" pos:column="9">// TODO: we check early to limit error response bandwith but we</comment>
        <comment type="line" pos:line="58" pos:column="9">// should recheck when we can honor delay_pool_uses_indirect</comment>
        <comment type="line" pos:line="59" pos:column="9">// TODO: we should also pass the port details for myportname here.</comment>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">ch<pos:position pos:line="60" pos:column="11"/></name><operator pos:line="60" pos:column="11">.<pos:position pos:line="60" pos:column="12"/></operator><name pos:line="60" pos:column="12">src_addr<pos:position pos:line="60" pos:column="20"/></name></name> <operator pos:line="60" pos:column="21">=<pos:position pos:line="60" pos:column="22"/></operator> <name><name pos:line="60" pos:column="23">clientConnection<pos:position pos:line="60" pos:column="39"/></name><operator pos:line="60" pos:column="39">-&gt;<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="41">remote<pos:position pos:line="60" pos:column="47"/></name></name></expr>;<pos:position pos:line="60" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">ch<pos:position pos:line="61" pos:column="11"/></name><operator pos:line="61" pos:column="11">.<pos:position pos:line="61" pos:column="12"/></operator><name pos:line="61" pos:column="12">my_addr<pos:position pos:line="61" pos:column="19"/></name></name> <operator pos:line="61" pos:column="20">=<pos:position pos:line="61" pos:column="21"/></operator> <name><name pos:line="61" pos:column="22">clientConnection<pos:position pos:line="61" pos:column="38"/></name><operator pos:line="61" pos:column="38">-&gt;<pos:position pos:line="61" pos:column="43"/></operator><name pos:line="61" pos:column="40">local<pos:position pos:line="61" pos:column="45"/></name></name></expr>;<pos:position pos:line="61" pos:column="46"/></expr_stmt>

        <for pos:line="63" pos:column="9">for <control pos:line="63" pos:column="13">(<init><decl><type><name pos:line="63" pos:column="14">unsigned<pos:position pos:line="63" pos:column="22"/></name> <name pos:line="63" pos:column="23">int<pos:position pos:line="63" pos:column="26"/></name></type> <name pos:line="63" pos:column="27">pool<pos:position pos:line="63" pos:column="31"/></name> <init pos:line="63" pos:column="32">= <expr><literal type="number" pos:line="63" pos:column="34">0<pos:position pos:line="63" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="63" pos:column="36"/></init> <condition><expr><name pos:line="63" pos:column="37">pool<pos:position pos:line="63" pos:column="41"/></name> <operator pos:line="63" pos:column="42">&lt;<pos:position pos:line="63" pos:column="46"/></operator> <call><name><name pos:line="63" pos:column="44">pools<pos:position pos:line="63" pos:column="49"/></name><operator pos:line="63" pos:column="49">.<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="50">size<pos:position pos:line="63" pos:column="54"/></name></name><argument_list pos:line="63" pos:column="54">()<pos:position pos:line="63" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="57"/></condition> <incr><expr><operator pos:line="63" pos:column="58">++<pos:position pos:line="63" pos:column="60"/></operator><name pos:line="63" pos:column="60">pool<pos:position pos:line="63" pos:column="64"/></name></expr></incr>)<pos:position pos:line="63" pos:column="65"/></control> <block pos:line="63" pos:column="66">{

            <comment type="block" pos:line="65" pos:column="13">/* pools require explicit 'allow' to assign a client into them */</comment>
            <if pos:line="66" pos:column="13">if <condition pos:line="66" pos:column="16">(<expr><name><name pos:line="66" pos:column="17">pools<pos:position pos:line="66" pos:column="22"/></name><index pos:line="66" pos:column="22">[<expr><name pos:line="66" pos:column="23">pool<pos:position pos:line="66" pos:column="27"/></name></expr>]<pos:position pos:line="66" pos:column="28"/></index></name><operator pos:line="66" pos:column="28">.<pos:position pos:line="66" pos:column="29"/></operator><name pos:line="66" pos:column="29">access<pos:position pos:line="66" pos:column="35"/></name></expr>)<pos:position pos:line="66" pos:column="36"/></condition><then pos:line="66" pos:column="36"> <block pos:line="66" pos:column="37">{
                <expr_stmt><expr><call><name pos:line="67" pos:column="17">cbdataReferenceDone<pos:position pos:line="67" pos:column="36"/></name><argument_list pos:line="67" pos:column="36">(<argument><expr><name><name pos:line="67" pos:column="37">ch<pos:position pos:line="67" pos:column="39"/></name><operator pos:line="67" pos:column="39">.<pos:position pos:line="67" pos:column="40"/></operator><name pos:line="67" pos:column="40">accessList<pos:position pos:line="67" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="52"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="68" pos:column="17">ch<pos:position pos:line="68" pos:column="19"/></name><operator pos:line="68" pos:column="19">.<pos:position pos:line="68" pos:column="20"/></operator><name pos:line="68" pos:column="20">accessList<pos:position pos:line="68" pos:column="30"/></name></name> <operator pos:line="68" pos:column="31">=<pos:position pos:line="68" pos:column="32"/></operator> <call><name pos:line="68" pos:column="33">cbdataReference<pos:position pos:line="68" pos:column="48"/></name><argument_list pos:line="68" pos:column="48">(<argument><expr><name><name pos:line="68" pos:column="49">pools<pos:position pos:line="68" pos:column="54"/></name><index pos:line="68" pos:column="54">[<expr><name pos:line="68" pos:column="55">pool<pos:position pos:line="68" pos:column="59"/></name></expr>]<pos:position pos:line="68" pos:column="60"/></index></name><operator pos:line="68" pos:column="60">.<pos:position pos:line="68" pos:column="61"/></operator><name pos:line="68" pos:column="61">access<pos:position pos:line="68" pos:column="67"/></name></expr></argument>)<pos:position pos:line="68" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="69"/></expr_stmt>
                <decl_stmt><decl><type><name pos:line="69" pos:column="17">allow_t<pos:position pos:line="69" pos:column="24"/></name></type> <name pos:line="69" pos:column="25">answer<pos:position pos:line="69" pos:column="31"/></name> <init pos:line="69" pos:column="32">= <expr><call><name><name pos:line="69" pos:column="34">ch<pos:position pos:line="69" pos:column="36"/></name><operator pos:line="69" pos:column="36">.<pos:position pos:line="69" pos:column="37"/></operator><name pos:line="69" pos:column="37">fastCheck<pos:position pos:line="69" pos:column="46"/></name></name><argument_list pos:line="69" pos:column="46">()<pos:position pos:line="69" pos:column="48"/></argument_list></call></expr></init></decl>;<pos:position pos:line="69" pos:column="49"/></decl_stmt>
                <if pos:line="70" pos:column="17">if <condition pos:line="70" pos:column="20">(<expr><name pos:line="70" pos:column="21">answer<pos:position pos:line="70" pos:column="27"/></name> <operator pos:line="70" pos:column="28">==<pos:position pos:line="70" pos:column="30"/></operator> <name pos:line="70" pos:column="31">ACCESS_ALLOWED<pos:position pos:line="70" pos:column="45"/></name></expr>)<pos:position pos:line="70" pos:column="46"/></condition><then pos:line="70" pos:column="46"> <block pos:line="70" pos:column="47">{

                    <comment type="block" pos:line="72" pos:column="21">/*  request client information from db after we did all checks
                        this will save hash lookup if client failed checks */</comment>
                    <decl_stmt><decl><type><name pos:line="74" pos:column="21">ClientInfo<pos:position pos:line="74" pos:column="31"/></name> <modifier pos:line="74" pos:column="32">*<pos:position pos:line="74" pos:column="33"/></modifier></type> <name pos:line="74" pos:column="34">cli<pos:position pos:line="74" pos:column="37"/></name> <init pos:line="74" pos:column="38">= <expr><call><name pos:line="74" pos:column="40">clientdbGetInfo<pos:position pos:line="74" pos:column="55"/></name><argument_list pos:line="74" pos:column="55">(<argument><expr><name><name pos:line="74" pos:column="56">clientConnection<pos:position pos:line="74" pos:column="72"/></name><operator pos:line="74" pos:column="72">-&gt;<pos:position pos:line="74" pos:column="77"/></operator><name pos:line="74" pos:column="74">remote<pos:position pos:line="74" pos:column="80"/></name></name></expr></argument>)<pos:position pos:line="74" pos:column="81"/></argument_list></call></expr></init></decl>;<pos:position pos:line="74" pos:column="82"/></decl_stmt>
                    <expr_stmt><expr><call><name pos:line="75" pos:column="21">assert<pos:position pos:line="75" pos:column="27"/></name><argument_list pos:line="75" pos:column="27">(<argument><expr><name pos:line="75" pos:column="28">cli<pos:position pos:line="75" pos:column="31"/></name></expr></argument>)<pos:position pos:line="75" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="33"/></expr_stmt>

                    <comment type="block" pos:line="77" pos:column="21">/* put client info in FDE */</comment>
                    <expr_stmt><expr><name><name pos:line="78" pos:column="21">fd_table<pos:position pos:line="78" pos:column="29"/></name><index pos:line="78" pos:column="29">[<expr><name><name pos:line="78" pos:column="30">clientConnection<pos:position pos:line="78" pos:column="46"/></name><operator pos:line="78" pos:column="46">-&gt;<pos:position pos:line="78" pos:column="51"/></operator><name pos:line="78" pos:column="48">fd<pos:position pos:line="78" pos:column="50"/></name></name></expr>]<pos:position pos:line="78" pos:column="51"/></index></name><operator pos:line="78" pos:column="51">.<pos:position pos:line="78" pos:column="52"/></operator><name pos:line="78" pos:column="52">clientInfo<pos:position pos:line="78" pos:column="62"/></name> <operator pos:line="78" pos:column="63">=<pos:position pos:line="78" pos:column="64"/></operator> <name pos:line="78" pos:column="65">cli<pos:position pos:line="78" pos:column="68"/></name></expr>;<pos:position pos:line="78" pos:column="69"/></expr_stmt>

                    <comment type="block" pos:line="80" pos:column="21">/* setup write limiter for this request */</comment>
                    <decl_stmt><decl><type><specifier pos:line="81" pos:column="21">const<pos:position pos:line="81" pos:column="26"/></specifier> <name pos:line="81" pos:column="27">double<pos:position pos:line="81" pos:column="33"/></name></type> <name pos:line="81" pos:column="34">burst<pos:position pos:line="81" pos:column="39"/></name> <init pos:line="81" pos:column="40">= <expr><call><name pos:line="81" pos:column="42">floor<pos:position pos:line="81" pos:column="47"/></name><argument_list pos:line="81" pos:column="47">(<argument><expr><literal type="number" pos:line="81" pos:column="48">0.5<pos:position pos:line="81" pos:column="51"/></literal> <operator pos:line="81" pos:column="52">+<pos:position pos:line="81" pos:column="53"/></operator>
                                               <operator pos:line="82" pos:column="48">(<pos:position pos:line="82" pos:column="49"/></operator><name><name pos:line="82" pos:column="49">pools<pos:position pos:line="82" pos:column="54"/></name><index pos:line="82" pos:column="54">[<expr><name pos:line="82" pos:column="55">pool<pos:position pos:line="82" pos:column="59"/></name></expr>]<pos:position pos:line="82" pos:column="60"/></index></name><operator pos:line="82" pos:column="60">.<pos:position pos:line="82" pos:column="61"/></operator><name pos:line="82" pos:column="61">highwatermark<pos:position pos:line="82" pos:column="74"/></name> <operator pos:line="82" pos:column="75">*<pos:position pos:line="82" pos:column="76"/></operator> <name><name pos:line="82" pos:column="77">Config<pos:position pos:line="82" pos:column="83"/></name><operator pos:line="82" pos:column="83">.<pos:position pos:line="82" pos:column="84"/></operator><name pos:line="82" pos:column="84">ClientDelay<pos:position pos:line="82" pos:column="95"/></name><operator pos:line="82" pos:column="95">.<pos:position pos:line="82" pos:column="96"/></operator><name pos:line="82" pos:column="96">initial<pos:position pos:line="82" pos:column="103"/></name></name><operator pos:line="82" pos:column="103">)<pos:position pos:line="82" pos:column="104"/></operator><operator pos:line="82" pos:column="104">/<pos:position pos:line="82" pos:column="105"/></operator><literal type="number" pos:line="82" pos:column="105">100.0<pos:position pos:line="82" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="82" pos:column="111"/></argument_list></call></expr></init></decl>;<pos:position pos:line="82" pos:column="112"/></decl_stmt>
                    <expr_stmt><expr><call><name><name pos:line="83" pos:column="21">cli<pos:position pos:line="83" pos:column="24"/></name><operator pos:line="83" pos:column="24">-&gt;<pos:position pos:line="83" pos:column="29"/></operator><name pos:line="83" pos:column="26">setWriteLimiter<pos:position pos:line="83" pos:column="41"/></name></name><argument_list pos:line="83" pos:column="41">(<argument><expr><name><name pos:line="83" pos:column="42">pools<pos:position pos:line="83" pos:column="47"/></name><index pos:line="83" pos:column="47">[<expr><name pos:line="83" pos:column="48">pool<pos:position pos:line="83" pos:column="52"/></name></expr>]<pos:position pos:line="83" pos:column="53"/></index></name><operator pos:line="83" pos:column="53">.<pos:position pos:line="83" pos:column="54"/></operator><name pos:line="83" pos:column="54">rate<pos:position pos:line="83" pos:column="58"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="60">burst<pos:position pos:line="83" pos:column="65"/></name></expr></argument>, <argument><expr><name><name pos:line="83" pos:column="67">pools<pos:position pos:line="83" pos:column="72"/></name><index pos:line="83" pos:column="72">[<expr><name pos:line="83" pos:column="73">pool<pos:position pos:line="83" pos:column="77"/></name></expr>]<pos:position pos:line="83" pos:column="78"/></index></name><operator pos:line="83" pos:column="78">.<pos:position pos:line="83" pos:column="79"/></operator><name pos:line="83" pos:column="79">highwatermark<pos:position pos:line="83" pos:column="92"/></name></expr></argument>)<pos:position pos:line="83" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="94"/></expr_stmt>
                    <break pos:line="84" pos:column="21">break;<pos:position pos:line="84" pos:column="27"/></break>
                }<pos:position pos:line="85" pos:column="18"/></block></then> <else pos:line="85" pos:column="19">else <block pos:line="85" pos:column="24">{
                    <expr_stmt><expr><call><name pos:line="86" pos:column="21">debugs<pos:position pos:line="86" pos:column="27"/></name><argument_list pos:line="86" pos:column="27">(<argument><expr><literal type="number" pos:line="86" pos:column="28">83<pos:position pos:line="86" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="86" pos:column="32">4<pos:position pos:line="86" pos:column="33"/></literal></expr></argument>, <argument><expr><name pos:line="86" pos:column="35">HERE<pos:position pos:line="86" pos:column="39"/></name> <operator pos:line="86" pos:column="40">&lt;&lt;<pos:position pos:line="86" pos:column="48"/></operator> <literal type="string" pos:line="86" pos:column="43">"Delay pool "<pos:position pos:line="86" pos:column="56"/></literal> <operator pos:line="86" pos:column="57">&lt;&lt;<pos:position pos:line="86" pos:column="65"/></operator> <name pos:line="86" pos:column="60">pool<pos:position pos:line="86" pos:column="64"/></name> <operator pos:line="86" pos:column="65">&lt;&lt;<pos:position pos:line="86" pos:column="73"/></operator> <literal type="string" pos:line="86" pos:column="68">" skipped because ACL "<pos:position pos:line="86" pos:column="91"/></literal> <operator pos:line="86" pos:column="92">&lt;&lt;<pos:position pos:line="86" pos:column="100"/></operator> <name pos:line="86" pos:column="95">answer<pos:position pos:line="86" pos:column="101"/></name></expr></argument>)<pos:position pos:line="86" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="103"/></expr_stmt>
                }<pos:position pos:line="87" pos:column="18"/></block></else></if>
            }<pos:position pos:line="88" pos:column="14"/></block></then></if>
        }<pos:position pos:line="89" pos:column="10"/></block></for>
    }<pos:position pos:line="90" pos:column="6"/></block></then></if>
<cpp:endif pos:line="91" pos:column="1">#<cpp:directive pos:line="91" pos:column="2">endif<pos:position pos:line="91" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="line" pos:line="93" pos:column="5">// kids must extend to actually start doing something (e.g., reading)</comment>
}<pos:position pos:line="94" pos:column="2"/></block></function></unit>

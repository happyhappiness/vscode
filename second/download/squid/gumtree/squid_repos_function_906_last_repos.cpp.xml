<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_906_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_UrlHelperTimeout<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name><name pos:line="2" pos:column="24">SquidConfig<pos:position pos:line="2" pos:column="35"/></name><operator pos:line="2" pos:column="35">::<pos:position pos:line="2" pos:column="37"/></operator><name pos:line="2" pos:column="37">UrlHelperTimeout<pos:position pos:line="2" pos:column="53"/></name></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type><name pos:line="2" pos:column="55">config<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">time_msec_t<pos:position pos:line="4" pos:column="16"/></name></type> <name pos:line="4" pos:column="17">tval<pos:position pos:line="4" pos:column="21"/></name></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">parseTimeLine<pos:position pos:line="5" pos:column="18"/></name><argument_list pos:line="5" pos:column="18">(<argument><expr><operator pos:line="5" pos:column="19">&amp;<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="20">tval<pos:position pos:line="5" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="26">T_SECOND_STR<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="5" pos:column="40">false<pos:position pos:line="5" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="5" pos:column="47">true<pos:position pos:line="5" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="6" pos:column="5">Config<pos:position pos:line="6" pos:column="11"/></name><operator pos:line="6" pos:column="11">.<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">Timeout<pos:position pos:line="6" pos:column="19"/></name><operator pos:line="6" pos:column="19">.<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">urlRewrite<pos:position pos:line="6" pos:column="30"/></name></name> <operator pos:line="6" pos:column="31">=<pos:position pos:line="6" pos:column="32"/></operator> <cast type="static" pos:line="6" pos:column="33">static_cast<argument_list type="generic" pos:line="6" pos:column="44">&lt;<argument><expr><name pos:line="6" pos:column="45">time_t<pos:position pos:line="6" pos:column="51"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="55"/></argument_list><argument_list pos:line="6" pos:column="52">(<argument><expr><name pos:line="6" pos:column="53">tval<pos:position pos:line="6" pos:column="57"/></name><operator pos:line="6" pos:column="57">/<pos:position pos:line="6" pos:column="58"/></operator><literal type="number" pos:line="6" pos:column="58">1000<pos:position pos:line="6" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></cast></expr>;<pos:position pos:line="6" pos:column="64"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">key<pos:position pos:line="8" pos:column="14"/></name></decl>, <modifier pos:line="8" pos:column="16">*<pos:position pos:line="8" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="8" pos:column="17">value<pos:position pos:line="8" pos:column="22"/></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <while pos:line="9" pos:column="5">while<condition pos:line="9" pos:column="10">(<expr><call><name><name pos:line="9" pos:column="11">ConfigParser<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">::<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">NextKvPair<pos:position pos:line="9" pos:column="35"/></name></name><argument_list pos:line="9" pos:column="35">(<argument><expr><name pos:line="9" pos:column="36">key<pos:position pos:line="9" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="41">value<pos:position pos:line="9" pos:column="46"/></name></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="48"/></condition> <block pos:line="9" pos:column="49">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">strcasecmp<pos:position pos:line="10" pos:column="23"/></name><argument_list pos:line="10" pos:column="23">(<argument><expr><name pos:line="10" pos:column="24">key<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="29">"on_timeout"<pos:position pos:line="10" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call> <operator pos:line="10" pos:column="43">==<pos:position pos:line="10" pos:column="45"/></operator> <literal type="number" pos:line="10" pos:column="46">0<pos:position pos:line="10" pos:column="47"/></literal></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48"> <block pos:line="10" pos:column="49">{
            <if pos:line="11" pos:column="13">if <condition pos:line="11" pos:column="16">(<expr><call><name pos:line="11" pos:column="17">strcasecmp<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><name pos:line="11" pos:column="28">value<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"bypass"<pos:position pos:line="11" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="44"/></argument_list></call> <operator pos:line="11" pos:column="45">==<pos:position pos:line="11" pos:column="47"/></operator> <literal type="number" pos:line="11" pos:column="48">0<pos:position pos:line="11" pos:column="49"/></literal></expr>)<pos:position pos:line="11" pos:column="50"/></condition><then pos:line="11" pos:column="50">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="12" pos:column="17">config<pos:position pos:line="12" pos:column="23"/></name><operator pos:line="12" pos:column="23">-&gt;<pos:position pos:line="12" pos:column="28"/></operator><name pos:line="12" pos:column="25">action<pos:position pos:line="12" pos:column="31"/></name></name> <operator pos:line="12" pos:column="32">=<pos:position pos:line="12" pos:column="33"/></operator> <name pos:line="12" pos:column="34">toutActBypass<pos:position pos:line="12" pos:column="47"/></name></expr>;<pos:position pos:line="12" pos:column="48"/></expr_stmt></block></then>
            <elseif pos:line="13" pos:column="13">else <if pos:line="13" pos:column="18">if <condition pos:line="13" pos:column="21">(<expr><call><name pos:line="13" pos:column="22">strcasecmp<pos:position pos:line="13" pos:column="32"/></name><argument_list pos:line="13" pos:column="32">(<argument><expr><name pos:line="13" pos:column="33">value<pos:position pos:line="13" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="40">"fail"<pos:position pos:line="13" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call> <operator pos:line="13" pos:column="48">==<pos:position pos:line="13" pos:column="50"/></operator> <literal type="number" pos:line="13" pos:column="51">0<pos:position pos:line="13" pos:column="52"/></literal></expr>)<pos:position pos:line="13" pos:column="53"/></condition><then pos:line="13" pos:column="53">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="14" pos:column="17">config<pos:position pos:line="14" pos:column="23"/></name><operator pos:line="14" pos:column="23">-&gt;<pos:position pos:line="14" pos:column="28"/></operator><name pos:line="14" pos:column="25">action<pos:position pos:line="14" pos:column="31"/></name></name> <operator pos:line="14" pos:column="32">=<pos:position pos:line="14" pos:column="33"/></operator> <name pos:line="14" pos:column="34">toutActFail<pos:position pos:line="14" pos:column="45"/></name></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt></block></then></if></elseif>
            <elseif pos:line="15" pos:column="13">else <if pos:line="15" pos:column="18">if <condition pos:line="15" pos:column="21">(<expr><call><name pos:line="15" pos:column="22">strcasecmp<pos:position pos:line="15" pos:column="32"/></name><argument_list pos:line="15" pos:column="32">(<argument><expr><name pos:line="15" pos:column="33">value<pos:position pos:line="15" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="40">"retry"<pos:position pos:line="15" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="48"/></argument_list></call> <operator pos:line="15" pos:column="49">==<pos:position pos:line="15" pos:column="51"/></operator> <literal type="number" pos:line="15" pos:column="52">0<pos:position pos:line="15" pos:column="53"/></literal></expr>)<pos:position pos:line="15" pos:column="54"/></condition><then pos:line="15" pos:column="54">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="16" pos:column="17">config<pos:position pos:line="16" pos:column="23"/></name><operator pos:line="16" pos:column="23">-&gt;<pos:position pos:line="16" pos:column="28"/></operator><name pos:line="16" pos:column="25">action<pos:position pos:line="16" pos:column="31"/></name></name> <operator pos:line="16" pos:column="32">=<pos:position pos:line="16" pos:column="33"/></operator> <name pos:line="16" pos:column="34">toutActRetry<pos:position pos:line="16" pos:column="46"/></name></expr>;<pos:position pos:line="16" pos:column="47"/></expr_stmt></block></then></if></elseif>
            <elseif pos:line="17" pos:column="13">else <if pos:line="17" pos:column="18">if <condition pos:line="17" pos:column="21">(<expr><call><name pos:line="17" pos:column="22">strcasecmp<pos:position pos:line="17" pos:column="32"/></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name pos:line="17" pos:column="33">value<pos:position pos:line="17" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="40">"use_configured_response"<pos:position pos:line="17" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="66"/></argument_list></call> <operator pos:line="17" pos:column="67">==<pos:position pos:line="17" pos:column="69"/></operator> <literal type="number" pos:line="17" pos:column="70">0<pos:position pos:line="17" pos:column="71"/></literal></expr>)<pos:position pos:line="17" pos:column="72"/></condition><then pos:line="17" pos:column="72"> <block pos:line="17" pos:column="73">{
                <expr_stmt><expr><name><name pos:line="18" pos:column="17">config<pos:position pos:line="18" pos:column="23"/></name><operator pos:line="18" pos:column="23">-&gt;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="25">action<pos:position pos:line="18" pos:column="31"/></name></name> <operator pos:line="18" pos:column="32">=<pos:position pos:line="18" pos:column="33"/></operator> <name pos:line="18" pos:column="34">toutActUseConfiguredResponse<pos:position pos:line="18" pos:column="62"/></name></expr>;<pos:position pos:line="18" pos:column="63"/></expr_stmt>
            }<pos:position pos:line="19" pos:column="14"/></block></then></if></elseif> <else pos:line="19" pos:column="15">else <block pos:line="19" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="20" pos:column="17">debugs<pos:position pos:line="20" pos:column="23"/></name><argument_list pos:line="20" pos:column="23">(<argument><expr><literal type="number" pos:line="20" pos:column="24">3<pos:position pos:line="20" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="27">DBG_CRITICAL<pos:position pos:line="20" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="41">"FATAL: unsuported \"on_timeout\"  action:"<pos:position pos:line="20" pos:column="84"/></literal> <operator pos:line="20" pos:column="85">&lt;&lt;<pos:position pos:line="20" pos:column="93"/></operator> <name pos:line="20" pos:column="88">value<pos:position pos:line="20" pos:column="93"/></name></expr></argument>)<pos:position pos:line="20" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="95"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="21" pos:column="17">self_destruct<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">()<pos:position pos:line="21" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="33"/></expr_stmt>
                <return pos:line="22" pos:column="17">return;<pos:position pos:line="22" pos:column="24"/></return>
            }<pos:position pos:line="23" pos:column="14"/></block></else></if>
        }<pos:position pos:line="24" pos:column="10"/></block></then> <elseif pos:line="24" pos:column="11">else <if pos:line="24" pos:column="16">if <condition pos:line="24" pos:column="19">(<expr><call><name pos:line="24" pos:column="20">strcasecmp<pos:position pos:line="24" pos:column="30"/></name><argument_list pos:line="24" pos:column="30">(<argument><expr><name pos:line="24" pos:column="31">key<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="36">"response"<pos:position pos:line="24" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call> <operator pos:line="24" pos:column="48">==<pos:position pos:line="24" pos:column="50"/></operator> <literal type="number" pos:line="24" pos:column="51">0<pos:position pos:line="24" pos:column="52"/></literal></expr>)<pos:position pos:line="24" pos:column="53"/></condition><then pos:line="24" pos:column="53"> <block pos:line="24" pos:column="54">{
            <expr_stmt><expr><name><name pos:line="25" pos:column="13">config<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">response<pos:position pos:line="25" pos:column="29"/></name></name> <operator pos:line="25" pos:column="30">=<pos:position pos:line="25" pos:column="31"/></operator> <call><name pos:line="25" pos:column="32">xstrdup<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name pos:line="25" pos:column="40">value<pos:position pos:line="25" pos:column="45"/></name></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></then></if></elseif> <else pos:line="26" pos:column="11">else <block pos:line="26" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">debugs<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="number" pos:line="27" pos:column="20">3<pos:position pos:line="27" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="23">DBG_CRITICAL<pos:position pos:line="27" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="37">"FATAL: unsuported option "<pos:position pos:line="27" pos:column="64"/></literal> <operator pos:line="27" pos:column="65">&lt;&lt;<pos:position pos:line="27" pos:column="73"/></operator> <name pos:line="27" pos:column="68">key<pos:position pos:line="27" pos:column="71"/></name></expr></argument>)<pos:position pos:line="27" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">self_destruct<pos:position pos:line="28" pos:column="26"/></name><argument_list pos:line="28" pos:column="26">()<pos:position pos:line="28" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="29"/></expr_stmt>
            <return pos:line="29" pos:column="13">return;<pos:position pos:line="29" pos:column="20"/></return>
        }<pos:position pos:line="30" pos:column="10"/></block></else></if>
    }<pos:position pos:line="31" pos:column="6"/></block></while>

    <if pos:line="33" pos:column="5">if <condition pos:line="33" pos:column="8">(<expr><name><name pos:line="33" pos:column="9">config<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">action<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">==<pos:position pos:line="33" pos:column="26"/></operator> <name pos:line="33" pos:column="27">toutActUseConfiguredResponse<pos:position pos:line="33" pos:column="55"/></name> <operator pos:line="33" pos:column="56">&amp;&amp;<pos:position pos:line="33" pos:column="66"/></operator> <operator pos:line="33" pos:column="59">!<pos:position pos:line="33" pos:column="60"/></operator><name><name pos:line="33" pos:column="60">config<pos:position pos:line="33" pos:column="66"/></name><operator pos:line="33" pos:column="66">-&gt;<pos:position pos:line="33" pos:column="71"/></operator><name pos:line="33" pos:column="68">response<pos:position pos:line="33" pos:column="76"/></name></name></expr>)<pos:position pos:line="33" pos:column="77"/></condition><then pos:line="33" pos:column="77"> <block pos:line="33" pos:column="78">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">debugs<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="number" pos:line="34" pos:column="16">3<pos:position pos:line="34" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="19">DBG_CRITICAL<pos:position pos:line="34" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="33">"FATAL: Expected 'response=' option after 'on_timeout=use_configured_response' option"<pos:position pos:line="34" pos:column="119"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="121"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">self_destruct<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">()<pos:position pos:line="35" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">config<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">-&gt;<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="17">action<pos:position pos:line="38" pos:column="23"/></name></name> <operator pos:line="38" pos:column="24">!=<pos:position pos:line="38" pos:column="26"/></operator> <name pos:line="38" pos:column="27">toutActUseConfiguredResponse<pos:position pos:line="38" pos:column="55"/></name> <operator pos:line="38" pos:column="56">&amp;&amp;<pos:position pos:line="38" pos:column="66"/></operator> <name><name pos:line="38" pos:column="59">config<pos:position pos:line="38" pos:column="65"/></name><operator pos:line="38" pos:column="65">-&gt;<pos:position pos:line="38" pos:column="70"/></operator><name pos:line="38" pos:column="67">response<pos:position pos:line="38" pos:column="75"/></name></name></expr>)<pos:position pos:line="38" pos:column="76"/></condition><then pos:line="38" pos:column="76"> <block pos:line="38" pos:column="77">{
        <expr_stmt><expr><call><name pos:line="39" pos:column="9">debugs<pos:position pos:line="39" pos:column="15"/></name><argument_list pos:line="39" pos:column="15">(<argument><expr><literal type="number" pos:line="39" pos:column="16">3<pos:position pos:line="39" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="19">DBG_CRITICAL<pos:position pos:line="39" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="33">"FATAL: 'response=' option is valid only when used with the  'on_timeout=use_configured_response' option"<pos:position pos:line="39" pos:column="138"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="139"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="140"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">self_destruct<pos:position pos:line="40" pos:column="22"/></name><argument_list pos:line="40" pos:column="22">()<pos:position pos:line="40" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>
}<pos:position pos:line="42" pos:column="2"/></block></function></unit>

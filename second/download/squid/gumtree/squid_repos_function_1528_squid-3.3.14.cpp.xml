<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1528_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">CachePeer<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name pos:line="2" pos:column="1">carpSelectParent<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">HttpRequest<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">request<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">k<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">CachePeer<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">p<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><name pos:line="5" pos:column="20">NULL<pos:position pos:line="5" pos:column="24"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">CachePeer<pos:position pos:line="6" pos:column="14"/></name> <modifier pos:line="6" pos:column="15">*<pos:position pos:line="6" pos:column="16"/></modifier></type><name pos:line="6" pos:column="16">tp<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">unsigned<pos:position pos:line="7" pos:column="13"/></name> <name pos:line="7" pos:column="14">int<pos:position pos:line="7" pos:column="17"/></name></type> <name pos:line="7" pos:column="18">user_hash<pos:position pos:line="7" pos:column="27"/></name> <init pos:line="7" pos:column="28">= <expr><literal type="number" pos:line="7" pos:column="30">0<pos:position pos:line="7" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">unsigned<pos:position pos:line="8" pos:column="13"/></name> <name pos:line="8" pos:column="14">int<pos:position pos:line="8" pos:column="17"/></name></type> <name pos:line="8" pos:column="18">combined_hash<pos:position pos:line="8" pos:column="31"/></name></decl>;<pos:position pos:line="8" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">double<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">score<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">double<pos:position pos:line="10" pos:column="11"/></name></type> <name pos:line="10" pos:column="12">high_score<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><literal type="number" pos:line="10" pos:column="25">0<pos:position pos:line="10" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">n_carp_peers<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">==<pos:position pos:line="12" pos:column="24"/></operator> <literal type="number" pos:line="12" pos:column="25">0<pos:position pos:line="12" pos:column="26"/></literal></expr>)<pos:position pos:line="12" pos:column="27"/></condition><then pos:line="12" pos:column="27">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">NULL<pos:position pos:line="13" pos:column="20"/></name></expr>;<pos:position pos:line="13" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="15" pos:column="5">/* calculate hash key */</comment>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugs<pos:position pos:line="16" pos:column="11"/></name><argument_list pos:line="16" pos:column="11">(<argument><expr><literal type="number" pos:line="16" pos:column="12">39<pos:position pos:line="16" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="16">2<pos:position pos:line="16" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"carpSelectParent: Calculating hash for "<pos:position pos:line="16" pos:column="60"/></literal> <operator pos:line="16" pos:column="61">&lt;&lt;<pos:position pos:line="16" pos:column="69"/></operator> <call><name pos:line="16" pos:column="64">urlCanonical<pos:position pos:line="16" pos:column="76"/></name><argument_list pos:line="16" pos:column="76">(<argument><expr><name pos:line="16" pos:column="77">request<pos:position pos:line="16" pos:column="84"/></name></expr></argument>)<pos:position pos:line="16" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="87"/></expr_stmt>

    <comment type="block" pos:line="18" pos:column="5">/* select CachePeer */</comment>
    <for pos:line="19" pos:column="5">for <control pos:line="19" pos:column="9">(<init><expr><name pos:line="19" pos:column="10">k<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <literal type="number" pos:line="19" pos:column="14">0<pos:position pos:line="19" pos:column="15"/></literal></expr>;<pos:position pos:line="19" pos:column="16"/></init> <condition><expr><name pos:line="19" pos:column="17">k<pos:position pos:line="19" pos:column="18"/></name> <operator pos:line="19" pos:column="19">&lt;<pos:position pos:line="19" pos:column="23"/></operator> <name pos:line="19" pos:column="21">n_carp_peers<pos:position pos:line="19" pos:column="33"/></name></expr>;<pos:position pos:line="19" pos:column="34"/></condition> <incr><expr><operator pos:line="19" pos:column="35">++<pos:position pos:line="19" pos:column="37"/></operator><name pos:line="19" pos:column="37">k<pos:position pos:line="19" pos:column="38"/></name></expr></incr>)<pos:position pos:line="19" pos:column="39"/></control> <block pos:line="19" pos:column="40">{
        <decl_stmt><decl><type><name pos:line="20" pos:column="9">String<pos:position pos:line="20" pos:column="15"/></name></type> <name pos:line="20" pos:column="16">key<pos:position pos:line="20" pos:column="19"/></name></decl>;<pos:position pos:line="20" pos:column="20"/></decl_stmt>
        <expr_stmt><expr><name pos:line="21" pos:column="9">tp<pos:position pos:line="21" pos:column="11"/></name> <operator pos:line="21" pos:column="12">=<pos:position pos:line="21" pos:column="13"/></operator> <name><name pos:line="21" pos:column="14">carp_peers<pos:position pos:line="21" pos:column="24"/></name><index pos:line="21" pos:column="24">[<expr><name pos:line="21" pos:column="25">k<pos:position pos:line="21" pos:column="26"/></name></expr>]<pos:position pos:line="21" pos:column="27"/></index></name></expr>;<pos:position pos:line="21" pos:column="28"/></expr_stmt>
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">tp<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">-&gt;<pos:position pos:line="22" pos:column="20"/></operator><name pos:line="22" pos:column="17">options<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">.<pos:position pos:line="22" pos:column="25"/></operator><name pos:line="22" pos:column="25">carp_key<pos:position pos:line="22" pos:column="33"/></name><operator pos:line="22" pos:column="33">.<pos:position pos:line="22" pos:column="34"/></operator><name pos:line="22" pos:column="34">set<pos:position pos:line="22" pos:column="37"/></name></name></expr>)<pos:position pos:line="22" pos:column="38"/></condition><then pos:line="22" pos:column="38"> <block pos:line="22" pos:column="39">{
            <comment type="line" pos:line="23" pos:column="13">//this code follows urlCanonical's pattern.</comment>
            <comment type="line" pos:line="24" pos:column="13">//   corner cases should use the canonical URL</comment>
            <if pos:line="25" pos:column="13">if <condition pos:line="25" pos:column="16">(<expr><name><name pos:line="25" pos:column="17">tp<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">-&gt;<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="21">options<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">.<pos:position pos:line="25" pos:column="29"/></operator><name pos:line="25" pos:column="29">carp_key<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">.<pos:position pos:line="25" pos:column="38"/></operator><name pos:line="25" pos:column="38">scheme<pos:position pos:line="25" pos:column="44"/></name></name></expr>)<pos:position pos:line="25" pos:column="45"/></condition><then pos:line="25" pos:column="45"> <block pos:line="25" pos:column="46">{
                <comment type="line" pos:line="26" pos:column="17">// temporary, until bug 1961 URL handling is fixed.</comment>
                <decl_stmt><decl><type><specifier pos:line="27" pos:column="17">const<pos:position pos:line="27" pos:column="22"/></specifier> <name pos:line="27" pos:column="23">URLScheme<pos:position pos:line="27" pos:column="32"/></name></type> <name pos:line="27" pos:column="33">sch<pos:position pos:line="27" pos:column="36"/></name> <init pos:line="27" pos:column="37">= <expr><name><name pos:line="27" pos:column="39">request<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">protocol<pos:position pos:line="27" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="27" pos:column="57"/></decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="28" pos:column="17">key<pos:position pos:line="28" pos:column="20"/></name><operator pos:line="28" pos:column="20">.<pos:position pos:line="28" pos:column="21"/></operator><name pos:line="28" pos:column="21">append<pos:position pos:line="28" pos:column="27"/></name></name><argument_list pos:line="28" pos:column="27">(<argument><expr><call><name><name pos:line="28" pos:column="28">sch<pos:position pos:line="28" pos:column="31"/></name><operator pos:line="28" pos:column="31">.<pos:position pos:line="28" pos:column="32"/></operator><name pos:line="28" pos:column="32">const_str<pos:position pos:line="28" pos:column="41"/></name></name><argument_list pos:line="28" pos:column="41">()<pos:position pos:line="28" pos:column="43"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="45"/></expr_stmt>
                <if pos:line="29" pos:column="17">if <condition pos:line="29" pos:column="20">(<expr><call><name><name pos:line="29" pos:column="21">key<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">.<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">size<pos:position pos:line="29" pos:column="29"/></name></name><argument_list pos:line="29" pos:column="29">()<pos:position pos:line="29" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="29" pos:column="32"/></condition><then pos:line="29" pos:column="32"> <comment type="line" pos:line="29" pos:column="33">//if the scheme is not empty</comment>
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="30" pos:column="21">key<pos:position pos:line="30" pos:column="24"/></name><operator pos:line="30" pos:column="24">.<pos:position pos:line="30" pos:column="25"/></operator><name pos:line="30" pos:column="25">append<pos:position pos:line="30" pos:column="31"/></name></name><argument_list pos:line="30" pos:column="31">(<argument><expr><literal type="string" pos:line="30" pos:column="32">"://"<pos:position pos:line="30" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt></block></then></if>
            }<pos:position pos:line="31" pos:column="14"/></block></then></if>
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name><name pos:line="32" pos:column="17">tp<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">-&gt;<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="21">options<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">.<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="29">carp_key<pos:position pos:line="32" pos:column="37"/></name><operator pos:line="32" pos:column="37">.<pos:position pos:line="32" pos:column="38"/></operator><name pos:line="32" pos:column="38">host<pos:position pos:line="32" pos:column="42"/></name></name></expr>)<pos:position pos:line="32" pos:column="43"/></condition><then pos:line="32" pos:column="43"> <block pos:line="32" pos:column="44">{
                <expr_stmt><expr><call><name><name pos:line="33" pos:column="17">key<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">.<pos:position pos:line="33" pos:column="21"/></operator><name pos:line="33" pos:column="21">append<pos:position pos:line="33" pos:column="27"/></name></name><argument_list pos:line="33" pos:column="27">(<argument><expr><call><name><name pos:line="33" pos:column="28">request<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">GetHost<pos:position pos:line="33" pos:column="44"/></name></name><argument_list pos:line="33" pos:column="44">()<pos:position pos:line="33" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="48"/></expr_stmt>
            }<pos:position pos:line="34" pos:column="14"/></block></then></if>
            <if pos:line="35" pos:column="13">if <condition pos:line="35" pos:column="16">(<expr><name><name pos:line="35" pos:column="17">tp<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">options<pos:position pos:line="35" pos:column="28"/></name><operator pos:line="35" pos:column="28">.<pos:position pos:line="35" pos:column="29"/></operator><name pos:line="35" pos:column="29">carp_key<pos:position pos:line="35" pos:column="37"/></name><operator pos:line="35" pos:column="37">.<pos:position pos:line="35" pos:column="38"/></operator><name pos:line="35" pos:column="38">port<pos:position pos:line="35" pos:column="42"/></name></name></expr>)<pos:position pos:line="35" pos:column="43"/></condition><then pos:line="35" pos:column="43"> <block pos:line="35" pos:column="44">{
                <decl_stmt><decl><specifier pos:line="36" pos:column="17">static<pos:position pos:line="36" pos:column="23"/></specifier> <type><name pos:line="36" pos:column="24">char<pos:position pos:line="36" pos:column="28"/></name></type> <name><name pos:line="36" pos:column="29">portbuf<pos:position pos:line="36" pos:column="36"/></name><index pos:line="36" pos:column="36">[<expr><literal type="number" pos:line="36" pos:column="37">7<pos:position pos:line="36" pos:column="38"/></literal></expr>]<pos:position pos:line="36" pos:column="39"/></index></name></decl>;<pos:position pos:line="36" pos:column="40"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">snprintf<pos:position pos:line="37" pos:column="25"/></name><argument_list pos:line="37" pos:column="25">(<argument><expr><name pos:line="37" pos:column="26">portbuf<pos:position pos:line="37" pos:column="33"/></name></expr></argument>,<argument><expr><literal type="number" pos:line="37" pos:column="34">7<pos:position pos:line="37" pos:column="35"/></literal></expr></argument>,<argument><expr><literal type="string" pos:line="37" pos:column="36">":%d"<pos:position pos:line="37" pos:column="41"/></literal></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="43">request<pos:position pos:line="37" pos:column="50"/></name><operator pos:line="37" pos:column="50">-&gt;<pos:position pos:line="37" pos:column="55"/></operator><name pos:line="37" pos:column="52">port<pos:position pos:line="37" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="58"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="38" pos:column="17">key<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">.<pos:position pos:line="38" pos:column="21"/></operator><name pos:line="38" pos:column="21">append<pos:position pos:line="38" pos:column="27"/></name></name><argument_list pos:line="38" pos:column="27">(<argument><expr><name pos:line="38" pos:column="28">portbuf<pos:position pos:line="38" pos:column="35"/></name></expr></argument>)<pos:position pos:line="38" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="37"/></expr_stmt>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>
            <if pos:line="40" pos:column="13">if <condition pos:line="40" pos:column="16">(<expr><name><name pos:line="40" pos:column="17">tp<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">-&gt;<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="21">options<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">.<pos:position pos:line="40" pos:column="29"/></operator><name pos:line="40" pos:column="29">carp_key<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">.<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="38">path<pos:position pos:line="40" pos:column="42"/></name></name></expr>)<pos:position pos:line="40" pos:column="43"/></condition><then pos:line="40" pos:column="43"> <block pos:line="40" pos:column="44">{
                <decl_stmt><decl><type><name><name pos:line="41" pos:column="17">String<pos:position pos:line="41" pos:column="23"/></name><operator pos:line="41" pos:column="23">::<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">size_type<pos:position pos:line="41" pos:column="34"/></name></name></type> <name pos:line="41" pos:column="35">pos<pos:position pos:line="41" pos:column="38"/></name></decl>;<pos:position pos:line="41" pos:column="39"/></decl_stmt>
                <if pos:line="42" pos:column="17">if <condition pos:line="42" pos:column="20">(<expr><operator pos:line="42" pos:column="21">(<pos:position pos:line="42" pos:column="22"/></operator><name pos:line="42" pos:column="22">pos<pos:position pos:line="42" pos:column="25"/></name><operator pos:line="42" pos:column="25">=<pos:position pos:line="42" pos:column="26"/></operator><call><name><name pos:line="42" pos:column="26">request<pos:position pos:line="42" pos:column="33"/></name><operator pos:line="42" pos:column="33">-&gt;<pos:position pos:line="42" pos:column="38"/></operator><name pos:line="42" pos:column="35">urlpath<pos:position pos:line="42" pos:column="42"/></name><operator pos:line="42" pos:column="42">.<pos:position pos:line="42" pos:column="43"/></operator><name pos:line="42" pos:column="43">find<pos:position pos:line="42" pos:column="47"/></name></name><argument_list pos:line="42" pos:column="47">(<argument><expr><literal type="char" pos:line="42" pos:column="48">'?'<pos:position pos:line="42" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="52"/></argument_list></call><operator pos:line="42" pos:column="52">)<pos:position pos:line="42" pos:column="53"/></operator><operator pos:line="42" pos:column="53">!=<pos:position pos:line="42" pos:column="55"/></operator><name><name pos:line="42" pos:column="55">String<pos:position pos:line="42" pos:column="61"/></name><operator pos:line="42" pos:column="61">::<pos:position pos:line="42" pos:column="63"/></operator><name pos:line="42" pos:column="63">npos<pos:position pos:line="42" pos:column="67"/></name></name></expr>)<pos:position pos:line="42" pos:column="68"/></condition><then pos:line="42" pos:column="68">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="43" pos:column="21">key<pos:position pos:line="43" pos:column="24"/></name><operator pos:line="43" pos:column="24">.<pos:position pos:line="43" pos:column="25"/></operator><name pos:line="43" pos:column="25">append<pos:position pos:line="43" pos:column="31"/></name></name><argument_list pos:line="43" pos:column="31">(<argument><expr><call><name><name pos:line="43" pos:column="32">request<pos:position pos:line="43" pos:column="39"/></name><operator pos:line="43" pos:column="39">-&gt;<pos:position pos:line="43" pos:column="44"/></operator><name pos:line="43" pos:column="41">urlpath<pos:position pos:line="43" pos:column="48"/></name><operator pos:line="43" pos:column="48">.<pos:position pos:line="43" pos:column="49"/></operator><name pos:line="43" pos:column="49">substr<pos:position pos:line="43" pos:column="55"/></name></name><argument_list pos:line="43" pos:column="55">(<argument><expr><literal type="number" pos:line="43" pos:column="56">0<pos:position pos:line="43" pos:column="57"/></literal></expr></argument>,<argument><expr><name pos:line="43" pos:column="58">pos<pos:position pos:line="43" pos:column="61"/></name></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="64"/></expr_stmt></block></then>
                <else pos:line="44" pos:column="17">else
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="45" pos:column="21">key<pos:position pos:line="45" pos:column="24"/></name><operator pos:line="45" pos:column="24">.<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="25">append<pos:position pos:line="45" pos:column="31"/></name></name><argument_list pos:line="45" pos:column="31">(<argument><expr><name><name pos:line="45" pos:column="32">request<pos:position pos:line="45" pos:column="39"/></name><operator pos:line="45" pos:column="39">-&gt;<pos:position pos:line="45" pos:column="44"/></operator><name pos:line="45" pos:column="41">urlpath<pos:position pos:line="45" pos:column="48"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="50"/></expr_stmt></block></else></if>
            }<pos:position pos:line="46" pos:column="14"/></block></then></if>
            <if pos:line="47" pos:column="13">if <condition pos:line="47" pos:column="16">(<expr><name><name pos:line="47" pos:column="17">tp<pos:position pos:line="47" pos:column="19"/></name><operator pos:line="47" pos:column="19">-&gt;<pos:position pos:line="47" pos:column="24"/></operator><name pos:line="47" pos:column="21">options<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">.<pos:position pos:line="47" pos:column="29"/></operator><name pos:line="47" pos:column="29">carp_key<pos:position pos:line="47" pos:column="37"/></name><operator pos:line="47" pos:column="37">.<pos:position pos:line="47" pos:column="38"/></operator><name pos:line="47" pos:column="38">params<pos:position pos:line="47" pos:column="44"/></name></name></expr>)<pos:position pos:line="47" pos:column="45"/></condition><then pos:line="47" pos:column="45"> <block pos:line="47" pos:column="46">{
                <decl_stmt><decl><type><name><name pos:line="48" pos:column="17">String<pos:position pos:line="48" pos:column="23"/></name><operator pos:line="48" pos:column="23">::<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="25">size_type<pos:position pos:line="48" pos:column="34"/></name></name></type> <name pos:line="48" pos:column="35">pos<pos:position pos:line="48" pos:column="38"/></name></decl>;<pos:position pos:line="48" pos:column="39"/></decl_stmt>
                <if pos:line="49" pos:column="17">if <condition pos:line="49" pos:column="20">(<expr><operator pos:line="49" pos:column="21">(<pos:position pos:line="49" pos:column="22"/></operator><name pos:line="49" pos:column="22">pos<pos:position pos:line="49" pos:column="25"/></name><operator pos:line="49" pos:column="25">=<pos:position pos:line="49" pos:column="26"/></operator><call><name><name pos:line="49" pos:column="26">request<pos:position pos:line="49" pos:column="33"/></name><operator pos:line="49" pos:column="33">-&gt;<pos:position pos:line="49" pos:column="38"/></operator><name pos:line="49" pos:column="35">urlpath<pos:position pos:line="49" pos:column="42"/></name><operator pos:line="49" pos:column="42">.<pos:position pos:line="49" pos:column="43"/></operator><name pos:line="49" pos:column="43">find<pos:position pos:line="49" pos:column="47"/></name></name><argument_list pos:line="49" pos:column="47">(<argument><expr><literal type="char" pos:line="49" pos:column="48">'?'<pos:position pos:line="49" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="52"/></argument_list></call><operator pos:line="49" pos:column="52">)<pos:position pos:line="49" pos:column="53"/></operator><operator pos:line="49" pos:column="53">!=<pos:position pos:line="49" pos:column="55"/></operator><name><name pos:line="49" pos:column="55">String<pos:position pos:line="49" pos:column="61"/></name><operator pos:line="49" pos:column="61">::<pos:position pos:line="49" pos:column="63"/></operator><name pos:line="49" pos:column="63">npos<pos:position pos:line="49" pos:column="67"/></name></name></expr>)<pos:position pos:line="49" pos:column="68"/></condition><then pos:line="49" pos:column="68">
                    <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="50" pos:column="21">key<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">.<pos:position pos:line="50" pos:column="25"/></operator><name pos:line="50" pos:column="25">append<pos:position pos:line="50" pos:column="31"/></name></name><argument_list pos:line="50" pos:column="31">(<argument><expr><call><name><name pos:line="50" pos:column="32">request<pos:position pos:line="50" pos:column="39"/></name><operator pos:line="50" pos:column="39">-&gt;<pos:position pos:line="50" pos:column="44"/></operator><name pos:line="50" pos:column="41">urlpath<pos:position pos:line="50" pos:column="48"/></name><operator pos:line="50" pos:column="48">.<pos:position pos:line="50" pos:column="49"/></operator><name pos:line="50" pos:column="49">substr<pos:position pos:line="50" pos:column="55"/></name></name><argument_list pos:line="50" pos:column="55">(<argument><expr><name pos:line="50" pos:column="56">pos<pos:position pos:line="50" pos:column="59"/></name></expr></argument>,<argument><expr><call><name><name pos:line="50" pos:column="60">request<pos:position pos:line="50" pos:column="67"/></name><operator pos:line="50" pos:column="67">-&gt;<pos:position pos:line="50" pos:column="72"/></operator><name pos:line="50" pos:column="69">urlpath<pos:position pos:line="50" pos:column="76"/></name><operator pos:line="50" pos:column="76">.<pos:position pos:line="50" pos:column="77"/></operator><name pos:line="50" pos:column="77">size<pos:position pos:line="50" pos:column="81"/></name></name><argument_list pos:line="50" pos:column="81">()<pos:position pos:line="50" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="84"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="86"/></expr_stmt></block></then></if>
            }<pos:position pos:line="51" pos:column="14"/></block></then></if>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
        <comment type="line" pos:line="53" pos:column="9">// if the url-based key is empty, e.g. because the user is</comment>
        <comment type="line" pos:line="54" pos:column="9">// asking to balance on the path but the request doesn't supply any,</comment>
        <comment type="line" pos:line="55" pos:column="9">// then fall back to canonical URL</comment>

        <if pos:line="57" pos:column="9">if <condition pos:line="57" pos:column="12">(<expr><call><name><name pos:line="57" pos:column="13">key<pos:position pos:line="57" pos:column="16"/></name><operator pos:line="57" pos:column="16">.<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="17">size<pos:position pos:line="57" pos:column="21"/></name></name><argument_list pos:line="57" pos:column="21">()<pos:position pos:line="57" pos:column="23"/></argument_list></call><operator pos:line="57" pos:column="23">==<pos:position pos:line="57" pos:column="25"/></operator><literal type="number" pos:line="57" pos:column="25">0<pos:position pos:line="57" pos:column="26"/></literal></expr>)<pos:position pos:line="57" pos:column="27"/></condition><then pos:line="57" pos:column="27">
            <block type="pseudo"><expr_stmt><expr><name pos:line="58" pos:column="13">key<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">=<pos:position pos:line="58" pos:column="17"/></operator><call><name pos:line="58" pos:column="17">urlCanonical<pos:position pos:line="58" pos:column="29"/></name><argument_list pos:line="58" pos:column="29">(<argument><expr><name pos:line="58" pos:column="30">request<pos:position pos:line="58" pos:column="37"/></name></expr></argument>)<pos:position pos:line="58" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt></block></then></if>

        <for pos:line="60" pos:column="9">for <control pos:line="60" pos:column="13">(<init><decl><type><specifier pos:line="60" pos:column="14">const<pos:position pos:line="60" pos:column="19"/></specifier> <name pos:line="60" pos:column="20">char<pos:position pos:line="60" pos:column="24"/></name> <modifier pos:line="60" pos:column="25">*<pos:position pos:line="60" pos:column="26"/></modifier></type><name pos:line="60" pos:column="26">c<pos:position pos:line="60" pos:column="27"/></name> <init pos:line="60" pos:column="28">= <expr><call><name><name pos:line="60" pos:column="30">key<pos:position pos:line="60" pos:column="33"/></name><operator pos:line="60" pos:column="33">.<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="34">rawBuf<pos:position pos:line="60" pos:column="40"/></name></name><argument_list pos:line="60" pos:column="40">()<pos:position pos:line="60" pos:column="42"/></argument_list></call></expr></init></decl>, <modifier pos:line="60" pos:column="44">*<pos:position pos:line="60" pos:column="45"/></modifier><decl><type ref="prev"/><name pos:line="60" pos:column="45">e<pos:position pos:line="60" pos:column="46"/></name><init pos:line="60" pos:column="46">=<expr><call><name><name pos:line="60" pos:column="47">key<pos:position pos:line="60" pos:column="50"/></name><operator pos:line="60" pos:column="50">.<pos:position pos:line="60" pos:column="51"/></operator><name pos:line="60" pos:column="51">rawBuf<pos:position pos:line="60" pos:column="57"/></name></name><argument_list pos:line="60" pos:column="57">()<pos:position pos:line="60" pos:column="59"/></argument_list></call><operator pos:line="60" pos:column="59">+<pos:position pos:line="60" pos:column="60"/></operator><call><name><name pos:line="60" pos:column="60">key<pos:position pos:line="60" pos:column="63"/></name><operator pos:line="60" pos:column="63">.<pos:position pos:line="60" pos:column="64"/></operator><name pos:line="60" pos:column="64">size<pos:position pos:line="60" pos:column="68"/></name></name><argument_list pos:line="60" pos:column="68">()<pos:position pos:line="60" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="60" pos:column="71"/></init> <condition><expr><name pos:line="60" pos:column="72">c<pos:position pos:line="60" pos:column="73"/></name> <operator pos:line="60" pos:column="74">&lt;<pos:position pos:line="60" pos:column="78"/></operator> <name pos:line="60" pos:column="76">e<pos:position pos:line="60" pos:column="77"/></name></expr>;<pos:position pos:line="60" pos:column="78"/></condition> <incr><expr><operator pos:line="60" pos:column="79">++<pos:position pos:line="60" pos:column="81"/></operator><name pos:line="60" pos:column="81">c<pos:position pos:line="60" pos:column="82"/></name></expr></incr>)<pos:position pos:line="60" pos:column="83"/></control>
            <block type="pseudo"><expr_stmt><expr><name pos:line="61" pos:column="13">user_hash<pos:position pos:line="61" pos:column="22"/></name> <operator pos:line="61" pos:column="23">+=<pos:position pos:line="61" pos:column="25"/></operator> <call><name pos:line="61" pos:column="26">ROTATE_LEFT<pos:position pos:line="61" pos:column="37"/></name><argument_list pos:line="61" pos:column="37">(<argument><expr><name pos:line="61" pos:column="38">user_hash<pos:position pos:line="61" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="49">19<pos:position pos:line="61" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="52"/></argument_list></call> <operator pos:line="61" pos:column="53">+<pos:position pos:line="61" pos:column="54"/></operator> <operator pos:line="61" pos:column="55">*<pos:position pos:line="61" pos:column="56"/></operator><name pos:line="61" pos:column="56">c<pos:position pos:line="61" pos:column="57"/></name></expr>;<pos:position pos:line="61" pos:column="58"/></expr_stmt></block></for>
        <expr_stmt><expr><name pos:line="62" pos:column="9">combined_hash<pos:position pos:line="62" pos:column="22"/></name> <operator pos:line="62" pos:column="23">=<pos:position pos:line="62" pos:column="24"/></operator> <operator pos:line="62" pos:column="25">(<pos:position pos:line="62" pos:column="26"/></operator><name pos:line="62" pos:column="26">user_hash<pos:position pos:line="62" pos:column="35"/></name> <operator pos:line="62" pos:column="36">^<pos:position pos:line="62" pos:column="37"/></operator> <name><name pos:line="62" pos:column="38">tp<pos:position pos:line="62" pos:column="40"/></name><operator pos:line="62" pos:column="40">-&gt;<pos:position pos:line="62" pos:column="45"/></operator><name pos:line="62" pos:column="42">carp<pos:position pos:line="62" pos:column="46"/></name><operator pos:line="62" pos:column="46">.<pos:position pos:line="62" pos:column="47"/></operator><name pos:line="62" pos:column="47">hash<pos:position pos:line="62" pos:column="51"/></name></name><operator pos:line="62" pos:column="51">)<pos:position pos:line="62" pos:column="52"/></operator></expr>;<pos:position pos:line="62" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name pos:line="63" pos:column="9">combined_hash<pos:position pos:line="63" pos:column="22"/></name> <operator pos:line="63" pos:column="23">+=<pos:position pos:line="63" pos:column="25"/></operator> <name pos:line="63" pos:column="26">combined_hash<pos:position pos:line="63" pos:column="39"/></name> <operator pos:line="63" pos:column="40">*<pos:position pos:line="63" pos:column="41"/></operator> <literal type="number" pos:line="63" pos:column="42">0x62531965<pos:position pos:line="63" pos:column="52"/></literal></expr>;<pos:position pos:line="63" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name pos:line="64" pos:column="9">combined_hash<pos:position pos:line="64" pos:column="22"/></name> <operator pos:line="64" pos:column="23">=<pos:position pos:line="64" pos:column="24"/></operator> <call><name pos:line="64" pos:column="25">ROTATE_LEFT<pos:position pos:line="64" pos:column="36"/></name><argument_list pos:line="64" pos:column="36">(<argument><expr><name pos:line="64" pos:column="37">combined_hash<pos:position pos:line="64" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="52">21<pos:position pos:line="64" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="64" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="56"/></expr_stmt>
        <expr_stmt><expr><name pos:line="65" pos:column="9">score<pos:position pos:line="65" pos:column="14"/></name> <operator pos:line="65" pos:column="15">=<pos:position pos:line="65" pos:column="16"/></operator> <name pos:line="65" pos:column="17">combined_hash<pos:position pos:line="65" pos:column="30"/></name> <operator pos:line="65" pos:column="31">*<pos:position pos:line="65" pos:column="32"/></operator> <name><name pos:line="65" pos:column="33">tp<pos:position pos:line="65" pos:column="35"/></name><operator pos:line="65" pos:column="35">-&gt;<pos:position pos:line="65" pos:column="40"/></operator><name pos:line="65" pos:column="37">carp<pos:position pos:line="65" pos:column="41"/></name><operator pos:line="65" pos:column="41">.<pos:position pos:line="65" pos:column="42"/></operator><name pos:line="65" pos:column="42">load_multiplier<pos:position pos:line="65" pos:column="57"/></name></name></expr>;<pos:position pos:line="65" pos:column="58"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">debugs<pos:position pos:line="66" pos:column="15"/></name><argument_list pos:line="66" pos:column="15">(<argument><expr><literal type="number" pos:line="66" pos:column="16">39<pos:position pos:line="66" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="66" pos:column="20">3<pos:position pos:line="66" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="66" pos:column="23">"carpSelectParent: key="<pos:position pos:line="66" pos:column="47"/></literal> <operator pos:line="66" pos:column="48">&lt;&lt;<pos:position pos:line="66" pos:column="56"/></operator> <name pos:line="66" pos:column="51">key<pos:position pos:line="66" pos:column="54"/></name> <operator pos:line="66" pos:column="55">&lt;&lt;<pos:position pos:line="66" pos:column="63"/></operator> <literal type="string" pos:line="66" pos:column="58">" name="<pos:position pos:line="66" pos:column="66"/></literal> <operator pos:line="66" pos:column="67">&lt;&lt;<pos:position pos:line="66" pos:column="75"/></operator> <name><name pos:line="66" pos:column="70">tp<pos:position pos:line="66" pos:column="72"/></name><operator pos:line="66" pos:column="72">-&gt;<pos:position pos:line="66" pos:column="77"/></operator><name pos:line="66" pos:column="74">name<pos:position pos:line="66" pos:column="78"/></name></name> <operator pos:line="66" pos:column="79">&lt;&lt;<pos:position pos:line="66" pos:column="87"/></operator> <literal type="string" pos:line="66" pos:column="82">" combined_hash="<pos:position pos:line="66" pos:column="99"/></literal> <operator pos:line="66" pos:column="100">&lt;&lt;<pos:position pos:line="66" pos:column="108"/></operator> <name pos:line="66" pos:column="103">combined_hash<pos:position pos:line="66" pos:column="116"/></name>  <operator pos:line="66" pos:column="118">&lt;&lt;<pos:position pos:line="66" pos:column="126"/></operator>
               <literal type="string" pos:line="67" pos:column="16">" score="<pos:position pos:line="67" pos:column="25"/></literal> <operator pos:line="67" pos:column="26">&lt;&lt;<pos:position pos:line="67" pos:column="34"/></operator> <call><name><name pos:line="67" pos:column="29">std<pos:position pos:line="67" pos:column="32"/></name><operator pos:line="67" pos:column="32">::<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="34">setprecision<pos:position pos:line="67" pos:column="46"/></name></name><argument_list pos:line="67" pos:column="46">(<argument><expr><literal type="number" pos:line="67" pos:column="47">0<pos:position pos:line="67" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="49"/></argument_list></call> <operator pos:line="67" pos:column="50">&lt;&lt;<pos:position pos:line="67" pos:column="58"/></operator> <name pos:line="67" pos:column="53">score<pos:position pos:line="67" pos:column="58"/></name></expr></argument>)<pos:position pos:line="67" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="60"/></expr_stmt>

        <if pos:line="69" pos:column="9">if <condition pos:line="69" pos:column="12">(<expr><operator pos:line="69" pos:column="13">(<pos:position pos:line="69" pos:column="14"/></operator><name pos:line="69" pos:column="14">score<pos:position pos:line="69" pos:column="19"/></name> <operator pos:line="69" pos:column="20">&gt;<pos:position pos:line="69" pos:column="24"/></operator> <name pos:line="69" pos:column="22">high_score<pos:position pos:line="69" pos:column="32"/></name><operator pos:line="69" pos:column="32">)<pos:position pos:line="69" pos:column="33"/></operator> <operator pos:line="69" pos:column="34">&amp;&amp;<pos:position pos:line="69" pos:column="44"/></operator> <call><name pos:line="69" pos:column="37">peerHTTPOkay<pos:position pos:line="69" pos:column="49"/></name><argument_list pos:line="69" pos:column="49">(<argument><expr><name pos:line="69" pos:column="50">tp<pos:position pos:line="69" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="69" pos:column="54">request<pos:position pos:line="69" pos:column="61"/></name></expr></argument>)<pos:position pos:line="69" pos:column="62"/></argument_list></call></expr>)<pos:position pos:line="69" pos:column="63"/></condition><then pos:line="69" pos:column="63"> <block pos:line="69" pos:column="64">{
            <expr_stmt><expr><name pos:line="70" pos:column="13">p<pos:position pos:line="70" pos:column="14"/></name> <operator pos:line="70" pos:column="15">=<pos:position pos:line="70" pos:column="16"/></operator> <name pos:line="70" pos:column="17">tp<pos:position pos:line="70" pos:column="19"/></name></expr>;<pos:position pos:line="70" pos:column="20"/></expr_stmt>
            <expr_stmt><expr><name pos:line="71" pos:column="13">high_score<pos:position pos:line="71" pos:column="23"/></name> <operator pos:line="71" pos:column="24">=<pos:position pos:line="71" pos:column="25"/></operator> <name pos:line="71" pos:column="26">score<pos:position pos:line="71" pos:column="31"/></name></expr>;<pos:position pos:line="71" pos:column="32"/></expr_stmt>
        }<pos:position pos:line="72" pos:column="10"/></block></then></if>
    }<pos:position pos:line="73" pos:column="6"/></block></for>

    <if pos:line="75" pos:column="5">if <condition pos:line="75" pos:column="8">(<expr><name pos:line="75" pos:column="9">p<pos:position pos:line="75" pos:column="10"/></name></expr>)<pos:position pos:line="75" pos:column="11"/></condition><then pos:line="75" pos:column="11">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="76" pos:column="9">debugs<pos:position pos:line="76" pos:column="15"/></name><argument_list pos:line="76" pos:column="15">(<argument><expr><literal type="number" pos:line="76" pos:column="16">39<pos:position pos:line="76" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="76" pos:column="20">2<pos:position pos:line="76" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="76" pos:column="23">"carpSelectParent: selected "<pos:position pos:line="76" pos:column="52"/></literal> <operator pos:line="76" pos:column="53">&lt;&lt;<pos:position pos:line="76" pos:column="61"/></operator> <name><name pos:line="76" pos:column="56">p<pos:position pos:line="76" pos:column="57"/></name><operator pos:line="76" pos:column="57">-&gt;<pos:position pos:line="76" pos:column="62"/></operator><name pos:line="76" pos:column="59">name<pos:position pos:line="76" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="65"/></expr_stmt></block></then></if>

    <return pos:line="78" pos:column="5">return <expr><name pos:line="78" pos:column="12">p<pos:position pos:line="78" pos:column="13"/></name></expr>;<pos:position pos:line="78" pos:column="14"/></return>
}<pos:position pos:line="79" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6226_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIInclude<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">render<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name><name pos:line="2" pos:column="20">ESISegment<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">Pointer<pos:position pos:line="2" pos:column="39"/></name></name></type> <name pos:line="2" pos:column="40">output<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">sent<pos:position pos:line="4" pos:column="13"/></name></expr>)<pos:position pos:line="4" pos:column="14"/></condition><then pos:line="4" pos:column="14">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">ESISegment<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">::<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">Pointer<pos:position pos:line="7" pos:column="24"/></name></name></type> <name pos:line="7" pos:column="25">myout<pos:position pos:line="7" pos:column="30"/></name></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">86<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">5<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="19">"ESIIncludeRender: Rendering include "<pos:position pos:line="9" pos:column="57"/></literal> <operator pos:line="9" pos:column="58">&lt;&lt;<pos:position pos:line="9" pos:column="66"/></operator> <name pos:line="9" pos:column="61">this<pos:position pos:line="9" pos:column="65"/></name></expr></argument>)<pos:position pos:line="9" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">assert<pos:position pos:line="11" pos:column="11"/></name> <argument_list pos:line="11" pos:column="12">(<argument><expr><name><name pos:line="11" pos:column="13">flags<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">.<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">finished<pos:position pos:line="11" pos:column="27"/></name></name> <operator pos:line="11" pos:column="28">||<pos:position pos:line="11" pos:column="30"/></operator> <operator pos:line="11" pos:column="31">(<pos:position pos:line="11" pos:column="32"/></operator><name><name pos:line="11" pos:column="32">flags<pos:position pos:line="11" pos:column="37"/></name><operator pos:line="11" pos:column="37">.<pos:position pos:line="11" pos:column="38"/></operator><name pos:line="11" pos:column="38">failed<pos:position pos:line="11" pos:column="44"/></name></name> <operator pos:line="11" pos:column="45">&amp;&amp;<pos:position pos:line="11" pos:column="55"/></operator> <name><name pos:line="11" pos:column="48">flags<pos:position pos:line="11" pos:column="53"/></name><operator pos:line="11" pos:column="53">.<pos:position pos:line="11" pos:column="54"/></operator><name pos:line="11" pos:column="54">onerrorcontinue<pos:position pos:line="11" pos:column="69"/></name></name><operator pos:line="11" pos:column="69">)<pos:position pos:line="11" pos:column="70"/></operator></expr></argument>)<pos:position pos:line="11" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="72"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">flags<pos:position pos:line="13" pos:column="14"/></name><operator pos:line="13" pos:column="14">.<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">failed<pos:position pos:line="13" pos:column="21"/></name></name> <operator pos:line="13" pos:column="22">&amp;&amp;<pos:position pos:line="13" pos:column="32"/></operator> <name><name pos:line="13" pos:column="25">flags<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">.<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">onerrorcontinue<pos:position pos:line="13" pos:column="46"/></name></name></expr>)<pos:position pos:line="13" pos:column="47"/></condition><then pos:line="13" pos:column="47"> <block pos:line="13" pos:column="48">{
        <return pos:line="14" pos:column="9">return;<pos:position pos:line="14" pos:column="16"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/* Render the content */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name><name pos:line="18" pos:column="9">srccontent<pos:position pos:line="18" pos:column="19"/></name><operator pos:line="18" pos:column="19">.<pos:position pos:line="18" pos:column="20"/></operator><name pos:line="18" pos:column="20">getRaw<pos:position pos:line="18" pos:column="26"/></name></name><argument_list pos:line="18" pos:column="26">()<pos:position pos:line="18" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="29"/></condition><then pos:line="18" pos:column="29"> <block pos:line="18" pos:column="30">{
        <expr_stmt><expr><name pos:line="19" pos:column="9">myout<pos:position pos:line="19" pos:column="14"/></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <name pos:line="19" pos:column="17">srccontent<pos:position pos:line="19" pos:column="27"/></name></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="20" pos:column="9">srccontent<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">=<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">NULL<pos:position pos:line="20" pos:column="26"/></name></expr>;<pos:position pos:line="20" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then> <elseif pos:line="21" pos:column="7">else <if pos:line="21" pos:column="12">if <condition pos:line="21" pos:column="15">(<expr><call><name><name pos:line="21" pos:column="16">altcontent<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">.<pos:position pos:line="21" pos:column="27"/></operator><name pos:line="21" pos:column="27">getRaw<pos:position pos:line="21" pos:column="33"/></name></name><argument_list pos:line="21" pos:column="33">()<pos:position pos:line="21" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="36"/></condition><then pos:line="21" pos:column="36"> <block pos:line="21" pos:column="37">{
        <expr_stmt><expr><name pos:line="22" pos:column="9">myout<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">altcontent<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="23" pos:column="9">altcontent<pos:position pos:line="23" pos:column="19"/></name> <operator pos:line="23" pos:column="20">=<pos:position pos:line="23" pos:column="21"/></operator> <name pos:line="23" pos:column="22">NULL<pos:position pos:line="23" pos:column="26"/></name></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif> <else pos:line="24" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="9">fatal<pos:position pos:line="25" pos:column="14"/></name> <argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="string" pos:line="25" pos:column="16">"ESIIncludeRender called with no content, and no failure!\n"<pos:position pos:line="25" pos:column="76"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="78"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">assert<pos:position pos:line="27" pos:column="11"/></name> <argument_list pos:line="27" pos:column="12">(<argument><expr><name><name pos:line="27" pos:column="13">output<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">-&gt;<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="21">next<pos:position pos:line="27" pos:column="25"/></name></name> <operator pos:line="27" pos:column="26">==<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="29">NULL<pos:position pos:line="27" pos:column="33"/></name></expr></argument>)<pos:position pos:line="27" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">output<pos:position pos:line="29" pos:column="11"/></name><operator pos:line="29" pos:column="11">-&gt;<pos:position pos:line="29" pos:column="16"/></operator><name pos:line="29" pos:column="13">next<pos:position pos:line="29" pos:column="17"/></name></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <name pos:line="29" pos:column="20">myout<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name pos:line="31" pos:column="5">sent<pos:position pos:line="31" pos:column="9"/></name> <operator pos:line="31" pos:column="10">=<pos:position pos:line="31" pos:column="11"/></operator> <literal type="boolean" pos:line="31" pos:column="12">true<pos:position pos:line="31" pos:column="16"/></literal></expr>;<pos:position pos:line="31" pos:column="17"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1810_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">NotePairs<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">hasPair<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">char<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">key<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="37">const<pos:position pos:line="2" pos:column="42"/></specifier> <name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">value<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list> <specifier pos:line="2" pos:column="56">const<pos:position pos:line="2" pos:column="61"/></specifier>
<block pos:line="3" pos:column="1">{
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name><name pos:line="4" pos:column="10">std<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">::<pos:position pos:line="4" pos:column="15"/></operator><name><name pos:line="4" pos:column="15">vector<pos:position pos:line="4" pos:column="21"/></name><argument_list type="generic" pos:line="4" pos:column="21">&lt;<argument><expr><name><name pos:line="4" pos:column="22">NotePairs<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">::<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="33">Entry<pos:position pos:line="4" pos:column="38"/></name></name> <operator pos:line="4" pos:column="39">*<pos:position pos:line="4" pos:column="40"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="44"/></argument_list></name><operator pos:line="4" pos:column="41">::<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="43">const_iterator<pos:position pos:line="4" pos:column="57"/></name></name></type>  <name pos:line="4" pos:column="59">i<pos:position pos:line="4" pos:column="60"/></name> <init pos:line="4" pos:column="61">= <expr><call><name><name pos:line="4" pos:column="63">entries<pos:position pos:line="4" pos:column="70"/></name><operator pos:line="4" pos:column="70">.<pos:position pos:line="4" pos:column="71"/></operator><name pos:line="4" pos:column="71">begin<pos:position pos:line="4" pos:column="76"/></name></name><argument_list pos:line="4" pos:column="76">()<pos:position pos:line="4" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="79"/></init> <condition><expr><name pos:line="4" pos:column="80">i<pos:position pos:line="4" pos:column="81"/></name> <operator pos:line="4" pos:column="82">!=<pos:position pos:line="4" pos:column="84"/></operator> <call><name><name pos:line="4" pos:column="85">entries<pos:position pos:line="4" pos:column="92"/></name><operator pos:line="4" pos:column="92">.<pos:position pos:line="4" pos:column="93"/></operator><name pos:line="4" pos:column="93">end<pos:position pos:line="4" pos:column="96"/></name></name><argument_list pos:line="4" pos:column="96">()<pos:position pos:line="4" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="99"/></condition> <incr><expr><operator pos:line="4" pos:column="100">++<pos:position pos:line="4" pos:column="102"/></operator><name pos:line="4" pos:column="102">i<pos:position pos:line="4" pos:column="103"/></name></expr></incr>)<pos:position pos:line="4" pos:column="104"/></control> <block pos:line="4" pos:column="105">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<expr><call><name><operator pos:line="5" pos:column="13">(<pos:position pos:line="5" pos:column="14"/></operator><operator pos:line="5" pos:column="14">*<pos:position pos:line="5" pos:column="15"/></operator><name pos:line="5" pos:column="15">i<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">)<pos:position pos:line="5" pos:column="17"/></operator><operator pos:line="5" pos:column="17">-&gt;<pos:position pos:line="5" pos:column="22"/></operator><name><name pos:line="5" pos:column="19">name<pos:position pos:line="5" pos:column="23"/></name><operator pos:line="5" pos:column="23">.<pos:position pos:line="5" pos:column="24"/></operator><name pos:line="5" pos:column="24">cmp<pos:position pos:line="5" pos:column="27"/></name></name></name><argument_list pos:line="5" pos:column="27">(<argument><expr><name pos:line="5" pos:column="28">key<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call> <operator pos:line="5" pos:column="33">==<pos:position pos:line="5" pos:column="35"/></operator> <literal type="number" pos:line="5" pos:column="36">0<pos:position pos:line="5" pos:column="37"/></literal> <operator pos:line="5" pos:column="38">&amp;&amp;<pos:position pos:line="5" pos:column="48"/></operator> <call><name><operator pos:line="5" pos:column="41">(<pos:position pos:line="5" pos:column="42"/></operator><operator pos:line="5" pos:column="42">*<pos:position pos:line="5" pos:column="43"/></operator><name pos:line="5" pos:column="43">i<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">)<pos:position pos:line="5" pos:column="45"/></operator><operator pos:line="5" pos:column="45">-&gt;<pos:position pos:line="5" pos:column="50"/></operator><name><name pos:line="5" pos:column="47">value<pos:position pos:line="5" pos:column="52"/></name><operator pos:line="5" pos:column="52">.<pos:position pos:line="5" pos:column="53"/></operator><name pos:line="5" pos:column="53">cmp<pos:position pos:line="5" pos:column="56"/></name></name></name><argument_list pos:line="5" pos:column="56">(<argument><expr><name pos:line="5" pos:column="57">value<pos:position pos:line="5" pos:column="62"/></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></call> <operator pos:line="5" pos:column="64">==<pos:position pos:line="5" pos:column="66"/></operator> <literal type="number" pos:line="5" pos:column="67">0<pos:position pos:line="5" pos:column="68"/></literal></expr>)<pos:position pos:line="5" pos:column="69"/></condition><then pos:line="5" pos:column="69">
            <block type="pseudo"><return pos:line="6" pos:column="13">return <expr><literal type="boolean" pos:line="6" pos:column="20">true<pos:position pos:line="6" pos:column="24"/></literal></expr>;<pos:position pos:line="6" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="7" pos:column="6"/></block></for>
    <return pos:line="8" pos:column="5">return <expr><literal type="boolean" pos:line="8" pos:column="12">false<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

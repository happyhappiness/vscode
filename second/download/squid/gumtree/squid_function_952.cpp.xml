<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_952.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">AnyP<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">PortCfg<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">configureSslServerContext<pos:position pos:line="2" pos:column="41"/></name></name><parameter_list pos:line="2" pos:column="41">()<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">cert<pos:position pos:line="4" pos:column="13"/></name></expr>)<pos:position pos:line="4" pos:column="14"/></condition><then pos:line="4" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="5" pos:column="9">Ssl<pos:position pos:line="5" pos:column="12"/></name><operator pos:line="5" pos:column="12">::<pos:position pos:line="5" pos:column="14"/></operator><name pos:line="5" pos:column="14">readCertChainAndPrivateKeyFromFiles<pos:position pos:line="5" pos:column="49"/></name></name><argument_list pos:line="5" pos:column="49">(<argument><expr><name pos:line="5" pos:column="50">signingCert<pos:position pos:line="5" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="63">signPkey<pos:position pos:line="5" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="73">certsToChain<pos:position pos:line="5" pos:column="85"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="87">cert<pos:position pos:line="5" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="93">key<pos:position pos:line="5" pos:column="96"/></name></expr></argument>)<pos:position pos:line="5" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="98"/></expr_stmt></block></then></if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">signingCert<pos:position pos:line="7" pos:column="21"/></name></expr>)<pos:position pos:line="7" pos:column="22"/></condition><then pos:line="7" pos:column="22"> <block pos:line="7" pos:column="23">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">char<pos:position pos:line="8" pos:column="13"/></name></type> <name><name pos:line="8" pos:column="14">buf<pos:position pos:line="8" pos:column="17"/></name><index pos:line="8" pos:column="17">[<expr><literal type="number" pos:line="8" pos:column="18">128<pos:position pos:line="8" pos:column="21"/></literal></expr>]<pos:position pos:line="8" pos:column="22"/></index></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">fatalf<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="string" pos:line="9" pos:column="16">"No valid signing SSL certificate configured for %s_port %s"<pos:position pos:line="9" pos:column="76"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="78">protocol<pos:position pos:line="9" pos:column="86"/></name></expr></argument>,  <argument><expr><call><name><name pos:line="9" pos:column="89">s<pos:position pos:line="9" pos:column="90"/></name><operator pos:line="9" pos:column="90">.<pos:position pos:line="9" pos:column="91"/></operator><name pos:line="9" pos:column="91">toUrl<pos:position pos:line="9" pos:column="96"/></name></name><argument_list pos:line="9" pos:column="96">(<argument><expr><name pos:line="9" pos:column="97">buf<pos:position pos:line="9" pos:column="100"/></name></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="102">sizeof<argument_list pos:line="9" pos:column="108">(<argument><expr><name pos:line="9" pos:column="109">buf<pos:position pos:line="9" pos:column="112"/></name></expr></argument>)<pos:position pos:line="9" pos:column="113"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="114"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="116"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">signPkey<pos:position pos:line="12" pos:column="18"/></name></expr>)<pos:position pos:line="12" pos:column="19"/></condition><then pos:line="12" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="9">debugs<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><literal type="number" pos:line="13" pos:column="16">3<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="19">DBG_IMPORTANT<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="34">"No SSL private key configured for  "<pos:position pos:line="13" pos:column="71"/></literal> <operator pos:line="13" pos:column="72">&lt;&lt;<pos:position pos:line="13" pos:column="80"/></operator>  <name pos:line="13" pos:column="76">protocol<pos:position pos:line="13" pos:column="84"/></name> <operator pos:line="13" pos:column="85">&lt;&lt;<pos:position pos:line="13" pos:column="93"/></operator> <literal type="string" pos:line="13" pos:column="88">"_port "<pos:position pos:line="13" pos:column="96"/></literal> <operator pos:line="13" pos:column="97">&lt;&lt;<pos:position pos:line="13" pos:column="105"/></operator> <name pos:line="13" pos:column="100">s<pos:position pos:line="13" pos:column="101"/></name></expr></argument>)<pos:position pos:line="13" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="103"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">Ssl<pos:position pos:line="15" pos:column="8"/></name><operator pos:line="15" pos:column="8">::<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">generateUntrustedCert<pos:position pos:line="15" pos:column="31"/></name></name><argument_list pos:line="15" pos:column="31">(<argument><expr><name pos:line="15" pos:column="32">untrustedSigningCert<pos:position pos:line="15" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="54">untrustedSignPkey<pos:position pos:line="15" pos:column="71"/></name></expr></argument>,
                               <argument><expr><name pos:line="16" pos:column="32">signingCert<pos:position pos:line="16" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="45">signPkey<pos:position pos:line="16" pos:column="53"/></name></expr></argument>)<pos:position pos:line="16" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="55"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">untrustedSigningCert<pos:position pos:line="18" pos:column="30"/></name></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31"> <block pos:line="18" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="19" pos:column="9">char<pos:position pos:line="19" pos:column="13"/></name></type> <name><name pos:line="19" pos:column="14">buf<pos:position pos:line="19" pos:column="17"/></name><index pos:line="19" pos:column="17">[<expr><literal type="number" pos:line="19" pos:column="18">128<pos:position pos:line="19" pos:column="21"/></literal></expr>]<pos:position pos:line="19" pos:column="22"/></index></name></decl>;<pos:position pos:line="19" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">fatalf<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="string" pos:line="20" pos:column="16">"Unable to generate  signing SSL certificate for untrusted sites for %s_port %s"<pos:position pos:line="20" pos:column="96"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="98">protocol<pos:position pos:line="20" pos:column="106"/></name></expr></argument>, <argument><expr><call><name><name pos:line="20" pos:column="108">s<pos:position pos:line="20" pos:column="109"/></name><operator pos:line="20" pos:column="109">.<pos:position pos:line="20" pos:column="110"/></operator><name pos:line="20" pos:column="110">toUrl<pos:position pos:line="20" pos:column="115"/></name></name><argument_list pos:line="20" pos:column="115">(<argument><expr><name pos:line="20" pos:column="116">buf<pos:position pos:line="20" pos:column="119"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="121">sizeof<argument_list pos:line="20" pos:column="127">(<argument><expr><name pos:line="20" pos:column="128">buf<pos:position pos:line="20" pos:column="131"/></name></expr></argument>)<pos:position pos:line="20" pos:column="132"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="133"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="134"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="135"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">crlfile<pos:position pos:line="23" pos:column="16"/></name></expr>)<pos:position pos:line="23" pos:column="17"/></condition><then pos:line="23" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="24" pos:column="9">clientVerifyCrls<pos:position pos:line="24" pos:column="25"/></name><operator pos:line="24" pos:column="25">.<pos:position pos:line="24" pos:column="26"/></operator><name pos:line="24" pos:column="26">reset<pos:position pos:line="24" pos:column="31"/></name></name><argument_list pos:line="24" pos:column="31">(<argument><expr><call><name><name pos:line="24" pos:column="32">Ssl<pos:position pos:line="24" pos:column="35"/></name><operator pos:line="24" pos:column="35">::<pos:position pos:line="24" pos:column="37"/></operator><name pos:line="24" pos:column="37">loadCrl<pos:position pos:line="24" pos:column="44"/></name></name><argument_list pos:line="24" pos:column="44">(<argument><expr><name pos:line="24" pos:column="45">crlfile<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="54">sslContextFlags<pos:position pos:line="24" pos:column="69"/></name></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt></block></then></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">clientca<pos:position pos:line="26" pos:column="17"/></name></expr>)<pos:position pos:line="26" pos:column="18"/></condition><then pos:line="26" pos:column="18"> <block pos:line="26" pos:column="19">{
        <expr_stmt><expr><call><name><name pos:line="27" pos:column="9">clientCA<pos:position pos:line="27" pos:column="17"/></name><operator pos:line="27" pos:column="17">.<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">reset<pos:position pos:line="27" pos:column="23"/></name></name><argument_list pos:line="27" pos:column="23">(<argument><expr><call><name pos:line="27" pos:column="24">SSL_load_client_CA_file<pos:position pos:line="27" pos:column="47"/></name><argument_list pos:line="27" pos:column="47">(<argument><expr><name pos:line="27" pos:column="48">clientca<pos:position pos:line="27" pos:column="56"/></name></expr></argument>)<pos:position pos:line="27" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="59"/></expr_stmt>
        <if pos:line="28" pos:column="9">if <condition pos:line="28" pos:column="12">(<expr><call><name><name pos:line="28" pos:column="13">clientCA<pos:position pos:line="28" pos:column="21"/></name><operator pos:line="28" pos:column="21">.<pos:position pos:line="28" pos:column="22"/></operator><name pos:line="28" pos:column="22">get<pos:position pos:line="28" pos:column="25"/></name></name><argument_list pos:line="28" pos:column="25">()<pos:position pos:line="28" pos:column="27"/></argument_list></call> <operator pos:line="28" pos:column="28">==<pos:position pos:line="28" pos:column="30"/></operator> <name pos:line="28" pos:column="31">NULL<pos:position pos:line="28" pos:column="35"/></name></expr>)<pos:position pos:line="28" pos:column="36"/></condition><then pos:line="28" pos:column="36"> <block pos:line="28" pos:column="37">{
            <expr_stmt><expr><call><name pos:line="29" pos:column="13">fatalf<pos:position pos:line="29" pos:column="19"/></name><argument_list pos:line="29" pos:column="19">(<argument><expr><literal type="string" pos:line="29" pos:column="20">"Unable to read client CAs! from %s"<pos:position pos:line="29" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="29" pos:column="58">clientca<pos:position pos:line="29" pos:column="66"/></name></expr></argument>)<pos:position pos:line="29" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="33" pos:column="5">contextMethod<pos:position pos:line="33" pos:column="18"/></name> <operator pos:line="33" pos:column="19">=<pos:position pos:line="33" pos:column="20"/></operator> <call><name><name pos:line="33" pos:column="21">Ssl<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">::<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">contextMethod<pos:position pos:line="33" pos:column="39"/></name></name><argument_list pos:line="33" pos:column="39">(<argument><expr><name pos:line="33" pos:column="40">version<pos:position pos:line="33" pos:column="47"/></name></expr></argument>)<pos:position pos:line="33" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="49"/></expr_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><operator pos:line="34" pos:column="9">!<pos:position pos:line="34" pos:column="10"/></operator><name pos:line="34" pos:column="10">contextMethod<pos:position pos:line="34" pos:column="23"/></name></expr>)<pos:position pos:line="34" pos:column="24"/></condition><then pos:line="34" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="35" pos:column="9">fatalf<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><literal type="string" pos:line="35" pos:column="16">"Unable to compute context method to use"<pos:position pos:line="35" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="59"/></expr_stmt></block></then></if>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name pos:line="37" pos:column="9">dhfile<pos:position pos:line="37" pos:column="15"/></name></expr>)<pos:position pos:line="37" pos:column="16"/></condition><then pos:line="37" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="38" pos:column="9">dhParams<pos:position pos:line="38" pos:column="17"/></name><operator pos:line="38" pos:column="17">.<pos:position pos:line="38" pos:column="18"/></operator><name pos:line="38" pos:column="18">reset<pos:position pos:line="38" pos:column="23"/></name></name><argument_list pos:line="38" pos:column="23">(<argument><expr><call><name><name pos:line="38" pos:column="24">Ssl<pos:position pos:line="38" pos:column="27"/></name><operator pos:line="38" pos:column="27">::<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="29">readDHParams<pos:position pos:line="38" pos:column="41"/></name></name><argument_list pos:line="38" pos:column="41">(<argument><expr><name pos:line="38" pos:column="42">dhfile<pos:position pos:line="38" pos:column="48"/></name></expr></argument>)<pos:position pos:line="38" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt></block></then></if>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">sslflags<pos:position pos:line="40" pos:column="17"/></name></expr>)<pos:position pos:line="40" pos:column="18"/></condition><then pos:line="40" pos:column="18">
        <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="9">sslContextFlags<pos:position pos:line="41" pos:column="24"/></name> <operator pos:line="41" pos:column="25">=<pos:position pos:line="41" pos:column="26"/></operator> <call><name><name pos:line="41" pos:column="27">Ssl<pos:position pos:line="41" pos:column="30"/></name><operator pos:line="41" pos:column="30">::<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="32">parse_flags<pos:position pos:line="41" pos:column="43"/></name></name><argument_list pos:line="41" pos:column="43">(<argument><expr><name pos:line="41" pos:column="44">sslflags<pos:position pos:line="41" pos:column="52"/></name></expr></argument>)<pos:position pos:line="41" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="54"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="43" pos:column="5">sslOptions<pos:position pos:line="43" pos:column="15"/></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <call><name><name pos:line="43" pos:column="18">Ssl<pos:position pos:line="43" pos:column="21"/></name><operator pos:line="43" pos:column="21">::<pos:position pos:line="43" pos:column="23"/></operator><name pos:line="43" pos:column="23">parse_options<pos:position pos:line="43" pos:column="36"/></name></name><argument_list pos:line="43" pos:column="36">(<argument><expr><name pos:line="43" pos:column="37">options<pos:position pos:line="43" pos:column="44"/></name></expr></argument>)<pos:position pos:line="43" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="45" pos:column="5">staticSslContext<pos:position pos:line="45" pos:column="21"/></name><operator pos:line="45" pos:column="21">.<pos:position pos:line="45" pos:column="22"/></operator><name pos:line="45" pos:column="22">reset<pos:position pos:line="45" pos:column="27"/></name></name><argument_list pos:line="45" pos:column="27">(<argument><expr><call><name pos:line="45" pos:column="28">sslCreateServerContext<pos:position pos:line="45" pos:column="50"/></name><argument_list pos:line="45" pos:column="50">(<argument><expr><operator pos:line="45" pos:column="51">*<pos:position pos:line="45" pos:column="52"/></operator><name pos:line="45" pos:column="52">this<pos:position pos:line="45" pos:column="56"/></name></expr></argument>)<pos:position pos:line="45" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="59"/></expr_stmt>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><operator pos:line="47" pos:column="9">!<pos:position pos:line="47" pos:column="10"/></operator><name pos:line="47" pos:column="10">staticSslContext<pos:position pos:line="47" pos:column="26"/></name></expr>)<pos:position pos:line="47" pos:column="27"/></condition><then pos:line="47" pos:column="27"> <block pos:line="47" pos:column="28">{
        <decl_stmt><decl><type><name pos:line="48" pos:column="9">char<pos:position pos:line="48" pos:column="13"/></name></type> <name><name pos:line="48" pos:column="14">buf<pos:position pos:line="48" pos:column="17"/></name><index pos:line="48" pos:column="17">[<expr><literal type="number" pos:line="48" pos:column="18">128<pos:position pos:line="48" pos:column="21"/></literal></expr>]<pos:position pos:line="48" pos:column="22"/></index></name></decl>;<pos:position pos:line="48" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">fatalf<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><literal type="string" pos:line="49" pos:column="16">"%s_port %s initialization error"<pos:position pos:line="49" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="49" pos:column="51">protocol<pos:position pos:line="49" pos:column="59"/></name></expr></argument>,  <argument><expr><call><name><name pos:line="49" pos:column="62">s<pos:position pos:line="49" pos:column="63"/></name><operator pos:line="49" pos:column="63">.<pos:position pos:line="49" pos:column="64"/></operator><name pos:line="49" pos:column="64">toUrl<pos:position pos:line="49" pos:column="69"/></name></name><argument_list pos:line="49" pos:column="69">(<argument><expr><name pos:line="49" pos:column="70">buf<pos:position pos:line="49" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="75">sizeof<argument_list pos:line="49" pos:column="81">(<argument><expr><name pos:line="49" pos:column="82">buf<pos:position pos:line="49" pos:column="85"/></name></expr></argument>)<pos:position pos:line="49" pos:column="86"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="87"/></argument_list></call></expr></argument>)<pos:position pos:line="49" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="89"/></expr_stmt>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

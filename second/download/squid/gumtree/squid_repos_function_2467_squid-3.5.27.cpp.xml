<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2467_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsGrokReply<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">buf<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">size_t<pos:position pos:line="2" pos:column="38"/></name></type> <name pos:line="2" pos:column="39">sz<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">from_ns<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">n<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">rfc1035_message<pos:position pos:line="5" pos:column="20"/></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">message<pos:position pos:line="5" pos:column="29"/></name> <init pos:line="5" pos:column="30">= <expr><name pos:line="5" pos:column="32">NULL<pos:position pos:line="5" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">idns_query<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">q<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

    <expr_stmt><expr><name pos:line="8" pos:column="5">n<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">rfc1035MessageUnpack<pos:position pos:line="8" pos:column="29"/></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">buf<pos:position pos:line="8" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="35">sz<pos:position pos:line="8" pos:column="37"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="39">&amp;<pos:position pos:line="8" pos:column="44"/></operator><name pos:line="8" pos:column="40">message<pos:position pos:line="8" pos:column="47"/></name></expr></argument>)<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="49"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">message<pos:position pos:line="10" pos:column="16"/></name> <operator pos:line="10" pos:column="17">==<pos:position pos:line="10" pos:column="19"/></operator> <name pos:line="10" pos:column="20">NULL<pos:position pos:line="10" pos:column="24"/></name></expr>)<pos:position pos:line="10" pos:column="25"/></condition><then pos:line="10" pos:column="25"> <block pos:line="10" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">78<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">DBG_IMPORTANT<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"idnsGrokReply: Malformed DNS response"<pos:position pos:line="11" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="76"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">78<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="16">3<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="19">"idnsGrokReply: QID 0x"<pos:position pos:line="15" pos:column="42"/></literal> <operator pos:line="15" pos:column="43">&lt;&lt;<pos:position pos:line="15" pos:column="51"/></operator> <name><name pos:line="15" pos:column="46">std<pos:position pos:line="15" pos:column="49"/></name><operator pos:line="15" pos:column="49">::<pos:position pos:line="15" pos:column="51"/></operator><name pos:line="15" pos:column="51">hex<pos:position pos:line="15" pos:column="54"/></name></name> <operator pos:line="15" pos:column="55">&lt;&lt;<pos:position pos:line="15" pos:column="63"/></operator>   <name><name pos:line="15" pos:column="60">message<pos:position pos:line="15" pos:column="67"/></name><operator pos:line="15" pos:column="67">-&gt;<pos:position pos:line="15" pos:column="72"/></operator><name pos:line="15" pos:column="69">id<pos:position pos:line="15" pos:column="71"/></name></name> <operator pos:line="15" pos:column="72">&lt;&lt;<pos:position pos:line="15" pos:column="80"/></operator> <literal type="string" pos:line="15" pos:column="75">", "<pos:position pos:line="15" pos:column="79"/></literal> <operator pos:line="15" pos:column="80">&lt;&lt;<pos:position pos:line="15" pos:column="88"/></operator> <name><name pos:line="15" pos:column="83">std<pos:position pos:line="15" pos:column="86"/></name><operator pos:line="15" pos:column="86">::<pos:position pos:line="15" pos:column="88"/></operator><name pos:line="15" pos:column="88">dec<pos:position pos:line="15" pos:column="91"/></name></name> <operator pos:line="15" pos:column="92">&lt;&lt;<pos:position pos:line="15" pos:column="100"/></operator> <name pos:line="15" pos:column="95">n<pos:position pos:line="15" pos:column="96"/></name> <operator pos:line="15" pos:column="97">&lt;&lt;<pos:position pos:line="15" pos:column="105"/></operator> <literal type="string" pos:line="15" pos:column="100">" answers"<pos:position pos:line="15" pos:column="110"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="112"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">q<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name pos:line="17" pos:column="9">idnsFindQuery<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name><name pos:line="17" pos:column="23">message<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">id<pos:position pos:line="17" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="36"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">q<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">==<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">NULL<pos:position pos:line="19" pos:column="18"/></name></expr>)<pos:position pos:line="19" pos:column="19"/></condition><then pos:line="19" pos:column="19"> <block pos:line="19" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">78<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="20">3<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="23">"idnsGrokReply: Late response"<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="55"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">rfc1035MessageDestroy<pos:position pos:line="21" pos:column="30"/></name><argument_list pos:line="21" pos:column="30">(<argument><expr><operator pos:line="21" pos:column="31">&amp;<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="32">message<pos:position pos:line="21" pos:column="39"/></name></expr></argument>)<pos:position pos:line="21" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="41"/></expr_stmt>
        <return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name pos:line="25" pos:column="9">rfc1035QueryCompare<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><operator pos:line="25" pos:column="29">&amp;<pos:position pos:line="25" pos:column="34"/></operator><name><name pos:line="25" pos:column="30">q<pos:position pos:line="25" pos:column="31"/></name><operator pos:line="25" pos:column="31">-&gt;<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="33">query<pos:position pos:line="25" pos:column="38"/></name></name></expr></argument>, <argument><expr><name><name pos:line="25" pos:column="40">message<pos:position pos:line="25" pos:column="47"/></name><operator pos:line="25" pos:column="47">-&gt;<pos:position pos:line="25" pos:column="52"/></operator><name pos:line="25" pos:column="49">query<pos:position pos:line="25" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="55"/></argument_list></call> <operator pos:line="25" pos:column="56">!=<pos:position pos:line="25" pos:column="58"/></operator> <literal type="number" pos:line="25" pos:column="59">0<pos:position pos:line="25" pos:column="60"/></literal></expr>)<pos:position pos:line="25" pos:column="61"/></condition><then pos:line="25" pos:column="61"> <block pos:line="25" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">debugs<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><literal type="number" pos:line="26" pos:column="16">78<pos:position pos:line="26" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="20">3<pos:position pos:line="26" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="23">"idnsGrokReply: Query mismatch ("<pos:position pos:line="26" pos:column="56"/></literal> <operator pos:line="26" pos:column="57">&lt;&lt;<pos:position pos:line="26" pos:column="65"/></operator> <name><name pos:line="26" pos:column="60">q<pos:position pos:line="26" pos:column="61"/></name><operator pos:line="26" pos:column="61">-&gt;<pos:position pos:line="26" pos:column="66"/></operator><name pos:line="26" pos:column="63">query<pos:position pos:line="26" pos:column="68"/></name><operator pos:line="26" pos:column="68">.<pos:position pos:line="26" pos:column="69"/></operator><name pos:line="26" pos:column="69">name<pos:position pos:line="26" pos:column="73"/></name></name> <operator pos:line="26" pos:column="74">&lt;&lt;<pos:position pos:line="26" pos:column="82"/></operator> <literal type="string" pos:line="26" pos:column="77">" != "<pos:position pos:line="26" pos:column="83"/></literal> <operator pos:line="26" pos:column="84">&lt;&lt;<pos:position pos:line="26" pos:column="92"/></operator> <name><name pos:line="26" pos:column="87">message<pos:position pos:line="26" pos:column="94"/></name><operator pos:line="26" pos:column="94">-&gt;<pos:position pos:line="26" pos:column="99"/></operator><name pos:line="26" pos:column="96">query<pos:position pos:line="26" pos:column="101"/></name><operator pos:line="26" pos:column="101">-&gt;<pos:position pos:line="26" pos:column="106"/></operator><name pos:line="26" pos:column="103">name<pos:position pos:line="26" pos:column="107"/></name></name> <operator pos:line="26" pos:column="108">&lt;&lt;<pos:position pos:line="26" pos:column="116"/></operator> <literal type="string" pos:line="26" pos:column="111">")"<pos:position pos:line="26" pos:column="114"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="115"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="116"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">rfc1035MessageDestroy<pos:position pos:line="27" pos:column="30"/></name><argument_list pos:line="27" pos:column="30">(<argument><expr><operator pos:line="27" pos:column="31">&amp;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="32">message<pos:position pos:line="27" pos:column="39"/></name></expr></argument>)<pos:position pos:line="27" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="41"/></expr_stmt>
        <return pos:line="28" pos:column="9">return;<pos:position pos:line="28" pos:column="16"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>

<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><name pos:line="31" pos:column="5">WHEN_EDNS_RESPONSES_ARE_PARSED<pos:position pos:line="31" pos:column="35"/></name></expr></cpp:if>
<comment type="line" pos:line="32" pos:column="1">// TODO: actually gr the message right here.</comment>
<comment type="line" pos:line="33" pos:column="1">//  pull out the DNS meta data we need (A records, AAAA records and EDNS OPT) and store in q</comment>
<comment type="line" pos:line="34" pos:column="1">//  this is overall better than force-feeding A response with AAAA an section later anyway.</comment>
<comment type="line" pos:line="35" pos:column="1">//  AND allows us to merge AN+AR sections from both responses (one day)</comment>

    <if pos:line="37" pos:column="5">if <condition pos:line="37" pos:column="8">(<expr><name><name pos:line="37" pos:column="9">q<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">edns_seen<pos:position pos:line="37" pos:column="21"/></name></name> <operator pos:line="37" pos:column="22">&gt;=<pos:position pos:line="37" pos:column="27"/></operator> <literal type="number" pos:line="37" pos:column="25">0<pos:position pos:line="37" pos:column="26"/></literal></expr>)<pos:position pos:line="37" pos:column="27"/></condition><then pos:line="37" pos:column="27"> <block pos:line="37" pos:column="28">{
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><name pos:line="38" pos:column="13">max_shared_edns<pos:position pos:line="38" pos:column="28"/></name> <operator pos:line="38" pos:column="29">==<pos:position pos:line="38" pos:column="31"/></operator> <name><name pos:line="38" pos:column="32">nameservers<pos:position pos:line="38" pos:column="43"/></name><index pos:line="38" pos:column="43">[<expr><name pos:line="38" pos:column="44">from_ns<pos:position pos:line="38" pos:column="51"/></name></expr>]<pos:position pos:line="38" pos:column="52"/></index></name><operator pos:line="38" pos:column="52">.<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="53">last_seen_edns<pos:position pos:line="38" pos:column="67"/></name> <operator pos:line="38" pos:column="68">&amp;&amp;<pos:position pos:line="38" pos:column="78"/></operator> <name pos:line="38" pos:column="71">max_shared_edns<pos:position pos:line="38" pos:column="86"/></name> <operator pos:line="38" pos:column="87">&lt;<pos:position pos:line="38" pos:column="91"/></operator> <name><name pos:line="38" pos:column="89">q<pos:position pos:line="38" pos:column="90"/></name><operator pos:line="38" pos:column="90">-&gt;<pos:position pos:line="38" pos:column="95"/></operator><name pos:line="38" pos:column="92">edns_seen<pos:position pos:line="38" pos:column="101"/></name></name></expr>)<pos:position pos:line="38" pos:column="102"/></condition><then pos:line="38" pos:column="102"> <block pos:line="38" pos:column="103">{
            <expr_stmt><expr><name><name pos:line="39" pos:column="13">nameservers<pos:position pos:line="39" pos:column="24"/></name><index pos:line="39" pos:column="24">[<expr><name pos:line="39" pos:column="25">from_ns<pos:position pos:line="39" pos:column="32"/></name></expr>]<pos:position pos:line="39" pos:column="33"/></index></name><operator pos:line="39" pos:column="33">.<pos:position pos:line="39" pos:column="34"/></operator><name pos:line="39" pos:column="34">last_seen_edns<pos:position pos:line="39" pos:column="48"/></name> <operator pos:line="39" pos:column="49">=<pos:position pos:line="39" pos:column="50"/></operator> <name><name pos:line="39" pos:column="51">q<pos:position pos:line="39" pos:column="52"/></name><operator pos:line="39" pos:column="52">-&gt;<pos:position pos:line="39" pos:column="57"/></operator><name pos:line="39" pos:column="54">edns_seen<pos:position pos:line="39" pos:column="63"/></name></name></expr>;<pos:position pos:line="39" pos:column="64"/></expr_stmt>
            <comment type="line" pos:line="40" pos:column="13">// the altered NS was limiting the whole group.</comment>
            <expr_stmt><expr><name pos:line="41" pos:column="13">max_shared_edns<pos:position pos:line="41" pos:column="28"/></name> <operator pos:line="41" pos:column="29">=<pos:position pos:line="41" pos:column="30"/></operator> <name><name pos:line="41" pos:column="31">q<pos:position pos:line="41" pos:column="32"/></name><operator pos:line="41" pos:column="32">-&gt;<pos:position pos:line="41" pos:column="37"/></operator><name pos:line="41" pos:column="34">edns_seen<pos:position pos:line="41" pos:column="43"/></name></name></expr>;<pos:position pos:line="41" pos:column="44"/></expr_stmt>
            <comment type="line" pos:line="42" pos:column="13">// may be limited by one of the others still</comment>
            <for pos:line="43" pos:column="13">for <control pos:line="43" pos:column="17">(<init><decl><type><name pos:line="43" pos:column="18">int<pos:position pos:line="43" pos:column="21"/></name></type> <name pos:line="43" pos:column="22">i<pos:position pos:line="43" pos:column="23"/></name> <init pos:line="43" pos:column="24">= <expr><literal type="number" pos:line="43" pos:column="26">0<pos:position pos:line="43" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="43" pos:column="28"/></init> <condition><expr><name pos:line="43" pos:column="29">i<pos:position pos:line="43" pos:column="30"/></name> <operator pos:line="43" pos:column="31">&lt;<pos:position pos:line="43" pos:column="35"/></operator> <name pos:line="43" pos:column="33">nns<pos:position pos:line="43" pos:column="36"/></name></expr>;<pos:position pos:line="43" pos:column="37"/></condition> <incr><expr><operator pos:line="43" pos:column="38">++<pos:position pos:line="43" pos:column="40"/></operator><name pos:line="43" pos:column="40">i<pos:position pos:line="43" pos:column="41"/></name></expr></incr>)<pos:position pos:line="43" pos:column="42"/></control>
                <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="17">max_shared_edns<pos:position pos:line="44" pos:column="32"/></name> <operator pos:line="44" pos:column="33">=<pos:position pos:line="44" pos:column="34"/></operator> <call><name pos:line="44" pos:column="35">min<pos:position pos:line="44" pos:column="38"/></name><argument_list pos:line="44" pos:column="38">(<argument><expr><name pos:line="44" pos:column="39">max_shared_edns<pos:position pos:line="44" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="56">nameservers<pos:position pos:line="44" pos:column="67"/></name><index pos:line="44" pos:column="67">[<expr><name pos:line="44" pos:column="68">i<pos:position pos:line="44" pos:column="69"/></name></expr>]<pos:position pos:line="44" pos:column="70"/></index></name><operator pos:line="44" pos:column="70">.<pos:position pos:line="44" pos:column="71"/></operator><name pos:line="44" pos:column="71">last_seen_edns<pos:position pos:line="44" pos:column="85"/></name></expr></argument>)<pos:position pos:line="44" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="87"/></expr_stmt></block></for>
        }<pos:position pos:line="45" pos:column="10"/></block></then> <else pos:line="45" pos:column="11">else <block pos:line="45" pos:column="16">{
            <expr_stmt><expr><name><name pos:line="46" pos:column="13">nameservers<pos:position pos:line="46" pos:column="24"/></name><index pos:line="46" pos:column="24">[<expr><name pos:line="46" pos:column="25">from_ns<pos:position pos:line="46" pos:column="32"/></name></expr>]<pos:position pos:line="46" pos:column="33"/></index></name><operator pos:line="46" pos:column="33">.<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="34">last_seen_edns<pos:position pos:line="46" pos:column="48"/></name> <operator pos:line="46" pos:column="49">=<pos:position pos:line="46" pos:column="50"/></operator> <name><name pos:line="46" pos:column="51">q<pos:position pos:line="46" pos:column="52"/></name><operator pos:line="46" pos:column="52">-&gt;<pos:position pos:line="46" pos:column="57"/></operator><name pos:line="46" pos:column="54">edns_seen<pos:position pos:line="46" pos:column="63"/></name></name></expr>;<pos:position pos:line="46" pos:column="64"/></expr_stmt>
            <comment type="line" pos:line="47" pos:column="13">// maybe reduce the global limit downwards to accomodate this NS</comment>
            <expr_stmt><expr><name pos:line="48" pos:column="13">max_shared_edns<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">=<pos:position pos:line="48" pos:column="30"/></operator> <call><name pos:line="48" pos:column="31">min<pos:position pos:line="48" pos:column="34"/></name><argument_list pos:line="48" pos:column="34">(<argument><expr><name pos:line="48" pos:column="35">max_shared_edns<pos:position pos:line="48" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="52">q<pos:position pos:line="48" pos:column="53"/></name><operator pos:line="48" pos:column="53">-&gt;<pos:position pos:line="48" pos:column="58"/></operator><name pos:line="48" pos:column="55">edns_seen<pos:position pos:line="48" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="49" pos:column="10"/></block></else></if>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">max_shared_edns<pos:position pos:line="50" pos:column="28"/></name> <operator pos:line="50" pos:column="29">&lt;<pos:position pos:line="50" pos:column="33"/></operator> <name pos:line="50" pos:column="31">RFC1035_DEFAULT_PACKET_SZ<pos:position pos:line="50" pos:column="56"/></name></expr>)<pos:position pos:line="50" pos:column="57"/></condition><then pos:line="50" pos:column="57">
            <block type="pseudo"><expr_stmt><expr><name pos:line="51" pos:column="13">max_shared_edns<pos:position pos:line="51" pos:column="28"/></name> <operator pos:line="51" pos:column="29">=<pos:position pos:line="51" pos:column="30"/></operator> <operator pos:line="51" pos:column="31">-<pos:position pos:line="51" pos:column="32"/></operator><literal type="number" pos:line="51" pos:column="32">1<pos:position pos:line="51" pos:column="33"/></literal></expr>;<pos:position pos:line="51" pos:column="34"/></expr_stmt></block></then></if>
    }<pos:position pos:line="52" pos:column="6"/></block></then></if>
<cpp:endif pos:line="53" pos:column="1">#<cpp:directive pos:line="53" pos:column="2">endif<pos:position pos:line="53" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">dlinkDelete<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><operator pos:line="55" pos:column="17">&amp;<pos:position pos:line="55" pos:column="22"/></operator><name><name pos:line="55" pos:column="18">q<pos:position pos:line="55" pos:column="19"/></name><operator pos:line="55" pos:column="19">-&gt;<pos:position pos:line="55" pos:column="24"/></operator><name pos:line="55" pos:column="21">lru<pos:position pos:line="55" pos:column="24"/></name></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="26">&amp;<pos:position pos:line="55" pos:column="31"/></operator><name pos:line="55" pos:column="27">lru_list<pos:position pos:line="55" pos:column="35"/></name></expr></argument>)<pos:position pos:line="55" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="56" pos:column="5">q<pos:position pos:line="56" pos:column="6"/></name><operator pos:line="56" pos:column="6">-&gt;<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="8">pending<pos:position pos:line="56" pos:column="15"/></name></name> <operator pos:line="56" pos:column="16">=<pos:position pos:line="56" pos:column="17"/></operator> <literal type="number" pos:line="56" pos:column="18">0<pos:position pos:line="56" pos:column="19"/></literal></expr>;<pos:position pos:line="56" pos:column="20"/></expr_stmt>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name><name pos:line="58" pos:column="9">message<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">tc<pos:position pos:line="58" pos:column="20"/></name></name></expr>)<pos:position pos:line="58" pos:column="21"/></condition><then pos:line="58" pos:column="21"> <block pos:line="58" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">debugs<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><literal type="number" pos:line="59" pos:column="16">78<pos:position pos:line="59" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="59" pos:column="20">3<pos:position pos:line="59" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="23">HERE<pos:position pos:line="59" pos:column="27"/></name> <operator pos:line="59" pos:column="28">&lt;&lt;<pos:position pos:line="59" pos:column="36"/></operator> <literal type="string" pos:line="59" pos:column="31">"Resolver requested TC ("<pos:position pos:line="59" pos:column="56"/></literal> <operator pos:line="59" pos:column="57">&lt;&lt;<pos:position pos:line="59" pos:column="65"/></operator> <name><name pos:line="59" pos:column="60">q<pos:position pos:line="59" pos:column="61"/></name><operator pos:line="59" pos:column="61">-&gt;<pos:position pos:line="59" pos:column="66"/></operator><name pos:line="59" pos:column="63">query<pos:position pos:line="59" pos:column="68"/></name><operator pos:line="59" pos:column="68">.<pos:position pos:line="59" pos:column="69"/></operator><name pos:line="59" pos:column="69">name<pos:position pos:line="59" pos:column="73"/></name></name> <operator pos:line="59" pos:column="74">&lt;&lt;<pos:position pos:line="59" pos:column="82"/></operator> <literal type="string" pos:line="59" pos:column="77">")"<pos:position pos:line="59" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="59" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="82"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="60" pos:column="9">rfc1035MessageDestroy<pos:position pos:line="60" pos:column="30"/></name><argument_list pos:line="60" pos:column="30">(<argument><expr><operator pos:line="60" pos:column="31">&amp;<pos:position pos:line="60" pos:column="36"/></operator><name pos:line="60" pos:column="32">message<pos:position pos:line="60" pos:column="39"/></name></expr></argument>)<pos:position pos:line="60" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="41"/></expr_stmt>

        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">!<pos:position pos:line="62" pos:column="14"/></operator><name><name pos:line="62" pos:column="14">q<pos:position pos:line="62" pos:column="15"/></name><operator pos:line="62" pos:column="15">-&gt;<pos:position pos:line="62" pos:column="20"/></operator><name pos:line="62" pos:column="17">need_vc<pos:position pos:line="62" pos:column="24"/></name></name></expr>)<pos:position pos:line="62" pos:column="25"/></condition><then pos:line="62" pos:column="25"> <block pos:line="62" pos:column="26">{
            <expr_stmt><expr><name><name pos:line="63" pos:column="13">q<pos:position pos:line="63" pos:column="14"/></name><operator pos:line="63" pos:column="14">-&gt;<pos:position pos:line="63" pos:column="19"/></operator><name pos:line="63" pos:column="16">need_vc<pos:position pos:line="63" pos:column="23"/></name></name> <operator pos:line="63" pos:column="24">=<pos:position pos:line="63" pos:column="25"/></operator> <literal type="number" pos:line="63" pos:column="26">1<pos:position pos:line="63" pos:column="27"/></literal></expr>;<pos:position pos:line="63" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="64" pos:column="13">--<pos:position pos:line="64" pos:column="15"/></operator> <name><name pos:line="64" pos:column="16">q<pos:position pos:line="64" pos:column="17"/></name><operator pos:line="64" pos:column="17">-&gt;<pos:position pos:line="64" pos:column="22"/></operator><name pos:line="64" pos:column="19">nsends<pos:position pos:line="64" pos:column="25"/></name></name></expr>;<pos:position pos:line="64" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">idnsSendQuery<pos:position pos:line="65" pos:column="26"/></name><argument_list pos:line="65" pos:column="26">(<argument><expr><name pos:line="65" pos:column="27">q<pos:position pos:line="65" pos:column="28"/></name></expr></argument>)<pos:position pos:line="65" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="66" pos:column="10"/></block></then> <else pos:line="66" pos:column="11">else <block pos:line="66" pos:column="16">{
            <comment type="line" pos:line="67" pos:column="13">// Strange: A TCP DNS response with the truncation bit (TC) set.</comment>
            <comment type="line" pos:line="68" pos:column="13">// Return an error and cleanup; no point in trying TCP again.</comment>
            <expr_stmt><expr><call><name pos:line="69" pos:column="13">debugs<pos:position pos:line="69" pos:column="19"/></name><argument_list pos:line="69" pos:column="19">(<argument><expr><literal type="number" pos:line="69" pos:column="20">78<pos:position pos:line="69" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="24">3<pos:position pos:line="69" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="69" pos:column="27">HERE<pos:position pos:line="69" pos:column="31"/></name> <operator pos:line="69" pos:column="32">&lt;&lt;<pos:position pos:line="69" pos:column="40"/></operator> <literal type="string" pos:line="69" pos:column="35">"TCP DNS response"<pos:position pos:line="69" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="69" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="55"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="70" pos:column="13">idnsCallback<pos:position pos:line="70" pos:column="25"/></name><argument_list pos:line="70" pos:column="25">(<argument><expr><name pos:line="70" pos:column="26">q<pos:position pos:line="70" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="70" pos:column="29">"Truncated TCP DNS response"<pos:position pos:line="70" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="70" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="71" pos:column="10"/></block></else></if>

        <return pos:line="73" pos:column="9">return;<pos:position pos:line="73" pos:column="16"/></return>
    }<pos:position pos:line="74" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="76" pos:column="5">idnsRcodeCount<pos:position pos:line="76" pos:column="19"/></name><argument_list pos:line="76" pos:column="19">(<argument><expr><name pos:line="76" pos:column="20">n<pos:position pos:line="76" pos:column="21"/></name></expr></argument>, <argument><expr><name><name pos:line="76" pos:column="23">q<pos:position pos:line="76" pos:column="24"/></name><operator pos:line="76" pos:column="24">-&gt;<pos:position pos:line="76" pos:column="29"/></operator><name pos:line="76" pos:column="26">attempt<pos:position pos:line="76" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="76" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="35"/></expr_stmt>

    <if pos:line="78" pos:column="5">if <condition pos:line="78" pos:column="8">(<expr><name pos:line="78" pos:column="9">n<pos:position pos:line="78" pos:column="10"/></name> <operator pos:line="78" pos:column="11">&lt;<pos:position pos:line="78" pos:column="15"/></operator> <literal type="number" pos:line="78" pos:column="13">0<pos:position pos:line="78" pos:column="14"/></literal></expr>)<pos:position pos:line="78" pos:column="15"/></condition><then pos:line="78" pos:column="15"> <block pos:line="78" pos:column="16">{
        <expr_stmt><expr><name><name pos:line="79" pos:column="9">q<pos:position pos:line="79" pos:column="10"/></name><operator pos:line="79" pos:column="10">-&gt;<pos:position pos:line="79" pos:column="15"/></operator><name pos:line="79" pos:column="12">rcode<pos:position pos:line="79" pos:column="17"/></name></name> <operator pos:line="79" pos:column="18">=<pos:position pos:line="79" pos:column="19"/></operator> <operator pos:line="79" pos:column="20">-<pos:position pos:line="79" pos:column="21"/></operator><name pos:line="79" pos:column="21">n<pos:position pos:line="79" pos:column="22"/></name></expr>;<pos:position pos:line="79" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="80" pos:column="9">debugs<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><literal type="number" pos:line="80" pos:column="16">78<pos:position pos:line="80" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="20">3<pos:position pos:line="80" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="23">"idnsGrokReply: error "<pos:position pos:line="80" pos:column="46"/></literal> <operator pos:line="80" pos:column="47">&lt;&lt;<pos:position pos:line="80" pos:column="55"/></operator> <call><name pos:line="80" pos:column="50">rfc1035ErrorMessage<pos:position pos:line="80" pos:column="69"/></name><argument_list pos:line="80" pos:column="69">(<argument><expr><name pos:line="80" pos:column="70">n<pos:position pos:line="80" pos:column="71"/></name></expr></argument>)<pos:position pos:line="80" pos:column="72"/></argument_list></call> <operator pos:line="80" pos:column="73">&lt;&lt;<pos:position pos:line="80" pos:column="81"/></operator> <literal type="string" pos:line="80" pos:column="76">" ("<pos:position pos:line="80" pos:column="80"/></literal> <operator pos:line="80" pos:column="81">&lt;&lt;<pos:position pos:line="80" pos:column="89"/></operator> <name><name pos:line="80" pos:column="84">q<pos:position pos:line="80" pos:column="85"/></name><operator pos:line="80" pos:column="85">-&gt;<pos:position pos:line="80" pos:column="90"/></operator><name pos:line="80" pos:column="87">rcode<pos:position pos:line="80" pos:column="92"/></name></name> <operator pos:line="80" pos:column="93">&lt;&lt;<pos:position pos:line="80" pos:column="101"/></operator> <literal type="string" pos:line="80" pos:column="96">")"<pos:position pos:line="80" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="101"/></expr_stmt>

        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><name><name pos:line="82" pos:column="13">q<pos:position pos:line="82" pos:column="14"/></name><operator pos:line="82" pos:column="14">-&gt;<pos:position pos:line="82" pos:column="19"/></operator><name pos:line="82" pos:column="16">rcode<pos:position pos:line="82" pos:column="21"/></name></name> <operator pos:line="82" pos:column="22">==<pos:position pos:line="82" pos:column="24"/></operator> <literal type="number" pos:line="82" pos:column="25">2<pos:position pos:line="82" pos:column="26"/></literal> <operator pos:line="82" pos:column="27">&amp;&amp;<pos:position pos:line="82" pos:column="37"/></operator> <operator pos:line="82" pos:column="30">(<pos:position pos:line="82" pos:column="31"/></operator><operator pos:line="82" pos:column="31">++<pos:position pos:line="82" pos:column="33"/></operator> <name><name pos:line="82" pos:column="34">q<pos:position pos:line="82" pos:column="35"/></name><operator pos:line="82" pos:column="35">-&gt;<pos:position pos:line="82" pos:column="40"/></operator><name pos:line="82" pos:column="37">attempt<pos:position pos:line="82" pos:column="44"/></name></name><operator pos:line="82" pos:column="44">)<pos:position pos:line="82" pos:column="45"/></operator> <operator pos:line="82" pos:column="46">&lt;<pos:position pos:line="82" pos:column="50"/></operator> <name pos:line="82" pos:column="48">MAX_ATTEMPT<pos:position pos:line="82" pos:column="59"/></name></expr>)<pos:position pos:line="82" pos:column="60"/></condition><then pos:line="82" pos:column="60"> <block pos:line="82" pos:column="61">{
            <comment type="block" pos:line="83" pos:column="13">/*
             * RCODE 2 is "Server failure - The name server was
             * unable to process this query due to a problem with
             * the name server."
             */</comment>
            <expr_stmt><expr><call><name pos:line="88" pos:column="13">debugs<pos:position pos:line="88" pos:column="19"/></name><argument_list pos:line="88" pos:column="19">(<argument><expr><literal type="number" pos:line="88" pos:column="20">78<pos:position pos:line="88" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="88" pos:column="24">3<pos:position pos:line="88" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="27">"idnsGrokReply: Query result: SERV_FAIL"<pos:position pos:line="88" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="88" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="69"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="89" pos:column="13">rfc1035MessageDestroy<pos:position pos:line="89" pos:column="34"/></name><argument_list pos:line="89" pos:column="34">(<argument><expr><operator pos:line="89" pos:column="35">&amp;<pos:position pos:line="89" pos:column="40"/></operator><name pos:line="89" pos:column="36">message<pos:position pos:line="89" pos:column="43"/></name></expr></argument>)<pos:position pos:line="89" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">idnsSendQuery<pos:position pos:line="90" pos:column="26"/></name><argument_list pos:line="90" pos:column="26">(<argument><expr><name pos:line="90" pos:column="27">q<pos:position pos:line="90" pos:column="28"/></name></expr></argument>)<pos:position pos:line="90" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="30"/></expr_stmt>
            <return pos:line="91" pos:column="13">return;<pos:position pos:line="91" pos:column="20"/></return>
        }<pos:position pos:line="92" pos:column="10"/></block></then></if>

        <comment type="line" pos:line="94" pos:column="9">// Do searchpath processing on the master A query only to keep</comment>
        <comment type="line" pos:line="95" pos:column="9">// things simple. NXDOMAIN is authorative for the label, not</comment>
        <comment type="line" pos:line="96" pos:column="9">// the record type.</comment>
        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name><name pos:line="97" pos:column="13">q<pos:position pos:line="97" pos:column="14"/></name><operator pos:line="97" pos:column="14">-&gt;<pos:position pos:line="97" pos:column="19"/></operator><name pos:line="97" pos:column="16">rcode<pos:position pos:line="97" pos:column="21"/></name></name> <operator pos:line="97" pos:column="22">==<pos:position pos:line="97" pos:column="24"/></operator> <literal type="number" pos:line="97" pos:column="25">3<pos:position pos:line="97" pos:column="26"/></literal> <operator pos:line="97" pos:column="27">&amp;&amp;<pos:position pos:line="97" pos:column="37"/></operator> <operator pos:line="97" pos:column="30">!<pos:position pos:line="97" pos:column="31"/></operator><name><name pos:line="97" pos:column="31">q<pos:position pos:line="97" pos:column="32"/></name><operator pos:line="97" pos:column="32">-&gt;<pos:position pos:line="97" pos:column="37"/></operator><name pos:line="97" pos:column="34">master<pos:position pos:line="97" pos:column="40"/></name></name> <operator pos:line="97" pos:column="41">&amp;&amp;<pos:position pos:line="97" pos:column="51"/></operator> <name><name pos:line="97" pos:column="44">q<pos:position pos:line="97" pos:column="45"/></name><operator pos:line="97" pos:column="45">-&gt;<pos:position pos:line="97" pos:column="50"/></operator><name pos:line="97" pos:column="47">do_searchpath<pos:position pos:line="97" pos:column="60"/></name></name> <operator pos:line="97" pos:column="61">&amp;&amp;<pos:position pos:line="97" pos:column="71"/></operator> <name><name pos:line="97" pos:column="64">q<pos:position pos:line="97" pos:column="65"/></name><operator pos:line="97" pos:column="65">-&gt;<pos:position pos:line="97" pos:column="70"/></operator><name pos:line="97" pos:column="67">attempt<pos:position pos:line="97" pos:column="74"/></name></name> <operator pos:line="97" pos:column="75">&lt;<pos:position pos:line="97" pos:column="79"/></operator> <name pos:line="97" pos:column="77">MAX_ATTEMPT<pos:position pos:line="97" pos:column="88"/></name></expr>)<pos:position pos:line="97" pos:column="89"/></condition><then pos:line="97" pos:column="89"> <block pos:line="97" pos:column="90">{
            <expr_stmt><expr><call><name pos:line="98" pos:column="13">assert<pos:position pos:line="98" pos:column="19"/></name><argument_list pos:line="98" pos:column="19">(<argument><expr><name pos:line="98" pos:column="20">NULL<pos:position pos:line="98" pos:column="24"/></name> <operator pos:line="98" pos:column="25">==<pos:position pos:line="98" pos:column="27"/></operator> <name><name pos:line="98" pos:column="28">message<pos:position pos:line="98" pos:column="35"/></name><operator pos:line="98" pos:column="35">-&gt;<pos:position pos:line="98" pos:column="40"/></operator><name pos:line="98" pos:column="37">answer<pos:position pos:line="98" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="98" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="99" pos:column="13">strcpy<pos:position pos:line="99" pos:column="19"/></name><argument_list pos:line="99" pos:column="19">(<argument><expr><name><name pos:line="99" pos:column="20">q<pos:position pos:line="99" pos:column="21"/></name><operator pos:line="99" pos:column="21">-&gt;<pos:position pos:line="99" pos:column="26"/></operator><name pos:line="99" pos:column="23">name<pos:position pos:line="99" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="99" pos:column="29">q<pos:position pos:line="99" pos:column="30"/></name><operator pos:line="99" pos:column="30">-&gt;<pos:position pos:line="99" pos:column="35"/></operator><name pos:line="99" pos:column="32">orig<pos:position pos:line="99" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="99" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="38"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="101" pos:column="13">debugs<pos:position pos:line="101" pos:column="19"/></name><argument_list pos:line="101" pos:column="19">(<argument><expr><literal type="number" pos:line="101" pos:column="20">78<pos:position pos:line="101" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="101" pos:column="24">3<pos:position pos:line="101" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="101" pos:column="27">"idnsGrokReply: Query result: NXDOMAIN - "<pos:position pos:line="101" pos:column="69"/></literal> <operator pos:line="101" pos:column="70">&lt;&lt;<pos:position pos:line="101" pos:column="78"/></operator> <name><name pos:line="101" pos:column="73">q<pos:position pos:line="101" pos:column="74"/></name><operator pos:line="101" pos:column="74">-&gt;<pos:position pos:line="101" pos:column="79"/></operator><name pos:line="101" pos:column="76">name<pos:position pos:line="101" pos:column="80"/></name></name></expr></argument> )<pos:position pos:line="101" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="83"/></expr_stmt>

            <if pos:line="103" pos:column="13">if <condition pos:line="103" pos:column="16">(<expr><name><name pos:line="103" pos:column="17">q<pos:position pos:line="103" pos:column="18"/></name><operator pos:line="103" pos:column="18">-&gt;<pos:position pos:line="103" pos:column="23"/></operator><name pos:line="103" pos:column="20">domain<pos:position pos:line="103" pos:column="26"/></name></name> <operator pos:line="103" pos:column="27">&lt;<pos:position pos:line="103" pos:column="31"/></operator> <name pos:line="103" pos:column="29">npc<pos:position pos:line="103" pos:column="32"/></name></expr>)<pos:position pos:line="103" pos:column="33"/></condition><then pos:line="103" pos:column="33"> <block pos:line="103" pos:column="34">{
                <expr_stmt><expr><call><name pos:line="104" pos:column="17">strcat<pos:position pos:line="104" pos:column="23"/></name><argument_list pos:line="104" pos:column="23">(<argument><expr><name><name pos:line="104" pos:column="24">q<pos:position pos:line="104" pos:column="25"/></name><operator pos:line="104" pos:column="25">-&gt;<pos:position pos:line="104" pos:column="30"/></operator><name pos:line="104" pos:column="27">name<pos:position pos:line="104" pos:column="31"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="104" pos:column="33">"."<pos:position pos:line="104" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="38"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="105" pos:column="17">strcat<pos:position pos:line="105" pos:column="23"/></name><argument_list pos:line="105" pos:column="23">(<argument><expr><name><name pos:line="105" pos:column="24">q<pos:position pos:line="105" pos:column="25"/></name><operator pos:line="105" pos:column="25">-&gt;<pos:position pos:line="105" pos:column="30"/></operator><name pos:line="105" pos:column="27">name<pos:position pos:line="105" pos:column="31"/></name></name></expr></argument>, <argument><expr><name><name pos:line="105" pos:column="33">searchpath<pos:position pos:line="105" pos:column="43"/></name><index pos:line="105" pos:column="43">[<expr><name><name pos:line="105" pos:column="44">q<pos:position pos:line="105" pos:column="45"/></name><operator pos:line="105" pos:column="45">-&gt;<pos:position pos:line="105" pos:column="50"/></operator><name pos:line="105" pos:column="47">domain<pos:position pos:line="105" pos:column="53"/></name></name></expr>]<pos:position pos:line="105" pos:column="54"/></index></name><operator pos:line="105" pos:column="54">.<pos:position pos:line="105" pos:column="55"/></operator><name pos:line="105" pos:column="55">domain<pos:position pos:line="105" pos:column="61"/></name></expr></argument>)<pos:position pos:line="105" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="63"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="106" pos:column="17">debugs<pos:position pos:line="106" pos:column="23"/></name><argument_list pos:line="106" pos:column="23">(<argument><expr><literal type="number" pos:line="106" pos:column="24">78<pos:position pos:line="106" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="28">3<pos:position pos:line="106" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="106" pos:column="31">"idnsGrokReply: searchpath used for "<pos:position pos:line="106" pos:column="68"/></literal> <operator pos:line="106" pos:column="69">&lt;&lt;<pos:position pos:line="106" pos:column="77"/></operator> <name><name pos:line="106" pos:column="72">q<pos:position pos:line="106" pos:column="73"/></name><operator pos:line="106" pos:column="73">-&gt;<pos:position pos:line="106" pos:column="78"/></operator><name pos:line="106" pos:column="75">name<pos:position pos:line="106" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="106" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="81"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="107" pos:column="17">++<pos:position pos:line="107" pos:column="19"/></operator> <name><name pos:line="107" pos:column="20">q<pos:position pos:line="107" pos:column="21"/></name><operator pos:line="107" pos:column="21">-&gt;<pos:position pos:line="107" pos:column="26"/></operator><name pos:line="107" pos:column="23">domain<pos:position pos:line="107" pos:column="29"/></name></name></expr>;<pos:position pos:line="107" pos:column="30"/></expr_stmt>
            }<pos:position pos:line="108" pos:column="14"/></block></then> <else pos:line="108" pos:column="15">else <block pos:line="108" pos:column="20">{
                <expr_stmt><expr><operator pos:line="109" pos:column="17">++<pos:position pos:line="109" pos:column="19"/></operator> <name><name pos:line="109" pos:column="20">q<pos:position pos:line="109" pos:column="21"/></name><operator pos:line="109" pos:column="21">-&gt;<pos:position pos:line="109" pos:column="26"/></operator><name pos:line="109" pos:column="23">attempt<pos:position pos:line="109" pos:column="30"/></name></name></expr>;<pos:position pos:line="109" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="110" pos:column="14"/></block></else></if>

            <expr_stmt><expr><call><name pos:line="112" pos:column="13">rfc1035MessageDestroy<pos:position pos:line="112" pos:column="34"/></name><argument_list pos:line="112" pos:column="34">(<argument><expr><operator pos:line="112" pos:column="35">&amp;<pos:position pos:line="112" pos:column="40"/></operator><name pos:line="112" pos:column="36">message<pos:position pos:line="112" pos:column="43"/></name></expr></argument>)<pos:position pos:line="112" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="45"/></expr_stmt>

            <comment type="line" pos:line="114" pos:column="13">// cleanup slave AAAA query</comment>
            <while pos:line="115" pos:column="13">while <condition pos:line="115" pos:column="19">(<decl><type><name pos:line="115" pos:column="20">idns_query<pos:position pos:line="115" pos:column="30"/></name> <modifier pos:line="115" pos:column="31">*<pos:position pos:line="115" pos:column="32"/></modifier></type><name pos:line="115" pos:column="32">slave<pos:position pos:line="115" pos:column="37"/></name> <init pos:line="115" pos:column="38">= <expr><name><name pos:line="115" pos:column="40">q<pos:position pos:line="115" pos:column="41"/></name><operator pos:line="115" pos:column="41">-&gt;<pos:position pos:line="115" pos:column="46"/></operator><name pos:line="115" pos:column="43">slave<pos:position pos:line="115" pos:column="48"/></name></name></expr></init></decl>)<pos:position pos:line="115" pos:column="49"/></condition> <block pos:line="115" pos:column="50">{
                <expr_stmt><expr><call><name pos:line="116" pos:column="17">dlinkDelete<pos:position pos:line="116" pos:column="28"/></name><argument_list pos:line="116" pos:column="28">(<argument><expr><operator pos:line="116" pos:column="29">&amp;<pos:position pos:line="116" pos:column="34"/></operator><name><name pos:line="116" pos:column="30">slave<pos:position pos:line="116" pos:column="35"/></name><operator pos:line="116" pos:column="35">-&gt;<pos:position pos:line="116" pos:column="40"/></operator><name pos:line="116" pos:column="37">lru<pos:position pos:line="116" pos:column="40"/></name></name></expr></argument>, <argument><expr><operator pos:line="116" pos:column="42">&amp;<pos:position pos:line="116" pos:column="47"/></operator><name pos:line="116" pos:column="43">lru_list<pos:position pos:line="116" pos:column="51"/></name></expr></argument>)<pos:position pos:line="116" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="117" pos:column="17">q<pos:position pos:line="117" pos:column="18"/></name><operator pos:line="117" pos:column="18">-&gt;<pos:position pos:line="117" pos:column="23"/></operator><name pos:line="117" pos:column="20">slave<pos:position pos:line="117" pos:column="25"/></name></name> <operator pos:line="117" pos:column="26">=<pos:position pos:line="117" pos:column="27"/></operator> <name><name pos:line="117" pos:column="28">slave<pos:position pos:line="117" pos:column="33"/></name><operator pos:line="117" pos:column="33">-&gt;<pos:position pos:line="117" pos:column="38"/></operator><name pos:line="117" pos:column="35">slave<pos:position pos:line="117" pos:column="40"/></name></name></expr>;<pos:position pos:line="117" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="118" pos:column="17">rfc1035MessageDestroy<pos:position pos:line="118" pos:column="38"/></name><argument_list pos:line="118" pos:column="38">(<argument><expr><operator pos:line="118" pos:column="39">&amp;<pos:position pos:line="118" pos:column="44"/></operator><name><name pos:line="118" pos:column="40">slave<pos:position pos:line="118" pos:column="45"/></name><operator pos:line="118" pos:column="45">-&gt;<pos:position pos:line="118" pos:column="50"/></operator><name pos:line="118" pos:column="47">message<pos:position pos:line="118" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="118" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="56"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="119" pos:column="17">cbdataFree<pos:position pos:line="119" pos:column="27"/></name><argument_list pos:line="119" pos:column="27">(<argument><expr><name pos:line="119" pos:column="28">slave<pos:position pos:line="119" pos:column="33"/></name></expr></argument>)<pos:position pos:line="119" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="35"/></expr_stmt>
            }<pos:position pos:line="120" pos:column="14"/></block></while>

            <comment type="line" pos:line="122" pos:column="13">// Build new query</comment>
            <expr_stmt><expr><name><name pos:line="123" pos:column="13">q<pos:position pos:line="123" pos:column="14"/></name><operator pos:line="123" pos:column="14">-&gt;<pos:position pos:line="123" pos:column="19"/></operator><name pos:line="123" pos:column="16">query_id<pos:position pos:line="123" pos:column="24"/></name></name> <operator pos:line="123" pos:column="25">=<pos:position pos:line="123" pos:column="26"/></operator> <call><name pos:line="123" pos:column="27">idnsQueryID<pos:position pos:line="123" pos:column="38"/></name><argument_list pos:line="123" pos:column="38">()<pos:position pos:line="123" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="123" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="124" pos:column="13">debugs<pos:position pos:line="124" pos:column="19"/></name><argument_list pos:line="124" pos:column="19">(<argument><expr><literal type="number" pos:line="124" pos:column="20">78<pos:position pos:line="124" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="124" pos:column="24">3<pos:position pos:line="124" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="27">"idnsGrokReply: Trying A Query for "<pos:position pos:line="124" pos:column="63"/></literal> <operator pos:line="124" pos:column="64">&lt;&lt;<pos:position pos:line="124" pos:column="72"/></operator> <name><name pos:line="124" pos:column="67">q<pos:position pos:line="124" pos:column="68"/></name><operator pos:line="124" pos:column="68">-&gt;<pos:position pos:line="124" pos:column="73"/></operator><name pos:line="124" pos:column="70">name<pos:position pos:line="124" pos:column="74"/></name></name></expr></argument>)<pos:position pos:line="124" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="76"/></expr_stmt>
            <comment type="line" pos:line="125" pos:column="13">// see EDNS notes at top of file why this sends 0</comment>
            <expr_stmt><expr><name><name pos:line="126" pos:column="13">q<pos:position pos:line="126" pos:column="14"/></name><operator pos:line="126" pos:column="14">-&gt;<pos:position pos:line="126" pos:column="19"/></operator><name pos:line="126" pos:column="16">sz<pos:position pos:line="126" pos:column="18"/></name></name> <operator pos:line="126" pos:column="19">=<pos:position pos:line="126" pos:column="20"/></operator> <call><name pos:line="126" pos:column="21">rfc3596BuildAQuery<pos:position pos:line="126" pos:column="39"/></name><argument_list pos:line="126" pos:column="39">(<argument><expr><name><name pos:line="126" pos:column="40">q<pos:position pos:line="126" pos:column="41"/></name><operator pos:line="126" pos:column="41">-&gt;<pos:position pos:line="126" pos:column="46"/></operator><name pos:line="126" pos:column="43">name<pos:position pos:line="126" pos:column="47"/></name></name></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="49">q<pos:position pos:line="126" pos:column="50"/></name><operator pos:line="126" pos:column="50">-&gt;<pos:position pos:line="126" pos:column="55"/></operator><name pos:line="126" pos:column="52">buf<pos:position pos:line="126" pos:column="55"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="126" pos:column="57">sizeof<argument_list pos:line="126" pos:column="63">(<argument><expr><name><name pos:line="126" pos:column="64">q<pos:position pos:line="126" pos:column="65"/></name><operator pos:line="126" pos:column="65">-&gt;<pos:position pos:line="126" pos:column="70"/></operator><name pos:line="126" pos:column="67">buf<pos:position pos:line="126" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="126" pos:column="71"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="126" pos:column="73">q<pos:position pos:line="126" pos:column="74"/></name><operator pos:line="126" pos:column="74">-&gt;<pos:position pos:line="126" pos:column="79"/></operator><name pos:line="126" pos:column="76">query_id<pos:position pos:line="126" pos:column="84"/></name></name></expr></argument>, <argument><expr><operator pos:line="126" pos:column="86">&amp;<pos:position pos:line="126" pos:column="91"/></operator><name><name pos:line="126" pos:column="87">q<pos:position pos:line="126" pos:column="88"/></name><operator pos:line="126" pos:column="88">-&gt;<pos:position pos:line="126" pos:column="93"/></operator><name pos:line="126" pos:column="90">query<pos:position pos:line="126" pos:column="95"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="126" pos:column="97">0<pos:position pos:line="126" pos:column="98"/></literal></expr></argument>)<pos:position pos:line="126" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="100"/></expr_stmt>
            <if pos:line="127" pos:column="13">if <condition pos:line="127" pos:column="16">(<expr><name><name pos:line="127" pos:column="17">q<pos:position pos:line="127" pos:column="18"/></name><operator pos:line="127" pos:column="18">-&gt;<pos:position pos:line="127" pos:column="23"/></operator><name pos:line="127" pos:column="20">sz<pos:position pos:line="127" pos:column="22"/></name></name> <operator pos:line="127" pos:column="23">&lt;<pos:position pos:line="127" pos:column="27"/></operator> <literal type="number" pos:line="127" pos:column="25">0<pos:position pos:line="127" pos:column="26"/></literal></expr>)<pos:position pos:line="127" pos:column="27"/></condition><then pos:line="127" pos:column="27"> <block pos:line="127" pos:column="28">{
                <comment type="block" pos:line="128" pos:column="17">/* problem with query data -- query not sent */</comment>
                <expr_stmt><expr><call><name pos:line="129" pos:column="17">idnsCallback<pos:position pos:line="129" pos:column="29"/></name><argument_list pos:line="129" pos:column="29">(<argument><expr><name pos:line="129" pos:column="30">q<pos:position pos:line="129" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="33">"Internal error"<pos:position pos:line="129" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="129" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="51"/></expr_stmt>
                <return pos:line="130" pos:column="17">return;<pos:position pos:line="130" pos:column="24"/></return>
            }<pos:position pos:line="131" pos:column="14"/></block></then></if>

            <expr_stmt><expr><name><name pos:line="133" pos:column="13">q<pos:position pos:line="133" pos:column="14"/></name><operator pos:line="133" pos:column="14">-&gt;<pos:position pos:line="133" pos:column="19"/></operator><name pos:line="133" pos:column="16">nsends<pos:position pos:line="133" pos:column="22"/></name></name> <operator pos:line="133" pos:column="23">=<pos:position pos:line="133" pos:column="24"/></operator> <literal type="number" pos:line="133" pos:column="25">0<pos:position pos:line="133" pos:column="26"/></literal></expr>;<pos:position pos:line="133" pos:column="27"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="135" pos:column="13">idnsCheckMDNS<pos:position pos:line="135" pos:column="26"/></name><argument_list pos:line="135" pos:column="26">(<argument><expr><name pos:line="135" pos:column="27">q<pos:position pos:line="135" pos:column="28"/></name></expr></argument>)<pos:position pos:line="135" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="136" pos:column="13">idnsSendQuery<pos:position pos:line="136" pos:column="26"/></name><argument_list pos:line="136" pos:column="26">(<argument><expr><name pos:line="136" pos:column="27">q<pos:position pos:line="136" pos:column="28"/></name></expr></argument>)<pos:position pos:line="136" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="30"/></expr_stmt>
            <if pos:line="137" pos:column="13">if <condition pos:line="137" pos:column="16">(<expr><name><name pos:line="137" pos:column="17">Ip<pos:position pos:line="137" pos:column="19"/></name><operator pos:line="137" pos:column="19">::<pos:position pos:line="137" pos:column="21"/></operator><name pos:line="137" pos:column="21">EnableIpv6<pos:position pos:line="137" pos:column="31"/></name></name></expr>)<pos:position pos:line="137" pos:column="32"/></condition><then pos:line="137" pos:column="32">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="138" pos:column="17">idnsSendSlaveAAAAQuery<pos:position pos:line="138" pos:column="39"/></name><argument_list pos:line="138" pos:column="39">(<argument><expr><name pos:line="138" pos:column="40">q<pos:position pos:line="138" pos:column="41"/></name></expr></argument>)<pos:position pos:line="138" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="138" pos:column="43"/></expr_stmt></block></then></if>
            <return pos:line="139" pos:column="13">return;<pos:position pos:line="139" pos:column="20"/></return>
        }<pos:position pos:line="140" pos:column="10"/></block></then></if>
    }<pos:position pos:line="141" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="143" pos:column="5">q<pos:position pos:line="143" pos:column="6"/></name><operator pos:line="143" pos:column="6">-&gt;<pos:position pos:line="143" pos:column="11"/></operator><name pos:line="143" pos:column="8">message<pos:position pos:line="143" pos:column="15"/></name></name> <operator pos:line="143" pos:column="16">=<pos:position pos:line="143" pos:column="17"/></operator> <name pos:line="143" pos:column="18">message<pos:position pos:line="143" pos:column="25"/></name></expr>;<pos:position pos:line="143" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="144" pos:column="5">q<pos:position pos:line="144" pos:column="6"/></name><operator pos:line="144" pos:column="6">-&gt;<pos:position pos:line="144" pos:column="11"/></operator><name pos:line="144" pos:column="8">ancount<pos:position pos:line="144" pos:column="15"/></name></name> <operator pos:line="144" pos:column="16">=<pos:position pos:line="144" pos:column="17"/></operator> <name pos:line="144" pos:column="18">n<pos:position pos:line="144" pos:column="19"/></name></expr>;<pos:position pos:line="144" pos:column="20"/></expr_stmt>

    <if pos:line="146" pos:column="5">if <condition pos:line="146" pos:column="8">(<expr><name pos:line="146" pos:column="9">n<pos:position pos:line="146" pos:column="10"/></name> <operator pos:line="146" pos:column="11">&gt;=<pos:position pos:line="146" pos:column="16"/></operator> <literal type="number" pos:line="146" pos:column="14">0<pos:position pos:line="146" pos:column="15"/></literal></expr>)<pos:position pos:line="146" pos:column="16"/></condition><then pos:line="146" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="147" pos:column="9">idnsCallback<pos:position pos:line="147" pos:column="21"/></name><argument_list pos:line="147" pos:column="21">(<argument><expr><name pos:line="147" pos:column="22">q<pos:position pos:line="147" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="147" pos:column="25">NULL<pos:position pos:line="147" pos:column="29"/></name></expr></argument>)<pos:position pos:line="147" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="31"/></expr_stmt></block></then>
    <else pos:line="148" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="149" pos:column="9">idnsCallback<pos:position pos:line="149" pos:column="21"/></name><argument_list pos:line="149" pos:column="21">(<argument><expr><name pos:line="149" pos:column="22">q<pos:position pos:line="149" pos:column="23"/></name></expr></argument>, <argument><expr><call><name pos:line="149" pos:column="25">rfc1035ErrorMessage<pos:position pos:line="149" pos:column="44"/></name><argument_list pos:line="149" pos:column="44">(<argument><expr><name><name pos:line="149" pos:column="45">q<pos:position pos:line="149" pos:column="46"/></name><operator pos:line="149" pos:column="46">-&gt;<pos:position pos:line="149" pos:column="51"/></operator><name pos:line="149" pos:column="48">rcode<pos:position pos:line="149" pos:column="53"/></name></name></expr></argument>)<pos:position pos:line="149" pos:column="54"/></argument_list></call></expr></argument>)<pos:position pos:line="149" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="149" pos:column="56"/></expr_stmt></block></else></if>

}<pos:position pos:line="151" pos:column="2"/></block></function></unit>

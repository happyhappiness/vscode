<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_348_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type> <name pos:line="1" pos:column="8">GetDomainName<pos:position pos:line="1" pos:column="21"/></name><parameter_list pos:line="1" pos:column="21">(<parameter><decl><type><name pos:line="1" pos:column="22">void<pos:position pos:line="1" pos:column="26"/></name></type></decl></parameter>)<pos:position pos:line="1" pos:column="27"/></parameter_list>

<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">LSA_HANDLE<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">PolicyHandle<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">LSA_OBJECT_ATTRIBUTES<pos:position pos:line="5" pos:column="26"/></name></type> <name pos:line="5" pos:column="27">ObjectAttributes<pos:position pos:line="5" pos:column="43"/></name></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">NTSTATUS<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">status<pos:position pos:line="6" pos:column="20"/></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">PPOLICY_PRIMARY_DOMAIN_INFO<pos:position pos:line="7" pos:column="32"/></name></type> <name pos:line="7" pos:column="33">ppdiDomainInfo<pos:position pos:line="7" pos:column="47"/></name></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">PWKSTA_INFO_100<pos:position pos:line="8" pos:column="20"/></name></type> <name pos:line="8" pos:column="21">pwkiWorkstationInfo<pos:position pos:line="8" pos:column="40"/></name></decl>;<pos:position pos:line="8" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">DWORD<pos:position pos:line="9" pos:column="10"/></name></type> <name pos:line="9" pos:column="11">netret<pos:position pos:line="9" pos:column="17"/></name></decl>;<pos:position pos:line="9" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type> <name pos:line="10" pos:column="12">DomainName<pos:position pos:line="10" pos:column="22"/></name> <init pos:line="10" pos:column="23">= <expr><name pos:line="10" pos:column="25">NULL<pos:position pos:line="10" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="30"/></decl_stmt>

    <comment type="block" pos:line="12" pos:column="5">/*
     * Always initialize the object attributes to all zeroes.
     */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">memset<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><operator pos:line="15" pos:column="12">&amp;<pos:position pos:line="15" pos:column="17"/></operator><name pos:line="15" pos:column="13">ObjectAttributes<pos:position pos:line="15" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="31">'\0'<pos:position pos:line="15" pos:column="35"/></literal></expr></argument>, <argument><expr><sizeof pos:line="15" pos:column="37">sizeof<argument_list pos:line="15" pos:column="43">(<argument><expr><name pos:line="15" pos:column="44">ObjectAttributes<pos:position pos:line="15" pos:column="60"/></name></expr></argument>)<pos:position pos:line="15" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="63"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/*
     * You need the local workstation name. Use NetWkstaGetInfo at level
     * 100 to retrieve a WKSTA_INFO_100 structure.
     *
     * The wki100_computername field contains a pointer to a UNICODE
     * string containing the local computer name.
     */</comment>
    <expr_stmt><expr><name pos:line="24" pos:column="5">netret<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <call><name pos:line="24" pos:column="14">NetWkstaGetInfo<pos:position pos:line="24" pos:column="29"/></name><argument_list pos:line="24" pos:column="29">(<argument><expr><name pos:line="24" pos:column="30">NULL<pos:position pos:line="24" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="36">100<pos:position pos:line="24" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="24" pos:column="41">(<pos:position pos:line="24" pos:column="42"/></operator><name pos:line="24" pos:column="42">LPBYTE<pos:position pos:line="24" pos:column="48"/></name> <operator pos:line="24" pos:column="49">*<pos:position pos:line="24" pos:column="50"/></operator><operator pos:line="24" pos:column="50">)<pos:position pos:line="24" pos:column="51"/></operator><operator pos:line="24" pos:column="51">&amp;<pos:position pos:line="24" pos:column="56"/></operator><name pos:line="24" pos:column="52">pwkiWorkstationInfo<pos:position pos:line="24" pos:column="71"/></name></expr></argument>)<pos:position pos:line="24" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="73"/></expr_stmt>
    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">netret<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">==<pos:position pos:line="25" pos:column="18"/></operator> <name pos:line="25" pos:column="19">NERR_Success<pos:position pos:line="25" pos:column="31"/></name></expr>)<pos:position pos:line="25" pos:column="32"/></condition><then pos:line="25" pos:column="32"> <block pos:line="25" pos:column="33">{
        <comment type="block" pos:line="26" pos:column="9">/*
         * We have the workstation name in:
         * pwkiWorkstationInfo-&gt;wki100_computername
         *
         * Next, open the policy object for the local system using
         * the LsaOpenPolicy function.
         */</comment>
        <expr_stmt><expr><name pos:line="33" pos:column="9">status<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <call><name pos:line="33" pos:column="18">LsaOpenPolicy<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(
                     <argument><expr><name pos:line="34" pos:column="22">NULL<pos:position pos:line="34" pos:column="26"/></name></expr></argument>,
                     <argument><expr><operator pos:line="35" pos:column="22">&amp;<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="23">ObjectAttributes<pos:position pos:line="35" pos:column="39"/></name></expr></argument>,
                     <argument><expr><name pos:line="36" pos:column="22">GENERIC_READ<pos:position pos:line="36" pos:column="34"/></name> <operator pos:line="36" pos:column="35">|<pos:position pos:line="36" pos:column="36"/></operator> <name pos:line="36" pos:column="37">POLICY_VIEW_LOCAL_INFORMATION<pos:position pos:line="36" pos:column="66"/></name></expr></argument>,
                     <argument><expr><operator pos:line="37" pos:column="22">&amp;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="23">PolicyHandle<pos:position pos:line="37" pos:column="35"/></name></expr></argument>
                 )<pos:position pos:line="38" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="20"/></expr_stmt>

        <comment type="block" pos:line="40" pos:column="9">/*
         * Error checking.
         */</comment>
        <if pos:line="43" pos:column="9">if <condition pos:line="43" pos:column="12">(<expr><name pos:line="43" pos:column="13">status<pos:position pos:line="43" pos:column="19"/></name></expr>)<pos:position pos:line="43" pos:column="20"/></condition><then pos:line="43" pos:column="20"> <block pos:line="43" pos:column="21">{
            <expr_stmt><expr><call><name pos:line="44" pos:column="13">debug<pos:position pos:line="44" pos:column="18"/></name><argument_list pos:line="44" pos:column="18">(<argument><expr><literal type="string" pos:line="44" pos:column="19">"OpenPolicy Error: %ld\n"<pos:position pos:line="44" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="44" pos:column="46">status<pos:position pos:line="44" pos:column="52"/></name></expr></argument>)<pos:position pos:line="44" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="45" pos:column="10"/></block></then> <else pos:line="45" pos:column="11">else <block pos:line="45" pos:column="16">{

            <comment type="block" pos:line="47" pos:column="13">/*
             * You have a handle to the policy object. Now, get the
             * domain information using LsaQueryInformationPolicy.
             */</comment>
            <expr_stmt><expr><name pos:line="51" pos:column="13">status<pos:position pos:line="51" pos:column="19"/></name> <operator pos:line="51" pos:column="20">=<pos:position pos:line="51" pos:column="21"/></operator> <call><name pos:line="51" pos:column="22">LsaQueryInformationPolicy<pos:position pos:line="51" pos:column="47"/></name><argument_list pos:line="51" pos:column="47">(<argument><expr><name pos:line="51" pos:column="48">PolicyHandle<pos:position pos:line="51" pos:column="60"/></name></expr></argument>,
                                               <argument><expr><name pos:line="52" pos:column="48">PolicyPrimaryDomainInformation<pos:position pos:line="52" pos:column="78"/></name></expr></argument>,
                                               <argument><expr><operator pos:line="53" pos:column="48">(<pos:position pos:line="53" pos:column="49"/></operator><name pos:line="53" pos:column="49">void<pos:position pos:line="53" pos:column="53"/></name> <operator pos:line="53" pos:column="54">*<pos:position pos:line="53" pos:column="55"/></operator><operator pos:line="53" pos:column="55">*<pos:position pos:line="53" pos:column="56"/></operator><operator pos:line="53" pos:column="56">)<pos:position pos:line="53" pos:column="57"/></operator><operator pos:line="53" pos:column="57">&amp;<pos:position pos:line="53" pos:column="62"/></operator><name pos:line="53" pos:column="58">ppdiDomainInfo<pos:position pos:line="53" pos:column="72"/></name></expr></argument>)<pos:position pos:line="53" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="74"/></expr_stmt>
            <if pos:line="54" pos:column="13">if <condition pos:line="54" pos:column="16">(<expr><name pos:line="54" pos:column="17">status<pos:position pos:line="54" pos:column="23"/></name></expr>)<pos:position pos:line="54" pos:column="24"/></condition><then pos:line="54" pos:column="24"> <block pos:line="54" pos:column="25">{
                <expr_stmt><expr><call><name pos:line="55" pos:column="17">debug<pos:position pos:line="55" pos:column="22"/></name><argument_list pos:line="55" pos:column="22">(<argument><expr><literal type="string" pos:line="55" pos:column="23">"LsaQueryInformationPolicy Error: %ld\n"<pos:position pos:line="55" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="65">status<pos:position pos:line="55" pos:column="71"/></name></expr></argument>)<pos:position pos:line="55" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="73"/></expr_stmt>
            }<pos:position pos:line="56" pos:column="14"/></block></then> <else pos:line="56" pos:column="15">else  <block pos:line="56" pos:column="21">{

                <comment type="block" pos:line="58" pos:column="17">/* Get name in useable format */</comment>
                <expr_stmt><expr><name pos:line="59" pos:column="17">DomainName<pos:position pos:line="59" pos:column="27"/></name> <operator pos:line="59" pos:column="28">=<pos:position pos:line="59" pos:column="29"/></operator> <call><name pos:line="59" pos:column="30">AllocStrFromLSAStr<pos:position pos:line="59" pos:column="48"/></name><argument_list pos:line="59" pos:column="48">(<argument><expr><name><name pos:line="59" pos:column="49">ppdiDomainInfo<pos:position pos:line="59" pos:column="63"/></name><operator pos:line="59" pos:column="63">-&gt;<pos:position pos:line="59" pos:column="68"/></operator><name pos:line="59" pos:column="65">Name<pos:position pos:line="59" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="71"/></expr_stmt>

                <comment type="block" pos:line="61" pos:column="17">/*
                 * Check the Sid pointer, if it is null, the
                 * workstation is either a stand-alone computer
                 * or a member of a workgroup.
                 */</comment>
                <if pos:line="66" pos:column="17">if <condition pos:line="66" pos:column="20">(<expr><name><name pos:line="66" pos:column="21">ppdiDomainInfo<pos:position pos:line="66" pos:column="35"/></name><operator pos:line="66" pos:column="35">-&gt;<pos:position pos:line="66" pos:column="40"/></operator><name pos:line="66" pos:column="37">Sid<pos:position pos:line="66" pos:column="40"/></name></name></expr>)<pos:position pos:line="66" pos:column="41"/></condition><then pos:line="66" pos:column="41"> <block pos:line="66" pos:column="42">{

                    <comment type="block" pos:line="68" pos:column="21">/*
                     * Member of a domain. Display it in debug mode.
                     */</comment>
                    <expr_stmt><expr><call><name pos:line="71" pos:column="21">debug<pos:position pos:line="71" pos:column="26"/></name><argument_list pos:line="71" pos:column="26">(<argument><expr><literal type="string" pos:line="71" pos:column="27">"Member of Domain %s\n"<pos:position pos:line="71" pos:column="50"/></literal></expr></argument>,<argument><expr><name pos:line="71" pos:column="51">DomainName<pos:position pos:line="71" pos:column="61"/></name></expr></argument>)<pos:position pos:line="71" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="63"/></expr_stmt>
                }<pos:position pos:line="72" pos:column="18"/></block></then> <else pos:line="72" pos:column="19">else <block pos:line="72" pos:column="24">{
                    <expr_stmt><expr><name pos:line="73" pos:column="21">DomainName<pos:position pos:line="73" pos:column="31"/></name> <operator pos:line="73" pos:column="32">=<pos:position pos:line="73" pos:column="33"/></operator> <name pos:line="73" pos:column="34">NULL<pos:position pos:line="73" pos:column="38"/></name></expr>;<pos:position pos:line="73" pos:column="39"/></expr_stmt>
                }<pos:position pos:line="74" pos:column="18"/></block></else></if>
            }<pos:position pos:line="75" pos:column="14"/></block></else></if>
        }<pos:position pos:line="76" pos:column="10"/></block></else></if>

        <comment type="block" pos:line="78" pos:column="9">/*
         * Clean up all the memory buffers created by the LSA and
         * Net* APIs.
         */</comment>
        <expr_stmt><expr><call><name pos:line="82" pos:column="9">NetApiBufferFree<pos:position pos:line="82" pos:column="25"/></name><argument_list pos:line="82" pos:column="25">(<argument><expr><name pos:line="82" pos:column="26">pwkiWorkstationInfo<pos:position pos:line="82" pos:column="45"/></name></expr></argument>)<pos:position pos:line="82" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">LsaFreeMemory<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><operator pos:line="83" pos:column="23">(<pos:position pos:line="83" pos:column="24"/></operator><name pos:line="83" pos:column="24">LPVOID<pos:position pos:line="83" pos:column="30"/></name><operator pos:line="83" pos:column="30">)<pos:position pos:line="83" pos:column="31"/></operator><name pos:line="83" pos:column="31">ppdiDomainInfo<pos:position pos:line="83" pos:column="45"/></name></expr></argument>)<pos:position pos:line="83" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="47"/></expr_stmt>
    }<pos:position pos:line="84" pos:column="6"/></block></then> <else pos:line="84" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="85" pos:column="9">debug<pos:position pos:line="85" pos:column="14"/></name><argument_list pos:line="85" pos:column="14">(<argument><expr><literal type="string" pos:line="85" pos:column="15">"NetWkstaGetInfo Error: %ld\n"<pos:position pos:line="85" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="47">netret<pos:position pos:line="85" pos:column="53"/></name></expr></argument>)<pos:position pos:line="85" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="55"/></expr_stmt></block></else></if>
    <return pos:line="86" pos:column="5">return <expr><name pos:line="86" pos:column="12">DomainName<pos:position pos:line="86" pos:column="22"/></name></expr>;<pos:position pos:line="86" pos:column="23"/></return>
}<pos:position pos:line="87" pos:column="2"/></block></function></unit>

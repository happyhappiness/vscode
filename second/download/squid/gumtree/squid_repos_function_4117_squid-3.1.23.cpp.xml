<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4117_squid-3.1.23.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name><name pos:line="1" pos:column="13">Ssl<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">ErrorDetail<pos:position pos:line="1" pos:column="29"/></name><operator pos:line="1" pos:column="29">::<pos:position pos:line="1" pos:column="31"/></operator><name pos:line="1" pos:column="31">cn<pos:position pos:line="1" pos:column="33"/></name></name><parameter_list pos:line="1" pos:column="33">()<pos:position pos:line="1" pos:column="35"/></parameter_list> <specifier pos:line="1" pos:column="36">const<pos:position pos:line="1" pos:column="41"/></specifier>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><operator pos:line="3" pos:column="9">!<pos:position pos:line="3" pos:column="10"/></operator><name pos:line="3" pos:column="10">peer_cert<pos:position pos:line="3" pos:column="19"/></name></expr>)<pos:position pos:line="3" pos:column="20"/></condition><then pos:line="3" pos:column="20">
        <block type="pseudo"><return pos:line="4" pos:column="9">return <expr><literal type="string" pos:line="4" pos:column="16">"[Not available]"<pos:position pos:line="4" pos:column="33"/></literal></expr>;<pos:position pos:line="4" pos:column="34"/></return></block></then></if>

    <decl_stmt><decl><specifier pos:line="6" pos:column="5">static<pos:position pos:line="6" pos:column="11"/></specifier> <type><name pos:line="6" pos:column="12">String<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">tmpStr<pos:position pos:line="6" pos:column="25"/></name></decl>;<pos:position pos:line="6" pos:column="26"/></decl_stmt>  <comment type="line" format="doxygen" pos:line="6" pos:column="28">///&lt; A temporary string buffer</comment>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">tmpStr<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">.<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">clean<pos:position pos:line="7" pos:column="17"/></name></name><argument_list pos:line="7" pos:column="17">()<pos:position pos:line="7" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">Ssl<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">::<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">matchX509CommonNames<pos:position pos:line="8" pos:column="30"/></name></name><argument_list pos:line="8" pos:column="30">(<argument><expr><call><name><name pos:line="8" pos:column="31">peer_cert<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">.<pos:position pos:line="8" pos:column="41"/></operator><name pos:line="8" pos:column="41">get<pos:position pos:line="8" pos:column="44"/></name></name><argument_list pos:line="8" pos:column="44">()<pos:position pos:line="8" pos:column="46"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="8" pos:column="48">&amp;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="49">tmpStr<pos:position pos:line="8" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="57">copy_cn<pos:position pos:line="8" pos:column="64"/></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="66"/></expr_stmt>
    <return pos:line="9" pos:column="5">return <expr><call><name><name pos:line="9" pos:column="12">tmpStr<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">.<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">termedBuf<pos:position pos:line="9" pos:column="28"/></name></name><argument_list pos:line="9" pos:column="28">()<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

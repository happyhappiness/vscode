<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5949_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Digest<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">UserRequest<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">startHelperLookup<pos:position pos:line="2" pos:column="45"/></name></name><parameter_list pos:line="2" pos:column="45">(<parameter><decl><type><name pos:line="2" pos:column="46">HttpRequest<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">request<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="68">AccessLogEntry<pos:position pos:line="2" pos:column="82"/></name><operator pos:line="2" pos:column="82">::<pos:position pos:line="2" pos:column="84"/></operator><name pos:line="2" pos:column="84">Pointer<pos:position pos:line="2" pos:column="91"/></name></name> <modifier pos:line="2" pos:column="92">&amp;<pos:position pos:line="2" pos:column="97"/></modifier></type><name pos:line="2" pos:column="93">al<pos:position pos:line="2" pos:column="95"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="97">AUTHCB<pos:position pos:line="2" pos:column="103"/></name> <modifier pos:line="2" pos:column="104">*<pos:position pos:line="2" pos:column="105"/></modifier></type> <name pos:line="2" pos:column="106">handler<pos:position pos:line="2" pos:column="113"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="115">void<pos:position pos:line="2" pos:column="119"/></name> <modifier pos:line="2" pos:column="120">*<pos:position pos:line="2" pos:column="121"/></modifier></type><name pos:line="2" pos:column="121">data<pos:position pos:line="2" pos:column="125"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="126"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name></type> <name><name pos:line="4" pos:column="10">buf<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><literal type="number" pos:line="4" pos:column="14">8192<pos:position pos:line="4" pos:column="18"/></literal></expr>]<pos:position pos:line="4" pos:column="19"/></index></name></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><call><name pos:line="6" pos:column="12">user<pos:position pos:line="6" pos:column="16"/></name><argument_list pos:line="6" pos:column="16">()<pos:position pos:line="6" pos:column="18"/></argument_list></call> <operator pos:line="6" pos:column="19">!=<pos:position pos:line="6" pos:column="21"/></operator> <name pos:line="6" pos:column="22">NULL<pos:position pos:line="6" pos:column="26"/></name> <operator pos:line="6" pos:column="27">&amp;&amp;<pos:position pos:line="6" pos:column="37"/></operator> <call><name pos:line="6" pos:column="30">user<pos:position pos:line="6" pos:column="34"/></name><argument_list pos:line="6" pos:column="34">()<pos:position pos:line="6" pos:column="36"/></argument_list></call><operator pos:line="6" pos:column="36">-&gt;<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="38">auth_type<pos:position pos:line="6" pos:column="47"/></name> <operator pos:line="6" pos:column="48">==<pos:position pos:line="6" pos:column="50"/></operator> <name><name pos:line="6" pos:column="51">Auth<pos:position pos:line="6" pos:column="55"/></name><operator pos:line="6" pos:column="55">::<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="57">AUTH_DIGEST<pos:position pos:line="6" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">29<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">9<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="19">HERE<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">&lt;&lt;<pos:position pos:line="7" pos:column="32"/></operator> <literal type="string" pos:line="7" pos:column="27">"'\""<pos:position pos:line="7" pos:column="32"/></literal> <operator pos:line="7" pos:column="33">&lt;&lt;<pos:position pos:line="7" pos:column="41"/></operator> <call><name pos:line="7" pos:column="36">user<pos:position pos:line="7" pos:column="40"/></name><argument_list pos:line="7" pos:column="40">()<pos:position pos:line="7" pos:column="42"/></argument_list></call><operator pos:line="7" pos:column="42">-&gt;<pos:position pos:line="7" pos:column="47"/></operator><call><name pos:line="7" pos:column="44">username<pos:position pos:line="7" pos:column="52"/></name><argument_list pos:line="7" pos:column="52">()<pos:position pos:line="7" pos:column="54"/></argument_list></call> <operator pos:line="7" pos:column="55">&lt;&lt;<pos:position pos:line="7" pos:column="63"/></operator> <literal type="string" pos:line="7" pos:column="58">"\":\""<pos:position pos:line="7" pos:column="65"/></literal> <operator pos:line="7" pos:column="66">&lt;&lt;<pos:position pos:line="7" pos:column="74"/></operator> <name pos:line="7" pos:column="69">realm<pos:position pos:line="7" pos:column="74"/></name> <operator pos:line="7" pos:column="75">&lt;&lt;<pos:position pos:line="7" pos:column="83"/></operator> <literal type="string" pos:line="7" pos:column="78">"\"'"<pos:position pos:line="7" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="85"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><cast type="static" pos:line="9" pos:column="9">static_cast<argument_list type="generic" pos:line="9" pos:column="20">&lt;<argument><expr><name><name pos:line="9" pos:column="21">Auth<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">::<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">Digest<pos:position pos:line="9" pos:column="33"/></name><operator pos:line="9" pos:column="33">::<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">Config<pos:position pos:line="9" pos:column="41"/></name></name><operator pos:line="9" pos:column="41">*<pos:position pos:line="9" pos:column="42"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="46"/></argument_list><argument_list pos:line="9" pos:column="43">(<argument><expr><call><name><name pos:line="9" pos:column="44">Auth<pos:position pos:line="9" pos:column="48"/></name><operator pos:line="9" pos:column="48">::<pos:position pos:line="9" pos:column="50"/></operator><name pos:line="9" pos:column="50">Config<pos:position pos:line="9" pos:column="56"/></name><operator pos:line="9" pos:column="56">::<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="58">Find<pos:position pos:line="9" pos:column="62"/></name></name><argument_list pos:line="9" pos:column="62">(<argument><expr><literal type="string" pos:line="9" pos:column="63">"digest"<pos:position pos:line="9" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></cast><operator pos:line="9" pos:column="73">-&gt;<pos:position pos:line="9" pos:column="78"/></operator><name pos:line="9" pos:column="75">authenticateProgram<pos:position pos:line="9" pos:column="94"/></name> <operator pos:line="9" pos:column="95">==<pos:position pos:line="9" pos:column="97"/></operator> <name pos:line="9" pos:column="98">NULL<pos:position pos:line="9" pos:column="102"/></name></expr>)<pos:position pos:line="9" pos:column="103"/></condition><then pos:line="9" pos:column="103"> <block pos:line="9" pos:column="104">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">29<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="20">DBG_CRITICAL<pos:position pos:line="10" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="34">"ERROR: No Digest authentication program configured."<pos:position pos:line="10" pos:column="87"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="88"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="89"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">handler<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">data<pos:position pos:line="11" pos:column="21"/></name></expr></argument>)<pos:position pos:line="11" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="23"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="15" pos:column="5">const<pos:position pos:line="15" pos:column="10"/></specifier> <name pos:line="15" pos:column="11">char<pos:position pos:line="15" pos:column="15"/></name> <modifier pos:line="15" pos:column="16">*<pos:position pos:line="15" pos:column="17"/></modifier></type><name pos:line="15" pos:column="17">keyExtras<pos:position pos:line="15" pos:column="26"/></name> <init pos:line="15" pos:column="27">= <expr><call><name pos:line="15" pos:column="29">helperRequestKeyExtras<pos:position pos:line="15" pos:column="51"/></name><argument_list pos:line="15" pos:column="51">(<argument><expr><name pos:line="15" pos:column="52">request<pos:position pos:line="15" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="61">al<pos:position pos:line="15" pos:column="63"/></name></expr></argument>)<pos:position pos:line="15" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="65"/></decl_stmt>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><cast type="static" pos:line="16" pos:column="9">static_cast<argument_list type="generic" pos:line="16" pos:column="20">&lt;<argument><expr><name><name pos:line="16" pos:column="21">Auth<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">::<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="27">Digest<pos:position pos:line="16" pos:column="33"/></name><operator pos:line="16" pos:column="33">::<pos:position pos:line="16" pos:column="35"/></operator><name pos:line="16" pos:column="35">Config<pos:position pos:line="16" pos:column="41"/></name></name><operator pos:line="16" pos:column="41">*<pos:position pos:line="16" pos:column="42"/></operator></expr></argument>&gt;<pos:position pos:line="16" pos:column="46"/></argument_list><argument_list pos:line="16" pos:column="43">(<argument><expr><call><name><name pos:line="16" pos:column="44">Auth<pos:position pos:line="16" pos:column="48"/></name><operator pos:line="16" pos:column="48">::<pos:position pos:line="16" pos:column="50"/></operator><name pos:line="16" pos:column="50">Config<pos:position pos:line="16" pos:column="56"/></name><operator pos:line="16" pos:column="56">::<pos:position pos:line="16" pos:column="58"/></operator><name pos:line="16" pos:column="58">Find<pos:position pos:line="16" pos:column="62"/></name></name><argument_list pos:line="16" pos:column="62">(<argument><expr><literal type="string" pos:line="16" pos:column="63">"digest"<pos:position pos:line="16" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></cast><operator pos:line="16" pos:column="73">-&gt;<pos:position pos:line="16" pos:column="78"/></operator><name pos:line="16" pos:column="75">utf8<pos:position pos:line="16" pos:column="79"/></name></expr>)<pos:position pos:line="16" pos:column="80"/></condition><then pos:line="16" pos:column="80"> <block pos:line="16" pos:column="81">{
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">char<pos:position pos:line="17" pos:column="13"/></name></type> <name><name pos:line="17" pos:column="14">userstr<pos:position pos:line="17" pos:column="21"/></name><index pos:line="17" pos:column="21">[<expr><literal type="number" pos:line="17" pos:column="22">1024<pos:position pos:line="17" pos:column="26"/></literal></expr>]<pos:position pos:line="17" pos:column="27"/></index></name></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">latin1_to_utf8<pos:position pos:line="18" pos:column="23"/></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">userstr<pos:position pos:line="18" pos:column="31"/></name></expr></argument>, <argument><expr><sizeof pos:line="18" pos:column="33">sizeof<argument_list pos:line="18" pos:column="39">(<argument><expr><name pos:line="18" pos:column="40">userstr<pos:position pos:line="18" pos:column="47"/></name></expr></argument>)<pos:position pos:line="18" pos:column="48"/></argument_list></sizeof></expr></argument>, <argument><expr><call><name pos:line="18" pos:column="50">user<pos:position pos:line="18" pos:column="54"/></name><argument_list pos:line="18" pos:column="54">()<pos:position pos:line="18" pos:column="56"/></argument_list></call><operator pos:line="18" pos:column="56">-&gt;<pos:position pos:line="18" pos:column="61"/></operator><call><name pos:line="18" pos:column="58">username<pos:position pos:line="18" pos:column="66"/></name><argument_list pos:line="18" pos:column="66">()<pos:position pos:line="18" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="70"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><name pos:line="19" pos:column="13">keyExtras<pos:position pos:line="19" pos:column="22"/></name></expr>)<pos:position pos:line="19" pos:column="23"/></condition><then pos:line="19" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="20" pos:column="13">snprintf<pos:position pos:line="20" pos:column="21"/></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">buf<pos:position pos:line="20" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="27">8192<pos:position pos:line="20" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="33">"\"%s\":\"%s\" %s\n"<pos:position pos:line="20" pos:column="53"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="55">userstr<pos:position pos:line="20" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="64">realm<pos:position pos:line="20" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="71">keyExtras<pos:position pos:line="20" pos:column="80"/></name></expr></argument>)<pos:position pos:line="20" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="82"/></expr_stmt></block></then>
        <else pos:line="21" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="22" pos:column="13">snprintf<pos:position pos:line="22" pos:column="21"/></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">buf<pos:position pos:line="22" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="27">8192<pos:position pos:line="22" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="33">"\"%s\":\"%s\"\n"<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="52">userstr<pos:position pos:line="22" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="61">realm<pos:position pos:line="22" pos:column="66"/></name></expr></argument>)<pos:position pos:line="22" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="68"/></expr_stmt></block></else></if>
    }<pos:position pos:line="23" pos:column="6"/></block></then> <else pos:line="23" pos:column="7">else <block pos:line="23" pos:column="12">{
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name pos:line="24" pos:column="13">keyExtras<pos:position pos:line="24" pos:column="22"/></name></expr>)<pos:position pos:line="24" pos:column="23"/></condition><then pos:line="24" pos:column="23">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="25" pos:column="13">snprintf<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">(<argument><expr><name pos:line="25" pos:column="22">buf<pos:position pos:line="25" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="27">8192<pos:position pos:line="25" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">"\"%s\":\"%s\" %s\n"<pos:position pos:line="25" pos:column="53"/></literal></expr></argument>, <argument><expr><call><name pos:line="25" pos:column="55">user<pos:position pos:line="25" pos:column="59"/></name><argument_list pos:line="25" pos:column="59">()<pos:position pos:line="25" pos:column="61"/></argument_list></call><operator pos:line="25" pos:column="61">-&gt;<pos:position pos:line="25" pos:column="66"/></operator><call><name pos:line="25" pos:column="63">username<pos:position pos:line="25" pos:column="71"/></name><argument_list pos:line="25" pos:column="71">()<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="25" pos:column="75">realm<pos:position pos:line="25" pos:column="80"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="82">keyExtras<pos:position pos:line="25" pos:column="91"/></name></expr></argument>)<pos:position pos:line="25" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="93"/></expr_stmt></block></then>
        <else pos:line="26" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="27" pos:column="13">snprintf<pos:position pos:line="27" pos:column="21"/></name><argument_list pos:line="27" pos:column="21">(<argument><expr><name pos:line="27" pos:column="22">buf<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="27">8192<pos:position pos:line="27" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="33">"\"%s\":\"%s\"\n"<pos:position pos:line="27" pos:column="50"/></literal></expr></argument>, <argument><expr><call><name pos:line="27" pos:column="52">user<pos:position pos:line="27" pos:column="56"/></name><argument_list pos:line="27" pos:column="56">()<pos:position pos:line="27" pos:column="58"/></argument_list></call><operator pos:line="27" pos:column="58">-&gt;<pos:position pos:line="27" pos:column="63"/></operator><call><name pos:line="27" pos:column="60">username<pos:position pos:line="27" pos:column="68"/></name><argument_list pos:line="27" pos:column="68">()<pos:position pos:line="27" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="27" pos:column="72">realm<pos:position pos:line="27" pos:column="77"/></name></expr></argument>)<pos:position pos:line="27" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="79"/></expr_stmt></block></else></if>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">helperSubmit<pos:position pos:line="30" pos:column="17"/></name><argument_list pos:line="30" pos:column="17">(<argument><expr><name pos:line="30" pos:column="18">digestauthenticators<pos:position pos:line="30" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="40">buf<pos:position pos:line="30" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="30" pos:column="45">Auth<pos:position pos:line="30" pos:column="49"/></name><operator pos:line="30" pos:column="49">::<pos:position pos:line="30" pos:column="51"/></operator><name pos:line="30" pos:column="51">Digest<pos:position pos:line="30" pos:column="57"/></name><operator pos:line="30" pos:column="57">::<pos:position pos:line="30" pos:column="59"/></operator><name pos:line="30" pos:column="59">UserRequest<pos:position pos:line="30" pos:column="70"/></name><operator pos:line="30" pos:column="70">::<pos:position pos:line="30" pos:column="72"/></operator><name pos:line="30" pos:column="72">HandleReply<pos:position pos:line="30" pos:column="83"/></name></name></expr></argument>,
                 <argument><expr><operator pos:line="31" pos:column="18">new<pos:position pos:line="31" pos:column="21"/></operator> <call><name><name pos:line="31" pos:column="22">Auth<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">::<pos:position pos:line="31" pos:column="28"/></operator><name pos:line="31" pos:column="28">StateData<pos:position pos:line="31" pos:column="37"/></name></name><argument_list pos:line="31" pos:column="37">(<argument><expr><name pos:line="31" pos:column="38">this<pos:position pos:line="31" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="44">handler<pos:position pos:line="31" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="53">data<pos:position pos:line="31" pos:column="57"/></name></expr></argument>)<pos:position pos:line="31" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="60"/></expr_stmt>
}<pos:position pos:line="32" pos:column="2"/></block></function></unit>

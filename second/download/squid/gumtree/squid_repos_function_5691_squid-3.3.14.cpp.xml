<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5691_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">diskerWrite<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">IpcIoMsg<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">&amp;<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="23">ipcIo<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier><specifier pos:line="4" pos:column="17">const<pos:position pos:line="4" pos:column="22"/></specifier></type> <name pos:line="4" pos:column="23">buf<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><call><name><name pos:line="4" pos:column="29">Ipc<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">::<pos:position pos:line="4" pos:column="34"/></operator><name pos:line="4" pos:column="34">Mem<pos:position pos:line="4" pos:column="37"/></name><operator pos:line="4" pos:column="37">::<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">PagePointer<pos:position pos:line="4" pos:column="50"/></name></name><argument_list pos:line="4" pos:column="50">(<argument><expr><name><name pos:line="4" pos:column="51">ipcIo<pos:position pos:line="4" pos:column="56"/></name><operator pos:line="4" pos:column="56">.<pos:position pos:line="4" pos:column="57"/></operator><name pos:line="4" pos:column="57">page<pos:position pos:line="4" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">ssize_t<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">wrote<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><call><name pos:line="5" pos:column="27">pwrite<pos:position pos:line="5" pos:column="33"/></name><argument_list pos:line="5" pos:column="33">(<argument><expr><name pos:line="5" pos:column="34">TheFile<pos:position pos:line="5" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="43">buf<pos:position pos:line="5" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="5" pos:column="48">min<pos:position pos:line="5" pos:column="51"/></name><argument_list pos:line="5" pos:column="51">(<argument><expr><name><name pos:line="5" pos:column="52">ipcIo<pos:position pos:line="5" pos:column="57"/></name><operator pos:line="5" pos:column="57">.<pos:position pos:line="5" pos:column="58"/></operator><name pos:line="5" pos:column="58">len<pos:position pos:line="5" pos:column="61"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="5" pos:column="63">Ipc<pos:position pos:line="5" pos:column="66"/></name><operator pos:line="5" pos:column="66">::<pos:position pos:line="5" pos:column="68"/></operator><name pos:line="5" pos:column="68">Mem<pos:position pos:line="5" pos:column="71"/></name><operator pos:line="5" pos:column="71">::<pos:position pos:line="5" pos:column="73"/></operator><name pos:line="5" pos:column="73">PageSize<pos:position pos:line="5" pos:column="81"/></name></name><argument_list pos:line="5" pos:column="81">()<pos:position pos:line="5" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="86">ipcIo<pos:position pos:line="5" pos:column="91"/></name><operator pos:line="5" pos:column="91">.<pos:position pos:line="5" pos:column="92"/></operator><name pos:line="5" pos:column="92">offset<pos:position pos:line="5" pos:column="98"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="99"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="100"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="6" pos:column="5">++<pos:position pos:line="6" pos:column="7"/></operator><name><name pos:line="6" pos:column="7">statCounter<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">.<pos:position pos:line="6" pos:column="19"/></operator><name pos:line="6" pos:column="19">syscalls<pos:position pos:line="6" pos:column="27"/></name><operator pos:line="6" pos:column="27">.<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="28">disk<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">.<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">writes<pos:position pos:line="6" pos:column="39"/></name></name></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">fd_bytes<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">TheFile<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">wrote<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">FD_WRITE<pos:position pos:line="7" pos:column="38"/></name></expr></argument>)<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="40"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">wrote<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">&gt;=<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>)<pos:position pos:line="9" pos:column="20"/></condition><then pos:line="9" pos:column="20"> <block pos:line="9" pos:column="21">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">ipcIo<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">xerrno<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">=<pos:position pos:line="10" pos:column="23"/></operator> <literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>;<pos:position pos:line="10" pos:column="26"/></expr_stmt>
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">size_t<pos:position pos:line="11" pos:column="21"/></name></type> <name pos:line="11" pos:column="22">len<pos:position pos:line="11" pos:column="25"/></name> <init pos:line="11" pos:column="26">= <expr><cast type="static" pos:line="11" pos:column="28">static_cast<argument_list type="generic" pos:line="11" pos:column="39">&lt;<argument><expr><name pos:line="11" pos:column="40">size_t<pos:position pos:line="11" pos:column="46"/></name></expr></argument>&gt;<pos:position pos:line="11" pos:column="50"/></argument_list><argument_list pos:line="11" pos:column="47">(<argument><expr><name pos:line="11" pos:column="48">wrote<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="11" pos:column="55"/></decl_stmt> <comment type="line" pos:line="11" pos:column="56">// safe because wrote &gt; 0</comment>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">47<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="12" pos:column="19">8<pos:position pos:line="12" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="12" pos:column="22">HERE<pos:position pos:line="12" pos:column="26"/></name> <operator pos:line="12" pos:column="27">&lt;&lt;<pos:position pos:line="12" pos:column="35"/></operator> <literal type="string" pos:line="12" pos:column="30">"disker"<pos:position pos:line="12" pos:column="38"/></literal> <operator pos:line="12" pos:column="39">&lt;&lt;<pos:position pos:line="12" pos:column="47"/></operator> <name pos:line="12" pos:column="42">KidIdentifier<pos:position pos:line="12" pos:column="55"/></name> <operator pos:line="12" pos:column="56">&lt;&lt;<pos:position pos:line="12" pos:column="64"/></operator> <literal type="string" pos:line="12" pos:column="59">" wrote "<pos:position pos:line="12" pos:column="68"/></literal> <operator pos:line="12" pos:column="69">&lt;&lt;<pos:position pos:line="12" pos:column="77"/></operator>
               <operator pos:line="13" pos:column="16">(<pos:position pos:line="13" pos:column="17"/></operator><ternary><condition><expr><name pos:line="13" pos:column="17">len<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">==<pos:position pos:line="13" pos:column="23"/></operator> <name><name pos:line="13" pos:column="24">ipcIo<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">.<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="30">len<pos:position pos:line="13" pos:column="33"/></name></name></expr> ?<pos:position pos:line="13" pos:column="35"/></condition><then pos:line="13" pos:column="35"> <expr><literal type="string" pos:line="13" pos:column="36">"all "<pos:position pos:line="13" pos:column="42"/></literal></expr> <pos:position pos:line="13" pos:column="43"/></then><else pos:line="13" pos:column="43">: <expr><literal type="string" pos:line="13" pos:column="45">"just "<pos:position pos:line="13" pos:column="52"/></literal></expr></else></ternary><operator pos:line="13" pos:column="52">)<pos:position pos:line="13" pos:column="53"/></operator> <operator pos:line="13" pos:column="54">&lt;&lt;<pos:position pos:line="13" pos:column="62"/></operator> <name pos:line="13" pos:column="57">wrote<pos:position pos:line="13" pos:column="62"/></name></expr></argument>)<pos:position pos:line="13" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">ipcIo<pos:position pos:line="14" pos:column="14"/></name><operator pos:line="14" pos:column="14">.<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="15">len<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">=<pos:position pos:line="14" pos:column="20"/></operator> <name pos:line="14" pos:column="21">len<pos:position pos:line="14" pos:column="24"/></name></expr>;<pos:position pos:line="14" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <else pos:line="15" pos:column="7">else <block pos:line="15" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">ipcIo<pos:position pos:line="16" pos:column="14"/></name><operator pos:line="16" pos:column="14">.<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="15">xerrno<pos:position pos:line="16" pos:column="21"/></name></name> <operator pos:line="16" pos:column="22">=<pos:position pos:line="16" pos:column="23"/></operator> <name pos:line="16" pos:column="24">errno<pos:position pos:line="16" pos:column="29"/></name></expr>;<pos:position pos:line="16" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">ipcIo<pos:position pos:line="17" pos:column="14"/></name><operator pos:line="17" pos:column="14">.<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="15">len<pos:position pos:line="17" pos:column="18"/></name></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <literal type="number" pos:line="17" pos:column="21">0<pos:position pos:line="17" pos:column="22"/></literal></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">47<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="18" pos:column="19">5<pos:position pos:line="18" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="22">HERE<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">&lt;&lt;<pos:position pos:line="18" pos:column="35"/></operator> <literal type="string" pos:line="18" pos:column="30">"disker"<pos:position pos:line="18" pos:column="38"/></literal> <operator pos:line="18" pos:column="39">&lt;&lt;<pos:position pos:line="18" pos:column="47"/></operator> <name pos:line="18" pos:column="42">KidIdentifier<pos:position pos:line="18" pos:column="55"/></name> <operator pos:line="18" pos:column="56">&lt;&lt;<pos:position pos:line="18" pos:column="64"/></operator> <literal type="string" pos:line="18" pos:column="59">" write error: "<pos:position pos:line="18" pos:column="75"/></literal> <operator pos:line="18" pos:column="76">&lt;&lt;<pos:position pos:line="18" pos:column="84"/></operator>
               <name><name pos:line="19" pos:column="16">ipcIo<pos:position pos:line="19" pos:column="21"/></name><operator pos:line="19" pos:column="21">.<pos:position pos:line="19" pos:column="22"/></operator><name pos:line="19" pos:column="22">xerrno<pos:position pos:line="19" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">Ipc<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">::<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">Mem<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">::<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">PutPage<pos:position pos:line="22" pos:column="22"/></name></name><argument_list pos:line="22" pos:column="22">(<argument><expr><name><name pos:line="22" pos:column="23">ipcIo<pos:position pos:line="22" pos:column="28"/></name><operator pos:line="22" pos:column="28">.<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">page<pos:position pos:line="22" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="35"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1437.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">httpBuildRequestHeader<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">(<parameter><decl><type><name pos:line="2" pos:column="39">HttpRequest<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">request<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="3" pos:column="39">StoreEntry<pos:position pos:line="3" pos:column="49"/></name> <modifier pos:line="3" pos:column="50">*<pos:position pos:line="3" pos:column="51"/></modifier></type> <name pos:line="3" pos:column="52">entry<pos:position pos:line="3" pos:column="57"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="4" pos:column="39">const<pos:position pos:line="4" pos:column="44"/></specifier> <name pos:line="4" pos:column="45">AccessLogEntryPointer<pos:position pos:line="4" pos:column="66"/></name> <modifier pos:line="4" pos:column="67">&amp;<pos:position pos:line="4" pos:column="72"/></modifier></type><name pos:line="4" pos:column="68">al<pos:position pos:line="4" pos:column="70"/></name></decl></parameter>,
                                      <parameter><decl><type><name pos:line="5" pos:column="39">HttpHeader<pos:position pos:line="5" pos:column="49"/></name> <modifier pos:line="5" pos:column="50">*<pos:position pos:line="5" pos:column="51"/></modifier></type> <name pos:line="5" pos:column="52">hdr_out<pos:position pos:line="5" pos:column="59"/></name></decl></parameter>,
                                      <parameter><decl><type><specifier pos:line="6" pos:column="39">const<pos:position pos:line="6" pos:column="44"/></specifier> <name pos:line="6" pos:column="45">HttpStateFlags<pos:position pos:line="6" pos:column="59"/></name> <modifier pos:line="6" pos:column="60">&amp;<pos:position pos:line="6" pos:column="65"/></modifier></type><name pos:line="6" pos:column="61">flags<pos:position pos:line="6" pos:column="66"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="67"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <comment type="block" pos:line="8" pos:column="5">/* building buffer for complex strings */</comment>
<cpp:define pos:line="9" pos:column="1">#<cpp:directive pos:line="9" pos:column="2">define<pos:position pos:line="9" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="9" pos:column="9">BBUF_SZ<pos:position pos:line="9" pos:column="16"/></name></cpp:macro> <cpp:value pos:line="9" pos:column="17">(MAX_URL+32)<pos:position pos:line="9" pos:column="29"/></cpp:value></cpp:define>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">LOCAL_ARRAY<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">(<argument><expr><name pos:line="10" pos:column="17">char<pos:position pos:line="10" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="23">bbuf<pos:position pos:line="10" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="29">BBUF_SZ<pos:position pos:line="10" pos:column="36"/></name></expr></argument>)<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="11" pos:column="5">LOCAL_ARRAY<pos:position pos:line="11" pos:column="16"/></name><argument_list pos:line="11" pos:column="16">(<argument><expr><name pos:line="11" pos:column="17">char<pos:position pos:line="11" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="23">ntoabuf<pos:position pos:line="11" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="32">MAX_IPSTRLEN<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="46"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">HttpHeader<pos:position pos:line="12" pos:column="21"/></name> <modifier pos:line="12" pos:column="22">*<pos:position pos:line="12" pos:column="23"/></modifier></type><name pos:line="12" pos:column="23">hdr_in<pos:position pos:line="12" pos:column="29"/></name> <init pos:line="12" pos:column="30">= <expr><operator pos:line="12" pos:column="32">&amp;<pos:position pos:line="12" pos:column="37"/></operator><name><name pos:line="12" pos:column="33">request<pos:position pos:line="12" pos:column="40"/></name><operator pos:line="12" pos:column="40">-&gt;<pos:position pos:line="12" pos:column="45"/></operator><name pos:line="12" pos:column="42">header<pos:position pos:line="12" pos:column="48"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="49"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="13" pos:column="5">const<pos:position pos:line="13" pos:column="10"/></specifier> <name pos:line="13" pos:column="11">HttpHeaderEntry<pos:position pos:line="13" pos:column="26"/></name> <modifier pos:line="13" pos:column="27">*<pos:position pos:line="13" pos:column="28"/></modifier></type><name pos:line="13" pos:column="28">e<pos:position pos:line="13" pos:column="29"/></name> <init pos:line="13" pos:column="30">= <expr><name pos:line="13" pos:column="32">NULL<pos:position pos:line="13" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">HttpHeaderPos<pos:position pos:line="14" pos:column="18"/></name></type> <name pos:line="14" pos:column="19">pos<pos:position pos:line="14" pos:column="22"/></name> <init pos:line="14" pos:column="23">= <expr><name pos:line="14" pos:column="25">HttpHeaderInitPos<pos:position pos:line="14" pos:column="42"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="43"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">assert<pos:position pos:line="15" pos:column="11"/></name> <argument_list pos:line="15" pos:column="12">(<argument><expr><name><name pos:line="15" pos:column="13">hdr_out<pos:position pos:line="15" pos:column="20"/></name><operator pos:line="15" pos:column="20">-&gt;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="22">owner<pos:position pos:line="15" pos:column="27"/></name></name> <operator pos:line="15" pos:column="28">==<pos:position pos:line="15" pos:column="30"/></operator> <name pos:line="15" pos:column="31">hoRequest<pos:position pos:line="15" pos:column="40"/></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/* use our IMS header if the cached entry has Last-Modified time */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">request<pos:position pos:line="18" pos:column="16"/></name><operator pos:line="18" pos:column="16">-&gt;<pos:position pos:line="18" pos:column="21"/></operator><name pos:line="18" pos:column="18">lastmod<pos:position pos:line="18" pos:column="25"/></name></name> <operator pos:line="18" pos:column="26">&gt;<pos:position pos:line="18" pos:column="30"/></operator> <operator pos:line="18" pos:column="28">-<pos:position pos:line="18" pos:column="29"/></operator><literal type="number" pos:line="18" pos:column="29">1<pos:position pos:line="18" pos:column="30"/></literal></expr>)<pos:position pos:line="18" pos:column="31"/></condition><then pos:line="18" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="19" pos:column="9">hdr_out<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">-&gt;<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="18">putTime<pos:position pos:line="19" pos:column="25"/></name></name><argument_list pos:line="19" pos:column="25">(<argument><expr><name pos:line="19" pos:column="26">HDR_IF_MODIFIED_SINCE<pos:position pos:line="19" pos:column="47"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="49">request<pos:position pos:line="19" pos:column="56"/></name><operator pos:line="19" pos:column="56">-&gt;<pos:position pos:line="19" pos:column="61"/></operator><name pos:line="19" pos:column="58">lastmod<pos:position pos:line="19" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="67"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="21" pos:column="5">// Add our own If-None-Match field if the cached entry has a strong ETag.</comment>
    <comment type="line" pos:line="22" pos:column="5">// copyOneHeaderFromClientsideRequestToUpstreamRequest() adds client ones.</comment>
    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><call><name><name pos:line="23" pos:column="9">request<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">-&gt;<pos:position pos:line="23" pos:column="21"/></operator><name pos:line="23" pos:column="18">etag<pos:position pos:line="23" pos:column="22"/></name><operator pos:line="23" pos:column="22">.<pos:position pos:line="23" pos:column="23"/></operator><name pos:line="23" pos:column="23">size<pos:position pos:line="23" pos:column="27"/></name></name><argument_list pos:line="23" pos:column="27">()<pos:position pos:line="23" pos:column="29"/></argument_list></call> <operator pos:line="23" pos:column="30">&gt;<pos:position pos:line="23" pos:column="34"/></operator> <literal type="number" pos:line="23" pos:column="32">0<pos:position pos:line="23" pos:column="33"/></literal></expr>)<pos:position pos:line="23" pos:column="34"/></condition><then pos:line="23" pos:column="34"> <block pos:line="23" pos:column="35">{
        <expr_stmt><expr><call><name><name pos:line="24" pos:column="9">hdr_out<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">addEntry<pos:position pos:line="24" pos:column="26"/></name></name><argument_list pos:line="24" pos:column="26">(<argument><expr><operator pos:line="24" pos:column="27">new<pos:position pos:line="24" pos:column="30"/></operator> <call><name pos:line="24" pos:column="31">HttpHeaderEntry<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><name pos:line="24" pos:column="47">HDR_IF_NONE_MATCH<pos:position pos:line="24" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="66">NULL<pos:position pos:line="24" pos:column="70"/></name></expr></argument>,
                                              <argument><expr><call><name><name pos:line="25" pos:column="47">request<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">-&gt;<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="56">etag<pos:position pos:line="25" pos:column="60"/></name><operator pos:line="25" pos:column="60">.<pos:position pos:line="25" pos:column="61"/></operator><name pos:line="25" pos:column="61">termedBuf<pos:position pos:line="25" pos:column="70"/></name></name><argument_list pos:line="25" pos:column="70">()<pos:position pos:line="25" pos:column="72"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="75"/></expr_stmt>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="28" pos:column="5">bool<pos:position pos:line="28" pos:column="9"/></name></type> <name pos:line="28" pos:column="10">we_do_ranges<pos:position pos:line="28" pos:column="22"/></name> <init pos:line="28" pos:column="23">= <expr><call><name pos:line="28" pos:column="25">decideIfWeDoRanges<pos:position pos:line="28" pos:column="43"/></name> <argument_list pos:line="28" pos:column="44">(<argument><expr><name pos:line="28" pos:column="45">request<pos:position pos:line="28" pos:column="52"/></name></expr></argument>)<pos:position pos:line="28" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="54"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="30" pos:column="5">String<pos:position pos:line="30" pos:column="11"/></name></type> <name pos:line="30" pos:column="12">strConnection<pos:position pos:line="30" pos:column="25"/></name> <argument_list pos:line="30" pos:column="26">(<argument><expr><call><name><name pos:line="30" pos:column="27">hdr_in<pos:position pos:line="30" pos:column="33"/></name><operator pos:line="30" pos:column="33">-&gt;<pos:position pos:line="30" pos:column="38"/></operator><name pos:line="30" pos:column="35">getList<pos:position pos:line="30" pos:column="42"/></name></name><argument_list pos:line="30" pos:column="42">(<argument><expr><name pos:line="30" pos:column="43">HDR_CONNECTION<pos:position pos:line="30" pos:column="57"/></name></expr></argument>)<pos:position pos:line="30" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="59"/></argument_list></decl>;<pos:position pos:line="30" pos:column="60"/></decl_stmt>

    <while pos:line="32" pos:column="5">while <condition pos:line="32" pos:column="11">(<expr><operator pos:line="32" pos:column="12">(<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="13">e<pos:position pos:line="32" pos:column="14"/></name> <operator pos:line="32" pos:column="15">=<pos:position pos:line="32" pos:column="16"/></operator> <call><name><name pos:line="32" pos:column="17">hdr_in<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">-&gt;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="25">getEntry<pos:position pos:line="32" pos:column="33"/></name></name><argument_list pos:line="32" pos:column="33">(<argument><expr><operator pos:line="32" pos:column="34">&amp;<pos:position pos:line="32" pos:column="39"/></operator><name pos:line="32" pos:column="35">pos<pos:position pos:line="32" pos:column="38"/></name></expr></argument>)<pos:position pos:line="32" pos:column="39"/></argument_list></call><operator pos:line="32" pos:column="39">)<pos:position pos:line="32" pos:column="40"/></operator></expr>)<pos:position pos:line="32" pos:column="41"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="33" pos:column="9">copyOneHeaderFromClientsideRequestToUpstreamRequest<pos:position pos:line="33" pos:column="60"/></name><argument_list pos:line="33" pos:column="60">(<argument><expr><name pos:line="33" pos:column="61">e<pos:position pos:line="33" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="64">strConnection<pos:position pos:line="33" pos:column="77"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="79">request<pos:position pos:line="33" pos:column="86"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="88">hdr_out<pos:position pos:line="33" pos:column="95"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="97">we_do_ranges<pos:position pos:line="33" pos:column="109"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="111">flags<pos:position pos:line="33" pos:column="116"/></name></expr></argument>)<pos:position pos:line="33" pos:column="117"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="118"/></expr_stmt></block></while>

    <comment type="block" pos:line="35" pos:column="5">/* Abstraction break: We should interpret multipart/byterange responses
     * into offset-length data, and this works around our inability to do so.
     */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">we_do_ranges<pos:position pos:line="38" pos:column="22"/></name> <operator pos:line="38" pos:column="23">&amp;&amp;<pos:position pos:line="38" pos:column="33"/></operator> <call><name><name pos:line="38" pos:column="26">request<pos:position pos:line="38" pos:column="33"/></name><operator pos:line="38" pos:column="33">-&gt;<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="35">multipartRangeRequest<pos:position pos:line="38" pos:column="56"/></name></name><argument_list pos:line="38" pos:column="56">()<pos:position pos:line="38" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="59"/></condition><then pos:line="38" pos:column="59"> <block pos:line="38" pos:column="60">{
        <comment type="block" pos:line="39" pos:column="9">/* don't cache the result */</comment>
        <expr_stmt><expr><name><name pos:line="40" pos:column="9">request<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">flags<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">.<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">cachable<pos:position pos:line="40" pos:column="32"/></name></name> <operator pos:line="40" pos:column="33">=<pos:position pos:line="40" pos:column="34"/></operator> <literal type="boolean" pos:line="40" pos:column="35">false<pos:position pos:line="40" pos:column="40"/></literal></expr>;<pos:position pos:line="40" pos:column="41"/></expr_stmt>
        <comment type="block" pos:line="41" pos:column="9">/* pretend it's not a range request */</comment>
        <expr_stmt><expr><call><name><name pos:line="42" pos:column="9">request<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">ignoreRange<pos:position pos:line="42" pos:column="29"/></name></name><argument_list pos:line="42" pos:column="29">(<argument><expr><literal type="string" pos:line="42" pos:column="30">"want to request the whole object"<pos:position pos:line="42" pos:column="64"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="66"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="43" pos:column="9">request<pos:position pos:line="43" pos:column="16"/></name><operator pos:line="43" pos:column="16">-&gt;<pos:position pos:line="43" pos:column="21"/></operator><name pos:line="43" pos:column="18">flags<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">.<pos:position pos:line="43" pos:column="24"/></operator><name pos:line="43" pos:column="24">isRanged<pos:position pos:line="43" pos:column="32"/></name></name> <operator pos:line="43" pos:column="33">=<pos:position pos:line="43" pos:column="34"/></operator> <literal type="boolean" pos:line="43" pos:column="35">false<pos:position pos:line="43" pos:column="40"/></literal></expr>;<pos:position pos:line="43" pos:column="41"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="46" pos:column="5">/* append Via */</comment>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name><name pos:line="47" pos:column="9">Config<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">.<pos:position pos:line="47" pos:column="16"/></operator><name pos:line="47" pos:column="16">onoff<pos:position pos:line="47" pos:column="21"/></name><operator pos:line="47" pos:column="21">.<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="22">via<pos:position pos:line="47" pos:column="25"/></name></name></expr>)<pos:position pos:line="47" pos:column="26"/></condition><then pos:line="47" pos:column="26"> <block pos:line="47" pos:column="27">{
        <decl_stmt><decl><type><name pos:line="48" pos:column="9">String<pos:position pos:line="48" pos:column="15"/></name></type> <name pos:line="48" pos:column="16">strVia<pos:position pos:line="48" pos:column="22"/></name></decl>;<pos:position pos:line="48" pos:column="23"/></decl_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">strVia<pos:position pos:line="49" pos:column="15"/></name> <operator pos:line="49" pos:column="16">=<pos:position pos:line="49" pos:column="17"/></operator> <call><name><name pos:line="49" pos:column="18">hdr_in<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">getList<pos:position pos:line="49" pos:column="33"/></name></name><argument_list pos:line="49" pos:column="33">(<argument><expr><name pos:line="49" pos:column="34">HDR_VIA<pos:position pos:line="49" pos:column="41"/></name></expr></argument>)<pos:position pos:line="49" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="50" pos:column="9">snprintf<pos:position pos:line="50" pos:column="17"/></name><argument_list pos:line="50" pos:column="17">(<argument><expr><name pos:line="50" pos:column="18">bbuf<pos:position pos:line="50" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="24">BBUF_SZ<pos:position pos:line="50" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="33">"%d.%d %s"<pos:position pos:line="50" pos:column="43"/></literal></expr></argument>,
                 <argument><expr><name><name pos:line="51" pos:column="18">request<pos:position pos:line="51" pos:column="25"/></name><operator pos:line="51" pos:column="25">-&gt;<pos:position pos:line="51" pos:column="30"/></operator><name pos:line="51" pos:column="27">http_ver<pos:position pos:line="51" pos:column="35"/></name><operator pos:line="51" pos:column="35">.<pos:position pos:line="51" pos:column="36"/></operator><name pos:line="51" pos:column="36">major<pos:position pos:line="51" pos:column="41"/></name></name></expr></argument>,
                 <argument><expr><name><name pos:line="52" pos:column="18">request<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">http_ver<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">.<pos:position pos:line="52" pos:column="36"/></operator><name pos:line="52" pos:column="36">minor<pos:position pos:line="52" pos:column="41"/></name></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="43">ThisCache<pos:position pos:line="52" pos:column="52"/></name></expr></argument>)<pos:position pos:line="52" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">strListAdd<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><operator pos:line="53" pos:column="20">&amp;<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="21">strVia<pos:position pos:line="53" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="29">bbuf<pos:position pos:line="53" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="53" pos:column="35">','<pos:position pos:line="53" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="53" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="54" pos:column="9">hdr_out<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">-&gt;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="18">putStr<pos:position pos:line="54" pos:column="24"/></name></name><argument_list pos:line="54" pos:column="24">(<argument><expr><name pos:line="54" pos:column="25">HDR_VIA<pos:position pos:line="54" pos:column="32"/></name></expr></argument>, <argument><expr><call><name><name pos:line="54" pos:column="34">strVia<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">.<pos:position pos:line="54" pos:column="41"/></operator><name pos:line="54" pos:column="41">termedBuf<pos:position pos:line="54" pos:column="50"/></name></name><argument_list pos:line="54" pos:column="50">()<pos:position pos:line="54" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="54" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="55" pos:column="9">strVia<pos:position pos:line="55" pos:column="15"/></name><operator pos:line="55" pos:column="15">.<pos:position pos:line="55" pos:column="16"/></operator><name pos:line="55" pos:column="16">clean<pos:position pos:line="55" pos:column="21"/></name></name><argument_list pos:line="55" pos:column="21">()<pos:position pos:line="55" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name><name pos:line="58" pos:column="9">request<pos:position pos:line="58" pos:column="16"/></name><operator pos:line="58" pos:column="16">-&gt;<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="18">flags<pos:position pos:line="58" pos:column="23"/></name><operator pos:line="58" pos:column="23">.<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="24">accelerated<pos:position pos:line="58" pos:column="35"/></name></name></expr>)<pos:position pos:line="58" pos:column="36"/></condition><then pos:line="58" pos:column="36"> <block pos:line="58" pos:column="37">{
        <comment type="block" pos:line="59" pos:column="9">/* Append Surrogate-Capabilities */</comment>
        <decl_stmt><decl><type><name pos:line="60" pos:column="9">String<pos:position pos:line="60" pos:column="15"/></name></type> <name pos:line="60" pos:column="16">strSurrogate<pos:position pos:line="60" pos:column="28"/></name><argument_list pos:line="60" pos:column="28">(<argument><expr><call><name><name pos:line="60" pos:column="29">hdr_in<pos:position pos:line="60" pos:column="35"/></name><operator pos:line="60" pos:column="35">-&gt;<pos:position pos:line="60" pos:column="40"/></operator><name pos:line="60" pos:column="37">getList<pos:position pos:line="60" pos:column="44"/></name></name><argument_list pos:line="60" pos:column="44">(<argument><expr><name pos:line="60" pos:column="45">HDR_SURROGATE_CAPABILITY<pos:position pos:line="60" pos:column="69"/></name></expr></argument>)<pos:position pos:line="60" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="60" pos:column="71"/></argument_list></decl>;<pos:position pos:line="60" pos:column="72"/></decl_stmt>
<cpp:if pos:line="61" pos:column="1">#<cpp:directive pos:line="61" pos:column="2">if<pos:position pos:line="61" pos:column="4"/></cpp:directive> <expr><name pos:line="61" pos:column="5">USE_SQUID_ESI<pos:position pos:line="61" pos:column="18"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">snprintf<pos:position pos:line="62" pos:column="17"/></name><argument_list pos:line="62" pos:column="17">(<argument><expr><name pos:line="62" pos:column="18">bbuf<pos:position pos:line="62" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="24">BBUF_SZ<pos:position pos:line="62" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="62" pos:column="33">"%s=\"Surrogate/1.0 ESI/1.0\""<pos:position pos:line="62" pos:column="63"/></literal></expr></argument>, <argument><expr><name><name pos:line="62" pos:column="65">Config<pos:position pos:line="62" pos:column="71"/></name><operator pos:line="62" pos:column="71">.<pos:position pos:line="62" pos:column="72"/></operator><name pos:line="62" pos:column="72">Accel<pos:position pos:line="62" pos:column="77"/></name><operator pos:line="62" pos:column="77">.<pos:position pos:line="62" pos:column="78"/></operator><name pos:line="62" pos:column="78">surrogate_id<pos:position pos:line="62" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="62" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="92"/></expr_stmt>
<cpp:else pos:line="63" pos:column="1">#<cpp:directive pos:line="63" pos:column="2">else<pos:position pos:line="63" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">snprintf<pos:position pos:line="64" pos:column="17"/></name><argument_list pos:line="64" pos:column="17">(<argument><expr><name pos:line="64" pos:column="18">bbuf<pos:position pos:line="64" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="64" pos:column="24">BBUF_SZ<pos:position pos:line="64" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="33">"%s=\"Surrogate/1.0\""<pos:position pos:line="64" pos:column="55"/></literal></expr></argument>, <argument><expr><name><name pos:line="64" pos:column="57">Config<pos:position pos:line="64" pos:column="63"/></name><operator pos:line="64" pos:column="63">.<pos:position pos:line="64" pos:column="64"/></operator><name pos:line="64" pos:column="64">Accel<pos:position pos:line="64" pos:column="69"/></name><operator pos:line="64" pos:column="69">.<pos:position pos:line="64" pos:column="70"/></operator><name pos:line="64" pos:column="70">surrogate_id<pos:position pos:line="64" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="64" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="84"/></expr_stmt>
<cpp:endif pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">endif<pos:position pos:line="65" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="66" pos:column="9">strListAdd<pos:position pos:line="66" pos:column="19"/></name><argument_list pos:line="66" pos:column="19">(<argument><expr><operator pos:line="66" pos:column="20">&amp;<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="21">strSurrogate<pos:position pos:line="66" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="66" pos:column="35">bbuf<pos:position pos:line="66" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="66" pos:column="41">','<pos:position pos:line="66" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="67" pos:column="9">hdr_out<pos:position pos:line="67" pos:column="16"/></name><operator pos:line="67" pos:column="16">-&gt;<pos:position pos:line="67" pos:column="21"/></operator><name pos:line="67" pos:column="18">putStr<pos:position pos:line="67" pos:column="24"/></name></name><argument_list pos:line="67" pos:column="24">(<argument><expr><name pos:line="67" pos:column="25">HDR_SURROGATE_CAPABILITY<pos:position pos:line="67" pos:column="49"/></name></expr></argument>, <argument><expr><call><name><name pos:line="67" pos:column="51">strSurrogate<pos:position pos:line="67" pos:column="63"/></name><operator pos:line="67" pos:column="63">.<pos:position pos:line="67" pos:column="64"/></operator><name pos:line="67" pos:column="64">termedBuf<pos:position pos:line="67" pos:column="73"/></name></name><argument_list pos:line="67" pos:column="73">()<pos:position pos:line="67" pos:column="75"/></argument_list></call></expr></argument>)<pos:position pos:line="67" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="77"/></expr_stmt>
    }<pos:position pos:line="68" pos:column="6"/></block></then></if>

    <comment type="block" format="doxygen" pos:line="70" pos:column="5">/** \pre Handle X-Forwarded-For */</comment>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><call><name pos:line="71" pos:column="9">strcmp<pos:position pos:line="71" pos:column="15"/></name><argument_list pos:line="71" pos:column="15">(<argument><expr><name pos:line="71" pos:column="16">opt_forwarded_for<pos:position pos:line="71" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="71" pos:column="35">"delete"<pos:position pos:line="71" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="44"/></argument_list></call> <operator pos:line="71" pos:column="45">!=<pos:position pos:line="71" pos:column="47"/></operator> <literal type="number" pos:line="71" pos:column="48">0<pos:position pos:line="71" pos:column="49"/></literal></expr>)<pos:position pos:line="71" pos:column="50"/></condition><then pos:line="71" pos:column="50"> <block pos:line="71" pos:column="51">{

        <decl_stmt><decl><type><name pos:line="73" pos:column="9">String<pos:position pos:line="73" pos:column="15"/></name></type> <name pos:line="73" pos:column="16">strFwd<pos:position pos:line="73" pos:column="22"/></name> <init pos:line="73" pos:column="23">= <expr><call><name><name pos:line="73" pos:column="25">hdr_in<pos:position pos:line="73" pos:column="31"/></name><operator pos:line="73" pos:column="31">-&gt;<pos:position pos:line="73" pos:column="36"/></operator><name pos:line="73" pos:column="33">getList<pos:position pos:line="73" pos:column="40"/></name></name><argument_list pos:line="73" pos:column="40">(<argument><expr><name pos:line="73" pos:column="41">HDR_X_FORWARDED_FOR<pos:position pos:line="73" pos:column="60"/></name></expr></argument>)<pos:position pos:line="73" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="73" pos:column="62"/></decl_stmt>

        <comment type="line" pos:line="75" pos:column="9">// if we cannot double strFwd size, then it grew past 50% of the limit</comment>
        <if pos:line="76" pos:column="9">if <condition pos:line="76" pos:column="12">(<expr><operator pos:line="76" pos:column="13">!<pos:position pos:line="76" pos:column="14"/></operator><call><name><name pos:line="76" pos:column="14">strFwd<pos:position pos:line="76" pos:column="20"/></name><operator pos:line="76" pos:column="20">.<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="21">canGrowBy<pos:position pos:line="76" pos:column="30"/></name></name><argument_list pos:line="76" pos:column="30">(<argument><expr><call><name><name pos:line="76" pos:column="31">strFwd<pos:position pos:line="76" pos:column="37"/></name><operator pos:line="76" pos:column="37">.<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="38">size<pos:position pos:line="76" pos:column="42"/></name></name><argument_list pos:line="76" pos:column="42">()<pos:position pos:line="76" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="76" pos:column="46"/></condition><then pos:line="76" pos:column="46"> <block pos:line="76" pos:column="47">{
            <comment type="line" pos:line="77" pos:column="13">// There is probably a forwarding loop with Via detection disabled.</comment>
            <comment type="line" pos:line="78" pos:column="13">// If we do nothing, String will assert on overflow soon.</comment>
            <comment type="line" pos:line="79" pos:column="13">// TODO: Terminate all transactions with huge XFF?</comment>
            <expr_stmt><expr><name pos:line="80" pos:column="13">strFwd<pos:position pos:line="80" pos:column="19"/></name> <operator pos:line="80" pos:column="20">=<pos:position pos:line="80" pos:column="21"/></operator> <literal type="string" pos:line="80" pos:column="22">"error"<pos:position pos:line="80" pos:column="29"/></literal></expr>;<pos:position pos:line="80" pos:column="30"/></expr_stmt>

            <decl_stmt><decl><specifier pos:line="82" pos:column="13">static<pos:position pos:line="82" pos:column="19"/></specifier> <type><name pos:line="82" pos:column="20">int<pos:position pos:line="82" pos:column="23"/></name></type> <name pos:line="82" pos:column="24">warnedCount<pos:position pos:line="82" pos:column="35"/></name> <init pos:line="82" pos:column="36">= <expr><literal type="number" pos:line="82" pos:column="38">0<pos:position pos:line="82" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="82" pos:column="40"/></decl_stmt>
            <if pos:line="83" pos:column="13">if <condition pos:line="83" pos:column="16">(<expr><name pos:line="83" pos:column="17">warnedCount<pos:position pos:line="83" pos:column="28"/></name><operator pos:line="83" pos:column="28">++<pos:position pos:line="83" pos:column="30"/></operator> <operator pos:line="83" pos:column="31">&lt;<pos:position pos:line="83" pos:column="35"/></operator> <literal type="number" pos:line="83" pos:column="33">100<pos:position pos:line="83" pos:column="36"/></literal></expr>)<pos:position pos:line="83" pos:column="37"/></condition><then pos:line="83" pos:column="37"> <block pos:line="83" pos:column="38">{
                <decl_stmt><decl><type><specifier pos:line="84" pos:column="17">const<pos:position pos:line="84" pos:column="22"/></specifier> <name pos:line="84" pos:column="23">char<pos:position pos:line="84" pos:column="27"/></name> <modifier pos:line="84" pos:column="28">*<pos:position pos:line="84" pos:column="29"/></modifier></type><name pos:line="84" pos:column="29">url<pos:position pos:line="84" pos:column="32"/></name> <init pos:line="84" pos:column="33">= <expr><ternary><condition><expr><name pos:line="84" pos:column="35">entry<pos:position pos:line="84" pos:column="40"/></name></expr> ?<pos:position pos:line="84" pos:column="42"/></condition><then pos:line="84" pos:column="42"> <expr><call><name><name pos:line="84" pos:column="43">entry<pos:position pos:line="84" pos:column="48"/></name><operator pos:line="84" pos:column="48">-&gt;<pos:position pos:line="84" pos:column="53"/></operator><name pos:line="84" pos:column="50">url<pos:position pos:line="84" pos:column="53"/></name></name><argument_list pos:line="84" pos:column="53">()<pos:position pos:line="84" pos:column="55"/></argument_list></call></expr> <pos:position pos:line="84" pos:column="56"/></then><else pos:line="84" pos:column="56">: <expr><call><name pos:line="84" pos:column="58">urlCanonical<pos:position pos:line="84" pos:column="70"/></name><argument_list pos:line="84" pos:column="70">(<argument><expr><name pos:line="84" pos:column="71">request<pos:position pos:line="84" pos:column="78"/></name></expr></argument>)<pos:position pos:line="84" pos:column="79"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="84" pos:column="80"/></decl_stmt>
                <expr_stmt><expr><call><name pos:line="85" pos:column="17">debugs<pos:position pos:line="85" pos:column="23"/></name><argument_list pos:line="85" pos:column="23">(<argument><expr><literal type="number" pos:line="85" pos:column="24">11<pos:position pos:line="85" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="85" pos:column="28">DBG_IMPORTANT<pos:position pos:line="85" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="85" pos:column="43">"Warning: likely forwarding loop with "<pos:position pos:line="85" pos:column="82"/></literal> <operator pos:line="85" pos:column="83">&lt;&lt;<pos:position pos:line="85" pos:column="91"/></operator> <name pos:line="85" pos:column="86">url<pos:position pos:line="85" pos:column="89"/></name></expr></argument>)<pos:position pos:line="85" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="91"/></expr_stmt>
            }<pos:position pos:line="86" pos:column="14"/></block></then></if>
        }<pos:position pos:line="87" pos:column="10"/></block></then></if>

        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><call><name pos:line="89" pos:column="13">strcmp<pos:position pos:line="89" pos:column="19"/></name><argument_list pos:line="89" pos:column="19">(<argument><expr><name pos:line="89" pos:column="20">opt_forwarded_for<pos:position pos:line="89" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="89" pos:column="39">"on"<pos:position pos:line="89" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="44"/></argument_list></call> <operator pos:line="89" pos:column="45">==<pos:position pos:line="89" pos:column="47"/></operator> <literal type="number" pos:line="89" pos:column="48">0<pos:position pos:line="89" pos:column="49"/></literal></expr>)<pos:position pos:line="89" pos:column="50"/></condition><then pos:line="89" pos:column="50"> <block pos:line="89" pos:column="51">{
            <comment type="block" format="doxygen" pos:line="90" pos:column="13">/** If set to ON - append client IP or 'unknown'. */</comment>
            <if pos:line="91" pos:column="13">if <condition pos:line="91" pos:column="16">( <expr><call><name><name pos:line="91" pos:column="18">request<pos:position pos:line="91" pos:column="25"/></name><operator pos:line="91" pos:column="25">-&gt;<pos:position pos:line="91" pos:column="30"/></operator><name pos:line="91" pos:column="27">client_addr<pos:position pos:line="91" pos:column="38"/></name><operator pos:line="91" pos:column="38">.<pos:position pos:line="91" pos:column="39"/></operator><name pos:line="91" pos:column="39">isNoAddr<pos:position pos:line="91" pos:column="47"/></name></name><argument_list pos:line="91" pos:column="47">()<pos:position pos:line="91" pos:column="49"/></argument_list></call></expr> )<pos:position pos:line="91" pos:column="51"/></condition><then pos:line="91" pos:column="51">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="92" pos:column="17">strListAdd<pos:position pos:line="92" pos:column="27"/></name><argument_list pos:line="92" pos:column="27">(<argument><expr><operator pos:line="92" pos:column="28">&amp;<pos:position pos:line="92" pos:column="33"/></operator><name pos:line="92" pos:column="29">strFwd<pos:position pos:line="92" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="92" pos:column="37">"unknown"<pos:position pos:line="92" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="92" pos:column="48">','<pos:position pos:line="92" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="53"/></expr_stmt></block></then>
            <else pos:line="93" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="94" pos:column="17">strListAdd<pos:position pos:line="94" pos:column="27"/></name><argument_list pos:line="94" pos:column="27">(<argument><expr><operator pos:line="94" pos:column="28">&amp;<pos:position pos:line="94" pos:column="33"/></operator><name pos:line="94" pos:column="29">strFwd<pos:position pos:line="94" pos:column="35"/></name></expr></argument>, <argument><expr><call><name><name pos:line="94" pos:column="37">request<pos:position pos:line="94" pos:column="44"/></name><operator pos:line="94" pos:column="44">-&gt;<pos:position pos:line="94" pos:column="49"/></operator><name pos:line="94" pos:column="46">client_addr<pos:position pos:line="94" pos:column="57"/></name><operator pos:line="94" pos:column="57">.<pos:position pos:line="94" pos:column="58"/></operator><name pos:line="94" pos:column="58">toStr<pos:position pos:line="94" pos:column="63"/></name></name><argument_list pos:line="94" pos:column="63">(<argument><expr><name pos:line="94" pos:column="64">ntoabuf<pos:position pos:line="94" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="73">MAX_IPSTRLEN<pos:position pos:line="94" pos:column="85"/></name></expr></argument>)<pos:position pos:line="94" pos:column="86"/></argument_list></call></expr></argument>, <argument><expr><literal type="char" pos:line="94" pos:column="88">','<pos:position pos:line="94" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="94" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="93"/></expr_stmt></block></else></if>
        }<pos:position pos:line="95" pos:column="10"/></block></then> <elseif pos:line="95" pos:column="11">else <if pos:line="95" pos:column="16">if <condition pos:line="95" pos:column="19">(<expr><call><name pos:line="95" pos:column="20">strcmp<pos:position pos:line="95" pos:column="26"/></name><argument_list pos:line="95" pos:column="26">(<argument><expr><name pos:line="95" pos:column="27">opt_forwarded_for<pos:position pos:line="95" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="95" pos:column="46">"off"<pos:position pos:line="95" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="52"/></argument_list></call> <operator pos:line="95" pos:column="53">==<pos:position pos:line="95" pos:column="55"/></operator> <literal type="number" pos:line="95" pos:column="56">0<pos:position pos:line="95" pos:column="57"/></literal></expr>)<pos:position pos:line="95" pos:column="58"/></condition><then pos:line="95" pos:column="58"> <block pos:line="95" pos:column="59">{
            <comment type="block" format="doxygen" pos:line="96" pos:column="13">/** If set to OFF - append 'unknown'. */</comment>
            <expr_stmt><expr><call><name pos:line="97" pos:column="13">strListAdd<pos:position pos:line="97" pos:column="23"/></name><argument_list pos:line="97" pos:column="23">(<argument><expr><operator pos:line="97" pos:column="24">&amp;<pos:position pos:line="97" pos:column="29"/></operator><name pos:line="97" pos:column="25">strFwd<pos:position pos:line="97" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="97" pos:column="33">"unknown"<pos:position pos:line="97" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="char" pos:line="97" pos:column="44">','<pos:position pos:line="97" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="97" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="98" pos:column="10"/></block></then></if></elseif> <elseif pos:line="98" pos:column="11">else <if pos:line="98" pos:column="16">if <condition pos:line="98" pos:column="19">(<expr><call><name pos:line="98" pos:column="20">strcmp<pos:position pos:line="98" pos:column="26"/></name><argument_list pos:line="98" pos:column="26">(<argument><expr><name pos:line="98" pos:column="27">opt_forwarded_for<pos:position pos:line="98" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="98" pos:column="46">"transparent"<pos:position pos:line="98" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="98" pos:column="60"/></argument_list></call> <operator pos:line="98" pos:column="61">==<pos:position pos:line="98" pos:column="63"/></operator> <literal type="number" pos:line="98" pos:column="64">0<pos:position pos:line="98" pos:column="65"/></literal></expr>)<pos:position pos:line="98" pos:column="66"/></condition><then pos:line="98" pos:column="66"> <block pos:line="98" pos:column="67">{
            <comment type="block" format="doxygen" pos:line="99" pos:column="13">/** If set to TRANSPARENT - pass through unchanged. */</comment>
        }<pos:position pos:line="100" pos:column="10"/></block></then></if></elseif> <elseif pos:line="100" pos:column="11">else <if pos:line="100" pos:column="16">if <condition pos:line="100" pos:column="19">(<expr><call><name pos:line="100" pos:column="20">strcmp<pos:position pos:line="100" pos:column="26"/></name><argument_list pos:line="100" pos:column="26">(<argument><expr><name pos:line="100" pos:column="27">opt_forwarded_for<pos:position pos:line="100" pos:column="44"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="100" pos:column="46">"truncate"<pos:position pos:line="100" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="100" pos:column="57"/></argument_list></call> <operator pos:line="100" pos:column="58">==<pos:position pos:line="100" pos:column="60"/></operator> <literal type="number" pos:line="100" pos:column="61">0<pos:position pos:line="100" pos:column="62"/></literal></expr>)<pos:position pos:line="100" pos:column="63"/></condition><then pos:line="100" pos:column="63"> <block pos:line="100" pos:column="64">{
            <comment type="block" format="doxygen" pos:line="101" pos:column="13">/** If set to TRUNCATE - drop existing list and replace with client IP or 'unknown'. */</comment>
            <if pos:line="102" pos:column="13">if <condition pos:line="102" pos:column="16">( <expr><call><name><name pos:line="102" pos:column="18">request<pos:position pos:line="102" pos:column="25"/></name><operator pos:line="102" pos:column="25">-&gt;<pos:position pos:line="102" pos:column="30"/></operator><name pos:line="102" pos:column="27">client_addr<pos:position pos:line="102" pos:column="38"/></name><operator pos:line="102" pos:column="38">.<pos:position pos:line="102" pos:column="39"/></operator><name pos:line="102" pos:column="39">isNoAddr<pos:position pos:line="102" pos:column="47"/></name></name><argument_list pos:line="102" pos:column="47">()<pos:position pos:line="102" pos:column="49"/></argument_list></call></expr> )<pos:position pos:line="102" pos:column="51"/></condition><then pos:line="102" pos:column="51">
                <block type="pseudo"><expr_stmt><expr><name pos:line="103" pos:column="17">strFwd<pos:position pos:line="103" pos:column="23"/></name> <operator pos:line="103" pos:column="24">=<pos:position pos:line="103" pos:column="25"/></operator> <literal type="string" pos:line="103" pos:column="26">"unknown"<pos:position pos:line="103" pos:column="35"/></literal></expr>;<pos:position pos:line="103" pos:column="36"/></expr_stmt></block></then>
            <else pos:line="104" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="105" pos:column="17">strFwd<pos:position pos:line="105" pos:column="23"/></name> <operator pos:line="105" pos:column="24">=<pos:position pos:line="105" pos:column="25"/></operator> <call><name><name pos:line="105" pos:column="26">request<pos:position pos:line="105" pos:column="33"/></name><operator pos:line="105" pos:column="33">-&gt;<pos:position pos:line="105" pos:column="38"/></operator><name pos:line="105" pos:column="35">client_addr<pos:position pos:line="105" pos:column="46"/></name><operator pos:line="105" pos:column="46">.<pos:position pos:line="105" pos:column="47"/></operator><name pos:line="105" pos:column="47">toStr<pos:position pos:line="105" pos:column="52"/></name></name><argument_list pos:line="105" pos:column="52">(<argument><expr><name pos:line="105" pos:column="53">ntoabuf<pos:position pos:line="105" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="105" pos:column="62">MAX_IPSTRLEN<pos:position pos:line="105" pos:column="74"/></name></expr></argument>)<pos:position pos:line="105" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="76"/></expr_stmt></block></else></if>
        }<pos:position pos:line="106" pos:column="10"/></block></then></if></elseif></if>
        <if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><call><name><name pos:line="107" pos:column="13">strFwd<pos:position pos:line="107" pos:column="19"/></name><operator pos:line="107" pos:column="19">.<pos:position pos:line="107" pos:column="20"/></operator><name pos:line="107" pos:column="20">size<pos:position pos:line="107" pos:column="24"/></name></name><argument_list pos:line="107" pos:column="24">()<pos:position pos:line="107" pos:column="26"/></argument_list></call> <operator pos:line="107" pos:column="27">&gt;<pos:position pos:line="107" pos:column="31"/></operator> <literal type="number" pos:line="107" pos:column="29">0<pos:position pos:line="107" pos:column="30"/></literal></expr>)<pos:position pos:line="107" pos:column="31"/></condition><then pos:line="107" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="108" pos:column="13">hdr_out<pos:position pos:line="108" pos:column="20"/></name><operator pos:line="108" pos:column="20">-&gt;<pos:position pos:line="108" pos:column="25"/></operator><name pos:line="108" pos:column="22">putStr<pos:position pos:line="108" pos:column="28"/></name></name><argument_list pos:line="108" pos:column="28">(<argument><expr><name pos:line="108" pos:column="29">HDR_X_FORWARDED_FOR<pos:position pos:line="108" pos:column="48"/></name></expr></argument>, <argument><expr><call><name><name pos:line="108" pos:column="50">strFwd<pos:position pos:line="108" pos:column="56"/></name><operator pos:line="108" pos:column="56">.<pos:position pos:line="108" pos:column="57"/></operator><name pos:line="108" pos:column="57">termedBuf<pos:position pos:line="108" pos:column="66"/></name></name><argument_list pos:line="108" pos:column="66">()<pos:position pos:line="108" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="108" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="70"/></expr_stmt></block></then></if>
    }<pos:position pos:line="109" pos:column="6"/></block></then></if>
    <comment type="block" format="doxygen" pos:line="110" pos:column="5">/** If set to DELETE - do not copy through. */</comment>

    <comment type="block" pos:line="112" pos:column="5">/* append Host if not there already */</comment>
    <if pos:line="113" pos:column="5">if <condition pos:line="113" pos:column="8">(<expr><operator pos:line="113" pos:column="9">!<pos:position pos:line="113" pos:column="10"/></operator><call><name><name pos:line="113" pos:column="10">hdr_out<pos:position pos:line="113" pos:column="17"/></name><operator pos:line="113" pos:column="17">-&gt;<pos:position pos:line="113" pos:column="22"/></operator><name pos:line="113" pos:column="19">has<pos:position pos:line="113" pos:column="22"/></name></name><argument_list pos:line="113" pos:column="22">(<argument><expr><name pos:line="113" pos:column="23">HDR_HOST<pos:position pos:line="113" pos:column="31"/></name></expr></argument>)<pos:position pos:line="113" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="113" pos:column="33"/></condition><then pos:line="113" pos:column="33"> <block pos:line="113" pos:column="34">{
        <if pos:line="114" pos:column="9">if <condition pos:line="114" pos:column="12">(<expr><name><name pos:line="114" pos:column="13">request<pos:position pos:line="114" pos:column="20"/></name><operator pos:line="114" pos:column="20">-&gt;<pos:position pos:line="114" pos:column="25"/></operator><name pos:line="114" pos:column="22">peer_domain<pos:position pos:line="114" pos:column="33"/></name></name></expr>)<pos:position pos:line="114" pos:column="34"/></condition><then pos:line="114" pos:column="34"> <block pos:line="114" pos:column="35">{
            <expr_stmt><expr><call><name><name pos:line="115" pos:column="13">hdr_out<pos:position pos:line="115" pos:column="20"/></name><operator pos:line="115" pos:column="20">-&gt;<pos:position pos:line="115" pos:column="25"/></operator><name pos:line="115" pos:column="22">putStr<pos:position pos:line="115" pos:column="28"/></name></name><argument_list pos:line="115" pos:column="28">(<argument><expr><name pos:line="115" pos:column="29">HDR_HOST<pos:position pos:line="115" pos:column="37"/></name></expr></argument>, <argument><expr><name><name pos:line="115" pos:column="39">request<pos:position pos:line="115" pos:column="46"/></name><operator pos:line="115" pos:column="46">-&gt;<pos:position pos:line="115" pos:column="51"/></operator><name pos:line="115" pos:column="48">peer_domain<pos:position pos:line="115" pos:column="59"/></name></name></expr></argument>)<pos:position pos:line="115" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="116" pos:column="10"/></block></then> <elseif pos:line="116" pos:column="11">else <if pos:line="116" pos:column="16">if <condition pos:line="116" pos:column="19">(<expr><name><name pos:line="116" pos:column="20">request<pos:position pos:line="116" pos:column="27"/></name><operator pos:line="116" pos:column="27">-&gt;<pos:position pos:line="116" pos:column="32"/></operator><name pos:line="116" pos:column="29">port<pos:position pos:line="116" pos:column="33"/></name></name> <operator pos:line="116" pos:column="34">==<pos:position pos:line="116" pos:column="36"/></operator> <call><name pos:line="116" pos:column="37">urlDefaultPort<pos:position pos:line="116" pos:column="51"/></name><argument_list pos:line="116" pos:column="51">(<argument><expr><call><name><name pos:line="116" pos:column="52">request<pos:position pos:line="116" pos:column="59"/></name><operator pos:line="116" pos:column="59">-&gt;<pos:position pos:line="116" pos:column="64"/></operator><name pos:line="116" pos:column="61">url<pos:position pos:line="116" pos:column="64"/></name><operator pos:line="116" pos:column="64">.<pos:position pos:line="116" pos:column="65"/></operator><name pos:line="116" pos:column="65">getScheme<pos:position pos:line="116" pos:column="74"/></name></name><argument_list pos:line="116" pos:column="74">()<pos:position pos:line="116" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="116" pos:column="77"/></argument_list></call></expr>)<pos:position pos:line="116" pos:column="78"/></condition><then pos:line="116" pos:column="78"> <block pos:line="116" pos:column="79">{
            <comment type="block" pos:line="117" pos:column="13">/* use port# only if not default */</comment>
            <expr_stmt><expr><call><name><name pos:line="118" pos:column="13">hdr_out<pos:position pos:line="118" pos:column="20"/></name><operator pos:line="118" pos:column="20">-&gt;<pos:position pos:line="118" pos:column="25"/></operator><name pos:line="118" pos:column="22">putStr<pos:position pos:line="118" pos:column="28"/></name></name><argument_list pos:line="118" pos:column="28">(<argument><expr><name pos:line="118" pos:column="29">HDR_HOST<pos:position pos:line="118" pos:column="37"/></name></expr></argument>, <argument><expr><call><name><name pos:line="118" pos:column="39">request<pos:position pos:line="118" pos:column="46"/></name><operator pos:line="118" pos:column="46">-&gt;<pos:position pos:line="118" pos:column="51"/></operator><name pos:line="118" pos:column="48">GetHost<pos:position pos:line="118" pos:column="55"/></name></name><argument_list pos:line="118" pos:column="55">()<pos:position pos:line="118" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="118" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="59"/></expr_stmt>
        }<pos:position pos:line="119" pos:column="10"/></block></then></if></elseif> <else pos:line="119" pos:column="11">else <block pos:line="119" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="120" pos:column="13">httpHeaderPutStrf<pos:position pos:line="120" pos:column="30"/></name><argument_list pos:line="120" pos:column="30">(<argument><expr><name pos:line="120" pos:column="31">hdr_out<pos:position pos:line="120" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="40">HDR_HOST<pos:position pos:line="120" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="120" pos:column="50">"%s:%d"<pos:position pos:line="120" pos:column="57"/></literal></expr></argument>,
                              <argument><expr><call><name><name pos:line="121" pos:column="31">request<pos:position pos:line="121" pos:column="38"/></name><operator pos:line="121" pos:column="38">-&gt;<pos:position pos:line="121" pos:column="43"/></operator><name pos:line="121" pos:column="40">GetHost<pos:position pos:line="121" pos:column="47"/></name></name><argument_list pos:line="121" pos:column="47">()<pos:position pos:line="121" pos:column="49"/></argument_list></call></expr></argument>,
                              <argument><expr><operator pos:line="122" pos:column="31">(<pos:position pos:line="122" pos:column="32"/></operator><name pos:line="122" pos:column="32">int<pos:position pos:line="122" pos:column="35"/></name><operator pos:line="122" pos:column="35">)<pos:position pos:line="122" pos:column="36"/></operator> <name><name pos:line="122" pos:column="37">request<pos:position pos:line="122" pos:column="44"/></name><operator pos:line="122" pos:column="44">-&gt;<pos:position pos:line="122" pos:column="49"/></operator><name pos:line="122" pos:column="46">port<pos:position pos:line="122" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="122" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="123" pos:column="10"/></block></else></if>
    }<pos:position pos:line="124" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="126" pos:column="5">/* append Authorization if known in URL, not in header and going direct */</comment>
    <if pos:line="127" pos:column="5">if <condition pos:line="127" pos:column="8">(<expr><operator pos:line="127" pos:column="9">!<pos:position pos:line="127" pos:column="10"/></operator><call><name><name pos:line="127" pos:column="10">hdr_out<pos:position pos:line="127" pos:column="17"/></name><operator pos:line="127" pos:column="17">-&gt;<pos:position pos:line="127" pos:column="22"/></operator><name pos:line="127" pos:column="19">has<pos:position pos:line="127" pos:column="22"/></name></name><argument_list pos:line="127" pos:column="22">(<argument><expr><name pos:line="127" pos:column="23">HDR_AUTHORIZATION<pos:position pos:line="127" pos:column="40"/></name></expr></argument>)<pos:position pos:line="127" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="42"/></condition><then pos:line="127" pos:column="42"> <block pos:line="127" pos:column="43">{
        <if pos:line="128" pos:column="9">if <condition pos:line="128" pos:column="12">(<expr><operator pos:line="128" pos:column="13">!<pos:position pos:line="128" pos:column="14"/></operator><name><name pos:line="128" pos:column="14">request<pos:position pos:line="128" pos:column="21"/></name><operator pos:line="128" pos:column="21">-&gt;<pos:position pos:line="128" pos:column="26"/></operator><name pos:line="128" pos:column="23">flags<pos:position pos:line="128" pos:column="28"/></name><operator pos:line="128" pos:column="28">.<pos:position pos:line="128" pos:column="29"/></operator><name pos:line="128" pos:column="29">proxying<pos:position pos:line="128" pos:column="37"/></name></name> <operator pos:line="128" pos:column="38">&amp;&amp;<pos:position pos:line="128" pos:column="48"/></operator> <name><name pos:line="128" pos:column="41">request<pos:position pos:line="128" pos:column="48"/></name><operator pos:line="128" pos:column="48">-&gt;<pos:position pos:line="128" pos:column="53"/></operator><name pos:line="128" pos:column="50">login<pos:position pos:line="128" pos:column="55"/></name><index pos:line="128" pos:column="55">[<expr><literal type="number" pos:line="128" pos:column="56">0<pos:position pos:line="128" pos:column="57"/></literal></expr>]<pos:position pos:line="128" pos:column="58"/></index></name> <operator pos:line="128" pos:column="59">!=<pos:position pos:line="128" pos:column="61"/></operator> <literal type="char" pos:line="128" pos:column="62">'\0'<pos:position pos:line="128" pos:column="66"/></literal></expr>)<pos:position pos:line="128" pos:column="67"/></condition><then pos:line="128" pos:column="67"> <block pos:line="128" pos:column="68">{
            <expr_stmt><expr><call><name pos:line="129" pos:column="13">httpHeaderPutStrf<pos:position pos:line="129" pos:column="30"/></name><argument_list pos:line="129" pos:column="30">(<argument><expr><name pos:line="129" pos:column="31">hdr_out<pos:position pos:line="129" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="40">HDR_AUTHORIZATION<pos:position pos:line="129" pos:column="57"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="129" pos:column="59">"Basic %s"<pos:position pos:line="129" pos:column="69"/></literal></expr></argument>,
                              <argument><expr><call><name pos:line="130" pos:column="31">old_base64_encode<pos:position pos:line="130" pos:column="48"/></name><argument_list pos:line="130" pos:column="48">(<argument><expr><name><name pos:line="130" pos:column="49">request<pos:position pos:line="130" pos:column="56"/></name><operator pos:line="130" pos:column="56">-&gt;<pos:position pos:line="130" pos:column="61"/></operator><name pos:line="130" pos:column="58">login<pos:position pos:line="130" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="130" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="130" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="66"/></expr_stmt>
        }<pos:position pos:line="131" pos:column="10"/></block></then></if>
    }<pos:position pos:line="132" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="134" pos:column="5">/* Fixup (Proxy-)Authorization special cases. Plain relaying dealt with above */</comment>
    <expr_stmt><expr><call><name pos:line="135" pos:column="5">httpFixupAuthentication<pos:position pos:line="135" pos:column="28"/></name><argument_list pos:line="135" pos:column="28">(<argument><expr><name pos:line="135" pos:column="29">request<pos:position pos:line="135" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="38">hdr_in<pos:position pos:line="135" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="46">hdr_out<pos:position pos:line="135" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="55">flags<pos:position pos:line="135" pos:column="60"/></name></expr></argument>)<pos:position pos:line="135" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="62"/></expr_stmt>

    <comment type="block" pos:line="137" pos:column="5">/* append Cache-Control, add max-age if not there already */</comment>
    <block pos:line="138" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="139" pos:column="9">HttpHdrCc<pos:position pos:line="139" pos:column="18"/></name> <modifier pos:line="139" pos:column="19">*<pos:position pos:line="139" pos:column="20"/></modifier></type><name pos:line="139" pos:column="20">cc<pos:position pos:line="139" pos:column="22"/></name> <init pos:line="139" pos:column="23">= <expr><call><name><name pos:line="139" pos:column="25">hdr_in<pos:position pos:line="139" pos:column="31"/></name><operator pos:line="139" pos:column="31">-&gt;<pos:position pos:line="139" pos:column="36"/></operator><name pos:line="139" pos:column="33">getCc<pos:position pos:line="139" pos:column="38"/></name></name><argument_list pos:line="139" pos:column="38">()<pos:position pos:line="139" pos:column="40"/></argument_list></call></expr></init></decl>;<pos:position pos:line="139" pos:column="41"/></decl_stmt>

        <if pos:line="141" pos:column="9">if <condition pos:line="141" pos:column="12">(<expr><operator pos:line="141" pos:column="13">!<pos:position pos:line="141" pos:column="14"/></operator><name pos:line="141" pos:column="14">cc<pos:position pos:line="141" pos:column="16"/></name></expr>)<pos:position pos:line="141" pos:column="17"/></condition><then pos:line="141" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><name pos:line="142" pos:column="13">cc<pos:position pos:line="142" pos:column="15"/></name> <operator pos:line="142" pos:column="16">=<pos:position pos:line="142" pos:column="17"/></operator> <operator pos:line="142" pos:column="18">new<pos:position pos:line="142" pos:column="21"/></operator> <call><name pos:line="142" pos:column="22">HttpHdrCc<pos:position pos:line="142" pos:column="31"/></name><argument_list pos:line="142" pos:column="31">()<pos:position pos:line="142" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="34"/></expr_stmt></block></then></if>

<cpp:if pos:line="144" pos:column="1">#<cpp:directive pos:line="144" pos:column="2">if<pos:position pos:line="144" pos:column="4"/></cpp:directive> <expr><literal type="number" pos:line="144" pos:column="5">0<pos:position pos:line="144" pos:column="6"/></literal></expr></cpp:if> <comment type="block" pos:line="144" pos:column="7">/* see bug 2330 */</comment>
        <comment type="block" pos:line="145" pos:column="9">/* Set no-cache if determined needed but not found */</comment>
        if (request-&gt;flags.nocache)
            EBIT_SET(cc-&gt;mask, CC_NO_CACHE);
<cpp:endif pos:line="148" pos:column="1">#<cpp:directive pos:line="148" pos:column="2">endif<pos:position pos:line="148" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="block" pos:line="150" pos:column="9">/* Add max-age only without no-cache */</comment>
        <if pos:line="151" pos:column="9">if <condition pos:line="151" pos:column="12">(<expr><operator pos:line="151" pos:column="13">!<pos:position pos:line="151" pos:column="14"/></operator><call><name><name pos:line="151" pos:column="14">cc<pos:position pos:line="151" pos:column="16"/></name><operator pos:line="151" pos:column="16">-&gt;<pos:position pos:line="151" pos:column="21"/></operator><name pos:line="151" pos:column="18">hasMaxAge<pos:position pos:line="151" pos:column="27"/></name></name><argument_list pos:line="151" pos:column="27">()<pos:position pos:line="151" pos:column="29"/></argument_list></call> <operator pos:line="151" pos:column="30">&amp;&amp;<pos:position pos:line="151" pos:column="40"/></operator> <operator pos:line="151" pos:column="33">!<pos:position pos:line="151" pos:column="34"/></operator><call><name><name pos:line="151" pos:column="34">cc<pos:position pos:line="151" pos:column="36"/></name><operator pos:line="151" pos:column="36">-&gt;<pos:position pos:line="151" pos:column="41"/></operator><name pos:line="151" pos:column="38">hasNoCache<pos:position pos:line="151" pos:column="48"/></name></name><argument_list pos:line="151" pos:column="48">()<pos:position pos:line="151" pos:column="50"/></argument_list></call></expr>)<pos:position pos:line="151" pos:column="51"/></condition><then pos:line="151" pos:column="51"> <block pos:line="151" pos:column="52">{
            <decl_stmt><decl><type><specifier pos:line="152" pos:column="13">const<pos:position pos:line="152" pos:column="18"/></specifier> <name pos:line="152" pos:column="19">char<pos:position pos:line="152" pos:column="23"/></name> <modifier pos:line="152" pos:column="24">*<pos:position pos:line="152" pos:column="25"/></modifier></type><name pos:line="152" pos:column="25">url<pos:position pos:line="152" pos:column="28"/></name> <init pos:line="152" pos:column="29">=
                <expr><ternary><condition><expr><name pos:line="153" pos:column="17">entry<pos:position pos:line="153" pos:column="22"/></name></expr> ?<pos:position pos:line="153" pos:column="24"/></condition><then pos:line="153" pos:column="24"> <expr><call><name><name pos:line="153" pos:column="25">entry<pos:position pos:line="153" pos:column="30"/></name><operator pos:line="153" pos:column="30">-&gt;<pos:position pos:line="153" pos:column="35"/></operator><name pos:line="153" pos:column="32">url<pos:position pos:line="153" pos:column="35"/></name></name><argument_list pos:line="153" pos:column="35">()<pos:position pos:line="153" pos:column="37"/></argument_list></call></expr> <pos:position pos:line="153" pos:column="38"/></then><else pos:line="153" pos:column="38">: <expr><call><name pos:line="153" pos:column="40">urlCanonical<pos:position pos:line="153" pos:column="52"/></name><argument_list pos:line="153" pos:column="52">(<argument><expr><name pos:line="153" pos:column="53">request<pos:position pos:line="153" pos:column="60"/></name></expr></argument>)<pos:position pos:line="153" pos:column="61"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="153" pos:column="62"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="154" pos:column="13">cc<pos:position pos:line="154" pos:column="15"/></name><operator pos:line="154" pos:column="15">-&gt;<pos:position pos:line="154" pos:column="20"/></operator><name pos:line="154" pos:column="17">maxAge<pos:position pos:line="154" pos:column="23"/></name></name><argument_list pos:line="154" pos:column="23">(<argument><expr><call><name pos:line="154" pos:column="24">getMaxAge<pos:position pos:line="154" pos:column="33"/></name><argument_list pos:line="154" pos:column="33">(<argument><expr><name pos:line="154" pos:column="34">url<pos:position pos:line="154" pos:column="37"/></name></expr></argument>)<pos:position pos:line="154" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="154" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="154" pos:column="40"/></expr_stmt>

        }<pos:position pos:line="156" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="158" pos:column="9">/* Enforce sibling relations */</comment>
        <if pos:line="159" pos:column="9">if <condition pos:line="159" pos:column="12">(<expr><name><name pos:line="159" pos:column="13">flags<pos:position pos:line="159" pos:column="18"/></name><operator pos:line="159" pos:column="18">.<pos:position pos:line="159" pos:column="19"/></operator><name pos:line="159" pos:column="19">only_if_cached<pos:position pos:line="159" pos:column="33"/></name></name></expr>)<pos:position pos:line="159" pos:column="34"/></condition><then pos:line="159" pos:column="34">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="160" pos:column="13">cc<pos:position pos:line="160" pos:column="15"/></name><operator pos:line="160" pos:column="15">-&gt;<pos:position pos:line="160" pos:column="20"/></operator><name pos:line="160" pos:column="17">onlyIfCached<pos:position pos:line="160" pos:column="29"/></name></name><argument_list pos:line="160" pos:column="29">(<argument><expr><literal type="boolean" pos:line="160" pos:column="30">true<pos:position pos:line="160" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="160" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="36"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name><name pos:line="162" pos:column="9">hdr_out<pos:position pos:line="162" pos:column="16"/></name><operator pos:line="162" pos:column="16">-&gt;<pos:position pos:line="162" pos:column="21"/></operator><name pos:line="162" pos:column="18">putCc<pos:position pos:line="162" pos:column="23"/></name></name><argument_list pos:line="162" pos:column="23">(<argument><expr><name pos:line="162" pos:column="24">cc<pos:position pos:line="162" pos:column="26"/></name></expr></argument>)<pos:position pos:line="162" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><operator pos:line="164" pos:column="9">delete<pos:position pos:line="164" pos:column="15"/></operator> <name pos:line="164" pos:column="16">cc<pos:position pos:line="164" pos:column="18"/></name></expr>;<pos:position pos:line="164" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="165" pos:column="6"/></block>

    <comment type="block" pos:line="167" pos:column="5">/* maybe append Connection: keep-alive */</comment>
    <if pos:line="168" pos:column="5">if <condition pos:line="168" pos:column="8">(<expr><name><name pos:line="168" pos:column="9">flags<pos:position pos:line="168" pos:column="14"/></name><operator pos:line="168" pos:column="14">.<pos:position pos:line="168" pos:column="15"/></operator><name pos:line="168" pos:column="15">keepalive<pos:position pos:line="168" pos:column="24"/></name></name></expr>)<pos:position pos:line="168" pos:column="25"/></condition><then pos:line="168" pos:column="25"> <block pos:line="168" pos:column="26">{
        <expr_stmt><expr><call><name><name pos:line="169" pos:column="9">hdr_out<pos:position pos:line="169" pos:column="16"/></name><operator pos:line="169" pos:column="16">-&gt;<pos:position pos:line="169" pos:column="21"/></operator><name pos:line="169" pos:column="18">putStr<pos:position pos:line="169" pos:column="24"/></name></name><argument_list pos:line="169" pos:column="24">(<argument><expr><name pos:line="169" pos:column="25">HDR_CONNECTION<pos:position pos:line="169" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="169" pos:column="41">"keep-alive"<pos:position pos:line="169" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="169" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="169" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="170" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="172" pos:column="5">/* append Front-End-Https */</comment>
    <if pos:line="173" pos:column="5">if <condition pos:line="173" pos:column="8">(<expr><name><name pos:line="173" pos:column="9">flags<pos:position pos:line="173" pos:column="14"/></name><operator pos:line="173" pos:column="14">.<pos:position pos:line="173" pos:column="15"/></operator><name pos:line="173" pos:column="15">front_end_https<pos:position pos:line="173" pos:column="30"/></name></name></expr>)<pos:position pos:line="173" pos:column="31"/></condition><then pos:line="173" pos:column="31"> <block pos:line="173" pos:column="32">{
        <if pos:line="174" pos:column="9">if <condition pos:line="174" pos:column="12">(<expr><name><name pos:line="174" pos:column="13">flags<pos:position pos:line="174" pos:column="18"/></name><operator pos:line="174" pos:column="18">.<pos:position pos:line="174" pos:column="19"/></operator><name pos:line="174" pos:column="19">front_end_https<pos:position pos:line="174" pos:column="34"/></name></name> <operator pos:line="174" pos:column="35">==<pos:position pos:line="174" pos:column="37"/></operator> <literal type="number" pos:line="174" pos:column="38">1<pos:position pos:line="174" pos:column="39"/></literal> <operator pos:line="174" pos:column="40">||<pos:position pos:line="174" pos:column="42"/></operator> <call><name><name pos:line="174" pos:column="43">request<pos:position pos:line="174" pos:column="50"/></name><operator pos:line="174" pos:column="50">-&gt;<pos:position pos:line="174" pos:column="55"/></operator><name pos:line="174" pos:column="52">url<pos:position pos:line="174" pos:column="55"/></name><operator pos:line="174" pos:column="55">.<pos:position pos:line="174" pos:column="56"/></operator><name pos:line="174" pos:column="56">getScheme<pos:position pos:line="174" pos:column="65"/></name></name><argument_list pos:line="174" pos:column="65">()<pos:position pos:line="174" pos:column="67"/></argument_list></call> <operator pos:line="174" pos:column="68">==<pos:position pos:line="174" pos:column="70"/></operator> <name><name pos:line="174" pos:column="71">AnyP<pos:position pos:line="174" pos:column="75"/></name><operator pos:line="174" pos:column="75">::<pos:position pos:line="174" pos:column="77"/></operator><name pos:line="174" pos:column="77">PROTO_HTTPS<pos:position pos:line="174" pos:column="88"/></name></name></expr>)<pos:position pos:line="174" pos:column="89"/></condition><then pos:line="174" pos:column="89">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="175" pos:column="13">hdr_out<pos:position pos:line="175" pos:column="20"/></name><operator pos:line="175" pos:column="20">-&gt;<pos:position pos:line="175" pos:column="25"/></operator><name pos:line="175" pos:column="22">putStr<pos:position pos:line="175" pos:column="28"/></name></name><argument_list pos:line="175" pos:column="28">(<argument><expr><name pos:line="175" pos:column="29">HDR_FRONT_END_HTTPS<pos:position pos:line="175" pos:column="48"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="175" pos:column="50">"On"<pos:position pos:line="175" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="175" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="175" pos:column="56"/></expr_stmt></block></then></if>
    }<pos:position pos:line="176" pos:column="6"/></block></then></if>

    <if pos:line="178" pos:column="5">if <condition pos:line="178" pos:column="8">(<expr><name><name pos:line="178" pos:column="9">flags<pos:position pos:line="178" pos:column="14"/></name><operator pos:line="178" pos:column="14">.<pos:position pos:line="178" pos:column="15"/></operator><name pos:line="178" pos:column="15">chunked_request<pos:position pos:line="178" pos:column="30"/></name></name></expr>)<pos:position pos:line="178" pos:column="31"/></condition><then pos:line="178" pos:column="31"> <block pos:line="178" pos:column="32">{
        <comment type="line" pos:line="179" pos:column="9">// Do not just copy the original value so that if the client-side</comment>
        <comment type="line" pos:line="180" pos:column="9">// starts decode other encodings, this code may remain valid.</comment>
        <expr_stmt><expr><call><name><name pos:line="181" pos:column="9">hdr_out<pos:position pos:line="181" pos:column="16"/></name><operator pos:line="181" pos:column="16">-&gt;<pos:position pos:line="181" pos:column="21"/></operator><name pos:line="181" pos:column="18">putStr<pos:position pos:line="181" pos:column="24"/></name></name><argument_list pos:line="181" pos:column="24">(<argument><expr><name pos:line="181" pos:column="25">HDR_TRANSFER_ENCODING<pos:position pos:line="181" pos:column="46"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="181" pos:column="48">"chunked"<pos:position pos:line="181" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="59"/></expr_stmt>
    }<pos:position pos:line="182" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="184" pos:column="5">/* Now mangle the headers. */</comment>
    <if pos:line="185" pos:column="5">if <condition pos:line="185" pos:column="8">(<expr><name><name pos:line="185" pos:column="9">Config2<pos:position pos:line="185" pos:column="16"/></name><operator pos:line="185" pos:column="16">.<pos:position pos:line="185" pos:column="17"/></operator><name pos:line="185" pos:column="17">onoff<pos:position pos:line="185" pos:column="22"/></name><operator pos:line="185" pos:column="22">.<pos:position pos:line="185" pos:column="23"/></operator><name pos:line="185" pos:column="23">mangle_request_headers<pos:position pos:line="185" pos:column="45"/></name></name></expr>)<pos:position pos:line="185" pos:column="46"/></condition><then pos:line="185" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="186" pos:column="9">httpHdrMangleList<pos:position pos:line="186" pos:column="26"/></name><argument_list pos:line="186" pos:column="26">(<argument><expr><name pos:line="186" pos:column="27">hdr_out<pos:position pos:line="186" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="36">request<pos:position pos:line="186" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="186" pos:column="45">ROR_REQUEST<pos:position pos:line="186" pos:column="56"/></name></expr></argument>)<pos:position pos:line="186" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="186" pos:column="58"/></expr_stmt></block></then></if>

    <if pos:line="188" pos:column="5">if <condition pos:line="188" pos:column="8">(<expr><name><name pos:line="188" pos:column="9">Config<pos:position pos:line="188" pos:column="15"/></name><operator pos:line="188" pos:column="15">.<pos:position pos:line="188" pos:column="16"/></operator><name pos:line="188" pos:column="16">request_header_add<pos:position pos:line="188" pos:column="34"/></name></name> <operator pos:line="188" pos:column="35">&amp;&amp;<pos:position pos:line="188" pos:column="45"/></operator> <operator pos:line="188" pos:column="38">!<pos:position pos:line="188" pos:column="39"/></operator><call><name><name pos:line="188" pos:column="39">Config<pos:position pos:line="188" pos:column="45"/></name><operator pos:line="188" pos:column="45">.<pos:position pos:line="188" pos:column="46"/></operator><name pos:line="188" pos:column="46">request_header_add<pos:position pos:line="188" pos:column="64"/></name><operator pos:line="188" pos:column="64">-&gt;<pos:position pos:line="188" pos:column="69"/></operator><name pos:line="188" pos:column="66">empty<pos:position pos:line="188" pos:column="71"/></name></name><argument_list pos:line="188" pos:column="71">()<pos:position pos:line="188" pos:column="73"/></argument_list></call></expr>)<pos:position pos:line="188" pos:column="74"/></condition><then pos:line="188" pos:column="74">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="189" pos:column="9">httpHdrAdd<pos:position pos:line="189" pos:column="19"/></name><argument_list pos:line="189" pos:column="19">(<argument><expr><name pos:line="189" pos:column="20">hdr_out<pos:position pos:line="189" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="29">request<pos:position pos:line="189" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="189" pos:column="38">al<pos:position pos:line="189" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="189" pos:column="42">*<pos:position pos:line="189" pos:column="43"/></operator><name><name pos:line="189" pos:column="43">Config<pos:position pos:line="189" pos:column="49"/></name><operator pos:line="189" pos:column="49">.<pos:position pos:line="189" pos:column="50"/></operator><name pos:line="189" pos:column="50">request_header_add<pos:position pos:line="189" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="189" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="189" pos:column="70"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="191" pos:column="5">strConnection<pos:position pos:line="191" pos:column="18"/></name><operator pos:line="191" pos:column="18">.<pos:position pos:line="191" pos:column="19"/></operator><name pos:line="191" pos:column="19">clean<pos:position pos:line="191" pos:column="24"/></name></name><argument_list pos:line="191" pos:column="24">()<pos:position pos:line="191" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="191" pos:column="27"/></expr_stmt>
}<pos:position pos:line="192" pos:column="2"/></block></function></unit>

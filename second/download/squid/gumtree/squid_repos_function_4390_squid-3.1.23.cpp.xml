<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4390_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">asnMatchIp<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name><name pos:line="2" pos:column="12">CbDataList<pos:position pos:line="2" pos:column="22"/></name><argument_list type="generic" pos:line="2" pos:column="22">&lt;<argument><expr><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></expr></argument>&gt;<pos:position pos:line="2" pos:column="30"/></argument_list></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">data<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="35">IpAddress<pos:position pos:line="2" pos:column="44"/></name> <modifier pos:line="2" pos:column="45">&amp;<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="46">addr<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">struct<pos:position pos:line="4" pos:column="11"/></name> <name pos:line="4" pos:column="12">squid_radix_node<pos:position pos:line="4" pos:column="28"/></name></name> <modifier pos:line="4" pos:column="29">*<pos:position pos:line="4" pos:column="30"/></modifier></type><name pos:line="4" pos:column="30">rn<pos:position pos:line="4" pos:column="32"/></name></decl>;<pos:position pos:line="4" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">as_info<pos:position pos:line="5" pos:column="12"/></name> <modifier pos:line="5" pos:column="13">*<pos:position pos:line="5" pos:column="14"/></modifier></type><name pos:line="5" pos:column="14">e<pos:position pos:line="5" pos:column="15"/></name></decl>;<pos:position pos:line="5" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">m_ADDR<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">m_addr<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">CbDataList<pos:position pos:line="7" pos:column="15"/></name><argument_list type="generic" pos:line="7" pos:column="15">&lt;<argument><expr><name pos:line="7" pos:column="16">int<pos:position pos:line="7" pos:column="19"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="23"/></argument_list></name> <modifier pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></modifier></type><name pos:line="7" pos:column="22">a<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><name pos:line="7" pos:column="26">NULL<pos:position pos:line="7" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">CbDataList<pos:position pos:line="8" pos:column="15"/></name><argument_list type="generic" pos:line="8" pos:column="15">&lt;<argument><expr><name pos:line="8" pos:column="16">int<pos:position pos:line="8" pos:column="19"/></name></expr></argument>&gt;<pos:position pos:line="8" pos:column="23"/></argument_list></name> <modifier pos:line="8" pos:column="21">*<pos:position pos:line="8" pos:column="22"/></modifier></type><name pos:line="8" pos:column="22">b<pos:position pos:line="8" pos:column="23"/></name> <init pos:line="8" pos:column="24">= <expr><name pos:line="8" pos:column="26">NULL<pos:position pos:line="8" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="31"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">53<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">3<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"asnMatchIp: Called for "<pos:position pos:line="10" pos:column="44"/></literal> <operator pos:line="10" pos:column="45">&lt;&lt;<pos:position pos:line="10" pos:column="53"/></operator> <name pos:line="10" pos:column="48">addr<pos:position pos:line="10" pos:column="52"/></name></expr></argument> )<pos:position pos:line="10" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="55"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name pos:line="12" pos:column="9">AS_tree_head<pos:position pos:line="12" pos:column="21"/></name> <operator pos:line="12" pos:column="22">==<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">NULL<pos:position pos:line="12" pos:column="29"/></name></expr>)<pos:position pos:line="12" pos:column="30"/></condition><then pos:line="12" pos:column="30">
        <block type="pseudo"><return pos:line="13" pos:column="9">return <expr><literal type="number" pos:line="13" pos:column="16">0<pos:position pos:line="13" pos:column="17"/></literal></expr>;<pos:position pos:line="13" pos:column="18"/></return></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><call><name><name pos:line="15" pos:column="9">addr<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">.<pos:position pos:line="15" pos:column="14"/></operator><name pos:line="15" pos:column="14">IsNoAddr<pos:position pos:line="15" pos:column="22"/></name></name><argument_list pos:line="15" pos:column="22">()<pos:position pos:line="15" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="25"/></condition><then pos:line="15" pos:column="25">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><call><name><name pos:line="18" pos:column="9">addr<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">.<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">IsAnyAddr<pos:position pos:line="18" pos:column="23"/></name></name><argument_list pos:line="18" pos:column="23">()<pos:position pos:line="18" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="26"/></condition><then pos:line="18" pos:column="26">
        <block type="pseudo"><return pos:line="19" pos:column="9">return <expr><literal type="number" pos:line="19" pos:column="16">0<pos:position pos:line="19" pos:column="17"/></literal></expr>;<pos:position pos:line="19" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><name><name pos:line="21" pos:column="5">m_addr<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">.<pos:position pos:line="21" pos:column="12"/></operator><name pos:line="21" pos:column="12">addr<pos:position pos:line="21" pos:column="16"/></name></name> <operator pos:line="21" pos:column="17">=<pos:position pos:line="21" pos:column="18"/></operator> <name pos:line="21" pos:column="19">addr<pos:position pos:line="21" pos:column="23"/></name></expr>;<pos:position pos:line="21" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name pos:line="23" pos:column="5">rn<pos:position pos:line="23" pos:column="7"/></name> <operator pos:line="23" pos:column="8">=<pos:position pos:line="23" pos:column="9"/></operator> <call><name pos:line="23" pos:column="10">squid_rn_match<pos:position pos:line="23" pos:column="24"/></name><argument_list pos:line="23" pos:column="24">(<argument><expr><operator pos:line="23" pos:column="25">&amp;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="26">m_addr<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="34">AS_tree_head<pos:position pos:line="23" pos:column="46"/></name></expr></argument>)<pos:position pos:line="23" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="48"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><name pos:line="25" pos:column="9">rn<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">==<pos:position pos:line="25" pos:column="14"/></operator> <name pos:line="25" pos:column="15">NULL<pos:position pos:line="25" pos:column="19"/></name></expr>)<pos:position pos:line="25" pos:column="20"/></condition><then pos:line="25" pos:column="20"> <block pos:line="25" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">debugs<pos:position pos:line="26" pos:column="15"/></name><argument_list pos:line="26" pos:column="15">(<argument><expr><literal type="number" pos:line="26" pos:column="16">53<pos:position pos:line="26" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="20">3<pos:position pos:line="26" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="23">"asnMatchIp: Address not in as db."<pos:position pos:line="26" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="60"/></expr_stmt>
        <return pos:line="27" pos:column="9">return <expr><literal type="number" pos:line="27" pos:column="16">0<pos:position pos:line="27" pos:column="17"/></literal></expr>;<pos:position pos:line="27" pos:column="18"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="30" pos:column="5">debugs<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><literal type="number" pos:line="30" pos:column="12">53<pos:position pos:line="30" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="16">3<pos:position pos:line="30" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="19">"asnMatchIp: Found in db!"<pos:position pos:line="30" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name pos:line="31" pos:column="5">e<pos:position pos:line="31" pos:column="6"/></name> <operator pos:line="31" pos:column="7">=<pos:position pos:line="31" pos:column="8"/></operator> <operator pos:line="31" pos:column="9">(<pos:position pos:line="31" pos:column="10"/></operator><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">rtentry_t<pos:position pos:line="31" pos:column="20"/></name> <operator pos:line="31" pos:column="21">*<pos:position pos:line="31" pos:column="22"/></operator><operator pos:line="31" pos:column="22">)<pos:position pos:line="31" pos:column="23"/></operator> <name pos:line="31" pos:column="24">rn<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">)<pos:position pos:line="31" pos:column="27"/></operator><operator pos:line="31" pos:column="27">-&gt;<pos:position pos:line="31" pos:column="32"/></operator><name pos:line="31" pos:column="29">e_info<pos:position pos:line="31" pos:column="35"/></name></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">assert<pos:position pos:line="32" pos:column="11"/></name><argument_list pos:line="32" pos:column="11">(<argument><expr><name pos:line="32" pos:column="12">e<pos:position pos:line="32" pos:column="13"/></name></expr></argument>)<pos:position pos:line="32" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="15"/></expr_stmt>

    <for pos:line="34" pos:column="5">for <control pos:line="34" pos:column="9">(<init><expr><name pos:line="34" pos:column="10">a<pos:position pos:line="34" pos:column="11"/></name> <operator pos:line="34" pos:column="12">=<pos:position pos:line="34" pos:column="13"/></operator> <name pos:line="34" pos:column="14">data<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></init> <condition><expr><name pos:line="34" pos:column="20">a<pos:position pos:line="34" pos:column="21"/></name></expr>;<pos:position pos:line="34" pos:column="22"/></condition> <incr><expr><name pos:line="34" pos:column="23">a<pos:position pos:line="34" pos:column="24"/></name> <operator pos:line="34" pos:column="25">=<pos:position pos:line="34" pos:column="26"/></operator> <name><name pos:line="34" pos:column="27">a<pos:position pos:line="34" pos:column="28"/></name><operator pos:line="34" pos:column="28">-&gt;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="30">next<pos:position pos:line="34" pos:column="34"/></name></name></expr></incr>)<pos:position pos:line="34" pos:column="35"/></control>
        <block type="pseudo"><for pos:line="35" pos:column="9">for <control pos:line="35" pos:column="13">(<init><expr><name pos:line="35" pos:column="14">b<pos:position pos:line="35" pos:column="15"/></name> <operator pos:line="35" pos:column="16">=<pos:position pos:line="35" pos:column="17"/></operator> <name><name pos:line="35" pos:column="18">e<pos:position pos:line="35" pos:column="19"/></name><operator pos:line="35" pos:column="19">-&gt;<pos:position pos:line="35" pos:column="24"/></operator><name pos:line="35" pos:column="21">as_number<pos:position pos:line="35" pos:column="30"/></name></name></expr>;<pos:position pos:line="35" pos:column="31"/></init> <condition><expr><name pos:line="35" pos:column="32">b<pos:position pos:line="35" pos:column="33"/></name></expr>;<pos:position pos:line="35" pos:column="34"/></condition> <incr><expr><name pos:line="35" pos:column="35">b<pos:position pos:line="35" pos:column="36"/></name> <operator pos:line="35" pos:column="37">=<pos:position pos:line="35" pos:column="38"/></operator> <name><name pos:line="35" pos:column="39">b<pos:position pos:line="35" pos:column="40"/></name><operator pos:line="35" pos:column="40">-&gt;<pos:position pos:line="35" pos:column="45"/></operator><name pos:line="35" pos:column="42">next<pos:position pos:line="35" pos:column="46"/></name></name></expr></incr>)<pos:position pos:line="35" pos:column="47"/></control>
            <block type="pseudo"><if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><name><name pos:line="36" pos:column="17">a<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">-&gt;<pos:position pos:line="36" pos:column="23"/></operator><name pos:line="36" pos:column="20">element<pos:position pos:line="36" pos:column="27"/></name></name> <operator pos:line="36" pos:column="28">==<pos:position pos:line="36" pos:column="30"/></operator> <name><name pos:line="36" pos:column="31">b<pos:position pos:line="36" pos:column="32"/></name><operator pos:line="36" pos:column="32">-&gt;<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="34">element<pos:position pos:line="36" pos:column="41"/></name></name></expr>)<pos:position pos:line="36" pos:column="42"/></condition><then pos:line="36" pos:column="42"> <block pos:line="36" pos:column="43">{
                <expr_stmt><expr><call><name pos:line="37" pos:column="17">debugs<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><literal type="number" pos:line="37" pos:column="24">53<pos:position pos:line="37" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="28">5<pos:position pos:line="37" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="31">"asnMatchIp: Found a match!"<pos:position pos:line="37" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="61"/></expr_stmt>
                <return pos:line="38" pos:column="17">return <expr><literal type="number" pos:line="38" pos:column="24">1<pos:position pos:line="38" pos:column="25"/></literal></expr>;<pos:position pos:line="38" pos:column="26"/></return>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if></block></for></block></for>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">debugs<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><literal type="number" pos:line="41" pos:column="12">53<pos:position pos:line="41" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="16">5<pos:position pos:line="41" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="19">"asnMatchIp: AS not in as db."<pos:position pos:line="41" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="51"/></expr_stmt>
    <return pos:line="42" pos:column="5">return <expr><literal type="number" pos:line="42" pos:column="12">0<pos:position pos:line="42" pos:column="13"/></literal></expr>;<pos:position pos:line="42" pos:column="14"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5806_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">netdbHandlePingReply<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><specifier pos:line="2" pos:column="22">const<pos:position pos:line="2" pos:column="27"/></specifier> <name><name pos:line="2" pos:column="28">Ip<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">Address<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">&amp;<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="41">from<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name></type> <name pos:line="2" pos:column="51">hops<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">int<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">rtt<pos:position pos:line="2" pos:column="64"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="65"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_ICMP<pos:position pos:line="4" pos:column="13"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">netdbEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">n<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">N<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">38<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">3<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"netdbHandlePingReply: from "<pos:position pos:line="7" pos:column="48"/></literal> <operator pos:line="7" pos:column="49">&lt;&lt;<pos:position pos:line="7" pos:column="57"/></operator> <name pos:line="7" pos:column="52">from<pos:position pos:line="7" pos:column="56"/></name></expr></argument>)<pos:position pos:line="7" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="58"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">n<pos:position pos:line="9" pos:column="11"/></name> <operator pos:line="9" pos:column="12">=<pos:position pos:line="9" pos:column="13"/></operator> <call><name pos:line="9" pos:column="14">netdbLookupAddr<pos:position pos:line="9" pos:column="29"/></name><argument_list pos:line="9" pos:column="29">(<argument><expr><name pos:line="9" pos:column="30">from<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call><operator pos:line="9" pos:column="35">)<pos:position pos:line="9" pos:column="36"/></operator> <operator pos:line="9" pos:column="37">==<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="40">NULL<pos:position pos:line="9" pos:column="44"/></name></expr>)<pos:position pos:line="9" pos:column="45"/></condition><then pos:line="9" pos:column="45">
        <block type="pseudo"><return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">N<pos:position pos:line="12" pos:column="6"/></name> <operator pos:line="12" pos:column="7">=<pos:position pos:line="12" pos:column="8"/></operator> <operator pos:line="12" pos:column="9">++<pos:position pos:line="12" pos:column="11"/></operator><name><name pos:line="12" pos:column="11">n<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">pings_recv<pos:position pos:line="12" pos:column="24"/></name></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">N<pos:position pos:line="14" pos:column="10"/></name> <operator pos:line="14" pos:column="11">&gt;<pos:position pos:line="14" pos:column="15"/></operator> <literal type="number" pos:line="14" pos:column="13">5<pos:position pos:line="14" pos:column="14"/></literal></expr>)<pos:position pos:line="14" pos:column="15"/></condition><then pos:line="14" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="9">N<pos:position pos:line="15" pos:column="10"/></name> <operator pos:line="15" pos:column="11">=<pos:position pos:line="15" pos:column="12"/></operator> <literal type="number" pos:line="15" pos:column="13">5<pos:position pos:line="15" pos:column="14"/></literal></expr>;<pos:position pos:line="15" pos:column="15"/></expr_stmt></block></then></if>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">rtt<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">&lt;<pos:position pos:line="17" pos:column="17"/></operator> <literal type="number" pos:line="17" pos:column="15">1<pos:position pos:line="17" pos:column="16"/></literal></expr>)<pos:position pos:line="17" pos:column="17"/></condition><then pos:line="17" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">rtt<pos:position pos:line="18" pos:column="12"/></name> <operator pos:line="18" pos:column="13">=<pos:position pos:line="18" pos:column="14"/></operator> <literal type="number" pos:line="18" pos:column="15">1<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="20" pos:column="5">n<pos:position pos:line="20" pos:column="6"/></name><operator pos:line="20" pos:column="6">-&gt;<pos:position pos:line="20" pos:column="11"/></operator><name pos:line="20" pos:column="8">hops<pos:position pos:line="20" pos:column="12"/></name></name> <operator pos:line="20" pos:column="13">=<pos:position pos:line="20" pos:column="14"/></operator> <operator pos:line="20" pos:column="15">(<pos:position pos:line="20" pos:column="16"/></operator><operator pos:line="20" pos:column="16">(<pos:position pos:line="20" pos:column="17"/></operator><name><name pos:line="20" pos:column="17">n<pos:position pos:line="20" pos:column="18"/></name><operator pos:line="20" pos:column="18">-&gt;<pos:position pos:line="20" pos:column="23"/></operator><name pos:line="20" pos:column="20">hops<pos:position pos:line="20" pos:column="24"/></name></name> <operator pos:line="20" pos:column="25">*<pos:position pos:line="20" pos:column="26"/></operator> <operator pos:line="20" pos:column="27">(<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">N<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">-<pos:position pos:line="20" pos:column="31"/></operator> <literal type="number" pos:line="20" pos:column="32">1<pos:position pos:line="20" pos:column="33"/></literal><operator pos:line="20" pos:column="33">)<pos:position pos:line="20" pos:column="34"/></operator><operator pos:line="20" pos:column="34">)<pos:position pos:line="20" pos:column="35"/></operator> <operator pos:line="20" pos:column="36">+<pos:position pos:line="20" pos:column="37"/></operator> <name pos:line="20" pos:column="38">hops<pos:position pos:line="20" pos:column="42"/></name><operator pos:line="20" pos:column="42">)<pos:position pos:line="20" pos:column="43"/></operator> <operator pos:line="20" pos:column="44">/<pos:position pos:line="20" pos:column="45"/></operator> <name pos:line="20" pos:column="46">N<pos:position pos:line="20" pos:column="47"/></name></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="22" pos:column="5">n<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">rtt<pos:position pos:line="22" pos:column="11"/></name></name> <operator pos:line="22" pos:column="12">=<pos:position pos:line="22" pos:column="13"/></operator> <operator pos:line="22" pos:column="14">(<pos:position pos:line="22" pos:column="15"/></operator><operator pos:line="22" pos:column="15">(<pos:position pos:line="22" pos:column="16"/></operator><name><name pos:line="22" pos:column="16">n<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">rtt<pos:position pos:line="22" pos:column="22"/></name></name> <operator pos:line="22" pos:column="23">*<pos:position pos:line="22" pos:column="24"/></operator> <operator pos:line="22" pos:column="25">(<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">N<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">-<pos:position pos:line="22" pos:column="29"/></operator> <literal type="number" pos:line="22" pos:column="30">1<pos:position pos:line="22" pos:column="31"/></literal><operator pos:line="22" pos:column="31">)<pos:position pos:line="22" pos:column="32"/></operator><operator pos:line="22" pos:column="32">)<pos:position pos:line="22" pos:column="33"/></operator> <operator pos:line="22" pos:column="34">+<pos:position pos:line="22" pos:column="35"/></operator> <name pos:line="22" pos:column="36">rtt<pos:position pos:line="22" pos:column="39"/></name><operator pos:line="22" pos:column="39">)<pos:position pos:line="22" pos:column="40"/></operator> <operator pos:line="22" pos:column="41">/<pos:position pos:line="22" pos:column="42"/></operator> <name pos:line="22" pos:column="43">N<pos:position pos:line="22" pos:column="44"/></name></expr>;<pos:position pos:line="22" pos:column="45"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">debugs<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">38<pos:position pos:line="24" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="16">3<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"netdbHandlePingReply: "<pos:position pos:line="24" pos:column="43"/></literal> <operator pos:line="24" pos:column="44">&lt;&lt;<pos:position pos:line="24" pos:column="52"/></operator> <name><name pos:line="24" pos:column="47">n<pos:position pos:line="24" pos:column="48"/></name><operator pos:line="24" pos:column="48">-&gt;<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="50">network<pos:position pos:line="24" pos:column="57"/></name></name>  <operator pos:line="24" pos:column="59">&lt;&lt;<pos:position pos:line="24" pos:column="67"/></operator> <literal type="string" pos:line="24" pos:column="62">"; rtt="<pos:position pos:line="24" pos:column="70"/></literal><operator pos:line="24" pos:column="70">&lt;&lt;<pos:position pos:line="24" pos:column="78"/></operator>
           <call><name><name pos:line="25" pos:column="12">std<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">::<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="17">setw<pos:position pos:line="25" pos:column="21"/></name></name><argument_list pos:line="25" pos:column="21">(<argument><expr><literal type="number" pos:line="25" pos:column="22">5<pos:position pos:line="25" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="24"/></argument_list></call><operator pos:line="25" pos:column="24">&lt;&lt;<pos:position pos:line="25" pos:column="32"/></operator> <call><name><name pos:line="25" pos:column="27">std<pos:position pos:line="25" pos:column="30"/></name><operator pos:line="25" pos:column="30">::<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="32">setprecision<pos:position pos:line="25" pos:column="44"/></name></name><argument_list pos:line="25" pos:column="44">(<argument><expr><literal type="number" pos:line="25" pos:column="45">2<pos:position pos:line="25" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="47"/></argument_list></call> <operator pos:line="25" pos:column="48">&lt;&lt;<pos:position pos:line="25" pos:column="56"/></operator> <name><name pos:line="25" pos:column="51">n<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">rtt<pos:position pos:line="25" pos:column="57"/></name></name> <operator pos:line="25" pos:column="58">&lt;&lt;<pos:position pos:line="25" pos:column="66"/></operator> <literal type="string" pos:line="25" pos:column="61">"  hops="<pos:position pos:line="25" pos:column="70"/></literal><operator pos:line="25" pos:column="70">&lt;&lt;<pos:position pos:line="25" pos:column="78"/></operator>
           <call><name><name pos:line="26" pos:column="12">std<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">::<pos:position pos:line="26" pos:column="17"/></operator><name pos:line="26" pos:column="17">setw<pos:position pos:line="26" pos:column="21"/></name></name><argument_list pos:line="26" pos:column="21">(<argument><expr><literal type="number" pos:line="26" pos:column="22">4<pos:position pos:line="26" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="24"/></argument_list></call> <operator pos:line="26" pos:column="25">&lt;&lt;<pos:position pos:line="26" pos:column="33"/></operator> <name><name pos:line="26" pos:column="28">n<pos:position pos:line="26" pos:column="29"/></name><operator pos:line="26" pos:column="29">-&gt;<pos:position pos:line="26" pos:column="34"/></operator><name pos:line="26" pos:column="31">hops<pos:position pos:line="26" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="37"/></expr_stmt>

<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

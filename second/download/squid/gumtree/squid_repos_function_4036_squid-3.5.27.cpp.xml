<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4036_squid-3.5.27.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name><name pos:line="1" pos:column="13">Adaptation<pos:position pos:line="1" pos:column="23"/></name><operator pos:line="1" pos:column="23">::<pos:position pos:line="1" pos:column="25"/></operator><name pos:line="1" pos:column="25">Ecap<pos:position pos:line="1" pos:column="29"/></name><operator pos:line="1" pos:column="29">::<pos:position pos:line="1" pos:column="31"/></operator><name pos:line="1" pos:column="31">ServiceRep<pos:position pos:line="1" pos:column="41"/></name><operator pos:line="1" pos:column="41">::<pos:position pos:line="1" pos:column="43"/></operator><name pos:line="1" pos:column="43">status<pos:position pos:line="1" pos:column="49"/></name></name><parameter_list pos:line="1" pos:column="49">()<pos:position pos:line="1" pos:column="51"/></parameter_list> <specifier pos:line="1" pos:column="52">const<pos:position pos:line="1" pos:column="57"/></specifier>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">// TODO: move generic stuff from eCAP and ICAP to Adaptation</comment>
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">MemBuf<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">buf<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">buf<pos:position pos:line="6" pos:column="8"/></name><operator pos:line="6" pos:column="8">.<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">reset<pos:position pos:line="6" pos:column="14"/></name></name><argument_list pos:line="6" pos:column="14">()<pos:position pos:line="6" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">buf<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">.<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">append<pos:position pos:line="7" pos:column="15"/></name></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="string" pos:line="7" pos:column="16">"["<pos:position pos:line="7" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="21">1<pos:position pos:line="7" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="24"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">up<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">()<pos:position pos:line="9" pos:column="13"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="14"/></condition><then pos:line="9" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="9">buf<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">.<pos:position pos:line="10" pos:column="13"/></operator><name pos:line="10" pos:column="13">append<pos:position pos:line="10" pos:column="19"/></name></name><argument_list pos:line="10" pos:column="19">(<argument><expr><literal type="string" pos:line="10" pos:column="20">"up"<pos:position pos:line="10" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="26">2<pos:position pos:line="10" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="29"/></expr_stmt></block></then>
    <else pos:line="11" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="12" pos:column="9">buf<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">.<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">append<pos:position pos:line="12" pos:column="19"/></name></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="string" pos:line="12" pos:column="20">"down"<pos:position pos:line="12" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="28">4<pos:position pos:line="12" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="31"/></expr_stmt></block></else></if>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><call><name pos:line="14" pos:column="9">detached<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">()<pos:position pos:line="14" pos:column="19"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="20"/></condition><then pos:line="14" pos:column="20">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="15" pos:column="9">buf<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">.<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">append<pos:position pos:line="15" pos:column="19"/></name></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="string" pos:line="15" pos:column="20">",detached"<pos:position pos:line="15" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="33">9<pos:position pos:line="15" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">buf<pos:position pos:line="17" pos:column="8"/></name><operator pos:line="17" pos:column="8">.<pos:position pos:line="17" pos:column="9"/></operator><name pos:line="17" pos:column="9">append<pos:position pos:line="17" pos:column="15"/></name></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="string" pos:line="17" pos:column="16">"]"<pos:position pos:line="17" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="21">1<pos:position pos:line="17" pos:column="22"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="18" pos:column="5">buf<pos:position pos:line="18" pos:column="8"/></name><operator pos:line="18" pos:column="8">.<pos:position pos:line="18" pos:column="9"/></operator><name pos:line="18" pos:column="9">terminate<pos:position pos:line="18" pos:column="18"/></name></name><argument_list pos:line="18" pos:column="18">()<pos:position pos:line="18" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>

    <return pos:line="20" pos:column="5">return <expr><call><name><name pos:line="20" pos:column="12">buf<pos:position pos:line="20" pos:column="15"/></name><operator pos:line="20" pos:column="15">.<pos:position pos:line="20" pos:column="16"/></operator><name pos:line="20" pos:column="16">content<pos:position pos:line="20" pos:column="23"/></name></name><argument_list pos:line="20" pos:column="23">()<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

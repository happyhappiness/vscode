<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1626_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name pos:line="1" pos:column="7">char<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type><name><name pos:line="1" pos:column="13">BodyPipe<pos:position pos:line="1" pos:column="21"/></name><operator pos:line="1" pos:column="21">::<pos:position pos:line="1" pos:column="23"/></operator><name pos:line="1" pos:column="23">status<pos:position pos:line="1" pos:column="29"/></name></name><parameter_list pos:line="1" pos:column="29">()<pos:position pos:line="1" pos:column="31"/></parameter_list> <specifier pos:line="1" pos:column="32">const<pos:position pos:line="1" pos:column="37"/></specifier>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="3" pos:column="5">static<pos:position pos:line="3" pos:column="11"/></specifier> <type><name pos:line="3" pos:column="12">MemBuf<pos:position pos:line="3" pos:column="18"/></name></type> <name pos:line="3" pos:column="19">outputBuffer<pos:position pos:line="3" pos:column="31"/></name></decl>;<pos:position pos:line="3" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">outputBuffer<pos:position pos:line="4" pos:column="17"/></name><operator pos:line="4" pos:column="17">.<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">reset<pos:position pos:line="4" pos:column="23"/></name></name><argument_list pos:line="4" pos:column="23">()<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">outputBuffer<pos:position pos:line="6" pos:column="17"/></name><operator pos:line="6" pos:column="17">.<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="18">append<pos:position pos:line="6" pos:column="24"/></name></name><argument_list pos:line="6" pos:column="24">(<argument><expr><literal type="string" pos:line="6" pos:column="25">" ["<pos:position pos:line="6" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="31">2<pos:position pos:line="6" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="34"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">outputBuffer<pos:position pos:line="8" pos:column="17"/></name><operator pos:line="8" pos:column="17">.<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="18">appendf<pos:position pos:line="8" pos:column="25"/></name></name><argument_list pos:line="8" pos:column="25">(<argument><expr><literal type="string" pos:line="8" pos:column="26">"%"<pos:position pos:line="8" pos:column="29"/></literal> <name pos:line="8" pos:column="30">PRIu64<pos:position pos:line="8" pos:column="36"/></name> <literal type="string" pos:line="8" pos:column="37">"&lt;=%"<pos:position pos:line="8" pos:column="45"/></literal> <name pos:line="8" pos:column="43">PRIu64<pos:position pos:line="8" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="51">theGetSize<pos:position pos:line="8" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="63">thePutSize<pos:position pos:line="8" pos:column="73"/></name></expr></argument>)<pos:position pos:line="8" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="75"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">theBodySize<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">&gt;=<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="10" pos:column="9">outputBuffer<pos:position pos:line="10" pos:column="21"/></name><operator pos:line="10" pos:column="21">.<pos:position pos:line="10" pos:column="22"/></operator><name pos:line="10" pos:column="22">appendf<pos:position pos:line="10" pos:column="29"/></name></name><argument_list pos:line="10" pos:column="29">(<argument><expr><literal type="string" pos:line="10" pos:column="30">"&lt;=%"<pos:position pos:line="10" pos:column="38"/></literal> <name pos:line="10" pos:column="36">PRId64<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="44">theBodySize<pos:position pos:line="10" pos:column="55"/></name></expr></argument>)<pos:position pos:line="10" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="57"/></expr_stmt></block></then>
    <else pos:line="11" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="12" pos:column="9">outputBuffer<pos:position pos:line="12" pos:column="21"/></name><operator pos:line="12" pos:column="21">.<pos:position pos:line="12" pos:column="22"/></operator><name pos:line="12" pos:column="22">append<pos:position pos:line="12" pos:column="28"/></name></name><argument_list pos:line="12" pos:column="28">(<argument><expr><literal type="string" pos:line="12" pos:column="29">"&lt;=?"<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="36">3<pos:position pos:line="12" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">outputBuffer<pos:position pos:line="14" pos:column="17"/></name><operator pos:line="14" pos:column="17">.<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="18">appendf<pos:position pos:line="14" pos:column="25"/></name></name><argument_list pos:line="14" pos:column="25">(<argument><expr><literal type="string" pos:line="14" pos:column="26">" %"<pos:position pos:line="14" pos:column="30"/></literal> <name pos:line="14" pos:column="31">PRId64<pos:position pos:line="14" pos:column="37"/></name> <literal type="string" pos:line="14" pos:column="38">"+%"<pos:position pos:line="14" pos:column="42"/></literal> <name pos:line="14" pos:column="43">PRId64<pos:position pos:line="14" pos:column="49"/></name></expr></argument>, <argument><expr><cast type="static" pos:line="14" pos:column="51">static_cast<argument_list type="generic" pos:line="14" pos:column="62">&lt;<argument><expr><name pos:line="14" pos:column="63">int64_t<pos:position pos:line="14" pos:column="70"/></name></expr></argument>&gt;<pos:position pos:line="14" pos:column="74"/></argument_list><argument_list pos:line="14" pos:column="71">(<argument><expr><call><name><name pos:line="14" pos:column="72">theBuf<pos:position pos:line="14" pos:column="78"/></name><operator pos:line="14" pos:column="78">.<pos:position pos:line="14" pos:column="79"/></operator><name pos:line="14" pos:column="79">contentSize<pos:position pos:line="14" pos:column="90"/></name></name><argument_list pos:line="14" pos:column="90">()<pos:position pos:line="14" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="93"/></argument_list></cast></expr></argument>, <argument><expr><cast type="static" pos:line="14" pos:column="95">static_cast<argument_list type="generic" pos:line="14" pos:column="106">&lt;<argument><expr><name pos:line="14" pos:column="107">int64_t<pos:position pos:line="14" pos:column="114"/></name></expr></argument>&gt;<pos:position pos:line="14" pos:column="118"/></argument_list><argument_list pos:line="14" pos:column="115">(<argument><expr><call><name><name pos:line="14" pos:column="116">theBuf<pos:position pos:line="14" pos:column="122"/></name><operator pos:line="14" pos:column="122">.<pos:position pos:line="14" pos:column="123"/></operator><name pos:line="14" pos:column="123">spaceSize<pos:position pos:line="14" pos:column="132"/></name></name><argument_list pos:line="14" pos:column="132">()<pos:position pos:line="14" pos:column="134"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="135"/></argument_list></cast></expr></argument>)<pos:position pos:line="14" pos:column="136"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="137"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="16" pos:column="5">outputBuffer<pos:position pos:line="16" pos:column="17"/></name><operator pos:line="16" pos:column="17">.<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">appendf<pos:position pos:line="16" pos:column="25"/></name></name><argument_list pos:line="16" pos:column="25">(<argument><expr><literal type="string" pos:line="16" pos:column="26">" pipe%p"<pos:position pos:line="16" pos:column="35"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="37">this<pos:position pos:line="16" pos:column="41"/></name></expr></argument>)<pos:position pos:line="16" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="43"/></expr_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><call><name><name pos:line="17" pos:column="9">theProducer<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">.<pos:position pos:line="17" pos:column="21"/></operator><name pos:line="17" pos:column="21">set<pos:position pos:line="17" pos:column="24"/></name></name><argument_list pos:line="17" pos:column="24">()<pos:position pos:line="17" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="18" pos:column="9">outputBuffer<pos:position pos:line="18" pos:column="21"/></name><operator pos:line="18" pos:column="21">.<pos:position pos:line="18" pos:column="22"/></operator><name pos:line="18" pos:column="22">appendf<pos:position pos:line="18" pos:column="29"/></name></name><argument_list pos:line="18" pos:column="29">(<argument><expr><literal type="string" pos:line="18" pos:column="30">" prod%p"<pos:position pos:line="18" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="18" pos:column="41">theProducer<pos:position pos:line="18" pos:column="52"/></name><operator pos:line="18" pos:column="52">.<pos:position pos:line="18" pos:column="53"/></operator><name pos:line="18" pos:column="53">get<pos:position pos:line="18" pos:column="56"/></name></name><argument_list pos:line="18" pos:column="56">()<pos:position pos:line="18" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="60"/></expr_stmt></block></then></if>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name><name pos:line="19" pos:column="9">theConsumer<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">set<pos:position pos:line="19" pos:column="24"/></name></name><argument_list pos:line="19" pos:column="24">()<pos:position pos:line="19" pos:column="26"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="27"/></condition><then pos:line="19" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="20" pos:column="9">outputBuffer<pos:position pos:line="20" pos:column="21"/></name><operator pos:line="20" pos:column="21">.<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">appendf<pos:position pos:line="20" pos:column="29"/></name></name><argument_list pos:line="20" pos:column="29">(<argument><expr><literal type="string" pos:line="20" pos:column="30">" cons%p"<pos:position pos:line="20" pos:column="39"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="20" pos:column="41">theConsumer<pos:position pos:line="20" pos:column="52"/></name><operator pos:line="20" pos:column="52">.<pos:position pos:line="20" pos:column="53"/></operator><name pos:line="20" pos:column="53">get<pos:position pos:line="20" pos:column="56"/></name></name><argument_list pos:line="20" pos:column="56">()<pos:position pos:line="20" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="60"/></expr_stmt></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">mustAutoConsume<pos:position pos:line="22" pos:column="24"/></name></expr>)<pos:position pos:line="22" pos:column="25"/></condition><then pos:line="22" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="23" pos:column="9">outputBuffer<pos:position pos:line="23" pos:column="21"/></name><operator pos:line="23" pos:column="21">.<pos:position pos:line="23" pos:column="22"/></operator><name pos:line="23" pos:column="22">append<pos:position pos:line="23" pos:column="28"/></name></name><argument_list pos:line="23" pos:column="28">(<argument><expr><literal type="string" pos:line="23" pos:column="29">" A"<pos:position pos:line="23" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="35">2<pos:position pos:line="23" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="38"/></expr_stmt></block></then></if>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">abortedConsumption<pos:position pos:line="24" pos:column="27"/></name></expr>)<pos:position pos:line="24" pos:column="28"/></condition><then pos:line="24" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="25" pos:column="9">outputBuffer<pos:position pos:line="25" pos:column="21"/></name><operator pos:line="25" pos:column="21">.<pos:position pos:line="25" pos:column="22"/></operator><name pos:line="25" pos:column="22">append<pos:position pos:line="25" pos:column="28"/></name></name><argument_list pos:line="25" pos:column="28">(<argument><expr><literal type="string" pos:line="25" pos:column="29">" !C"<pos:position pos:line="25" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="36">3<pos:position pos:line="25" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="39"/></expr_stmt></block></then></if>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">isCheckedOut<pos:position pos:line="26" pos:column="21"/></name></expr>)<pos:position pos:line="26" pos:column="22"/></condition><then pos:line="26" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="27" pos:column="9">outputBuffer<pos:position pos:line="27" pos:column="21"/></name><operator pos:line="27" pos:column="21">.<pos:position pos:line="27" pos:column="22"/></operator><name pos:line="27" pos:column="22">append<pos:position pos:line="27" pos:column="28"/></name></name><argument_list pos:line="27" pos:column="28">(<argument><expr><literal type="string" pos:line="27" pos:column="29">" L"<pos:position pos:line="27" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="35">2<pos:position pos:line="27" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="38"/></expr_stmt></block></then></if> <comment type="line" pos:line="27" pos:column="39">// Locked</comment>

    <expr_stmt><expr><call><name><name pos:line="29" pos:column="5">outputBuffer<pos:position pos:line="29" pos:column="17"/></name><operator pos:line="29" pos:column="17">.<pos:position pos:line="29" pos:column="18"/></operator><name pos:line="29" pos:column="18">append<pos:position pos:line="29" pos:column="24"/></name></name><argument_list pos:line="29" pos:column="24">(<argument><expr><literal type="string" pos:line="29" pos:column="25">"]"<pos:position pos:line="29" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="30">1<pos:position pos:line="29" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">outputBuffer<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">terminate<pos:position pos:line="31" pos:column="27"/></name></name><argument_list pos:line="31" pos:column="27">()<pos:position pos:line="31" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="30"/></expr_stmt>

    <return pos:line="33" pos:column="5">return <expr><call><name><name pos:line="33" pos:column="12">outputBuffer<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">.<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">content<pos:position pos:line="33" pos:column="32"/></name></name><argument_list pos:line="33" pos:column="32">()<pos:position pos:line="33" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="35"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

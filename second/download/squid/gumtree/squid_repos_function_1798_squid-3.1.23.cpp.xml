<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1798_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">peerDNSConfigure<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">ipcache_addrs<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">ia<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name pos:line="2" pos:column="49">DnsLookupDetails<pos:position pos:line="2" pos:column="65"/></name> <modifier pos:line="2" pos:column="66">&amp;<pos:position pos:line="2" pos:column="71"/></modifier></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="69">void<pos:position pos:line="2" pos:column="73"/></name> <modifier pos:line="2" pos:column="74">*<pos:position pos:line="2" pos:column="75"/></modifier></type><name pos:line="2" pos:column="75">data<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="80"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">peer<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">p<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><operator pos:line="4" pos:column="15">(<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">peer<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></operator><operator pos:line="4" pos:column="22">)<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">data<pos:position pos:line="4" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">j<pos:position pos:line="6" pos:column="10"/></name></decl>;<pos:position pos:line="6" pos:column="11"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">p<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">-&gt;<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="12">n_addresses<pos:position pos:line="8" pos:column="23"/></name></name> <operator pos:line="8" pos:column="24">==<pos:position pos:line="8" pos:column="26"/></operator> <literal type="number" pos:line="8" pos:column="27">0<pos:position pos:line="8" pos:column="28"/></literal></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">15<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">1<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="23">"Configuring "<pos:position pos:line="9" pos:column="37"/></literal> <operator pos:line="9" pos:column="38">&lt;&lt;<pos:position pos:line="9" pos:column="46"/></operator> <call><name pos:line="9" pos:column="41">neighborTypeStr<pos:position pos:line="9" pos:column="56"/></name><argument_list pos:line="9" pos:column="56">(<argument><expr><name pos:line="9" pos:column="57">p<pos:position pos:line="9" pos:column="58"/></name></expr></argument>)<pos:position pos:line="9" pos:column="59"/></argument_list></call> <operator pos:line="9" pos:column="60">&lt;&lt;<pos:position pos:line="9" pos:column="68"/></operator> <literal type="string" pos:line="9" pos:column="63">" "<pos:position pos:line="9" pos:column="66"/></literal> <operator pos:line="9" pos:column="67">&lt;&lt;<pos:position pos:line="9" pos:column="75"/></operator> <name><name pos:line="9" pos:column="70">p<pos:position pos:line="9" pos:column="71"/></name><operator pos:line="9" pos:column="71">-&gt;<pos:position pos:line="9" pos:column="76"/></operator><name pos:line="9" pos:column="73">host<pos:position pos:line="9" pos:column="77"/></name></name> <operator pos:line="9" pos:column="78">&lt;&lt;<pos:position pos:line="9" pos:column="86"/></operator> <literal type="string" pos:line="9" pos:column="81">"/"<pos:position pos:line="9" pos:column="84"/></literal> <operator pos:line="9" pos:column="85">&lt;&lt;<pos:position pos:line="9" pos:column="93"/></operator> <name><name pos:line="9" pos:column="88">p<pos:position pos:line="9" pos:column="89"/></name><operator pos:line="9" pos:column="89">-&gt;<pos:position pos:line="9" pos:column="94"/></operator><name pos:line="9" pos:column="91">http_port<pos:position pos:line="9" pos:column="100"/></name></name> <operator pos:line="9" pos:column="101">&lt;&lt;<pos:position pos:line="9" pos:column="109"/></operator> <literal type="string" pos:line="9" pos:column="104">"/"<pos:position pos:line="9" pos:column="107"/></literal> <operator pos:line="9" pos:column="108">&lt;&lt;<pos:position pos:line="9" pos:column="116"/></operator> <name><name pos:line="9" pos:column="111">p<pos:position pos:line="9" pos:column="112"/></name><operator pos:line="9" pos:column="112">-&gt;<pos:position pos:line="9" pos:column="117"/></operator><name pos:line="9" pos:column="114">icp<pos:position pos:line="9" pos:column="117"/></name><operator pos:line="9" pos:column="117">.<pos:position pos:line="9" pos:column="118"/></operator><name pos:line="9" pos:column="118">port<pos:position pos:line="9" pos:column="122"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="124"/></expr_stmt>

        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name><name pos:line="11" pos:column="13">p<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">type<pos:position pos:line="11" pos:column="20"/></name></name> <operator pos:line="11" pos:column="21">==<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="24">PEER_MULTICAST<pos:position pos:line="11" pos:column="38"/></name></expr>)<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="13">debugs<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="number" pos:line="12" pos:column="20">15<pos:position pos:line="12" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="24">1<pos:position pos:line="12" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="27">"    Multicast TTL = "<pos:position pos:line="12" pos:column="49"/></literal> <operator pos:line="12" pos:column="50">&lt;&lt;<pos:position pos:line="12" pos:column="58"/></operator> <name><name pos:line="12" pos:column="53">p<pos:position pos:line="12" pos:column="54"/></name><operator pos:line="12" pos:column="54">-&gt;<pos:position pos:line="12" pos:column="59"/></operator><name pos:line="12" pos:column="56">mcast<pos:position pos:line="12" pos:column="61"/></name><operator pos:line="12" pos:column="61">.<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="62">ttl<pos:position pos:line="12" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="67"/></expr_stmt></block></then></if>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="15" pos:column="5">p<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">n_addresses<pos:position pos:line="15" pos:column="19"/></name></name> <operator pos:line="15" pos:column="20">=<pos:position pos:line="15" pos:column="21"/></operator> <literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">ia<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">==<pos:position pos:line="17" pos:column="14"/></operator> <name pos:line="17" pos:column="15">NULL<pos:position pos:line="17" pos:column="19"/></name></expr>)<pos:position pos:line="17" pos:column="20"/></condition><then pos:line="17" pos:column="20"> <block pos:line="17" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">0<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="19">0<pos:position pos:line="18" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="22">"WARNING: DNS lookup for '"<pos:position pos:line="18" pos:column="49"/></literal> <operator pos:line="18" pos:column="50">&lt;&lt;<pos:position pos:line="18" pos:column="58"/></operator> <name><name pos:line="18" pos:column="53">p<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">-&gt;<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="56">host<pos:position pos:line="18" pos:column="60"/></name></name> <operator pos:line="18" pos:column="61">&lt;&lt;<pos:position pos:line="18" pos:column="69"/></operator> <literal type="string" pos:line="18" pos:column="64">"' failed!"<pos:position pos:line="18" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="77"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><operator pos:line="22" pos:column="9">(<pos:position pos:line="22" pos:column="10"/></operator><name pos:line="22" pos:column="10">int<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">)<pos:position pos:line="22" pos:column="14"/></operator> <name><name pos:line="22" pos:column="15">ia<pos:position pos:line="22" pos:column="17"/></name><operator pos:line="22" pos:column="17">-&gt;<pos:position pos:line="22" pos:column="22"/></operator><name pos:line="22" pos:column="19">count<pos:position pos:line="22" pos:column="24"/></name></name> <operator pos:line="22" pos:column="25">&lt;<pos:position pos:line="22" pos:column="29"/></operator> <literal type="number" pos:line="22" pos:column="27">1<pos:position pos:line="22" pos:column="28"/></literal></expr>)<pos:position pos:line="22" pos:column="29"/></condition><then pos:line="22" pos:column="29"> <block pos:line="22" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="19">0<pos:position pos:line="23" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="22">"WARNING: No IP address found for '"<pos:position pos:line="23" pos:column="58"/></literal> <operator pos:line="23" pos:column="59">&lt;&lt;<pos:position pos:line="23" pos:column="67"/></operator> <name><name pos:line="23" pos:column="62">p<pos:position pos:line="23" pos:column="63"/></name><operator pos:line="23" pos:column="63">-&gt;<pos:position pos:line="23" pos:column="68"/></operator><name pos:line="23" pos:column="65">host<pos:position pos:line="23" pos:column="69"/></name></name> <operator pos:line="23" pos:column="70">&lt;&lt;<pos:position pos:line="23" pos:column="78"/></operator> <literal type="string" pos:line="23" pos:column="73">"'!"<pos:position pos:line="23" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="79"/></expr_stmt>
        <return pos:line="24" pos:column="9">return;<pos:position pos:line="24" pos:column="16"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="27" pos:column="5">p<pos:position pos:line="27" pos:column="6"/></name><operator pos:line="27" pos:column="6">-&gt;<pos:position pos:line="27" pos:column="11"/></operator><name pos:line="27" pos:column="8">tcp_up<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">=<pos:position pos:line="27" pos:column="16"/></operator> <name><name pos:line="27" pos:column="17">p<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">-&gt;<pos:position pos:line="27" pos:column="23"/></operator><name pos:line="27" pos:column="20">connect_fail_limit<pos:position pos:line="27" pos:column="38"/></name></name></expr>;<pos:position pos:line="27" pos:column="39"/></expr_stmt>

    <for pos:line="29" pos:column="5">for <control pos:line="29" pos:column="9">(<init><expr><name pos:line="29" pos:column="10">j<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">=<pos:position pos:line="29" pos:column="13"/></operator> <literal type="number" pos:line="29" pos:column="14">0<pos:position pos:line="29" pos:column="15"/></literal></expr>;<pos:position pos:line="29" pos:column="16"/></init> <condition><expr><name pos:line="29" pos:column="17">j<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">&lt;<pos:position pos:line="29" pos:column="23"/></operator> <operator pos:line="29" pos:column="21">(<pos:position pos:line="29" pos:column="22"/></operator><name pos:line="29" pos:column="22">int<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">)<pos:position pos:line="29" pos:column="26"/></operator> <name><name pos:line="29" pos:column="27">ia<pos:position pos:line="29" pos:column="29"/></name><operator pos:line="29" pos:column="29">-&gt;<pos:position pos:line="29" pos:column="34"/></operator><name pos:line="29" pos:column="31">count<pos:position pos:line="29" pos:column="36"/></name></name> <operator pos:line="29" pos:column="37">&amp;&amp;<pos:position pos:line="29" pos:column="47"/></operator> <name pos:line="29" pos:column="40">j<pos:position pos:line="29" pos:column="41"/></name> <operator pos:line="29" pos:column="42">&lt;<pos:position pos:line="29" pos:column="46"/></operator> <name pos:line="29" pos:column="44">PEER_MAX_ADDRESSES<pos:position pos:line="29" pos:column="62"/></name></expr>;<pos:position pos:line="29" pos:column="63"/></condition> <incr><expr><name pos:line="29" pos:column="64">j<pos:position pos:line="29" pos:column="65"/></name><operator pos:line="29" pos:column="65">++<pos:position pos:line="29" pos:column="67"/></operator></expr></incr>)<pos:position pos:line="29" pos:column="68"/></control> <block pos:line="29" pos:column="69">{
        <expr_stmt><expr><name><name pos:line="30" pos:column="9">p<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">addresses<pos:position pos:line="30" pos:column="21"/></name><index pos:line="30" pos:column="21">[<expr><name pos:line="30" pos:column="22">j<pos:position pos:line="30" pos:column="23"/></name></expr>]<pos:position pos:line="30" pos:column="24"/></index></name> <operator pos:line="30" pos:column="25">=<pos:position pos:line="30" pos:column="26"/></operator> <name><name pos:line="30" pos:column="27">ia<pos:position pos:line="30" pos:column="29"/></name><operator pos:line="30" pos:column="29">-&gt;<pos:position pos:line="30" pos:column="34"/></operator><name pos:line="30" pos:column="31">in_addrs<pos:position pos:line="30" pos:column="39"/></name><index pos:line="30" pos:column="39">[<expr><name pos:line="30" pos:column="40">j<pos:position pos:line="30" pos:column="41"/></name></expr>]<pos:position pos:line="30" pos:column="42"/></index></name></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">debugs<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">15<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="20">2<pos:position pos:line="31" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">"--&gt; IP address #"<pos:position pos:line="31" pos:column="44"/></literal> <operator pos:line="31" pos:column="42">&lt;&lt;<pos:position pos:line="31" pos:column="50"/></operator> <name pos:line="31" pos:column="45">j<pos:position pos:line="31" pos:column="46"/></name> <operator pos:line="31" pos:column="47">&lt;&lt;<pos:position pos:line="31" pos:column="55"/></operator> <literal type="string" pos:line="31" pos:column="50">": "<pos:position pos:line="31" pos:column="54"/></literal> <operator pos:line="31" pos:column="55">&lt;&lt;<pos:position pos:line="31" pos:column="63"/></operator> <name><name pos:line="31" pos:column="58">p<pos:position pos:line="31" pos:column="59"/></name><operator pos:line="31" pos:column="59">-&gt;<pos:position pos:line="31" pos:column="64"/></operator><name pos:line="31" pos:column="61">addresses<pos:position pos:line="31" pos:column="70"/></name><index pos:line="31" pos:column="70">[<expr><name pos:line="31" pos:column="71">j<pos:position pos:line="31" pos:column="72"/></name></expr>]<pos:position pos:line="31" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="32" pos:column="9">p<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">n_addresses<pos:position pos:line="32" pos:column="23"/></name></name><operator pos:line="32" pos:column="23">++<pos:position pos:line="32" pos:column="25"/></operator></expr>;<pos:position pos:line="32" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="33" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">p<pos:position pos:line="35" pos:column="6"/></name><operator pos:line="35" pos:column="6">-&gt;<pos:position pos:line="35" pos:column="11"/></operator><name pos:line="35" pos:column="8">in_addr<pos:position pos:line="35" pos:column="15"/></name><operator pos:line="35" pos:column="15">.<pos:position pos:line="35" pos:column="16"/></operator><name pos:line="35" pos:column="16">SetEmpty<pos:position pos:line="35" pos:column="24"/></name></name><argument_list pos:line="35" pos:column="24">()<pos:position pos:line="35" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">p<pos:position pos:line="36" pos:column="6"/></name><operator pos:line="36" pos:column="6">-&gt;<pos:position pos:line="36" pos:column="11"/></operator><name pos:line="36" pos:column="8">in_addr<pos:position pos:line="36" pos:column="15"/></name></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <name><name pos:line="36" pos:column="18">p<pos:position pos:line="36" pos:column="19"/></name><operator pos:line="36" pos:column="19">-&gt;<pos:position pos:line="36" pos:column="24"/></operator><name pos:line="36" pos:column="21">addresses<pos:position pos:line="36" pos:column="30"/></name><index pos:line="36" pos:column="30">[<expr><literal type="number" pos:line="36" pos:column="31">0<pos:position pos:line="36" pos:column="32"/></literal></expr>]<pos:position pos:line="36" pos:column="33"/></index></name></expr>;<pos:position pos:line="36" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="37" pos:column="5">p<pos:position pos:line="37" pos:column="6"/></name><operator pos:line="37" pos:column="6">-&gt;<pos:position pos:line="37" pos:column="11"/></operator><name pos:line="37" pos:column="8">in_addr<pos:position pos:line="37" pos:column="15"/></name><operator pos:line="37" pos:column="15">.<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="16">SetPort<pos:position pos:line="37" pos:column="23"/></name></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name><name pos:line="37" pos:column="24">p<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">-&gt;<pos:position pos:line="37" pos:column="30"/></operator><name pos:line="37" pos:column="27">icp<pos:position pos:line="37" pos:column="30"/></name><operator pos:line="37" pos:column="30">.<pos:position pos:line="37" pos:column="31"/></operator><name pos:line="37" pos:column="31">port<pos:position pos:line="37" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="37"/></expr_stmt>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name><name pos:line="39" pos:column="9">p<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">type<pos:position pos:line="39" pos:column="16"/></name></name> <operator pos:line="39" pos:column="17">==<pos:position pos:line="39" pos:column="19"/></operator> <name pos:line="39" pos:column="20">PEER_MULTICAST<pos:position pos:line="39" pos:column="34"/></name></expr>)<pos:position pos:line="39" pos:column="35"/></condition><then pos:line="39" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="40" pos:column="9">peerCountMcastPeersSchedule<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name pos:line="40" pos:column="37">p<pos:position pos:line="40" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="40">10<pos:position pos:line="40" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="44"/></expr_stmt></block></then></if>

<cpp:if pos:line="42" pos:column="1">#<cpp:directive pos:line="42" pos:column="2">if<pos:position pos:line="42" pos:column="4"/></cpp:directive> <expr><name pos:line="42" pos:column="5">USE_ICMP<pos:position pos:line="42" pos:column="13"/></name></expr></cpp:if>
    <if pos:line="43" pos:column="5">if <condition pos:line="43" pos:column="8">(<expr><name><name pos:line="43" pos:column="9">p<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">type<pos:position pos:line="43" pos:column="16"/></name></name> <operator pos:line="43" pos:column="17">!=<pos:position pos:line="43" pos:column="19"/></operator> <name pos:line="43" pos:column="20">PEER_MULTICAST<pos:position pos:line="43" pos:column="34"/></name></expr>)<pos:position pos:line="43" pos:column="35"/></condition><then pos:line="43" pos:column="35">
        <block type="pseudo"><if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><operator pos:line="44" pos:column="13">!<pos:position pos:line="44" pos:column="14"/></operator><name><name pos:line="44" pos:column="14">p<pos:position pos:line="44" pos:column="15"/></name><operator pos:line="44" pos:column="15">-&gt;<pos:position pos:line="44" pos:column="20"/></operator><name pos:line="44" pos:column="17">options<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">.<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="25">no_netdb_exchange<pos:position pos:line="44" pos:column="42"/></name></name></expr>)<pos:position pos:line="44" pos:column="43"/></condition><then pos:line="44" pos:column="43">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="13">eventAddIsh<pos:position pos:line="45" pos:column="24"/></name><argument_list pos:line="45" pos:column="24">(<argument><expr><literal type="string" pos:line="45" pos:column="25">"netdbExchangeStart"<pos:position pos:line="45" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="45" pos:column="47">netdbExchangeStart<pos:position pos:line="45" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="45" pos:column="67">p<pos:position pos:line="45" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="70">30.0<pos:position pos:line="45" pos:column="74"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="76">1<pos:position pos:line="45" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="79"/></expr_stmt></block></then></if></block></then></if>
<cpp:endif pos:line="46" pos:column="1">#<cpp:directive pos:line="46" pos:column="2">endif<pos:position pos:line="46" pos:column="7"/></cpp:directive></cpp:endif>

}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

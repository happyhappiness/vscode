<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4030_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ModXact<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">waitForService<pos:position pos:line="1" pos:column="47"/></name></name><parameter_list pos:line="1" pos:column="47">()<pos:position pos:line="1" pos:column="49"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">char<pos:position pos:line="3" pos:column="15"/></name> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">comment<pos:position pos:line="3" pos:column="24"/></name></decl>;<pos:position pos:line="3" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><operator pos:line="4" pos:column="10">!<pos:position pos:line="4" pos:column="11"/></operator><name><name pos:line="4" pos:column="11">state<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">.<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">serviceWaiting<pos:position pos:line="4" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="33"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><call><name pos:line="6" pos:column="10">service<pos:position pos:line="6" pos:column="17"/></name><argument_list pos:line="6" pos:column="17">()<pos:position pos:line="6" pos:column="19"/></argument_list></call><operator pos:line="6" pos:column="19">.<pos:position pos:line="6" pos:column="20"/></operator><call><name pos:line="6" pos:column="20">up<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">()<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="25"/></condition><then pos:line="6" pos:column="25"> <block pos:line="6" pos:column="26">{
        <decl_stmt><decl><type><name><name pos:line="7" pos:column="9">AsyncCall<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">::<pos:position pos:line="7" pos:column="20"/></operator><name pos:line="7" pos:column="20">Pointer<pos:position pos:line="7" pos:column="27"/></name></name></type> <name pos:line="7" pos:column="28">call<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><call><name pos:line="7" pos:column="35">JobCallback<pos:position pos:line="7" pos:column="46"/></name><argument_list pos:line="7" pos:column="46">(<argument><expr><literal type="number" pos:line="7" pos:column="47">93<pos:position pos:line="7" pos:column="49"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="7" pos:column="50">5<pos:position pos:line="7" pos:column="51"/></literal></expr></argument>,
                                              <argument><expr><name pos:line="8" pos:column="47">ConnWaiterDialer<pos:position pos:line="8" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="65">this<pos:position pos:line="8" pos:column="69"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="71">Adaptation<pos:position pos:line="8" pos:column="81"/></name><operator pos:line="8" pos:column="81">::<pos:position pos:line="8" pos:column="83"/></operator><name pos:line="8" pos:column="83">Icap<pos:position pos:line="8" pos:column="87"/></name><operator pos:line="8" pos:column="87">::<pos:position pos:line="8" pos:column="89"/></operator><name pos:line="8" pos:column="89">ModXact<pos:position pos:line="8" pos:column="96"/></name><operator pos:line="8" pos:column="96">::<pos:position pos:line="8" pos:column="98"/></operator><name pos:line="8" pos:column="98">noteServiceReady<pos:position pos:line="8" pos:column="114"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="115"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="116"/></decl_stmt>

        <expr_stmt><expr><call><name pos:line="10" pos:column="9">service<pos:position pos:line="10" pos:column="16"/></name><argument_list pos:line="10" pos:column="16">()<pos:position pos:line="10" pos:column="18"/></argument_list></call><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><call><name pos:line="10" pos:column="19">callWhenReady<pos:position pos:line="10" pos:column="32"/></name><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">call<pos:position pos:line="10" pos:column="37"/></name></expr></argument>)<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">comment<pos:position pos:line="11" pos:column="16"/></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <literal type="string" pos:line="11" pos:column="19">"to be up"<pos:position pos:line="11" pos:column="29"/></literal></expr>;<pos:position pos:line="11" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then> <else pos:line="12" pos:column="7">else <block pos:line="12" pos:column="12">{
        <comment type="line" pos:line="13" pos:column="9">//The service is unavailable because of max-connection or other reason</comment>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name pos:line="15" pos:column="13">service<pos:position pos:line="15" pos:column="20"/></name><argument_list pos:line="15" pos:column="20">()<pos:position pos:line="15" pos:column="22"/></argument_list></call><operator pos:line="15" pos:column="22">.<pos:position pos:line="15" pos:column="23"/></operator><call><name pos:line="15" pos:column="23">cfg<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">()<pos:position pos:line="15" pos:column="28"/></argument_list></call><operator pos:line="15" pos:column="28">.<pos:position pos:line="15" pos:column="29"/></operator><name pos:line="15" pos:column="29">onOverload<pos:position pos:line="15" pos:column="39"/></name> <operator pos:line="15" pos:column="40">!=<pos:position pos:line="15" pos:column="42"/></operator> <name pos:line="15" pos:column="43">srvWait<pos:position pos:line="15" pos:column="50"/></name></expr>)<pos:position pos:line="15" pos:column="51"/></condition><then pos:line="15" pos:column="51"> <block pos:line="15" pos:column="52">{
            <comment type="line" pos:line="16" pos:column="13">// The service is overloaded, but waiting to be available prohibited by</comment>
            <comment type="line" pos:line="17" pos:column="13">// user configuration (onOverload is set to "block" or "bypass")</comment>
            <if pos:line="18" pos:column="13">if <condition pos:line="18" pos:column="16">(<expr><call><name pos:line="18" pos:column="17">service<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">()<pos:position pos:line="18" pos:column="26"/></argument_list></call><operator pos:line="18" pos:column="26">.<pos:position pos:line="18" pos:column="27"/></operator><call><name pos:line="18" pos:column="27">cfg<pos:position pos:line="18" pos:column="30"/></name><argument_list pos:line="18" pos:column="30">()<pos:position pos:line="18" pos:column="32"/></argument_list></call><operator pos:line="18" pos:column="32">.<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">onOverload<pos:position pos:line="18" pos:column="43"/></name> <operator pos:line="18" pos:column="44">==<pos:position pos:line="18" pos:column="46"/></operator> <name pos:line="18" pos:column="47">srvBlock<pos:position pos:line="18" pos:column="55"/></name></expr>)<pos:position pos:line="18" pos:column="56"/></condition><then pos:line="18" pos:column="56">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="17">disableBypass<pos:position pos:line="19" pos:column="30"/></name><argument_list pos:line="19" pos:column="30">(<argument><expr><literal type="string" pos:line="19" pos:column="31">"not available"<pos:position pos:line="19" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="boolean" pos:line="19" pos:column="48">true<pos:position pos:line="19" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="54"/></expr_stmt></block></then>
            <else pos:line="20" pos:column="13">else <comment type="line" pos:line="20" pos:column="18">//if (service().cfg().onOverload == srvBypass)</comment>
                <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="17">canStartBypass<pos:position pos:line="21" pos:column="31"/></name> <operator pos:line="21" pos:column="32">=<pos:position pos:line="21" pos:column="33"/></operator> <literal type="boolean" pos:line="21" pos:column="34">true<pos:position pos:line="21" pos:column="38"/></literal></expr>;<pos:position pos:line="21" pos:column="39"/></expr_stmt></block></else></if>

            <expr_stmt><expr><call><name pos:line="23" pos:column="13">disableRetries<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">()<pos:position pos:line="23" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="24" pos:column="13">disableRepeats<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><literal type="string" pos:line="24" pos:column="28">"ICAP service is not available"<pos:position pos:line="24" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="61"/></expr_stmt>

            <expr_stmt><expr><call><name pos:line="26" pos:column="13">debugs<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><literal type="number" pos:line="26" pos:column="20">93<pos:position pos:line="26" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="24">7<pos:position pos:line="26" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="26" pos:column="27">HERE<pos:position pos:line="26" pos:column="31"/></name> <operator pos:line="26" pos:column="32">&lt;&lt;<pos:position pos:line="26" pos:column="40"/></operator> <literal type="string" pos:line="26" pos:column="35">"will not wait for the service to be available"<pos:position pos:line="26" pos:column="82"/></literal> <operator pos:line="26" pos:column="83">&lt;&lt;<pos:position pos:line="26" pos:column="91"/></operator>
                   <call><name pos:line="27" pos:column="20">status<pos:position pos:line="27" pos:column="26"/></name><argument_list pos:line="27" pos:column="26">()<pos:position pos:line="27" pos:column="28"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>

            <throw pos:line="29" pos:column="13">throw <expr><call><name pos:line="29" pos:column="19">TexcHere<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><literal type="string" pos:line="29" pos:column="28">"ICAP service is not available"<pos:position pos:line="29" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></throw>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>

        <decl_stmt><decl><type><name><name pos:line="32" pos:column="9">AsyncCall<pos:position pos:line="32" pos:column="18"/></name><operator pos:line="32" pos:column="18">::<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">Pointer<pos:position pos:line="32" pos:column="27"/></name></name></type> <name pos:line="32" pos:column="28">call<pos:position pos:line="32" pos:column="32"/></name> <init pos:line="32" pos:column="33">= <expr><call><name pos:line="32" pos:column="35">JobCallback<pos:position pos:line="32" pos:column="46"/></name><argument_list pos:line="32" pos:column="46">(<argument><expr><literal type="number" pos:line="32" pos:column="47">93<pos:position pos:line="32" pos:column="49"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="32" pos:column="50">5<pos:position pos:line="32" pos:column="51"/></literal></expr></argument>,
                                              <argument><expr><name pos:line="33" pos:column="47">ConnWaiterDialer<pos:position pos:line="33" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="65">this<pos:position pos:line="33" pos:column="69"/></name></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="71">Adaptation<pos:position pos:line="33" pos:column="81"/></name><operator pos:line="33" pos:column="81">::<pos:position pos:line="33" pos:column="83"/></operator><name pos:line="33" pos:column="83">Icap<pos:position pos:line="33" pos:column="87"/></name><operator pos:line="33" pos:column="87">::<pos:position pos:line="33" pos:column="89"/></operator><name pos:line="33" pos:column="89">ModXact<pos:position pos:line="33" pos:column="96"/></name><operator pos:line="33" pos:column="96">::<pos:position pos:line="33" pos:column="98"/></operator><name pos:line="33" pos:column="98">noteServiceAvailable<pos:position pos:line="33" pos:column="118"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="119"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="120"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">service<pos:position pos:line="34" pos:column="16"/></name><argument_list pos:line="34" pos:column="16">()<pos:position pos:line="34" pos:column="18"/></argument_list></call><operator pos:line="34" pos:column="18">.<pos:position pos:line="34" pos:column="19"/></operator><call><name pos:line="34" pos:column="19">callWhenAvailable<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">call<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="34" pos:column="43">state<pos:position pos:line="34" pos:column="48"/></name><operator pos:line="34" pos:column="48">.<pos:position pos:line="34" pos:column="49"/></operator><name pos:line="34" pos:column="49">waitedForService<pos:position pos:line="34" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="34" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="35" pos:column="9">comment<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">=<pos:position pos:line="35" pos:column="18"/></operator> <literal type="string" pos:line="35" pos:column="19">"to be available"<pos:position pos:line="35" pos:column="36"/></literal></expr>;<pos:position pos:line="35" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="36" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">debugs<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><literal type="number" pos:line="38" pos:column="12">93<pos:position pos:line="38" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="16">7<pos:position pos:line="38" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="19">HERE<pos:position pos:line="38" pos:column="23"/></name> <operator pos:line="38" pos:column="24">&lt;&lt;<pos:position pos:line="38" pos:column="32"/></operator> <literal type="string" pos:line="38" pos:column="27">"will wait for the service "<pos:position pos:line="38" pos:column="55"/></literal> <operator pos:line="38" pos:column="56">&lt;&lt;<pos:position pos:line="38" pos:column="64"/></operator> <name pos:line="38" pos:column="59">comment<pos:position pos:line="38" pos:column="66"/></name> <operator pos:line="38" pos:column="67">&lt;&lt;<pos:position pos:line="38" pos:column="75"/></operator>  <call><name pos:line="38" pos:column="71">status<pos:position pos:line="38" pos:column="77"/></name><argument_list pos:line="38" pos:column="77">()<pos:position pos:line="38" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="81"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">state<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">.<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="11">serviceWaiting<pos:position pos:line="39" pos:column="25"/></name></name> <operator pos:line="39" pos:column="26">=<pos:position pos:line="39" pos:column="27"/></operator> <literal type="boolean" pos:line="39" pos:column="28">true<pos:position pos:line="39" pos:column="32"/></literal></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt> <comment type="line" pos:line="39" pos:column="34">// after callWhenReady() which may throw</comment>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">state<pos:position pos:line="40" pos:column="10"/></name><operator pos:line="40" pos:column="10">.<pos:position pos:line="40" pos:column="11"/></operator><name pos:line="40" pos:column="11">waitedForService<pos:position pos:line="40" pos:column="27"/></name></name> <operator pos:line="40" pos:column="28">=<pos:position pos:line="40" pos:column="29"/></operator> <literal type="boolean" pos:line="40" pos:column="30">true<pos:position pos:line="40" pos:column="34"/></literal></expr>;<pos:position pos:line="40" pos:column="35"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

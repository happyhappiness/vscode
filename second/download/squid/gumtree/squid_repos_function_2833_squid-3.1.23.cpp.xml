<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2833_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">parse_wccp2_amethod<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">int<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">method<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">t<pos:position pos:line="4" pos:column="12"/></name></decl>;<pos:position pos:line="4" pos:column="13"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Snarf the method */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">t<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name pos:line="7" pos:column="14">strtok<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="27">w_space<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call><operator pos:line="7" pos:column="35">)<pos:position pos:line="7" pos:column="36"/></operator> <operator pos:line="7" pos:column="37">==<pos:position pos:line="7" pos:column="39"/></operator> <name pos:line="7" pos:column="40">NULL<pos:position pos:line="7" pos:column="44"/></name></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45"> <block pos:line="7" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">80<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="20">DBG_CRITICAL<pos:position pos:line="8" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">"wccp2_assignment_method: missing setting."<pos:position pos:line="8" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">self_destruct<pos:position pos:line="9" pos:column="22"/></name><argument_list pos:line="9" pos:column="22">()<pos:position pos:line="9" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="12" pos:column="5">/* update configuration if its valid */</comment>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><call><name pos:line="13" pos:column="9">strcmp<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">t<pos:position pos:line="13" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"hash"<pos:position pos:line="13" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call> <operator pos:line="13" pos:column="27">==<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="30">0<pos:position pos:line="13" pos:column="31"/></literal> <operator pos:line="13" pos:column="32">||<pos:position pos:line="13" pos:column="34"/></operator> <call><name pos:line="13" pos:column="35">strcmp<pos:position pos:line="13" pos:column="41"/></name><argument_list pos:line="13" pos:column="41">(<argument><expr><name pos:line="13" pos:column="42">t<pos:position pos:line="13" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="45">"1"<pos:position pos:line="13" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call> <operator pos:line="13" pos:column="50">==<pos:position pos:line="13" pos:column="52"/></operator> <literal type="number" pos:line="13" pos:column="53">0<pos:position pos:line="13" pos:column="54"/></literal></expr>)<pos:position pos:line="13" pos:column="55"/></condition><then pos:line="13" pos:column="55"> <block pos:line="13" pos:column="56">{
        <expr_stmt><expr><operator pos:line="14" pos:column="9">*<pos:position pos:line="14" pos:column="10"/></operator><name pos:line="14" pos:column="10">method<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <name pos:line="14" pos:column="19">WCCP2_ASSIGNMENT_METHOD_HASH<pos:position pos:line="14" pos:column="47"/></name></expr>;<pos:position pos:line="14" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <elseif pos:line="15" pos:column="7">else <if pos:line="15" pos:column="12">if <condition pos:line="15" pos:column="15">(<expr><call><name pos:line="15" pos:column="16">strcmp<pos:position pos:line="15" pos:column="22"/></name><argument_list pos:line="15" pos:column="22">(<argument><expr><name pos:line="15" pos:column="23">t<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="26">"mask"<pos:position pos:line="15" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="33"/></argument_list></call> <operator pos:line="15" pos:column="34">==<pos:position pos:line="15" pos:column="36"/></operator> <literal type="number" pos:line="15" pos:column="37">0<pos:position pos:line="15" pos:column="38"/></literal> <operator pos:line="15" pos:column="39">||<pos:position pos:line="15" pos:column="41"/></operator> <call><name pos:line="15" pos:column="42">strcmp<pos:position pos:line="15" pos:column="48"/></name><argument_list pos:line="15" pos:column="48">(<argument><expr><name pos:line="15" pos:column="49">t<pos:position pos:line="15" pos:column="50"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="52">"2"<pos:position pos:line="15" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="56"/></argument_list></call> <operator pos:line="15" pos:column="57">==<pos:position pos:line="15" pos:column="59"/></operator> <literal type="number" pos:line="15" pos:column="60">0<pos:position pos:line="15" pos:column="61"/></literal></expr>)<pos:position pos:line="15" pos:column="62"/></condition><then pos:line="15" pos:column="62"> <block pos:line="15" pos:column="63">{
        <expr_stmt><expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">method<pos:position pos:line="16" pos:column="16"/></name> <operator pos:line="16" pos:column="17">=<pos:position pos:line="16" pos:column="18"/></operator> <name pos:line="16" pos:column="19">WCCP2_ASSIGNMENT_METHOD_MASK<pos:position pos:line="16" pos:column="47"/></name></expr>;<pos:position pos:line="16" pos:column="48"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif> <else pos:line="17" pos:column="7">else <block pos:line="17" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">80<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="20">DBG_CRITICAL<pos:position pos:line="18" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="34">"wccp2_assignment_method: unknown setting, got "<pos:position pos:line="18" pos:column="82"/></literal> <operator pos:line="18" pos:column="83">&lt;&lt;<pos:position pos:line="18" pos:column="91"/></operator> <name pos:line="18" pos:column="86">t<pos:position pos:line="18" pos:column="87"/></name></expr></argument> )<pos:position pos:line="18" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="90"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">self_destruct<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">()<pos:position pos:line="19" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

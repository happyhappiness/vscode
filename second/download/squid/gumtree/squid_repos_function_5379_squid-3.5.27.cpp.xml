<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5379_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Client<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">noteAdaptationAclCheckDone<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><name><name pos:line="2" pos:column="36">Adaptation<pos:position pos:line="2" pos:column="46"/></name><operator pos:line="2" pos:column="46">::<pos:position pos:line="2" pos:column="48"/></operator><name pos:line="2" pos:column="48">ServiceGroupPointer<pos:position pos:line="2" pos:column="67"/></name></name></type> <name pos:line="2" pos:column="68">group<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">adaptationAccessCheckPending<pos:position pos:line="4" pos:column="33"/></name> <operator pos:line="4" pos:column="34">=<pos:position pos:line="4" pos:column="35"/></operator> <literal type="boolean" pos:line="4" pos:column="36">false<pos:position pos:line="4" pos:column="41"/></literal></expr>;<pos:position pos:line="4" pos:column="42"/></expr_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">abortOnBadEntry<pos:position pos:line="6" pos:column="24"/></name><argument_list pos:line="6" pos:column="24">(<argument><expr><literal type="string" pos:line="6" pos:column="25">"entry went bad while waiting for ICAP ACL check"<pos:position pos:line="6" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="76"/></condition><then pos:line="6" pos:column="76">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <comment type="line" pos:line="9" pos:column="5">// TODO: Should non-ICAP and ICAP REPMOD pre-cache paths check this?</comment>
    <comment type="line" pos:line="10" pos:column="5">// That check now only happens on REQMOD pre-cache and REPMOD post-cache, in processReplyAccess().</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><call><name pos:line="11" pos:column="9">virginReply<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">()<pos:position pos:line="11" pos:column="22"/></argument_list></call><operator pos:line="11" pos:column="22">-&gt;<pos:position pos:line="11" pos:column="27"/></operator><call><name pos:line="11" pos:column="24">expectedBodyTooLarge<pos:position pos:line="11" pos:column="44"/></name><argument_list pos:line="11" pos:column="44">(<argument><expr><operator pos:line="11" pos:column="45">*<pos:position pos:line="11" pos:column="46"/></operator><name pos:line="11" pos:column="46">request<pos:position pos:line="11" pos:column="53"/></name></expr></argument>)<pos:position pos:line="11" pos:column="54"/></argument_list></call></expr>)<pos:position pos:line="11" pos:column="55"/></condition><then pos:line="11" pos:column="55"> <block pos:line="11" pos:column="56">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">sendBodyIsTooLargeError<pos:position pos:line="12" pos:column="32"/></name><argument_list pos:line="12" pos:column="32">()<pos:position pos:line="12" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="35"/></expr_stmt>
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <comment type="line" pos:line="15" pos:column="5">// TODO: Should we check receivedBodyTooLarge as well?</comment>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><operator pos:line="17" pos:column="9">!<pos:position pos:line="17" pos:column="10"/></operator><name pos:line="17" pos:column="10">group<pos:position pos:line="17" pos:column="15"/></name></expr>)<pos:position pos:line="17" pos:column="16"/></condition><then pos:line="17" pos:column="16"> <block pos:line="17" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">11<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="18" pos:column="19">3<pos:position pos:line="18" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="22">HERE<pos:position pos:line="18" pos:column="26"/></name> <operator pos:line="18" pos:column="27">&lt;&lt;<pos:position pos:line="18" pos:column="35"/></operator> <literal type="string" pos:line="18" pos:column="30">"no adapation needed"<pos:position pos:line="18" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">setFinalReply<pos:position pos:line="19" pos:column="22"/></name><argument_list pos:line="19" pos:column="22">(<argument><expr><call><name pos:line="19" pos:column="23">virginReply<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">()<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">processReplyBody<pos:position pos:line="20" pos:column="25"/></name><argument_list pos:line="20" pos:column="25">()<pos:position pos:line="20" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="28"/></expr_stmt>
        <return pos:line="21" pos:column="9">return;<pos:position pos:line="21" pos:column="16"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="24" pos:column="5">startAdaptation<pos:position pos:line="24" pos:column="20"/></name><argument_list pos:line="24" pos:column="20">(<argument><expr><name pos:line="24" pos:column="21">group<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="28">originalRequest<pos:position pos:line="24" pos:column="43"/></name><argument_list pos:line="24" pos:column="43">()<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="25" pos:column="5">processReplyBody<pos:position pos:line="25" pos:column="21"/></name><argument_list pos:line="25" pos:column="21">()<pos:position pos:line="25" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="24"/></expr_stmt>
}<pos:position pos:line="26" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4113_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">VirginBodyAct<pos:position pos:line="1" pos:column="37"/></name><operator pos:line="1" pos:column="37">::<pos:position pos:line="1" pos:column="39"/></operator><name pos:line="1" pos:column="39">progress<pos:position pos:line="1" pos:column="47"/></name></name><parameter_list pos:line="1" pos:column="47">(<parameter><decl><type><name pos:line="1" pos:column="48">size_t<pos:position pos:line="1" pos:column="54"/></name></type> <name pos:line="1" pos:column="55">size<pos:position pos:line="1" pos:column="59"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="60"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><call><name pos:line="3" pos:column="10">active<pos:position pos:line="3" pos:column="16"/></name><argument_list pos:line="3" pos:column="16">()<pos:position pos:line="3" pos:column="18"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="20"/></expr_stmt>
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">SIZEOF_SIZE_T<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">&gt;<pos:position pos:line="4" pos:column="23"/></operator> <literal type="number" pos:line="4" pos:column="21">4<pos:position pos:line="4" pos:column="22"/></literal></expr></cpp:if>
    <comment type="block" pos:line="5" pos:column="5">/* always true for smaller size_t's */</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><cast type="static" pos:line="6" pos:column="10">static_cast<argument_list type="generic" pos:line="6" pos:column="21">&lt;<argument><expr><name pos:line="6" pos:column="22">int64_t<pos:position pos:line="6" pos:column="29"/></name></expr></argument>&gt;<pos:position pos:line="6" pos:column="33"/></argument_list><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">size<pos:position pos:line="6" pos:column="35"/></name></expr></argument>)<pos:position pos:line="6" pos:column="36"/></argument_list></cast> <operator pos:line="6" pos:column="37">&gt;=<pos:position pos:line="6" pos:column="42"/></operator> <literal type="number" pos:line="6" pos:column="40">0<pos:position pos:line="6" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt>
<cpp:endif pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">endif<pos:position pos:line="7" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><name pos:line="8" pos:column="5">theStart<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">+=<pos:position pos:line="8" pos:column="16"/></operator> <cast type="static" pos:line="8" pos:column="17">static_cast<argument_list type="generic" pos:line="8" pos:column="28">&lt;<argument><expr><name pos:line="8" pos:column="29">int64_t<pos:position pos:line="8" pos:column="36"/></name></expr></argument>&gt;<pos:position pos:line="8" pos:column="40"/></argument_list><argument_list pos:line="8" pos:column="37">(<argument><expr><name pos:line="8" pos:column="38">size<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></cast></expr>;<pos:position pos:line="8" pos:column="44"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

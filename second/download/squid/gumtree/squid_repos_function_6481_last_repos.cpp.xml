<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6481_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">DiskerOpen<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">SBuf<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">&amp;<pos:position pos:line="2" pos:column="28"/></modifier></type><name pos:line="2" pos:column="24">path<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">flags<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">mode_t<pos:position pos:line="2" pos:column="47"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">TheFile<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">&lt;<pos:position pos:line="4" pos:column="24"/></operator> <literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">DbName<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">path<pos:position pos:line="6" pos:column="18"/></name></expr>;<pos:position pos:line="6" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">TheFile<pos:position pos:line="7" pos:column="12"/></name> <operator pos:line="7" pos:column="13">=<pos:position pos:line="7" pos:column="14"/></operator> <call><name pos:line="7" pos:column="15">file_open<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">(<argument><expr><call><name><name pos:line="7" pos:column="25">DbName<pos:position pos:line="7" pos:column="31"/></name><operator pos:line="7" pos:column="31">.<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="32">c_str<pos:position pos:line="7" pos:column="37"/></name></name><argument_list pos:line="7" pos:column="37">()<pos:position pos:line="7" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="41">flags<pos:position pos:line="7" pos:column="46"/></name></expr></argument>)<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="48"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">TheFile<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">&lt;<pos:position pos:line="9" pos:column="21"/></operator> <literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr>)<pos:position pos:line="9" pos:column="21"/></condition><then pos:line="9" pos:column="21"> <block pos:line="9" pos:column="22">{
        <decl_stmt><decl><type><specifier pos:line="10" pos:column="9">const<pos:position pos:line="10" pos:column="14"/></specifier> <name pos:line="10" pos:column="15">int<pos:position pos:line="10" pos:column="18"/></name></type> <name pos:line="10" pos:column="19">xerrno<pos:position pos:line="10" pos:column="25"/></name> <init pos:line="10" pos:column="26">= <expr><name pos:line="10" pos:column="28">errno<pos:position pos:line="10" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="34"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">47<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">DBG_CRITICAL<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="34">"ERROR: cannot open "<pos:position pos:line="11" pos:column="55"/></literal> <operator pos:line="11" pos:column="56">&lt;&lt;<pos:position pos:line="11" pos:column="64"/></operator> <name pos:line="11" pos:column="59">DbName<pos:position pos:line="11" pos:column="65"/></name> <operator pos:line="11" pos:column="66">&lt;&lt;<pos:position pos:line="11" pos:column="74"/></operator> <literal type="string" pos:line="11" pos:column="69">": "<pos:position pos:line="11" pos:column="73"/></literal> <operator pos:line="11" pos:column="74">&lt;&lt;<pos:position pos:line="11" pos:column="82"/></operator>
               <call><name pos:line="12" pos:column="16">xstrerr<pos:position pos:line="12" pos:column="23"/></name><argument_list pos:line="12" pos:column="23">(<argument><expr><name pos:line="12" pos:column="24">xerrno<pos:position pos:line="12" pos:column="30"/></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr></argument>)<pos:position pos:line="12" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="33"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><literal type="boolean" pos:line="13" pos:column="16">false<pos:position pos:line="13" pos:column="21"/></literal></expr>;<pos:position pos:line="13" pos:column="22"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="16" pos:column="5">++<pos:position pos:line="16" pos:column="7"/></operator><name pos:line="16" pos:column="7">store_open_disk_fd<pos:position pos:line="16" pos:column="25"/></name></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">79<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="17" pos:column="15">3<pos:position pos:line="17" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="18">"rock db opened "<pos:position pos:line="17" pos:column="35"/></literal> <operator pos:line="17" pos:column="36">&lt;&lt;<pos:position pos:line="17" pos:column="44"/></operator> <name pos:line="17" pos:column="39">DbName<pos:position pos:line="17" pos:column="45"/></name> <operator pos:line="17" pos:column="46">&lt;&lt;<pos:position pos:line="17" pos:column="54"/></operator> <literal type="string" pos:line="17" pos:column="49">": FD "<pos:position pos:line="17" pos:column="56"/></literal> <operator pos:line="17" pos:column="57">&lt;&lt;<pos:position pos:line="17" pos:column="65"/></operator> <name pos:line="17" pos:column="60">TheFile<pos:position pos:line="17" pos:column="67"/></name></expr></argument>)<pos:position pos:line="17" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="69"/></expr_stmt>
    <return pos:line="18" pos:column="5">return <expr><literal type="boolean" pos:line="18" pos:column="12">true<pos:position pos:line="18" pos:column="16"/></literal></expr>;<pos:position pos:line="18" pos:column="17"/></return>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

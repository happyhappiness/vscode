<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4455_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">ssl_next_proto_cb<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">SSL<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">s<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="27">unsigned<pos:position pos:line="2" pos:column="35"/></name> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier><modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="43">out<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">unsigned<pos:position pos:line="2" pos:column="56"/></name> <name pos:line="2" pos:column="57">char<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">outlen<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="71">const<pos:position pos:line="2" pos:column="76"/></specifier> <name pos:line="2" pos:column="77">unsigned<pos:position pos:line="2" pos:column="85"/></name> <name pos:line="2" pos:column="86">char<pos:position pos:line="2" pos:column="90"/></name> <modifier pos:line="2" pos:column="91">*<pos:position pos:line="2" pos:column="92"/></modifier></type><name pos:line="2" pos:column="92">in<pos:position pos:line="2" pos:column="94"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="96">unsigned<pos:position pos:line="2" pos:column="104"/></name> <name pos:line="2" pos:column="105">int<pos:position pos:line="2" pos:column="108"/></name></type> <name pos:line="2" pos:column="109">inlen<pos:position pos:line="2" pos:column="114"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="116">void<pos:position pos:line="2" pos:column="120"/></name> <modifier pos:line="2" pos:column="121">*<pos:position pos:line="2" pos:column="122"/></modifier></type><name pos:line="2" pos:column="122">arg<pos:position pos:line="2" pos:column="125"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="126"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><specifier pos:line="4" pos:column="12">const<pos:position pos:line="4" pos:column="17"/></specifier> <name pos:line="4" pos:column="18">unsigned<pos:position pos:line="4" pos:column="26"/></name> <name pos:line="4" pos:column="27">char<pos:position pos:line="4" pos:column="31"/></name></type> <name><name pos:line="4" pos:column="32">supported_protos<pos:position pos:line="4" pos:column="48"/></name><index pos:line="4" pos:column="48">[]<pos:position pos:line="4" pos:column="50"/></index></name> <init pos:line="4" pos:column="51">= <expr><block pos:line="4" pos:column="53">{<expr><literal type="number" pos:line="4" pos:column="54">8<pos:position pos:line="4" pos:column="55"/></literal></expr>, <expr><literal type="char" pos:line="4" pos:column="57">'h'<pos:position pos:line="4" pos:column="60"/></literal></expr>,<expr><literal type="char" pos:line="4" pos:column="61">'t'<pos:position pos:line="4" pos:column="64"/></literal></expr>,<expr><literal type="char" pos:line="4" pos:column="65">'t'<pos:position pos:line="4" pos:column="68"/></literal></expr>, <expr><literal type="char" pos:line="4" pos:column="70">'p'<pos:position pos:line="4" pos:column="73"/></literal></expr>, <expr><literal type="char" pos:line="4" pos:column="75">'/'<pos:position pos:line="4" pos:column="78"/></literal></expr>, <expr><literal type="char" pos:line="4" pos:column="80">'1'<pos:position pos:line="4" pos:column="83"/></literal></expr>, <expr><literal type="char" pos:line="4" pos:column="85">'.'<pos:position pos:line="4" pos:column="88"/></literal></expr>, <expr><literal type="char" pos:line="4" pos:column="90">'1'<pos:position pos:line="4" pos:column="93"/></literal></expr>}<pos:position pos:line="4" pos:column="94"/></block></expr></init></decl>;<pos:position pos:line="4" pos:column="95"/></decl_stmt>
    <expr_stmt><expr><operator pos:line="5" pos:column="5">(<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">void<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">)<pos:position pos:line="5" pos:column="11"/></operator><call><name pos:line="5" pos:column="11">SSL_select_next_proto<pos:position pos:line="5" pos:column="32"/></name><argument_list pos:line="5" pos:column="32">(<argument><expr><name pos:line="5" pos:column="33">out<pos:position pos:line="5" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="38">outlen<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">in<pos:position pos:line="5" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="50">inlen<pos:position pos:line="5" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="57">supported_protos<pos:position pos:line="5" pos:column="73"/></name></expr></argument>, <argument><expr><sizeof pos:line="5" pos:column="75">sizeof<argument_list pos:line="5" pos:column="81">(<argument><expr><name pos:line="5" pos:column="82">supported_protos<pos:position pos:line="5" pos:column="98"/></name></expr></argument>)<pos:position pos:line="5" pos:column="99"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="5" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="101"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><name pos:line="6" pos:column="12">SSL_TLSEXT_ERR_OK<pos:position pos:line="6" pos:column="29"/></name></expr>;<pos:position pos:line="6" pos:column="30"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5694_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">malloc_statistics<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><function_decl><type><name pos:line="2" pos:column="19">void<pos:position pos:line="2" pos:column="23"/></name></type> (<modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier><name pos:line="2" pos:column="26">func<pos:position pos:line="2" pos:column="30"/></name>) <parameter_list pos:line="2" pos:column="32">(<parameter><decl><type><name pos:line="2" pos:column="33">int<pos:position pos:line="2" pos:column="36"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">void<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list></function_decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">void<pos:position pos:line="2" pos:column="61"/></name> <modifier pos:line="2" pos:column="62">*<pos:position pos:line="2" pos:column="63"/></modifier></type><name pos:line="2" pos:column="63">data<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="68"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name></decl>;<pos:position pos:line="4" pos:column="11"/></decl_stmt>

    <for pos:line="6" pos:column="5">for <control pos:line="6" pos:column="9">(<init><expr><name pos:line="6" pos:column="10">i<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <literal type="number" pos:line="6" pos:column="14">0<pos:position pos:line="6" pos:column="15"/></literal></expr>;<pos:position pos:line="6" pos:column="16"/></init> <condition><expr><name pos:line="6" pos:column="17">i<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&lt;=<pos:position pos:line="6" pos:column="24"/></operator> <name pos:line="6" pos:column="22">DBG_SPLIT<pos:position pos:line="6" pos:column="31"/></name></expr>;<pos:position pos:line="6" pos:column="32"/></condition> <incr><expr><name pos:line="6" pos:column="33">i<pos:position pos:line="6" pos:column="34"/></name> <operator pos:line="6" pos:column="35">+=<pos:position pos:line="6" pos:column="37"/></operator> <name pos:line="6" pos:column="38">DBG_GRAIN_SM<pos:position pos:line="6" pos:column="50"/></name></expr></incr>)<pos:position pos:line="6" pos:column="51"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="7" pos:column="9">func<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name pos:line="7" pos:column="14">i<pos:position pos:line="7" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="17">malloc_sizes<pos:position pos:line="7" pos:column="29"/></name><index pos:line="7" pos:column="29">[<expr><call><name pos:line="7" pos:column="30">DBG_INDEX<pos:position pos:line="7" pos:column="39"/></name><argument_list pos:line="7" pos:column="39">(<argument><expr><name pos:line="7" pos:column="40">i<pos:position pos:line="7" pos:column="41"/></name></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>]<pos:position pos:line="7" pos:column="43"/></index></name></expr></argument>, <argument><expr><name><name pos:line="7" pos:column="45">malloc_histo<pos:position pos:line="7" pos:column="57"/></name><index pos:line="7" pos:column="57">[<expr><call><name pos:line="7" pos:column="58">DBG_INDEX<pos:position pos:line="7" pos:column="67"/></name><argument_list pos:line="7" pos:column="67">(<argument><expr><name pos:line="7" pos:column="68">i<pos:position pos:line="7" pos:column="69"/></name></expr></argument>)<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr>]<pos:position pos:line="7" pos:column="71"/></index></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="73">data<pos:position pos:line="7" pos:column="77"/></name></expr></argument>)<pos:position pos:line="7" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="79"/></expr_stmt></block></for>

    <expr_stmt><expr><name pos:line="9" pos:column="5">i<pos:position pos:line="9" pos:column="6"/></name> <operator pos:line="9" pos:column="7">-=<pos:position pos:line="9" pos:column="9"/></operator> <name pos:line="9" pos:column="10">DBG_GRAIN_SM<pos:position pos:line="9" pos:column="22"/></name></expr>;<pos:position pos:line="9" pos:column="23"/></expr_stmt>

    <for pos:line="11" pos:column="5">for <control pos:line="11" pos:column="9">(<init><expr><name pos:line="11" pos:column="10">i<pos:position pos:line="11" pos:column="11"/></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">i<pos:position pos:line="11" pos:column="15"/></name></expr>;<pos:position pos:line="11" pos:column="16"/></init> <condition><expr><name pos:line="11" pos:column="17">i<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&lt;=<pos:position pos:line="11" pos:column="24"/></operator> <name pos:line="11" pos:column="22">DBG_MAXSIZE<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></condition> <incr><expr><name pos:line="11" pos:column="35">i<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">+=<pos:position pos:line="11" pos:column="39"/></operator> <name pos:line="11" pos:column="40">DBG_GRAIN<pos:position pos:line="11" pos:column="49"/></name></expr></incr>)<pos:position pos:line="11" pos:column="50"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="12" pos:column="9">func<pos:position pos:line="12" pos:column="13"/></name><argument_list pos:line="12" pos:column="13">(<argument><expr><name pos:line="12" pos:column="14">i<pos:position pos:line="12" pos:column="15"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="17">malloc_sizes<pos:position pos:line="12" pos:column="29"/></name><index pos:line="12" pos:column="29">[<expr><call><name pos:line="12" pos:column="30">DBG_INDEX<pos:position pos:line="12" pos:column="39"/></name><argument_list pos:line="12" pos:column="39">(<argument><expr><name pos:line="12" pos:column="40">i<pos:position pos:line="12" pos:column="41"/></name></expr></argument>)<pos:position pos:line="12" pos:column="42"/></argument_list></call></expr>]<pos:position pos:line="12" pos:column="43"/></index></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="45">malloc_histo<pos:position pos:line="12" pos:column="57"/></name><index pos:line="12" pos:column="57">[<expr><call><name pos:line="12" pos:column="58">DBG_INDEX<pos:position pos:line="12" pos:column="67"/></name><argument_list pos:line="12" pos:column="67">(<argument><expr><name pos:line="12" pos:column="68">i<pos:position pos:line="12" pos:column="69"/></name></expr></argument>)<pos:position pos:line="12" pos:column="70"/></argument_list></call></expr>]<pos:position pos:line="12" pos:column="71"/></index></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="73">data<pos:position pos:line="12" pos:column="77"/></name></expr></argument>)<pos:position pos:line="12" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="79"/></expr_stmt></block></for>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">xmemcpy<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><operator pos:line="14" pos:column="13">&amp;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="14">malloc_histo<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="14" pos:column="28">&amp;<pos:position pos:line="14" pos:column="33"/></operator><name pos:line="14" pos:column="29">malloc_sizes<pos:position pos:line="14" pos:column="41"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="43">sizeof<argument_list pos:line="14" pos:column="49">(<argument><expr><name pos:line="14" pos:column="50">malloc_sizes<pos:position pos:line="14" pos:column="62"/></name></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="65"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

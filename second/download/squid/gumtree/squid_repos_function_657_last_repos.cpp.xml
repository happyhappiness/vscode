<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_657_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">HttpMsg<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">parseHeader<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">Http1<pos:position pos:line="2" pos:column="27"/></name><operator pos:line="2" pos:column="27">::<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="29">Parser<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">&amp;<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="37">hp<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="line" pos:line="4" pos:column="5">// HTTP/1 message contains "zero or more header fields"</comment>
    <comment type="line" pos:line="5" pos:column="5">// zero does not need parsing</comment>
    <comment type="line" pos:line="6" pos:column="5">// XXX: c_str() reallocates. performance regression.</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name><name pos:line="7" pos:column="9">hp<pos:position pos:line="7" pos:column="11"/></name><operator pos:line="7" pos:column="11">.<pos:position pos:line="7" pos:column="12"/></operator><name pos:line="7" pos:column="12">headerBlockSize<pos:position pos:line="7" pos:column="27"/></name></name><argument_list pos:line="7" pos:column="27">()<pos:position pos:line="7" pos:column="29"/></argument_list></call> <operator pos:line="7" pos:column="30">&amp;&amp;<pos:position pos:line="7" pos:column="40"/></operator> <operator pos:line="7" pos:column="33">!<pos:position pos:line="7" pos:column="34"/></operator><call><name><name pos:line="7" pos:column="34">header<pos:position pos:line="7" pos:column="40"/></name><operator pos:line="7" pos:column="40">.<pos:position pos:line="7" pos:column="41"/></operator><name pos:line="7" pos:column="41">parse<pos:position pos:line="7" pos:column="46"/></name></name><argument_list pos:line="7" pos:column="46">(<argument><expr><call><name><name pos:line="7" pos:column="47">hp<pos:position pos:line="7" pos:column="49"/></name><operator pos:line="7" pos:column="49">.<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="50">mimeHeader<pos:position pos:line="7" pos:column="60"/></name></name><argument_list pos:line="7" pos:column="60">()<pos:position pos:line="7" pos:column="62"/></argument_list></call><operator pos:line="7" pos:column="62">.<pos:position pos:line="7" pos:column="63"/></operator><call><name pos:line="7" pos:column="63">c_str<pos:position pos:line="7" pos:column="68"/></name><argument_list pos:line="7" pos:column="68">()<pos:position pos:line="7" pos:column="70"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="7" pos:column="72">hp<pos:position pos:line="7" pos:column="74"/></name><operator pos:line="7" pos:column="74">.<pos:position pos:line="7" pos:column="75"/></operator><name pos:line="7" pos:column="75">headerBlockSize<pos:position pos:line="7" pos:column="90"/></name></name><argument_list pos:line="7" pos:column="90">()<pos:position pos:line="7" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="93"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="94"/></condition><then pos:line="7" pos:column="94"> <block pos:line="7" pos:column="95">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">pstate<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <name pos:line="8" pos:column="18">psError<pos:position pos:line="8" pos:column="25"/></name></expr>;<pos:position pos:line="8" pos:column="26"/></expr_stmt>
        <return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">false<pos:position pos:line="9" pos:column="21"/></literal></expr>;<pos:position pos:line="9" pos:column="22"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="12" pos:column="5">// XXX: we are just parsing HTTP headers, not the whole message prefix here</comment>
    <expr_stmt><expr><name pos:line="13" pos:column="5">hdr_sz<pos:position pos:line="13" pos:column="11"/></name> <operator pos:line="13" pos:column="12">=<pos:position pos:line="13" pos:column="13"/></operator> <call><name><name pos:line="13" pos:column="14">hp<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">.<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="17">messageHeaderSize<pos:position pos:line="13" pos:column="34"/></name></name><argument_list pos:line="13" pos:column="34">()<pos:position pos:line="13" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name pos:line="14" pos:column="5">pstate<pos:position pos:line="14" pos:column="11"/></name> <operator pos:line="14" pos:column="12">=<pos:position pos:line="14" pos:column="13"/></operator> <name pos:line="14" pos:column="14">psParsed<pos:position pos:line="14" pos:column="22"/></name></expr>;<pos:position pos:line="14" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">hdrCacheInit<pos:position pos:line="15" pos:column="17"/></name><argument_list pos:line="15" pos:column="17">()<pos:position pos:line="15" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="20"/></expr_stmt>
    <return pos:line="16" pos:column="5">return <expr><literal type="boolean" pos:line="16" pos:column="12">true<pos:position pos:line="16" pos:column="16"/></literal></expr>;<pos:position pos:line="16" pos:column="17"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

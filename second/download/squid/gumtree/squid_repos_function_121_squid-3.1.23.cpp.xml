<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_121_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">char<pos:position pos:line="1" pos:column="5"/></name> <modifier pos:line="1" pos:column="6">*<pos:position pos:line="1" pos:column="7"/></modifier></type>
<name pos:line="2" pos:column="1">GetDomainName<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><name pos:line="2" pos:column="15">void<pos:position pos:line="2" pos:column="19"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="20"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><name pos:line="4" pos:column="12">char<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">DomainName<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name pos:line="4" pos:column="31">NULL<pos:position pos:line="4" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">PDSROLE_PRIMARY_DOMAIN_INFO_BASIC<pos:position pos:line="5" pos:column="38"/></name></type> <name pos:line="5" pos:column="39">pDSRoleInfo<pos:position pos:line="5" pos:column="50"/></name></decl>;<pos:position pos:line="5" pos:column="51"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">DWORD<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">netret<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">(<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">netret<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <call><name pos:line="8" pos:column="19">DsRoleGetPrimaryDomainInformation<pos:position pos:line="8" pos:column="52"/></name><argument_list pos:line="8" pos:column="52">(<argument><expr><name pos:line="8" pos:column="53">NULL<pos:position pos:line="8" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="59">DsRolePrimaryDomainInfoBasic<pos:position pos:line="8" pos:column="87"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="89">(<pos:position pos:line="8" pos:column="90"/></operator><name pos:line="8" pos:column="90">PBYTE<pos:position pos:line="8" pos:column="95"/></name> <operator pos:line="8" pos:column="96">*<pos:position pos:line="8" pos:column="97"/></operator><operator pos:line="8" pos:column="97">)<pos:position pos:line="8" pos:column="98"/></operator> <operator pos:line="8" pos:column="99">&amp;<pos:position pos:line="8" pos:column="104"/></operator> <name pos:line="8" pos:column="101">pDSRoleInfo<pos:position pos:line="8" pos:column="112"/></name></expr></argument>)<pos:position pos:line="8" pos:column="113"/></argument_list></call> <operator pos:line="8" pos:column="114">==<pos:position pos:line="8" pos:column="116"/></operator> <name pos:line="8" pos:column="117">ERROR_SUCCESS<pos:position pos:line="8" pos:column="130"/></name><operator pos:line="8" pos:column="130">)<pos:position pos:line="8" pos:column="131"/></operator></expr>)<pos:position pos:line="8" pos:column="132"/></condition><then pos:line="8" pos:column="132"> <block pos:line="8" pos:column="133">{
        <comment type="block" pos:line="9" pos:column="9">/*
         * Check the machine role.
         */</comment>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><operator pos:line="13" pos:column="13">(<pos:position pos:line="13" pos:column="14"/></operator><name><name pos:line="13" pos:column="14">pDSRoleInfo<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">MachineRole<pos:position pos:line="13" pos:column="38"/></name></name> <operator pos:line="13" pos:column="39">==<pos:position pos:line="13" pos:column="41"/></operator> <name pos:line="13" pos:column="42">DsRole_RoleMemberWorkstation<pos:position pos:line="13" pos:column="70"/></name><operator pos:line="13" pos:column="70">)<pos:position pos:line="13" pos:column="71"/></operator> <operator pos:line="13" pos:column="72">||<pos:position pos:line="13" pos:column="74"/></operator>
                <operator pos:line="14" pos:column="17">(<pos:position pos:line="14" pos:column="18"/></operator><name><name pos:line="14" pos:column="18">pDSRoleInfo<pos:position pos:line="14" pos:column="29"/></name><operator pos:line="14" pos:column="29">-&gt;<pos:position pos:line="14" pos:column="34"/></operator><name pos:line="14" pos:column="31">MachineRole<pos:position pos:line="14" pos:column="42"/></name></name> <operator pos:line="14" pos:column="43">==<pos:position pos:line="14" pos:column="45"/></operator> <name pos:line="14" pos:column="46">DsRole_RoleMemberServer<pos:position pos:line="14" pos:column="69"/></name><operator pos:line="14" pos:column="69">)<pos:position pos:line="14" pos:column="70"/></operator> <operator pos:line="14" pos:column="71">||<pos:position pos:line="14" pos:column="73"/></operator>
                <operator pos:line="15" pos:column="17">(<pos:position pos:line="15" pos:column="18"/></operator><name><name pos:line="15" pos:column="18">pDSRoleInfo<pos:position pos:line="15" pos:column="29"/></name><operator pos:line="15" pos:column="29">-&gt;<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="31">MachineRole<pos:position pos:line="15" pos:column="42"/></name></name> <operator pos:line="15" pos:column="43">==<pos:position pos:line="15" pos:column="45"/></operator> <name pos:line="15" pos:column="46">DsRole_RoleBackupDomainController<pos:position pos:line="15" pos:column="79"/></name><operator pos:line="15" pos:column="79">)<pos:position pos:line="15" pos:column="80"/></operator> <operator pos:line="15" pos:column="81">||<pos:position pos:line="15" pos:column="83"/></operator>
                <operator pos:line="16" pos:column="17">(<pos:position pos:line="16" pos:column="18"/></operator><name><name pos:line="16" pos:column="18">pDSRoleInfo<pos:position pos:line="16" pos:column="29"/></name><operator pos:line="16" pos:column="29">-&gt;<pos:position pos:line="16" pos:column="34"/></operator><name pos:line="16" pos:column="31">MachineRole<pos:position pos:line="16" pos:column="42"/></name></name> <operator pos:line="16" pos:column="43">==<pos:position pos:line="16" pos:column="45"/></operator> <name pos:line="16" pos:column="46">DsRole_RolePrimaryDomainController<pos:position pos:line="16" pos:column="80"/></name><operator pos:line="16" pos:column="80">)<pos:position pos:line="16" pos:column="81"/></operator></expr>)<pos:position pos:line="16" pos:column="82"/></condition><then pos:line="16" pos:column="82"> <block pos:line="16" pos:column="83">{

            <decl_stmt><decl><type><name pos:line="18" pos:column="13">size_t<pos:position pos:line="18" pos:column="19"/></name></type> <name pos:line="18" pos:column="20">len<pos:position pos:line="18" pos:column="23"/></name> <init pos:line="18" pos:column="24">= <expr><call><name pos:line="18" pos:column="26">wcslen<pos:position pos:line="18" pos:column="32"/></name><argument_list pos:line="18" pos:column="32">(<argument><expr><name><name pos:line="18" pos:column="33">pDSRoleInfo<pos:position pos:line="18" pos:column="44"/></name><operator pos:line="18" pos:column="44">-&gt;<pos:position pos:line="18" pos:column="49"/></operator><name pos:line="18" pos:column="46">DomainNameFlat<pos:position pos:line="18" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="62"/></decl_stmt>

            <comment type="block" pos:line="20" pos:column="13">/* allocate buffer for str + null termination */</comment>
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">safe_free<pos:position pos:line="21" pos:column="22"/></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">DomainName<pos:position pos:line="21" pos:column="33"/></name></expr></argument>)<pos:position pos:line="21" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="22" pos:column="13">DomainName<pos:position pos:line="22" pos:column="23"/></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <operator pos:line="22" pos:column="26">(<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">char<pos:position pos:line="22" pos:column="31"/></name> <operator pos:line="22" pos:column="32">*<pos:position pos:line="22" pos:column="33"/></operator><operator pos:line="22" pos:column="33">)<pos:position pos:line="22" pos:column="34"/></operator> <call><name pos:line="22" pos:column="35">xmalloc<pos:position pos:line="22" pos:column="42"/></name><argument_list pos:line="22" pos:column="42">(<argument><expr><name pos:line="22" pos:column="43">len<pos:position pos:line="22" pos:column="46"/></name> <operator pos:line="22" pos:column="47">+<pos:position pos:line="22" pos:column="48"/></operator> <literal type="number" pos:line="22" pos:column="49">1<pos:position pos:line="22" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="52"/></expr_stmt>
            <if pos:line="23" pos:column="13">if <condition pos:line="23" pos:column="16">(<expr><name pos:line="23" pos:column="17">DomainName<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">==<pos:position pos:line="23" pos:column="30"/></operator> <name pos:line="23" pos:column="31">NULL<pos:position pos:line="23" pos:column="35"/></name></expr>)<pos:position pos:line="23" pos:column="36"/></condition><then pos:line="23" pos:column="36">
                <block type="pseudo"><return pos:line="24" pos:column="17">return <expr><name pos:line="24" pos:column="24">NULL<pos:position pos:line="24" pos:column="28"/></name></expr>;<pos:position pos:line="24" pos:column="29"/></return></block></then></if>

            <comment type="block" pos:line="26" pos:column="13">/* copy unicode buffer */</comment>
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">WideCharToMultiByte<pos:position pos:line="27" pos:column="32"/></name><argument_list pos:line="27" pos:column="32">(<argument><expr><name pos:line="27" pos:column="33">CP_ACP<pos:position pos:line="27" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="41">0<pos:position pos:line="27" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="27" pos:column="44">pDSRoleInfo<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">-&gt;<pos:position pos:line="27" pos:column="60"/></operator><name pos:line="27" pos:column="57">DomainNameFlat<pos:position pos:line="27" pos:column="71"/></name></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="73">-<pos:position pos:line="27" pos:column="74"/></operator><literal type="number" pos:line="27" pos:column="74">1<pos:position pos:line="27" pos:column="75"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="77">DomainName<pos:position pos:line="27" pos:column="87"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="89">len<pos:position pos:line="27" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="94">NULL<pos:position pos:line="27" pos:column="98"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="100">NULL<pos:position pos:line="27" pos:column="104"/></name></expr></argument>)<pos:position pos:line="27" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="106"/></expr_stmt>

            <comment type="block" pos:line="29" pos:column="13">/* add null termination */</comment>
            <expr_stmt><expr><name><name pos:line="30" pos:column="13">DomainName<pos:position pos:line="30" pos:column="23"/></name><index pos:line="30" pos:column="23">[<expr><name pos:line="30" pos:column="24">len<pos:position pos:line="30" pos:column="27"/></name></expr>]<pos:position pos:line="30" pos:column="28"/></index></name> <operator pos:line="30" pos:column="29">=<pos:position pos:line="30" pos:column="30"/></operator> <literal type="char" pos:line="30" pos:column="31">'\0'<pos:position pos:line="30" pos:column="35"/></literal></expr>;<pos:position pos:line="30" pos:column="36"/></expr_stmt>

            <comment type="block" pos:line="32" pos:column="13">/*
             * Member of a domain. Display it in debug mode.
             */</comment>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">debug<pos:position pos:line="35" pos:column="18"/></name><argument_list pos:line="35" pos:column="18">(<argument><expr><literal type="string" pos:line="35" pos:column="19">"Member of Domain %s\n"<pos:position pos:line="35" pos:column="42"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="44">DomainName<pos:position pos:line="35" pos:column="54"/></name></expr></argument>)<pos:position pos:line="35" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">debug<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><literal type="string" pos:line="36" pos:column="19">"Into forest %S\n"<pos:position pos:line="36" pos:column="37"/></literal></expr></argument>, <argument><expr><name><name pos:line="36" pos:column="39">pDSRoleInfo<pos:position pos:line="36" pos:column="50"/></name><operator pos:line="36" pos:column="50">-&gt;<pos:position pos:line="36" pos:column="55"/></operator><name pos:line="36" pos:column="52">DomainForestName<pos:position pos:line="36" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="70"/></expr_stmt>

        }<pos:position pos:line="38" pos:column="10"/></block></then> <else pos:line="38" pos:column="11">else <block pos:line="38" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="39" pos:column="13">debug<pos:position pos:line="39" pos:column="18"/></name><argument_list pos:line="39" pos:column="18">(<argument><expr><literal type="string" pos:line="39" pos:column="19">"Not a Domain member\n"<pos:position pos:line="39" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></else></if>
    }<pos:position pos:line="41" pos:column="6"/></block></then> <else pos:line="41" pos:column="7">else
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="9">debug<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><literal type="string" pos:line="42" pos:column="15">"DsRoleGetPrimaryDomainInformation Error: %ld\n"<pos:position pos:line="42" pos:column="63"/></literal></expr></argument>, <argument><expr><name pos:line="42" pos:column="65">netret<pos:position pos:line="42" pos:column="71"/></name></expr></argument>)<pos:position pos:line="42" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="73"/></expr_stmt></block></else></if>

    <comment type="block" pos:line="44" pos:column="5">/*
     * Free the allocated memory.
     */</comment>
    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">pDSRoleInfo<pos:position pos:line="47" pos:column="20"/></name> <operator pos:line="47" pos:column="21">!=<pos:position pos:line="47" pos:column="23"/></operator> <name pos:line="47" pos:column="24">NULL<pos:position pos:line="47" pos:column="28"/></name></expr>)<pos:position pos:line="47" pos:column="29"/></condition><then pos:line="47" pos:column="29">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="48" pos:column="9">DsRoleFreeMemory<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">pDSRoleInfo<pos:position pos:line="48" pos:column="37"/></name></expr></argument>)<pos:position pos:line="48" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="39"/></expr_stmt></block></then></if>

    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">DomainName<pos:position pos:line="50" pos:column="22"/></name></expr>;<pos:position pos:line="50" pos:column="23"/></return>
}<pos:position pos:line="51" pos:column="2"/></block></function></unit>

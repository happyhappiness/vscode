<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5660_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">User<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">username<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">char<pos:position pos:line="2" pos:column="26"/></name> <specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">aString<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">aString<pos:position pos:line="4" pos:column="16"/></name></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17"> <block pos:line="4" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">assert<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><operator pos:line="5" pos:column="16">!<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">username_<pos:position pos:line="5" pos:column="26"/></name></expr></argument>)<pos:position pos:line="5" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="6" pos:column="9">username_<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <call><name pos:line="6" pos:column="21">xstrdup<pos:position pos:line="6" pos:column="28"/></name><argument_list pos:line="6" pos:column="28">(<argument><expr><name pos:line="6" pos:column="29">aString<pos:position pos:line="6" pos:column="36"/></name></expr></argument>)<pos:position pos:line="6" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>
        <comment type="line" pos:line="7" pos:column="9">// NP: param #2 is working around a c_str() data-copy performance regression</comment>
        <expr_stmt><expr><name pos:line="8" pos:column="9">userKey_<pos:position pos:line="8" pos:column="17"/></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <call><name pos:line="8" pos:column="20">BuildUserKey<pos:position pos:line="8" pos:column="32"/></name><argument_list pos:line="8" pos:column="32">(<argument><expr><name pos:line="8" pos:column="33">username_<pos:position pos:line="8" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="8" pos:column="44">(<pos:position pos:line="8" pos:column="45"/></operator><ternary><condition><expr><operator pos:line="8" pos:column="45">!<pos:position pos:line="8" pos:column="46"/></operator><call><name><name pos:line="8" pos:column="46">requestRealm_<pos:position pos:line="8" pos:column="59"/></name><operator pos:line="8" pos:column="59">.<pos:position pos:line="8" pos:column="60"/></operator><name pos:line="8" pos:column="60">isEmpty<pos:position pos:line="8" pos:column="67"/></name></name><argument_list pos:line="8" pos:column="67">()<pos:position pos:line="8" pos:column="69"/></argument_list></call></expr> ?<pos:position pos:line="8" pos:column="71"/></condition><then pos:line="8" pos:column="71"> <expr><call><name><name pos:line="8" pos:column="72">requestRealm_<pos:position pos:line="8" pos:column="85"/></name><operator pos:line="8" pos:column="85">.<pos:position pos:line="8" pos:column="86"/></operator><name pos:line="8" pos:column="86">c_str<pos:position pos:line="8" pos:column="91"/></name></name><argument_list pos:line="8" pos:column="91">()<pos:position pos:line="8" pos:column="93"/></argument_list></call></expr> <pos:position pos:line="8" pos:column="94"/></then><else pos:line="8" pos:column="94">: <expr><name pos:line="8" pos:column="96">NULL<pos:position pos:line="8" pos:column="100"/></name></expr></else></ternary><operator pos:line="8" pos:column="100">)<pos:position pos:line="8" pos:column="101"/></operator></expr></argument>)<pos:position pos:line="8" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="103"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else <block pos:line="9" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">safe_free<pos:position pos:line="10" pos:column="18"/></name><argument_list pos:line="10" pos:column="18">(<argument><expr><name pos:line="10" pos:column="19">username_<pos:position pos:line="10" pos:column="28"/></name></expr></argument>)<pos:position pos:line="10" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">userKey_<pos:position pos:line="11" pos:column="17"/></name><operator pos:line="11" pos:column="17">.<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">clear<pos:position pos:line="11" pos:column="23"/></name></name><argument_list pos:line="11" pos:column="23">()<pos:position pos:line="11" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></else></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

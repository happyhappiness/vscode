<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5942_squid-3.4.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Range<pos:position pos:line="1" pos:column="6"/></name><argument_list type="generic" pos:line="1" pos:column="6">&lt;<argument><expr><specifier pos:line="1" pos:column="7">const<pos:position pos:line="1" pos:column="12"/></specifier> <name pos:line="1" pos:column="13">oid<pos:position pos:line="1" pos:column="16"/></name><modifier pos:line="1" pos:column="16">*<pos:position pos:line="1" pos:column="17"/></modifier></expr></argument>&gt;<pos:position pos:line="1" pos:column="21"/></argument_list></name></type>
<name><name pos:line="2" pos:column="1">Snmp<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Var<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">asObject<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">()<pos:position pos:line="2" pos:column="22"/></parameter_list> <specifier pos:line="2" pos:column="23">const<pos:position pos:line="2" pos:column="28"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">type<pos:position pos:line="4" pos:column="14"/></name> <operator pos:line="4" pos:column="15">==<pos:position pos:line="4" pos:column="17"/></operator> <name pos:line="4" pos:column="18">SMI_OBJID<pos:position pos:line="4" pos:column="27"/></name></expr></argument>)<pos:position pos:line="4" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">Must<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><name pos:line="5" pos:column="10">val_len<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">%<pos:position pos:line="5" pos:column="19"/></operator> <sizeof pos:line="5" pos:column="20">sizeof<argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">oid<pos:position pos:line="5" pos:column="30"/></name></expr></argument>)<pos:position pos:line="5" pos:column="31"/></argument_list></sizeof> <operator pos:line="5" pos:column="32">==<pos:position pos:line="5" pos:column="34"/></operator> <literal type="number" pos:line="5" pos:column="35">0<pos:position pos:line="5" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="38"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">length<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><name pos:line="6" pos:column="18">val_len<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">/<pos:position pos:line="6" pos:column="27"/></operator> <sizeof pos:line="6" pos:column="28">sizeof<argument_list pos:line="6" pos:column="34">(<argument><expr><name pos:line="6" pos:column="35">oid<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="6" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">Must<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name><name pos:line="7" pos:column="10">val<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">.<pos:position pos:line="7" pos:column="14"/></operator><name pos:line="7" pos:column="14">objid<pos:position pos:line="7" pos:column="19"/></name></name> <operator pos:line="7" pos:column="20">!=<pos:position pos:line="7" pos:column="22"/></operator> <name pos:line="7" pos:column="23">NULL<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">&amp;&amp;<pos:position pos:line="7" pos:column="38"/></operator> <name pos:line="7" pos:column="31">length<pos:position pos:line="7" pos:column="37"/></name> <operator pos:line="7" pos:column="38">&gt;<pos:position pos:line="7" pos:column="42"/></operator> <literal type="number" pos:line="7" pos:column="40">0<pos:position pos:line="7" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="43"/></expr_stmt>
    <return pos:line="8" pos:column="5">return <expr><call><name><name pos:line="8" pos:column="12">Range<pos:position pos:line="8" pos:column="17"/></name><argument_list type="generic" pos:line="8" pos:column="17">&lt;<argument><expr><specifier pos:line="8" pos:column="18">const<pos:position pos:line="8" pos:column="23"/></specifier> <name pos:line="8" pos:column="24">oid<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">*<pos:position pos:line="8" pos:column="28"/></operator></expr></argument>&gt;<pos:position pos:line="8" pos:column="32"/></argument_list></name><argument_list pos:line="8" pos:column="29">(<argument><expr><name><name pos:line="8" pos:column="30">val<pos:position pos:line="8" pos:column="33"/></name><operator pos:line="8" pos:column="33">.<pos:position pos:line="8" pos:column="34"/></operator><name pos:line="8" pos:column="34">objid<pos:position pos:line="8" pos:column="39"/></name></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="41">val<pos:position pos:line="8" pos:column="44"/></name><operator pos:line="8" pos:column="44">.<pos:position pos:line="8" pos:column="45"/></operator><name pos:line="8" pos:column="45">objid<pos:position pos:line="8" pos:column="50"/></name></name> <operator pos:line="8" pos:column="51">+<pos:position pos:line="8" pos:column="52"/></operator> <name pos:line="8" pos:column="53">length<pos:position pos:line="8" pos:column="59"/></name></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="61"/></return>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

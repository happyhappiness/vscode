<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2704_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ShmWriter<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">vappendf<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">fmt<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">va_list<pos:position pos:line="2" pos:column="45"/></name></type> <name pos:line="2" pos:column="46">ap<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SBuf<pos:position pos:line="4" pos:column="9"/></name></type> <name pos:line="4" pos:column="10">vaBuf<pos:position pos:line="4" pos:column="15"/></name></decl>;<pos:position pos:line="4" pos:column="16"/></decl_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><call><name pos:line="5" pos:column="5">defined<pos:position pos:line="5" pos:column="12"/></name><argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">VA_COPY<pos:position pos:line="5" pos:column="20"/></name></expr></argument>)<pos:position pos:line="5" pos:column="21"/></argument_list></call></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">va_list<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">apCopy<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">VA_COPY<pos:position pos:line="7" pos:column="12"/></name><argument_list pos:line="7" pos:column="12">(<argument><expr><name pos:line="7" pos:column="13">apCopy<pos:position pos:line="7" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="21">ap<pos:position pos:line="7" pos:column="23"/></name></expr></argument>)<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">vaBuf<pos:position pos:line="8" pos:column="10"/></name><operator pos:line="8" pos:column="10">.<pos:position pos:line="8" pos:column="11"/></operator><name pos:line="8" pos:column="11">vappendf<pos:position pos:line="8" pos:column="19"/></name></name><argument_list pos:line="8" pos:column="19">(<argument><expr><name pos:line="8" pos:column="20">fmt<pos:position pos:line="8" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="25">apCopy<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">va_end<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">apCopy<pos:position pos:line="9" pos:column="18"/></name></expr></argument>)<pos:position pos:line="9" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="20"/></expr_stmt>
<cpp:else pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">else<pos:position pos:line="10" pos:column="6"/></cpp:directive></cpp:else>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">vaBuf<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">.<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">vappendf<pos:position pos:line="11" pos:column="19"/></name></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name pos:line="11" pos:column="20">fmt<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">ap<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">append<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><call><name><name pos:line="13" pos:column="12">vaBuf<pos:position pos:line="13" pos:column="17"/></name><operator pos:line="13" pos:column="17">.<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">rawContent<pos:position pos:line="13" pos:column="28"/></name></name><argument_list pos:line="13" pos:column="28">()<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="13" pos:column="32">vaBuf<pos:position pos:line="13" pos:column="37"/></name><operator pos:line="13" pos:column="37">.<pos:position pos:line="13" pos:column="38"/></operator><name pos:line="13" pos:column="38">length<pos:position pos:line="13" pos:column="44"/></name></name><argument_list pos:line="13" pos:column="44">()<pos:position pos:line="13" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="48"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2924_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">ChunkedCodingParser<pos:position pos:line="1" pos:column="25"/></name><operator pos:line="1" pos:column="25">::<pos:position pos:line="1" pos:column="27"/></operator><name pos:line="1" pos:column="27">parseUnusedChunkExtension<pos:position pos:line="1" pos:column="52"/></name></name><parameter_list pos:line="1" pos:column="52">()<pos:position pos:line="1" pos:column="54"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">size_t<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">crlfBeg<pos:position pos:line="3" pos:column="19"/></name> <init pos:line="3" pos:column="20">= <expr><literal type="number" pos:line="3" pos:column="22">0<pos:position pos:line="3" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="3" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">crlfEnd<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name pos:line="5" pos:column="9">findCrlf<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">crlfBeg<pos:position pos:line="5" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="27">crlfEnd<pos:position pos:line="5" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="36">inQuoted<pos:position pos:line="5" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="46">inSlashed<pos:position pos:line="5" pos:column="55"/></name></expr></argument>)<pos:position pos:line="5" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="57"/></condition><then pos:line="5" pos:column="57"> <block pos:line="5" pos:column="58">{
        <expr_stmt><expr><name pos:line="6" pos:column="9">inQuoted<pos:position pos:line="6" pos:column="17"/></name> <operator pos:line="6" pos:column="18">=<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">inSlashed<pos:position pos:line="6" pos:column="29"/></name> <operator pos:line="6" pos:column="30">=<pos:position pos:line="6" pos:column="31"/></operator> <literal type="boolean" pos:line="6" pos:column="32">false<pos:position pos:line="6" pos:column="37"/></literal></expr>;<pos:position pos:line="6" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="7" pos:column="9">theIn<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">-&gt;<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="16">consume<pos:position pos:line="7" pos:column="23"/></name></name><argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">crlfEnd<pos:position pos:line="7" pos:column="31"/></name></expr></argument>)<pos:position pos:line="7" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="33"/></expr_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">theStep<pos:position pos:line="8" pos:column="16"/></name> <operator pos:line="8" pos:column="17">=<pos:position pos:line="8" pos:column="18"/></operator> <ternary><condition><expr><name pos:line="8" pos:column="19">theChunkSize<pos:position pos:line="8" pos:column="31"/></name></expr> ?<pos:position pos:line="8" pos:column="33"/></condition><then pos:line="8" pos:column="33"> <expr><name pos:line="8" pos:column="34">psChunkBody<pos:position pos:line="8" pos:column="45"/></name></expr> <pos:position pos:line="8" pos:column="46"/></then><else pos:line="8" pos:column="46">: <expr><name pos:line="8" pos:column="48">psTrailer<pos:position pos:line="8" pos:column="57"/></name></expr></else></ternary></expr>;<pos:position pos:line="8" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else <block pos:line="9" pos:column="12">{
        <expr_stmt><expr><call><name><name pos:line="10" pos:column="9">theIn<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">consume<pos:position pos:line="10" pos:column="23"/></name></name><argument_list pos:line="10" pos:column="23">(<argument><expr><call><name><name pos:line="10" pos:column="24">theIn<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">-&gt;<pos:position pos:line="10" pos:column="34"/></operator><name pos:line="10" pos:column="31">contentSize<pos:position pos:line="10" pos:column="42"/></name></name><argument_list pos:line="10" pos:column="42">()<pos:position pos:line="10" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">doNeedMoreData<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <literal type="boolean" pos:line="11" pos:column="26">true<pos:position pos:line="11" pos:column="30"/></literal></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></else></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

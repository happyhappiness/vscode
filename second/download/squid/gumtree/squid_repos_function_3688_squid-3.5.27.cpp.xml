<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3688_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">stopReceiving<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">error<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">33<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">4<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <literal type="string" pos:line="4" pos:column="27">"receiving error ("<pos:position pos:line="4" pos:column="46"/></literal> <operator pos:line="4" pos:column="47">&lt;&lt;<pos:position pos:line="4" pos:column="55"/></operator> <name pos:line="4" pos:column="50">clientConnection<pos:position pos:line="4" pos:column="66"/></name> <operator pos:line="4" pos:column="67">&lt;&lt;<pos:position pos:line="4" pos:column="75"/></operator> <literal type="string" pos:line="4" pos:column="70">"): "<pos:position pos:line="4" pos:column="75"/></literal> <operator pos:line="4" pos:column="76">&lt;&lt;<pos:position pos:line="4" pos:column="84"/></operator> <name pos:line="4" pos:column="79">error<pos:position pos:line="4" pos:column="84"/></name> <operator pos:line="4" pos:column="85">&lt;&lt;<pos:position pos:line="4" pos:column="93"/></operator>
           <literal type="string" pos:line="5" pos:column="12">"; old sending error: "<pos:position pos:line="5" pos:column="35"/></literal> <operator pos:line="5" pos:column="36">&lt;&lt;<pos:position pos:line="5" pos:column="44"/></operator>
           <operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><ternary><condition><expr><call><name pos:line="6" pos:column="13">stoppedSending<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">()<pos:position pos:line="6" pos:column="29"/></argument_list></call></expr> ?<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31"> <expr><name pos:line="6" pos:column="32">stoppedSending_<pos:position pos:line="6" pos:column="47"/></name></expr> <pos:position pos:line="6" pos:column="48"/></then><else pos:line="6" pos:column="48">: <expr><literal type="string" pos:line="6" pos:column="50">"none"<pos:position pos:line="6" pos:column="56"/></literal></expr></else></ternary><operator pos:line="6" pos:column="56">)<pos:position pos:line="6" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="59"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">oldError<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><call><name pos:line="8" pos:column="32">stoppedReceiving<pos:position pos:line="8" pos:column="48"/></name><argument_list pos:line="8" pos:column="48">()<pos:position pos:line="8" pos:column="50"/></argument_list></call></expr></init></decl>)<pos:position pos:line="8" pos:column="51"/></condition><then pos:line="8" pos:column="51"> <block pos:line="8" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">33<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">3<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="23">HERE<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&lt;&lt;<pos:position pos:line="9" pos:column="36"/></operator> <literal type="string" pos:line="9" pos:column="31">"already stopped receiving: "<pos:position pos:line="9" pos:column="60"/></literal> <operator pos:line="9" pos:column="61">&lt;&lt;<pos:position pos:line="9" pos:column="69"/></operator> <name pos:line="9" pos:column="64">oldError<pos:position pos:line="9" pos:column="72"/></name></expr></argument>)<pos:position pos:line="9" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="74"/></expr_stmt>
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return> <comment type="line" pos:line="10" pos:column="17">// nothing has changed as far as this connection is concerned</comment>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">stoppedReceiving_<pos:position pos:line="13" pos:column="22"/></name> <operator pos:line="13" pos:column="23">=<pos:position pos:line="13" pos:column="24"/></operator> <name pos:line="13" pos:column="25">error<pos:position pos:line="13" pos:column="30"/></name></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">char<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">sendError<pos:position pos:line="15" pos:column="30"/></name> <init pos:line="15" pos:column="31">= <expr><call><name pos:line="15" pos:column="33">stoppedSending<pos:position pos:line="15" pos:column="47"/></name><argument_list pos:line="15" pos:column="47">()<pos:position pos:line="15" pos:column="49"/></argument_list></call></expr></init></decl>)<pos:position pos:line="15" pos:column="50"/></condition><then pos:line="15" pos:column="50"> <block pos:line="15" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">33<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">3<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="23">HERE<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">&lt;&lt;<pos:position pos:line="16" pos:column="36"/></operator> <literal type="string" pos:line="16" pos:column="31">"closing because also stopped sending: "<pos:position pos:line="16" pos:column="71"/></literal> <operator pos:line="16" pos:column="72">&lt;&lt;<pos:position pos:line="16" pos:column="80"/></operator> <name pos:line="16" pos:column="75">sendError<pos:position pos:line="16" pos:column="84"/></name></expr></argument>)<pos:position pos:line="16" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="86"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="17" pos:column="9">clientConnection<pos:position pos:line="17" pos:column="25"/></name><operator pos:line="17" pos:column="25">-&gt;<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="27">close<pos:position pos:line="17" pos:column="32"/></name></name><argument_list pos:line="17" pos:column="32">()<pos:position pos:line="17" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

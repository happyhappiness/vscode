<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2469_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">destroyStoreEntry<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">void<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">data<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">20<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <literal type="string" pos:line="4" pos:column="27">"destroyStoreEntry: destroying "<pos:position pos:line="4" pos:column="59"/></literal> <operator pos:line="4" pos:column="60">&lt;&lt;<pos:position pos:line="4" pos:column="68"/></operator>  <name pos:line="4" pos:column="64">data<pos:position pos:line="4" pos:column="68"/></name></expr></argument>)<pos:position pos:line="4" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="70"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StoreEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">e<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><cast type="static" pos:line="5" pos:column="21">static_cast<argument_list type="generic" pos:line="5" pos:column="32">&lt;<argument><expr><name pos:line="5" pos:column="33">StoreEntry<pos:position pos:line="5" pos:column="43"/></name> <operator pos:line="5" pos:column="44">*<pos:position pos:line="5" pos:column="45"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="49"/></argument_list><argument_list pos:line="5" pos:column="46">(<argument><expr><cast type="static" pos:line="5" pos:column="47">static_cast<argument_list type="generic" pos:line="5" pos:column="58">&lt;<argument><expr><name pos:line="5" pos:column="59">hash_link<pos:position pos:line="5" pos:column="68"/></name> <operator pos:line="5" pos:column="69">*<pos:position pos:line="5" pos:column="70"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="74"/></argument_list><argument_list pos:line="5" pos:column="71">(<argument><expr><name pos:line="5" pos:column="72">data<pos:position pos:line="5" pos:column="76"/></name></expr></argument>)<pos:position pos:line="5" pos:column="77"/></argument_list></cast></expr></argument>)<pos:position pos:line="5" pos:column="78"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="5" pos:column="79"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">e<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">!=<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">NULL<pos:position pos:line="6" pos:column="21"/></name></expr></argument>)<pos:position pos:line="6" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="23"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">e<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">==<pos:position pos:line="8" pos:column="13"/></operator> <call><name><name pos:line="8" pos:column="14">NullStoreEntry<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">::<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">getInstance<pos:position pos:line="8" pos:column="41"/></name></name><argument_list pos:line="8" pos:column="41">()<pos:position pos:line="8" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44">
        <block type="pseudo"><return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return></block></then></if>

    <comment type="line" pos:line="11" pos:column="5">// Store::Root() is FATALly missing during shutdown</comment>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">e<pos:position pos:line="12" pos:column="10"/></name><operator pos:line="12" pos:column="10">-&gt;<pos:position pos:line="12" pos:column="15"/></operator><name pos:line="12" pos:column="12">swap_filen<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">&gt;=<pos:position pos:line="12" pos:column="28"/></operator> <literal type="number" pos:line="12" pos:column="26">0<pos:position pos:line="12" pos:column="27"/></literal> <operator pos:line="12" pos:column="28">&amp;&amp;<pos:position pos:line="12" pos:column="38"/></operator> <operator pos:line="12" pos:column="31">!<pos:position pos:line="12" pos:column="32"/></operator><name pos:line="12" pos:column="32">shutting_down<pos:position pos:line="12" pos:column="45"/></name></expr>)<pos:position pos:line="12" pos:column="46"/></condition><then pos:line="12" pos:column="46">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="13" pos:column="9">e<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">disk<pos:position pos:line="13" pos:column="16"/></name></name><argument_list pos:line="13" pos:column="16">()<pos:position pos:line="13" pos:column="18"/></argument_list></call><operator pos:line="13" pos:column="18">.<pos:position pos:line="13" pos:column="19"/></operator><call><name pos:line="13" pos:column="19">disconnect<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><operator pos:line="13" pos:column="30">*<pos:position pos:line="13" pos:column="31"/></operator><name pos:line="13" pos:column="31">e<pos:position pos:line="13" pos:column="32"/></name></expr></argument>)<pos:position pos:line="13" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="34"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">e<pos:position pos:line="15" pos:column="6"/></name><operator pos:line="15" pos:column="6">-&gt;<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="8">destroyMemObject<pos:position pos:line="15" pos:column="24"/></name></name><argument_list pos:line="15" pos:column="24">()<pos:position pos:line="15" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="17" pos:column="5">e<pos:position pos:line="17" pos:column="6"/></name><operator pos:line="17" pos:column="6">-&gt;<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="8">hashDelete<pos:position pos:line="17" pos:column="18"/></name></name><argument_list pos:line="17" pos:column="18">()<pos:position pos:line="17" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">assert<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name><name pos:line="19" pos:column="12">e<pos:position pos:line="19" pos:column="13"/></name><operator pos:line="19" pos:column="13">-&gt;<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="15">key<pos:position pos:line="19" pos:column="18"/></name></name> <operator pos:line="19" pos:column="19">==<pos:position pos:line="19" pos:column="21"/></operator> <name pos:line="19" pos:column="22">NULL<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="21" pos:column="5">delete<pos:position pos:line="21" pos:column="11"/></operator> <name pos:line="21" pos:column="12">e<pos:position pos:line="21" pos:column="13"/></name></expr>;<pos:position pos:line="21" pos:column="14"/></expr_stmt>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

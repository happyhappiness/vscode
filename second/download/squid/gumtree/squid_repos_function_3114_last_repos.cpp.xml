<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3114_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">refreshCheck<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">StoreEntry<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">entry<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">HttpRequest<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type> <name pos:line="2" pos:column="54">request<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">time_t<pos:position pos:line="2" pos:column="69"/></name></type> <name pos:line="2" pos:column="70">delta<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">time_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">age<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">time_t<pos:position pos:line="5" pos:column="11"/></name></type> <name pos:line="5" pos:column="12">check_time<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><name pos:line="5" pos:column="25">squid_curtime<pos:position pos:line="5" pos:column="38"/></name> <operator pos:line="5" pos:column="39">+<pos:position pos:line="5" pos:column="40"/></operator> <name pos:line="5" pos:column="41">delta<pos:position pos:line="5" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="47"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">staleness<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">stale_flags<pos:position pos:line="7" pos:column="16"/></name></type> <name pos:line="7" pos:column="17">sf<pos:position pos:line="7" pos:column="19"/></name></decl>;<pos:position pos:line="7" pos:column="20"/></decl_stmt>

    <comment type="line" pos:line="9" pos:column="5">// get the URL of this entry, if there is one</comment>
    <decl_stmt><decl><specifier pos:line="10" pos:column="5">static<pos:position pos:line="10" pos:column="11"/></specifier> <type><specifier pos:line="10" pos:column="12">const<pos:position pos:line="10" pos:column="17"/></specifier> <name pos:line="10" pos:column="18">SBuf<pos:position pos:line="10" pos:column="22"/></name></type> <name pos:line="10" pos:column="23">nilUri<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><literal type="string" pos:line="10" pos:column="30">"&lt;none&gt;"<pos:position pos:line="10" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="39"/></argument_list></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">SBuf<pos:position pos:line="11" pos:column="9"/></name></type> <name pos:line="11" pos:column="10">uri<pos:position pos:line="11" pos:column="13"/></name> <init pos:line="11" pos:column="14">= <expr><name pos:line="11" pos:column="16">nilUri<pos:position pos:line="11" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">entry<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">mem_obj<pos:position pos:line="12" pos:column="23"/></name></name></expr>)<pos:position pos:line="12" pos:column="24"/></condition><then pos:line="12" pos:column="24">
        <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="9">uri<pos:position pos:line="13" pos:column="12"/></name> <operator pos:line="13" pos:column="13">=<pos:position pos:line="13" pos:column="14"/></operator> <call><name><name pos:line="13" pos:column="15">entry<pos:position pos:line="13" pos:column="20"/></name><operator pos:line="13" pos:column="20">-&gt;<pos:position pos:line="13" pos:column="25"/></operator><name pos:line="13" pos:column="22">mem_obj<pos:position pos:line="13" pos:column="29"/></name><operator pos:line="13" pos:column="29">-&gt;<pos:position pos:line="13" pos:column="34"/></operator><name pos:line="13" pos:column="31">storeId<pos:position pos:line="13" pos:column="38"/></name></name><argument_list pos:line="13" pos:column="38">()<pos:position pos:line="13" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt></block></then>
    <elseif pos:line="14" pos:column="5">else <if pos:line="14" pos:column="10">if <condition pos:line="14" pos:column="13">(<expr><name pos:line="14" pos:column="14">request<pos:position pos:line="14" pos:column="21"/></name></expr>)<pos:position pos:line="14" pos:column="22"/></condition><then pos:line="14" pos:column="22">
        <block type="pseudo"><expr_stmt><expr><name pos:line="15" pos:column="9">uri<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name><name pos:line="15" pos:column="15">request<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">effectiveRequestUri<pos:position pos:line="15" pos:column="43"/></name></name><argument_list pos:line="15" pos:column="43">()<pos:position pos:line="15" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="46"/></expr_stmt></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">22<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="16">3<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="19">"checking freshness of URI: "<pos:position pos:line="17" pos:column="48"/></literal> <operator pos:line="17" pos:column="49">&lt;&lt;<pos:position pos:line="17" pos:column="57"/></operator> <name pos:line="17" pos:column="52">uri<pos:position pos:line="17" pos:column="55"/></name></expr></argument>)<pos:position pos:line="17" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="57"/></expr_stmt>

    <comment type="line" pos:line="19" pos:column="5">// age is not necessarily the age now, but the age at the given check_time</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">check_time<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">&gt;<pos:position pos:line="20" pos:column="24"/></operator> <name><name pos:line="20" pos:column="22">entry<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">-&gt;<pos:position pos:line="20" pos:column="32"/></operator><name pos:line="20" pos:column="29">timestamp<pos:position pos:line="20" pos:column="38"/></name></name></expr>)<pos:position pos:line="20" pos:column="39"/></condition><then pos:line="20" pos:column="39">
        <block type="pseudo"><expr_stmt><expr><name pos:line="21" pos:column="9">age<pos:position pos:line="21" pos:column="12"/></name> <operator pos:line="21" pos:column="13">=<pos:position pos:line="21" pos:column="14"/></operator> <name pos:line="21" pos:column="15">check_time<pos:position pos:line="21" pos:column="25"/></name> <operator pos:line="21" pos:column="26">-<pos:position pos:line="21" pos:column="27"/></operator> <name><name pos:line="21" pos:column="28">entry<pos:position pos:line="21" pos:column="33"/></name><operator pos:line="21" pos:column="33">-&gt;<pos:position pos:line="21" pos:column="38"/></operator><name pos:line="21" pos:column="35">timestamp<pos:position pos:line="21" pos:column="44"/></name></name></expr>;<pos:position pos:line="21" pos:column="45"/></expr_stmt></block></then></if>

    <comment type="line" pos:line="23" pos:column="5">// FIXME: what to do when age &lt; 0 or counter overflow?</comment>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">assert<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><name pos:line="24" pos:column="12">age<pos:position pos:line="24" pos:column="15"/></name> <operator pos:line="24" pos:column="16">&gt;=<pos:position pos:line="24" pos:column="21"/></operator> <literal type="number" pos:line="24" pos:column="19">0<pos:position pos:line="24" pos:column="20"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="22"/></expr_stmt>

    <comment type="block" pos:line="26" pos:column="5">/* We need a refresh rule. In order of preference:
     *
     *   1. the rule that matches this URI by regex
     *   2. the "." rule from the config file
     *   3. the default "." rule
     */</comment>
    <comment type="line" pos:line="32" pos:column="5">// XXX: performance regression. c_str() reallocates</comment>
    <decl_stmt><decl><type><specifier pos:line="33" pos:column="5">const<pos:position pos:line="33" pos:column="10"/></specifier> <name pos:line="33" pos:column="11">RefreshPattern<pos:position pos:line="33" pos:column="25"/></name> <modifier pos:line="33" pos:column="26">*<pos:position pos:line="33" pos:column="27"/></modifier></type><name pos:line="33" pos:column="27">R<pos:position pos:line="33" pos:column="28"/></name> <init pos:line="33" pos:column="29">= <expr><ternary><condition><expr><operator pos:line="33" pos:column="31">(<pos:position pos:line="33" pos:column="32"/></operator><name pos:line="33" pos:column="32">uri<pos:position pos:line="33" pos:column="35"/></name> <operator pos:line="33" pos:column="36">!=<pos:position pos:line="33" pos:column="38"/></operator> <name pos:line="33" pos:column="39">nilUri<pos:position pos:line="33" pos:column="45"/></name><operator pos:line="33" pos:column="45">)<pos:position pos:line="33" pos:column="46"/></operator></expr> ?<pos:position pos:line="33" pos:column="48"/></condition><then pos:line="33" pos:column="48"> <expr><call><name pos:line="33" pos:column="49">refreshLimits<pos:position pos:line="33" pos:column="62"/></name><argument_list pos:line="33" pos:column="62">(<argument><expr><call><name><name pos:line="33" pos:column="63">uri<pos:position pos:line="33" pos:column="66"/></name><operator pos:line="33" pos:column="66">.<pos:position pos:line="33" pos:column="67"/></operator><name pos:line="33" pos:column="67">c_str<pos:position pos:line="33" pos:column="72"/></name></name><argument_list pos:line="33" pos:column="72">()<pos:position pos:line="33" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="75"/></argument_list></call></expr> <pos:position pos:line="33" pos:column="76"/></then><else pos:line="33" pos:column="76">: <expr><call><name pos:line="33" pos:column="78">refreshUncompiledPattern<pos:position pos:line="33" pos:column="102"/></name><argument_list pos:line="33" pos:column="102">(<argument><expr><literal type="string" pos:line="33" pos:column="103">"."<pos:position pos:line="33" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="107"/></argument_list></call></expr></else></ternary></expr></init></decl>;<pos:position pos:line="33" pos:column="108"/></decl_stmt>
    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name pos:line="34" pos:column="9">NULL<pos:position pos:line="34" pos:column="13"/></name> <operator pos:line="34" pos:column="14">==<pos:position pos:line="34" pos:column="16"/></operator> <name pos:line="34" pos:column="17">R<pos:position pos:line="34" pos:column="18"/></name></expr>)<pos:position pos:line="34" pos:column="19"/></condition><then pos:line="34" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="9">R<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <operator pos:line="35" pos:column="13">&amp;<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="14">DefaultRefresh<pos:position pos:line="35" pos:column="28"/></name></expr>;<pos:position pos:line="35" pos:column="29"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">debugs<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="number" pos:line="37" pos:column="12">22<pos:position pos:line="37" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="16">3<pos:position pos:line="37" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="19">"Matched '"<pos:position pos:line="37" pos:column="30"/></literal> <operator pos:line="37" pos:column="31">&lt;&lt;<pos:position pos:line="37" pos:column="39"/></operator> <call><name><name pos:line="37" pos:column="34">R<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">-&gt;<pos:position pos:line="37" pos:column="40"/></operator><name pos:line="37" pos:column="37">pattern<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">.<pos:position pos:line="37" pos:column="45"/></operator><name pos:line="37" pos:column="45">c_str<pos:position pos:line="37" pos:column="50"/></name></name><argument_list pos:line="37" pos:column="50">()<pos:position pos:line="37" pos:column="52"/></argument_list></call> <operator pos:line="37" pos:column="53">&lt;&lt;<pos:position pos:line="37" pos:column="61"/></operator> <literal type="string" pos:line="37" pos:column="56">" "<pos:position pos:line="37" pos:column="59"/></literal> <operator pos:line="37" pos:column="60">&lt;&lt;<pos:position pos:line="37" pos:column="68"/></operator>
           <operator pos:line="38" pos:column="12">(<pos:position pos:line="38" pos:column="13"/></operator><name pos:line="38" pos:column="13">int<pos:position pos:line="38" pos:column="16"/></name><operator pos:line="38" pos:column="16">)<pos:position pos:line="38" pos:column="17"/></operator> <name><name pos:line="38" pos:column="18">R<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">-&gt;<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="21">min<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">&lt;&lt;<pos:position pos:line="38" pos:column="33"/></operator> <literal type="string" pos:line="38" pos:column="28">" "<pos:position pos:line="38" pos:column="31"/></literal> <operator pos:line="38" pos:column="32">&lt;&lt;<pos:position pos:line="38" pos:column="40"/></operator> <call pos:line="38" pos:column="35">(<name pos:line="38" pos:column="36">int<pos:position pos:line="38" pos:column="39"/></name>) <argument_list pos:line="38" pos:column="41">(<argument><expr><literal type="number" pos:line="38" pos:column="42">100.0<pos:position pos:line="38" pos:column="47"/></literal> <operator pos:line="38" pos:column="48">*<pos:position pos:line="38" pos:column="49"/></operator> <name><name pos:line="38" pos:column="50">R<pos:position pos:line="38" pos:column="51"/></name><operator pos:line="38" pos:column="51">-&gt;<pos:position pos:line="38" pos:column="56"/></operator><name pos:line="38" pos:column="53">pct<pos:position pos:line="38" pos:column="56"/></name></name></expr></argument>)<pos:position pos:line="38" pos:column="57"/></argument_list></call> <operator pos:line="38" pos:column="58">&lt;&lt;<pos:position pos:line="38" pos:column="66"/></operator> <literal type="string" pos:line="38" pos:column="61">"%% "<pos:position pos:line="38" pos:column="66"/></literal> <operator pos:line="38" pos:column="67">&lt;&lt;<pos:position pos:line="38" pos:column="75"/></operator>
           <operator pos:line="39" pos:column="12">(<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">int<pos:position pos:line="39" pos:column="16"/></name><operator pos:line="39" pos:column="16">)<pos:position pos:line="39" pos:column="17"/></operator> <name><name pos:line="39" pos:column="18">R<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">-&gt;<pos:position pos:line="39" pos:column="24"/></operator><name pos:line="39" pos:column="21">max<pos:position pos:line="39" pos:column="24"/></name></name> <operator pos:line="39" pos:column="25">&lt;&lt;<pos:position pos:line="39" pos:column="33"/></operator> <literal type="string" pos:line="39" pos:column="28">"'"<pos:position pos:line="39" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">debugs<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><literal type="number" pos:line="41" pos:column="12">22<pos:position pos:line="41" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="16">3<pos:position pos:line="41" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="19">"\tage:\t"<pos:position pos:line="41" pos:column="29"/></literal> <operator pos:line="41" pos:column="30">&lt;&lt;<pos:position pos:line="41" pos:column="38"/></operator> <name pos:line="41" pos:column="33">age<pos:position pos:line="41" pos:column="36"/></name></expr></argument>)<pos:position pos:line="41" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">debugs<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><literal type="number" pos:line="43" pos:column="12">22<pos:position pos:line="43" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="16">3<pos:position pos:line="43" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="19">"\tcheck_time:\t"<pos:position pos:line="43" pos:column="36"/></literal> <operator pos:line="43" pos:column="37">&lt;&lt;<pos:position pos:line="43" pos:column="45"/></operator> <call><name pos:line="43" pos:column="40">mkrfc1123<pos:position pos:line="43" pos:column="49"/></name><argument_list pos:line="43" pos:column="49">(<argument><expr><name pos:line="43" pos:column="50">check_time<pos:position pos:line="43" pos:column="60"/></name></expr></argument>)<pos:position pos:line="43" pos:column="61"/></argument_list></call></expr></argument>)<pos:position pos:line="43" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="63"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="45" pos:column="5">debugs<pos:position pos:line="45" pos:column="11"/></name><argument_list pos:line="45" pos:column="11">(<argument><expr><literal type="number" pos:line="45" pos:column="12">22<pos:position pos:line="45" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="45" pos:column="16">3<pos:position pos:line="45" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="45" pos:column="19">"\tentry-&gt;timestamp:\t"<pos:position pos:line="45" pos:column="45"/></literal> <operator pos:line="45" pos:column="43">&lt;&lt;<pos:position pos:line="45" pos:column="51"/></operator> <call><name pos:line="45" pos:column="46">mkrfc1123<pos:position pos:line="45" pos:column="55"/></name><argument_list pos:line="45" pos:column="55">(<argument><expr><name><name pos:line="45" pos:column="56">entry<pos:position pos:line="45" pos:column="61"/></name><operator pos:line="45" pos:column="61">-&gt;<pos:position pos:line="45" pos:column="66"/></operator><name pos:line="45" pos:column="63">timestamp<pos:position pos:line="45" pos:column="72"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="75"/></expr_stmt>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name pos:line="47" pos:column="9">request<pos:position pos:line="47" pos:column="16"/></name> <operator pos:line="47" pos:column="17">&amp;&amp;<pos:position pos:line="47" pos:column="27"/></operator> <operator pos:line="47" pos:column="20">!<pos:position pos:line="47" pos:column="21"/></operator><name><name pos:line="47" pos:column="21">request<pos:position pos:line="47" pos:column="28"/></name><operator pos:line="47" pos:column="28">-&gt;<pos:position pos:line="47" pos:column="33"/></operator><name pos:line="47" pos:column="30">flags<pos:position pos:line="47" pos:column="35"/></name><operator pos:line="47" pos:column="35">.<pos:position pos:line="47" pos:column="36"/></operator><name pos:line="47" pos:column="36">ignoreCc<pos:position pos:line="47" pos:column="44"/></name></name></expr>)<pos:position pos:line="47" pos:column="45"/></condition><then pos:line="47" pos:column="45"> <block pos:line="47" pos:column="46">{
        <decl_stmt><decl><type><specifier pos:line="48" pos:column="9">const<pos:position pos:line="48" pos:column="14"/></specifier> <name pos:line="48" pos:column="15">HttpHdrCc<pos:position pos:line="48" pos:column="24"/></name> <modifier pos:line="48" pos:column="25">*<pos:position pos:line="48" pos:column="26"/></modifier><specifier pos:line="48" pos:column="26">const<pos:position pos:line="48" pos:column="31"/></specifier></type> <name pos:line="48" pos:column="32">cc<pos:position pos:line="48" pos:column="34"/></name> <init pos:line="48" pos:column="35">= <expr><name><name pos:line="48" pos:column="37">request<pos:position pos:line="48" pos:column="44"/></name><operator pos:line="48" pos:column="44">-&gt;<pos:position pos:line="48" pos:column="49"/></operator><name pos:line="48" pos:column="46">cache_control<pos:position pos:line="48" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="48" pos:column="60"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="49" pos:column="9">int<pos:position pos:line="49" pos:column="12"/></name></type> <name pos:line="49" pos:column="13">minFresh<pos:position pos:line="49" pos:column="21"/></name> <init pos:line="49" pos:column="22">= <expr><operator pos:line="49" pos:column="24">-<pos:position pos:line="49" pos:column="25"/></operator><literal type="number" pos:line="49" pos:column="25">1<pos:position pos:line="49" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="49" pos:column="27"/></decl_stmt>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><name pos:line="50" pos:column="13">cc<pos:position pos:line="50" pos:column="15"/></name> <operator pos:line="50" pos:column="16">&amp;&amp;<pos:position pos:line="50" pos:column="26"/></operator> <call><name><name pos:line="50" pos:column="19">cc<pos:position pos:line="50" pos:column="21"/></name><operator pos:line="50" pos:column="21">-&gt;<pos:position pos:line="50" pos:column="26"/></operator><name pos:line="50" pos:column="23">hasMinFresh<pos:position pos:line="50" pos:column="34"/></name></name><argument_list pos:line="50" pos:column="34">(<argument><expr><operator pos:line="50" pos:column="35">&amp;<pos:position pos:line="50" pos:column="40"/></operator><name pos:line="50" pos:column="36">minFresh<pos:position pos:line="50" pos:column="44"/></name></expr></argument>)<pos:position pos:line="50" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="50" pos:column="46"/></condition><then pos:line="50" pos:column="46"> <block pos:line="50" pos:column="47">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">debugs<pos:position pos:line="51" pos:column="19"/></name><argument_list pos:line="51" pos:column="19">(<argument><expr><literal type="number" pos:line="51" pos:column="20">22<pos:position pos:line="51" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="24">3<pos:position pos:line="51" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="27">"\tage + min-fresh:\t"<pos:position pos:line="51" pos:column="49"/></literal> <operator pos:line="51" pos:column="50">&lt;&lt;<pos:position pos:line="51" pos:column="58"/></operator> <name pos:line="51" pos:column="53">age<pos:position pos:line="51" pos:column="56"/></name> <operator pos:line="51" pos:column="57">&lt;&lt;<pos:position pos:line="51" pos:column="65"/></operator> <literal type="string" pos:line="51" pos:column="60">" + "<pos:position pos:line="51" pos:column="65"/></literal> <operator pos:line="51" pos:column="66">&lt;&lt;<pos:position pos:line="51" pos:column="74"/></operator>
                   <name pos:line="52" pos:column="20">minFresh<pos:position pos:line="52" pos:column="28"/></name> <operator pos:line="52" pos:column="29">&lt;&lt;<pos:position pos:line="52" pos:column="37"/></operator> <literal type="string" pos:line="52" pos:column="32">" = "<pos:position pos:line="52" pos:column="37"/></literal> <operator pos:line="52" pos:column="38">&lt;&lt;<pos:position pos:line="52" pos:column="46"/></operator> <name pos:line="52" pos:column="41">age<pos:position pos:line="52" pos:column="44"/></name> <operator pos:line="52" pos:column="45">+<pos:position pos:line="52" pos:column="46"/></operator> <name pos:line="52" pos:column="47">minFresh<pos:position pos:line="52" pos:column="55"/></name></expr></argument>)<pos:position pos:line="52" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="57"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="53" pos:column="13">debugs<pos:position pos:line="53" pos:column="19"/></name><argument_list pos:line="53" pos:column="19">(<argument><expr><literal type="number" pos:line="53" pos:column="20">22<pos:position pos:line="53" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="53" pos:column="24">3<pos:position pos:line="53" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="53" pos:column="27">"\tcheck_time + min-fresh:\t"<pos:position pos:line="53" pos:column="56"/></literal> <operator pos:line="53" pos:column="57">&lt;&lt;<pos:position pos:line="53" pos:column="65"/></operator> <name pos:line="53" pos:column="60">check_time<pos:position pos:line="53" pos:column="70"/></name> <operator pos:line="53" pos:column="71">&lt;&lt;<pos:position pos:line="53" pos:column="79"/></operator> <literal type="string" pos:line="53" pos:column="74">" + "<pos:position pos:line="53" pos:column="79"/></literal>
                   <operator pos:line="54" pos:column="20">&lt;&lt;<pos:position pos:line="54" pos:column="28"/></operator> <name pos:line="54" pos:column="23">minFresh<pos:position pos:line="54" pos:column="31"/></name> <operator pos:line="54" pos:column="32">&lt;&lt;<pos:position pos:line="54" pos:column="40"/></operator> <literal type="string" pos:line="54" pos:column="35">" = "<pos:position pos:line="54" pos:column="40"/></literal> <operator pos:line="54" pos:column="41">&lt;&lt;<pos:position pos:line="54" pos:column="49"/></operator>
                   <call><name pos:line="55" pos:column="20">mkrfc1123<pos:position pos:line="55" pos:column="29"/></name><argument_list pos:line="55" pos:column="29">(<argument><expr><name pos:line="55" pos:column="30">check_time<pos:position pos:line="55" pos:column="40"/></name> <operator pos:line="55" pos:column="41">+<pos:position pos:line="55" pos:column="42"/></operator> <name pos:line="55" pos:column="43">minFresh<pos:position pos:line="55" pos:column="51"/></name></expr></argument>)<pos:position pos:line="55" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="55" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><name pos:line="56" pos:column="13">age<pos:position pos:line="56" pos:column="16"/></name> <operator pos:line="56" pos:column="17">+=<pos:position pos:line="56" pos:column="19"/></operator> <name pos:line="56" pos:column="20">minFresh<pos:position pos:line="56" pos:column="28"/></name></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name pos:line="57" pos:column="13">check_time<pos:position pos:line="57" pos:column="23"/></name> <operator pos:line="57" pos:column="24">+=<pos:position pos:line="57" pos:column="26"/></operator> <name pos:line="57" pos:column="27">minFresh<pos:position pos:line="57" pos:column="35"/></name></expr>;<pos:position pos:line="57" pos:column="36"/></expr_stmt>
        }<pos:position pos:line="58" pos:column="10"/></block></then></if>
    }<pos:position pos:line="59" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="61" pos:column="5">memset<pos:position pos:line="61" pos:column="11"/></name><argument_list pos:line="61" pos:column="11">(<argument><expr><operator pos:line="61" pos:column="12">&amp;<pos:position pos:line="61" pos:column="17"/></operator><name pos:line="61" pos:column="13">sf<pos:position pos:line="61" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="61" pos:column="17">'\0'<pos:position pos:line="61" pos:column="21"/></literal></expr></argument>, <argument><expr><sizeof pos:line="61" pos:column="23">sizeof<argument_list pos:line="61" pos:column="29">(<argument><expr><name pos:line="61" pos:column="30">sf<pos:position pos:line="61" pos:column="32"/></name></expr></argument>)<pos:position pos:line="61" pos:column="33"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="61" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name pos:line="63" pos:column="5">staleness<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <call><name pos:line="63" pos:column="17">refreshStaleness<pos:position pos:line="63" pos:column="33"/></name><argument_list pos:line="63" pos:column="33">(<argument><expr><name pos:line="63" pos:column="34">entry<pos:position pos:line="63" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="41">check_time<pos:position pos:line="63" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="53">age<pos:position pos:line="63" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="58">R<pos:position pos:line="63" pos:column="59"/></name></expr></argument>, <argument><expr><operator pos:line="63" pos:column="61">&amp;<pos:position pos:line="63" pos:column="66"/></operator><name pos:line="63" pos:column="62">sf<pos:position pos:line="63" pos:column="64"/></name></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="66"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="65" pos:column="5">debugs<pos:position pos:line="65" pos:column="11"/></name><argument_list pos:line="65" pos:column="11">(<argument><expr><literal type="number" pos:line="65" pos:column="12">22<pos:position pos:line="65" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="16">3<pos:position pos:line="65" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="19">"Staleness = "<pos:position pos:line="65" pos:column="33"/></literal> <operator pos:line="65" pos:column="34">&lt;&lt;<pos:position pos:line="65" pos:column="42"/></operator> <name pos:line="65" pos:column="37">staleness<pos:position pos:line="65" pos:column="46"/></name></expr></argument>)<pos:position pos:line="65" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="48"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="67" pos:column="5">const<pos:position pos:line="67" pos:column="10"/></specifier> <specifier pos:line="67" pos:column="11">auto<pos:position pos:line="67" pos:column="15"/></specifier> <modifier pos:line="67" pos:column="16">*<pos:position pos:line="67" pos:column="17"/></modifier></type><name pos:line="67" pos:column="17">reply<pos:position pos:line="67" pos:column="22"/></name> <init pos:line="67" pos:column="23">= <expr><operator pos:line="67" pos:column="25">(<pos:position pos:line="67" pos:column="26"/></operator><ternary><condition><expr><name><name pos:line="67" pos:column="26">entry<pos:position pos:line="67" pos:column="31"/></name><operator pos:line="67" pos:column="31">-&gt;<pos:position pos:line="67" pos:column="36"/></operator><name pos:line="67" pos:column="33">mem_obj<pos:position pos:line="67" pos:column="40"/></name></name> <operator pos:line="67" pos:column="41">&amp;&amp;<pos:position pos:line="67" pos:column="51"/></operator> <call><name><name pos:line="67" pos:column="44">entry<pos:position pos:line="67" pos:column="49"/></name><operator pos:line="67" pos:column="49">-&gt;<pos:position pos:line="67" pos:column="54"/></operator><name pos:line="67" pos:column="51">mem_obj<pos:position pos:line="67" pos:column="58"/></name><operator pos:line="67" pos:column="58">-&gt;<pos:position pos:line="67" pos:column="63"/></operator><name pos:line="67" pos:column="60">getReply<pos:position pos:line="67" pos:column="68"/></name></name><argument_list pos:line="67" pos:column="68">()<pos:position pos:line="67" pos:column="70"/></argument_list></call></expr> ?<pos:position pos:line="67" pos:column="72"/></condition><then pos:line="67" pos:column="72"> <expr><call><name><name pos:line="67" pos:column="73">entry<pos:position pos:line="67" pos:column="78"/></name><operator pos:line="67" pos:column="78">-&gt;<pos:position pos:line="67" pos:column="83"/></operator><name pos:line="67" pos:column="80">mem_obj<pos:position pos:line="67" pos:column="87"/></name><operator pos:line="67" pos:column="87">-&gt;<pos:position pos:line="67" pos:column="92"/></operator><name pos:line="67" pos:column="89">getReply<pos:position pos:line="67" pos:column="97"/></name></name><argument_list pos:line="67" pos:column="97">()<pos:position pos:line="67" pos:column="99"/></argument_list></call></expr> <pos:position pos:line="67" pos:column="100"/></then><else pos:line="67" pos:column="100">: <expr><literal type="null" pos:line="67" pos:column="102">nullptr<pos:position pos:line="67" pos:column="109"/></literal></expr></else></ternary><operator pos:line="67" pos:column="109">)<pos:position pos:line="67" pos:column="110"/></operator></expr></init></decl>;<pos:position pos:line="67" pos:column="111"/></decl_stmt>

    <comment type="line" pos:line="69" pos:column="5">// stale-if-error requires any failure be passed thru when its period is over.</comment>
    <decl_stmt><decl><type><name pos:line="70" pos:column="5">int<pos:position pos:line="70" pos:column="8"/></name></type> <name pos:line="70" pos:column="9">staleIfError<pos:position pos:line="70" pos:column="21"/></name> <init pos:line="70" pos:column="22">= <expr><operator pos:line="70" pos:column="24">-<pos:position pos:line="70" pos:column="25"/></operator><literal type="number" pos:line="70" pos:column="25">1<pos:position pos:line="70" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="70" pos:column="27"/></decl_stmt>
    <if pos:line="71" pos:column="5">if <condition pos:line="71" pos:column="8">(<expr><name pos:line="71" pos:column="9">request<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">&amp;&amp;<pos:position pos:line="71" pos:column="27"/></operator> <name pos:line="71" pos:column="20">reply<pos:position pos:line="71" pos:column="25"/></name> <operator pos:line="71" pos:column="26">&amp;&amp;<pos:position pos:line="71" pos:column="36"/></operator> <name><name pos:line="71" pos:column="29">reply<pos:position pos:line="71" pos:column="34"/></name><operator pos:line="71" pos:column="34">-&gt;<pos:position pos:line="71" pos:column="39"/></operator><name pos:line="71" pos:column="36">cache_control<pos:position pos:line="71" pos:column="49"/></name></name> <operator pos:line="71" pos:column="50">&amp;&amp;<pos:position pos:line="71" pos:column="60"/></operator>
            <call><name><name pos:line="72" pos:column="13">reply<pos:position pos:line="72" pos:column="18"/></name><operator pos:line="72" pos:column="18">-&gt;<pos:position pos:line="72" pos:column="23"/></operator><name pos:line="72" pos:column="20">cache_control<pos:position pos:line="72" pos:column="33"/></name><operator pos:line="72" pos:column="33">-&gt;<pos:position pos:line="72" pos:column="38"/></operator><name pos:line="72" pos:column="35">hasStaleIfError<pos:position pos:line="72" pos:column="50"/></name></name><argument_list pos:line="72" pos:column="50">(<argument><expr><operator pos:line="72" pos:column="51">&amp;<pos:position pos:line="72" pos:column="56"/></operator><name pos:line="72" pos:column="52">staleIfError<pos:position pos:line="72" pos:column="64"/></name></expr></argument>)<pos:position pos:line="72" pos:column="65"/></argument_list></call> <operator pos:line="72" pos:column="66">&amp;&amp;<pos:position pos:line="72" pos:column="76"/></operator>
            <name pos:line="73" pos:column="13">staleIfError<pos:position pos:line="73" pos:column="25"/></name> <operator pos:line="73" pos:column="26">&lt;<pos:position pos:line="73" pos:column="30"/></operator> <name pos:line="73" pos:column="28">staleness<pos:position pos:line="73" pos:column="37"/></name></expr>)<pos:position pos:line="73" pos:column="38"/></condition><then pos:line="73" pos:column="38"> <block pos:line="73" pos:column="39">{

        <expr_stmt><expr><call><name pos:line="75" pos:column="9">debugs<pos:position pos:line="75" pos:column="15"/></name><argument_list pos:line="75" pos:column="15">(<argument><expr><literal type="number" pos:line="75" pos:column="16">22<pos:position pos:line="75" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="75" pos:column="20">3<pos:position pos:line="75" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="23">"stale-if-error period expired. Will produce error if validation fails."<pos:position pos:line="75" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="97"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">request<pos:position pos:line="76" pos:column="16"/></name><operator pos:line="76" pos:column="16">-&gt;<pos:position pos:line="76" pos:column="21"/></operator><name pos:line="76" pos:column="18">flags<pos:position pos:line="76" pos:column="23"/></name><operator pos:line="76" pos:column="23">.<pos:position pos:line="76" pos:column="24"/></operator><name pos:line="76" pos:column="24">failOnValidationError<pos:position pos:line="76" pos:column="45"/></name></name> <operator pos:line="76" pos:column="46">=<pos:position pos:line="76" pos:column="47"/></operator> <literal type="boolean" pos:line="76" pos:column="48">true<pos:position pos:line="76" pos:column="52"/></literal></expr>;<pos:position pos:line="76" pos:column="53"/></expr_stmt>
    }<pos:position pos:line="77" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="79" pos:column="5">/* If the origin server specified either of:
     *   Cache-Control: must-revalidate
     *   Cache-Control: proxy-revalidate
     * the spec says the response must always be revalidated if stale.
     */</comment>
    <decl_stmt><decl><type><specifier pos:line="84" pos:column="5">const<pos:position pos:line="84" pos:column="10"/></specifier> <name pos:line="84" pos:column="11">bool<pos:position pos:line="84" pos:column="15"/></name></type> <name pos:line="84" pos:column="16">revalidateAlways<pos:position pos:line="84" pos:column="32"/></name> <init pos:line="84" pos:column="33">= <expr><call><name pos:line="84" pos:column="35">EBIT_TEST<pos:position pos:line="84" pos:column="44"/></name><argument_list pos:line="84" pos:column="44">(<argument><expr><name><name pos:line="84" pos:column="45">entry<pos:position pos:line="84" pos:column="50"/></name><operator pos:line="84" pos:column="50">-&gt;<pos:position pos:line="84" pos:column="55"/></operator><name pos:line="84" pos:column="52">flags<pos:position pos:line="84" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="59">ENTRY_REVALIDATE_ALWAYS<pos:position pos:line="84" pos:column="82"/></name></expr></argument>)<pos:position pos:line="84" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="84" pos:column="84"/></decl_stmt>
    <if pos:line="85" pos:column="5">if <condition pos:line="85" pos:column="8">(<expr><name pos:line="85" pos:column="9">revalidateAlways<pos:position pos:line="85" pos:column="25"/></name> <operator pos:line="85" pos:column="26">||<pos:position pos:line="85" pos:column="28"/></operator> <operator pos:line="85" pos:column="29">(<pos:position pos:line="85" pos:column="30"/></operator><name pos:line="85" pos:column="30">staleness<pos:position pos:line="85" pos:column="39"/></name> <operator pos:line="85" pos:column="40">&gt;<pos:position pos:line="85" pos:column="44"/></operator> <operator pos:line="85" pos:column="42">-<pos:position pos:line="85" pos:column="43"/></operator><literal type="number" pos:line="85" pos:column="43">1<pos:position pos:line="85" pos:column="44"/></literal> <operator pos:line="85" pos:column="45">&amp;&amp;<pos:position pos:line="85" pos:column="55"/></operator>
                             <call><name pos:line="86" pos:column="30">EBIT_TEST<pos:position pos:line="86" pos:column="39"/></name><argument_list pos:line="86" pos:column="39">(<argument><expr><name><name pos:line="86" pos:column="40">entry<pos:position pos:line="86" pos:column="45"/></name><operator pos:line="86" pos:column="45">-&gt;<pos:position pos:line="86" pos:column="50"/></operator><name pos:line="86" pos:column="47">flags<pos:position pos:line="86" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="54">ENTRY_REVALIDATE_STALE<pos:position pos:line="86" pos:column="76"/></name></expr></argument>)<pos:position pos:line="86" pos:column="77"/></argument_list></call><operator pos:line="86" pos:column="77">)<pos:position pos:line="86" pos:column="78"/></operator></expr>)<pos:position pos:line="86" pos:column="79"/></condition><then pos:line="86" pos:column="79"> <block pos:line="86" pos:column="80">{
        <expr_stmt><expr><call><name pos:line="87" pos:column="9">debugs<pos:position pos:line="87" pos:column="15"/></name><argument_list pos:line="87" pos:column="15">(<argument><expr><literal type="number" pos:line="87" pos:column="16">22<pos:position pos:line="87" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="87" pos:column="20">3<pos:position pos:line="87" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="87" pos:column="23">"YES: Must revalidate stale object (origin set "<pos:position pos:line="87" pos:column="71"/></literal> <operator pos:line="87" pos:column="72">&lt;&lt;<pos:position pos:line="87" pos:column="80"/></operator>
               <operator pos:line="88" pos:column="16">(<pos:position pos:line="88" pos:column="17"/></operator><ternary><condition><expr><name pos:line="88" pos:column="17">revalidateAlways<pos:position pos:line="88" pos:column="33"/></name></expr> ?<pos:position pos:line="88" pos:column="35"/></condition><then pos:line="88" pos:column="35"> <expr><literal type="string" pos:line="88" pos:column="36">"no-cache or private"<pos:position pos:line="88" pos:column="57"/></literal></expr> <pos:position pos:line="88" pos:column="58"/></then><else pos:line="88" pos:column="58">:
                <expr><literal type="string" pos:line="89" pos:column="17">"must-revalidate, proxy-revalidate or s-maxage"<pos:position pos:line="89" pos:column="64"/></literal></expr></else></ternary><operator pos:line="89" pos:column="64">)<pos:position pos:line="89" pos:column="65"/></operator> <operator pos:line="89" pos:column="66">&lt;&lt;<pos:position pos:line="89" pos:column="74"/></operator> <literal type="string" pos:line="89" pos:column="69">")"<pos:position pos:line="89" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="89" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="74"/></expr_stmt>
        <if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><name pos:line="90" pos:column="13">request<pos:position pos:line="90" pos:column="20"/></name></expr>)<pos:position pos:line="90" pos:column="21"/></condition><then pos:line="90" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="91" pos:column="13">request<pos:position pos:line="91" pos:column="20"/></name><operator pos:line="91" pos:column="20">-&gt;<pos:position pos:line="91" pos:column="25"/></operator><name pos:line="91" pos:column="22">flags<pos:position pos:line="91" pos:column="27"/></name><operator pos:line="91" pos:column="27">.<pos:position pos:line="91" pos:column="28"/></operator><name pos:line="91" pos:column="28">failOnValidationError<pos:position pos:line="91" pos:column="49"/></name></name> <operator pos:line="91" pos:column="50">=<pos:position pos:line="91" pos:column="51"/></operator> <literal type="boolean" pos:line="91" pos:column="52">true<pos:position pos:line="91" pos:column="56"/></literal></expr>;<pos:position pos:line="91" pos:column="57"/></expr_stmt></block></then></if>
        <return pos:line="92" pos:column="9">return <expr><name pos:line="92" pos:column="16">STALE_MUST_REVALIDATE<pos:position pos:line="92" pos:column="37"/></name></expr>;<pos:position pos:line="92" pos:column="38"/></return>
    }<pos:position pos:line="93" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="95" pos:column="5">/* request-specific checks */</comment>
    <if pos:line="96" pos:column="5">if <condition pos:line="96" pos:column="8">(<expr><name pos:line="96" pos:column="9">request<pos:position pos:line="96" pos:column="16"/></name> <operator pos:line="96" pos:column="17">&amp;&amp;<pos:position pos:line="96" pos:column="27"/></operator> <operator pos:line="96" pos:column="20">!<pos:position pos:line="96" pos:column="21"/></operator><name><name pos:line="96" pos:column="21">request<pos:position pos:line="96" pos:column="28"/></name><operator pos:line="96" pos:column="28">-&gt;<pos:position pos:line="96" pos:column="33"/></operator><name pos:line="96" pos:column="30">flags<pos:position pos:line="96" pos:column="35"/></name><operator pos:line="96" pos:column="35">.<pos:position pos:line="96" pos:column="36"/></operator><name pos:line="96" pos:column="36">ignoreCc<pos:position pos:line="96" pos:column="44"/></name></name></expr>)<pos:position pos:line="96" pos:column="45"/></condition><then pos:line="96" pos:column="45"> <block pos:line="96" pos:column="46">{
        <decl_stmt><decl><type><name pos:line="97" pos:column="9">HttpHdrCc<pos:position pos:line="97" pos:column="18"/></name> <modifier pos:line="97" pos:column="19">*<pos:position pos:line="97" pos:column="20"/></modifier></type><name pos:line="97" pos:column="20">cc<pos:position pos:line="97" pos:column="22"/></name> <init pos:line="97" pos:column="23">= <expr><name><name pos:line="97" pos:column="25">request<pos:position pos:line="97" pos:column="32"/></name><operator pos:line="97" pos:column="32">-&gt;<pos:position pos:line="97" pos:column="37"/></operator><name pos:line="97" pos:column="34">cache_control<pos:position pos:line="97" pos:column="47"/></name></name></expr></init></decl>;<pos:position pos:line="97" pos:column="48"/></decl_stmt>

        <comment type="block" pos:line="99" pos:column="9">/* If the request is an IMS request, and squid is configured NOT to service this from cache
         * (either by 'refresh-ims' in the refresh pattern or 'refresh_all_ims on' globally)
         * then force a reload from the origin.
         */</comment>
        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name><name pos:line="103" pos:column="13">request<pos:position pos:line="103" pos:column="20"/></name><operator pos:line="103" pos:column="20">-&gt;<pos:position pos:line="103" pos:column="25"/></operator><name pos:line="103" pos:column="22">flags<pos:position pos:line="103" pos:column="27"/></name><operator pos:line="103" pos:column="27">.<pos:position pos:line="103" pos:column="28"/></operator><name pos:line="103" pos:column="28">ims<pos:position pos:line="103" pos:column="31"/></name></name> <operator pos:line="103" pos:column="32">&amp;&amp;<pos:position pos:line="103" pos:column="42"/></operator> <operator pos:line="103" pos:column="35">(<pos:position pos:line="103" pos:column="36"/></operator><name><name pos:line="103" pos:column="36">R<pos:position pos:line="103" pos:column="37"/></name><operator pos:line="103" pos:column="37">-&gt;<pos:position pos:line="103" pos:column="42"/></operator><name pos:line="103" pos:column="39">flags<pos:position pos:line="103" pos:column="44"/></name><operator pos:line="103" pos:column="44">.<pos:position pos:line="103" pos:column="45"/></operator><name pos:line="103" pos:column="45">refresh_ims<pos:position pos:line="103" pos:column="56"/></name></name> <operator pos:line="103" pos:column="57">||<pos:position pos:line="103" pos:column="59"/></operator> <name><name pos:line="103" pos:column="60">Config<pos:position pos:line="103" pos:column="66"/></name><operator pos:line="103" pos:column="66">.<pos:position pos:line="103" pos:column="67"/></operator><name pos:line="103" pos:column="67">onoff<pos:position pos:line="103" pos:column="72"/></name><operator pos:line="103" pos:column="72">.<pos:position pos:line="103" pos:column="73"/></operator><name pos:line="103" pos:column="73">refresh_all_ims<pos:position pos:line="103" pos:column="88"/></name></name><operator pos:line="103" pos:column="88">)<pos:position pos:line="103" pos:column="89"/></operator></expr>)<pos:position pos:line="103" pos:column="90"/></condition><then pos:line="103" pos:column="90"> <block pos:line="103" pos:column="91">{
            <comment type="line" pos:line="104" pos:column="13">// The client's no-cache header is changed into a IMS query</comment>
            <expr_stmt><expr><call><name pos:line="105" pos:column="13">debugs<pos:position pos:line="105" pos:column="19"/></name><argument_list pos:line="105" pos:column="19">(<argument><expr><literal type="number" pos:line="105" pos:column="20">22<pos:position pos:line="105" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="105" pos:column="24">3<pos:position pos:line="105" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="105" pos:column="27">"YES: Client IMS request forcing revalidation of object (refresh-ims option)"<pos:position pos:line="105" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="105" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="106"/></expr_stmt>
            <return pos:line="106" pos:column="13">return <expr><name pos:line="106" pos:column="20">STALE_FORCED_RELOAD<pos:position pos:line="106" pos:column="39"/></name></expr>;<pos:position pos:line="106" pos:column="40"/></return>
        }<pos:position pos:line="107" pos:column="10"/></block></then></if>

<cpp:if pos:line="109" pos:column="1">#<cpp:directive pos:line="109" pos:column="2">if<pos:position pos:line="109" pos:column="4"/></cpp:directive> <expr><name pos:line="109" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="109" pos:column="24"/></name></expr></cpp:if>
        <comment type="block" pos:line="110" pos:column="9">/* Normally a client reload request ("Cache-Control: no-cache" or "Pragma: no-cache")
         * means we must treat this reponse as STALE and fetch a new one.
         *
         * However, some options exist to override this behaviour. For example, we might just
         * revalidate our existing response, or even just serve it up without revalidating it.
         *
         *     ---- Note on the meaning of nocache_hack -----
         *
         * The nocache_hack flag has a very specific and complex meaning:
         *
         * (a) this is a reload request ("Cache-Control: no-cache" or "Pragma: no-cache" header)
         * and (b) the configuration file either has at least one refresh_pattern with
         * ignore-reload or reload-into-ims (not necessarily the rule matching this request) or
         * the global reload_into_ims is set to on
         *
         * In other words: this is a client reload, and we might need to override
         * the default behaviour (but we might not).
         *
         * "nocache_hack" is a pretty deceptive name for such a complicated meaning.
         */</comment>
        <if pos:line="130" pos:column="9">if <condition pos:line="130" pos:column="12">(<expr><call><name><name pos:line="130" pos:column="13">request<pos:position pos:line="130" pos:column="20"/></name><operator pos:line="130" pos:column="20">-&gt;<pos:position pos:line="130" pos:column="25"/></operator><name pos:line="130" pos:column="22">flags<pos:position pos:line="130" pos:column="27"/></name><operator pos:line="130" pos:column="27">.<pos:position pos:line="130" pos:column="28"/></operator><name pos:line="130" pos:column="28">noCacheHack<pos:position pos:line="130" pos:column="39"/></name></name><argument_list pos:line="130" pos:column="39">()<pos:position pos:line="130" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="130" pos:column="42"/></condition><then pos:line="130" pos:column="42"> <block pos:line="130" pos:column="43">{

            <if pos:line="132" pos:column="13">if <condition pos:line="132" pos:column="16">(<expr><name><name pos:line="132" pos:column="17">R<pos:position pos:line="132" pos:column="18"/></name><operator pos:line="132" pos:column="18">-&gt;<pos:position pos:line="132" pos:column="23"/></operator><name pos:line="132" pos:column="20">flags<pos:position pos:line="132" pos:column="25"/></name><operator pos:line="132" pos:column="25">.<pos:position pos:line="132" pos:column="26"/></operator><name pos:line="132" pos:column="26">ignore_reload<pos:position pos:line="132" pos:column="39"/></name></name></expr>)<pos:position pos:line="132" pos:column="40"/></condition><then pos:line="132" pos:column="40"> <block pos:line="132" pos:column="41">{
                <comment type="block" pos:line="133" pos:column="17">/* The client's no-cache header is ignored completely - we'll try to serve
                 * what we have (assuming it's still fresh, etc.)
                 */</comment>
                <expr_stmt><expr><call><name pos:line="136" pos:column="17">debugs<pos:position pos:line="136" pos:column="23"/></name><argument_list pos:line="136" pos:column="23">(<argument><expr><literal type="number" pos:line="136" pos:column="24">22<pos:position pos:line="136" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="136" pos:column="28">3<pos:position pos:line="136" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="136" pos:column="31">"MAYBE: Ignoring client reload request - trying to serve from cache (ignore-reload option)"<pos:position pos:line="136" pos:column="122"/></literal></expr></argument>)<pos:position pos:line="136" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="136" pos:column="124"/></expr_stmt>
            }<pos:position pos:line="137" pos:column="14"/></block></then> <elseif pos:line="137" pos:column="15">else <if pos:line="137" pos:column="20">if <condition pos:line="137" pos:column="23">(<expr><name><name pos:line="137" pos:column="24">R<pos:position pos:line="137" pos:column="25"/></name><operator pos:line="137" pos:column="25">-&gt;<pos:position pos:line="137" pos:column="30"/></operator><name pos:line="137" pos:column="27">flags<pos:position pos:line="137" pos:column="32"/></name><operator pos:line="137" pos:column="32">.<pos:position pos:line="137" pos:column="33"/></operator><name pos:line="137" pos:column="33">reload_into_ims<pos:position pos:line="137" pos:column="48"/></name></name> <operator pos:line="137" pos:column="49">||<pos:position pos:line="137" pos:column="51"/></operator> <name><name pos:line="137" pos:column="52">Config<pos:position pos:line="137" pos:column="58"/></name><operator pos:line="137" pos:column="58">.<pos:position pos:line="137" pos:column="59"/></operator><name pos:line="137" pos:column="59">onoff<pos:position pos:line="137" pos:column="64"/></name><operator pos:line="137" pos:column="64">.<pos:position pos:line="137" pos:column="65"/></operator><name pos:line="137" pos:column="65">reload_into_ims<pos:position pos:line="137" pos:column="80"/></name></name></expr>)<pos:position pos:line="137" pos:column="81"/></condition><then pos:line="137" pos:column="81"> <block pos:line="137" pos:column="82">{
                <comment type="block" pos:line="138" pos:column="17">/* The client's no-cache header is not honoured completely - we'll just try
                 * to revalidate our cached copy (IMS to origin) instead of fetching a new
                 * copy with an unconditional GET.
                 */</comment>
                <expr_stmt><expr><call><name pos:line="142" pos:column="17">debugs<pos:position pos:line="142" pos:column="23"/></name><argument_list pos:line="142" pos:column="23">(<argument><expr><literal type="number" pos:line="142" pos:column="24">22<pos:position pos:line="142" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="28">3<pos:position pos:line="142" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="31">"YES: Client reload request - cheating, only revalidating with origin (reload-into-ims option)"<pos:position pos:line="142" pos:column="126"/></literal></expr></argument>)<pos:position pos:line="142" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="142" pos:column="128"/></expr_stmt>
                <return pos:line="143" pos:column="17">return <expr><name pos:line="143" pos:column="24">STALE_RELOAD_INTO_IMS<pos:position pos:line="143" pos:column="45"/></name></expr>;<pos:position pos:line="143" pos:column="46"/></return>
            }<pos:position pos:line="144" pos:column="14"/></block></then></if></elseif> <else pos:line="144" pos:column="15">else <block pos:line="144" pos:column="20">{
                <comment type="block" pos:line="145" pos:column="17">/* The client's no-cache header is honoured - we fetch a new copy from origin */</comment>
                <expr_stmt><expr><call><name pos:line="146" pos:column="17">debugs<pos:position pos:line="146" pos:column="23"/></name><argument_list pos:line="146" pos:column="23">(<argument><expr><literal type="number" pos:line="146" pos:column="24">22<pos:position pos:line="146" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="28">3<pos:position pos:line="146" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="31">"YES: Client reload request - fetching new copy from origin"<pos:position pos:line="146" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="93"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="147" pos:column="17">request<pos:position pos:line="147" pos:column="24"/></name><operator pos:line="147" pos:column="24">-&gt;<pos:position pos:line="147" pos:column="29"/></operator><name pos:line="147" pos:column="26">flags<pos:position pos:line="147" pos:column="31"/></name><operator pos:line="147" pos:column="31">.<pos:position pos:line="147" pos:column="32"/></operator><name pos:line="147" pos:column="32">noCache<pos:position pos:line="147" pos:column="39"/></name></name> <operator pos:line="147" pos:column="40">=<pos:position pos:line="147" pos:column="41"/></operator> <literal type="boolean" pos:line="147" pos:column="42">true<pos:position pos:line="147" pos:column="46"/></literal></expr>;<pos:position pos:line="147" pos:column="47"/></expr_stmt>
                <return pos:line="148" pos:column="17">return <expr><name pos:line="148" pos:column="24">STALE_FORCED_RELOAD<pos:position pos:line="148" pos:column="43"/></name></expr>;<pos:position pos:line="148" pos:column="44"/></return>
            }<pos:position pos:line="149" pos:column="14"/></block></else></if>
        }<pos:position pos:line="150" pos:column="10"/></block></then></if>
<cpp:endif pos:line="151" pos:column="1">#<cpp:directive pos:line="151" pos:column="2">endif<pos:position pos:line="151" pos:column="7"/></cpp:directive></cpp:endif>

        <comment type="line" pos:line="153" pos:column="9">// Check the Cache-Control client request header</comment>
        <if pos:line="154" pos:column="9">if <condition pos:line="154" pos:column="12">(<expr><name pos:line="154" pos:column="13">NULL<pos:position pos:line="154" pos:column="17"/></name> <operator pos:line="154" pos:column="18">!=<pos:position pos:line="154" pos:column="20"/></operator> <name pos:line="154" pos:column="21">cc<pos:position pos:line="154" pos:column="23"/></name></expr>)<pos:position pos:line="154" pos:column="24"/></condition><then pos:line="154" pos:column="24"> <block pos:line="154" pos:column="25">{

            <comment type="line" pos:line="156" pos:column="13">// max-age directive</comment>
            <decl_stmt><decl><type><name pos:line="157" pos:column="13">int<pos:position pos:line="157" pos:column="16"/></name></type> <name pos:line="157" pos:column="17">maxAge<pos:position pos:line="157" pos:column="23"/></name> <init pos:line="157" pos:column="24">= <expr><operator pos:line="157" pos:column="26">-<pos:position pos:line="157" pos:column="27"/></operator><literal type="number" pos:line="157" pos:column="27">1<pos:position pos:line="157" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="157" pos:column="29"/></decl_stmt>
            <if pos:line="158" pos:column="13">if <condition pos:line="158" pos:column="16">(<expr><call><name><name pos:line="158" pos:column="17">cc<pos:position pos:line="158" pos:column="19"/></name><operator pos:line="158" pos:column="19">-&gt;<pos:position pos:line="158" pos:column="24"/></operator><name pos:line="158" pos:column="21">hasMaxAge<pos:position pos:line="158" pos:column="30"/></name></name><argument_list pos:line="158" pos:column="30">(<argument><expr><operator pos:line="158" pos:column="31">&amp;<pos:position pos:line="158" pos:column="36"/></operator><name pos:line="158" pos:column="32">maxAge<pos:position pos:line="158" pos:column="38"/></name></expr></argument>)<pos:position pos:line="158" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="158" pos:column="40"/></condition><then pos:line="158" pos:column="40"> <block pos:line="158" pos:column="41">{

                <comment type="line" pos:line="160" pos:column="17">// draft-mcmanus-immutable-00: reply contains CC:immutable then ignore client CC:max-age=N</comment>
                <if pos:line="161" pos:column="17">if <condition pos:line="161" pos:column="20">(<expr><name pos:line="161" pos:column="21">reply<pos:position pos:line="161" pos:column="26"/></name> <operator pos:line="161" pos:column="27">&amp;&amp;<pos:position pos:line="161" pos:column="37"/></operator> <name><name pos:line="161" pos:column="30">reply<pos:position pos:line="161" pos:column="35"/></name><operator pos:line="161" pos:column="35">-&gt;<pos:position pos:line="161" pos:column="40"/></operator><name pos:line="161" pos:column="37">cache_control<pos:position pos:line="161" pos:column="50"/></name></name> <operator pos:line="161" pos:column="51">&amp;&amp;<pos:position pos:line="161" pos:column="61"/></operator> <call><name><name pos:line="161" pos:column="54">reply<pos:position pos:line="161" pos:column="59"/></name><operator pos:line="161" pos:column="59">-&gt;<pos:position pos:line="161" pos:column="64"/></operator><name pos:line="161" pos:column="61">cache_control<pos:position pos:line="161" pos:column="74"/></name><operator pos:line="161" pos:column="74">-&gt;<pos:position pos:line="161" pos:column="79"/></operator><name pos:line="161" pos:column="76">hasImmutable<pos:position pos:line="161" pos:column="88"/></name></name><argument_list pos:line="161" pos:column="88">()<pos:position pos:line="161" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="161" pos:column="91"/></condition><then pos:line="161" pos:column="91"> <block pos:line="161" pos:column="92">{
                    <expr_stmt><expr><call><name pos:line="162" pos:column="21">debugs<pos:position pos:line="162" pos:column="27"/></name><argument_list pos:line="162" pos:column="27">(<argument><expr><literal type="number" pos:line="162" pos:column="28">22<pos:position pos:line="162" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="162" pos:column="32">3<pos:position pos:line="162" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="162" pos:column="35">"MAYBE: Ignoring client CC:max-age="<pos:position pos:line="162" pos:column="71"/></literal> <operator pos:line="162" pos:column="72">&lt;&lt;<pos:position pos:line="162" pos:column="80"/></operator> <name pos:line="162" pos:column="75">maxAge<pos:position pos:line="162" pos:column="81"/></name> <operator pos:line="162" pos:column="82">&lt;&lt;<pos:position pos:line="162" pos:column="90"/></operator> <literal type="string" pos:line="162" pos:column="85">" request - 'Cache-Control: immutable'"<pos:position pos:line="162" pos:column="124"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="126"/></expr_stmt>

<cpp:if pos:line="164" pos:column="1">#<cpp:directive pos:line="164" pos:column="2">if<pos:position pos:line="164" pos:column="4"/></cpp:directive> <expr><name pos:line="164" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="164" pos:column="24"/></name></expr></cpp:if>
                    <comment type="line" pos:line="165" pos:column="21">// Ignore of client "Cache-Control: max-age=0" header</comment>
                }<pos:position pos:line="166" pos:column="18"/></block></then> <elseif pos:line="166" pos:column="19">else <if pos:line="166" pos:column="24">if <condition pos:line="166" pos:column="27">(<expr><name><name pos:line="166" pos:column="28">R<pos:position pos:line="166" pos:column="29"/></name><operator pos:line="166" pos:column="29">-&gt;<pos:position pos:line="166" pos:column="34"/></operator><name pos:line="166" pos:column="31">flags<pos:position pos:line="166" pos:column="36"/></name><operator pos:line="166" pos:column="36">.<pos:position pos:line="166" pos:column="37"/></operator><name pos:line="166" pos:column="37">ignore_reload<pos:position pos:line="166" pos:column="50"/></name></name> <operator pos:line="166" pos:column="51">&amp;&amp;<pos:position pos:line="166" pos:column="61"/></operator> <name pos:line="166" pos:column="54">maxAge<pos:position pos:line="166" pos:column="60"/></name> <operator pos:line="166" pos:column="61">==<pos:position pos:line="166" pos:column="63"/></operator> <literal type="number" pos:line="166" pos:column="64">0<pos:position pos:line="166" pos:column="65"/></literal></expr>)<pos:position pos:line="166" pos:column="66"/></condition><then pos:line="166" pos:column="66"> <block pos:line="166" pos:column="67">{
                    <expr_stmt><expr><call><name pos:line="167" pos:column="21">debugs<pos:position pos:line="167" pos:column="27"/></name><argument_list pos:line="167" pos:column="27">(<argument><expr><literal type="number" pos:line="167" pos:column="28">22<pos:position pos:line="167" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="167" pos:column="32">3<pos:position pos:line="167" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="167" pos:column="35">"MAYBE: Ignoring client reload request - trying to serve from cache (ignore-reload option)"<pos:position pos:line="167" pos:column="126"/></literal></expr></argument>)<pos:position pos:line="167" pos:column="127"/></argument_list></call></expr>;<pos:position pos:line="167" pos:column="128"/></expr_stmt>
<cpp:endif pos:line="168" pos:column="1">#<cpp:directive pos:line="168" pos:column="2">endif<pos:position pos:line="168" pos:column="7"/></cpp:directive></cpp:endif>

                    <comment type="line" pos:line="170" pos:column="21">// Honour client "Cache-Control: max-age=x" header</comment>
                }<pos:position pos:line="171" pos:column="18"/></block></then></if></elseif> <elseif pos:line="171" pos:column="19">else <if pos:line="171" pos:column="24">if <condition pos:line="171" pos:column="27">(<expr><name pos:line="171" pos:column="28">age<pos:position pos:line="171" pos:column="31"/></name> <operator pos:line="171" pos:column="32">&gt;<pos:position pos:line="171" pos:column="36"/></operator> <name pos:line="171" pos:column="34">maxAge<pos:position pos:line="171" pos:column="40"/></name> <operator pos:line="171" pos:column="41">||<pos:position pos:line="171" pos:column="43"/></operator> <name pos:line="171" pos:column="44">maxAge<pos:position pos:line="171" pos:column="50"/></name> <operator pos:line="171" pos:column="51">==<pos:position pos:line="171" pos:column="53"/></operator> <literal type="number" pos:line="171" pos:column="54">0<pos:position pos:line="171" pos:column="55"/></literal></expr>)<pos:position pos:line="171" pos:column="56"/></condition><then pos:line="171" pos:column="56"> <block pos:line="171" pos:column="57">{
                    <expr_stmt><expr><call><name pos:line="172" pos:column="21">debugs<pos:position pos:line="172" pos:column="27"/></name><argument_list pos:line="172" pos:column="27">(<argument><expr><literal type="number" pos:line="172" pos:column="28">22<pos:position pos:line="172" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="172" pos:column="32">3<pos:position pos:line="172" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="172" pos:column="35">"YES: Revalidating object - client 'Cache-Control: max-age="<pos:position pos:line="172" pos:column="95"/></literal> <operator pos:line="172" pos:column="96">&lt;&lt;<pos:position pos:line="172" pos:column="104"/></operator> <name pos:line="172" pos:column="99">maxAge<pos:position pos:line="172" pos:column="105"/></name> <operator pos:line="172" pos:column="106">&lt;&lt;<pos:position pos:line="172" pos:column="114"/></operator> <literal type="string" pos:line="172" pos:column="109">"'"<pos:position pos:line="172" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="172" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="172" pos:column="114"/></expr_stmt>
                    <return pos:line="173" pos:column="21">return <expr><name pos:line="173" pos:column="28">STALE_EXCEEDS_REQUEST_MAX_AGE_VALUE<pos:position pos:line="173" pos:column="63"/></name></expr>;<pos:position pos:line="173" pos:column="64"/></return>
                }<pos:position pos:line="174" pos:column="18"/></block></then></if></elseif></if>
            }<pos:position pos:line="175" pos:column="14"/></block></then></if>

            <comment type="line" pos:line="177" pos:column="13">// max-stale directive</comment>
            <decl_stmt><decl><type><name pos:line="178" pos:column="13">int<pos:position pos:line="178" pos:column="16"/></name></type> <name pos:line="178" pos:column="17">maxStale<pos:position pos:line="178" pos:column="25"/></name> <init pos:line="178" pos:column="26">= <expr><operator pos:line="178" pos:column="28">-<pos:position pos:line="178" pos:column="29"/></operator><literal type="number" pos:line="178" pos:column="29">1<pos:position pos:line="178" pos:column="30"/></literal></expr></init></decl>;<pos:position pos:line="178" pos:column="31"/></decl_stmt>
            <if pos:line="179" pos:column="13">if <condition pos:line="179" pos:column="16">(<expr><call><name><name pos:line="179" pos:column="17">cc<pos:position pos:line="179" pos:column="19"/></name><operator pos:line="179" pos:column="19">-&gt;<pos:position pos:line="179" pos:column="24"/></operator><name pos:line="179" pos:column="21">hasMaxStale<pos:position pos:line="179" pos:column="32"/></name></name><argument_list pos:line="179" pos:column="32">(<argument><expr><operator pos:line="179" pos:column="33">&amp;<pos:position pos:line="179" pos:column="38"/></operator><name pos:line="179" pos:column="34">maxStale<pos:position pos:line="179" pos:column="42"/></name></expr></argument>)<pos:position pos:line="179" pos:column="43"/></argument_list></call> <operator pos:line="179" pos:column="44">&amp;&amp;<pos:position pos:line="179" pos:column="54"/></operator> <name pos:line="179" pos:column="47">staleness<pos:position pos:line="179" pos:column="56"/></name> <operator pos:line="179" pos:column="57">&gt;<pos:position pos:line="179" pos:column="61"/></operator> <operator pos:line="179" pos:column="59">-<pos:position pos:line="179" pos:column="60"/></operator><literal type="number" pos:line="179" pos:column="60">1<pos:position pos:line="179" pos:column="61"/></literal></expr>)<pos:position pos:line="179" pos:column="62"/></condition><then pos:line="179" pos:column="62"> <block pos:line="179" pos:column="63">{
                <if pos:line="180" pos:column="17">if <condition pos:line="180" pos:column="20">(<expr><name pos:line="180" pos:column="21">maxStale<pos:position pos:line="180" pos:column="29"/></name><operator pos:line="180" pos:column="29">==<pos:position pos:line="180" pos:column="31"/></operator><name><name pos:line="180" pos:column="31">HttpHdrCc<pos:position pos:line="180" pos:column="40"/></name><operator pos:line="180" pos:column="40">::<pos:position pos:line="180" pos:column="42"/></operator><name pos:line="180" pos:column="42">MAX_STALE_ANY<pos:position pos:line="180" pos:column="55"/></name></name></expr>)<pos:position pos:line="180" pos:column="56"/></condition><then pos:line="180" pos:column="56"> <block pos:line="180" pos:column="57">{
                    <expr_stmt><expr><call><name pos:line="181" pos:column="21">debugs<pos:position pos:line="181" pos:column="27"/></name><argument_list pos:line="181" pos:column="27">(<argument><expr><literal type="number" pos:line="181" pos:column="28">22<pos:position pos:line="181" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="181" pos:column="32">3<pos:position pos:line="181" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="181" pos:column="35">"NO: Client accepts a stale response of any age - 'Cache-Control: max-stale'"<pos:position pos:line="181" pos:column="112"/></literal></expr></argument>)<pos:position pos:line="181" pos:column="113"/></argument_list></call></expr>;<pos:position pos:line="181" pos:column="114"/></expr_stmt>
                    <return pos:line="182" pos:column="21">return <expr><name pos:line="182" pos:column="28">FRESH_REQUEST_MAX_STALE_ALL<pos:position pos:line="182" pos:column="55"/></name></expr>;<pos:position pos:line="182" pos:column="56"/></return>
                }<pos:position pos:line="183" pos:column="18"/></block></then> <elseif pos:line="183" pos:column="19">else <if pos:line="183" pos:column="24">if <condition pos:line="183" pos:column="27">(<expr><name pos:line="183" pos:column="28">staleness<pos:position pos:line="183" pos:column="37"/></name> <operator pos:line="183" pos:column="38">&lt;<pos:position pos:line="183" pos:column="42"/></operator> <name pos:line="183" pos:column="40">maxStale<pos:position pos:line="183" pos:column="48"/></name></expr>)<pos:position pos:line="183" pos:column="49"/></condition><then pos:line="183" pos:column="49"> <block pos:line="183" pos:column="50">{
                    <expr_stmt><expr><call><name pos:line="184" pos:column="21">debugs<pos:position pos:line="184" pos:column="27"/></name><argument_list pos:line="184" pos:column="27">(<argument><expr><literal type="number" pos:line="184" pos:column="28">22<pos:position pos:line="184" pos:column="30"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="184" pos:column="32">3<pos:position pos:line="184" pos:column="33"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="184" pos:column="35">"NO: Client accepts a stale response - 'Cache-Control: max-stale="<pos:position pos:line="184" pos:column="101"/></literal> <operator pos:line="184" pos:column="102">&lt;&lt;<pos:position pos:line="184" pos:column="110"/></operator> <name pos:line="184" pos:column="105">maxStale<pos:position pos:line="184" pos:column="113"/></name> <operator pos:line="184" pos:column="114">&lt;&lt;<pos:position pos:line="184" pos:column="122"/></operator> <literal type="string" pos:line="184" pos:column="117">"'"<pos:position pos:line="184" pos:column="120"/></literal></expr></argument>)<pos:position pos:line="184" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="184" pos:column="122"/></expr_stmt>
                    <return pos:line="185" pos:column="21">return <expr><name pos:line="185" pos:column="28">FRESH_REQUEST_MAX_STALE_VALUE<pos:position pos:line="185" pos:column="57"/></name></expr>;<pos:position pos:line="185" pos:column="58"/></return>
                }<pos:position pos:line="186" pos:column="18"/></block></then></if></elseif></if>
            }<pos:position pos:line="187" pos:column="14"/></block></then></if>
        }<pos:position pos:line="188" pos:column="10"/></block></then></if>
    }<pos:position pos:line="189" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="191" pos:column="5">// If the object is fresh, return the right FRESH_ code</comment>
    <if pos:line="192" pos:column="5">if <condition pos:line="192" pos:column="8">(<expr><operator pos:line="192" pos:column="9">-<pos:position pos:line="192" pos:column="10"/></operator><literal type="number" pos:line="192" pos:column="10">1<pos:position pos:line="192" pos:column="11"/></literal> <operator pos:line="192" pos:column="12">==<pos:position pos:line="192" pos:column="14"/></operator> <name pos:line="192" pos:column="15">staleness<pos:position pos:line="192" pos:column="24"/></name></expr>)<pos:position pos:line="192" pos:column="25"/></condition><then pos:line="192" pos:column="25"> <block pos:line="192" pos:column="26">{
        <expr_stmt><expr><call><name pos:line="193" pos:column="9">debugs<pos:position pos:line="193" pos:column="15"/></name><argument_list pos:line="193" pos:column="15">(<argument><expr><literal type="number" pos:line="193" pos:column="16">22<pos:position pos:line="193" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="193" pos:column="20">3<pos:position pos:line="193" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="193" pos:column="23">"Object isn't stale.."<pos:position pos:line="193" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="193" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="193" pos:column="47"/></expr_stmt>
        <if pos:line="194" pos:column="9">if <condition pos:line="194" pos:column="12">(<expr><name><name pos:line="194" pos:column="13">sf<pos:position pos:line="194" pos:column="15"/></name><operator pos:line="194" pos:column="15">.<pos:position pos:line="194" pos:column="16"/></operator><name pos:line="194" pos:column="16">expires<pos:position pos:line="194" pos:column="23"/></name></name></expr>)<pos:position pos:line="194" pos:column="24"/></condition><then pos:line="194" pos:column="24"> <block pos:line="194" pos:column="25">{
            <expr_stmt><expr><call><name pos:line="195" pos:column="13">debugs<pos:position pos:line="195" pos:column="19"/></name><argument_list pos:line="195" pos:column="19">(<argument><expr><literal type="number" pos:line="195" pos:column="20">22<pos:position pos:line="195" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="195" pos:column="24">3<pos:position pos:line="195" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="195" pos:column="27">"returning FRESH_EXPIRES"<pos:position pos:line="195" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="195" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="195" pos:column="54"/></expr_stmt>
            <return pos:line="196" pos:column="13">return <expr><name pos:line="196" pos:column="20">FRESH_EXPIRES<pos:position pos:line="196" pos:column="33"/></name></expr>;<pos:position pos:line="196" pos:column="34"/></return>
        }<pos:position pos:line="197" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="199" pos:column="9">assert<pos:position pos:line="199" pos:column="15"/></name><argument_list pos:line="199" pos:column="15">(<argument><expr><operator pos:line="199" pos:column="16">!<pos:position pos:line="199" pos:column="17"/></operator><name><name pos:line="199" pos:column="17">sf<pos:position pos:line="199" pos:column="19"/></name><operator pos:line="199" pos:column="19">.<pos:position pos:line="199" pos:column="20"/></operator><name pos:line="199" pos:column="20">max<pos:position pos:line="199" pos:column="23"/></name></name></expr></argument>)<pos:position pos:line="199" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="199" pos:column="25"/></expr_stmt>

        <if pos:line="201" pos:column="9">if <condition pos:line="201" pos:column="12">(<expr><name><name pos:line="201" pos:column="13">sf<pos:position pos:line="201" pos:column="15"/></name><operator pos:line="201" pos:column="15">.<pos:position pos:line="201" pos:column="16"/></operator><name pos:line="201" pos:column="16">lmfactor<pos:position pos:line="201" pos:column="24"/></name></name></expr>)<pos:position pos:line="201" pos:column="25"/></condition><then pos:line="201" pos:column="25"> <block pos:line="201" pos:column="26">{
            <expr_stmt><expr><call><name pos:line="202" pos:column="13">debugs<pos:position pos:line="202" pos:column="19"/></name><argument_list pos:line="202" pos:column="19">(<argument><expr><literal type="number" pos:line="202" pos:column="20">22<pos:position pos:line="202" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="202" pos:column="24">3<pos:position pos:line="202" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="202" pos:column="27">"returning FRESH_LMFACTOR_RULE"<pos:position pos:line="202" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="202" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="202" pos:column="60"/></expr_stmt>
            <return pos:line="203" pos:column="13">return <expr><name pos:line="203" pos:column="20">FRESH_LMFACTOR_RULE<pos:position pos:line="203" pos:column="39"/></name></expr>;<pos:position pos:line="203" pos:column="40"/></return>
        }<pos:position pos:line="204" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="206" pos:column="9">assert<pos:position pos:line="206" pos:column="15"/></name><argument_list pos:line="206" pos:column="15">(<argument><expr><name><name pos:line="206" pos:column="16">sf<pos:position pos:line="206" pos:column="18"/></name><operator pos:line="206" pos:column="18">.<pos:position pos:line="206" pos:column="19"/></operator><name pos:line="206" pos:column="19">min<pos:position pos:line="206" pos:column="22"/></name></name></expr></argument>)<pos:position pos:line="206" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="206" pos:column="24"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="208" pos:column="9">debugs<pos:position pos:line="208" pos:column="15"/></name><argument_list pos:line="208" pos:column="15">(<argument><expr><literal type="number" pos:line="208" pos:column="16">22<pos:position pos:line="208" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="208" pos:column="20">3<pos:position pos:line="208" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="208" pos:column="23">"returning FRESH_MIN_RULE"<pos:position pos:line="208" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="51"/></expr_stmt>
        <return pos:line="209" pos:column="9">return <expr><name pos:line="209" pos:column="16">FRESH_MIN_RULE<pos:position pos:line="209" pos:column="30"/></name></expr>;<pos:position pos:line="209" pos:column="31"/></return>
    }<pos:position pos:line="210" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="212" pos:column="5">/*
     * At this point the response is stale, unless one of
     * the override options kicks in.
     * NOTE: max-stale config blocks the overrides.
     */</comment>
    <decl_stmt><decl><type><name pos:line="217" pos:column="5">int<pos:position pos:line="217" pos:column="8"/></name></type> <name pos:line="217" pos:column="9">max_stale<pos:position pos:line="217" pos:column="18"/></name> <init pos:line="217" pos:column="19">= <expr><operator pos:line="217" pos:column="21">(<pos:position pos:line="217" pos:column="22"/></operator><ternary><condition><expr><name><name pos:line="217" pos:column="22">R<pos:position pos:line="217" pos:column="23"/></name><operator pos:line="217" pos:column="23">-&gt;<pos:position pos:line="217" pos:column="28"/></operator><name pos:line="217" pos:column="25">max_stale<pos:position pos:line="217" pos:column="34"/></name></name> <operator pos:line="217" pos:column="35">&gt;=<pos:position pos:line="217" pos:column="40"/></operator> <literal type="number" pos:line="217" pos:column="38">0<pos:position pos:line="217" pos:column="39"/></literal></expr> ?<pos:position pos:line="217" pos:column="41"/></condition><then pos:line="217" pos:column="41"> <expr><name><name pos:line="217" pos:column="42">R<pos:position pos:line="217" pos:column="43"/></name><operator pos:line="217" pos:column="43">-&gt;<pos:position pos:line="217" pos:column="48"/></operator><name pos:line="217" pos:column="45">max_stale<pos:position pos:line="217" pos:column="54"/></name></name></expr> <pos:position pos:line="217" pos:column="55"/></then><else pos:line="217" pos:column="55">: <expr><name><name pos:line="217" pos:column="57">Config<pos:position pos:line="217" pos:column="63"/></name><operator pos:line="217" pos:column="63">.<pos:position pos:line="217" pos:column="64"/></operator><name pos:line="217" pos:column="64">maxStale<pos:position pos:line="217" pos:column="72"/></name></name></expr></else></ternary><operator pos:line="217" pos:column="72">)<pos:position pos:line="217" pos:column="73"/></operator></expr></init></decl>;<pos:position pos:line="217" pos:column="74"/></decl_stmt>
    <if pos:line="218" pos:column="5">if <condition pos:line="218" pos:column="8">( <expr><name pos:line="218" pos:column="10">max_stale<pos:position pos:line="218" pos:column="19"/></name> <operator pos:line="218" pos:column="20">&gt;=<pos:position pos:line="218" pos:column="25"/></operator> <literal type="number" pos:line="218" pos:column="23">0<pos:position pos:line="218" pos:column="24"/></literal> <operator pos:line="218" pos:column="25">&amp;&amp;<pos:position pos:line="218" pos:column="35"/></operator> <name pos:line="218" pos:column="28">staleness<pos:position pos:line="218" pos:column="37"/></name> <operator pos:line="218" pos:column="38">&gt;<pos:position pos:line="218" pos:column="42"/></operator> <name pos:line="218" pos:column="40">max_stale<pos:position pos:line="218" pos:column="49"/></name></expr>)<pos:position pos:line="218" pos:column="50"/></condition><then pos:line="218" pos:column="50"> <block pos:line="218" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="219" pos:column="9">debugs<pos:position pos:line="219" pos:column="15"/></name><argument_list pos:line="219" pos:column="15">(<argument><expr><literal type="number" pos:line="219" pos:column="16">22<pos:position pos:line="219" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="219" pos:column="20">3<pos:position pos:line="219" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="219" pos:column="23">"YES: refresh_pattern max-stale=N limit from squid.conf"<pos:position pos:line="219" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="219" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="219" pos:column="81"/></expr_stmt>
        <if pos:line="220" pos:column="9">if <condition pos:line="220" pos:column="12">(<expr><name pos:line="220" pos:column="13">request<pos:position pos:line="220" pos:column="20"/></name></expr>)<pos:position pos:line="220" pos:column="21"/></condition><then pos:line="220" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="221" pos:column="13">request<pos:position pos:line="221" pos:column="20"/></name><operator pos:line="221" pos:column="20">-&gt;<pos:position pos:line="221" pos:column="25"/></operator><name pos:line="221" pos:column="22">flags<pos:position pos:line="221" pos:column="27"/></name><operator pos:line="221" pos:column="27">.<pos:position pos:line="221" pos:column="28"/></operator><name pos:line="221" pos:column="28">failOnValidationError<pos:position pos:line="221" pos:column="49"/></name></name> <operator pos:line="221" pos:column="50">=<pos:position pos:line="221" pos:column="51"/></operator> <literal type="boolean" pos:line="221" pos:column="52">true<pos:position pos:line="221" pos:column="56"/></literal></expr>;<pos:position pos:line="221" pos:column="57"/></expr_stmt></block></then></if>
        <return pos:line="222" pos:column="9">return <expr><name pos:line="222" pos:column="16">STALE_MAX_STALE<pos:position pos:line="222" pos:column="31"/></name></expr>;<pos:position pos:line="222" pos:column="32"/></return>
    }<pos:position pos:line="223" pos:column="6"/></block></then></if>

    <if pos:line="225" pos:column="5">if <condition pos:line="225" pos:column="8">(<expr><name><name pos:line="225" pos:column="9">sf<pos:position pos:line="225" pos:column="11"/></name><operator pos:line="225" pos:column="11">.<pos:position pos:line="225" pos:column="12"/></operator><name pos:line="225" pos:column="12">expires<pos:position pos:line="225" pos:column="19"/></name></name></expr>)<pos:position pos:line="225" pos:column="20"/></condition><then pos:line="225" pos:column="20"> <block pos:line="225" pos:column="21">{
<cpp:if pos:line="226" pos:column="1">#<cpp:directive pos:line="226" pos:column="2">if<pos:position pos:line="226" pos:column="4"/></cpp:directive> <expr><name pos:line="226" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="226" pos:column="24"/></name></expr></cpp:if>

        <if pos:line="228" pos:column="9">if <condition pos:line="228" pos:column="12">(<expr><name><name pos:line="228" pos:column="13">R<pos:position pos:line="228" pos:column="14"/></name><operator pos:line="228" pos:column="14">-&gt;<pos:position pos:line="228" pos:column="19"/></operator><name pos:line="228" pos:column="16">flags<pos:position pos:line="228" pos:column="21"/></name><operator pos:line="228" pos:column="21">.<pos:position pos:line="228" pos:column="22"/></operator><name pos:line="228" pos:column="22">override_expire<pos:position pos:line="228" pos:column="37"/></name></name> <operator pos:line="228" pos:column="38">&amp;&amp;<pos:position pos:line="228" pos:column="48"/></operator> <name pos:line="228" pos:column="41">age<pos:position pos:line="228" pos:column="44"/></name> <operator pos:line="228" pos:column="45">&lt;<pos:position pos:line="228" pos:column="49"/></operator> <name><name pos:line="228" pos:column="47">R<pos:position pos:line="228" pos:column="48"/></name><operator pos:line="228" pos:column="48">-&gt;<pos:position pos:line="228" pos:column="53"/></operator><name pos:line="228" pos:column="50">min<pos:position pos:line="228" pos:column="53"/></name></name></expr>)<pos:position pos:line="228" pos:column="54"/></condition><then pos:line="228" pos:column="54"> <block pos:line="228" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="229" pos:column="13">debugs<pos:position pos:line="229" pos:column="19"/></name><argument_list pos:line="229" pos:column="19">(<argument><expr><literal type="number" pos:line="229" pos:column="20">22<pos:position pos:line="229" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="229" pos:column="24">3<pos:position pos:line="229" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="229" pos:column="27">"NO: Serving from cache - even though explicit expiry has passed, we enforce Min value (override-expire option)"<pos:position pos:line="229" pos:column="139"/></literal></expr></argument>)<pos:position pos:line="229" pos:column="140"/></argument_list></call></expr>;<pos:position pos:line="229" pos:column="141"/></expr_stmt>
            <return pos:line="230" pos:column="13">return <expr><name pos:line="230" pos:column="20">FRESH_OVERRIDE_EXPIRES<pos:position pos:line="230" pos:column="42"/></name></expr>;<pos:position pos:line="230" pos:column="43"/></return>
        }<pos:position pos:line="231" pos:column="10"/></block></then></if>

<cpp:endif pos:line="233" pos:column="1">#<cpp:directive pos:line="233" pos:column="2">endif<pos:position pos:line="233" pos:column="7"/></cpp:directive></cpp:endif>
        <return pos:line="234" pos:column="9">return <expr><name pos:line="234" pos:column="16">STALE_EXPIRES<pos:position pos:line="234" pos:column="29"/></name></expr>;<pos:position pos:line="234" pos:column="30"/></return>
    }<pos:position pos:line="235" pos:column="6"/></block></then></if>

    <if pos:line="237" pos:column="5">if <condition pos:line="237" pos:column="8">(<expr><name><name pos:line="237" pos:column="9">sf<pos:position pos:line="237" pos:column="11"/></name><operator pos:line="237" pos:column="11">.<pos:position pos:line="237" pos:column="12"/></operator><name pos:line="237" pos:column="12">max<pos:position pos:line="237" pos:column="15"/></name></name></expr>)<pos:position pos:line="237" pos:column="16"/></condition><then pos:line="237" pos:column="16">
        <block type="pseudo"><return pos:line="238" pos:column="9">return <expr><name pos:line="238" pos:column="16">STALE_MAX_RULE<pos:position pos:line="238" pos:column="30"/></name></expr>;<pos:position pos:line="238" pos:column="31"/></return></block></then></if>

    <if pos:line="240" pos:column="5">if <condition pos:line="240" pos:column="8">(<expr><name><name pos:line="240" pos:column="9">sf<pos:position pos:line="240" pos:column="11"/></name><operator pos:line="240" pos:column="11">.<pos:position pos:line="240" pos:column="12"/></operator><name pos:line="240" pos:column="12">lmfactor<pos:position pos:line="240" pos:column="20"/></name></name></expr>)<pos:position pos:line="240" pos:column="21"/></condition><then pos:line="240" pos:column="21"> <block pos:line="240" pos:column="22">{
<cpp:if pos:line="241" pos:column="1">#<cpp:directive pos:line="241" pos:column="2">if<pos:position pos:line="241" pos:column="4"/></cpp:directive> <expr><name pos:line="241" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="241" pos:column="24"/></name></expr></cpp:if>
        <if pos:line="242" pos:column="9">if <condition pos:line="242" pos:column="12">(<expr><name><name pos:line="242" pos:column="13">R<pos:position pos:line="242" pos:column="14"/></name><operator pos:line="242" pos:column="14">-&gt;<pos:position pos:line="242" pos:column="19"/></operator><name pos:line="242" pos:column="16">flags<pos:position pos:line="242" pos:column="21"/></name><operator pos:line="242" pos:column="21">.<pos:position pos:line="242" pos:column="22"/></operator><name pos:line="242" pos:column="22">override_lastmod<pos:position pos:line="242" pos:column="38"/></name></name> <operator pos:line="242" pos:column="39">&amp;&amp;<pos:position pos:line="242" pos:column="49"/></operator> <name pos:line="242" pos:column="42">age<pos:position pos:line="242" pos:column="45"/></name> <operator pos:line="242" pos:column="46">&lt;<pos:position pos:line="242" pos:column="50"/></operator> <name><name pos:line="242" pos:column="48">R<pos:position pos:line="242" pos:column="49"/></name><operator pos:line="242" pos:column="49">-&gt;<pos:position pos:line="242" pos:column="54"/></operator><name pos:line="242" pos:column="51">min<pos:position pos:line="242" pos:column="54"/></name></name></expr>)<pos:position pos:line="242" pos:column="55"/></condition><then pos:line="242" pos:column="55"> <block pos:line="242" pos:column="56">{
            <expr_stmt><expr><call><name pos:line="243" pos:column="13">debugs<pos:position pos:line="243" pos:column="19"/></name><argument_list pos:line="243" pos:column="19">(<argument><expr><literal type="number" pos:line="243" pos:column="20">22<pos:position pos:line="243" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="243" pos:column="24">3<pos:position pos:line="243" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="243" pos:column="27">"NO: Serving from cache - even though L-M factor says the object is stale, we enforce Min value (override-lastmod option)"<pos:position pos:line="243" pos:column="149"/></literal></expr></argument>)<pos:position pos:line="243" pos:column="150"/></argument_list></call></expr>;<pos:position pos:line="243" pos:column="151"/></expr_stmt>
            <return pos:line="244" pos:column="13">return <expr><name pos:line="244" pos:column="20">FRESH_OVERRIDE_LASTMOD<pos:position pos:line="244" pos:column="42"/></name></expr>;<pos:position pos:line="244" pos:column="43"/></return>
        }<pos:position pos:line="245" pos:column="10"/></block></then></if>
<cpp:endif pos:line="246" pos:column="1">#<cpp:directive pos:line="246" pos:column="2">endif<pos:position pos:line="246" pos:column="7"/></cpp:directive></cpp:endif>
        <expr_stmt><expr><call><name pos:line="247" pos:column="9">debugs<pos:position pos:line="247" pos:column="15"/></name><argument_list pos:line="247" pos:column="15">(<argument><expr><literal type="number" pos:line="247" pos:column="16">22<pos:position pos:line="247" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="247" pos:column="20">3<pos:position pos:line="247" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="247" pos:column="23">"YES: L-M factor says the object is stale'"<pos:position pos:line="247" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="247" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="68"/></expr_stmt>
        <return pos:line="248" pos:column="9">return <expr><name pos:line="248" pos:column="16">STALE_LMFACTOR_RULE<pos:position pos:line="248" pos:column="35"/></name></expr>;<pos:position pos:line="248" pos:column="36"/></return>
    }<pos:position pos:line="249" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="251" pos:column="5">debugs<pos:position pos:line="251" pos:column="11"/></name><argument_list pos:line="251" pos:column="11">(<argument><expr><literal type="number" pos:line="251" pos:column="12">22<pos:position pos:line="251" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="251" pos:column="16">3<pos:position pos:line="251" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="251" pos:column="19">"returning STALE_DEFAULT"<pos:position pos:line="251" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="251" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="251" pos:column="46"/></expr_stmt>
    <return pos:line="252" pos:column="5">return <expr><name pos:line="252" pos:column="12">STALE_DEFAULT<pos:position pos:line="252" pos:column="25"/></name></expr>;<pos:position pos:line="252" pos:column="26"/></return>
}<pos:position pos:line="253" pos:column="2"/></block></function></unit>

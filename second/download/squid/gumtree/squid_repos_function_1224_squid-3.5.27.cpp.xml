<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1224_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">parse_sslproxy_cert_sign<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><name pos:line="1" pos:column="38">sslproxy_cert_sign<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">*<pos:position pos:line="1" pos:column="58"/></modifier><modifier pos:line="1" pos:column="58">*<pos:position pos:line="1" pos:column="59"/></modifier></type><name pos:line="1" pos:column="59">cert_sign<pos:position pos:line="1" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="69"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <modifier pos:line="3" pos:column="10">*<pos:position pos:line="3" pos:column="11"/></modifier></type><name pos:line="3" pos:column="11">al<pos:position pos:line="3" pos:column="13"/></name></decl>;<pos:position pos:line="3" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">sslproxy_cert_sign<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">cs<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">sslproxy_cert_sign<pos:position pos:line="4" pos:column="49"/></name> <operator pos:line="4" pos:column="50">*<pos:position pos:line="4" pos:column="51"/></operator><operator pos:line="4" pos:column="51">)<pos:position pos:line="4" pos:column="52"/></operator> <call><name pos:line="4" pos:column="53">xcalloc<pos:position pos:line="4" pos:column="60"/></name><argument_list pos:line="4" pos:column="60">(<argument><expr><literal type="number" pos:line="4" pos:column="61">1<pos:position pos:line="4" pos:column="62"/></literal></expr></argument>, <argument><expr><sizeof pos:line="4" pos:column="64">sizeof<argument_list pos:line="4" pos:column="70">(<argument><expr><name pos:line="4" pos:column="71">sslproxy_cert_sign<pos:position pos:line="4" pos:column="89"/></name></expr></argument>)<pos:position pos:line="4" pos:column="90"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="4" pos:column="91"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="92"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">al<pos:position pos:line="5" pos:column="12"/></name> <operator pos:line="5" pos:column="13">=<pos:position pos:line="5" pos:column="14"/></operator> <call><name><name pos:line="5" pos:column="15">ConfigParser<pos:position pos:line="5" pos:column="27"/></name><operator pos:line="5" pos:column="27">::<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">NextToken<pos:position pos:line="5" pos:column="38"/></name></name><argument_list pos:line="5" pos:column="38">()<pos:position pos:line="5" pos:column="40"/></argument_list></call><operator pos:line="5" pos:column="40">)<pos:position pos:line="5" pos:column="41"/></operator> <operator pos:line="5" pos:column="42">==<pos:position pos:line="5" pos:column="44"/></operator> <name pos:line="5" pos:column="45">NULL<pos:position pos:line="5" pos:column="49"/></name></expr>)<pos:position pos:line="5" pos:column="50"/></condition><then pos:line="5" pos:column="50"> <block pos:line="5" pos:column="51">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">self_destruct<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">()<pos:position pos:line="6" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt>
        <return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name pos:line="10" pos:column="9">strcmp<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><name pos:line="10" pos:column="16">al<pos:position pos:line="10" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="10" pos:column="20">Ssl<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">::<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="25">CertSignAlgorithmStr<pos:position pos:line="10" pos:column="45"/></name><index pos:line="10" pos:column="45">[<expr><name><name pos:line="10" pos:column="46">Ssl<pos:position pos:line="10" pos:column="49"/></name><operator pos:line="10" pos:column="49">::<pos:position pos:line="10" pos:column="51"/></operator><name pos:line="10" pos:column="51">algSignTrusted<pos:position pos:line="10" pos:column="65"/></name></name></expr>]<pos:position pos:line="10" pos:column="66"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="67"/></argument_list></call> <operator pos:line="10" pos:column="68">==<pos:position pos:line="10" pos:column="70"/></operator> <literal type="number" pos:line="10" pos:column="71">0<pos:position pos:line="10" pos:column="72"/></literal></expr>)<pos:position pos:line="10" pos:column="73"/></condition><then pos:line="10" pos:column="73">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="9">cs<pos:position pos:line="11" pos:column="11"/></name><operator pos:line="11" pos:column="11">-&gt;<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="13">alg<pos:position pos:line="11" pos:column="16"/></name></name> <operator pos:line="11" pos:column="17">=<pos:position pos:line="11" pos:column="18"/></operator> <name><name pos:line="11" pos:column="19">Ssl<pos:position pos:line="11" pos:column="22"/></name><operator pos:line="11" pos:column="22">::<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">algSignTrusted<pos:position pos:line="11" pos:column="38"/></name></name></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt></block></then>
    <elseif pos:line="12" pos:column="5">else <if pos:line="12" pos:column="10">if <condition pos:line="12" pos:column="13">(<expr><call><name pos:line="12" pos:column="14">strcmp<pos:position pos:line="12" pos:column="20"/></name><argument_list pos:line="12" pos:column="20">(<argument><expr><name pos:line="12" pos:column="21">al<pos:position pos:line="12" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="25">Ssl<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">::<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="30">CertSignAlgorithmStr<pos:position pos:line="12" pos:column="50"/></name><index pos:line="12" pos:column="50">[<expr><name><name pos:line="12" pos:column="51">Ssl<pos:position pos:line="12" pos:column="54"/></name><operator pos:line="12" pos:column="54">::<pos:position pos:line="12" pos:column="56"/></operator><name pos:line="12" pos:column="56">algSignUntrusted<pos:position pos:line="12" pos:column="72"/></name></name></expr>]<pos:position pos:line="12" pos:column="73"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call> <operator pos:line="12" pos:column="75">==<pos:position pos:line="12" pos:column="77"/></operator> <literal type="number" pos:line="12" pos:column="78">0<pos:position pos:line="12" pos:column="79"/></literal></expr>)<pos:position pos:line="12" pos:column="80"/></condition><then pos:line="12" pos:column="80">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="9">cs<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">alg<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name><name pos:line="13" pos:column="19">Ssl<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">::<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">algSignUntrusted<pos:position pos:line="13" pos:column="40"/></name></name></expr>;<pos:position pos:line="13" pos:column="41"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="14" pos:column="5">else <if pos:line="14" pos:column="10">if <condition pos:line="14" pos:column="13">(<expr><call><name pos:line="14" pos:column="14">strcmp<pos:position pos:line="14" pos:column="20"/></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">al<pos:position pos:line="14" pos:column="23"/></name></expr></argument>, <argument><expr><name><name pos:line="14" pos:column="25">Ssl<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">::<pos:position pos:line="14" pos:column="30"/></operator><name pos:line="14" pos:column="30">CertSignAlgorithmStr<pos:position pos:line="14" pos:column="50"/></name><index pos:line="14" pos:column="50">[<expr><name><name pos:line="14" pos:column="51">Ssl<pos:position pos:line="14" pos:column="54"/></name><operator pos:line="14" pos:column="54">::<pos:position pos:line="14" pos:column="56"/></operator><name pos:line="14" pos:column="56">algSignSelf<pos:position pos:line="14" pos:column="67"/></name></name></expr>]<pos:position pos:line="14" pos:column="68"/></index></name></expr></argument>)<pos:position pos:line="14" pos:column="69"/></argument_list></call> <operator pos:line="14" pos:column="70">==<pos:position pos:line="14" pos:column="72"/></operator> <literal type="number" pos:line="14" pos:column="73">0<pos:position pos:line="14" pos:column="74"/></literal></expr>)<pos:position pos:line="14" pos:column="75"/></condition><then pos:line="14" pos:column="75">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="9">cs<pos:position pos:line="15" pos:column="11"/></name><operator pos:line="15" pos:column="11">-&gt;<pos:position pos:line="15" pos:column="16"/></operator><name pos:line="15" pos:column="13">alg<pos:position pos:line="15" pos:column="16"/></name></name> <operator pos:line="15" pos:column="17">=<pos:position pos:line="15" pos:column="18"/></operator> <name><name pos:line="15" pos:column="19">Ssl<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">::<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="24">algSignSelf<pos:position pos:line="15" pos:column="35"/></name></name></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt></block></then></if></elseif>
    <else pos:line="16" pos:column="5">else <block pos:line="16" pos:column="10">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debugs<pos:position pos:line="17" pos:column="15"/></name><argument_list pos:line="17" pos:column="15">(<argument><expr><literal type="number" pos:line="17" pos:column="16">3<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="17" pos:column="19">DBG_CRITICAL<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="33">"FATAL: sslproxy_cert_sign: unknown cert signing algorithm: "<pos:position pos:line="17" pos:column="94"/></literal> <operator pos:line="17" pos:column="95">&lt;&lt;<pos:position pos:line="17" pos:column="103"/></operator> <name pos:line="17" pos:column="98">al<pos:position pos:line="17" pos:column="100"/></name></expr></argument>)<pos:position pos:line="17" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="102"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">self_destruct<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">()<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="22" pos:column="5">aclParseAclList<pos:position pos:line="22" pos:column="20"/></name><argument_list pos:line="22" pos:column="20">(<argument><expr><name pos:line="22" pos:column="21">LegacyParser<pos:position pos:line="22" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="35">&amp;<pos:position pos:line="22" pos:column="40"/></operator><name><name pos:line="22" pos:column="36">cs<pos:position pos:line="22" pos:column="38"/></name><operator pos:line="22" pos:column="38">-&gt;<pos:position pos:line="22" pos:column="43"/></operator><name pos:line="22" pos:column="40">aclList<pos:position pos:line="22" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="49">al<pos:position pos:line="22" pos:column="51"/></name></expr></argument>)<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="53"/></expr_stmt>

    <while pos:line="24" pos:column="5">while <condition pos:line="24" pos:column="11">(<expr><operator pos:line="24" pos:column="12">*<pos:position pos:line="24" pos:column="13"/></operator><name pos:line="24" pos:column="13">cert_sign<pos:position pos:line="24" pos:column="22"/></name></expr>)<pos:position pos:line="24" pos:column="23"/></condition>
        <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="9">cert_sign<pos:position pos:line="25" pos:column="18"/></name> <operator pos:line="25" pos:column="19">=<pos:position pos:line="25" pos:column="20"/></operator> <operator pos:line="25" pos:column="21">&amp;<pos:position pos:line="25" pos:column="26"/></operator><name><operator pos:line="25" pos:column="22">(<pos:position pos:line="25" pos:column="23"/></operator><operator pos:line="25" pos:column="23">*<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="24">cert_sign<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">)<pos:position pos:line="25" pos:column="34"/></operator><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">next<pos:position pos:line="25" pos:column="40"/></name></name></expr>;<pos:position pos:line="25" pos:column="41"/></expr_stmt></block></while>

    <expr_stmt><expr><operator pos:line="27" pos:column="5">*<pos:position pos:line="27" pos:column="6"/></operator><name pos:line="27" pos:column="6">cert_sign<pos:position pos:line="27" pos:column="15"/></name> <operator pos:line="27" pos:column="16">=<pos:position pos:line="27" pos:column="17"/></operator> <name pos:line="27" pos:column="18">cs<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></expr_stmt>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

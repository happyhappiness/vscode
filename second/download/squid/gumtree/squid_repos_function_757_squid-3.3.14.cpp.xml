<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_757_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">clientInterpretRequestHeaders<pos:position pos:line="2" pos:column="30"/></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">ClientHttpRequest<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type> <name pos:line="2" pos:column="51">http<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="56"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HttpRequest<pos:position pos:line="4" pos:column="16"/></name> <modifier pos:line="4" pos:column="17">*<pos:position pos:line="4" pos:column="18"/></modifier></type><name pos:line="4" pos:column="18">request<pos:position pos:line="4" pos:column="25"/></name> <init pos:line="4" pos:column="26">= <expr><name><name pos:line="4" pos:column="28">http<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">-&gt;<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="34">request<pos:position pos:line="4" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpHeader<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">req_hdr<pos:position pos:line="5" pos:column="24"/></name> <init pos:line="5" pos:column="25">= <expr><operator pos:line="5" pos:column="27">&amp;<pos:position pos:line="5" pos:column="32"/></operator><name><name pos:line="5" pos:column="28">request<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">header<pos:position pos:line="5" pos:column="43"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">bool<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">no_cache<pos:position pos:line="6" pos:column="18"/></name> <init pos:line="6" pos:column="19">= <expr><literal type="boolean" pos:line="6" pos:column="21">false<pos:position pos:line="6" pos:column="26"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">str<pos:position pos:line="7" pos:column="20"/></name></decl>;<pos:position pos:line="7" pos:column="21"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="9" pos:column="5">request<pos:position pos:line="9" pos:column="12"/></name><operator pos:line="9" pos:column="12">-&gt;<pos:position pos:line="9" pos:column="17"/></operator><name pos:line="9" pos:column="14">imslen<pos:position pos:line="9" pos:column="20"/></name></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <operator pos:line="9" pos:column="23">-<pos:position pos:line="9" pos:column="24"/></operator><literal type="number" pos:line="9" pos:column="24">1<pos:position pos:line="9" pos:column="25"/></literal></expr>;<pos:position pos:line="9" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">request<pos:position pos:line="10" pos:column="12"/></name><operator pos:line="10" pos:column="12">-&gt;<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="14">ims<pos:position pos:line="10" pos:column="17"/></name></name> <operator pos:line="10" pos:column="18">=<pos:position pos:line="10" pos:column="19"/></operator> <call><name><name pos:line="10" pos:column="20">req_hdr<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">-&gt;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="29">getTime<pos:position pos:line="10" pos:column="36"/></name></name><argument_list pos:line="10" pos:column="36">(<argument><expr><name pos:line="10" pos:column="37">HDR_IF_MODIFIED_SINCE<pos:position pos:line="10" pos:column="58"/></name></expr></argument>)<pos:position pos:line="10" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="60"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">request<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">ims<pos:position pos:line="12" pos:column="21"/></name></name> <operator pos:line="12" pos:column="22">&gt;<pos:position pos:line="12" pos:column="26"/></operator> <literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr>)<pos:position pos:line="12" pos:column="26"/></condition><then pos:line="12" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="9">request<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">-&gt;<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="18">flags<pos:position pos:line="13" pos:column="23"/></name><operator pos:line="13" pos:column="23">.<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">ims<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <literal type="number" pos:line="13" pos:column="30">1<pos:position pos:line="13" pos:column="31"/></literal></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name><name pos:line="15" pos:column="10">request<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">-&gt;<pos:position pos:line="15" pos:column="22"/></operator><name pos:line="15" pos:column="19">flags<pos:position pos:line="15" pos:column="24"/></name><operator pos:line="15" pos:column="24">.<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="25">ignoreCc<pos:position pos:line="15" pos:column="33"/></name></name></expr>)<pos:position pos:line="15" pos:column="34"/></condition><then pos:line="15" pos:column="34"> <block pos:line="15" pos:column="35">{
        <if pos:line="16" pos:column="9">if <condition pos:line="16" pos:column="12">(<expr><name><name pos:line="16" pos:column="13">request<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">-&gt;<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="22">cache_control<pos:position pos:line="16" pos:column="35"/></name></name></expr>)<pos:position pos:line="16" pos:column="36"/></condition><then pos:line="16" pos:column="36"> <block pos:line="16" pos:column="37">{
            <if pos:line="17" pos:column="13">if <condition pos:line="17" pos:column="16">(<expr><call><name><name pos:line="17" pos:column="17">request<pos:position pos:line="17" pos:column="24"/></name><operator pos:line="17" pos:column="24">-&gt;<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="26">cache_control<pos:position pos:line="17" pos:column="39"/></name><operator pos:line="17" pos:column="39">-&gt;<pos:position pos:line="17" pos:column="44"/></operator><name pos:line="17" pos:column="41">hasNoCache<pos:position pos:line="17" pos:column="51"/></name></name><argument_list pos:line="17" pos:column="51">()<pos:position pos:line="17" pos:column="53"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="54"/></condition><then pos:line="17" pos:column="54">
                <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="17">no_cache<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">=<pos:position pos:line="18" pos:column="26"/></operator><literal type="boolean" pos:line="18" pos:column="26">true<pos:position pos:line="18" pos:column="30"/></literal></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt></block></then></if>

            <comment type="line" pos:line="20" pos:column="13">// RFC 2616: treat Pragma:no-cache as if it was Cache-Control:no-cache when Cache-Control is missing</comment>
        }<pos:position pos:line="21" pos:column="10"/></block></then> <elseif pos:line="21" pos:column="11">else <if pos:line="21" pos:column="16">if <condition pos:line="21" pos:column="19">(<expr><call><name><name pos:line="21" pos:column="20">req_hdr<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">-&gt;<pos:position pos:line="21" pos:column="32"/></operator><name pos:line="21" pos:column="29">has<pos:position pos:line="21" pos:column="32"/></name></name><argument_list pos:line="21" pos:column="32">(<argument><expr><name pos:line="21" pos:column="33">HDR_PRAGMA<pos:position pos:line="21" pos:column="43"/></name></expr></argument>)<pos:position pos:line="21" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="45"/></condition><then pos:line="21" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="13">no_cache<pos:position pos:line="22" pos:column="21"/></name> <operator pos:line="22" pos:column="22">=<pos:position pos:line="22" pos:column="23"/></operator> <call><name><name pos:line="22" pos:column="24">req_hdr<pos:position pos:line="22" pos:column="31"/></name><operator pos:line="22" pos:column="31">-&gt;<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="33">hasListMember<pos:position pos:line="22" pos:column="46"/></name></name><argument_list pos:line="22" pos:column="46">(<argument><expr><name pos:line="22" pos:column="47">HDR_PRAGMA<pos:position pos:line="22" pos:column="57"/></name></expr></argument>,<argument><expr><literal type="string" pos:line="22" pos:column="58">"no-cache"<pos:position pos:line="22" pos:column="68"/></literal></expr></argument>,<argument><expr><literal type="char" pos:line="22" pos:column="69">','<pos:position pos:line="22" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="74"/></expr_stmt></block></then></if></elseif></if>

        <comment type="block" pos:line="24" pos:column="9">/*
        * Work around for supporting the Reload button in IE browsers when Squid
        * is used as an accelerator or transparent proxy, by turning accelerated
        * IMS request to no-cache requests. Now knows about IE 5.5 fix (is
        * actually only fixed in SP1, but we can't tell whether we are talking to
        * SP1 or not so all 5.5 versions are treated 'normally').
        */</comment>
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">Config<pos:position pos:line="31" pos:column="19"/></name><operator pos:line="31" pos:column="19">.<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="20">onoff<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">.<pos:position pos:line="31" pos:column="26"/></operator><name pos:line="31" pos:column="26">ie_refresh<pos:position pos:line="31" pos:column="36"/></name></name></expr>)<pos:position pos:line="31" pos:column="37"/></condition><then pos:line="31" pos:column="37"> <block pos:line="31" pos:column="38">{
            <if pos:line="32" pos:column="13">if <condition pos:line="32" pos:column="16">(<expr><name><name pos:line="32" pos:column="17">http<pos:position pos:line="32" pos:column="21"/></name><operator pos:line="32" pos:column="21">-&gt;<pos:position pos:line="32" pos:column="26"/></operator><name pos:line="32" pos:column="23">flags<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">.<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="29">accel<pos:position pos:line="32" pos:column="34"/></name></name> <operator pos:line="32" pos:column="35">&amp;&amp;<pos:position pos:line="32" pos:column="45"/></operator> <name><name pos:line="32" pos:column="38">request<pos:position pos:line="32" pos:column="45"/></name><operator pos:line="32" pos:column="45">-&gt;<pos:position pos:line="32" pos:column="50"/></operator><name pos:line="32" pos:column="47">flags<pos:position pos:line="32" pos:column="52"/></name><operator pos:line="32" pos:column="52">.<pos:position pos:line="32" pos:column="53"/></operator><name pos:line="32" pos:column="53">ims<pos:position pos:line="32" pos:column="56"/></name></name></expr>)<pos:position pos:line="32" pos:column="57"/></condition><then pos:line="32" pos:column="57"> <block pos:line="32" pos:column="58">{
                <if pos:line="33" pos:column="17">if <condition pos:line="33" pos:column="20">(<expr><operator pos:line="33" pos:column="21">(<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="22">str<pos:position pos:line="33" pos:column="25"/></name> <operator pos:line="33" pos:column="26">=<pos:position pos:line="33" pos:column="27"/></operator> <call><name><name pos:line="33" pos:column="28">req_hdr<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">-&gt;<pos:position pos:line="33" pos:column="40"/></operator><name pos:line="33" pos:column="37">getStr<pos:position pos:line="33" pos:column="43"/></name></name><argument_list pos:line="33" pos:column="43">(<argument><expr><name pos:line="33" pos:column="44">HDR_USER_AGENT<pos:position pos:line="33" pos:column="58"/></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call><operator pos:line="33" pos:column="59">)<pos:position pos:line="33" pos:column="60"/></operator></expr>)<pos:position pos:line="33" pos:column="61"/></condition><then pos:line="33" pos:column="61"> <block pos:line="33" pos:column="62">{
                    <if pos:line="34" pos:column="21">if <condition pos:line="34" pos:column="24">(<expr><call><name pos:line="34" pos:column="25">strstr<pos:position pos:line="34" pos:column="31"/></name><argument_list pos:line="34" pos:column="31">(<argument><expr><name pos:line="34" pos:column="32">str<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="37">"MSIE 5.01"<pos:position pos:line="34" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="49"/></argument_list></call> <operator pos:line="34" pos:column="50">!=<pos:position pos:line="34" pos:column="52"/></operator> <name pos:line="34" pos:column="53">NULL<pos:position pos:line="34" pos:column="57"/></name></expr>)<pos:position pos:line="34" pos:column="58"/></condition><then pos:line="34" pos:column="58">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="35" pos:column="25">no_cache<pos:position pos:line="35" pos:column="33"/></name><operator pos:line="35" pos:column="33">=<pos:position pos:line="35" pos:column="34"/></operator><literal type="boolean" pos:line="35" pos:column="34">true<pos:position pos:line="35" pos:column="38"/></literal></expr>;<pos:position pos:line="35" pos:column="39"/></expr_stmt></block></then>
                    <elseif pos:line="36" pos:column="21">else <if pos:line="36" pos:column="26">if <condition pos:line="36" pos:column="29">(<expr><call><name pos:line="36" pos:column="30">strstr<pos:position pos:line="36" pos:column="36"/></name><argument_list pos:line="36" pos:column="36">(<argument><expr><name pos:line="36" pos:column="37">str<pos:position pos:line="36" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="42">"MSIE 5.0"<pos:position pos:line="36" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call> <operator pos:line="36" pos:column="54">!=<pos:position pos:line="36" pos:column="56"/></operator> <name pos:line="36" pos:column="57">NULL<pos:position pos:line="36" pos:column="61"/></name></expr>)<pos:position pos:line="36" pos:column="62"/></condition><then pos:line="36" pos:column="62">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="37" pos:column="25">no_cache<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">=<pos:position pos:line="37" pos:column="34"/></operator><literal type="boolean" pos:line="37" pos:column="34">true<pos:position pos:line="37" pos:column="38"/></literal></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt></block></then></if></elseif>
                    <elseif pos:line="38" pos:column="21">else <if pos:line="38" pos:column="26">if <condition pos:line="38" pos:column="29">(<expr><call><name pos:line="38" pos:column="30">strstr<pos:position pos:line="38" pos:column="36"/></name><argument_list pos:line="38" pos:column="36">(<argument><expr><name pos:line="38" pos:column="37">str<pos:position pos:line="38" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="42">"MSIE 4."<pos:position pos:line="38" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="52"/></argument_list></call> <operator pos:line="38" pos:column="53">!=<pos:position pos:line="38" pos:column="55"/></operator> <name pos:line="38" pos:column="56">NULL<pos:position pos:line="38" pos:column="60"/></name></expr>)<pos:position pos:line="38" pos:column="61"/></condition><then pos:line="38" pos:column="61">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="39" pos:column="25">no_cache<pos:position pos:line="39" pos:column="33"/></name><operator pos:line="39" pos:column="33">=<pos:position pos:line="39" pos:column="34"/></operator><literal type="boolean" pos:line="39" pos:column="34">true<pos:position pos:line="39" pos:column="38"/></literal></expr>;<pos:position pos:line="39" pos:column="39"/></expr_stmt></block></then></if></elseif>
                    <elseif pos:line="40" pos:column="21">else <if pos:line="40" pos:column="26">if <condition pos:line="40" pos:column="29">(<expr><call><name pos:line="40" pos:column="30">strstr<pos:position pos:line="40" pos:column="36"/></name><argument_list pos:line="40" pos:column="36">(<argument><expr><name pos:line="40" pos:column="37">str<pos:position pos:line="40" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="42">"MSIE 3."<pos:position pos:line="40" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="52"/></argument_list></call> <operator pos:line="40" pos:column="53">!=<pos:position pos:line="40" pos:column="55"/></operator> <name pos:line="40" pos:column="56">NULL<pos:position pos:line="40" pos:column="60"/></name></expr>)<pos:position pos:line="40" pos:column="61"/></condition><then pos:line="40" pos:column="61">
                        <block type="pseudo"><expr_stmt><expr><name pos:line="41" pos:column="25">no_cache<pos:position pos:line="41" pos:column="33"/></name><operator pos:line="41" pos:column="33">=<pos:position pos:line="41" pos:column="34"/></operator><literal type="boolean" pos:line="41" pos:column="34">true<pos:position pos:line="41" pos:column="38"/></literal></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt></block></then></if></elseif></if>
                }<pos:position pos:line="42" pos:column="18"/></block></then></if>
            }<pos:position pos:line="43" pos:column="14"/></block></then></if>
        }<pos:position pos:line="44" pos:column="10"/></block></then></if>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <if pos:line="47" pos:column="5">if <condition pos:line="47" pos:column="8">(<expr><name><name pos:line="47" pos:column="9">request<pos:position pos:line="47" pos:column="16"/></name><operator pos:line="47" pos:column="16">-&gt;<pos:position pos:line="47" pos:column="21"/></operator><name pos:line="47" pos:column="18">method<pos:position pos:line="47" pos:column="24"/></name></name> <operator pos:line="47" pos:column="25">==<pos:position pos:line="47" pos:column="27"/></operator> <name pos:line="47" pos:column="28">METHOD_OTHER<pos:position pos:line="47" pos:column="40"/></name></expr>)<pos:position pos:line="47" pos:column="41"/></condition><then pos:line="47" pos:column="41"> <block pos:line="47" pos:column="42">{
        <expr_stmt><expr><name pos:line="48" pos:column="9">no_cache<pos:position pos:line="48" pos:column="17"/></name><operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator><literal type="boolean" pos:line="48" pos:column="18">true<pos:position pos:line="48" pos:column="22"/></literal></expr>;<pos:position pos:line="48" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></then></if>

    <if pos:line="51" pos:column="5">if <condition pos:line="51" pos:column="8">(<expr><name pos:line="51" pos:column="9">no_cache<pos:position pos:line="51" pos:column="17"/></name></expr>)<pos:position pos:line="51" pos:column="18"/></condition><then pos:line="51" pos:column="18"> <block pos:line="51" pos:column="19">{
<cpp:if pos:line="52" pos:column="1">#<cpp:directive pos:line="52" pos:column="2">if<pos:position pos:line="52" pos:column="4"/></cpp:directive> <expr><name pos:line="52" pos:column="5">USE_HTTP_VIOLATIONS<pos:position pos:line="52" pos:column="24"/></name></expr></cpp:if>

        <if pos:line="54" pos:column="9">if <condition pos:line="54" pos:column="12">(<expr><name><name pos:line="54" pos:column="13">Config<pos:position pos:line="54" pos:column="19"/></name><operator pos:line="54" pos:column="19">.<pos:position pos:line="54" pos:column="20"/></operator><name pos:line="54" pos:column="20">onoff<pos:position pos:line="54" pos:column="25"/></name><operator pos:line="54" pos:column="25">.<pos:position pos:line="54" pos:column="26"/></operator><name pos:line="54" pos:column="26">reload_into_ims<pos:position pos:line="54" pos:column="41"/></name></name></expr>)<pos:position pos:line="54" pos:column="42"/></condition><then pos:line="54" pos:column="42">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="55" pos:column="13">request<pos:position pos:line="55" pos:column="20"/></name><operator pos:line="55" pos:column="20">-&gt;<pos:position pos:line="55" pos:column="25"/></operator><name pos:line="55" pos:column="22">flags<pos:position pos:line="55" pos:column="27"/></name><operator pos:line="55" pos:column="27">.<pos:position pos:line="55" pos:column="28"/></operator><name pos:line="55" pos:column="28">nocacheHack<pos:position pos:line="55" pos:column="39"/></name></name> <operator pos:line="55" pos:column="40">=<pos:position pos:line="55" pos:column="41"/></operator> <literal type="number" pos:line="55" pos:column="42">1<pos:position pos:line="55" pos:column="43"/></literal></expr>;<pos:position pos:line="55" pos:column="44"/></expr_stmt></block></then>
        <elseif pos:line="56" pos:column="9">else <if pos:line="56" pos:column="14">if <condition pos:line="56" pos:column="17">(<expr><name pos:line="56" pos:column="18">refresh_nocache_hack<pos:position pos:line="56" pos:column="38"/></name></expr>)<pos:position pos:line="56" pos:column="39"/></condition><then pos:line="56" pos:column="39">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="57" pos:column="13">request<pos:position pos:line="57" pos:column="20"/></name><operator pos:line="57" pos:column="20">-&gt;<pos:position pos:line="57" pos:column="25"/></operator><name pos:line="57" pos:column="22">flags<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">.<pos:position pos:line="57" pos:column="28"/></operator><name pos:line="57" pos:column="28">nocacheHack<pos:position pos:line="57" pos:column="39"/></name></name> <operator pos:line="57" pos:column="40">=<pos:position pos:line="57" pos:column="41"/></operator> <literal type="number" pos:line="57" pos:column="42">1<pos:position pos:line="57" pos:column="43"/></literal></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt></block></then></if></elseif>
        <else pos:line="58" pos:column="9">else
<cpp:endif pos:line="59" pos:column="1">#<cpp:directive pos:line="59" pos:column="2">endif<pos:position pos:line="59" pos:column="7"/></cpp:directive></cpp:endif>

            <block type="pseudo"><expr_stmt><expr><name><name pos:line="61" pos:column="13">request<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">-&gt;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="22">flags<pos:position pos:line="61" pos:column="27"/></name><operator pos:line="61" pos:column="27">.<pos:position pos:line="61" pos:column="28"/></operator><name pos:line="61" pos:column="28">noCache<pos:position pos:line="61" pos:column="35"/></name></name> <operator pos:line="61" pos:column="36">=<pos:position pos:line="61" pos:column="37"/></operator> <literal type="number" pos:line="61" pos:column="38">1<pos:position pos:line="61" pos:column="39"/></literal></expr>;<pos:position pos:line="61" pos:column="40"/></expr_stmt></block></else></if>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="64" pos:column="5">/* ignore range header in non-GETs or non-HEADs */</comment>
    <if pos:line="65" pos:column="5">if <condition pos:line="65" pos:column="8">(<expr><name><name pos:line="65" pos:column="9">request<pos:position pos:line="65" pos:column="16"/></name><operator pos:line="65" pos:column="16">-&gt;<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="18">method<pos:position pos:line="65" pos:column="24"/></name></name> <operator pos:line="65" pos:column="25">==<pos:position pos:line="65" pos:column="27"/></operator> <name pos:line="65" pos:column="28">METHOD_GET<pos:position pos:line="65" pos:column="38"/></name> <operator pos:line="65" pos:column="39">||<pos:position pos:line="65" pos:column="41"/></operator> <name><name pos:line="65" pos:column="42">request<pos:position pos:line="65" pos:column="49"/></name><operator pos:line="65" pos:column="49">-&gt;<pos:position pos:line="65" pos:column="54"/></operator><name pos:line="65" pos:column="51">method<pos:position pos:line="65" pos:column="57"/></name></name> <operator pos:line="65" pos:column="58">==<pos:position pos:line="65" pos:column="60"/></operator> <name pos:line="65" pos:column="61">METHOD_HEAD<pos:position pos:line="65" pos:column="72"/></name></expr>)<pos:position pos:line="65" pos:column="73"/></condition><then pos:line="65" pos:column="73"> <block pos:line="65" pos:column="74">{
        <comment type="line" pos:line="66" pos:column="9">// XXX: initialize if we got here without HttpRequest::parseHeader()</comment>
        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><operator pos:line="67" pos:column="13">!<pos:position pos:line="67" pos:column="14"/></operator><name><name pos:line="67" pos:column="14">request<pos:position pos:line="67" pos:column="21"/></name><operator pos:line="67" pos:column="21">-&gt;<pos:position pos:line="67" pos:column="26"/></operator><name pos:line="67" pos:column="23">range<pos:position pos:line="67" pos:column="28"/></name></name></expr>)<pos:position pos:line="67" pos:column="29"/></condition><then pos:line="67" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="68" pos:column="13">request<pos:position pos:line="68" pos:column="20"/></name><operator pos:line="68" pos:column="20">-&gt;<pos:position pos:line="68" pos:column="25"/></operator><name pos:line="68" pos:column="22">range<pos:position pos:line="68" pos:column="27"/></name></name> <operator pos:line="68" pos:column="28">=<pos:position pos:line="68" pos:column="29"/></operator> <call><name><name pos:line="68" pos:column="30">req_hdr<pos:position pos:line="68" pos:column="37"/></name><operator pos:line="68" pos:column="37">-&gt;<pos:position pos:line="68" pos:column="42"/></operator><name pos:line="68" pos:column="39">getRange<pos:position pos:line="68" pos:column="47"/></name></name><argument_list pos:line="68" pos:column="47">()<pos:position pos:line="68" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="50"/></expr_stmt></block></then></if>

        <if pos:line="70" pos:column="9">if <condition pos:line="70" pos:column="12">(<expr><name><name pos:line="70" pos:column="13">request<pos:position pos:line="70" pos:column="20"/></name><operator pos:line="70" pos:column="20">-&gt;<pos:position pos:line="70" pos:column="25"/></operator><name pos:line="70" pos:column="22">range<pos:position pos:line="70" pos:column="27"/></name></name></expr>)<pos:position pos:line="70" pos:column="28"/></condition><then pos:line="70" pos:column="28"> <block pos:line="70" pos:column="29">{
            <expr_stmt><expr><name><name pos:line="71" pos:column="13">request<pos:position pos:line="71" pos:column="20"/></name><operator pos:line="71" pos:column="20">-&gt;<pos:position pos:line="71" pos:column="25"/></operator><name pos:line="71" pos:column="22">flags<pos:position pos:line="71" pos:column="27"/></name><operator pos:line="71" pos:column="27">.<pos:position pos:line="71" pos:column="28"/></operator><name pos:line="71" pos:column="28">isRanged<pos:position pos:line="71" pos:column="36"/></name></name><operator pos:line="71" pos:column="36">=<pos:position pos:line="71" pos:column="37"/></operator><literal type="boolean" pos:line="71" pos:column="37">true<pos:position pos:line="71" pos:column="41"/></literal></expr>;<pos:position pos:line="71" pos:column="42"/></expr_stmt>
            <decl_stmt><decl><type><name pos:line="72" pos:column="13">clientStreamNode<pos:position pos:line="72" pos:column="29"/></name> <modifier pos:line="72" pos:column="30">*<pos:position pos:line="72" pos:column="31"/></modifier></type><name pos:line="72" pos:column="31">node<pos:position pos:line="72" pos:column="35"/></name> <init pos:line="72" pos:column="36">= <expr><operator pos:line="72" pos:column="38">(<pos:position pos:line="72" pos:column="39"/></operator><name pos:line="72" pos:column="39">clientStreamNode<pos:position pos:line="72" pos:column="55"/></name> <operator pos:line="72" pos:column="56">*<pos:position pos:line="72" pos:column="57"/></operator><operator pos:line="72" pos:column="57">)<pos:position pos:line="72" pos:column="58"/></operator><name><name pos:line="72" pos:column="58">http<pos:position pos:line="72" pos:column="62"/></name><operator pos:line="72" pos:column="62">-&gt;<pos:position pos:line="72" pos:column="67"/></operator><name pos:line="72" pos:column="64">client_stream<pos:position pos:line="72" pos:column="77"/></name><operator pos:line="72" pos:column="77">.<pos:position pos:line="72" pos:column="78"/></operator><name pos:line="72" pos:column="78">tail<pos:position pos:line="72" pos:column="82"/></name><operator pos:line="72" pos:column="82">-&gt;<pos:position pos:line="72" pos:column="87"/></operator><name pos:line="72" pos:column="84">data<pos:position pos:line="72" pos:column="88"/></name></name></expr></init></decl>;<pos:position pos:line="72" pos:column="89"/></decl_stmt>
            <comment type="block" pos:line="73" pos:column="13">/* XXX: This is suboptimal. We should give the stream the range set,
             * and thereby let the top of the stream set the offset when the
             * size becomes known. As it is, we will end up requesting from 0
             * for evey -X range specification.
             * RBC - this may be somewhat wrong. We should probably set the range
             * iter up at this point.
             */</comment>
            <expr_stmt><expr><name><name pos:line="80" pos:column="13">node<pos:position pos:line="80" pos:column="17"/></name><operator pos:line="80" pos:column="17">-&gt;<pos:position pos:line="80" pos:column="22"/></operator><name pos:line="80" pos:column="19">readBuffer<pos:position pos:line="80" pos:column="29"/></name><operator pos:line="80" pos:column="29">.<pos:position pos:line="80" pos:column="30"/></operator><name pos:line="80" pos:column="30">offset<pos:position pos:line="80" pos:column="36"/></name></name> <operator pos:line="80" pos:column="37">=<pos:position pos:line="80" pos:column="38"/></operator> <call><name><name pos:line="80" pos:column="39">request<pos:position pos:line="80" pos:column="46"/></name><operator pos:line="80" pos:column="46">-&gt;<pos:position pos:line="80" pos:column="51"/></operator><name pos:line="80" pos:column="48">range<pos:position pos:line="80" pos:column="53"/></name><operator pos:line="80" pos:column="53">-&gt;<pos:position pos:line="80" pos:column="58"/></operator><name pos:line="80" pos:column="55">lowestOffset<pos:position pos:line="80" pos:column="67"/></name></name><argument_list pos:line="80" pos:column="67">(<argument><expr><literal type="number" pos:line="80" pos:column="68">0<pos:position pos:line="80" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="71"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="81" pos:column="13">http<pos:position pos:line="81" pos:column="17"/></name><operator pos:line="81" pos:column="17">-&gt;<pos:position pos:line="81" pos:column="22"/></operator><name pos:line="81" pos:column="19">range_iter<pos:position pos:line="81" pos:column="29"/></name><operator pos:line="81" pos:column="29">.<pos:position pos:line="81" pos:column="30"/></operator><name pos:line="81" pos:column="30">pos<pos:position pos:line="81" pos:column="33"/></name></name> <operator pos:line="81" pos:column="34">=<pos:position pos:line="81" pos:column="35"/></operator> <call><name><name pos:line="81" pos:column="36">request<pos:position pos:line="81" pos:column="43"/></name><operator pos:line="81" pos:column="43">-&gt;<pos:position pos:line="81" pos:column="48"/></operator><name pos:line="81" pos:column="45">range<pos:position pos:line="81" pos:column="50"/></name><operator pos:line="81" pos:column="50">-&gt;<pos:position pos:line="81" pos:column="55"/></operator><name pos:line="81" pos:column="52">begin<pos:position pos:line="81" pos:column="57"/></name></name><argument_list pos:line="81" pos:column="57">()<pos:position pos:line="81" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="60"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="82" pos:column="13">http<pos:position pos:line="82" pos:column="17"/></name><operator pos:line="82" pos:column="17">-&gt;<pos:position pos:line="82" pos:column="22"/></operator><name pos:line="82" pos:column="19">range_iter<pos:position pos:line="82" pos:column="29"/></name><operator pos:line="82" pos:column="29">.<pos:position pos:line="82" pos:column="30"/></operator><name pos:line="82" pos:column="30">valid<pos:position pos:line="82" pos:column="35"/></name></name> <operator pos:line="82" pos:column="36">=<pos:position pos:line="82" pos:column="37"/></operator> <literal type="boolean" pos:line="82" pos:column="38">true<pos:position pos:line="82" pos:column="42"/></literal></expr>;<pos:position pos:line="82" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="83" pos:column="10"/></block></then></if>
    }<pos:position pos:line="84" pos:column="6"/></block></then>

    <comment type="block" pos:line="86" pos:column="5">/* Only HEAD and GET requests permit a Range or Request-Range header.
     * If these headers appear on any other type of request, delete them now.
     */</comment>
    <else pos:line="89" pos:column="5">else <block pos:line="89" pos:column="10">{
        <expr_stmt><expr><call><name><name pos:line="90" pos:column="9">req_hdr<pos:position pos:line="90" pos:column="16"/></name><operator pos:line="90" pos:column="16">-&gt;<pos:position pos:line="90" pos:column="21"/></operator><name pos:line="90" pos:column="18">delById<pos:position pos:line="90" pos:column="25"/></name></name><argument_list pos:line="90" pos:column="25">(<argument><expr><name pos:line="90" pos:column="26">HDR_RANGE<pos:position pos:line="90" pos:column="35"/></name></expr></argument>)<pos:position pos:line="90" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="37"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="91" pos:column="9">req_hdr<pos:position pos:line="91" pos:column="16"/></name><operator pos:line="91" pos:column="16">-&gt;<pos:position pos:line="91" pos:column="21"/></operator><name pos:line="91" pos:column="18">delById<pos:position pos:line="91" pos:column="25"/></name></name><argument_list pos:line="91" pos:column="25">(<argument><expr><name pos:line="91" pos:column="26">HDR_REQUEST_RANGE<pos:position pos:line="91" pos:column="43"/></name></expr></argument>)<pos:position pos:line="91" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="92" pos:column="9">request<pos:position pos:line="92" pos:column="16"/></name><operator pos:line="92" pos:column="16">-&gt;<pos:position pos:line="92" pos:column="21"/></operator><name pos:line="92" pos:column="18">ignoreRange<pos:position pos:line="92" pos:column="29"/></name></name><argument_list pos:line="92" pos:column="29">(<argument><expr><literal type="string" pos:line="92" pos:column="30">"neither HEAD nor GET"<pos:position pos:line="92" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="92" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="93" pos:column="6"/></block></else></if>

    <if pos:line="95" pos:column="5">if <condition pos:line="95" pos:column="8">(<expr><call><name><name pos:line="95" pos:column="9">req_hdr<pos:position pos:line="95" pos:column="16"/></name><operator pos:line="95" pos:column="16">-&gt;<pos:position pos:line="95" pos:column="21"/></operator><name pos:line="95" pos:column="18">has<pos:position pos:line="95" pos:column="21"/></name></name><argument_list pos:line="95" pos:column="21">(<argument><expr><name pos:line="95" pos:column="22">HDR_AUTHORIZATION<pos:position pos:line="95" pos:column="39"/></name></expr></argument>)<pos:position pos:line="95" pos:column="40"/></argument_list></call></expr>)<pos:position pos:line="95" pos:column="41"/></condition><then pos:line="95" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="96" pos:column="9">request<pos:position pos:line="96" pos:column="16"/></name><operator pos:line="96" pos:column="16">-&gt;<pos:position pos:line="96" pos:column="21"/></operator><name pos:line="96" pos:column="18">flags<pos:position pos:line="96" pos:column="23"/></name><operator pos:line="96" pos:column="23">.<pos:position pos:line="96" pos:column="24"/></operator><name pos:line="96" pos:column="24">auth<pos:position pos:line="96" pos:column="28"/></name></name> <operator pos:line="96" pos:column="29">=<pos:position pos:line="96" pos:column="30"/></operator> <literal type="number" pos:line="96" pos:column="31">1<pos:position pos:line="96" pos:column="32"/></literal></expr>;<pos:position pos:line="96" pos:column="33"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="98" pos:column="5">clientCheckPinning<pos:position pos:line="98" pos:column="23"/></name><argument_list pos:line="98" pos:column="23">(<argument><expr><name pos:line="98" pos:column="24">http<pos:position pos:line="98" pos:column="28"/></name></expr></argument>)<pos:position pos:line="98" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="30"/></expr_stmt>

    <if pos:line="100" pos:column="5">if <condition pos:line="100" pos:column="8">(<expr><name><name pos:line="100" pos:column="9">request<pos:position pos:line="100" pos:column="16"/></name><operator pos:line="100" pos:column="16">-&gt;<pos:position pos:line="100" pos:column="21"/></operator><name pos:line="100" pos:column="18">login<pos:position pos:line="100" pos:column="23"/></name><index pos:line="100" pos:column="23">[<expr><literal type="number" pos:line="100" pos:column="24">0<pos:position pos:line="100" pos:column="25"/></literal></expr>]<pos:position pos:line="100" pos:column="26"/></index></name> <operator pos:line="100" pos:column="27">!=<pos:position pos:line="100" pos:column="29"/></operator> <literal type="char" pos:line="100" pos:column="30">'\0'<pos:position pos:line="100" pos:column="34"/></literal></expr>)<pos:position pos:line="100" pos:column="35"/></condition><then pos:line="100" pos:column="35">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="101" pos:column="9">request<pos:position pos:line="101" pos:column="16"/></name><operator pos:line="101" pos:column="16">-&gt;<pos:position pos:line="101" pos:column="21"/></operator><name pos:line="101" pos:column="18">flags<pos:position pos:line="101" pos:column="23"/></name><operator pos:line="101" pos:column="23">.<pos:position pos:line="101" pos:column="24"/></operator><name pos:line="101" pos:column="24">auth<pos:position pos:line="101" pos:column="28"/></name></name> <operator pos:line="101" pos:column="29">=<pos:position pos:line="101" pos:column="30"/></operator> <literal type="number" pos:line="101" pos:column="31">1<pos:position pos:line="101" pos:column="32"/></literal></expr>;<pos:position pos:line="101" pos:column="33"/></expr_stmt></block></then></if>

    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><call><name><name pos:line="103" pos:column="9">req_hdr<pos:position pos:line="103" pos:column="16"/></name><operator pos:line="103" pos:column="16">-&gt;<pos:position pos:line="103" pos:column="21"/></operator><name pos:line="103" pos:column="18">has<pos:position pos:line="103" pos:column="21"/></name></name><argument_list pos:line="103" pos:column="21">(<argument><expr><name pos:line="103" pos:column="22">HDR_VIA<pos:position pos:line="103" pos:column="29"/></name></expr></argument>)<pos:position pos:line="103" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="103" pos:column="31"/></condition><then pos:line="103" pos:column="31"> <block pos:line="103" pos:column="32">{
        <decl_stmt><decl><type><name pos:line="104" pos:column="9">String<pos:position pos:line="104" pos:column="15"/></name></type> <name pos:line="104" pos:column="16">s<pos:position pos:line="104" pos:column="17"/></name> <init pos:line="104" pos:column="18">= <expr><call><name><name pos:line="104" pos:column="20">req_hdr<pos:position pos:line="104" pos:column="27"/></name><operator pos:line="104" pos:column="27">-&gt;<pos:position pos:line="104" pos:column="32"/></operator><name pos:line="104" pos:column="29">getList<pos:position pos:line="104" pos:column="36"/></name></name><argument_list pos:line="104" pos:column="36">(<argument><expr><name pos:line="104" pos:column="37">HDR_VIA<pos:position pos:line="104" pos:column="44"/></name></expr></argument>)<pos:position pos:line="104" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="104" pos:column="46"/></decl_stmt>
        <comment type="block" pos:line="105" pos:column="9">/*
         * ThisCache cannot be a member of Via header, "1.1 ThisCache" can.
         * Note ThisCache2 has a space prepended to the hostname so we don't
         * accidentally match super-domains.
         */</comment>

        <if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><call><name pos:line="111" pos:column="13">strListIsSubstr<pos:position pos:line="111" pos:column="28"/></name><argument_list pos:line="111" pos:column="28">(<argument><expr><operator pos:line="111" pos:column="29">&amp;<pos:position pos:line="111" pos:column="34"/></operator><name pos:line="111" pos:column="30">s<pos:position pos:line="111" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="33">ThisCache2<pos:position pos:line="111" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="111" pos:column="45">','<pos:position pos:line="111" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="50"/></condition><then pos:line="111" pos:column="50"> <block pos:line="111" pos:column="51">{
            <expr_stmt><expr><call><name pos:line="112" pos:column="13">debugObj<pos:position pos:line="112" pos:column="21"/></name><argument_list pos:line="112" pos:column="21">(<argument><expr><literal type="number" pos:line="112" pos:column="22">33<pos:position pos:line="112" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="112" pos:column="26">1<pos:position pos:line="112" pos:column="27"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="112" pos:column="29">"WARNING: Forwarding loop detected for:\n"<pos:position pos:line="112" pos:column="71"/></literal></expr></argument>,
                     <argument><expr><name pos:line="113" pos:column="22">request<pos:position pos:line="113" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="113" pos:column="31">(<pos:position pos:line="113" pos:column="32"/></operator><name pos:line="113" pos:column="32">ObjPackMethod<pos:position pos:line="113" pos:column="45"/></name><operator pos:line="113" pos:column="45">)<pos:position pos:line="113" pos:column="46"/></operator> <operator pos:line="113" pos:column="47">&amp;<pos:position pos:line="113" pos:column="52"/></operator> <name pos:line="113" pos:column="49">httpRequestPack<pos:position pos:line="113" pos:column="64"/></name></expr></argument>)<pos:position pos:line="113" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="113" pos:column="66"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="114" pos:column="13">request<pos:position pos:line="114" pos:column="20"/></name><operator pos:line="114" pos:column="20">-&gt;<pos:position pos:line="114" pos:column="25"/></operator><name pos:line="114" pos:column="22">flags<pos:position pos:line="114" pos:column="27"/></name><operator pos:line="114" pos:column="27">.<pos:position pos:line="114" pos:column="28"/></operator><name pos:line="114" pos:column="28">loopDetected<pos:position pos:line="114" pos:column="40"/></name></name> <operator pos:line="114" pos:column="41">=<pos:position pos:line="114" pos:column="42"/></operator> <literal type="number" pos:line="114" pos:column="43">1<pos:position pos:line="114" pos:column="44"/></literal></expr>;<pos:position pos:line="114" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="115" pos:column="10"/></block></then></if>

<cpp:if pos:line="117" pos:column="1">#<cpp:directive pos:line="117" pos:column="2">if<pos:position pos:line="117" pos:column="4"/></cpp:directive> <expr><name pos:line="117" pos:column="5">USE_FORW_VIA_DB<pos:position pos:line="117" pos:column="20"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name pos:line="118" pos:column="9">fvdbCountVia<pos:position pos:line="118" pos:column="21"/></name><argument_list pos:line="118" pos:column="21">(<argument><expr><call><name><name pos:line="118" pos:column="22">s<pos:position pos:line="118" pos:column="23"/></name><operator pos:line="118" pos:column="23">.<pos:position pos:line="118" pos:column="24"/></operator><name pos:line="118" pos:column="24">termedBuf<pos:position pos:line="118" pos:column="33"/></name></name><argument_list pos:line="118" pos:column="33">()<pos:position pos:line="118" pos:column="35"/></argument_list></call></expr></argument>)<pos:position pos:line="118" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="37"/></expr_stmt>

<cpp:endif pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">endif<pos:position pos:line="120" pos:column="7"/></cpp:directive></cpp:endif>

        <expr_stmt><expr><call><name><name pos:line="122" pos:column="9">s<pos:position pos:line="122" pos:column="10"/></name><operator pos:line="122" pos:column="10">.<pos:position pos:line="122" pos:column="11"/></operator><name pos:line="122" pos:column="11">clean<pos:position pos:line="122" pos:column="16"/></name></name><argument_list pos:line="122" pos:column="16">()<pos:position pos:line="122" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="123" pos:column="6"/></block></then></if>

<cpp:if pos:line="125" pos:column="1">#<cpp:directive pos:line="125" pos:column="2">if<pos:position pos:line="125" pos:column="4"/></cpp:directive> <expr><name pos:line="125" pos:column="5">USE_FORW_VIA_DB<pos:position pos:line="125" pos:column="20"/></name></expr></cpp:if>

    <if pos:line="127" pos:column="5">if <condition pos:line="127" pos:column="8">(<expr><call><name><name pos:line="127" pos:column="9">req_hdr<pos:position pos:line="127" pos:column="16"/></name><operator pos:line="127" pos:column="16">-&gt;<pos:position pos:line="127" pos:column="21"/></operator><name pos:line="127" pos:column="18">has<pos:position pos:line="127" pos:column="21"/></name></name><argument_list pos:line="127" pos:column="21">(<argument><expr><name pos:line="127" pos:column="22">HDR_X_FORWARDED_FOR<pos:position pos:line="127" pos:column="41"/></name></expr></argument>)<pos:position pos:line="127" pos:column="42"/></argument_list></call></expr>)<pos:position pos:line="127" pos:column="43"/></condition><then pos:line="127" pos:column="43"> <block pos:line="127" pos:column="44">{
        <decl_stmt><decl><type><name pos:line="128" pos:column="9">String<pos:position pos:line="128" pos:column="15"/></name></type> <name pos:line="128" pos:column="16">s<pos:position pos:line="128" pos:column="17"/></name> <init pos:line="128" pos:column="18">= <expr><call><name><name pos:line="128" pos:column="20">req_hdr<pos:position pos:line="128" pos:column="27"/></name><operator pos:line="128" pos:column="27">-&gt;<pos:position pos:line="128" pos:column="32"/></operator><name pos:line="128" pos:column="29">getList<pos:position pos:line="128" pos:column="36"/></name></name><argument_list pos:line="128" pos:column="36">(<argument><expr><name pos:line="128" pos:column="37">HDR_X_FORWARDED_FOR<pos:position pos:line="128" pos:column="56"/></name></expr></argument>)<pos:position pos:line="128" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="128" pos:column="58"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="129" pos:column="9">fvdbCountForw<pos:position pos:line="129" pos:column="22"/></name><argument_list pos:line="129" pos:column="22">(<argument><expr><call><name><name pos:line="129" pos:column="23">s<pos:position pos:line="129" pos:column="24"/></name><operator pos:line="129" pos:column="24">.<pos:position pos:line="129" pos:column="25"/></operator><name pos:line="129" pos:column="25">termedBuf<pos:position pos:line="129" pos:column="34"/></name></name><argument_list pos:line="129" pos:column="34">()<pos:position pos:line="129" pos:column="36"/></argument_list></call></expr></argument>)<pos:position pos:line="129" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="129" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="130" pos:column="9">s<pos:position pos:line="130" pos:column="10"/></name><operator pos:line="130" pos:column="10">.<pos:position pos:line="130" pos:column="11"/></operator><name pos:line="130" pos:column="11">clean<pos:position pos:line="130" pos:column="16"/></name></name><argument_list pos:line="130" pos:column="16">()<pos:position pos:line="130" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="19"/></expr_stmt>
    }<pos:position pos:line="131" pos:column="6"/></block></then></if>

<cpp:endif pos:line="133" pos:column="1">#<cpp:directive pos:line="133" pos:column="2">endif<pos:position pos:line="133" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="135" pos:column="5">request<pos:position pos:line="135" pos:column="12"/></name><operator pos:line="135" pos:column="12">-&gt;<pos:position pos:line="135" pos:column="17"/></operator><name pos:line="135" pos:column="14">flags<pos:position pos:line="135" pos:column="19"/></name><operator pos:line="135" pos:column="19">.<pos:position pos:line="135" pos:column="20"/></operator><name pos:line="135" pos:column="20">cachable<pos:position pos:line="135" pos:column="28"/></name></name> <operator pos:line="135" pos:column="29">=<pos:position pos:line="135" pos:column="30"/></operator> <call><name><name pos:line="135" pos:column="31">http<pos:position pos:line="135" pos:column="35"/></name><operator pos:line="135" pos:column="35">-&gt;<pos:position pos:line="135" pos:column="40"/></operator><name pos:line="135" pos:column="37">request<pos:position pos:line="135" pos:column="44"/></name><operator pos:line="135" pos:column="44">-&gt;<pos:position pos:line="135" pos:column="49"/></operator><name pos:line="135" pos:column="46">cacheable<pos:position pos:line="135" pos:column="55"/></name></name><argument_list pos:line="135" pos:column="55">()<pos:position pos:line="135" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="58"/></expr_stmt>

    <if pos:line="137" pos:column="5">if <condition pos:line="137" pos:column="8">(<expr><call><name pos:line="137" pos:column="9">clientHierarchical<pos:position pos:line="137" pos:column="27"/></name><argument_list pos:line="137" pos:column="27">(<argument><expr><name pos:line="137" pos:column="28">http<pos:position pos:line="137" pos:column="32"/></name></expr></argument>)<pos:position pos:line="137" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="137" pos:column="34"/></condition><then pos:line="137" pos:column="34">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="138" pos:column="9">request<pos:position pos:line="138" pos:column="16"/></name><operator pos:line="138" pos:column="16">-&gt;<pos:position pos:line="138" pos:column="21"/></operator><name pos:line="138" pos:column="18">flags<pos:position pos:line="138" pos:column="23"/></name><operator pos:line="138" pos:column="23">.<pos:position pos:line="138" pos:column="24"/></operator><name pos:line="138" pos:column="24">hierarchical<pos:position pos:line="138" pos:column="36"/></name></name> <operator pos:line="138" pos:column="37">=<pos:position pos:line="138" pos:column="38"/></operator> <literal type="number" pos:line="138" pos:column="39">1<pos:position pos:line="138" pos:column="40"/></literal></expr>;<pos:position pos:line="138" pos:column="41"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="140" pos:column="5">debugs<pos:position pos:line="140" pos:column="11"/></name><argument_list pos:line="140" pos:column="11">(<argument><expr><literal type="number" pos:line="140" pos:column="12">85<pos:position pos:line="140" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="140" pos:column="16">5<pos:position pos:line="140" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="140" pos:column="19">"clientInterpretRequestHeaders: REQ_NOCACHE = "<pos:position pos:line="140" pos:column="66"/></literal> <operator pos:line="140" pos:column="67">&lt;&lt;<pos:position pos:line="140" pos:column="75"/></operator>
           <operator pos:line="141" pos:column="12">(<pos:position pos:line="141" pos:column="13"/></operator><ternary><condition><expr><name><name pos:line="141" pos:column="13">request<pos:position pos:line="141" pos:column="20"/></name><operator pos:line="141" pos:column="20">-&gt;<pos:position pos:line="141" pos:column="25"/></operator><name pos:line="141" pos:column="22">flags<pos:position pos:line="141" pos:column="27"/></name><operator pos:line="141" pos:column="27">.<pos:position pos:line="141" pos:column="28"/></operator><name pos:line="141" pos:column="28">noCache<pos:position pos:line="141" pos:column="35"/></name></name></expr> ?<pos:position pos:line="141" pos:column="37"/></condition><then pos:line="141" pos:column="37"> <expr><literal type="string" pos:line="141" pos:column="38">"SET"<pos:position pos:line="141" pos:column="43"/></literal></expr> <pos:position pos:line="141" pos:column="44"/></then><else pos:line="141" pos:column="44">: <expr><literal type="string" pos:line="141" pos:column="46">"NOT SET"<pos:position pos:line="141" pos:column="55"/></literal></expr></else></ternary><operator pos:line="141" pos:column="55">)<pos:position pos:line="141" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="141" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="142" pos:column="5">debugs<pos:position pos:line="142" pos:column="11"/></name><argument_list pos:line="142" pos:column="11">(<argument><expr><literal type="number" pos:line="142" pos:column="12">85<pos:position pos:line="142" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="142" pos:column="16">5<pos:position pos:line="142" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="142" pos:column="19">"clientInterpretRequestHeaders: REQ_CACHABLE = "<pos:position pos:line="142" pos:column="67"/></literal> <operator pos:line="142" pos:column="68">&lt;&lt;<pos:position pos:line="142" pos:column="76"/></operator>
           <operator pos:line="143" pos:column="12">(<pos:position pos:line="143" pos:column="13"/></operator><ternary><condition><expr><name><name pos:line="143" pos:column="13">request<pos:position pos:line="143" pos:column="20"/></name><operator pos:line="143" pos:column="20">-&gt;<pos:position pos:line="143" pos:column="25"/></operator><name pos:line="143" pos:column="22">flags<pos:position pos:line="143" pos:column="27"/></name><operator pos:line="143" pos:column="27">.<pos:position pos:line="143" pos:column="28"/></operator><name pos:line="143" pos:column="28">cachable<pos:position pos:line="143" pos:column="36"/></name></name></expr> ?<pos:position pos:line="143" pos:column="38"/></condition><then pos:line="143" pos:column="38"> <expr><literal type="string" pos:line="143" pos:column="39">"SET"<pos:position pos:line="143" pos:column="44"/></literal></expr> <pos:position pos:line="143" pos:column="45"/></then><else pos:line="143" pos:column="45">: <expr><literal type="string" pos:line="143" pos:column="47">"NOT SET"<pos:position pos:line="143" pos:column="56"/></literal></expr></else></ternary><operator pos:line="143" pos:column="56">)<pos:position pos:line="143" pos:column="57"/></operator></expr></argument>)<pos:position pos:line="143" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="143" pos:column="59"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="144" pos:column="5">debugs<pos:position pos:line="144" pos:column="11"/></name><argument_list pos:line="144" pos:column="11">(<argument><expr><literal type="number" pos:line="144" pos:column="12">85<pos:position pos:line="144" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="144" pos:column="16">5<pos:position pos:line="144" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="144" pos:column="19">"clientInterpretRequestHeaders: REQ_HIERARCHICAL = "<pos:position pos:line="144" pos:column="71"/></literal> <operator pos:line="144" pos:column="72">&lt;&lt;<pos:position pos:line="144" pos:column="80"/></operator>
           <operator pos:line="145" pos:column="12">(<pos:position pos:line="145" pos:column="13"/></operator><ternary><condition><expr><name><name pos:line="145" pos:column="13">request<pos:position pos:line="145" pos:column="20"/></name><operator pos:line="145" pos:column="20">-&gt;<pos:position pos:line="145" pos:column="25"/></operator><name pos:line="145" pos:column="22">flags<pos:position pos:line="145" pos:column="27"/></name><operator pos:line="145" pos:column="27">.<pos:position pos:line="145" pos:column="28"/></operator><name pos:line="145" pos:column="28">hierarchical<pos:position pos:line="145" pos:column="40"/></name></name></expr> ?<pos:position pos:line="145" pos:column="42"/></condition><then pos:line="145" pos:column="42"> <expr><literal type="string" pos:line="145" pos:column="43">"SET"<pos:position pos:line="145" pos:column="48"/></literal></expr> <pos:position pos:line="145" pos:column="49"/></then><else pos:line="145" pos:column="49">: <expr><literal type="string" pos:line="145" pos:column="51">"NOT SET"<pos:position pos:line="145" pos:column="60"/></literal></expr></else></ternary><operator pos:line="145" pos:column="60">)<pos:position pos:line="145" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="145" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="63"/></expr_stmt>

}<pos:position pos:line="147" pos:column="2"/></block></function></unit>

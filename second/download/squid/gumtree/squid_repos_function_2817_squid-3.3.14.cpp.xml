<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2817_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">wccp2_update_md5_security<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">password<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">char<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">ptr<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">char<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">packet<pos:position pos:line="2" pos:column="66"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="68">int<pos:position pos:line="2" pos:column="71"/></name></type> <name pos:line="2" pos:column="72">len<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="76"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">uint8_t<pos:position pos:line="4" pos:column="12"/></name></type> <name><name pos:line="4" pos:column="13">md5_digest<pos:position pos:line="4" pos:column="23"/></name><index pos:line="4" pos:column="23">[<expr><literal type="number" pos:line="4" pos:column="24">16<pos:position pos:line="4" pos:column="26"/></literal></expr>]<pos:position pos:line="4" pos:column="27"/></index></name></decl>;<pos:position pos:line="4" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name></type> <name><name pos:line="5" pos:column="10">pwd<pos:position pos:line="5" pos:column="13"/></name><index pos:line="5" pos:column="13">[<expr><name pos:line="5" pos:column="14">WCCP2_PASSWORD_LEN<pos:position pos:line="5" pos:column="32"/></name></expr>]<pos:position pos:line="5" pos:column="33"/></index></name></decl>;<pos:position pos:line="5" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SquidMD5_CTX<pos:position pos:line="6" pos:column="17"/></name></type> <name pos:line="6" pos:column="18">M<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">wccp2_security_md5_t<pos:position pos:line="8" pos:column="32"/></name></name> <modifier pos:line="8" pos:column="33">*<pos:position pos:line="8" pos:column="34"/></modifier></type><name pos:line="8" pos:column="34">ws<pos:position pos:line="8" pos:column="36"/></name></decl>;<pos:position pos:line="8" pos:column="37"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">80<pos:position pos:line="10" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="16">5<pos:position pos:line="10" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="19">"wccp2_update_md5_security: called"<pos:position pos:line="10" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* The password field, for the MD5 hash, needs to be 8 bytes and NUL padded. */</comment>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">memset<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><name pos:line="13" pos:column="12">pwd<pos:position pos:line="13" pos:column="15"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="17">0<pos:position pos:line="13" pos:column="18"/></literal></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="20">sizeof<argument_list pos:line="13" pos:column="26">(<argument><expr><name pos:line="13" pos:column="27">pwd<pos:position pos:line="13" pos:column="30"/></name></expr></argument>)<pos:position pos:line="13" pos:column="31"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">strncpy<pos:position pos:line="14" pos:column="12"/></name><argument_list pos:line="14" pos:column="12">(<argument><expr><name pos:line="14" pos:column="13">pwd<pos:position pos:line="14" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="18">password<pos:position pos:line="14" pos:column="26"/></name></expr></argument>, <argument><expr><sizeof pos:line="14" pos:column="28">sizeof<argument_list pos:line="14" pos:column="34">(<argument><expr><name pos:line="14" pos:column="35">pwd<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="14" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">pwd<pos:position pos:line="15" pos:column="8"/></name><index pos:line="15" pos:column="8">[<expr><sizeof pos:line="15" pos:column="9">sizeof<argument_list pos:line="15" pos:column="15">(<argument><expr><name pos:line="15" pos:column="16">pwd<pos:position pos:line="15" pos:column="19"/></name></expr></argument>)<pos:position pos:line="15" pos:column="20"/></argument_list></sizeof> <operator pos:line="15" pos:column="21">-<pos:position pos:line="15" pos:column="22"/></operator> <literal type="number" pos:line="15" pos:column="23">1<pos:position pos:line="15" pos:column="24"/></literal></expr>]<pos:position pos:line="15" pos:column="25"/></index></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <literal type="char" pos:line="15" pos:column="28">'\0'<pos:position pos:line="15" pos:column="32"/></literal></expr>;<pos:position pos:line="15" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">ws<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <operator pos:line="17" pos:column="10">(<pos:position pos:line="17" pos:column="11"/></operator>struct <name pos:line="17" pos:column="18">wccp2_security_md5_t<pos:position pos:line="17" pos:column="38"/></name> <operator pos:line="17" pos:column="39">*<pos:position pos:line="17" pos:column="40"/></operator><operator pos:line="17" pos:column="40">)<pos:position pos:line="17" pos:column="41"/></operator> <name pos:line="17" pos:column="42">ptr<pos:position pos:line="17" pos:column="45"/></name></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">assert<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><call><name pos:line="18" pos:column="12">ntohs<pos:position pos:line="18" pos:column="17"/></name><argument_list pos:line="18" pos:column="17">(<argument><expr><name><name pos:line="18" pos:column="18">ws<pos:position pos:line="18" pos:column="20"/></name><operator pos:line="18" pos:column="20">-&gt;<pos:position pos:line="18" pos:column="25"/></operator><name pos:line="18" pos:column="22">security_type<pos:position pos:line="18" pos:column="35"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="36"/></argument_list></call> <operator pos:line="18" pos:column="37">==<pos:position pos:line="18" pos:column="39"/></operator> <name pos:line="18" pos:column="40">WCCP2_SECURITY_INFO<pos:position pos:line="18" pos:column="59"/></name></expr></argument>)<pos:position pos:line="18" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="61"/></expr_stmt>
    <comment type="block" pos:line="19" pos:column="5">/* Its the security part */</comment>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">ntohl<pos:position pos:line="21" pos:column="14"/></name><argument_list pos:line="21" pos:column="14">(<argument><expr><name><name pos:line="21" pos:column="15">ws<pos:position pos:line="21" pos:column="17"/></name><operator pos:line="21" pos:column="17">-&gt;<pos:position pos:line="21" pos:column="22"/></operator><name pos:line="21" pos:column="19">security_option<pos:position pos:line="21" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="35"/></argument_list></call> <operator pos:line="21" pos:column="36">!=<pos:position pos:line="21" pos:column="38"/></operator> <name pos:line="21" pos:column="39">WCCP2_MD5_SECURITY<pos:position pos:line="21" pos:column="57"/></name></expr>)<pos:position pos:line="21" pos:column="58"/></condition><then pos:line="21" pos:column="58"> <block pos:line="21" pos:column="59">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">80<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="20">5<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="23">"wccp2_update_md5_security: this service ain't md5'ing, abort"<pos:position pos:line="22" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="87"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal></expr>;<pos:position pos:line="23" pos:column="18"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="26" pos:column="5">/* And now its the MD5 section! */</comment>
    <comment type="block" pos:line="27" pos:column="5">/* According to the draft, the MD5 security hash is the combination of
     * the 8-octet password (padded w/ NUL bytes) and the entire WCCP packet,
     * including the WCCP message header. The WCCP security implementation
     * area should be zero'ed before calculating the MD5 hash.
     */</comment>
    <comment type="block" pos:line="32" pos:column="5">/* XXX eventually we should be able to kill md5_digest and blit it directly in */</comment>
    <expr_stmt><expr><call><name pos:line="33" pos:column="5">memset<pos:position pos:line="33" pos:column="11"/></name><argument_list pos:line="33" pos:column="11">(<argument><expr><name><name pos:line="33" pos:column="12">ws<pos:position pos:line="33" pos:column="14"/></name><operator pos:line="33" pos:column="14">-&gt;<pos:position pos:line="33" pos:column="19"/></operator><name pos:line="33" pos:column="16">security_implementation<pos:position pos:line="33" pos:column="39"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="41">0<pos:position pos:line="33" pos:column="42"/></literal></expr></argument>, <argument><expr><sizeof pos:line="33" pos:column="44">sizeof<argument_list pos:line="33" pos:column="50">(<argument><expr><name><name pos:line="33" pos:column="51">ws<pos:position pos:line="33" pos:column="53"/></name><operator pos:line="33" pos:column="53">-&gt;<pos:position pos:line="33" pos:column="58"/></operator><name pos:line="33" pos:column="55">security_implementation<pos:position pos:line="33" pos:column="78"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="79"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="33" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="81"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">SquidMD5Init<pos:position pos:line="35" pos:column="17"/></name><argument_list pos:line="35" pos:column="17">(<argument><expr><operator pos:line="35" pos:column="18">&amp;<pos:position pos:line="35" pos:column="23"/></operator><name pos:line="35" pos:column="19">M<pos:position pos:line="35" pos:column="20"/></name></expr></argument>)<pos:position pos:line="35" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">SquidMD5Update<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><operator pos:line="37" pos:column="20">&amp;<pos:position pos:line="37" pos:column="25"/></operator><name pos:line="37" pos:column="21">M<pos:position pos:line="37" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="24">pwd<pos:position pos:line="37" pos:column="27"/></name></expr></argument>, <argument><expr><sizeof pos:line="37" pos:column="29">sizeof<argument_list pos:line="37" pos:column="35">(<argument><expr><name pos:line="37" pos:column="36">pwd<pos:position pos:line="37" pos:column="39"/></name></expr></argument>)<pos:position pos:line="37" pos:column="40"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="37" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">SquidMD5Update<pos:position pos:line="39" pos:column="19"/></name><argument_list pos:line="39" pos:column="19">(<argument><expr><operator pos:line="39" pos:column="20">&amp;<pos:position pos:line="39" pos:column="25"/></operator><name pos:line="39" pos:column="21">M<pos:position pos:line="39" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="24">packet<pos:position pos:line="39" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="32">len<pos:position pos:line="39" pos:column="35"/></name></expr></argument>)<pos:position pos:line="39" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="37"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">SquidMD5Final<pos:position pos:line="41" pos:column="18"/></name><argument_list pos:line="41" pos:column="18">(<argument><expr><name pos:line="41" pos:column="19">md5_digest<pos:position pos:line="41" pos:column="29"/></name></expr></argument>, <argument><expr><operator pos:line="41" pos:column="31">&amp;<pos:position pos:line="41" pos:column="36"/></operator><name pos:line="41" pos:column="32">M<pos:position pos:line="41" pos:column="33"/></name></expr></argument>)<pos:position pos:line="41" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">memcpy<pos:position pos:line="43" pos:column="11"/></name><argument_list pos:line="43" pos:column="11">(<argument><expr><name><name pos:line="43" pos:column="12">ws<pos:position pos:line="43" pos:column="14"/></name><operator pos:line="43" pos:column="14">-&gt;<pos:position pos:line="43" pos:column="19"/></operator><name pos:line="43" pos:column="16">security_implementation<pos:position pos:line="43" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="41">md5_digest<pos:position pos:line="43" pos:column="51"/></name></expr></argument>, <argument><expr><sizeof pos:line="43" pos:column="53">sizeof<argument_list pos:line="43" pos:column="59">(<argument><expr><name pos:line="43" pos:column="60">md5_digest<pos:position pos:line="43" pos:column="70"/></name></expr></argument>)<pos:position pos:line="43" pos:column="71"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="43" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="73"/></expr_stmt>

    <comment type="block" pos:line="45" pos:column="5">/* Finished! */</comment>
    <return pos:line="46" pos:column="5">return <expr><literal type="number" pos:line="46" pos:column="12">1<pos:position pos:line="46" pos:column="13"/></literal></expr>;<pos:position pos:line="46" pos:column="14"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

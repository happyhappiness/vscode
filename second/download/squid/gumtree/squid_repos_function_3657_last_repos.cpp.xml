<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3657_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">Icap<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">ServiceRep<pos:position pos:line="1" pos:column="34"/></name><operator pos:line="1" pos:column="34">::<pos:position pos:line="1" pos:column="36"/></operator><name pos:line="1" pos:column="36">noteConnectionUse<pos:position pos:line="1" pos:column="53"/></name></name><parameter_list pos:line="1" pos:column="53">(<parameter><decl><type><specifier pos:line="1" pos:column="54">const<pos:position pos:line="1" pos:column="59"/></specifier> <name><name pos:line="1" pos:column="60">Comm<pos:position pos:line="1" pos:column="64"/></name><operator pos:line="1" pos:column="64">::<pos:position pos:line="1" pos:column="66"/></operator><name pos:line="1" pos:column="66">ConnectionPointer<pos:position pos:line="1" pos:column="83"/></name></name> <modifier pos:line="1" pos:column="84">&amp;<pos:position pos:line="1" pos:column="89"/></modifier></type><name pos:line="1" pos:column="85">conn<pos:position pos:line="1" pos:column="89"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="90"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><call><name><name pos:line="3" pos:column="10">Comm<pos:position pos:line="3" pos:column="14"/></name><operator pos:line="3" pos:column="14">::<pos:position pos:line="3" pos:column="16"/></operator><name pos:line="3" pos:column="16">IsConnOpen<pos:position pos:line="3" pos:column="26"/></name></name><argument_list pos:line="3" pos:column="26">(<argument><expr><name pos:line="3" pos:column="27">conn<pos:position pos:line="3" pos:column="31"/></name></expr></argument>)<pos:position pos:line="3" pos:column="32"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">fd_table<pos:position pos:line="4" pos:column="13"/></name><index pos:line="4" pos:column="13">[<expr><name><name pos:line="4" pos:column="14">conn<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">-&gt;<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="20">fd<pos:position pos:line="4" pos:column="22"/></name></name></expr>]<pos:position pos:line="4" pos:column="23"/></index></name><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><call><name pos:line="4" pos:column="24">noteUse<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">()<pos:position pos:line="4" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="34"/></expr_stmt> <comment type="line" pos:line="4" pos:column="35">// pconn re-use, albeit not via PconnPool API</comment>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

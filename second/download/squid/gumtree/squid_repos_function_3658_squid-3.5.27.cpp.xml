<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3658_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">httpsAccept<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><specifier pos:line="2" pos:column="13">const<pos:position pos:line="2" pos:column="18"/></specifier> <name pos:line="2" pos:column="19">CommAcceptCbParams<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">&amp;<pos:position pos:line="2" pos:column="43"/></modifier></type><name pos:line="2" pos:column="39">params<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">MasterXaction<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">Pointer<pos:position pos:line="4" pos:column="27"/></name></name></type> <name pos:line="4" pos:column="28">xact<pos:position pos:line="4" pos:column="32"/></name> <init pos:line="4" pos:column="33">= <expr><name><name pos:line="4" pos:column="35">params<pos:position pos:line="4" pos:column="41"/></name><operator pos:line="4" pos:column="41">.<pos:position pos:line="4" pos:column="42"/></operator><name pos:line="4" pos:column="42">xaction<pos:position pos:line="4" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="50"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name><name pos:line="5" pos:column="11">AnyP<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">::<pos:position pos:line="5" pos:column="17"/></operator><name pos:line="5" pos:column="17">PortCfgPointer<pos:position pos:line="5" pos:column="31"/></name></name></type> <name pos:line="5" pos:column="32">s<pos:position pos:line="5" pos:column="33"/></name> <init pos:line="5" pos:column="34">= <expr><name><name pos:line="5" pos:column="36">xact<pos:position pos:line="5" pos:column="40"/></name><operator pos:line="5" pos:column="40">-&gt;<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="42">squidPort<pos:position pos:line="5" pos:column="51"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="52"/></decl_stmt>

    <comment type="line" pos:line="7" pos:column="5">// NP: it is possible the port was reconfigured when the call or accept() was queued.</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">params<pos:position pos:line="9" pos:column="15"/></name><operator pos:line="9" pos:column="15">.<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">flag<pos:position pos:line="9" pos:column="20"/></name></name> <operator pos:line="9" pos:column="21">!=<pos:position pos:line="9" pos:column="23"/></operator> <name><name pos:line="9" pos:column="24">Comm<pos:position pos:line="9" pos:column="28"/></name><operator pos:line="9" pos:column="28">::<pos:position pos:line="9" pos:column="30"/></operator><name pos:line="9" pos:column="30">OK<pos:position pos:line="9" pos:column="32"/></name></name></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33"> <block pos:line="9" pos:column="34">{
        <comment type="line" pos:line="10" pos:column="9">// Its possible the call was still queued when the client disconnected</comment>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">33<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">2<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"httpsAccept: "<pos:position pos:line="11" pos:column="38"/></literal> <operator pos:line="11" pos:column="39">&lt;&lt;<pos:position pos:line="11" pos:column="47"/></operator> <name><name pos:line="11" pos:column="42">s<pos:position pos:line="11" pos:column="43"/></name><operator pos:line="11" pos:column="43">-&gt;<pos:position pos:line="11" pos:column="48"/></operator><name pos:line="11" pos:column="45">listenConn<pos:position pos:line="11" pos:column="55"/></name></name> <operator pos:line="11" pos:column="56">&lt;&lt;<pos:position pos:line="11" pos:column="64"/></operator> <literal type="string" pos:line="11" pos:column="59">": accept failure: "<pos:position pos:line="11" pos:column="79"/></literal> <operator pos:line="11" pos:column="80">&lt;&lt;<pos:position pos:line="11" pos:column="88"/></operator> <call><name pos:line="11" pos:column="83">xstrerr<pos:position pos:line="11" pos:column="90"/></name><argument_list pos:line="11" pos:column="90">(<argument><expr><name><name pos:line="11" pos:column="91">params<pos:position pos:line="11" pos:column="97"/></name><operator pos:line="11" pos:column="97">.<pos:position pos:line="11" pos:column="98"/></operator><name pos:line="11" pos:column="98">xerrno<pos:position pos:line="11" pos:column="104"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="105"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="106"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="107"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">debugs<pos:position pos:line="15" pos:column="11"/></name><argument_list pos:line="15" pos:column="11">(<argument><expr><literal type="number" pos:line="15" pos:column="12">33<pos:position pos:line="15" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="16">4<pos:position pos:line="15" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="19">HERE<pos:position pos:line="15" pos:column="23"/></name> <operator pos:line="15" pos:column="24">&lt;&lt;<pos:position pos:line="15" pos:column="32"/></operator> <name><name pos:line="15" pos:column="27">params<pos:position pos:line="15" pos:column="33"/></name><operator pos:line="15" pos:column="33">.<pos:position pos:line="15" pos:column="34"/></operator><name pos:line="15" pos:column="34">conn<pos:position pos:line="15" pos:column="38"/></name></name> <operator pos:line="15" pos:column="39">&lt;&lt;<pos:position pos:line="15" pos:column="47"/></operator> <literal type="string" pos:line="15" pos:column="42">" accepted, starting SSL negotiation."<pos:position pos:line="15" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="82"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">fd_note<pos:position pos:line="16" pos:column="12"/></name><argument_list pos:line="16" pos:column="12">(<argument><expr><name><name pos:line="16" pos:column="13">params<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">.<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="20">conn<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">-&gt;<pos:position pos:line="16" pos:column="29"/></operator><name pos:line="16" pos:column="26">fd<pos:position pos:line="16" pos:column="28"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="30">"client https connect"<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">s<pos:position pos:line="18" pos:column="10"/></name><operator pos:line="18" pos:column="10">-&gt;<pos:position pos:line="18" pos:column="15"/></operator><name pos:line="18" pos:column="12">tcp_keepalive<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">.<pos:position pos:line="18" pos:column="26"/></operator><name pos:line="18" pos:column="26">enabled<pos:position pos:line="18" pos:column="33"/></name></name></expr>)<pos:position pos:line="18" pos:column="34"/></condition><then pos:line="18" pos:column="34"> <block pos:line="18" pos:column="35">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">commSetTcpKeepalive<pos:position pos:line="19" pos:column="28"/></name><argument_list pos:line="19" pos:column="28">(<argument><expr><name><name pos:line="19" pos:column="29">params<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">.<pos:position pos:line="19" pos:column="36"/></operator><name pos:line="19" pos:column="36">conn<pos:position pos:line="19" pos:column="40"/></name><operator pos:line="19" pos:column="40">-&gt;<pos:position pos:line="19" pos:column="45"/></operator><name pos:line="19" pos:column="42">fd<pos:position pos:line="19" pos:column="44"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="46">s<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">tcp_keepalive<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">.<pos:position pos:line="19" pos:column="63"/></operator><name pos:line="19" pos:column="63">idle<pos:position pos:line="19" pos:column="67"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="69">s<pos:position pos:line="19" pos:column="70"/></name><operator pos:line="19" pos:column="70">-&gt;<pos:position pos:line="19" pos:column="75"/></operator><name pos:line="19" pos:column="72">tcp_keepalive<pos:position pos:line="19" pos:column="85"/></name><operator pos:line="19" pos:column="85">.<pos:position pos:line="19" pos:column="86"/></operator><name pos:line="19" pos:column="86">interval<pos:position pos:line="19" pos:column="94"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="96">s<pos:position pos:line="19" pos:column="97"/></name><operator pos:line="19" pos:column="97">-&gt;<pos:position pos:line="19" pos:column="102"/></operator><name pos:line="19" pos:column="99">tcp_keepalive<pos:position pos:line="19" pos:column="112"/></name><operator pos:line="19" pos:column="112">.<pos:position pos:line="19" pos:column="113"/></operator><name pos:line="19" pos:column="113">timeout<pos:position pos:line="19" pos:column="120"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="121"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="122"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="22" pos:column="5">++<pos:position pos:line="22" pos:column="7"/></operator><name pos:line="22" pos:column="7">incoming_sockets_accepted<pos:position pos:line="22" pos:column="32"/></name></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt>

    <comment type="line" pos:line="24" pos:column="5">// Socket is ready, setup the connection manager to start using it</comment>
    <decl_stmt><decl><type><name pos:line="25" pos:column="5">ConnStateData<pos:position pos:line="25" pos:column="18"/></name> <modifier pos:line="25" pos:column="19">*<pos:position pos:line="25" pos:column="20"/></modifier></type><name pos:line="25" pos:column="20">connState<pos:position pos:line="25" pos:column="29"/></name> <init pos:line="25" pos:column="30">= <expr><call><name><name pos:line="25" pos:column="32">Https<pos:position pos:line="25" pos:column="37"/></name><operator pos:line="25" pos:column="37">::<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="39">NewServer<pos:position pos:line="25" pos:column="48"/></name></name><argument_list pos:line="25" pos:column="48">(<argument><expr><name pos:line="25" pos:column="49">xact<pos:position pos:line="25" pos:column="53"/></name></expr></argument>)<pos:position pos:line="25" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="55"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="26" pos:column="5">AsyncJob<pos:position pos:line="26" pos:column="13"/></name><operator pos:line="26" pos:column="13">::<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">Start<pos:position pos:line="26" pos:column="20"/></name></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">connState<pos:position pos:line="26" pos:column="30"/></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt> <comment type="line" pos:line="26" pos:column="33">// usually async-calls postHttpsAccept()</comment>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4507_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">index_name_cmp_LHASH_COMP<pos:position pos:line="1" pos:column="37"/></name><parameter_list pos:line="1" pos:column="37">(<parameter><decl><type><specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <name pos:line="1" pos:column="44">void<pos:position pos:line="1" pos:column="48"/></name> <modifier pos:line="1" pos:column="49">*<pos:position pos:line="1" pos:column="50"/></modifier></type><name pos:line="1" pos:column="50">arg1<pos:position pos:line="1" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="1" pos:column="56">const<pos:position pos:line="1" pos:column="61"/></specifier> <name pos:line="1" pos:column="62">void<pos:position pos:line="1" pos:column="66"/></name> <modifier pos:line="1" pos:column="67">*<pos:position pos:line="1" pos:column="68"/></modifier></type><name pos:line="1" pos:column="68">arg2<pos:position pos:line="1" pos:column="72"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="73"/></parameter_list> <block pos:line="1" pos:column="74">{
        <return pos:line="2" pos:column="9">return <expr><call><name pos:line="2" pos:column="16">index_name_cmp<pos:position pos:line="2" pos:column="30"/></name><argument_list pos:line="2" pos:column="30">(<argument><expr><operator pos:line="2" pos:column="31">(<pos:position pos:line="2" pos:column="32"/></operator><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <operator pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></operator><operator pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></operator><operator pos:line="2" pos:column="45">)<pos:position pos:line="2" pos:column="46"/></operator><name pos:line="2" pos:column="46">arg1<pos:position pos:line="2" pos:column="50"/></name></expr></argument>, <argument><expr><operator pos:line="2" pos:column="52">(<pos:position pos:line="2" pos:column="53"/></operator><specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier> <name pos:line="2" pos:column="59">char<pos:position pos:line="2" pos:column="63"/></name> <operator pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></operator><operator pos:line="2" pos:column="65">*<pos:position pos:line="2" pos:column="66"/></operator><operator pos:line="2" pos:column="66">)<pos:position pos:line="2" pos:column="67"/></operator><name pos:line="2" pos:column="67">arg2<pos:position pos:line="2" pos:column="71"/></name></expr></argument>)<pos:position pos:line="2" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="2" pos:column="73"/></return>
    }<pos:position pos:line="3" pos:column="6"/></block></function></unit>

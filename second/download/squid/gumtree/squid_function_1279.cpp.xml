<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1279.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Client<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">sendEprt<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">()<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name><name pos:line="4" pos:column="10">Config<pos:position pos:line="4" pos:column="16"/></name><operator pos:line="4" pos:column="16">.<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">Ftp<pos:position pos:line="4" pos:column="20"/></name><operator pos:line="4" pos:column="20">.<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">eprt<pos:position pos:line="4" pos:column="25"/></name></name></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26"> <block pos:line="4" pos:column="27">{
        <comment type="block" pos:line="5" pos:column="9">/* Disabled. Switch immediately to attempting old PORT command. */</comment>
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">debugs<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><literal type="number" pos:line="6" pos:column="16">9<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="19">3<pos:position pos:line="6" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="22">"EPRT disabled by local administrator"<pos:position pos:line="6" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="62"/></expr_stmt>
        <return pos:line="7" pos:column="9">return <expr><call><name pos:line="7" pos:column="16">sendPort<pos:position pos:line="7" pos:column="24"/></name><argument_list pos:line="7" pos:column="24">()<pos:position pos:line="7" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="27"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="10" pos:column="5">debugs<pos:position pos:line="10" pos:column="11"/></name><argument_list pos:line="10" pos:column="11">(<argument><expr><literal type="number" pos:line="10" pos:column="12">9<pos:position pos:line="10" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="10" pos:column="15">3<pos:position pos:line="10" pos:column="16"/></literal></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="18">status<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">()<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><call><name pos:line="12" pos:column="10">openListenSocket<pos:position pos:line="12" pos:column="26"/></name><argument_list pos:line="12" pos:column="26">()<pos:position pos:line="12" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="29"/></condition><then pos:line="12" pos:column="29"> <block pos:line="12" pos:column="30">{
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">failed<pos:position pos:line="13" pos:column="15"/></name><argument_list pos:line="13" pos:column="15">(<argument><expr><name pos:line="13" pos:column="16">ERR_FTP_FAILURE<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="33">0<pos:position pos:line="13" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="36"/></expr_stmt>
        <return pos:line="14" pos:column="9">return <expr><literal type="boolean" pos:line="14" pos:column="16">false<pos:position pos:line="14" pos:column="21"/></literal></expr>;<pos:position pos:line="14" pos:column="22"/></return>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">9<pos:position pos:line="17" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="15">3<pos:position pos:line="17" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="18">"Listening for FTP data connection with FD "<pos:position pos:line="17" pos:column="62"/></literal> <operator pos:line="17" pos:column="63">&lt;&lt;<pos:position pos:line="17" pos:column="71"/></operator> <name><name pos:line="17" pos:column="66">data<pos:position pos:line="17" pos:column="70"/></name><operator pos:line="17" pos:column="70">.<pos:position pos:line="17" pos:column="71"/></operator><name pos:line="17" pos:column="71">conn<pos:position pos:line="17" pos:column="75"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="77"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">!<pos:position pos:line="18" pos:column="10"/></operator><call><name><name pos:line="18" pos:column="10">Comm<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">::<pos:position pos:line="18" pos:column="16"/></operator><name pos:line="18" pos:column="16">IsConnOpen<pos:position pos:line="18" pos:column="26"/></name></name><argument_list pos:line="18" pos:column="26">(<argument><expr><name><name pos:line="18" pos:column="27">data<pos:position pos:line="18" pos:column="31"/></name><operator pos:line="18" pos:column="31">.<pos:position pos:line="18" pos:column="32"/></operator><name pos:line="18" pos:column="32">conn<pos:position pos:line="18" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38"> <block pos:line="18" pos:column="39">{
        <comment type="line" pos:line="19" pos:column="9">// TODO: Set error message.</comment>
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">failed<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><name pos:line="20" pos:column="16">ERR_FTP_FAILURE<pos:position pos:line="20" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="33">0<pos:position pos:line="20" pos:column="34"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
        <return pos:line="21" pos:column="9">return <expr><literal type="boolean" pos:line="21" pos:column="16">false<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></return>
    }<pos:position pos:line="22" pos:column="6"/></block></then></if>

    <decl_stmt><decl><specifier pos:line="24" pos:column="5">static<pos:position pos:line="24" pos:column="11"/></specifier> <type><name pos:line="24" pos:column="12">MemBuf<pos:position pos:line="24" pos:column="18"/></name></type> <name pos:line="24" pos:column="19">mb<pos:position pos:line="24" pos:column="21"/></name></decl>;<pos:position pos:line="24" pos:column="22"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="25" pos:column="5">mb<pos:position pos:line="25" pos:column="7"/></name><operator pos:line="25" pos:column="7">.<pos:position pos:line="25" pos:column="8"/></operator><name pos:line="25" pos:column="8">reset<pos:position pos:line="25" pos:column="13"/></name></name><argument_list pos:line="25" pos:column="13">()<pos:position pos:line="25" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="16"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="26" pos:column="5">char<pos:position pos:line="26" pos:column="9"/></name></type> <name><name pos:line="26" pos:column="10">buf<pos:position pos:line="26" pos:column="13"/></name><index pos:line="26" pos:column="13">[<expr><name pos:line="26" pos:column="14">MAX_IPSTRLEN<pos:position pos:line="26" pos:column="26"/></name></expr>]<pos:position pos:line="26" pos:column="27"/></index></name></decl>;<pos:position pos:line="26" pos:column="28"/></decl_stmt>
    <comment type="block" pos:line="27" pos:column="5">/* RFC 2428 defines EPRT as IPv6 equivalent to IPv4 PORT command. */</comment>
    <comment type="block" pos:line="28" pos:column="5">/* Which can be used by EITHER protocol. */</comment>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">debugs<pos:position pos:line="29" pos:column="11"/></name><argument_list pos:line="29" pos:column="11">(<argument><expr><literal type="number" pos:line="29" pos:column="12">9<pos:position pos:line="29" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="15">3<pos:position pos:line="29" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="18">"Listening for FTP data connection on port"<pos:position pos:line="29" pos:column="61"/></literal> <operator pos:line="29" pos:column="62">&lt;&lt;<pos:position pos:line="29" pos:column="70"/></operator> <call><name pos:line="29" pos:column="65">comm_local_port<pos:position pos:line="29" pos:column="80"/></name><argument_list pos:line="29" pos:column="80">(<argument><expr><name><name pos:line="29" pos:column="81">data<pos:position pos:line="29" pos:column="85"/></name><operator pos:line="29" pos:column="85">.<pos:position pos:line="29" pos:column="86"/></operator><name pos:line="29" pos:column="86">conn<pos:position pos:line="29" pos:column="90"/></name><operator pos:line="29" pos:column="90">-&gt;<pos:position pos:line="29" pos:column="95"/></operator><name pos:line="29" pos:column="92">fd<pos:position pos:line="29" pos:column="94"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="95"/></argument_list></call> <operator pos:line="29" pos:column="96">&lt;&lt;<pos:position pos:line="29" pos:column="104"/></operator> <literal type="string" pos:line="29" pos:column="99">" or port?"<pos:position pos:line="29" pos:column="110"/></literal> <operator pos:line="29" pos:column="111">&lt;&lt;<pos:position pos:line="29" pos:column="119"/></operator> <call><name><name pos:line="29" pos:column="114">data<pos:position pos:line="29" pos:column="118"/></name><operator pos:line="29" pos:column="118">.<pos:position pos:line="29" pos:column="119"/></operator><name pos:line="29" pos:column="119">conn<pos:position pos:line="29" pos:column="123"/></name><operator pos:line="29" pos:column="123">-&gt;<pos:position pos:line="29" pos:column="128"/></operator><name pos:line="29" pos:column="125">local<pos:position pos:line="29" pos:column="130"/></name><operator pos:line="29" pos:column="130">.<pos:position pos:line="29" pos:column="131"/></operator><name pos:line="29" pos:column="131">port<pos:position pos:line="29" pos:column="135"/></name></name><argument_list pos:line="29" pos:column="135">()<pos:position pos:line="29" pos:column="137"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="138"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="139"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="30" pos:column="5">mb<pos:position pos:line="30" pos:column="7"/></name><operator pos:line="30" pos:column="7">.<pos:position pos:line="30" pos:column="8"/></operator><name pos:line="30" pos:column="8">Printf<pos:position pos:line="30" pos:column="14"/></name></name><argument_list pos:line="30" pos:column="14">(<argument><expr><literal type="string" pos:line="30" pos:column="15">"EPRT |%d|%s|%d|%s"<pos:position pos:line="30" pos:column="34"/></literal></expr></argument>,
              <argument><expr><operator pos:line="31" pos:column="15">(<pos:position pos:line="31" pos:column="16"/></operator> <ternary><condition><expr><call><name><name pos:line="31" pos:column="17">data<pos:position pos:line="31" pos:column="21"/></name><operator pos:line="31" pos:column="21">.<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">conn<pos:position pos:line="31" pos:column="26"/></name><operator pos:line="31" pos:column="26">-&gt;<pos:position pos:line="31" pos:column="31"/></operator><name pos:line="31" pos:column="28">local<pos:position pos:line="31" pos:column="33"/></name><operator pos:line="31" pos:column="33">.<pos:position pos:line="31" pos:column="34"/></operator><name pos:line="31" pos:column="34">isIPv6<pos:position pos:line="31" pos:column="40"/></name></name><argument_list pos:line="31" pos:column="40">()<pos:position pos:line="31" pos:column="42"/></argument_list></call></expr> ?<pos:position pos:line="31" pos:column="44"/></condition><then pos:line="31" pos:column="44"> <expr><literal type="number" pos:line="31" pos:column="45">2<pos:position pos:line="31" pos:column="46"/></literal></expr> <pos:position pos:line="31" pos:column="47"/></then><else pos:line="31" pos:column="47">: <expr><literal type="number" pos:line="31" pos:column="49">1<pos:position pos:line="31" pos:column="50"/></literal></expr></else></ternary> <operator pos:line="31" pos:column="51">)<pos:position pos:line="31" pos:column="52"/></operator></expr></argument>,
              <argument><expr><call><name><name pos:line="32" pos:column="15">data<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">.<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="20">conn<pos:position pos:line="32" pos:column="24"/></name><operator pos:line="32" pos:column="24">-&gt;<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="26">local<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">.<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="32">toStr<pos:position pos:line="32" pos:column="37"/></name></name><argument_list pos:line="32" pos:column="37">(<argument><expr><name pos:line="32" pos:column="38">buf<pos:position pos:line="32" pos:column="41"/></name></expr></argument>,<argument><expr><name pos:line="32" pos:column="42">MAX_IPSTRLEN<pos:position pos:line="32" pos:column="54"/></name></expr></argument>)<pos:position pos:line="32" pos:column="55"/></argument_list></call></expr></argument>,
              <argument><expr><call><name pos:line="33" pos:column="15">comm_local_port<pos:position pos:line="33" pos:column="30"/></name><argument_list pos:line="33" pos:column="30">(<argument><expr><name><name pos:line="33" pos:column="31">data<pos:position pos:line="33" pos:column="35"/></name><operator pos:line="33" pos:column="35">.<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">conn<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">-&gt;<pos:position pos:line="33" pos:column="45"/></operator><name pos:line="33" pos:column="42">fd<pos:position pos:line="33" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="33" pos:column="47">Ftp<pos:position pos:line="33" pos:column="50"/></name><operator pos:line="33" pos:column="50">::<pos:position pos:line="33" pos:column="52"/></operator><name pos:line="33" pos:column="52">crlf<pos:position pos:line="33" pos:column="56"/></name></name></expr></argument> )<pos:position pos:line="33" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><name pos:line="35" pos:column="5">state<pos:position pos:line="35" pos:column="10"/></name> <operator pos:line="35" pos:column="11">=<pos:position pos:line="35" pos:column="12"/></operator> <name pos:line="35" pos:column="13">SENT_EPRT<pos:position pos:line="35" pos:column="22"/></name></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="36" pos:column="5">writeCommand<pos:position pos:line="36" pos:column="17"/></name><argument_list pos:line="36" pos:column="17">(<argument><expr><call><name><name pos:line="36" pos:column="18">mb<pos:position pos:line="36" pos:column="20"/></name><operator pos:line="36" pos:column="20">.<pos:position pos:line="36" pos:column="21"/></operator><name pos:line="36" pos:column="21">content<pos:position pos:line="36" pos:column="28"/></name></name><argument_list pos:line="36" pos:column="28">()<pos:position pos:line="36" pos:column="30"/></argument_list></call></expr></argument>)<pos:position pos:line="36" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
    <return pos:line="37" pos:column="5">return <expr><literal type="boolean" pos:line="37" pos:column="12">true<pos:position pos:line="37" pos:column="16"/></literal></expr>;<pos:position pos:line="37" pos:column="17"/></return>
}<pos:position pos:line="38" pos:column="2"/></block></function></unit>

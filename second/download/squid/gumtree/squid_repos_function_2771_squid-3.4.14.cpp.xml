<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2771_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">tunnelPeerSelectComplete<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name><name pos:line="2" pos:column="26">Comm<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">ConnectionList<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">peer_paths<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">ErrorState<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">err<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="77">void<pos:position pos:line="2" pos:column="81"/></name> <modifier pos:line="2" pos:column="82">*<pos:position pos:line="2" pos:column="83"/></modifier></type><name pos:line="2" pos:column="83">data<pos:position pos:line="2" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="88"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">TunnelStateData<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">tunnelState<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><operator pos:line="4" pos:column="36">(<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">TunnelStateData<pos:position pos:line="4" pos:column="52"/></name> <operator pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></operator><operator pos:line="4" pos:column="54">)<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">data<pos:position pos:line="4" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">peer_paths<pos:position pos:line="6" pos:column="19"/></name> <operator pos:line="6" pos:column="20">==<pos:position pos:line="6" pos:column="22"/></operator> <name pos:line="6" pos:column="23">NULL<pos:position pos:line="6" pos:column="27"/></name> <operator pos:line="6" pos:column="28">||<pos:position pos:line="6" pos:column="30"/></operator> <call><name><name pos:line="6" pos:column="31">peer_paths<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">-&gt;<pos:position pos:line="6" pos:column="46"/></operator><name pos:line="6" pos:column="43">size<pos:position pos:line="6" pos:column="47"/></name></name><argument_list pos:line="6" pos:column="47">()<pos:position pos:line="6" pos:column="49"/></argument_list></call> <operator pos:line="6" pos:column="50">&lt;<pos:position pos:line="6" pos:column="54"/></operator> <literal type="number" pos:line="6" pos:column="52">1<pos:position pos:line="6" pos:column="53"/></literal></expr>)<pos:position pos:line="6" pos:column="54"/></condition><then pos:line="6" pos:column="54"> <block pos:line="6" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">debugs<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><literal type="number" pos:line="7" pos:column="16">26<pos:position pos:line="7" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="20">3<pos:position pos:line="7" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">HERE<pos:position pos:line="7" pos:column="27"/></name> <operator pos:line="7" pos:column="28">&lt;&lt;<pos:position pos:line="7" pos:column="36"/></operator> <literal type="string" pos:line="7" pos:column="31">"No paths found. Aborting CONNECT"<pos:position pos:line="7" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="67"/></expr_stmt>
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">err<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18"> <block pos:line="8" pos:column="19">{
            <expr_stmt><expr><name pos:line="9" pos:column="13">err<pos:position pos:line="9" pos:column="16"/></name> <operator pos:line="9" pos:column="17">=<pos:position pos:line="9" pos:column="18"/></operator> <operator pos:line="9" pos:column="19">new<pos:position pos:line="9" pos:column="22"/></operator> <call><name pos:line="9" pos:column="23">ErrorState<pos:position pos:line="9" pos:column="33"/></name><argument_list pos:line="9" pos:column="33">(<argument><expr><name pos:line="9" pos:column="34">ERR_CANNOT_FORWARD<pos:position pos:line="9" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="54">Http<pos:position pos:line="9" pos:column="58"/></name><operator pos:line="9" pos:column="58">::<pos:position pos:line="9" pos:column="60"/></operator><name pos:line="9" pos:column="60">scServiceUnavailable<pos:position pos:line="9" pos:column="80"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="9" pos:column="82">tunnelState<pos:position pos:line="9" pos:column="93"/></name><operator pos:line="9" pos:column="93">-&gt;<pos:position pos:line="9" pos:column="98"/></operator><name pos:line="9" pos:column="95">request<pos:position pos:line="9" pos:column="102"/></name><operator pos:line="9" pos:column="102">.<pos:position pos:line="9" pos:column="103"/></operator><name pos:line="9" pos:column="103">getRaw<pos:position pos:line="9" pos:column="109"/></name></name><argument_list pos:line="9" pos:column="109">()<pos:position pos:line="9" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="113"/></expr_stmt>
        }<pos:position pos:line="10" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="11" pos:column="9">*<pos:position pos:line="11" pos:column="10"/></operator><name><name pos:line="11" pos:column="10">tunnelState<pos:position pos:line="11" pos:column="21"/></name><operator pos:line="11" pos:column="21">-&gt;<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="23">status_ptr<pos:position pos:line="11" pos:column="33"/></name></name> <operator pos:line="11" pos:column="34">=<pos:position pos:line="11" pos:column="35"/></operator> <name><name pos:line="11" pos:column="36">err<pos:position pos:line="11" pos:column="39"/></name><operator pos:line="11" pos:column="39">-&gt;<pos:position pos:line="11" pos:column="44"/></operator><name pos:line="11" pos:column="41">httpStatus<pos:position pos:line="11" pos:column="51"/></name></name></expr>;<pos:position pos:line="11" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">err<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">callback<pos:position pos:line="12" pos:column="22"/></name></name> <operator pos:line="12" pos:column="23">=<pos:position pos:line="12" pos:column="24"/></operator> <name pos:line="12" pos:column="25">tunnelErrorComplete<pos:position pos:line="12" pos:column="44"/></name></expr>;<pos:position pos:line="12" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">err<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">-&gt;<pos:position pos:line="13" pos:column="17"/></operator><name pos:line="13" pos:column="14">callback_data<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <name pos:line="13" pos:column="30">tunnelState<pos:position pos:line="13" pos:column="41"/></name></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">errorSend<pos:position pos:line="14" pos:column="18"/></name><argument_list pos:line="14" pos:column="18">(<argument><expr><name><name pos:line="14" pos:column="19">tunnelState<pos:position pos:line="14" pos:column="30"/></name><operator pos:line="14" pos:column="30">-&gt;<pos:position pos:line="14" pos:column="35"/></operator><name pos:line="14" pos:column="32">client<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">.<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">conn<pos:position pos:line="14" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="45">err<pos:position pos:line="14" pos:column="48"/></name></expr></argument>)<pos:position pos:line="14" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="50"/></expr_stmt>
        <return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="17" pos:column="5">delete<pos:position pos:line="17" pos:column="11"/></operator> <name pos:line="17" pos:column="12">err<pos:position pos:line="17" pos:column="15"/></name></expr>;<pos:position pos:line="17" pos:column="16"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name><name pos:line="19" pos:column="9">Ip<pos:position pos:line="19" pos:column="11"/></name><operator pos:line="19" pos:column="11">::<pos:position pos:line="19" pos:column="13"/></operator><name pos:line="19" pos:column="13">Qos<pos:position pos:line="19" pos:column="16"/></name><operator pos:line="19" pos:column="16">::<pos:position pos:line="19" pos:column="18"/></operator><name pos:line="19" pos:column="18">TheConfig<pos:position pos:line="19" pos:column="27"/></name><operator pos:line="19" pos:column="27">.<pos:position pos:line="19" pos:column="28"/></operator><name pos:line="19" pos:column="28">isAclTosActive<pos:position pos:line="19" pos:column="42"/></name></name><argument_list pos:line="19" pos:column="42">()<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45"> <block pos:line="19" pos:column="46">{
        <expr_stmt><expr><name><name pos:line="20" pos:column="9">tunnelState<pos:position pos:line="20" pos:column="20"/></name><operator pos:line="20" pos:column="20">-&gt;<pos:position pos:line="20" pos:column="25"/></operator><name pos:line="20" pos:column="22">serverDestinations<pos:position pos:line="20" pos:column="40"/></name><index pos:line="20" pos:column="40">[<expr><literal type="number" pos:line="20" pos:column="41">0<pos:position pos:line="20" pos:column="42"/></literal></expr>]<pos:position pos:line="20" pos:column="43"/></index></name><operator pos:line="20" pos:column="43">-&gt;<pos:position pos:line="20" pos:column="48"/></operator><name pos:line="20" pos:column="45">tos<pos:position pos:line="20" pos:column="48"/></name> <operator pos:line="20" pos:column="49">=<pos:position pos:line="20" pos:column="50"/></operator> <call><name pos:line="20" pos:column="51">GetTosToServer<pos:position pos:line="20" pos:column="65"/></name><argument_list pos:line="20" pos:column="65">(<argument><expr><call><name><name pos:line="20" pos:column="66">tunnelState<pos:position pos:line="20" pos:column="77"/></name><operator pos:line="20" pos:column="77">-&gt;<pos:position pos:line="20" pos:column="82"/></operator><name pos:line="20" pos:column="79">request<pos:position pos:line="20" pos:column="86"/></name><operator pos:line="20" pos:column="86">.<pos:position pos:line="20" pos:column="87"/></operator><name pos:line="20" pos:column="87">getRaw<pos:position pos:line="20" pos:column="93"/></name></name><argument_list pos:line="20" pos:column="93">()<pos:position pos:line="20" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="97"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

<cpp:if pos:line="23" pos:column="1">#<cpp:directive pos:line="23" pos:column="2">if<pos:position pos:line="23" pos:column="4"/></cpp:directive> <expr><name pos:line="23" pos:column="5">SO_MARK<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">&amp;&amp;<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="16">USE_LIBCAP<pos:position pos:line="23" pos:column="26"/></name></expr></cpp:if>
    <expr_stmt><expr><name><name pos:line="24" pos:column="5">tunnelState<pos:position pos:line="24" pos:column="16"/></name><operator pos:line="24" pos:column="16">-&gt;<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="18">serverDestinations<pos:position pos:line="24" pos:column="36"/></name><index pos:line="24" pos:column="36">[<expr><literal type="number" pos:line="24" pos:column="37">0<pos:position pos:line="24" pos:column="38"/></literal></expr>]<pos:position pos:line="24" pos:column="39"/></index></name><operator pos:line="24" pos:column="39">-&gt;<pos:position pos:line="24" pos:column="44"/></operator><name pos:line="24" pos:column="41">nfmark<pos:position pos:line="24" pos:column="47"/></name> <operator pos:line="24" pos:column="48">=<pos:position pos:line="24" pos:column="49"/></operator> <call><name pos:line="24" pos:column="50">GetNfmarkToServer<pos:position pos:line="24" pos:column="67"/></name><argument_list pos:line="24" pos:column="67">(<argument><expr><call><name><name pos:line="24" pos:column="68">tunnelState<pos:position pos:line="24" pos:column="79"/></name><operator pos:line="24" pos:column="79">-&gt;<pos:position pos:line="24" pos:column="84"/></operator><name pos:line="24" pos:column="81">request<pos:position pos:line="24" pos:column="88"/></name><operator pos:line="24" pos:column="88">.<pos:position pos:line="24" pos:column="89"/></operator><name pos:line="24" pos:column="89">getRaw<pos:position pos:line="24" pos:column="95"/></name></name><argument_list pos:line="24" pos:column="95">()<pos:position pos:line="24" pos:column="97"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="99"/></expr_stmt>
<cpp:endif pos:line="25" pos:column="1">#<cpp:directive pos:line="25" pos:column="2">endif<pos:position pos:line="25" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">debugs<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="number" pos:line="27" pos:column="12">26<pos:position pos:line="27" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="16">3<pos:position pos:line="27" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="19">HERE<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">&lt;&lt;<pos:position pos:line="27" pos:column="32"/></operator> <literal type="string" pos:line="27" pos:column="27">"paths="<pos:position pos:line="27" pos:column="35"/></literal> <operator pos:line="27" pos:column="36">&lt;&lt;<pos:position pos:line="27" pos:column="44"/></operator> <call><name><name pos:line="27" pos:column="39">peer_paths<pos:position pos:line="27" pos:column="49"/></name><operator pos:line="27" pos:column="49">-&gt;<pos:position pos:line="27" pos:column="54"/></operator><name pos:line="27" pos:column="51">size<pos:position pos:line="27" pos:column="55"/></name></name><argument_list pos:line="27" pos:column="55">()<pos:position pos:line="27" pos:column="57"/></argument_list></call> <operator pos:line="27" pos:column="58">&lt;&lt;<pos:position pos:line="27" pos:column="66"/></operator> <literal type="string" pos:line="27" pos:column="61">", p[0]={"<pos:position pos:line="27" pos:column="71"/></literal> <operator pos:line="27" pos:column="72">&lt;&lt;<pos:position pos:line="27" pos:column="80"/></operator> <operator pos:line="27" pos:column="75">(<pos:position pos:line="27" pos:column="76"/></operator><operator pos:line="27" pos:column="76">*<pos:position pos:line="27" pos:column="77"/></operator><name pos:line="27" pos:column="77">peer_paths<pos:position pos:line="27" pos:column="87"/></name><operator pos:line="27" pos:column="87">)<pos:position pos:line="27" pos:column="88"/></operator><index pos:line="27" pos:column="88">[<expr><literal type="number" pos:line="27" pos:column="89">0<pos:position pos:line="27" pos:column="90"/></literal></expr>]<pos:position pos:line="27" pos:column="91"/></index> <operator pos:line="27" pos:column="92">&lt;&lt;<pos:position pos:line="27" pos:column="100"/></operator> <literal type="string" pos:line="27" pos:column="95">"}, serverDest[0]={"<pos:position pos:line="27" pos:column="115"/></literal> <operator pos:line="27" pos:column="116">&lt;&lt;<pos:position pos:line="27" pos:column="124"/></operator>
           <name><name pos:line="28" pos:column="12">tunnelState<pos:position pos:line="28" pos:column="23"/></name><operator pos:line="28" pos:column="23">-&gt;<pos:position pos:line="28" pos:column="28"/></operator><name pos:line="28" pos:column="25">serverDestinations<pos:position pos:line="28" pos:column="43"/></name><index pos:line="28" pos:column="43">[<expr><literal type="number" pos:line="28" pos:column="44">0<pos:position pos:line="28" pos:column="45"/></literal></expr>]<pos:position pos:line="28" pos:column="46"/></index></name> <operator pos:line="28" pos:column="47">&lt;&lt;<pos:position pos:line="28" pos:column="55"/></operator> <literal type="string" pos:line="28" pos:column="50">"}"<pos:position pos:line="28" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="55"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="30" pos:column="5">AsyncCall<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">::<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">Pointer<pos:position pos:line="30" pos:column="23"/></name></name></type> <name pos:line="30" pos:column="24">call<pos:position pos:line="30" pos:column="28"/></name> <init pos:line="30" pos:column="29">= <expr><call><name pos:line="30" pos:column="31">commCbCall<pos:position pos:line="30" pos:column="41"/></name><argument_list pos:line="30" pos:column="41">(<argument><expr><literal type="number" pos:line="30" pos:column="42">26<pos:position pos:line="30" pos:column="44"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="30" pos:column="45">3<pos:position pos:line="30" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="48">"tunnelConnectDone"<pos:position pos:line="30" pos:column="67"/></literal></expr></argument>, <argument><expr><call><name pos:line="30" pos:column="69">CommConnectCbPtrFun<pos:position pos:line="30" pos:column="88"/></name><argument_list pos:line="30" pos:column="88">(<argument><expr><name pos:line="30" pos:column="89">tunnelConnectDone<pos:position pos:line="30" pos:column="106"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="108">tunnelState<pos:position pos:line="30" pos:column="119"/></name></expr></argument>)<pos:position pos:line="30" pos:column="120"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="121"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="122"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="31" pos:column="5">Comm<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">::<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">ConnOpener<pos:position pos:line="31" pos:column="21"/></name></name> <modifier pos:line="31" pos:column="22">*<pos:position pos:line="31" pos:column="23"/></modifier></type><name pos:line="31" pos:column="23">cs<pos:position pos:line="31" pos:column="25"/></name> <init pos:line="31" pos:column="26">= <expr><operator pos:line="31" pos:column="28">new<pos:position pos:line="31" pos:column="31"/></operator> <call><name><name pos:line="31" pos:column="32">Comm<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">::<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">ConnOpener<pos:position pos:line="31" pos:column="48"/></name></name><argument_list pos:line="31" pos:column="48">(<argument><expr><name><name pos:line="31" pos:column="49">tunnelState<pos:position pos:line="31" pos:column="60"/></name><operator pos:line="31" pos:column="60">-&gt;<pos:position pos:line="31" pos:column="65"/></operator><name pos:line="31" pos:column="62">serverDestinations<pos:position pos:line="31" pos:column="80"/></name><index pos:line="31" pos:column="80">[<expr><literal type="number" pos:line="31" pos:column="81">0<pos:position pos:line="31" pos:column="82"/></literal></expr>]<pos:position pos:line="31" pos:column="83"/></index></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="85">call<pos:position pos:line="31" pos:column="89"/></name></expr></argument>, <argument><expr><name><name pos:line="31" pos:column="91">Config<pos:position pos:line="31" pos:column="97"/></name><operator pos:line="31" pos:column="97">.<pos:position pos:line="31" pos:column="98"/></operator><name pos:line="31" pos:column="98">Timeout<pos:position pos:line="31" pos:column="105"/></name><operator pos:line="31" pos:column="105">.<pos:position pos:line="31" pos:column="106"/></operator><name pos:line="31" pos:column="106">connect<pos:position pos:line="31" pos:column="113"/></name></name></expr></argument>)<pos:position pos:line="31" pos:column="114"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="115"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">cs<pos:position pos:line="32" pos:column="7"/></name><operator pos:line="32" pos:column="7">-&gt;<pos:position pos:line="32" pos:column="12"/></operator><name pos:line="32" pos:column="9">setHost<pos:position pos:line="32" pos:column="16"/></name></name><argument_list pos:line="32" pos:column="16">(<argument><expr><name><name pos:line="32" pos:column="17">tunnelState<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">-&gt;<pos:position pos:line="32" pos:column="33"/></operator><name pos:line="32" pos:column="30">url<pos:position pos:line="32" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="33" pos:column="5">AsyncJob<pos:position pos:line="33" pos:column="13"/></name><operator pos:line="33" pos:column="13">::<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="15">Start<pos:position pos:line="33" pos:column="20"/></name></name><argument_list pos:line="33" pos:column="20">(<argument><expr><name pos:line="33" pos:column="21">cs<pos:position pos:line="33" pos:column="23"/></name></expr></argument>)<pos:position pos:line="33" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="25"/></expr_stmt>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

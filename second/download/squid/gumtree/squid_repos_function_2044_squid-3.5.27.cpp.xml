<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2044_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">storeDirWriteCleanLogs<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">int<pos:position pos:line="2" pos:column="27"/></name></type> <name pos:line="2" pos:column="28">reopen<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">StoreEntry<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">e<pos:position pos:line="4" pos:column="24"/></name> <init pos:line="4" pos:column="25">= <expr><name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">n<pos:position pos:line="5" pos:column="10"/></name> <init pos:line="5" pos:column="11">= <expr><literal type="number" pos:line="5" pos:column="13">0<pos:position pos:line="5" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="7" pos:column="5">struct<pos:position pos:line="7" pos:column="11"/></name> <name pos:line="7" pos:column="12">timeval<pos:position pos:line="7" pos:column="19"/></name></name></type> <name pos:line="7" pos:column="20">start<pos:position pos:line="7" pos:column="25"/></name></decl>;<pos:position pos:line="7" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">double<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">dt<pos:position pos:line="8" pos:column="14"/></name></decl>;<pos:position pos:line="8" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="9" pos:column="5">RefCount<pos:position pos:line="9" pos:column="13"/></name><argument_list type="generic" pos:line="9" pos:column="13">&lt;<argument><expr><name pos:line="9" pos:column="14">SwapDir<pos:position pos:line="9" pos:column="21"/></name></expr></argument>&gt;<pos:position pos:line="9" pos:column="25"/></argument_list></name></type> <name pos:line="9" pos:column="23">sd<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">dirn<pos:position pos:line="10" pos:column="13"/></name></decl>;<pos:position pos:line="10" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">int<pos:position pos:line="11" pos:column="8"/></name></type> <name pos:line="11" pos:column="9">notdone<pos:position pos:line="11" pos:column="16"/></name> <init pos:line="11" pos:column="17">= <expr><literal type="number" pos:line="11" pos:column="19">1<pos:position pos:line="11" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="11" pos:column="21"/></decl_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name><name pos:line="13" pos:column="9">StoreController<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">::<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">store_dirs_rebuilding<pos:position pos:line="13" pos:column="47"/></name></name></expr>)<pos:position pos:line="13" pos:column="48"/></condition><then pos:line="13" pos:column="48"> <block pos:line="13" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">20<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="20">DBG_IMPORTANT<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="35">"Not currently OK to rewrite swap log."<pos:position pos:line="14" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">20<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="20">DBG_IMPORTANT<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="35">"storeDirWriteCleanLogs: Operation aborted."<pos:position pos:line="15" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="81"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">debugs<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><literal type="number" pos:line="19" pos:column="12">20<pos:position pos:line="19" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="16">DBG_IMPORTANT<pos:position pos:line="19" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="31">"storeDirWriteCleanLogs: Starting..."<pos:position pos:line="19" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="70"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">getCurrentTime<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">()<pos:position pos:line="20" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="21" pos:column="5">start<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name pos:line="21" pos:column="13">current_time<pos:position pos:line="21" pos:column="25"/></name></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>

    <for pos:line="23" pos:column="5">for <control pos:line="23" pos:column="9">(<init><expr><name pos:line="23" pos:column="10">dirn<pos:position pos:line="23" pos:column="14"/></name> <operator pos:line="23" pos:column="15">=<pos:position pos:line="23" pos:column="16"/></operator> <literal type="number" pos:line="23" pos:column="17">0<pos:position pos:line="23" pos:column="18"/></literal></expr>;<pos:position pos:line="23" pos:column="19"/></init> <condition><expr><name pos:line="23" pos:column="20">dirn<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">&lt;<pos:position pos:line="23" pos:column="29"/></operator> <name><name pos:line="23" pos:column="27">Config<pos:position pos:line="23" pos:column="33"/></name><operator pos:line="23" pos:column="33">.<pos:position pos:line="23" pos:column="34"/></operator><name pos:line="23" pos:column="34">cacheSwap<pos:position pos:line="23" pos:column="43"/></name><operator pos:line="23" pos:column="43">.<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="44">n_configured<pos:position pos:line="23" pos:column="56"/></name></name></expr>;<pos:position pos:line="23" pos:column="57"/></condition> <incr><expr><operator pos:line="23" pos:column="58">++<pos:position pos:line="23" pos:column="60"/></operator><name pos:line="23" pos:column="60">dirn<pos:position pos:line="23" pos:column="64"/></name></expr></incr>)<pos:position pos:line="23" pos:column="65"/></control> <block pos:line="23" pos:column="66">{
        <expr_stmt><expr><name pos:line="24" pos:column="9">sd<pos:position pos:line="24" pos:column="11"/></name> <operator pos:line="24" pos:column="12">=<pos:position pos:line="24" pos:column="13"/></operator> <cast type="dynamic" pos:line="24" pos:column="14">dynamic_cast<argument_list type="generic" pos:line="24" pos:column="26">&lt;<argument><expr><name pos:line="24" pos:column="27">SwapDir<pos:position pos:line="24" pos:column="34"/></name> <operator pos:line="24" pos:column="35">*<pos:position pos:line="24" pos:column="36"/></operator></expr></argument>&gt;<pos:position pos:line="24" pos:column="40"/></argument_list><argument_list pos:line="24" pos:column="37">(<argument><expr><call><name pos:line="24" pos:column="38">INDEXSD<pos:position pos:line="24" pos:column="45"/></name><argument_list pos:line="24" pos:column="45">(<argument><expr><name pos:line="24" pos:column="46">dirn<pos:position pos:line="24" pos:column="50"/></name></expr></argument>)<pos:position pos:line="24" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></cast></expr>;<pos:position pos:line="24" pos:column="53"/></expr_stmt>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name><name pos:line="26" pos:column="13">sd<pos:position pos:line="26" pos:column="15"/></name><operator pos:line="26" pos:column="15">-&gt;<pos:position pos:line="26" pos:column="20"/></operator><name pos:line="26" pos:column="17">writeCleanStart<pos:position pos:line="26" pos:column="32"/></name></name><argument_list pos:line="26" pos:column="32">()<pos:position pos:line="26" pos:column="34"/></argument_list></call> <operator pos:line="26" pos:column="35">&lt;<pos:position pos:line="26" pos:column="39"/></operator> <literal type="number" pos:line="26" pos:column="37">0<pos:position pos:line="26" pos:column="38"/></literal></expr>)<pos:position pos:line="26" pos:column="39"/></condition><then pos:line="26" pos:column="39"> <block pos:line="26" pos:column="40">{
            <expr_stmt><expr><call><name pos:line="27" pos:column="13">debugs<pos:position pos:line="27" pos:column="19"/></name><argument_list pos:line="27" pos:column="19">(<argument><expr><literal type="number" pos:line="27" pos:column="20">20<pos:position pos:line="27" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="24">DBG_IMPORTANT<pos:position pos:line="27" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="39">"log.clean.start() failed for dir #"<pos:position pos:line="27" pos:column="75"/></literal> <operator pos:line="27" pos:column="76">&lt;&lt;<pos:position pos:line="27" pos:column="84"/></operator> <name><name pos:line="27" pos:column="79">sd<pos:position pos:line="27" pos:column="81"/></name><operator pos:line="27" pos:column="81">-&gt;<pos:position pos:line="27" pos:column="86"/></operator><name pos:line="27" pos:column="83">index<pos:position pos:line="27" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="90"/></expr_stmt>
            <continue pos:line="28" pos:column="13">continue;<pos:position pos:line="28" pos:column="22"/></continue>
        }<pos:position pos:line="29" pos:column="10"/></block></then></if>
    }<pos:position pos:line="30" pos:column="6"/></block></for>

    <comment type="block" pos:line="32" pos:column="5">/*
     * This may look inefficient as CPU wise it is more efficient to do this
     * sequentially, but I/O wise the parallellism helps as it allows more
     * hdd spindles to be active.
     */</comment>
    <while pos:line="37" pos:column="5">while <condition pos:line="37" pos:column="11">(<expr><name pos:line="37" pos:column="12">notdone<pos:position pos:line="37" pos:column="19"/></name></expr>)<pos:position pos:line="37" pos:column="20"/></condition> <block pos:line="37" pos:column="21">{
        <expr_stmt><expr><name pos:line="38" pos:column="9">notdone<pos:position pos:line="38" pos:column="16"/></name> <operator pos:line="38" pos:column="17">=<pos:position pos:line="38" pos:column="18"/></operator> <literal type="number" pos:line="38" pos:column="19">0<pos:position pos:line="38" pos:column="20"/></literal></expr>;<pos:position pos:line="38" pos:column="21"/></expr_stmt>

        <for pos:line="40" pos:column="9">for <control pos:line="40" pos:column="13">(<init><expr><name pos:line="40" pos:column="14">dirn<pos:position pos:line="40" pos:column="18"/></name> <operator pos:line="40" pos:column="19">=<pos:position pos:line="40" pos:column="20"/></operator> <literal type="number" pos:line="40" pos:column="21">0<pos:position pos:line="40" pos:column="22"/></literal></expr>;<pos:position pos:line="40" pos:column="23"/></init> <condition><expr><name pos:line="40" pos:column="24">dirn<pos:position pos:line="40" pos:column="28"/></name> <operator pos:line="40" pos:column="29">&lt;<pos:position pos:line="40" pos:column="33"/></operator> <name><name pos:line="40" pos:column="31">Config<pos:position pos:line="40" pos:column="37"/></name><operator pos:line="40" pos:column="37">.<pos:position pos:line="40" pos:column="38"/></operator><name pos:line="40" pos:column="38">cacheSwap<pos:position pos:line="40" pos:column="47"/></name><operator pos:line="40" pos:column="47">.<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="48">n_configured<pos:position pos:line="40" pos:column="60"/></name></name></expr>;<pos:position pos:line="40" pos:column="61"/></condition> <incr><expr><operator pos:line="40" pos:column="62">++<pos:position pos:line="40" pos:column="64"/></operator><name pos:line="40" pos:column="64">dirn<pos:position pos:line="40" pos:column="68"/></name></expr></incr>)<pos:position pos:line="40" pos:column="69"/></control> <block pos:line="40" pos:column="70">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">sd<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">=<pos:position pos:line="41" pos:column="17"/></operator> <cast type="dynamic" pos:line="41" pos:column="18">dynamic_cast<argument_list type="generic" pos:line="41" pos:column="30">&lt;<argument><expr><name pos:line="41" pos:column="31">SwapDir<pos:position pos:line="41" pos:column="38"/></name> <operator pos:line="41" pos:column="39">*<pos:position pos:line="41" pos:column="40"/></operator></expr></argument>&gt;<pos:position pos:line="41" pos:column="44"/></argument_list><argument_list pos:line="41" pos:column="41">(<argument><expr><call><name pos:line="41" pos:column="42">INDEXSD<pos:position pos:line="41" pos:column="49"/></name><argument_list pos:line="41" pos:column="49">(<argument><expr><name pos:line="41" pos:column="50">dirn<pos:position pos:line="41" pos:column="54"/></name></expr></argument>)<pos:position pos:line="41" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="56"/></argument_list></cast></expr>;<pos:position pos:line="41" pos:column="57"/></expr_stmt>

            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><name pos:line="43" pos:column="17">NULL<pos:position pos:line="43" pos:column="21"/></name> <operator pos:line="43" pos:column="22">==<pos:position pos:line="43" pos:column="24"/></operator> <name><name pos:line="43" pos:column="25">sd<pos:position pos:line="43" pos:column="27"/></name><operator pos:line="43" pos:column="27">-&gt;<pos:position pos:line="43" pos:column="32"/></operator><name pos:line="43" pos:column="29">cleanLog<pos:position pos:line="43" pos:column="37"/></name></name></expr>)<pos:position pos:line="43" pos:column="38"/></condition><then pos:line="43" pos:column="38">
                <block type="pseudo"><continue pos:line="44" pos:column="17">continue;<pos:position pos:line="44" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><name pos:line="46" pos:column="13">e<pos:position pos:line="46" pos:column="14"/></name> <operator pos:line="46" pos:column="15">=<pos:position pos:line="46" pos:column="16"/></operator> <call><name><name pos:line="46" pos:column="17">sd<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">-&gt;<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="21">cleanLog<pos:position pos:line="46" pos:column="29"/></name><operator pos:line="46" pos:column="29">-&gt;<pos:position pos:line="46" pos:column="34"/></operator><name pos:line="46" pos:column="31">nextEntry<pos:position pos:line="46" pos:column="40"/></name></name><argument_list pos:line="46" pos:column="40">()<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="43"/></expr_stmt>

            <if pos:line="48" pos:column="13">if <condition pos:line="48" pos:column="16">(<expr><operator pos:line="48" pos:column="17">!<pos:position pos:line="48" pos:column="18"/></operator><name pos:line="48" pos:column="18">e<pos:position pos:line="48" pos:column="19"/></name></expr>)<pos:position pos:line="48" pos:column="20"/></condition><then pos:line="48" pos:column="20">
                <block type="pseudo"><continue pos:line="49" pos:column="17">continue;<pos:position pos:line="49" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><name pos:line="51" pos:column="13">notdone<pos:position pos:line="51" pos:column="20"/></name> <operator pos:line="51" pos:column="21">=<pos:position pos:line="51" pos:column="22"/></operator> <literal type="number" pos:line="51" pos:column="23">1<pos:position pos:line="51" pos:column="24"/></literal></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt>

            <if pos:line="53" pos:column="13">if <condition pos:line="53" pos:column="16">(<expr><operator pos:line="53" pos:column="17">!<pos:position pos:line="53" pos:column="18"/></operator><call><name><name pos:line="53" pos:column="18">sd<pos:position pos:line="53" pos:column="20"/></name><operator pos:line="53" pos:column="20">-&gt;<pos:position pos:line="53" pos:column="25"/></operator><name pos:line="53" pos:column="22">canLog<pos:position pos:line="53" pos:column="28"/></name></name><argument_list pos:line="53" pos:column="28">(<argument><expr><operator pos:line="53" pos:column="29">*<pos:position pos:line="53" pos:column="30"/></operator><name pos:line="53" pos:column="30">e<pos:position pos:line="53" pos:column="31"/></name></expr></argument>)<pos:position pos:line="53" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="33"/></condition><then pos:line="53" pos:column="33">
                <block type="pseudo"><continue pos:line="54" pos:column="17">continue;<pos:position pos:line="54" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name><name pos:line="56" pos:column="13">sd<pos:position pos:line="56" pos:column="15"/></name><operator pos:line="56" pos:column="15">-&gt;<pos:position pos:line="56" pos:column="20"/></operator><name pos:line="56" pos:column="17">cleanLog<pos:position pos:line="56" pos:column="25"/></name><operator pos:line="56" pos:column="25">-&gt;<pos:position pos:line="56" pos:column="30"/></operator><name pos:line="56" pos:column="27">write<pos:position pos:line="56" pos:column="32"/></name></name><argument_list pos:line="56" pos:column="32">(<argument><expr><operator pos:line="56" pos:column="33">*<pos:position pos:line="56" pos:column="34"/></operator><name pos:line="56" pos:column="34">e<pos:position pos:line="56" pos:column="35"/></name></expr></argument>)<pos:position pos:line="56" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="37"/></expr_stmt>

            <if pos:line="58" pos:column="13">if <condition pos:line="58" pos:column="16">(<expr><operator pos:line="58" pos:column="17">(<pos:position pos:line="58" pos:column="18"/></operator><operator pos:line="58" pos:column="18">++<pos:position pos:line="58" pos:column="20"/></operator><name pos:line="58" pos:column="20">n<pos:position pos:line="58" pos:column="21"/></name> <operator pos:line="58" pos:column="22">&amp;<pos:position pos:line="58" pos:column="27"/></operator> <literal type="number" pos:line="58" pos:column="24">0xFFFF<pos:position pos:line="58" pos:column="30"/></literal><operator pos:line="58" pos:column="30">)<pos:position pos:line="58" pos:column="31"/></operator> <operator pos:line="58" pos:column="32">==<pos:position pos:line="58" pos:column="34"/></operator> <literal type="number" pos:line="58" pos:column="35">0<pos:position pos:line="58" pos:column="36"/></literal></expr>)<pos:position pos:line="58" pos:column="37"/></condition><then pos:line="58" pos:column="37"> <block pos:line="58" pos:column="38">{
                <expr_stmt><expr><call><name pos:line="59" pos:column="17">getCurrentTime<pos:position pos:line="59" pos:column="31"/></name><argument_list pos:line="59" pos:column="31">()<pos:position pos:line="59" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="60" pos:column="17">debugs<pos:position pos:line="60" pos:column="23"/></name><argument_list pos:line="60" pos:column="23">(<argument><expr><literal type="number" pos:line="60" pos:column="24">20<pos:position pos:line="60" pos:column="26"/></literal></expr></argument>, <argument><expr><name pos:line="60" pos:column="28">DBG_IMPORTANT<pos:position pos:line="60" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="60" pos:column="43">"  "<pos:position pos:line="60" pos:column="47"/></literal> <operator pos:line="60" pos:column="48">&lt;&lt;<pos:position pos:line="60" pos:column="56"/></operator> <call><name><name pos:line="60" pos:column="51">std<pos:position pos:line="60" pos:column="54"/></name><operator pos:line="60" pos:column="54">::<pos:position pos:line="60" pos:column="56"/></operator><name pos:line="60" pos:column="56">setw<pos:position pos:line="60" pos:column="60"/></name></name><argument_list pos:line="60" pos:column="60">(<argument><expr><literal type="number" pos:line="60" pos:column="61">7<pos:position pos:line="60" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="60" pos:column="63"/></argument_list></call> <operator pos:line="60" pos:column="64">&lt;&lt;<pos:position pos:line="60" pos:column="72"/></operator> <name pos:line="60" pos:column="67">n<pos:position pos:line="60" pos:column="68"/></name>  <operator pos:line="60" pos:column="70">&lt;&lt;<pos:position pos:line="60" pos:column="78"/></operator>
                       <literal type="string" pos:line="61" pos:column="24">" entries written so far."<pos:position pos:line="61" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="52"/></expr_stmt>
            }<pos:position pos:line="62" pos:column="14"/></block></then></if>
        }<pos:position pos:line="63" pos:column="10"/></block></for>
    }<pos:position pos:line="64" pos:column="6"/></block></while>

    <comment type="block" pos:line="66" pos:column="5">/* Flush */</comment>
    <for pos:line="67" pos:column="5">for <control pos:line="67" pos:column="9">(<init><expr><name pos:line="67" pos:column="10">dirn<pos:position pos:line="67" pos:column="14"/></name> <operator pos:line="67" pos:column="15">=<pos:position pos:line="67" pos:column="16"/></operator> <literal type="number" pos:line="67" pos:column="17">0<pos:position pos:line="67" pos:column="18"/></literal></expr>;<pos:position pos:line="67" pos:column="19"/></init> <condition><expr><name pos:line="67" pos:column="20">dirn<pos:position pos:line="67" pos:column="24"/></name> <operator pos:line="67" pos:column="25">&lt;<pos:position pos:line="67" pos:column="29"/></operator> <name><name pos:line="67" pos:column="27">Config<pos:position pos:line="67" pos:column="33"/></name><operator pos:line="67" pos:column="33">.<pos:position pos:line="67" pos:column="34"/></operator><name pos:line="67" pos:column="34">cacheSwap<pos:position pos:line="67" pos:column="43"/></name><operator pos:line="67" pos:column="43">.<pos:position pos:line="67" pos:column="44"/></operator><name pos:line="67" pos:column="44">n_configured<pos:position pos:line="67" pos:column="56"/></name></name></expr>;<pos:position pos:line="67" pos:column="57"/></condition> <incr><expr><operator pos:line="67" pos:column="58">++<pos:position pos:line="67" pos:column="60"/></operator><name pos:line="67" pos:column="60">dirn<pos:position pos:line="67" pos:column="64"/></name></expr></incr>)<pos:position pos:line="67" pos:column="65"/></control>
        <block type="pseudo"><expr_stmt><expr><cast type="dynamic" pos:line="68" pos:column="9">dynamic_cast<argument_list type="generic" pos:line="68" pos:column="21">&lt;<argument><expr><name pos:line="68" pos:column="22">SwapDir<pos:position pos:line="68" pos:column="29"/></name> <operator pos:line="68" pos:column="30">*<pos:position pos:line="68" pos:column="31"/></operator></expr></argument>&gt;<pos:position pos:line="68" pos:column="35"/></argument_list><argument_list pos:line="68" pos:column="32">(<argument><expr><call><name pos:line="68" pos:column="33">INDEXSD<pos:position pos:line="68" pos:column="40"/></name><argument_list pos:line="68" pos:column="40">(<argument><expr><name pos:line="68" pos:column="41">dirn<pos:position pos:line="68" pos:column="45"/></name></expr></argument>)<pos:position pos:line="68" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="68" pos:column="47"/></argument_list></cast><operator pos:line="68" pos:column="47">-&gt;<pos:position pos:line="68" pos:column="52"/></operator><call><name pos:line="68" pos:column="49">writeCleanDone<pos:position pos:line="68" pos:column="63"/></name><argument_list pos:line="68" pos:column="63">()<pos:position pos:line="68" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="68" pos:column="66"/></expr_stmt></block></for>

    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">reopen<pos:position pos:line="70" pos:column="15"/></name></expr>)<pos:position pos:line="70" pos:column="16"/></condition><then pos:line="70" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="71" pos:column="9">storeDirOpenSwapLogs<pos:position pos:line="71" pos:column="29"/></name><argument_list pos:line="71" pos:column="29">()<pos:position pos:line="71" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="32"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="73" pos:column="5">getCurrentTime<pos:position pos:line="73" pos:column="19"/></name><argument_list pos:line="73" pos:column="19">()<pos:position pos:line="73" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name pos:line="75" pos:column="5">dt<pos:position pos:line="75" pos:column="7"/></name> <operator pos:line="75" pos:column="8">=<pos:position pos:line="75" pos:column="9"/></operator> <call><name pos:line="75" pos:column="10">tvSubDsec<pos:position pos:line="75" pos:column="19"/></name><argument_list pos:line="75" pos:column="19">(<argument><expr><name pos:line="75" pos:column="20">start<pos:position pos:line="75" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="75" pos:column="27">current_time<pos:position pos:line="75" pos:column="39"/></name></expr></argument>)<pos:position pos:line="75" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="77" pos:column="5">debugs<pos:position pos:line="77" pos:column="11"/></name><argument_list pos:line="77" pos:column="11">(<argument><expr><literal type="number" pos:line="77" pos:column="12">20<pos:position pos:line="77" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="77" pos:column="16">DBG_IMPORTANT<pos:position pos:line="77" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="77" pos:column="31">"  Finished.  Wrote "<pos:position pos:line="77" pos:column="52"/></literal> <operator pos:line="77" pos:column="53">&lt;&lt;<pos:position pos:line="77" pos:column="61"/></operator> <name pos:line="77" pos:column="56">n<pos:position pos:line="77" pos:column="57"/></name> <operator pos:line="77" pos:column="58">&lt;&lt;<pos:position pos:line="77" pos:column="66"/></operator> <literal type="string" pos:line="77" pos:column="61">" entries."<pos:position pos:line="77" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="77" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="77" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="78" pos:column="5">debugs<pos:position pos:line="78" pos:column="11"/></name><argument_list pos:line="78" pos:column="11">(<argument><expr><literal type="number" pos:line="78" pos:column="12">20<pos:position pos:line="78" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="16">DBG_IMPORTANT<pos:position pos:line="78" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="78" pos:column="31">"  Took "<pos:position pos:line="78" pos:column="40"/></literal><operator pos:line="78" pos:column="40">&lt;&lt;<pos:position pos:line="78" pos:column="48"/></operator> <call><name><name pos:line="78" pos:column="43">std<pos:position pos:line="78" pos:column="46"/></name><operator pos:line="78" pos:column="46">::<pos:position pos:line="78" pos:column="48"/></operator><name pos:line="78" pos:column="48">setw<pos:position pos:line="78" pos:column="52"/></name></name><argument_list pos:line="78" pos:column="52">(<argument><expr><literal type="number" pos:line="78" pos:column="53">3<pos:position pos:line="78" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="55"/></argument_list></call><operator pos:line="78" pos:column="55">&lt;&lt;<pos:position pos:line="78" pos:column="63"/></operator> <call><name><name pos:line="78" pos:column="58">std<pos:position pos:line="78" pos:column="61"/></name><operator pos:line="78" pos:column="61">::<pos:position pos:line="78" pos:column="63"/></operator><name pos:line="78" pos:column="63">setprecision<pos:position pos:line="78" pos:column="75"/></name></name><argument_list pos:line="78" pos:column="75">(<argument><expr><literal type="number" pos:line="78" pos:column="76">2<pos:position pos:line="78" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="78" pos:column="78"/></argument_list></call> <operator pos:line="78" pos:column="79">&lt;&lt;<pos:position pos:line="78" pos:column="87"/></operator> <name pos:line="78" pos:column="82">dt<pos:position pos:line="78" pos:column="84"/></name> <operator pos:line="78" pos:column="85">&lt;&lt;<pos:position pos:line="78" pos:column="93"/></operator>
           <literal type="string" pos:line="79" pos:column="12">" seconds ("<pos:position pos:line="79" pos:column="24"/></literal><operator pos:line="79" pos:column="24">&lt;&lt;<pos:position pos:line="79" pos:column="32"/></operator> <call><name><name pos:line="79" pos:column="27">std<pos:position pos:line="79" pos:column="30"/></name><operator pos:line="79" pos:column="30">::<pos:position pos:line="79" pos:column="32"/></operator><name pos:line="79" pos:column="32">setw<pos:position pos:line="79" pos:column="36"/></name></name><argument_list pos:line="79" pos:column="36">(<argument><expr><literal type="number" pos:line="79" pos:column="37">6<pos:position pos:line="79" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="39"/></argument_list></call> <operator pos:line="79" pos:column="40">&lt;&lt;<pos:position pos:line="79" pos:column="48"/></operator> <operator pos:line="79" pos:column="43">(<pos:position pos:line="79" pos:column="44"/></operator><operator pos:line="79" pos:column="44">(<pos:position pos:line="79" pos:column="45"/></operator><name pos:line="79" pos:column="45">double<pos:position pos:line="79" pos:column="51"/></name><operator pos:line="79" pos:column="51">)<pos:position pos:line="79" pos:column="52"/></operator> <name pos:line="79" pos:column="53">n<pos:position pos:line="79" pos:column="54"/></name> <operator pos:line="79" pos:column="55">/<pos:position pos:line="79" pos:column="56"/></operator> <operator pos:line="79" pos:column="57">(<pos:position pos:line="79" pos:column="58"/></operator><ternary><condition><expr><name pos:line="79" pos:column="58">dt<pos:position pos:line="79" pos:column="60"/></name> <operator pos:line="79" pos:column="61">&gt;<pos:position pos:line="79" pos:column="65"/></operator> <literal type="number" pos:line="79" pos:column="63">0.0<pos:position pos:line="79" pos:column="66"/></literal></expr> ?<pos:position pos:line="79" pos:column="68"/></condition><then pos:line="79" pos:column="68"> <expr><name pos:line="79" pos:column="69">dt<pos:position pos:line="79" pos:column="71"/></name></expr> <pos:position pos:line="79" pos:column="72"/></then><else pos:line="79" pos:column="72">: <expr><literal type="number" pos:line="79" pos:column="74">1.0<pos:position pos:line="79" pos:column="77"/></literal></expr></else></ternary><operator pos:line="79" pos:column="77">)<pos:position pos:line="79" pos:column="78"/></operator><operator pos:line="79" pos:column="78">)<pos:position pos:line="79" pos:column="79"/></operator> <operator pos:line="79" pos:column="80">&lt;&lt;<pos:position pos:line="79" pos:column="88"/></operator> <literal type="string" pos:line="79" pos:column="83">" entries/sec)."<pos:position pos:line="79" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="79" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="101"/></expr_stmt>

    <return pos:line="81" pos:column="5">return <expr><name pos:line="81" pos:column="12">n<pos:position pos:line="81" pos:column="13"/></name></expr>;<pos:position pos:line="81" pos:column="14"/></return>
}<pos:position pos:line="82" pos:column="2"/></block></function></unit>

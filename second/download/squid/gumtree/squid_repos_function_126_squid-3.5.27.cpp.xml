<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_126_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Transport<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">Connect<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">()<pos:position pos:line="2" pos:column="21"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ip<pos:position pos:line="4" pos:column="7"/></name><operator pos:line="4" pos:column="7">::<pos:position pos:line="4" pos:column="9"/></operator><name pos:line="4" pos:column="9">Address<pos:position pos:line="4" pos:column="16"/></name></name></type> <name pos:line="4" pos:column="17">iaddr<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">resolveDestination<pos:position pos:line="5" pos:column="23"/></name><argument_list pos:line="5" pos:column="23">(<argument><expr><name pos:line="5" pos:column="24">iaddr<pos:position pos:line="5" pos:column="29"/></name></expr></argument>)<pos:position pos:line="5" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugVerbose<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><literal type="number" pos:line="7" pos:column="18">2<pos:position pos:line="7" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="21">"Connecting... "<pos:position pos:line="7" pos:column="37"/></literal> <operator pos:line="7" pos:column="38">&lt;&lt;<pos:position pos:line="7" pos:column="46"/></operator> <name><name pos:line="7" pos:column="41">Config<pos:position pos:line="7" pos:column="47"/></name><operator pos:line="7" pos:column="47">.<pos:position pos:line="7" pos:column="48"/></operator><name pos:line="7" pos:column="48">hostname<pos:position pos:line="7" pos:column="56"/></name></name> <operator pos:line="7" pos:column="57">&lt;&lt;<pos:position pos:line="7" pos:column="65"/></operator> <literal type="string" pos:line="7" pos:column="60">" ("<pos:position pos:line="7" pos:column="64"/></literal> <operator pos:line="7" pos:column="65">&lt;&lt;<pos:position pos:line="7" pos:column="73"/></operator> <name pos:line="7" pos:column="68">iaddr<pos:position pos:line="7" pos:column="73"/></name> <operator pos:line="7" pos:column="74">&lt;&lt;<pos:position pos:line="7" pos:column="82"/></operator> <literal type="string" pos:line="7" pos:column="77">")"<pos:position pos:line="7" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="82"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">client_comm_connect<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">conn<pos:position pos:line="9" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="35">iaddr<pos:position pos:line="9" pos:column="40"/></name></expr></argument>)<pos:position pos:line="9" pos:column="41"/></argument_list></call> <operator pos:line="9" pos:column="42">&lt;<pos:position pos:line="9" pos:column="46"/></operator> <literal type="number" pos:line="9" pos:column="44">0<pos:position pos:line="9" pos:column="45"/></literal></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46"> <block pos:line="9" pos:column="47">{
        <decl_stmt><decl><type><name pos:line="10" pos:column="9">char<pos:position pos:line="10" pos:column="13"/></name></type> <name><name pos:line="10" pos:column="14">hostnameBuf<pos:position pos:line="10" pos:column="25"/></name><index pos:line="10" pos:column="25">[<expr><name pos:line="10" pos:column="26">MAX_IPSTRLEN<pos:position pos:line="10" pos:column="38"/></name></expr>]<pos:position pos:line="10" pos:column="39"/></index></name></decl>;<pos:position pos:line="10" pos:column="40"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">iaddr<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">toUrl<pos:position pos:line="11" pos:column="20"/></name></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">hostnameBuf<pos:position pos:line="11" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="34">MAX_IPSTRLEN<pos:position pos:line="11" pos:column="46"/></name></expr></argument>)<pos:position pos:line="11" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">std<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">::<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">cerr<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">&lt;&lt;<pos:position pos:line="12" pos:column="27"/></operator> <literal type="string" pos:line="12" pos:column="22">"ERROR: Cannot connect to "<pos:position pos:line="12" pos:column="49"/></literal> <operator pos:line="12" pos:column="50">&lt;&lt;<pos:position pos:line="12" pos:column="58"/></operator> <name pos:line="12" pos:column="53">hostnameBuf<pos:position pos:line="12" pos:column="64"/></name>
                  <operator pos:line="13" pos:column="19">&lt;&lt;<pos:position pos:line="13" pos:column="27"/></operator> <operator pos:line="13" pos:column="22">(<pos:position pos:line="13" pos:column="23"/></operator><ternary><condition><expr><operator pos:line="13" pos:column="23">!<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="24">errno<pos:position pos:line="13" pos:column="29"/></name></expr> ?<pos:position pos:line="13" pos:column="31"/></condition><then><expr><literal type="string" pos:line="13" pos:column="31">": Host unknown."<pos:position pos:line="13" pos:column="48"/></literal></expr> <pos:position pos:line="13" pos:column="49"/></then><else pos:line="13" pos:column="49">: <expr><literal type="string" pos:line="13" pos:column="51">""<pos:position pos:line="13" pos:column="53"/></literal></expr></else></ternary><operator pos:line="13" pos:column="53">)<pos:position pos:line="13" pos:column="54"/></operator> <operator pos:line="13" pos:column="55">&lt;&lt;<pos:position pos:line="13" pos:column="63"/></operator> <name><name pos:line="13" pos:column="58">std<pos:position pos:line="13" pos:column="61"/></name><operator pos:line="13" pos:column="61">::<pos:position pos:line="13" pos:column="63"/></operator><name pos:line="13" pos:column="63">endl<pos:position pos:line="13" pos:column="67"/></name></name></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">exit<pos:position pos:line="14" pos:column="13"/></name><argument_list pos:line="14" pos:column="13">(<argument><expr><literal type="number" pos:line="14" pos:column="14">1<pos:position pos:line="14" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="16" pos:column="5">debugVerbose<pos:position pos:line="16" pos:column="17"/></name><argument_list pos:line="16" pos:column="17">(<argument><expr><literal type="number" pos:line="16" pos:column="18">2<pos:position pos:line="16" pos:column="19"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="21">"Connected to: "<pos:position pos:line="16" pos:column="37"/></literal> <operator pos:line="16" pos:column="38">&lt;&lt;<pos:position pos:line="16" pos:column="46"/></operator> <name><name pos:line="16" pos:column="41">Config<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">.<pos:position pos:line="16" pos:column="48"/></operator><name pos:line="16" pos:column="48">hostname<pos:position pos:line="16" pos:column="56"/></name></name> <operator pos:line="16" pos:column="57">&lt;&lt;<pos:position pos:line="16" pos:column="65"/></operator> <literal type="string" pos:line="16" pos:column="60">" ("<pos:position pos:line="16" pos:column="64"/></literal> <operator pos:line="16" pos:column="65">&lt;&lt;<pos:position pos:line="16" pos:column="73"/></operator> <name pos:line="16" pos:column="68">iaddr<pos:position pos:line="16" pos:column="73"/></name> <operator pos:line="16" pos:column="74">&lt;&lt;<pos:position pos:line="16" pos:column="82"/></operator> <literal type="string" pos:line="16" pos:column="77">")"<pos:position pos:line="16" pos:column="80"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="81"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="82"/></expr_stmt>

    <comment type="line" pos:line="18" pos:column="5">// do any TLS setup that might be needed</comment>
    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">!<pos:position pos:line="19" pos:column="10"/></operator><call><name><name pos:line="19" pos:column="10">Transport<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">::<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">MaybeStartTls<pos:position pos:line="19" pos:column="34"/></name></name><argument_list pos:line="19" pos:column="34">(<argument><expr><name><name pos:line="19" pos:column="35">Config<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">.<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">hostname<pos:position pos:line="19" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="52"/></condition><then pos:line="19" pos:column="52">
        <block type="pseudo"><return pos:line="20" pos:column="9">return <expr><literal type="boolean" pos:line="20" pos:column="16">false<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></return></block></then></if>

    <return pos:line="22" pos:column="5">return <expr><literal type="boolean" pos:line="22" pos:column="12">true<pos:position pos:line="22" pos:column="16"/></literal></expr>;<pos:position pos:line="22" pos:column="17"/></return>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6578_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">check_init<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">void<pos:position pos:line="2" pos:column="16"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="17"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">B<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><literal type="number" pos:line="4" pos:column="13">0<pos:position pos:line="4" pos:column="14"/></literal></expr></init></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="16">I<pos:position pos:line="4" pos:column="17"/></name> <init pos:line="4" pos:column="18">= <expr><literal type="number" pos:line="4" pos:column="20">0<pos:position pos:line="4" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="22"/></decl_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* calloc the ptrs so that we don't see them when hunting lost memory */</comment>
    <expr_stmt><expr><name pos:line="6" pos:column="5">malloc_ptrs<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <call><name pos:line="6" pos:column="19">calloc<pos:position pos:line="6" pos:column="25"/></name><argument_list pos:line="6" pos:column="25">(<argument><expr><name pos:line="6" pos:column="26">DBG_ARRY_BKTS<pos:position pos:line="6" pos:column="39"/></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="41">sizeof<argument_list pos:line="6" pos:column="47">(<argument><expr><operator pos:line="6" pos:column="48">*<pos:position pos:line="6" pos:column="49"/></operator><name pos:line="6" pos:column="49">malloc_ptrs<pos:position pos:line="6" pos:column="60"/></name></expr></argument>)<pos:position pos:line="6" pos:column="61"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="63"/></expr_stmt>

    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><expr><name pos:line="8" pos:column="10">B<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">=<pos:position pos:line="8" pos:column="13"/></operator> <literal type="number" pos:line="8" pos:column="14">0<pos:position pos:line="8" pos:column="15"/></literal></expr>;<pos:position pos:line="8" pos:column="16"/></init> <condition><expr><name pos:line="8" pos:column="17">B<pos:position pos:line="8" pos:column="18"/></name> <operator pos:line="8" pos:column="19">&lt;<pos:position pos:line="8" pos:column="23"/></operator> <name pos:line="8" pos:column="21">DBG_ARRY_BKTS<pos:position pos:line="8" pos:column="34"/></name></expr>;<pos:position pos:line="8" pos:column="35"/></condition> <incr><expr><operator pos:line="8" pos:column="36">++<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">B<pos:position pos:line="8" pos:column="39"/></name></expr></incr>)<pos:position pos:line="8" pos:column="40"/></control> <block pos:line="8" pos:column="41">{
        <for pos:line="9" pos:column="9">for <control pos:line="9" pos:column="13">(<init><expr><name pos:line="9" pos:column="14">I<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <literal type="number" pos:line="9" pos:column="18">0<pos:position pos:line="9" pos:column="19"/></literal></expr>;<pos:position pos:line="9" pos:column="20"/></init> <condition><expr><name pos:line="9" pos:column="21">I<pos:position pos:line="9" pos:column="22"/></name> <operator pos:line="9" pos:column="23">&lt;<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="25">DBG_ARRY_SZ<pos:position pos:line="9" pos:column="36"/></name></expr>;<pos:position pos:line="9" pos:column="37"/></condition> <incr><expr><operator pos:line="9" pos:column="38">++<pos:position pos:line="9" pos:column="40"/></operator><name pos:line="9" pos:column="40">I<pos:position pos:line="9" pos:column="41"/></name></expr></incr>)<pos:position pos:line="9" pos:column="42"/></control> <block pos:line="9" pos:column="43">{
            <expr_stmt><expr><name><name pos:line="10" pos:column="13">malloc_ptrs<pos:position pos:line="10" pos:column="24"/></name><index pos:line="10" pos:column="24">[<expr><name pos:line="10" pos:column="25">B<pos:position pos:line="10" pos:column="26"/></name></expr>]<pos:position pos:line="10" pos:column="27"/></index><index pos:line="10" pos:column="27">[<expr><name pos:line="10" pos:column="28">I<pos:position pos:line="10" pos:column="29"/></name></expr>]<pos:position pos:line="10" pos:column="30"/></index></name> <operator pos:line="10" pos:column="31">=<pos:position pos:line="10" pos:column="32"/></operator> <name pos:line="10" pos:column="33">NULL<pos:position pos:line="10" pos:column="37"/></name></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="11" pos:column="13">malloc_size<pos:position pos:line="11" pos:column="24"/></name><index pos:line="11" pos:column="24">[<expr><name pos:line="11" pos:column="25">B<pos:position pos:line="11" pos:column="26"/></name></expr>]<pos:position pos:line="11" pos:column="27"/></index><index pos:line="11" pos:column="27">[<expr><name pos:line="11" pos:column="28">I<pos:position pos:line="11" pos:column="29"/></name></expr>]<pos:position pos:line="11" pos:column="30"/></index></name> <operator pos:line="11" pos:column="31">=<pos:position pos:line="11" pos:column="32"/></operator> <literal type="number" pos:line="11" pos:column="33">0<pos:position pos:line="11" pos:column="34"/></literal></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
<cpp:if pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">if<pos:position pos:line="12" pos:column="4"/></cpp:directive> <expr><name pos:line="12" pos:column="5">XMALLOC_TRACE<pos:position pos:line="12" pos:column="18"/></name></expr></cpp:if>

            <expr_stmt><expr><name><name pos:line="14" pos:column="13">malloc_file<pos:position pos:line="14" pos:column="24"/></name><index pos:line="14" pos:column="24">[<expr><name pos:line="14" pos:column="25">B<pos:position pos:line="14" pos:column="26"/></name></expr>]<pos:position pos:line="14" pos:column="27"/></index><index pos:line="14" pos:column="27">[<expr><name pos:line="14" pos:column="28">I<pos:position pos:line="14" pos:column="29"/></name></expr>]<pos:position pos:line="14" pos:column="30"/></index></name> <operator pos:line="14" pos:column="31">=<pos:position pos:line="14" pos:column="32"/></operator> <name pos:line="14" pos:column="33">NULL<pos:position pos:line="14" pos:column="37"/></name></expr>;<pos:position pos:line="14" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="15" pos:column="13">malloc_line<pos:position pos:line="15" pos:column="24"/></name><index pos:line="15" pos:column="24">[<expr><name pos:line="15" pos:column="25">B<pos:position pos:line="15" pos:column="26"/></name></expr>]<pos:position pos:line="15" pos:column="27"/></index><index pos:line="15" pos:column="27">[<expr><name pos:line="15" pos:column="28">I<pos:position pos:line="15" pos:column="29"/></name></expr>]<pos:position pos:line="15" pos:column="30"/></index></name> <operator pos:line="15" pos:column="31">=<pos:position pos:line="15" pos:column="32"/></operator> <literal type="number" pos:line="15" pos:column="33">0<pos:position pos:line="15" pos:column="34"/></literal></expr>;<pos:position pos:line="15" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">malloc_count<pos:position pos:line="16" pos:column="25"/></name><index pos:line="16" pos:column="25">[<expr><name pos:line="16" pos:column="26">B<pos:position pos:line="16" pos:column="27"/></name></expr>]<pos:position pos:line="16" pos:column="28"/></index><index pos:line="16" pos:column="28">[<expr><name pos:line="16" pos:column="29">I<pos:position pos:line="16" pos:column="30"/></name></expr>]<pos:position pos:line="16" pos:column="31"/></index></name> <operator pos:line="16" pos:column="32">=<pos:position pos:line="16" pos:column="33"/></operator> <literal type="number" pos:line="16" pos:column="34">0<pos:position pos:line="16" pos:column="35"/></literal></expr>;<pos:position pos:line="16" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">endif<pos:position pos:line="17" pos:column="7"/></cpp:directive></cpp:endif>

        }<pos:position pos:line="19" pos:column="10"/></block></for>
    }<pos:position pos:line="20" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="22" pos:column="5">dbg_initd<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">=<pos:position pos:line="22" pos:column="16"/></operator> <literal type="number" pos:line="22" pos:column="17">1<pos:position pos:line="22" pos:column="18"/></literal></expr>;<pos:position pos:line="22" pos:column="19"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

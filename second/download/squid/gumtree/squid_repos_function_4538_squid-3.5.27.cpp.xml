<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4538_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">CertValidationHelper<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">Init<pos:position pos:line="1" pos:column="37"/></name></name><parameter_list pos:line="1" pos:column="37">()<pos:position pos:line="1" pos:column="39"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">assert<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><name pos:line="3" pos:column="12">ssl_crt_validator<pos:position pos:line="3" pos:column="29"/></name> <operator pos:line="3" pos:column="30">==<pos:position pos:line="3" pos:column="32"/></operator> <name pos:line="3" pos:column="33">NULL<pos:position pos:line="3" pos:column="37"/></name></expr></argument>)<pos:position pos:line="3" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="39"/></expr_stmt>

    <comment type="line" pos:line="5" pos:column="5">// we need to start ssl_crtd only if some port(s) need to bump SSL</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">bool<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">found<pos:position pos:line="6" pos:column="15"/></name> <init pos:line="6" pos:column="16">= <expr><literal type="boolean" pos:line="6" pos:column="18">false<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><name><name pos:line="7" pos:column="10">AnyP<pos:position pos:line="7" pos:column="14"/></name><operator pos:line="7" pos:column="14">::<pos:position pos:line="7" pos:column="16"/></operator><name pos:line="7" pos:column="16">PortCfgPointer<pos:position pos:line="7" pos:column="30"/></name></name></type> <name pos:line="7" pos:column="31">s<pos:position pos:line="7" pos:column="32"/></name> <init pos:line="7" pos:column="33">= <expr><name pos:line="7" pos:column="35">HttpPortList<pos:position pos:line="7" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></init> <condition><expr><operator pos:line="7" pos:column="49">!<pos:position pos:line="7" pos:column="50"/></operator><name pos:line="7" pos:column="50">found<pos:position pos:line="7" pos:column="55"/></name> <operator pos:line="7" pos:column="56">&amp;&amp;<pos:position pos:line="7" pos:column="66"/></operator> <name pos:line="7" pos:column="59">s<pos:position pos:line="7" pos:column="60"/></name> <operator pos:line="7" pos:column="61">!=<pos:position pos:line="7" pos:column="63"/></operator> <name pos:line="7" pos:column="64">NULL<pos:position pos:line="7" pos:column="68"/></name></expr>;<pos:position pos:line="7" pos:column="69"/></condition> <incr><expr><name pos:line="7" pos:column="70">s<pos:position pos:line="7" pos:column="71"/></name> <operator pos:line="7" pos:column="72">=<pos:position pos:line="7" pos:column="73"/></operator> <name><name pos:line="7" pos:column="74">s<pos:position pos:line="7" pos:column="75"/></name><operator pos:line="7" pos:column="75">-&gt;<pos:position pos:line="7" pos:column="80"/></operator><name pos:line="7" pos:column="77">next<pos:position pos:line="7" pos:column="81"/></name></name></expr></incr>)<pos:position pos:line="7" pos:column="82"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">found<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name><name pos:line="8" pos:column="17">s<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">-&gt;<pos:position pos:line="8" pos:column="23"/></operator><name pos:line="8" pos:column="20">flags<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">.<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">tunnelSslBumping<pos:position pos:line="8" pos:column="42"/></name></name></expr>;<pos:position pos:line="8" pos:column="43"/></expr_stmt></block></for>
    <for pos:line="9" pos:column="5">for <control pos:line="9" pos:column="9">(<init><decl><type><name><name pos:line="9" pos:column="10">AnyP<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">::<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">PortCfgPointer<pos:position pos:line="9" pos:column="30"/></name></name></type> <name pos:line="9" pos:column="31">s<pos:position pos:line="9" pos:column="32"/></name> <init pos:line="9" pos:column="33">= <expr><name pos:line="9" pos:column="35">HttpsPortList<pos:position pos:line="9" pos:column="48"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="49"/></init> <condition><expr><operator pos:line="9" pos:column="50">!<pos:position pos:line="9" pos:column="51"/></operator><name pos:line="9" pos:column="51">found<pos:position pos:line="9" pos:column="56"/></name> <operator pos:line="9" pos:column="57">&amp;&amp;<pos:position pos:line="9" pos:column="67"/></operator> <name pos:line="9" pos:column="60">s<pos:position pos:line="9" pos:column="61"/></name> <operator pos:line="9" pos:column="62">!=<pos:position pos:line="9" pos:column="64"/></operator> <name pos:line="9" pos:column="65">NULL<pos:position pos:line="9" pos:column="69"/></name></expr>;<pos:position pos:line="9" pos:column="70"/></condition> <incr><expr><name pos:line="9" pos:column="71">s<pos:position pos:line="9" pos:column="72"/></name> <operator pos:line="9" pos:column="73">=<pos:position pos:line="9" pos:column="74"/></operator> <name><name pos:line="9" pos:column="75">s<pos:position pos:line="9" pos:column="76"/></name><operator pos:line="9" pos:column="76">-&gt;<pos:position pos:line="9" pos:column="81"/></operator><name pos:line="9" pos:column="78">next<pos:position pos:line="9" pos:column="82"/></name></name></expr></incr>)<pos:position pos:line="9" pos:column="83"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">found<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <name><name pos:line="10" pos:column="17">s<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">flags<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">.<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">tunnelSslBumping<pos:position pos:line="10" pos:column="42"/></name></name></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt></block></for>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">found<pos:position pos:line="11" pos:column="15"/></name></expr>)<pos:position pos:line="11" pos:column="16"/></condition><then pos:line="11" pos:column="16">
        <block type="pseudo"><return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="14" pos:column="5">ssl_crt_validator<pos:position pos:line="14" pos:column="22"/></name> <operator pos:line="14" pos:column="23">=<pos:position pos:line="14" pos:column="24"/></operator> <operator pos:line="14" pos:column="25">new<pos:position pos:line="14" pos:column="28"/></operator> <call><name pos:line="14" pos:column="29">helper<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">(<argument><expr><literal type="string" pos:line="14" pos:column="36">"ssl_crt_validator"<pos:position pos:line="14" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">ssl_crt_validator<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">childs<pos:position pos:line="15" pos:column="30"/></name><operator pos:line="15" pos:column="30">.<pos:position pos:line="15" pos:column="31"/></operator><name pos:line="15" pos:column="31">updateLimits<pos:position pos:line="15" pos:column="43"/></name></name><argument_list pos:line="15" pos:column="43">(<argument><expr><name><name pos:line="15" pos:column="44">Ssl<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">::<pos:position pos:line="15" pos:column="49"/></operator><name pos:line="15" pos:column="49">TheConfig<pos:position pos:line="15" pos:column="58"/></name><operator pos:line="15" pos:column="58">.<pos:position pos:line="15" pos:column="59"/></operator><name pos:line="15" pos:column="59">ssl_crt_validator_Children<pos:position pos:line="15" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="87"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">ssl_crt_validator<pos:position pos:line="16" pos:column="22"/></name><operator pos:line="16" pos:column="22">-&gt;<pos:position pos:line="16" pos:column="27"/></operator><name pos:line="16" pos:column="24">ipc_type<pos:position pos:line="16" pos:column="32"/></name></name> <operator pos:line="16" pos:column="33">=<pos:position pos:line="16" pos:column="34"/></operator> <name pos:line="16" pos:column="35">IPC_STREAM<pos:position pos:line="16" pos:column="45"/></name></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
    <comment type="line" pos:line="17" pos:column="5">// The crtd messages may contain the eol ('\n') character. We are</comment>
    <comment type="line" pos:line="18" pos:column="5">// going to use the '\1' char as the end-of-message mark.</comment>
    <expr_stmt><expr><name><name pos:line="19" pos:column="5">ssl_crt_validator<pos:position pos:line="19" pos:column="22"/></name><operator pos:line="19" pos:column="22">-&gt;<pos:position pos:line="19" pos:column="27"/></operator><name pos:line="19" pos:column="24">eom<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <literal type="char" pos:line="19" pos:column="30">'\1'<pos:position pos:line="19" pos:column="34"/></literal></expr>;<pos:position pos:line="19" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">assert<pos:position pos:line="20" pos:column="11"/></name><argument_list pos:line="20" pos:column="11">(<argument><expr><name><name pos:line="20" pos:column="12">ssl_crt_validator<pos:position pos:line="20" pos:column="29"/></name><operator pos:line="20" pos:column="29">-&gt;<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="31">cmdline<pos:position pos:line="20" pos:column="38"/></name></name> <operator pos:line="20" pos:column="39">==<pos:position pos:line="20" pos:column="41"/></operator> <name pos:line="20" pos:column="42">NULL<pos:position pos:line="20" pos:column="46"/></name></expr></argument>)<pos:position pos:line="20" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="22" pos:column="5">int<pos:position pos:line="22" pos:column="8"/></name></type> <name pos:line="22" pos:column="9">ttl<pos:position pos:line="22" pos:column="12"/></name> <init pos:line="22" pos:column="13">= <expr><literal type="number" pos:line="22" pos:column="15">60<pos:position pos:line="22" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="23" pos:column="5">size_t<pos:position pos:line="23" pos:column="11"/></name></type> <name pos:line="23" pos:column="12">cache<pos:position pos:line="23" pos:column="17"/></name> <init pos:line="23" pos:column="18">= <expr><literal type="number" pos:line="23" pos:column="20">2048<pos:position pos:line="23" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="25"/></decl_stmt>
    <block pos:line="24" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="25" pos:column="9">char<pos:position pos:line="25" pos:column="13"/></name> <modifier pos:line="25" pos:column="14">*<pos:position pos:line="25" pos:column="15"/></modifier></type><name pos:line="25" pos:column="15">tmp<pos:position pos:line="25" pos:column="18"/></name> <init pos:line="25" pos:column="19">= <expr><call><name pos:line="25" pos:column="21">xstrdup<pos:position pos:line="25" pos:column="28"/></name><argument_list pos:line="25" pos:column="28">(<argument><expr><name><name pos:line="25" pos:column="29">Ssl<pos:position pos:line="25" pos:column="32"/></name><operator pos:line="25" pos:column="32">::<pos:position pos:line="25" pos:column="34"/></operator><name pos:line="25" pos:column="34">TheConfig<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">.<pos:position pos:line="25" pos:column="44"/></operator><name pos:line="25" pos:column="44">ssl_crt_validator<pos:position pos:line="25" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="62"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="63"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="26" pos:column="9">char<pos:position pos:line="26" pos:column="13"/></name> <modifier pos:line="26" pos:column="14">*<pos:position pos:line="26" pos:column="15"/></modifier></type><name pos:line="26" pos:column="15">tmp_begin<pos:position pos:line="26" pos:column="24"/></name> <init pos:line="26" pos:column="25">= <expr><name pos:line="26" pos:column="27">tmp<pos:position pos:line="26" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="26" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="27" pos:column="9">char<pos:position pos:line="27" pos:column="13"/></name> <modifier pos:line="27" pos:column="14">*<pos:position pos:line="27" pos:column="15"/></modifier></type> <name pos:line="27" pos:column="16">token<pos:position pos:line="27" pos:column="21"/></name> <init pos:line="27" pos:column="22">= <expr><name pos:line="27" pos:column="24">NULL<pos:position pos:line="27" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="27" pos:column="29"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="28" pos:column="9">bool<pos:position pos:line="28" pos:column="13"/></name></type> <name pos:line="28" pos:column="14">parseParams<pos:position pos:line="28" pos:column="25"/></name> <init pos:line="28" pos:column="26">= <expr><literal type="boolean" pos:line="28" pos:column="28">true<pos:position pos:line="28" pos:column="32"/></literal></expr></init></decl>;<pos:position pos:line="28" pos:column="33"/></decl_stmt>
        <while pos:line="29" pos:column="9">while <condition pos:line="29" pos:column="15">(<expr><operator pos:line="29" pos:column="16">(<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="17">token<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">=<pos:position pos:line="29" pos:column="24"/></operator> <call><name pos:line="29" pos:column="25">strwordtok<pos:position pos:line="29" pos:column="35"/></name><argument_list pos:line="29" pos:column="35">(<argument><expr><name pos:line="29" pos:column="36">NULL<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="42">&amp;<pos:position pos:line="29" pos:column="47"/></operator><name pos:line="29" pos:column="43">tmp<pos:position pos:line="29" pos:column="46"/></name></expr></argument>)<pos:position pos:line="29" pos:column="47"/></argument_list></call><operator pos:line="29" pos:column="47">)<pos:position pos:line="29" pos:column="48"/></operator></expr>)<pos:position pos:line="29" pos:column="49"/></condition> <block pos:line="29" pos:column="50">{
            <if pos:line="30" pos:column="13">if <condition pos:line="30" pos:column="16">(<expr><name pos:line="30" pos:column="17">parseParams<pos:position pos:line="30" pos:column="28"/></name></expr>)<pos:position pos:line="30" pos:column="29"/></condition><then pos:line="30" pos:column="29"> <block pos:line="30" pos:column="30">{
                <if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><call><name pos:line="31" pos:column="21">strncmp<pos:position pos:line="31" pos:column="28"/></name><argument_list pos:line="31" pos:column="28">(<argument><expr><name pos:line="31" pos:column="29">token<pos:position pos:line="31" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="36">"ttl="<pos:position pos:line="31" pos:column="42"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="44">4<pos:position pos:line="31" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="46"/></argument_list></call> <operator pos:line="31" pos:column="47">==<pos:position pos:line="31" pos:column="49"/></operator> <literal type="number" pos:line="31" pos:column="50">0<pos:position pos:line="31" pos:column="51"/></literal></expr>)<pos:position pos:line="31" pos:column="52"/></condition><then pos:line="31" pos:column="52"> <block pos:line="31" pos:column="53">{
                    <expr_stmt><expr><name pos:line="32" pos:column="21">ttl<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <call><name pos:line="32" pos:column="27">atoi<pos:position pos:line="32" pos:column="31"/></name><argument_list pos:line="32" pos:column="31">(<argument><expr><name pos:line="32" pos:column="32">token<pos:position pos:line="32" pos:column="37"/></name> <operator pos:line="32" pos:column="38">+<pos:position pos:line="32" pos:column="39"/></operator> <literal type="number" pos:line="32" pos:column="40">4<pos:position pos:line="32" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="43"/></expr_stmt>
                    <continue pos:line="33" pos:column="21">continue;<pos:position pos:line="33" pos:column="30"/></continue>
                }<pos:position pos:line="34" pos:column="18"/></block></then> <elseif pos:line="34" pos:column="19">else <if pos:line="34" pos:column="24">if <condition pos:line="34" pos:column="27">(<expr><call><name pos:line="34" pos:column="28">strncmp<pos:position pos:line="34" pos:column="35"/></name><argument_list pos:line="34" pos:column="35">(<argument><expr><name pos:line="34" pos:column="36">token<pos:position pos:line="34" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="43">"cache="<pos:position pos:line="34" pos:column="51"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="53">6<pos:position pos:line="34" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="55"/></argument_list></call> <operator pos:line="34" pos:column="56">==<pos:position pos:line="34" pos:column="58"/></operator> <literal type="number" pos:line="34" pos:column="59">0<pos:position pos:line="34" pos:column="60"/></literal></expr>)<pos:position pos:line="34" pos:column="61"/></condition><then pos:line="34" pos:column="61"> <block pos:line="34" pos:column="62">{
                    <expr_stmt><expr><name pos:line="35" pos:column="21">cache<pos:position pos:line="35" pos:column="26"/></name> <operator pos:line="35" pos:column="27">=<pos:position pos:line="35" pos:column="28"/></operator> <call><name pos:line="35" pos:column="29">atoi<pos:position pos:line="35" pos:column="33"/></name><argument_list pos:line="35" pos:column="33">(<argument><expr><name pos:line="35" pos:column="34">token<pos:position pos:line="35" pos:column="39"/></name> <operator pos:line="35" pos:column="40">+<pos:position pos:line="35" pos:column="41"/></operator> <literal type="number" pos:line="35" pos:column="42">6<pos:position pos:line="35" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
                    <continue pos:line="36" pos:column="21">continue;<pos:position pos:line="36" pos:column="30"/></continue>
                }<pos:position pos:line="37" pos:column="18"/></block></then></if></elseif> <else pos:line="37" pos:column="19">else
                    <block type="pseudo"><expr_stmt><expr><name pos:line="38" pos:column="21">parseParams<pos:position pos:line="38" pos:column="32"/></name> <operator pos:line="38" pos:column="33">=<pos:position pos:line="38" pos:column="34"/></operator> <literal type="boolean" pos:line="38" pos:column="35">false<pos:position pos:line="38" pos:column="40"/></literal></expr>;<pos:position pos:line="38" pos:column="41"/></expr_stmt></block></else></if>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">wordlistAdd<pos:position pos:line="40" pos:column="24"/></name><argument_list pos:line="40" pos:column="24">(<argument><expr><operator pos:line="40" pos:column="25">&amp;<pos:position pos:line="40" pos:column="30"/></operator><name><name pos:line="40" pos:column="26">ssl_crt_validator<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">-&gt;<pos:position pos:line="40" pos:column="48"/></operator><name pos:line="40" pos:column="45">cmdline<pos:position pos:line="40" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="54">token<pos:position pos:line="40" pos:column="59"/></name></expr></argument>)<pos:position pos:line="40" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="61"/></expr_stmt>
        }<pos:position pos:line="41" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">xfree<pos:position pos:line="42" pos:column="14"/></name><argument_list pos:line="42" pos:column="14">(<argument><expr><name pos:line="42" pos:column="15">tmp_begin<pos:position pos:line="42" pos:column="24"/></name></expr></argument>)<pos:position pos:line="42" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="43" pos:column="6"/></block>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">helperOpenServers<pos:position pos:line="44" pos:column="22"/></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name pos:line="44" pos:column="23">ssl_crt_validator<pos:position pos:line="44" pos:column="40"/></name></expr></argument>)<pos:position pos:line="44" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="42"/></expr_stmt>

    <comment type="line" pos:line="46" pos:column="5">//WARNING: initializing static member in an object initialization method</comment>
    <expr_stmt><expr><call><name pos:line="47" pos:column="5">assert<pos:position pos:line="47" pos:column="11"/></name><argument_list pos:line="47" pos:column="11">(<argument><expr><name pos:line="47" pos:column="12">HelperCache<pos:position pos:line="47" pos:column="23"/></name> <operator pos:line="47" pos:column="24">==<pos:position pos:line="47" pos:column="26"/></operator> <name pos:line="47" pos:column="27">NULL<pos:position pos:line="47" pos:column="31"/></name></expr></argument>)<pos:position pos:line="47" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name pos:line="48" pos:column="5">HelperCache<pos:position pos:line="48" pos:column="16"/></name> <operator pos:line="48" pos:column="17">=<pos:position pos:line="48" pos:column="18"/></operator> <operator pos:line="48" pos:column="19">new<pos:position pos:line="48" pos:column="22"/></operator> <call><name><name pos:line="48" pos:column="23">Ssl<pos:position pos:line="48" pos:column="26"/></name><operator pos:line="48" pos:column="26">::<pos:position pos:line="48" pos:column="28"/></operator><name pos:line="48" pos:column="28">CertValidationHelper<pos:position pos:line="48" pos:column="48"/></name><operator pos:line="48" pos:column="48">::<pos:position pos:line="48" pos:column="50"/></operator><name pos:line="48" pos:column="50">LruCache<pos:position pos:line="48" pos:column="58"/></name></name><argument_list pos:line="48" pos:column="58">(<argument><expr><name pos:line="48" pos:column="59">ttl<pos:position pos:line="48" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="64">cache<pos:position pos:line="48" pos:column="69"/></name></expr></argument>)<pos:position pos:line="48" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="71"/></expr_stmt>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

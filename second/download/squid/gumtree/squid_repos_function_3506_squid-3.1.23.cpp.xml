<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3506_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">switchToHttps<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">(<parameter><decl><type><specifier pos:line="2" pos:column="30">const<pos:position pos:line="2" pos:column="35"/></specifier> <name pos:line="2" pos:column="36">char<pos:position pos:line="2" pos:column="40"/></name> <modifier pos:line="2" pos:column="41">*<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="42">host<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><operator pos:line="4" pos:column="12">!<pos:position pos:line="4" pos:column="13"/></operator><name pos:line="4" pos:column="13">switchedToHttps_<pos:position pos:line="4" pos:column="29"/></name></expr></argument>)<pos:position pos:line="4" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><name pos:line="6" pos:column="5">sslHostName<pos:position pos:line="6" pos:column="16"/></name> <operator pos:line="6" pos:column="17">=<pos:position pos:line="6" pos:column="18"/></operator> <name pos:line="6" pos:column="19">host<pos:position pos:line="6" pos:column="23"/></name></expr>;<pos:position pos:line="6" pos:column="24"/></expr_stmt>

    <comment type="line" pos:line="8" pos:column="5">//HTTPMSGLOCK(currentobject-&gt;http-&gt;request);</comment>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><call><name pos:line="9" pos:column="12">areAllContextsForThisConnection<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">()<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="10" pos:column="5">freeAllContexts<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">()<pos:position pos:line="10" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="23"/></expr_stmt>
    <comment type="line" pos:line="11" pos:column="5">//currentobject-&gt;connIsFinished();</comment>
    <comment type="line" pos:line="12" pos:column="5">// We are going to read new request</comment>
    <expr_stmt><expr><name><name pos:line="13" pos:column="5">flags<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">.<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="11">readMoreRequests<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <literal type="boolean" pos:line="13" pos:column="30">true<pos:position pos:line="13" pos:column="34"/></literal></expr>;<pos:position pos:line="13" pos:column="35"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">debugs<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><literal type="number" pos:line="14" pos:column="12">33<pos:position pos:line="14" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="16">5<pos:position pos:line="14" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="19">HERE<pos:position pos:line="14" pos:column="23"/></name> <operator pos:line="14" pos:column="24">&lt;&lt;<pos:position pos:line="14" pos:column="32"/></operator> <literal type="string" pos:line="14" pos:column="27">"converting FD "<pos:position pos:line="14" pos:column="43"/></literal> <operator pos:line="14" pos:column="44">&lt;&lt;<pos:position pos:line="14" pos:column="52"/></operator> <name pos:line="14" pos:column="47">fd<pos:position pos:line="14" pos:column="49"/></name> <operator pos:line="14" pos:column="50">&lt;&lt;<pos:position pos:line="14" pos:column="58"/></operator> <literal type="string" pos:line="14" pos:column="53">" to SSL"<pos:position pos:line="14" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>

    <return pos:line="16" pos:column="5">return <expr><call><name pos:line="16" pos:column="12">getSslContextStart<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">()<pos:position pos:line="16" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="33"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

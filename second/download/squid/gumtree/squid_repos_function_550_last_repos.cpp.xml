<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_550_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">whoisReadReply<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name><name pos:line="2" pos:column="22">Comm<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">ConnectionPointer<pos:position pos:line="2" pos:column="45"/></name></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">conn<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">buf<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">size_t<pos:position pos:line="2" pos:column="70"/></name></type> <name pos:line="2" pos:column="71">len<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="76">Comm<pos:position pos:line="2" pos:column="80"/></name><operator pos:line="2" pos:column="80">::<pos:position pos:line="2" pos:column="82"/></operator><name pos:line="2" pos:column="82">Flag<pos:position pos:line="2" pos:column="86"/></name></name></type> <name pos:line="2" pos:column="87">flag<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="93">int<pos:position pos:line="2" pos:column="96"/></name></type> <name pos:line="2" pos:column="97">xerrno<pos:position pos:line="2" pos:column="103"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="105">void<pos:position pos:line="2" pos:column="109"/></name> <modifier pos:line="2" pos:column="110">*<pos:position pos:line="2" pos:column="111"/></modifier></type><name pos:line="2" pos:column="111">data<pos:position pos:line="2" pos:column="115"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="116"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">WhoisState<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">p<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><operator pos:line="4" pos:column="21">(<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">WhoisState<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">*<pos:position pos:line="4" pos:column="34"/></operator><operator pos:line="4" pos:column="34">)<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">data<pos:position pos:line="4" pos:column="39"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="40"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">p<pos:position pos:line="5" pos:column="6"/></name><operator pos:line="5" pos:column="6">-&gt;<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="8">readReply<pos:position pos:line="5" pos:column="17"/></name></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">conn<pos:position pos:line="5" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="24">buf<pos:position pos:line="5" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="29">len<pos:position pos:line="5" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="34">flag<pos:position pos:line="5" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="40">xerrno<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

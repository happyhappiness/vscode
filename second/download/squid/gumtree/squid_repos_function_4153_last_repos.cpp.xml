<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4153_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">Acl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">OrNode<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">doMatch<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">ACLChecklist<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="36">checklist<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="47">Nodes<pos:position pos:line="2" pos:column="52"/></name><operator pos:line="2" pos:column="52">::<pos:position pos:line="2" pos:column="54"/></operator><name pos:line="2" pos:column="54">const_iterator<pos:position pos:line="2" pos:column="68"/></name></name></type> <name pos:line="2" pos:column="69">start<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list> <specifier pos:line="2" pos:column="76">const<pos:position pos:line="2" pos:column="81"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">lastMatch_<pos:position pos:line="4" pos:column="15"/></name> <operator pos:line="4" pos:column="16">=<pos:position pos:line="4" pos:column="17"/></operator> <call><name><name pos:line="4" pos:column="18">nodes<pos:position pos:line="4" pos:column="23"/></name><operator pos:line="4" pos:column="23">.<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">end<pos:position pos:line="4" pos:column="27"/></name></name><argument_list pos:line="4" pos:column="27">()<pos:position pos:line="4" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="30"/></expr_stmt>

    <comment type="line" pos:line="6" pos:column="5">// find the first node that matches, but stop if things go wrong</comment>
    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><name><name pos:line="7" pos:column="10">Nodes<pos:position pos:line="7" pos:column="15"/></name><operator pos:line="7" pos:column="15">::<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="17">const_iterator<pos:position pos:line="7" pos:column="31"/></name></name></type> <name pos:line="7" pos:column="32">i<pos:position pos:line="7" pos:column="33"/></name> <init pos:line="7" pos:column="34">= <expr><name pos:line="7" pos:column="36">start<pos:position pos:line="7" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></init> <condition><expr><name pos:line="7" pos:column="43">i<pos:position pos:line="7" pos:column="44"/></name> <operator pos:line="7" pos:column="45">!=<pos:position pos:line="7" pos:column="47"/></operator> <call><name><name pos:line="7" pos:column="48">nodes<pos:position pos:line="7" pos:column="53"/></name><operator pos:line="7" pos:column="53">.<pos:position pos:line="7" pos:column="54"/></operator><name pos:line="7" pos:column="54">end<pos:position pos:line="7" pos:column="57"/></name></name><argument_list pos:line="7" pos:column="57">()<pos:position pos:line="7" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="60"/></condition> <incr><expr><operator pos:line="7" pos:column="61">++<pos:position pos:line="7" pos:column="63"/></operator><name pos:line="7" pos:column="63">i<pos:position pos:line="7" pos:column="64"/></name></expr></incr>)<pos:position pos:line="7" pos:column="65"/></control> <block pos:line="7" pos:column="66">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><call><name pos:line="8" pos:column="13">bannedAction<pos:position pos:line="8" pos:column="25"/></name><argument_list pos:line="8" pos:column="25">(<argument><expr><name pos:line="8" pos:column="26">checklist<pos:position pos:line="8" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="37">i<pos:position pos:line="8" pos:column="38"/></name></expr></argument>)<pos:position pos:line="8" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="40"/></condition><then pos:line="8" pos:column="40">
            <block type="pseudo"><continue pos:line="9" pos:column="13">continue;<pos:position pos:line="9" pos:column="22"/></continue></block></then></if>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name><name pos:line="10" pos:column="13">checklist<pos:position pos:line="10" pos:column="22"/></name><operator pos:line="10" pos:column="22">-&gt;<pos:position pos:line="10" pos:column="27"/></operator><name pos:line="10" pos:column="24">matchChild<pos:position pos:line="10" pos:column="34"/></name></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">this<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="41">i<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="44">*<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">i<pos:position pos:line="10" pos:column="46"/></name></expr></argument>)<pos:position pos:line="10" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="48"/></condition><then pos:line="10" pos:column="48"> <block pos:line="10" pos:column="49">{
            <expr_stmt><expr><name pos:line="11" pos:column="13">lastMatch_<pos:position pos:line="11" pos:column="23"/></name> <operator pos:line="11" pos:column="24">=<pos:position pos:line="11" pos:column="25"/></operator> <name pos:line="11" pos:column="26">i<pos:position pos:line="11" pos:column="27"/></name></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>
            <return pos:line="12" pos:column="13">return <expr><literal type="number" pos:line="12" pos:column="20">1<pos:position pos:line="12" pos:column="21"/></literal></expr>;<pos:position pos:line="12" pos:column="22"/></return>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>

        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><operator pos:line="15" pos:column="13">!<pos:position pos:line="15" pos:column="14"/></operator><call><name><name pos:line="15" pos:column="14">checklist<pos:position pos:line="15" pos:column="23"/></name><operator pos:line="15" pos:column="23">-&gt;<pos:position pos:line="15" pos:column="28"/></operator><name pos:line="15" pos:column="25">keepMatching<pos:position pos:line="15" pos:column="37"/></name></name><argument_list pos:line="15" pos:column="37">()<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40">
            <block type="pseudo"><return pos:line="16" pos:column="13">return <expr><operator pos:line="16" pos:column="20">-<pos:position pos:line="16" pos:column="21"/></operator><literal type="number" pos:line="16" pos:column="21">1<pos:position pos:line="16" pos:column="22"/></literal></expr>;<pos:position pos:line="16" pos:column="23"/></return></block></then></if> <comment type="line" pos:line="16" pos:column="24">// suspend on async calls and stop on failures</comment>
    }<pos:position pos:line="17" pos:column="6"/></block></for>

    <comment type="line" pos:line="19" pos:column="5">// zero and not one on empty because in math empty sum equals zero</comment>
    <return pos:line="20" pos:column="5">return <expr><literal type="number" pos:line="20" pos:column="12">0<pos:position pos:line="20" pos:column="13"/></literal></expr>;<pos:position pos:line="20" pos:column="14"/></return> <comment type="line" pos:line="20" pos:column="15">// all nodes mismatched</comment>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

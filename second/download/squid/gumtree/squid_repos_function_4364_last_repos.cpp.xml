<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4364_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">bool<pos:position pos:line="1" pos:column="12"/></name></type> <name pos:line="1" pos:column="13">ldap_search_ok<pos:position pos:line="1" pos:column="27"/></name><parameter_list pos:line="1" pos:column="27">(<parameter><decl><type><specifier pos:line="1" pos:column="28">const<pos:position pos:line="1" pos:column="33"/></specifier> <name pos:line="1" pos:column="34">int<pos:position pos:line="1" pos:column="37"/></name></type> <name pos:line="1" pos:column="38">result<pos:position pos:line="1" pos:column="44"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="45"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <if pos:line="3" pos:column="5">if <condition pos:line="3" pos:column="8">(<expr><name pos:line="3" pos:column="9">result<pos:position pos:line="3" pos:column="15"/></name> <operator pos:line="3" pos:column="16">==<pos:position pos:line="3" pos:column="18"/></operator> <name pos:line="3" pos:column="19">LDAP_SUCCESS<pos:position pos:line="3" pos:column="31"/></name></expr>)<pos:position pos:line="3" pos:column="32"/></condition><then pos:line="3" pos:column="32">
        <block type="pseudo"><return pos:line="4" pos:column="9">return <expr><literal type="boolean" pos:line="4" pos:column="16">true<pos:position pos:line="4" pos:column="20"/></literal></expr>;<pos:position pos:line="4" pos:column="21"/></return></block></then></if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">noreferrals<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">&amp;&amp;<pos:position pos:line="5" pos:column="31"/></operator> <name pos:line="5" pos:column="24">result<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">==<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="34">LDAP_PARTIAL_RESULTS<pos:position pos:line="5" pos:column="54"/></name></expr>)<pos:position pos:line="5" pos:column="55"/></condition><then pos:line="5" pos:column="55"> <block pos:line="5" pos:column="56">{
        <comment type="block" pos:line="6" pos:column="9">/* Everything is fine. This is expected when referrals
         * are disabled.
         */</comment>
        <return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">true<pos:position pos:line="9" pos:column="20"/></literal></expr>;<pos:position pos:line="9" pos:column="21"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">std<pos:position pos:line="11" pos:column="8"/></name><operator pos:line="11" pos:column="8">::<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">cerr<pos:position pos:line="11" pos:column="14"/></name></name> <operator pos:line="11" pos:column="15">&lt;&lt;<pos:position pos:line="11" pos:column="23"/></operator> <name pos:line="11" pos:column="18">PROGRAM_NAME<pos:position pos:line="11" pos:column="30"/></name> <operator pos:line="11" pos:column="31">&lt;&lt;<pos:position pos:line="11" pos:column="39"/></operator> <literal type="string" pos:line="11" pos:column="34">": WARNING: LDAP search error '"<pos:position pos:line="11" pos:column="66"/></literal> <operator pos:line="11" pos:column="67">&lt;&lt;<pos:position pos:line="11" pos:column="75"/></operator>
              <call><name pos:line="12" pos:column="15">ldap_err2string<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><name pos:line="12" pos:column="31">result<pos:position pos:line="12" pos:column="37"/></name></expr></argument>)<pos:position pos:line="12" pos:column="38"/></argument_list></call> <operator pos:line="12" pos:column="39">&lt;&lt;<pos:position pos:line="12" pos:column="47"/></operator> <literal type="string" pos:line="12" pos:column="42">"'"<pos:position pos:line="12" pos:column="45"/></literal> <operator pos:line="12" pos:column="46">&lt;&lt;<pos:position pos:line="12" pos:column="54"/></operator> <name><name pos:line="12" pos:column="49">std<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">::<pos:position pos:line="12" pos:column="54"/></operator><name pos:line="12" pos:column="54">endl<pos:position pos:line="12" pos:column="58"/></name></name></expr>;<pos:position pos:line="12" pos:column="59"/></expr_stmt>
<cpp:if pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">if<pos:position pos:line="13" pos:column="4"/></cpp:directive> <expr><call><name pos:line="13" pos:column="5">defined<pos:position pos:line="13" pos:column="12"/></name><argument_list pos:line="13" pos:column="12">(<argument><expr><name pos:line="13" pos:column="13">NETSCAPE_SSL<pos:position pos:line="13" pos:column="25"/></name></expr></argument>)<pos:position pos:line="13" pos:column="26"/></argument_list></call></expr></cpp:if>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><name pos:line="14" pos:column="9">sslpath<pos:position pos:line="14" pos:column="16"/></name> <operator pos:line="14" pos:column="17">&amp;&amp;<pos:position pos:line="14" pos:column="27"/></operator> <operator pos:line="14" pos:column="20">(<pos:position pos:line="14" pos:column="21"/></operator><operator pos:line="14" pos:column="21">(<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">result<pos:position pos:line="14" pos:column="28"/></name> <operator pos:line="14" pos:column="29">==<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="32">LDAP_SERVER_DOWN<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">)<pos:position pos:line="14" pos:column="49"/></operator> <operator pos:line="14" pos:column="50">||<pos:position pos:line="14" pos:column="52"/></operator> <operator pos:line="14" pos:column="53">(<pos:position pos:line="14" pos:column="54"/></operator><name pos:line="14" pos:column="54">result<pos:position pos:line="14" pos:column="60"/></name> <operator pos:line="14" pos:column="61">==<pos:position pos:line="14" pos:column="63"/></operator> <name pos:line="14" pos:column="64">LDAP_CONNECT_ERROR<pos:position pos:line="14" pos:column="82"/></name><operator pos:line="14" pos:column="82">)<pos:position pos:line="14" pos:column="83"/></operator><operator pos:line="14" pos:column="83">)<pos:position pos:line="14" pos:column="84"/></operator></expr>)<pos:position pos:line="14" pos:column="85"/></condition><then pos:line="14" pos:column="85"> <block pos:line="14" pos:column="86">{
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">sslerr<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><call><name pos:line="15" pos:column="22">PORT_GetError<pos:position pos:line="15" pos:column="35"/></name><argument_list pos:line="15" pos:column="35">()<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="15" pos:column="38"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">std<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">::<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">cerr<pos:position pos:line="16" pos:column="18"/></name></name> <operator pos:line="16" pos:column="19">&lt;&lt;<pos:position pos:line="16" pos:column="27"/></operator> <name pos:line="16" pos:column="22">PROGRAM_NAME<pos:position pos:line="16" pos:column="34"/></name> <operator pos:line="16" pos:column="35">&lt;&lt;<pos:position pos:line="16" pos:column="43"/></operator> <literal type="string" pos:line="16" pos:column="38">": WARNING: SSL error "<pos:position pos:line="16" pos:column="61"/></literal> <operator pos:line="16" pos:column="62">&lt;&lt;<pos:position pos:line="16" pos:column="70"/></operator> <name pos:line="16" pos:column="65">sslerr<pos:position pos:line="16" pos:column="71"/></name> <operator pos:line="16" pos:column="72">&lt;&lt;<pos:position pos:line="16" pos:column="80"/></operator> <literal type="string" pos:line="16" pos:column="75">" ("<pos:position pos:line="16" pos:column="79"/></literal> <operator pos:line="16" pos:column="80">&lt;&lt;<pos:position pos:line="16" pos:column="88"/></operator>
                  <call><name pos:line="17" pos:column="19">ldapssl_err2string<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">sslerr<pos:position pos:line="17" pos:column="44"/></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call> <operator pos:line="17" pos:column="46">&lt;&lt;<pos:position pos:line="17" pos:column="54"/></operator> <literal type="string" pos:line="17" pos:column="49">")"<pos:position pos:line="17" pos:column="52"/></literal> <operator pos:line="17" pos:column="53">&lt;&lt;<pos:position pos:line="17" pos:column="61"/></operator> <name><name pos:line="17" pos:column="56">std<pos:position pos:line="17" pos:column="59"/></name><operator pos:line="17" pos:column="59">::<pos:position pos:line="17" pos:column="61"/></operator><name pos:line="17" pos:column="61">endl<pos:position pos:line="17" pos:column="65"/></name></name></expr>;<pos:position pos:line="17" pos:column="66"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>
<cpp:endif pos:line="19" pos:column="1">#<cpp:directive pos:line="19" pos:column="2">endif<pos:position pos:line="19" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="20" pos:column="5">return <expr><literal type="boolean" pos:line="20" pos:column="12">false<pos:position pos:line="20" pos:column="17"/></literal></expr>;<pos:position pos:line="20" pos:column="18"/></return>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

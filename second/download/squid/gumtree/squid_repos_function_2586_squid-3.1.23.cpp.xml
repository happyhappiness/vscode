<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2586_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FtpStateData<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">failed<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">err_type<pos:position pos:line="2" pos:column="30"/></name></type> <name pos:line="2" pos:column="31">error<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">int<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">xerrno<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">9<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="14">3<pos:position pos:line="4" pos:column="15"/></literal></expr></argument>,<argument><expr><name pos:line="4" pos:column="16">HERE<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">&lt;&lt;<pos:position pos:line="4" pos:column="29"/></operator> <literal type="string" pos:line="4" pos:column="24">"entry-null="<pos:position pos:line="4" pos:column="37"/></literal> <operator pos:line="4" pos:column="38">&lt;&lt;<pos:position pos:line="4" pos:column="46"/></operator> <operator pos:line="4" pos:column="41">(<pos:position pos:line="4" pos:column="42"/></operator><ternary><condition><expr><name pos:line="4" pos:column="42">entry<pos:position pos:line="4" pos:column="47"/></name></expr>?<pos:position pos:line="4" pos:column="48"/></condition><then><expr><call><name><name pos:line="4" pos:column="48">entry<pos:position pos:line="4" pos:column="53"/></name><operator pos:line="4" pos:column="53">-&gt;<pos:position pos:line="4" pos:column="58"/></operator><name pos:line="4" pos:column="55">isEmpty<pos:position pos:line="4" pos:column="62"/></name></name><argument_list pos:line="4" pos:column="62">()<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr></then><else pos:line="4" pos:column="64">:<expr><literal type="number" pos:line="4" pos:column="65">0<pos:position pos:line="4" pos:column="66"/></literal></expr></else></ternary><operator pos:line="4" pos:column="66">)<pos:position pos:line="4" pos:column="67"/></operator> <operator pos:line="4" pos:column="68">&lt;&lt;<pos:position pos:line="4" pos:column="76"/></operator> <literal type="string" pos:line="4" pos:column="71">", entry="<pos:position pos:line="4" pos:column="81"/></literal> <operator pos:line="4" pos:column="82">&lt;&lt;<pos:position pos:line="4" pos:column="90"/></operator> <name pos:line="4" pos:column="85">entry<pos:position pos:line="4" pos:column="90"/></name></expr></argument>)<pos:position pos:line="4" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="92"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><call><name><name pos:line="5" pos:column="9">entry<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">isEmpty<pos:position pos:line="5" pos:column="23"/></name></name><argument_list pos:line="5" pos:column="23">()<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="26"/></condition><then pos:line="5" pos:column="26">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">failedErrorMessage<pos:position pos:line="6" pos:column="27"/></name><argument_list pos:line="6" pos:column="27">(<argument><expr><name pos:line="6" pos:column="28">error<pos:position pos:line="6" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="35">xerrno<pos:position pos:line="6" pos:column="41"/></name></expr></argument>)<pos:position pos:line="6" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="43"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">serverComplete<pos:position pos:line="8" pos:column="19"/></name><argument_list pos:line="8" pos:column="19">()<pos:position pos:line="8" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="22"/></expr_stmt>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

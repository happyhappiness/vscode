<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5130_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int64_t<pos:position pos:line="1" pos:column="8"/></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">SwapDir<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">slotLimitActual<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list> <specifier pos:line="2" pos:column="34">const<pos:position pos:line="2" pos:column="39"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">int64_t<pos:position pos:line="4" pos:column="18"/></name></type> <name pos:line="4" pos:column="19">sWanted<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">(<pos:position pos:line="4" pos:column="30"/></operator><call><name pos:line="4" pos:column="30">maxSize<pos:position pos:line="4" pos:column="37"/></name><argument_list pos:line="4" pos:column="37">()<pos:position pos:line="4" pos:column="39"/></argument_list></call> <operator pos:line="4" pos:column="40">-<pos:position pos:line="4" pos:column="41"/></operator> <name pos:line="4" pos:column="42">HeaderSize<pos:position pos:line="4" pos:column="52"/></name><operator pos:line="4" pos:column="52">)<pos:position pos:line="4" pos:column="53"/></operator><operator pos:line="4" pos:column="53">/<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="54">slotSize<pos:position pos:line="4" pos:column="62"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">int64_t<pos:position pos:line="5" pos:column="18"/></name></type> <name pos:line="5" pos:column="19">sLimitLo<pos:position pos:line="5" pos:column="27"/></name> <init pos:line="5" pos:column="28">= <expr><ternary><condition><expr><name pos:line="5" pos:column="30">map<pos:position pos:line="5" pos:column="33"/></name></expr> ?<pos:position pos:line="5" pos:column="35"/></condition><then pos:line="5" pos:column="35"> <expr><call><name><name pos:line="5" pos:column="36">map<pos:position pos:line="5" pos:column="39"/></name><operator pos:line="5" pos:column="39">-&gt;<pos:position pos:line="5" pos:column="44"/></operator><name pos:line="5" pos:column="41">sliceLimit<pos:position pos:line="5" pos:column="51"/></name></name><argument_list pos:line="5" pos:column="51">()<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr> <pos:position pos:line="5" pos:column="54"/></then><else pos:line="5" pos:column="54">: <expr><literal type="number" pos:line="5" pos:column="56">0<pos:position pos:line="5" pos:column="57"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt> <comment type="line" pos:line="5" pos:column="59">// dynamic shrinking unsupported</comment>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">int64_t<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">sLimitHi<pos:position pos:line="6" pos:column="27"/></name> <init pos:line="6" pos:column="28">= <expr><call><name pos:line="6" pos:column="30">slotLimitAbsolute<pos:position pos:line="6" pos:column="47"/></name><argument_list pos:line="6" pos:column="47">()<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="50"/></decl_stmt>
    <return pos:line="7" pos:column="5">return <expr><call><name pos:line="7" pos:column="12">min<pos:position pos:line="7" pos:column="15"/></name><argument_list pos:line="7" pos:column="15">(<argument><expr><call><name pos:line="7" pos:column="16">max<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">(<argument><expr><name pos:line="7" pos:column="20">sLimitLo<pos:position pos:line="7" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="30">sWanted<pos:position pos:line="7" pos:column="37"/></name></expr></argument>)<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="40">sLimitHi<pos:position pos:line="7" pos:column="48"/></name></expr></argument>)<pos:position pos:line="7" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="50"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

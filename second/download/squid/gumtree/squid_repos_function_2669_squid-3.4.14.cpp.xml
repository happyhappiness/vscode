<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2669_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">strwordquote<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">MemBuf<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type> <name pos:line="2" pos:column="23">mb<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">char<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type><name pos:line="2" pos:column="39">str<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">quoted<pos:position pos:line="4" pos:column="15"/></name> <init pos:line="4" pos:column="16">= <expr><literal type="number" pos:line="4" pos:column="18">0<pos:position pos:line="4" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="20"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><call><name pos:line="6" pos:column="9">strchr<pos:position pos:line="6" pos:column="15"/></name><argument_list pos:line="6" pos:column="15">(<argument><expr><name pos:line="6" pos:column="16">str<pos:position pos:line="6" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="6" pos:column="21">' '<pos:position pos:line="6" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="26"/></condition><then pos:line="6" pos:column="26"> <block pos:line="6" pos:column="27">{
        <expr_stmt><expr><name pos:line="7" pos:column="9">quoted<pos:position pos:line="7" pos:column="15"/></name> <operator pos:line="7" pos:column="16">=<pos:position pos:line="7" pos:column="17"/></operator> <literal type="number" pos:line="7" pos:column="18">1<pos:position pos:line="7" pos:column="19"/></literal></expr>;<pos:position pos:line="7" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="8" pos:column="9">mb<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">-&gt;<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="13">append<pos:position pos:line="8" pos:column="19"/></name></name><argument_list pos:line="8" pos:column="19">(<argument><expr><literal type="string" pos:line="8" pos:column="20">"\""<pos:position pos:line="8" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="26">1<pos:position pos:line="8" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <while pos:line="11" pos:column="5">while <condition pos:line="11" pos:column="11">(<expr><operator pos:line="11" pos:column="12">*<pos:position pos:line="11" pos:column="13"/></operator><name pos:line="11" pos:column="13">str<pos:position pos:line="11" pos:column="16"/></name></expr>)<pos:position pos:line="11" pos:column="17"/></condition> <block pos:line="11" pos:column="18">{
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">int<pos:position pos:line="12" pos:column="12"/></name></type> <name pos:line="12" pos:column="13">l<pos:position pos:line="12" pos:column="14"/></name> <init pos:line="12" pos:column="15">= <expr><call><name pos:line="12" pos:column="17">strcspn<pos:position pos:line="12" pos:column="24"/></name><argument_list pos:line="12" pos:column="24">(<argument><expr><name pos:line="12" pos:column="25">str<pos:position pos:line="12" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="30">"\"\\\n\r"<pos:position pos:line="12" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="41"/></argument_list></call></expr></init></decl>;<pos:position pos:line="12" pos:column="42"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="13" pos:column="9">mb<pos:position pos:line="13" pos:column="11"/></name><operator pos:line="13" pos:column="11">-&gt;<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="13">append<pos:position pos:line="13" pos:column="19"/></name></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">str<pos:position pos:line="13" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="25">l<pos:position pos:line="13" pos:column="26"/></name></expr></argument>)<pos:position pos:line="13" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="14" pos:column="9">str<pos:position pos:line="14" pos:column="12"/></name> <operator pos:line="14" pos:column="13">+=<pos:position pos:line="14" pos:column="15"/></operator> <name pos:line="14" pos:column="16">l<pos:position pos:line="14" pos:column="17"/></name></expr>;<pos:position pos:line="14" pos:column="18"/></expr_stmt>

        <switch pos:line="16" pos:column="9">switch <condition pos:line="16" pos:column="16">(<expr><operator pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></operator><name pos:line="16" pos:column="18">str<pos:position pos:line="16" pos:column="21"/></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition> <block pos:line="16" pos:column="23">{

        <case pos:line="18" pos:column="9">case <expr><literal type="char" pos:line="18" pos:column="14">'\n'<pos:position pos:line="18" pos:column="18"/></literal></expr>:<pos:position pos:line="18" pos:column="19"/></case>
            <expr_stmt><expr><call><name><name pos:line="19" pos:column="13">mb<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">-&gt;<pos:position pos:line="19" pos:column="20"/></operator><name pos:line="19" pos:column="17">append<pos:position pos:line="19" pos:column="23"/></name></name><argument_list pos:line="19" pos:column="23">(<argument><expr><literal type="string" pos:line="19" pos:column="24">"\\n"<pos:position pos:line="19" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="19" pos:column="31">2<pos:position pos:line="19" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="20" pos:column="13">++<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="15">str<pos:position pos:line="20" pos:column="18"/></name></expr>;<pos:position pos:line="20" pos:column="19"/></expr_stmt>
            <break pos:line="21" pos:column="13">break;<pos:position pos:line="21" pos:column="19"/></break>

        <case pos:line="23" pos:column="9">case <expr><literal type="char" pos:line="23" pos:column="14">'\r'<pos:position pos:line="23" pos:column="18"/></literal></expr>:<pos:position pos:line="23" pos:column="19"/></case>
            <expr_stmt><expr><call><name><name pos:line="24" pos:column="13">mb<pos:position pos:line="24" pos:column="15"/></name><operator pos:line="24" pos:column="15">-&gt;<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="17">append<pos:position pos:line="24" pos:column="23"/></name></name><argument_list pos:line="24" pos:column="23">(<argument><expr><literal type="string" pos:line="24" pos:column="24">"\\r"<pos:position pos:line="24" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="31">2<pos:position pos:line="24" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="25" pos:column="13">++<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">str<pos:position pos:line="25" pos:column="18"/></name></expr>;<pos:position pos:line="25" pos:column="19"/></expr_stmt>
            <break pos:line="26" pos:column="13">break;<pos:position pos:line="26" pos:column="19"/></break>

        <case pos:line="28" pos:column="9">case <expr><literal type="char" pos:line="28" pos:column="14">'\0'<pos:position pos:line="28" pos:column="18"/></literal></expr>:<pos:position pos:line="28" pos:column="19"/></case>
            <break pos:line="29" pos:column="13">break;<pos:position pos:line="29" pos:column="19"/></break>

        <default pos:line="31" pos:column="9">default:<pos:position pos:line="31" pos:column="17"/></default>
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">mb<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">-&gt;<pos:position pos:line="32" pos:column="20"/></operator><name pos:line="32" pos:column="17">append<pos:position pos:line="32" pos:column="23"/></name></name><argument_list pos:line="32" pos:column="23">(<argument><expr><literal type="string" pos:line="32" pos:column="24">"\\"<pos:position pos:line="32" pos:column="28"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="32" pos:column="30">1<pos:position pos:line="32" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="33" pos:column="13">mb<pos:position pos:line="33" pos:column="15"/></name><operator pos:line="33" pos:column="15">-&gt;<pos:position pos:line="33" pos:column="20"/></operator><name pos:line="33" pos:column="17">append<pos:position pos:line="33" pos:column="23"/></name></name><argument_list pos:line="33" pos:column="23">(<argument><expr><name pos:line="33" pos:column="24">str<pos:position pos:line="33" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="29">1<pos:position pos:line="33" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="34" pos:column="13">++<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">str<pos:position pos:line="34" pos:column="18"/></name></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>
            <break pos:line="35" pos:column="13">break;<pos:position pos:line="35" pos:column="19"/></break>
        }<pos:position pos:line="36" pos:column="10"/></block></switch>
    }<pos:position pos:line="37" pos:column="6"/></block></while>

    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">quoted<pos:position pos:line="39" pos:column="15"/></name></expr>)<pos:position pos:line="39" pos:column="16"/></condition><then pos:line="39" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="40" pos:column="9">mb<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">-&gt;<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="13">append<pos:position pos:line="40" pos:column="19"/></name></name><argument_list pos:line="40" pos:column="19">(<argument><expr><literal type="string" pos:line="40" pos:column="20">"\""<pos:position pos:line="40" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="26">1<pos:position pos:line="40" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="29"/></expr_stmt></block></then></if>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

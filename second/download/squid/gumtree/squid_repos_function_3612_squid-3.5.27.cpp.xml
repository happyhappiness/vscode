<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3612_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">stopSending<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><specifier pos:line="2" pos:column="28">const<pos:position pos:line="2" pos:column="33"/></specifier> <name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type><name pos:line="2" pos:column="40">error<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">33<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">4<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <literal type="string" pos:line="4" pos:column="27">"sending error ("<pos:position pos:line="4" pos:column="44"/></literal> <operator pos:line="4" pos:column="45">&lt;&lt;<pos:position pos:line="4" pos:column="53"/></operator> <name pos:line="4" pos:column="48">clientConnection<pos:position pos:line="4" pos:column="64"/></name> <operator pos:line="4" pos:column="65">&lt;&lt;<pos:position pos:line="4" pos:column="73"/></operator> <literal type="string" pos:line="4" pos:column="68">"): "<pos:position pos:line="4" pos:column="73"/></literal> <operator pos:line="4" pos:column="74">&lt;&lt;<pos:position pos:line="4" pos:column="82"/></operator> <name pos:line="4" pos:column="77">error<pos:position pos:line="4" pos:column="82"/></name> <operator pos:line="4" pos:column="83">&lt;&lt;<pos:position pos:line="4" pos:column="91"/></operator>
           <literal type="string" pos:line="5" pos:column="12">"; old receiving error: "<pos:position pos:line="5" pos:column="37"/></literal> <operator pos:line="5" pos:column="38">&lt;&lt;<pos:position pos:line="5" pos:column="46"/></operator>
           <operator pos:line="6" pos:column="12">(<pos:position pos:line="6" pos:column="13"/></operator><ternary><condition><expr><call><name pos:line="6" pos:column="13">stoppedReceiving<pos:position pos:line="6" pos:column="29"/></name><argument_list pos:line="6" pos:column="29">()<pos:position pos:line="6" pos:column="31"/></argument_list></call></expr> ?<pos:position pos:line="6" pos:column="33"/></condition><then pos:line="6" pos:column="33"> <expr><name pos:line="6" pos:column="34">stoppedReceiving_<pos:position pos:line="6" pos:column="51"/></name></expr> <pos:position pos:line="6" pos:column="52"/></then><else pos:line="6" pos:column="52">: <expr><literal type="string" pos:line="6" pos:column="54">"none"<pos:position pos:line="6" pos:column="60"/></literal></expr></else></ternary><operator pos:line="6" pos:column="60">)<pos:position pos:line="6" pos:column="61"/></operator></expr></argument>)<pos:position pos:line="6" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="63"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<decl><type><specifier pos:line="8" pos:column="9">const<pos:position pos:line="8" pos:column="14"/></specifier> <name pos:line="8" pos:column="15">char<pos:position pos:line="8" pos:column="19"/></name> <modifier pos:line="8" pos:column="20">*<pos:position pos:line="8" pos:column="21"/></modifier></type><name pos:line="8" pos:column="21">oldError<pos:position pos:line="8" pos:column="29"/></name> <init pos:line="8" pos:column="30">= <expr><call><name pos:line="8" pos:column="32">stoppedSending<pos:position pos:line="8" pos:column="46"/></name><argument_list pos:line="8" pos:column="46">()<pos:position pos:line="8" pos:column="48"/></argument_list></call></expr></init></decl>)<pos:position pos:line="8" pos:column="49"/></condition><then pos:line="8" pos:column="49"> <block pos:line="8" pos:column="50">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">33<pos:position pos:line="9" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="20">3<pos:position pos:line="9" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="9" pos:column="23">HERE<pos:position pos:line="9" pos:column="27"/></name> <operator pos:line="9" pos:column="28">&lt;&lt;<pos:position pos:line="9" pos:column="36"/></operator> <literal type="string" pos:line="9" pos:column="31">"already stopped sending: "<pos:position pos:line="9" pos:column="58"/></literal> <operator pos:line="9" pos:column="59">&lt;&lt;<pos:position pos:line="9" pos:column="67"/></operator> <name pos:line="9" pos:column="62">oldError<pos:position pos:line="9" pos:column="70"/></name></expr></argument>)<pos:position pos:line="9" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="72"/></expr_stmt>
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return> <comment type="line" pos:line="10" pos:column="17">// nothing has changed as far as this connection is concerned</comment>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="12" pos:column="5">stoppedSending_<pos:position pos:line="12" pos:column="20"/></name> <operator pos:line="12" pos:column="21">=<pos:position pos:line="12" pos:column="22"/></operator> <name pos:line="12" pos:column="23">error<pos:position pos:line="12" pos:column="28"/></name></expr>;<pos:position pos:line="12" pos:column="29"/></expr_stmt>

    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><call><name pos:line="14" pos:column="10">stoppedReceiving<pos:position pos:line="14" pos:column="26"/></name><argument_list pos:line="14" pos:column="26">()<pos:position pos:line="14" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="29"/></condition><then pos:line="14" pos:column="29"> <block pos:line="14" pos:column="30">{
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<decl><type><specifier pos:line="15" pos:column="13">const<pos:position pos:line="15" pos:column="18"/></specifier> <name pos:line="15" pos:column="19">int64_t<pos:position pos:line="15" pos:column="26"/></name></type> <name pos:line="15" pos:column="27">expecting<pos:position pos:line="15" pos:column="36"/></name> <init pos:line="15" pos:column="37">= <expr><call><name pos:line="15" pos:column="39">mayNeedToReadMoreBody<pos:position pos:line="15" pos:column="60"/></name><argument_list pos:line="15" pos:column="60">()<pos:position pos:line="15" pos:column="62"/></argument_list></call></expr></init></decl>)<pos:position pos:line="15" pos:column="63"/></condition><then pos:line="15" pos:column="63"> <block pos:line="15" pos:column="64">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">debugs<pos:position pos:line="16" pos:column="19"/></name><argument_list pos:line="16" pos:column="19">(<argument><expr><literal type="number" pos:line="16" pos:column="20">33<pos:position pos:line="16" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="24">5<pos:position pos:line="16" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="27">HERE<pos:position pos:line="16" pos:column="31"/></name> <operator pos:line="16" pos:column="32">&lt;&lt;<pos:position pos:line="16" pos:column="40"/></operator> <literal type="string" pos:line="16" pos:column="35">"must still read "<pos:position pos:line="16" pos:column="53"/></literal> <operator pos:line="16" pos:column="54">&lt;&lt;<pos:position pos:line="16" pos:column="62"/></operator> <name pos:line="16" pos:column="57">expecting<pos:position pos:line="16" pos:column="66"/></name> <operator pos:line="16" pos:column="67">&lt;&lt;<pos:position pos:line="16" pos:column="75"/></operator>
                   <literal type="string" pos:line="17" pos:column="20">" request body bytes with "<pos:position pos:line="17" pos:column="47"/></literal> <operator pos:line="17" pos:column="48">&lt;&lt;<pos:position pos:line="17" pos:column="56"/></operator> <call><name><name pos:line="17" pos:column="51">in<pos:position pos:line="17" pos:column="53"/></name><operator pos:line="17" pos:column="53">.<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="54">buf<pos:position pos:line="17" pos:column="57"/></name><operator pos:line="17" pos:column="57">.<pos:position pos:line="17" pos:column="58"/></operator><name pos:line="17" pos:column="58">length<pos:position pos:line="17" pos:column="64"/></name></name><argument_list pos:line="17" pos:column="64">()<pos:position pos:line="17" pos:column="66"/></argument_list></call> <operator pos:line="17" pos:column="67">&lt;&lt;<pos:position pos:line="17" pos:column="75"/></operator> <literal type="string" pos:line="17" pos:column="70">" unused"<pos:position pos:line="17" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="81"/></expr_stmt>
            <return pos:line="18" pos:column="13">return;<pos:position pos:line="18" pos:column="20"/></return> <comment type="line" pos:line="18" pos:column="21">// wait for the request receiver to finish reading</comment>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">clientConnection<pos:position pos:line="22" pos:column="21"/></name><operator pos:line="22" pos:column="21">-&gt;<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="23">close<pos:position pos:line="22" pos:column="28"/></name></name><argument_list pos:line="22" pos:column="28">()<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
}<pos:position pos:line="23" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3612_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">varyEvaluateMatch<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">StoreEntry<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">entry<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">HttpRequest<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">request<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="61"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">vary<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name><name pos:line="4" pos:column="24">request<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">vary_headers<pos:position pos:line="4" pos:column="45"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">has_vary<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><call><name><name pos:line="5" pos:column="20">entry<pos:position pos:line="5" pos:column="25"/></name><operator pos:line="5" pos:column="25">-&gt;<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="27">getReply<pos:position pos:line="5" pos:column="35"/></name></name><argument_list pos:line="5" pos:column="35">()<pos:position pos:line="5" pos:column="37"/></argument_list></call><operator pos:line="5" pos:column="37">-&gt;<pos:position pos:line="5" pos:column="42"/></operator><call><name><name pos:line="5" pos:column="39">header<pos:position pos:line="5" pos:column="45"/></name><operator pos:line="5" pos:column="45">.<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">has<pos:position pos:line="5" pos:column="49"/></name></name><argument_list pos:line="5" pos:column="49">(<argument><expr><name pos:line="5" pos:column="50">HDR_VARY<pos:position pos:line="5" pos:column="58"/></name></expr></argument>)<pos:position pos:line="5" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="60"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">X_ACCELERATOR_VARY<pos:position pos:line="6" pos:column="23"/></name></expr></cpp:if>

    <expr_stmt><expr><name pos:line="8" pos:column="5">has_vary<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">|=<pos:position pos:line="8" pos:column="16"/></operator>
        <call><name><name pos:line="9" pos:column="9">entry<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">-&gt;<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="16">getReply<pos:position pos:line="9" pos:column="24"/></name></name><argument_list pos:line="9" pos:column="24">()<pos:position pos:line="9" pos:column="26"/></argument_list></call><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><call><name><name pos:line="9" pos:column="28">header<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">.<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="35">has<pos:position pos:line="9" pos:column="38"/></name></name><argument_list pos:line="9" pos:column="38">(<argument><expr><name pos:line="9" pos:column="39">HDR_X_ACCELERATOR_VARY<pos:position pos:line="9" pos:column="61"/></name></expr></argument>)<pos:position pos:line="9" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="63"/></expr_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">has_vary<pos:position pos:line="12" pos:column="18"/></name> <operator pos:line="12" pos:column="19">||<pos:position pos:line="12" pos:column="21"/></operator> <operator pos:line="12" pos:column="22">!<pos:position pos:line="12" pos:column="23"/></operator><name><name pos:line="12" pos:column="23">entry<pos:position pos:line="12" pos:column="28"/></name><operator pos:line="12" pos:column="28">-&gt;<pos:position pos:line="12" pos:column="33"/></operator><name pos:line="12" pos:column="30">mem_obj<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">vary_headers<pos:position pos:line="12" pos:column="51"/></name></name></expr>)<pos:position pos:line="12" pos:column="52"/></condition><then pos:line="12" pos:column="52"> <block pos:line="12" pos:column="53">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">vary<pos:position pos:line="13" pos:column="17"/></name></expr>)<pos:position pos:line="13" pos:column="18"/></condition><then pos:line="13" pos:column="18"> <block pos:line="13" pos:column="19">{
            <comment type="block" pos:line="14" pos:column="13">/* Oops... something odd is going on here.. */</comment>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">debugs<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="number" pos:line="15" pos:column="20">33<pos:position pos:line="15" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="24">DBG_IMPORTANT<pos:position pos:line="15" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="39">"varyEvaluateMatch: Oops. Not a Vary object on second attempt, '"<pos:position pos:line="15" pos:column="104"/></literal> <operator pos:line="15" pos:column="105">&lt;&lt;<pos:position pos:line="15" pos:column="113"/></operator>
                   <name><name pos:line="16" pos:column="20">entry<pos:position pos:line="16" pos:column="25"/></name><operator pos:line="16" pos:column="25">-&gt;<pos:position pos:line="16" pos:column="30"/></operator><name pos:line="16" pos:column="27">mem_obj<pos:position pos:line="16" pos:column="34"/></name><operator pos:line="16" pos:column="34">-&gt;<pos:position pos:line="16" pos:column="39"/></operator><name pos:line="16" pos:column="36">url<pos:position pos:line="16" pos:column="39"/></name></name> <operator pos:line="16" pos:column="40">&lt;&lt;<pos:position pos:line="16" pos:column="48"/></operator> <literal type="string" pos:line="16" pos:column="43">"' '"<pos:position pos:line="16" pos:column="48"/></literal> <operator pos:line="16" pos:column="49">&lt;&lt;<pos:position pos:line="16" pos:column="57"/></operator> <name pos:line="16" pos:column="52">vary<pos:position pos:line="16" pos:column="56"/></name> <operator pos:line="16" pos:column="57">&lt;&lt;<pos:position pos:line="16" pos:column="65"/></operator> <literal type="string" pos:line="16" pos:column="60">"'"<pos:position pos:line="16" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">safe_free<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name><name pos:line="17" pos:column="23">request<pos:position pos:line="17" pos:column="30"/></name><operator pos:line="17" pos:column="30">-&gt;<pos:position pos:line="17" pos:column="35"/></operator><name pos:line="17" pos:column="32">vary_headers<pos:position pos:line="17" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="46"/></expr_stmt>
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">VARY_CANCEL<pos:position pos:line="18" pos:column="31"/></name></expr>;<pos:position pos:line="18" pos:column="32"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><operator pos:line="21" pos:column="13">!<pos:position pos:line="21" pos:column="14"/></operator><name pos:line="21" pos:column="14">has_vary<pos:position pos:line="21" pos:column="22"/></name></expr>)<pos:position pos:line="21" pos:column="23"/></condition><then pos:line="21" pos:column="23"> <block pos:line="21" pos:column="24">{
            <comment type="block" pos:line="22" pos:column="13">/* This is not a varying object */</comment>
            <return pos:line="23" pos:column="13">return <expr><name pos:line="23" pos:column="20">VARY_NONE<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></return>
        }<pos:position pos:line="24" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="26" pos:column="9">/* virtual "vary" object found. Calculate the vary key and
         * continue the search
         */</comment>
        <expr_stmt><expr><name pos:line="29" pos:column="9">vary<pos:position pos:line="29" pos:column="13"/></name> <operator pos:line="29" pos:column="14">=<pos:position pos:line="29" pos:column="15"/></operator> <call><name pos:line="29" pos:column="16">httpMakeVaryMark<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">request<pos:position pos:line="29" pos:column="40"/></name></expr></argument>, <argument><expr><call><name><name pos:line="29" pos:column="42">entry<pos:position pos:line="29" pos:column="47"/></name><operator pos:line="29" pos:column="47">-&gt;<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="49">getReply<pos:position pos:line="29" pos:column="57"/></name></name><argument_list pos:line="29" pos:column="57">()<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="29" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="61"/></expr_stmt>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">vary<pos:position pos:line="31" pos:column="17"/></name></expr>)<pos:position pos:line="31" pos:column="18"/></condition><then pos:line="31" pos:column="18"> <block pos:line="31" pos:column="19">{
            <expr_stmt><expr><name><name pos:line="32" pos:column="13">request<pos:position pos:line="32" pos:column="20"/></name><operator pos:line="32" pos:column="20">-&gt;<pos:position pos:line="32" pos:column="25"/></operator><name pos:line="32" pos:column="22">vary_headers<pos:position pos:line="32" pos:column="34"/></name></name> <operator pos:line="32" pos:column="35">=<pos:position pos:line="32" pos:column="36"/></operator> <call><name pos:line="32" pos:column="37">xstrdup<pos:position pos:line="32" pos:column="44"/></name><argument_list pos:line="32" pos:column="44">(<argument><expr><name pos:line="32" pos:column="45">vary<pos:position pos:line="32" pos:column="49"/></name></expr></argument>)<pos:position pos:line="32" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="51"/></expr_stmt>
            <return pos:line="33" pos:column="13">return <expr><name pos:line="33" pos:column="20">VARY_OTHER<pos:position pos:line="33" pos:column="30"/></name></expr>;<pos:position pos:line="33" pos:column="31"/></return>
        }<pos:position pos:line="34" pos:column="10"/></block></then> <else pos:line="34" pos:column="11">else <block pos:line="34" pos:column="16">{
            <comment type="block" pos:line="35" pos:column="13">/* Ouch.. we cannot handle this kind of variance */</comment>
            <comment type="block" pos:line="36" pos:column="13">/* XXX This cannot really happen, but just to be complete */</comment>
            <return pos:line="37" pos:column="13">return <expr><name pos:line="37" pos:column="20">VARY_CANCEL<pos:position pos:line="37" pos:column="31"/></name></expr>;<pos:position pos:line="37" pos:column="32"/></return>
        }<pos:position pos:line="38" pos:column="10"/></block></else></if>
    }<pos:position pos:line="39" pos:column="6"/></block></then> <else pos:line="39" pos:column="7">else <block pos:line="39" pos:column="12">{
        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><name pos:line="40" pos:column="14">vary<pos:position pos:line="40" pos:column="18"/></name></expr>)<pos:position pos:line="40" pos:column="19"/></condition><then pos:line="40" pos:column="19"> <block pos:line="40" pos:column="20">{
            <expr_stmt><expr><name pos:line="41" pos:column="13">vary<pos:position pos:line="41" pos:column="17"/></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <call><name pos:line="41" pos:column="20">httpMakeVaryMark<pos:position pos:line="41" pos:column="36"/></name><argument_list pos:line="41" pos:column="36">(<argument><expr><name pos:line="41" pos:column="37">request<pos:position pos:line="41" pos:column="44"/></name></expr></argument>, <argument><expr><call><name><name pos:line="41" pos:column="46">entry<pos:position pos:line="41" pos:column="51"/></name><operator pos:line="41" pos:column="51">-&gt;<pos:position pos:line="41" pos:column="56"/></operator><name pos:line="41" pos:column="53">getReply<pos:position pos:line="41" pos:column="61"/></name></name><argument_list pos:line="41" pos:column="61">()<pos:position pos:line="41" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="65"/></expr_stmt>

            <if pos:line="43" pos:column="13">if <condition pos:line="43" pos:column="16">(<expr><name pos:line="43" pos:column="17">vary<pos:position pos:line="43" pos:column="21"/></name></expr>)<pos:position pos:line="43" pos:column="22"/></condition><then pos:line="43" pos:column="22">
                <block type="pseudo"><expr_stmt><expr><name><name pos:line="44" pos:column="17">request<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">-&gt;<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="26">vary_headers<pos:position pos:line="44" pos:column="38"/></name></name> <operator pos:line="44" pos:column="39">=<pos:position pos:line="44" pos:column="40"/></operator> <call><name pos:line="44" pos:column="41">xstrdup<pos:position pos:line="44" pos:column="48"/></name><argument_list pos:line="44" pos:column="48">(<argument><expr><name pos:line="44" pos:column="49">vary<pos:position pos:line="44" pos:column="53"/></name></expr></argument>)<pos:position pos:line="44" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="55"/></expr_stmt></block></then></if>
        }<pos:position pos:line="45" pos:column="10"/></block></then></if>

        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><operator pos:line="47" pos:column="13">!<pos:position pos:line="47" pos:column="14"/></operator><name pos:line="47" pos:column="14">vary<pos:position pos:line="47" pos:column="18"/></name></expr>)<pos:position pos:line="47" pos:column="19"/></condition><then pos:line="47" pos:column="19"> <block pos:line="47" pos:column="20">{
            <comment type="block" pos:line="48" pos:column="13">/* Ouch.. we cannot handle this kind of variance */</comment>
            <comment type="block" pos:line="49" pos:column="13">/* XXX This cannot really happen, but just to be complete */</comment>
            <return pos:line="50" pos:column="13">return <expr><name pos:line="50" pos:column="20">VARY_CANCEL<pos:position pos:line="50" pos:column="31"/></name></expr>;<pos:position pos:line="50" pos:column="32"/></return>
        }<pos:position pos:line="51" pos:column="10"/></block></then> <elseif pos:line="51" pos:column="11">else <if pos:line="51" pos:column="16">if <condition pos:line="51" pos:column="19">(<expr><call><name pos:line="51" pos:column="20">strcmp<pos:position pos:line="51" pos:column="26"/></name><argument_list pos:line="51" pos:column="26">(<argument><expr><name pos:line="51" pos:column="27">vary<pos:position pos:line="51" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="51" pos:column="33">entry<pos:position pos:line="51" pos:column="38"/></name><operator pos:line="51" pos:column="38">-&gt;<pos:position pos:line="51" pos:column="43"/></operator><name pos:line="51" pos:column="40">mem_obj<pos:position pos:line="51" pos:column="47"/></name><operator pos:line="51" pos:column="47">-&gt;<pos:position pos:line="51" pos:column="52"/></operator><name pos:line="51" pos:column="49">vary_headers<pos:position pos:line="51" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="62"/></argument_list></call> <operator pos:line="51" pos:column="63">==<pos:position pos:line="51" pos:column="65"/></operator> <literal type="number" pos:line="51" pos:column="66">0<pos:position pos:line="51" pos:column="67"/></literal></expr>)<pos:position pos:line="51" pos:column="68"/></condition><then pos:line="51" pos:column="68"> <block pos:line="51" pos:column="69">{
            <return pos:line="52" pos:column="13">return <expr><name pos:line="52" pos:column="20">VARY_MATCH<pos:position pos:line="52" pos:column="30"/></name></expr>;<pos:position pos:line="52" pos:column="31"/></return>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if></elseif> <else pos:line="53" pos:column="11">else <block pos:line="53" pos:column="16">{
            <comment type="block" pos:line="54" pos:column="13">/* Oops.. we have already been here and still haven't
             * found the requested variant. Bail out
             */</comment>
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">debugs<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><literal type="number" pos:line="57" pos:column="20">33<pos:position pos:line="57" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="24">DBG_IMPORTANT<pos:position pos:line="57" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="39">"varyEvaluateMatch: Oops. Not a Vary match on second attempt, '"<pos:position pos:line="57" pos:column="103"/></literal> <operator pos:line="57" pos:column="104">&lt;&lt;<pos:position pos:line="57" pos:column="112"/></operator>
                   <name><name pos:line="58" pos:column="20">entry<pos:position pos:line="58" pos:column="25"/></name><operator pos:line="58" pos:column="25">-&gt;<pos:position pos:line="58" pos:column="30"/></operator><name pos:line="58" pos:column="27">mem_obj<pos:position pos:line="58" pos:column="34"/></name><operator pos:line="58" pos:column="34">-&gt;<pos:position pos:line="58" pos:column="39"/></operator><name pos:line="58" pos:column="36">url<pos:position pos:line="58" pos:column="39"/></name></name> <operator pos:line="58" pos:column="40">&lt;&lt;<pos:position pos:line="58" pos:column="48"/></operator> <literal type="string" pos:line="58" pos:column="43">"' '"<pos:position pos:line="58" pos:column="48"/></literal> <operator pos:line="58" pos:column="49">&lt;&lt;<pos:position pos:line="58" pos:column="57"/></operator> <name pos:line="58" pos:column="52">vary<pos:position pos:line="58" pos:column="56"/></name> <operator pos:line="58" pos:column="57">&lt;&lt;<pos:position pos:line="58" pos:column="65"/></operator> <literal type="string" pos:line="58" pos:column="60">"'"<pos:position pos:line="58" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt>
            <return pos:line="59" pos:column="13">return <expr><name pos:line="59" pos:column="20">VARY_CANCEL<pos:position pos:line="59" pos:column="31"/></name></expr>;<pos:position pos:line="59" pos:column="32"/></return>
        }<pos:position pos:line="60" pos:column="10"/></block></else></if>
    }<pos:position pos:line="61" pos:column="6"/></block></else></if>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2191_squid-3.4.14.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Note<pos:position pos:line="1" pos:column="5"/></name><operator pos:line="1" pos:column="5">::<pos:position pos:line="1" pos:column="7"/></operator><name pos:line="1" pos:column="7">Pointer<pos:position pos:line="1" pos:column="14"/></name></name></type>
<name><name pos:line="2" pos:column="1">Notes<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">add<pos:position pos:line="2" pos:column="11"/></name></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">String<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">&amp;<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="26">noteKey<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <typedef pos:line="4" pos:column="5">typedef <type><name><name pos:line="4" pos:column="13">Notes<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">NotesList<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">::<pos:position pos:line="4" pos:column="31"/></operator><name pos:line="4" pos:column="31">iterator<pos:position pos:line="4" pos:column="39"/></name></name></type> <name pos:line="4" pos:column="40">AMLI<pos:position pos:line="4" pos:column="44"/></name>;<pos:position pos:line="4" pos:column="45"/></typedef>
    <for pos:line="5" pos:column="5">for <control pos:line="5" pos:column="9">(<init><decl><type><name pos:line="5" pos:column="10">AMLI<pos:position pos:line="5" pos:column="14"/></name></type> <name pos:line="5" pos:column="15">i<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><call><name><name pos:line="5" pos:column="19">notes<pos:position pos:line="5" pos:column="24"/></name><operator pos:line="5" pos:column="24">.<pos:position pos:line="5" pos:column="25"/></operator><name pos:line="5" pos:column="25">begin<pos:position pos:line="5" pos:column="30"/></name></name><argument_list pos:line="5" pos:column="30">()<pos:position pos:line="5" pos:column="32"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="33"/></init> <condition><expr><name pos:line="5" pos:column="34">i<pos:position pos:line="5" pos:column="35"/></name> <operator pos:line="5" pos:column="36">!=<pos:position pos:line="5" pos:column="38"/></operator> <call><name><name pos:line="5" pos:column="39">notes<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">.<pos:position pos:line="5" pos:column="45"/></operator><name pos:line="5" pos:column="45">end<pos:position pos:line="5" pos:column="48"/></name></name><argument_list pos:line="5" pos:column="48">()<pos:position pos:line="5" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="51"/></condition> <incr><expr><operator pos:line="5" pos:column="52">++<pos:position pos:line="5" pos:column="54"/></operator><name pos:line="5" pos:column="54">i<pos:position pos:line="5" pos:column="55"/></name></expr></incr>)<pos:position pos:line="5" pos:column="56"/></control> <block pos:line="5" pos:column="57">{
        <if pos:line="6" pos:column="9">if <condition pos:line="6" pos:column="12">(<expr><name><operator pos:line="6" pos:column="13">(<pos:position pos:line="6" pos:column="14"/></operator><operator pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></operator><name pos:line="6" pos:column="15">i<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">)<pos:position pos:line="6" pos:column="17"/></operator><operator pos:line="6" pos:column="17">-&gt;<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="19">key<pos:position pos:line="6" pos:column="22"/></name></name> <operator pos:line="6" pos:column="23">==<pos:position pos:line="6" pos:column="25"/></operator> <name pos:line="6" pos:column="26">noteKey<pos:position pos:line="6" pos:column="33"/></name></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34">
            <block type="pseudo"><return pos:line="7" pos:column="13">return <expr><operator pos:line="7" pos:column="20">(<pos:position pos:line="7" pos:column="21"/></operator><operator pos:line="7" pos:column="21">*<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="22">i<pos:position pos:line="7" pos:column="23"/></name><operator pos:line="7" pos:column="23">)<pos:position pos:line="7" pos:column="24"/></operator></expr>;<pos:position pos:line="7" pos:column="25"/></return></block></then></if>
    }<pos:position pos:line="8" pos:column="6"/></block></for>

    <decl_stmt><decl><type><name><name pos:line="10" pos:column="5">Note<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">::<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="11">Pointer<pos:position pos:line="10" pos:column="18"/></name></name></type> <name pos:line="10" pos:column="19">note<pos:position pos:line="10" pos:column="23"/></name> <init pos:line="10" pos:column="24">= <expr><operator pos:line="10" pos:column="26">new<pos:position pos:line="10" pos:column="29"/></operator> <call><name pos:line="10" pos:column="30">Note<pos:position pos:line="10" pos:column="34"/></name><argument_list pos:line="10" pos:column="34">(<argument><expr><name pos:line="10" pos:column="35">noteKey<pos:position pos:line="10" pos:column="42"/></name></expr></argument>)<pos:position pos:line="10" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="10" pos:column="44"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">notes<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">.<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">push_back<pos:position pos:line="11" pos:column="20"/></name></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">note<pos:position pos:line="11" pos:column="25"/></name></expr></argument>)<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt>
    <return pos:line="12" pos:column="5">return <expr><name pos:line="12" pos:column="12">note<pos:position pos:line="12" pos:column="16"/></name></expr>;<pos:position pos:line="12" pos:column="17"/></return>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

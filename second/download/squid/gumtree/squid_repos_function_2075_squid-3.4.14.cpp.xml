<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2075_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">HttpStateData<pos:position pos:line="1" pos:column="19"/></name><operator pos:line="1" pos:column="19">::<pos:position pos:line="1" pos:column="21"/></operator><name pos:line="1" pos:column="21">peerSupportsConnectionPinning<pos:position pos:line="1" pos:column="50"/></name></name><parameter_list pos:line="1" pos:column="50">()<pos:position pos:line="1" pos:column="52"/></parameter_list> <specifier pos:line="1" pos:column="53">const<pos:position pos:line="1" pos:column="58"/></specifier>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="3" pos:column="5">const<pos:position pos:line="3" pos:column="10"/></specifier> <name pos:line="3" pos:column="11">HttpReply<pos:position pos:line="3" pos:column="20"/></name> <modifier pos:line="3" pos:column="21">*<pos:position pos:line="3" pos:column="22"/></modifier></type><name pos:line="3" pos:column="22">rep<pos:position pos:line="3" pos:column="25"/></name> <init pos:line="3" pos:column="26">= <expr><call><name><name pos:line="3" pos:column="28">entry<pos:position pos:line="3" pos:column="33"/></name><operator pos:line="3" pos:column="33">-&gt;<pos:position pos:line="3" pos:column="38"/></operator><name pos:line="3" pos:column="35">mem_obj<pos:position pos:line="3" pos:column="42"/></name><operator pos:line="3" pos:column="42">-&gt;<pos:position pos:line="3" pos:column="47"/></operator><name pos:line="3" pos:column="44">getReply<pos:position pos:line="3" pos:column="52"/></name></name><argument_list pos:line="3" pos:column="52">()<pos:position pos:line="3" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="3" pos:column="55"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">HttpHeader<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">hdr<pos:position pos:line="4" pos:column="26"/></name> <init pos:line="4" pos:column="27">= <expr><operator pos:line="4" pos:column="29">&amp;<pos:position pos:line="4" pos:column="34"/></operator><name><name pos:line="4" pos:column="30">rep<pos:position pos:line="4" pos:column="33"/></name><operator pos:line="4" pos:column="33">-&gt;<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="35">header<pos:position pos:line="4" pos:column="41"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">bool<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">rc<pos:position pos:line="5" pos:column="12"/></name></decl>;<pos:position pos:line="5" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">String<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">header<pos:position pos:line="6" pos:column="18"/></name></decl>;<pos:position pos:line="6" pos:column="19"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">_peer<pos:position pos:line="8" pos:column="15"/></name></expr>)<pos:position pos:line="8" pos:column="16"/></condition><then pos:line="8" pos:column="16">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="boolean" pos:line="9" pos:column="16">true<pos:position pos:line="9" pos:column="20"/></literal></expr>;<pos:position pos:line="9" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="11" pos:column="5">/*If this peer does not support connection pinning (authenticated
      connections) return false
     */</comment>
    <if pos:line="14" pos:column="5">if <condition pos:line="14" pos:column="8">(<expr><operator pos:line="14" pos:column="9">!<pos:position pos:line="14" pos:column="10"/></operator><name><name pos:line="14" pos:column="10">_peer<pos:position pos:line="14" pos:column="15"/></name><operator pos:line="14" pos:column="15">-&gt;<pos:position pos:line="14" pos:column="20"/></operator><name pos:line="14" pos:column="17">connection_auth<pos:position pos:line="14" pos:column="32"/></name></name></expr>)<pos:position pos:line="14" pos:column="33"/></condition><then pos:line="14" pos:column="33">
        <block type="pseudo"><return pos:line="15" pos:column="9">return <expr><literal type="boolean" pos:line="15" pos:column="16">false<pos:position pos:line="15" pos:column="21"/></literal></expr>;<pos:position pos:line="15" pos:column="22"/></return></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/*The peer supports connection pinning and the http reply status
      is not unauthorized, so the related connection can be pinned
     */</comment>
    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><call><name><name pos:line="20" pos:column="9">rep<pos:position pos:line="20" pos:column="12"/></name><operator pos:line="20" pos:column="12">-&gt;<pos:position pos:line="20" pos:column="17"/></operator><name pos:line="20" pos:column="14">sline<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">.<pos:position pos:line="20" pos:column="20"/></operator><name pos:line="20" pos:column="20">status<pos:position pos:line="20" pos:column="26"/></name></name><argument_list pos:line="20" pos:column="26">()<pos:position pos:line="20" pos:column="28"/></argument_list></call> <operator pos:line="20" pos:column="29">!=<pos:position pos:line="20" pos:column="31"/></operator> <name><name pos:line="20" pos:column="32">Http<pos:position pos:line="20" pos:column="36"/></name><operator pos:line="20" pos:column="36">::<pos:position pos:line="20" pos:column="38"/></operator><name pos:line="20" pos:column="38">scUnauthorized<pos:position pos:line="20" pos:column="52"/></name></name></expr>)<pos:position pos:line="20" pos:column="53"/></condition><then pos:line="20" pos:column="53">
        <block type="pseudo"><return pos:line="21" pos:column="9">return <expr><literal type="boolean" pos:line="21" pos:column="16">true<pos:position pos:line="21" pos:column="20"/></literal></expr>;<pos:position pos:line="21" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="23" pos:column="5">/*The server respond with Http::scUnauthorized and the peer configured
      with "connection-auth=on" we know that the peer supports pinned
      connections
    */</comment>
    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">_peer<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">connection_auth<pos:position pos:line="27" pos:column="31"/></name></name> <operator pos:line="27" pos:column="32">==<pos:position pos:line="27" pos:column="34"/></operator> <literal type="number" pos:line="27" pos:column="35">1<pos:position pos:line="27" pos:column="36"/></literal></expr>)<pos:position pos:line="27" pos:column="37"/></condition><then pos:line="27" pos:column="37">
        <block type="pseudo"><return pos:line="28" pos:column="9">return <expr><literal type="boolean" pos:line="28" pos:column="16">true<pos:position pos:line="28" pos:column="20"/></literal></expr>;<pos:position pos:line="28" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="30" pos:column="5">/*At this point peer has configured with "connection-auth=auto"
      parameter so we need some extra checks to decide if we are going
      to allow pinned connections or not
    */</comment>

    <comment type="block" pos:line="35" pos:column="5">/*if the peer configured with originserver just allow connection
        pinning (squid 2.6 behaviour)
     */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">_peer<pos:position pos:line="38" pos:column="14"/></name><operator pos:line="38" pos:column="14">-&gt;<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="16">options<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">.<pos:position pos:line="38" pos:column="24"/></operator><name pos:line="38" pos:column="24">originserver<pos:position pos:line="38" pos:column="36"/></name></name></expr>)<pos:position pos:line="38" pos:column="37"/></condition><then pos:line="38" pos:column="37">
        <block type="pseudo"><return pos:line="39" pos:column="9">return <expr><literal type="boolean" pos:line="39" pos:column="16">true<pos:position pos:line="39" pos:column="20"/></literal></expr>;<pos:position pos:line="39" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="41" pos:column="5">/*if the connections it is already pinned it is OK*/</comment>
    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><name><name pos:line="42" pos:column="9">request<pos:position pos:line="42" pos:column="16"/></name><operator pos:line="42" pos:column="16">-&gt;<pos:position pos:line="42" pos:column="21"/></operator><name pos:line="42" pos:column="18">flags<pos:position pos:line="42" pos:column="23"/></name><operator pos:line="42" pos:column="23">.<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="24">pinned<pos:position pos:line="42" pos:column="30"/></name></name></expr>)<pos:position pos:line="42" pos:column="31"/></condition><then pos:line="42" pos:column="31">
        <block type="pseudo"><return pos:line="43" pos:column="9">return <expr><literal type="boolean" pos:line="43" pos:column="16">true<pos:position pos:line="43" pos:column="20"/></literal></expr>;<pos:position pos:line="43" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="45" pos:column="5">/*Allow pinned connections only if the Proxy-support header exists in
      reply and has in its list the "Session-Based-Authentication"
      which means that the peer supports connection pinning.
     */</comment>
    <if pos:line="49" pos:column="5">if <condition pos:line="49" pos:column="8">(<expr><operator pos:line="49" pos:column="9">!<pos:position pos:line="49" pos:column="10"/></operator><call><name><name pos:line="49" pos:column="10">hdr<pos:position pos:line="49" pos:column="13"/></name><operator pos:line="49" pos:column="13">-&gt;<pos:position pos:line="49" pos:column="18"/></operator><name pos:line="49" pos:column="15">has<pos:position pos:line="49" pos:column="18"/></name></name><argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">HDR_PROXY_SUPPORT<pos:position pos:line="49" pos:column="36"/></name></expr></argument>)<pos:position pos:line="49" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="38"/></condition><then pos:line="49" pos:column="38">
        <block type="pseudo"><return pos:line="50" pos:column="9">return <expr><literal type="boolean" pos:line="50" pos:column="16">false<pos:position pos:line="50" pos:column="21"/></literal></expr>;<pos:position pos:line="50" pos:column="22"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="52" pos:column="5">header<pos:position pos:line="52" pos:column="11"/></name> <operator pos:line="52" pos:column="12">=<pos:position pos:line="52" pos:column="13"/></operator> <call><name><name pos:line="52" pos:column="14">hdr<pos:position pos:line="52" pos:column="17"/></name><operator pos:line="52" pos:column="17">-&gt;<pos:position pos:line="52" pos:column="22"/></operator><name pos:line="52" pos:column="19">getStrOrList<pos:position pos:line="52" pos:column="31"/></name></name><argument_list pos:line="52" pos:column="31">(<argument><expr><name pos:line="52" pos:column="32">HDR_PROXY_SUPPORT<pos:position pos:line="52" pos:column="49"/></name></expr></argument>)<pos:position pos:line="52" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="51"/></expr_stmt>
    <comment type="block" pos:line="53" pos:column="5">/* XXX This ought to be done in a case-insensitive manner */</comment>
    <expr_stmt><expr><name pos:line="54" pos:column="5">rc<pos:position pos:line="54" pos:column="7"/></name> <operator pos:line="54" pos:column="8">=<pos:position pos:line="54" pos:column="9"/></operator> <operator pos:line="54" pos:column="10">(<pos:position pos:line="54" pos:column="11"/></operator><call><name pos:line="54" pos:column="11">strstr<pos:position pos:line="54" pos:column="17"/></name><argument_list pos:line="54" pos:column="17">(<argument><expr><call><name><name pos:line="54" pos:column="18">header<pos:position pos:line="54" pos:column="24"/></name><operator pos:line="54" pos:column="24">.<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">termedBuf<pos:position pos:line="54" pos:column="34"/></name></name><argument_list pos:line="54" pos:column="34">()<pos:position pos:line="54" pos:column="36"/></argument_list></call></expr></argument>, <argument><expr><literal type="string" pos:line="54" pos:column="38">"Session-Based-Authentication"<pos:position pos:line="54" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="69"/></argument_list></call> <operator pos:line="54" pos:column="70">!=<pos:position pos:line="54" pos:column="72"/></operator> <name pos:line="54" pos:column="73">NULL<pos:position pos:line="54" pos:column="77"/></name><operator pos:line="54" pos:column="77">)<pos:position pos:line="54" pos:column="78"/></operator></expr>;<pos:position pos:line="54" pos:column="79"/></expr_stmt>

    <return pos:line="56" pos:column="5">return <expr><name pos:line="56" pos:column="12">rc<pos:position pos:line="56" pos:column="14"/></name></expr>;<pos:position pos:line="56" pos:column="15"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

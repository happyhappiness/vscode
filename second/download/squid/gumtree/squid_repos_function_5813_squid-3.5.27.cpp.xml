<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5813_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Basic<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">UserRequest<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">HandleReply<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">(<parameter><decl><type><name pos:line="2" pos:column="39">void<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="45">data<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="51">const<pos:position pos:line="2" pos:column="56"/></specifier> <name><name pos:line="2" pos:column="57">Helper<pos:position pos:line="2" pos:column="63"/></name><operator pos:line="2" pos:column="63">::<pos:position pos:line="2" pos:column="65"/></operator><name pos:line="2" pos:column="65">Reply<pos:position pos:line="2" pos:column="70"/></name></name> <modifier pos:line="2" pos:column="71">&amp;<pos:position pos:line="2" pos:column="76"/></modifier></type><name pos:line="2" pos:column="72">reply<pos:position pos:line="2" pos:column="77"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="78"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Auth<pos:position pos:line="4" pos:column="9"/></name><operator pos:line="4" pos:column="9">::<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">StateData<pos:position pos:line="4" pos:column="20"/></name></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">r<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><cast type="static" pos:line="4" pos:column="26">static_cast<argument_list type="generic" pos:line="4" pos:column="37">&lt;<argument><expr><name><name pos:line="4" pos:column="38">Auth<pos:position pos:line="4" pos:column="42"/></name><operator pos:line="4" pos:column="42">::<pos:position pos:line="4" pos:column="44"/></operator><name pos:line="4" pos:column="44">StateData<pos:position pos:line="4" pos:column="53"/></name></name> <operator pos:line="4" pos:column="54">*<pos:position pos:line="4" pos:column="55"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="59"/></argument_list><argument_list pos:line="4" pos:column="56">(<argument><expr><name pos:line="4" pos:column="57">data<pos:position pos:line="4" pos:column="61"/></name></expr></argument>)<pos:position pos:line="4" pos:column="62"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">void<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">cbdata<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">29<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">5<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="19">HERE<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">&lt;&lt;<pos:position pos:line="6" pos:column="32"/></operator> <literal type="string" pos:line="6" pos:column="27">"reply="<pos:position pos:line="6" pos:column="35"/></literal> <operator pos:line="6" pos:column="36">&lt;&lt;<pos:position pos:line="6" pos:column="44"/></operator> <name pos:line="6" pos:column="39">reply<pos:position pos:line="6" pos:column="44"/></name></expr></argument>)<pos:position pos:line="6" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="46"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name><name pos:line="8" pos:column="12">r<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">-&gt;<pos:position pos:line="8" pos:column="18"/></operator><name pos:line="8" pos:column="15">auth_user_request<pos:position pos:line="8" pos:column="32"/></name></name> <operator pos:line="8" pos:column="33">!=<pos:position pos:line="8" pos:column="35"/></operator> <name pos:line="8" pos:column="36">NULL<pos:position pos:line="8" pos:column="40"/></name></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="42"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><call><name><name pos:line="9" pos:column="12">r<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">auth_user_request<pos:position pos:line="9" pos:column="32"/></name><operator pos:line="9" pos:column="32">-&gt;<pos:position pos:line="9" pos:column="37"/></operator><name pos:line="9" pos:column="34">user<pos:position pos:line="9" pos:column="38"/></name></name><argument_list pos:line="9" pos:column="38">()<pos:position pos:line="9" pos:column="40"/></argument_list></call><operator pos:line="9" pos:column="40">-&gt;<pos:position pos:line="9" pos:column="45"/></operator><name pos:line="9" pos:column="42">auth_type<pos:position pos:line="9" pos:column="51"/></name> <operator pos:line="9" pos:column="52">==<pos:position pos:line="9" pos:column="54"/></operator> <name><name pos:line="9" pos:column="55">Auth<pos:position pos:line="9" pos:column="59"/></name><operator pos:line="9" pos:column="59">::<pos:position pos:line="9" pos:column="61"/></operator><name pos:line="9" pos:column="61">AUTH_BASIC<pos:position pos:line="9" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="73"/></expr_stmt>

    <comment type="line" pos:line="11" pos:column="5">// add new helper kv-pair notes to the credentials object</comment>
    <comment type="line" pos:line="12" pos:column="5">// so that any transaction using those credentials can access them</comment>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">r<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">auth_user_request<pos:position pos:line="13" pos:column="25"/></name><operator pos:line="13" pos:column="25">-&gt;<pos:position pos:line="13" pos:column="30"/></operator><name pos:line="13" pos:column="27">user<pos:position pos:line="13" pos:column="31"/></name></name><argument_list pos:line="13" pos:column="31">()<pos:position pos:line="13" pos:column="33"/></argument_list></call><operator pos:line="13" pos:column="33">-&gt;<pos:position pos:line="13" pos:column="38"/></operator><call><name><name pos:line="13" pos:column="35">notes<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">.<pos:position pos:line="13" pos:column="41"/></operator><name pos:line="13" pos:column="41">appendNewOnly<pos:position pos:line="13" pos:column="54"/></name></name><argument_list pos:line="13" pos:column="54">(<argument><expr><operator pos:line="13" pos:column="55">&amp;<pos:position pos:line="13" pos:column="60"/></operator><name><name pos:line="13" pos:column="56">reply<pos:position pos:line="13" pos:column="61"/></name><operator pos:line="13" pos:column="61">.<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="62">notes<pos:position pos:line="13" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="69"/></expr_stmt>

    <comment type="block" pos:line="15" pos:column="5">/* this is okay since we only play with the Auth::Basic::User child fields below
     * and dont pass the pointer itself anywhere */</comment>
    <decl_stmt><decl><type><name><name pos:line="17" pos:column="5">Auth<pos:position pos:line="17" pos:column="9"/></name><operator pos:line="17" pos:column="9">::<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">Basic<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">::<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">User<pos:position pos:line="17" pos:column="22"/></name></name> <modifier pos:line="17" pos:column="23">*<pos:position pos:line="17" pos:column="24"/></modifier></type><name pos:line="17" pos:column="24">basic_auth<pos:position pos:line="17" pos:column="34"/></name> <init pos:line="17" pos:column="35">= <expr><cast type="dynamic" pos:line="17" pos:column="37">dynamic_cast<argument_list type="generic" pos:line="17" pos:column="49">&lt;<argument><expr><name><name pos:line="17" pos:column="50">Auth<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">::<pos:position pos:line="17" pos:column="56"/></operator><name pos:line="17" pos:column="56">Basic<pos:position pos:line="17" pos:column="61"/></name><operator pos:line="17" pos:column="61">::<pos:position pos:line="17" pos:column="63"/></operator><name pos:line="17" pos:column="63">User<pos:position pos:line="17" pos:column="67"/></name></name> <operator pos:line="17" pos:column="68">*<pos:position pos:line="17" pos:column="69"/></operator></expr></argument>&gt;<pos:position pos:line="17" pos:column="73"/></argument_list><argument_list pos:line="17" pos:column="70">(<argument><expr><call><name><name pos:line="17" pos:column="71">r<pos:position pos:line="17" pos:column="72"/></name><operator pos:line="17" pos:column="72">-&gt;<pos:position pos:line="17" pos:column="77"/></operator><name pos:line="17" pos:column="74">auth_user_request<pos:position pos:line="17" pos:column="91"/></name><operator pos:line="17" pos:column="91">-&gt;<pos:position pos:line="17" pos:column="96"/></operator><name pos:line="17" pos:column="93">user<pos:position pos:line="17" pos:column="97"/></name></name><argument_list pos:line="17" pos:column="97">()<pos:position pos:line="17" pos:column="99"/></argument_list></call><operator pos:line="17" pos:column="99">.<pos:position pos:line="17" pos:column="100"/></operator><call><name pos:line="17" pos:column="100">getRaw<pos:position pos:line="17" pos:column="106"/></name><argument_list pos:line="17" pos:column="106">()<pos:position pos:line="17" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="17" pos:column="109"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="17" pos:column="110"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="19" pos:column="5">assert<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">basic_auth<pos:position pos:line="19" pos:column="22"/></name> <operator pos:line="19" pos:column="23">!=<pos:position pos:line="19" pos:column="25"/></operator> <name pos:line="19" pos:column="26">NULL<pos:position pos:line="19" pos:column="30"/></name></expr></argument>)<pos:position pos:line="19" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="32"/></expr_stmt>

    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><name><name pos:line="21" pos:column="9">reply<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">.<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="15">result<pos:position pos:line="21" pos:column="21"/></name></name> <operator pos:line="21" pos:column="22">==<pos:position pos:line="21" pos:column="24"/></operator> <name><name pos:line="21" pos:column="25">Helper<pos:position pos:line="21" pos:column="31"/></name><operator pos:line="21" pos:column="31">::<pos:position pos:line="21" pos:column="33"/></operator><name pos:line="21" pos:column="33">Okay<pos:position pos:line="21" pos:column="37"/></name></name></expr>)<pos:position pos:line="21" pos:column="38"/></condition><then pos:line="21" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="22" pos:column="9">basic_auth<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">-&gt;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="21">credentials<pos:position pos:line="22" pos:column="32"/></name></name><argument_list pos:line="22" pos:column="32">(<argument><expr><name><name pos:line="22" pos:column="33">Auth<pos:position pos:line="22" pos:column="37"/></name><operator pos:line="22" pos:column="37">::<pos:position pos:line="22" pos:column="39"/></operator><name pos:line="22" pos:column="39">Ok<pos:position pos:line="22" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="43"/></expr_stmt></block></then>
    <else pos:line="23" pos:column="5">else <block pos:line="23" pos:column="10">{
        <expr_stmt><expr><call><name><name pos:line="24" pos:column="9">basic_auth<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">-&gt;<pos:position pos:line="24" pos:column="24"/></operator><name pos:line="24" pos:column="21">credentials<pos:position pos:line="24" pos:column="32"/></name></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name><name pos:line="24" pos:column="33">Auth<pos:position pos:line="24" pos:column="37"/></name><operator pos:line="24" pos:column="37">::<pos:position pos:line="24" pos:column="39"/></operator><name pos:line="24" pos:column="39">Failed<pos:position pos:line="24" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="47"/></expr_stmt>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><call><name><name pos:line="26" pos:column="13">reply<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">.<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="19">other<pos:position pos:line="26" pos:column="24"/></name></name><argument_list pos:line="26" pos:column="24">()<pos:position pos:line="26" pos:column="26"/></argument_list></call><operator pos:line="26" pos:column="26">.<pos:position pos:line="26" pos:column="27"/></operator><call><name pos:line="26" pos:column="27">hasContent<pos:position pos:line="26" pos:column="37"/></name><argument_list pos:line="26" pos:column="37">()<pos:position pos:line="26" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="26" pos:column="40"/></condition><then pos:line="26" pos:column="40">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="27" pos:column="13">r<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">-&gt;<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="16">auth_user_request<pos:position pos:line="27" pos:column="33"/></name><operator pos:line="27" pos:column="33">-&gt;<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="35">setDenyMessage<pos:position pos:line="27" pos:column="49"/></name></name><argument_list pos:line="27" pos:column="49">(<argument><expr><call><name><name pos:line="27" pos:column="50">reply<pos:position pos:line="27" pos:column="55"/></name><operator pos:line="27" pos:column="55">.<pos:position pos:line="27" pos:column="56"/></operator><name pos:line="27" pos:column="56">other<pos:position pos:line="27" pos:column="61"/></name></name><argument_list pos:line="27" pos:column="61">()<pos:position pos:line="27" pos:column="63"/></argument_list></call><operator pos:line="27" pos:column="63">.<pos:position pos:line="27" pos:column="64"/></operator><call><name pos:line="27" pos:column="64">content<pos:position pos:line="27" pos:column="71"/></name><argument_list pos:line="27" pos:column="71">()<pos:position pos:line="27" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="27" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="75"/></expr_stmt></block></then></if>
    }<pos:position pos:line="28" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name><name pos:line="30" pos:column="5">basic_auth<pos:position pos:line="30" pos:column="15"/></name><operator pos:line="30" pos:column="15">-&gt;<pos:position pos:line="30" pos:column="20"/></operator><name pos:line="30" pos:column="17">expiretime<pos:position pos:line="30" pos:column="27"/></name></name> <operator pos:line="30" pos:column="28">=<pos:position pos:line="30" pos:column="29"/></operator> <name pos:line="30" pos:column="30">squid_curtime<pos:position pos:line="30" pos:column="43"/></name></expr>;<pos:position pos:line="30" pos:column="44"/></expr_stmt>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><call><name pos:line="32" pos:column="9">cbdataReferenceValidDone<pos:position pos:line="32" pos:column="33"/></name><argument_list pos:line="32" pos:column="33">(<argument><expr><name><name pos:line="32" pos:column="34">r<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">data<pos:position pos:line="32" pos:column="41"/></name></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="43">&amp;<pos:position pos:line="32" pos:column="48"/></operator><name pos:line="32" pos:column="44">cbdata<pos:position pos:line="32" pos:column="50"/></name></expr></argument>)<pos:position pos:line="32" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="32" pos:column="52"/></condition><then pos:line="32" pos:column="52">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="33" pos:column="9">r<pos:position pos:line="33" pos:column="10"/></name><operator pos:line="33" pos:column="10">-&gt;<pos:position pos:line="33" pos:column="15"/></operator><name pos:line="33" pos:column="12">handler<pos:position pos:line="33" pos:column="19"/></name></name><argument_list pos:line="33" pos:column="19">(<argument><expr><name pos:line="33" pos:column="20">cbdata<pos:position pos:line="33" pos:column="26"/></name></expr></argument>)<pos:position pos:line="33" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="28"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">cbdataReferenceDone<pos:position pos:line="35" pos:column="24"/></name><argument_list pos:line="35" pos:column="24">(<argument><expr><name><name pos:line="35" pos:column="25">r<pos:position pos:line="35" pos:column="26"/></name><operator pos:line="35" pos:column="26">-&gt;<pos:position pos:line="35" pos:column="31"/></operator><name pos:line="35" pos:column="28">data<pos:position pos:line="35" pos:column="32"/></name></name></expr></argument>)<pos:position pos:line="35" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>

    <while pos:line="37" pos:column="5">while <condition pos:line="37" pos:column="11">(<expr><name><name pos:line="37" pos:column="12">basic_auth<pos:position pos:line="37" pos:column="22"/></name><operator pos:line="37" pos:column="22">-&gt;<pos:position pos:line="37" pos:column="27"/></operator><name pos:line="37" pos:column="24">queue<pos:position pos:line="37" pos:column="29"/></name></name></expr>)<pos:position pos:line="37" pos:column="30"/></condition> <block pos:line="37" pos:column="31">{
        <if pos:line="38" pos:column="9">if <condition pos:line="38" pos:column="12">(<expr><call><name pos:line="38" pos:column="13">cbdataReferenceValidDone<pos:position pos:line="38" pos:column="37"/></name><argument_list pos:line="38" pos:column="37">(<argument><expr><name><name pos:line="38" pos:column="38">basic_auth<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">-&gt;<pos:position pos:line="38" pos:column="53"/></operator><name pos:line="38" pos:column="50">queue<pos:position pos:line="38" pos:column="55"/></name><operator pos:line="38" pos:column="55">-&gt;<pos:position pos:line="38" pos:column="60"/></operator><name pos:line="38" pos:column="57">data<pos:position pos:line="38" pos:column="61"/></name></name></expr></argument>, <argument><expr><operator pos:line="38" pos:column="63">&amp;<pos:position pos:line="38" pos:column="68"/></operator><name pos:line="38" pos:column="64">cbdata<pos:position pos:line="38" pos:column="70"/></name></expr></argument>)<pos:position pos:line="38" pos:column="71"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="72"/></condition><then pos:line="38" pos:column="72">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="39" pos:column="13">basic_auth<pos:position pos:line="39" pos:column="23"/></name><operator pos:line="39" pos:column="23">-&gt;<pos:position pos:line="39" pos:column="28"/></operator><name pos:line="39" pos:column="25">queue<pos:position pos:line="39" pos:column="30"/></name><operator pos:line="39" pos:column="30">-&gt;<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="32">handler<pos:position pos:line="39" pos:column="39"/></name></name><argument_list pos:line="39" pos:column="39">(<argument><expr><name pos:line="39" pos:column="40">cbdata<pos:position pos:line="39" pos:column="46"/></name></expr></argument>)<pos:position pos:line="39" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="48"/></expr_stmt></block></then></if>

        <decl_stmt><decl><type><name><name pos:line="41" pos:column="9">Auth<pos:position pos:line="41" pos:column="13"/></name><operator pos:line="41" pos:column="13">::<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="15">QueueNode<pos:position pos:line="41" pos:column="24"/></name></name> <modifier pos:line="41" pos:column="25">*<pos:position pos:line="41" pos:column="26"/></modifier></type><name pos:line="41" pos:column="26">tmpnode<pos:position pos:line="41" pos:column="33"/></name> <init pos:line="41" pos:column="34">= <expr><name><name pos:line="41" pos:column="36">basic_auth<pos:position pos:line="41" pos:column="46"/></name><operator pos:line="41" pos:column="46">-&gt;<pos:position pos:line="41" pos:column="51"/></operator><name pos:line="41" pos:column="48">queue<pos:position pos:line="41" pos:column="53"/></name><operator pos:line="41" pos:column="53">-&gt;<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="55">next<pos:position pos:line="41" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="41" pos:column="60"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="42" pos:column="9">basic_auth<pos:position pos:line="42" pos:column="19"/></name><operator pos:line="42" pos:column="19">-&gt;<pos:position pos:line="42" pos:column="24"/></operator><name pos:line="42" pos:column="21">queue<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">-&gt;<pos:position pos:line="42" pos:column="31"/></operator><name pos:line="42" pos:column="28">next<pos:position pos:line="42" pos:column="32"/></name></name> <operator pos:line="42" pos:column="33">=<pos:position pos:line="42" pos:column="34"/></operator> <name pos:line="42" pos:column="35">NULL<pos:position pos:line="42" pos:column="39"/></name></expr>;<pos:position pos:line="42" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="43" pos:column="9">delete<pos:position pos:line="43" pos:column="15"/></operator> <name><name pos:line="43" pos:column="16">basic_auth<pos:position pos:line="43" pos:column="26"/></name><operator pos:line="43" pos:column="26">-&gt;<pos:position pos:line="43" pos:column="31"/></operator><name pos:line="43" pos:column="28">queue<pos:position pos:line="43" pos:column="33"/></name></name></expr>;<pos:position pos:line="43" pos:column="34"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="45" pos:column="9">basic_auth<pos:position pos:line="45" pos:column="19"/></name><operator pos:line="45" pos:column="19">-&gt;<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="21">queue<pos:position pos:line="45" pos:column="26"/></name></name> <operator pos:line="45" pos:column="27">=<pos:position pos:line="45" pos:column="28"/></operator> <name pos:line="45" pos:column="29">tmpnode<pos:position pos:line="45" pos:column="36"/></name></expr>;<pos:position pos:line="45" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="46" pos:column="6"/></block></while>

    <expr_stmt><expr><operator pos:line="48" pos:column="5">delete<pos:position pos:line="48" pos:column="11"/></operator> <name pos:line="48" pos:column="12">r<pos:position pos:line="48" pos:column="13"/></name></expr>;<pos:position pos:line="48" pos:column="14"/></expr_stmt>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

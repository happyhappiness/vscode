<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7632_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">boolean<pos:position pos:line="1" pos:column="8"/></name></type>
<name pos:line="2" pos:column="1">at_begline_loc_p<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><specifier pos:line="2" pos:column="18">const<pos:position pos:line="2" pos:column="23"/></specifier> <name pos:line="2" pos:column="24">char<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type> <name pos:line="2" pos:column="31">pattern<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="40">const<pos:position pos:line="2" pos:column="45"/></specifier> <name pos:line="2" pos:column="46">char<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="52">p<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="55">reg_syntax_t<pos:position pos:line="2" pos:column="67"/></name></type> <name pos:line="2" pos:column="68">syntax<pos:position pos:line="2" pos:column="74"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="75"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">prev<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><name pos:line="4" pos:column="24">p<pos:position pos:line="4" pos:column="25"/></name> <operator pos:line="4" pos:column="26">-<pos:position pos:line="4" pos:column="27"/></operator> <literal type="number" pos:line="4" pos:column="28">2<pos:position pos:line="4" pos:column="29"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">boolean<pos:position pos:line="5" pos:column="12"/></name></type> <name pos:line="5" pos:column="13">prev_prev_backslash<pos:position pos:line="5" pos:column="32"/></name> <init pos:line="5" pos:column="33">= <expr><name pos:line="5" pos:column="35">prev<pos:position pos:line="5" pos:column="39"/></name> <operator pos:line="5" pos:column="40">&gt;<pos:position pos:line="5" pos:column="44"/></operator> <name pos:line="5" pos:column="42">pattern<pos:position pos:line="5" pos:column="49"/></name> <operator pos:line="5" pos:column="50">&amp;&amp;<pos:position pos:line="5" pos:column="60"/></operator> <name><name pos:line="5" pos:column="53">prev<pos:position pos:line="5" pos:column="57"/></name><index pos:line="5" pos:column="57">[<expr><operator pos:line="5" pos:column="58">-<pos:position pos:line="5" pos:column="59"/></operator><literal type="number" pos:line="5" pos:column="59">1<pos:position pos:line="5" pos:column="60"/></literal></expr>]<pos:position pos:line="5" pos:column="61"/></index></name> <operator pos:line="5" pos:column="62">==<pos:position pos:line="5" pos:column="64"/></operator> <literal type="char" pos:line="5" pos:column="65">'\\'<pos:position pos:line="5" pos:column="69"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="70"/></decl_stmt>

    <return pos:line="7" pos:column="5">return
        <comment type="block" pos:line="8" pos:column="9">/* After a subexpression?  */</comment>
        <expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><operator pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">prev<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">==<pos:position pos:line="9" pos:column="18"/></operator> <literal type="char" pos:line="9" pos:column="19">'('<pos:position pos:line="9" pos:column="22"/></literal> <operator pos:line="9" pos:column="23">&amp;&amp;<pos:position pos:line="9" pos:column="33"/></operator> <operator pos:line="9" pos:column="26">(<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">syntax<pos:position pos:line="9" pos:column="33"/></name> <operator pos:line="9" pos:column="34">&amp;<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="36">RE_NO_BK_PARENS<pos:position pos:line="9" pos:column="51"/></name> <operator pos:line="9" pos:column="52">||<pos:position pos:line="9" pos:column="54"/></operator> <name pos:line="9" pos:column="55">prev_prev_backslash<pos:position pos:line="9" pos:column="74"/></name><operator pos:line="9" pos:column="74">)<pos:position pos:line="9" pos:column="75"/></operator><operator pos:line="9" pos:column="75">)<pos:position pos:line="9" pos:column="76"/></operator>
        <comment type="block" pos:line="10" pos:column="9">/* After an alternative?  */</comment>
        <operator pos:line="11" pos:column="9">||<pos:position pos:line="11" pos:column="11"/></operator> <operator pos:line="11" pos:column="12">(<pos:position pos:line="11" pos:column="13"/></operator><operator pos:line="11" pos:column="13">*<pos:position pos:line="11" pos:column="14"/></operator><name pos:line="11" pos:column="14">prev<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">==<pos:position pos:line="11" pos:column="21"/></operator> <literal type="char" pos:line="11" pos:column="22">'|'<pos:position pos:line="11" pos:column="25"/></literal> <operator pos:line="11" pos:column="26">&amp;&amp;<pos:position pos:line="11" pos:column="36"/></operator> <operator pos:line="11" pos:column="29">(<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="30">syntax<pos:position pos:line="11" pos:column="36"/></name> <operator pos:line="11" pos:column="37">&amp;<pos:position pos:line="11" pos:column="42"/></operator> <name pos:line="11" pos:column="39">RE_NO_BK_VBAR<pos:position pos:line="11" pos:column="52"/></name> <operator pos:line="11" pos:column="53">||<pos:position pos:line="11" pos:column="55"/></operator> <name pos:line="11" pos:column="56">prev_prev_backslash<pos:position pos:line="11" pos:column="75"/></name><operator pos:line="11" pos:column="75">)<pos:position pos:line="11" pos:column="76"/></operator><operator pos:line="11" pos:column="76">)<pos:position pos:line="11" pos:column="77"/></operator></expr>;<pos:position pos:line="11" pos:column="78"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

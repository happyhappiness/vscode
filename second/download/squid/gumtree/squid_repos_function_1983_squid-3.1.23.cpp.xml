<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1983_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">httpHdrContRangeParseInit<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">HttpHdrContRange<pos:position pos:line="2" pos:column="43"/></name> <modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type> <name pos:line="2" pos:column="46">range<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="53">const<pos:position pos:line="2" pos:column="58"/></specifier> <name pos:line="2" pos:column="59">char<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">str<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">p<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">range<pos:position pos:line="5" pos:column="17"/></name> <operator pos:line="5" pos:column="18">&amp;&amp;<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="21">str<pos:position pos:line="5" pos:column="24"/></name></expr></argument>)<pos:position pos:line="5" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">68<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">8<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"parsing content-range field: '"<pos:position pos:line="6" pos:column="51"/></literal> <operator pos:line="6" pos:column="52">&lt;&lt;<pos:position pos:line="6" pos:column="60"/></operator> <name pos:line="6" pos:column="55">str<pos:position pos:line="6" pos:column="58"/></name> <operator pos:line="6" pos:column="59">&lt;&lt;<pos:position pos:line="6" pos:column="67"/></operator> <literal type="string" pos:line="6" pos:column="62">"'"<pos:position pos:line="6" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="67"/></expr_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* check range type */</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name pos:line="9" pos:column="9">strncasecmp<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">str<pos:position pos:line="9" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="26">"bytes "<pos:position pos:line="9" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="36">6<pos:position pos:line="9" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="39"/></condition><then pos:line="9" pos:column="39">
        <block type="pseudo"><return pos:line="10" pos:column="9">return <expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal></expr>;<pos:position pos:line="10" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">str<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">+=<pos:position pos:line="12" pos:column="11"/></operator> <literal type="number" pos:line="12" pos:column="12">6<pos:position pos:line="12" pos:column="13"/></literal></expr>;<pos:position pos:line="12" pos:column="14"/></expr_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* split */</comment>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><operator pos:line="15" pos:column="10">(<pos:position pos:line="15" pos:column="11"/></operator><name pos:line="15" pos:column="11">p<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <call><name pos:line="15" pos:column="15">strchr<pos:position pos:line="15" pos:column="21"/></name><argument_list pos:line="15" pos:column="21">(<argument><expr><name pos:line="15" pos:column="22">str<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="27">'/'<pos:position pos:line="15" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call><operator pos:line="15" pos:column="31">)<pos:position pos:line="15" pos:column="32"/></operator></expr>)<pos:position pos:line="15" pos:column="33"/></condition><then pos:line="15" pos:column="33">
        <block type="pseudo"><return pos:line="16" pos:column="9">return <expr><literal type="number" pos:line="16" pos:column="16">0<pos:position pos:line="16" pos:column="17"/></literal></expr>;<pos:position pos:line="16" pos:column="18"/></return></block></then></if>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><operator pos:line="18" pos:column="9">*<pos:position pos:line="18" pos:column="10"/></operator><name pos:line="18" pos:column="10">str<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">==<pos:position pos:line="18" pos:column="16"/></operator> <literal type="char" pos:line="18" pos:column="17">'*'<pos:position pos:line="18" pos:column="20"/></literal></expr>)<pos:position pos:line="18" pos:column="21"/></condition><then pos:line="18" pos:column="21">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="19" pos:column="9">range<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">spec<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">offset<pos:position pos:line="19" pos:column="27"/></name></name> <operator pos:line="19" pos:column="28">=<pos:position pos:line="19" pos:column="29"/></operator> <name><name pos:line="19" pos:column="30">range<pos:position pos:line="19" pos:column="35"/></name><operator pos:line="19" pos:column="35">-&gt;<pos:position pos:line="19" pos:column="40"/></operator><name pos:line="19" pos:column="37">spec<pos:position pos:line="19" pos:column="41"/></name><operator pos:line="19" pos:column="41">.<pos:position pos:line="19" pos:column="42"/></operator><name pos:line="19" pos:column="42">length<pos:position pos:line="19" pos:column="48"/></name></name> <operator pos:line="19" pos:column="49">=<pos:position pos:line="19" pos:column="50"/></operator> <name pos:line="19" pos:column="51">range_spec_unknown<pos:position pos:line="19" pos:column="69"/></name></expr>;<pos:position pos:line="19" pos:column="70"/></expr_stmt></block></then>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><operator pos:line="20" pos:column="14">!<pos:position pos:line="20" pos:column="15"/></operator><call><name pos:line="20" pos:column="15">httpHdrRangeRespSpecParseInit<pos:position pos:line="20" pos:column="44"/></name><argument_list pos:line="20" pos:column="44">(<argument><expr><operator pos:line="20" pos:column="45">&amp;<pos:position pos:line="20" pos:column="50"/></operator><name><name pos:line="20" pos:column="46">range<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">spec<pos:position pos:line="20" pos:column="57"/></name></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="59">str<pos:position pos:line="20" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="64">p<pos:position pos:line="20" pos:column="65"/></name> <operator pos:line="20" pos:column="66">-<pos:position pos:line="20" pos:column="67"/></operator> <name pos:line="20" pos:column="68">str<pos:position pos:line="20" pos:column="71"/></name></expr></argument>)<pos:position pos:line="20" pos:column="72"/></argument_list></call></expr>)<pos:position pos:line="20" pos:column="73"/></condition><then pos:line="20" pos:column="73">
        <block type="pseudo"><return pos:line="21" pos:column="9">return <expr><literal type="number" pos:line="21" pos:column="16">0<pos:position pos:line="21" pos:column="17"/></literal></expr>;<pos:position pos:line="21" pos:column="18"/></return></block></then></if></elseif></if>

    <expr_stmt><expr><name pos:line="23" pos:column="5">p<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">++<pos:position pos:line="23" pos:column="8"/></operator></expr>;<pos:position pos:line="23" pos:column="9"/></expr_stmt>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><operator pos:line="25" pos:column="9">*<pos:position pos:line="25" pos:column="10"/></operator><name pos:line="25" pos:column="10">p<pos:position pos:line="25" pos:column="11"/></name> <operator pos:line="25" pos:column="12">==<pos:position pos:line="25" pos:column="14"/></operator> <literal type="char" pos:line="25" pos:column="15">'*'<pos:position pos:line="25" pos:column="18"/></literal></expr>)<pos:position pos:line="25" pos:column="19"/></condition><then pos:line="25" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="26" pos:column="9">range<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">-&gt;<pos:position pos:line="26" pos:column="19"/></operator><name pos:line="26" pos:column="16">elength<pos:position pos:line="26" pos:column="23"/></name></name> <operator pos:line="26" pos:column="24">=<pos:position pos:line="26" pos:column="25"/></operator> <name pos:line="26" pos:column="26">range_spec_unknown<pos:position pos:line="26" pos:column="44"/></name></expr>;<pos:position pos:line="26" pos:column="45"/></expr_stmt></block></then>
    <elseif pos:line="27" pos:column="5">else <if pos:line="27" pos:column="10">if <condition pos:line="27" pos:column="13">(<expr><operator pos:line="27" pos:column="14">!<pos:position pos:line="27" pos:column="15"/></operator><call><name pos:line="27" pos:column="15">httpHeaderParseOffset<pos:position pos:line="27" pos:column="36"/></name><argument_list pos:line="27" pos:column="36">(<argument><expr><name pos:line="27" pos:column="37">p<pos:position pos:line="27" pos:column="38"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="40">&amp;<pos:position pos:line="27" pos:column="45"/></operator><name><name pos:line="27" pos:column="41">range<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">-&gt;<pos:position pos:line="27" pos:column="51"/></operator><name pos:line="27" pos:column="48">elength<pos:position pos:line="27" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="27" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="27" pos:column="57"/></condition><then pos:line="27" pos:column="57">
        <block type="pseudo"><return pos:line="28" pos:column="9">return <expr><literal type="number" pos:line="28" pos:column="16">0<pos:position pos:line="28" pos:column="17"/></literal></expr>;<pos:position pos:line="28" pos:column="18"/></return></block></then></if></elseif>
    <elseif pos:line="29" pos:column="5">else <if pos:line="29" pos:column="10">if <condition pos:line="29" pos:column="13">(<expr><name><name pos:line="29" pos:column="14">range<pos:position pos:line="29" pos:column="19"/></name><operator pos:line="29" pos:column="19">-&gt;<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="21">elength<pos:position pos:line="29" pos:column="28"/></name></name> <operator pos:line="29" pos:column="29">&lt;=<pos:position pos:line="29" pos:column="34"/></operator> <literal type="number" pos:line="29" pos:column="32">0<pos:position pos:line="29" pos:column="33"/></literal></expr>)<pos:position pos:line="29" pos:column="34"/></condition><then pos:line="29" pos:column="34"> <block pos:line="29" pos:column="35">{
        <comment type="block" pos:line="30" pos:column="9">/* Additional paranoidal check for BUG2155 - entity-length MUST be &gt; 0 */</comment>
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">debugs<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">68<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="20">2<pos:position pos:line="31" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">"invalid (entity-length is negative) content-range-spec near: '"<pos:position pos:line="31" pos:column="87"/></literal> <operator pos:line="31" pos:column="88">&lt;&lt;<pos:position pos:line="31" pos:column="96"/></operator> <name pos:line="31" pos:column="91">str<pos:position pos:line="31" pos:column="94"/></name> <operator pos:line="31" pos:column="95">&lt;&lt;<pos:position pos:line="31" pos:column="103"/></operator> <literal type="string" pos:line="31" pos:column="98">"'"<pos:position pos:line="31" pos:column="101"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="103"/></expr_stmt>
        <return pos:line="32" pos:column="9">return <expr><literal type="number" pos:line="32" pos:column="16">0<pos:position pos:line="32" pos:column="17"/></literal></expr>;<pos:position pos:line="32" pos:column="18"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if></elseif> <elseif pos:line="33" pos:column="7">else <if pos:line="33" pos:column="12">if <condition pos:line="33" pos:column="15">(<expr><call><name pos:line="33" pos:column="16">known_spec<pos:position pos:line="33" pos:column="26"/></name><argument_list pos:line="33" pos:column="26">(<argument><expr><name><name pos:line="33" pos:column="27">range<pos:position pos:line="33" pos:column="32"/></name><operator pos:line="33" pos:column="32">-&gt;<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="34">spec<pos:position pos:line="33" pos:column="38"/></name><operator pos:line="33" pos:column="38">.<pos:position pos:line="33" pos:column="39"/></operator><name pos:line="33" pos:column="39">length<pos:position pos:line="33" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="33" pos:column="46"/></argument_list></call> <operator pos:line="33" pos:column="47">&amp;&amp;<pos:position pos:line="33" pos:column="57"/></operator> <name><name pos:line="33" pos:column="50">range<pos:position pos:line="33" pos:column="55"/></name><operator pos:line="33" pos:column="55">-&gt;<pos:position pos:line="33" pos:column="60"/></operator><name pos:line="33" pos:column="57">elength<pos:position pos:line="33" pos:column="64"/></name></name> <operator pos:line="33" pos:column="65">&lt;<pos:position pos:line="33" pos:column="69"/></operator> <operator pos:line="33" pos:column="67">(<pos:position pos:line="33" pos:column="68"/></operator><name><name pos:line="33" pos:column="68">range<pos:position pos:line="33" pos:column="73"/></name><operator pos:line="33" pos:column="73">-&gt;<pos:position pos:line="33" pos:column="78"/></operator><name pos:line="33" pos:column="75">spec<pos:position pos:line="33" pos:column="79"/></name><operator pos:line="33" pos:column="79">.<pos:position pos:line="33" pos:column="80"/></operator><name pos:line="33" pos:column="80">offset<pos:position pos:line="33" pos:column="86"/></name></name> <operator pos:line="33" pos:column="87">+<pos:position pos:line="33" pos:column="88"/></operator> <name><name pos:line="33" pos:column="89">range<pos:position pos:line="33" pos:column="94"/></name><operator pos:line="33" pos:column="94">-&gt;<pos:position pos:line="33" pos:column="99"/></operator><name pos:line="33" pos:column="96">spec<pos:position pos:line="33" pos:column="100"/></name><operator pos:line="33" pos:column="100">.<pos:position pos:line="33" pos:column="101"/></operator><name pos:line="33" pos:column="101">length<pos:position pos:line="33" pos:column="107"/></name></name><operator pos:line="33" pos:column="107">)<pos:position pos:line="33" pos:column="108"/></operator></expr>)<pos:position pos:line="33" pos:column="109"/></condition><then pos:line="33" pos:column="109"> <block pos:line="33" pos:column="110">{
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">debugs<pos:position pos:line="34" pos:column="15"/></name><argument_list pos:line="34" pos:column="15">(<argument><expr><literal type="number" pos:line="34" pos:column="16">68<pos:position pos:line="34" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="34" pos:column="20">2<pos:position pos:line="34" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="34" pos:column="23">"invalid (range is outside entity-length) content-range-spec near: '"<pos:position pos:line="34" pos:column="92"/></literal> <operator pos:line="34" pos:column="93">&lt;&lt;<pos:position pos:line="34" pos:column="101"/></operator> <name pos:line="34" pos:column="96">str<pos:position pos:line="34" pos:column="99"/></name> <operator pos:line="34" pos:column="100">&lt;&lt;<pos:position pos:line="34" pos:column="108"/></operator> <literal type="string" pos:line="34" pos:column="103">"'"<pos:position pos:line="34" pos:column="106"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="107"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="108"/></expr_stmt>
        <return pos:line="35" pos:column="9">return <expr><literal type="number" pos:line="35" pos:column="16">0<pos:position pos:line="35" pos:column="17"/></literal></expr>;<pos:position pos:line="35" pos:column="18"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if></elseif></if>

    <expr_stmt><expr><call><name pos:line="38" pos:column="5">debugs<pos:position pos:line="38" pos:column="11"/></name><argument_list pos:line="38" pos:column="11">(<argument><expr><literal type="number" pos:line="38" pos:column="12">68<pos:position pos:line="38" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="38" pos:column="16">8<pos:position pos:line="38" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="38" pos:column="19">"parsed content-range field: "<pos:position pos:line="38" pos:column="49"/></literal> <operator pos:line="38" pos:column="50">&lt;&lt;<pos:position pos:line="38" pos:column="58"/></operator>
           <operator pos:line="39" pos:column="12">(<pos:position pos:line="39" pos:column="13"/></operator><name pos:line="39" pos:column="13">long<pos:position pos:line="39" pos:column="17"/></name> <name pos:line="39" pos:column="18">int<pos:position pos:line="39" pos:column="21"/></name><operator pos:line="39" pos:column="21">)<pos:position pos:line="39" pos:column="22"/></operator> <name><name pos:line="39" pos:column="23">range<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">spec<pos:position pos:line="39" pos:column="34"/></name><operator pos:line="39" pos:column="34">.<pos:position pos:line="39" pos:column="35"/></operator><name pos:line="39" pos:column="35">offset<pos:position pos:line="39" pos:column="41"/></name></name> <operator pos:line="39" pos:column="42">&lt;&lt;<pos:position pos:line="39" pos:column="50"/></operator> <literal type="string" pos:line="39" pos:column="45">"-"<pos:position pos:line="39" pos:column="48"/></literal> <operator pos:line="39" pos:column="49">&lt;&lt;<pos:position pos:line="39" pos:column="57"/></operator>
           <operator pos:line="40" pos:column="12">(<pos:position pos:line="40" pos:column="13"/></operator><name pos:line="40" pos:column="13">long<pos:position pos:line="40" pos:column="17"/></name> <name pos:line="40" pos:column="18">int<pos:position pos:line="40" pos:column="21"/></name><operator pos:line="40" pos:column="21">)<pos:position pos:line="40" pos:column="22"/></operator> <name><name pos:line="40" pos:column="23">range<pos:position pos:line="40" pos:column="28"/></name><operator pos:line="40" pos:column="28">-&gt;<pos:position pos:line="40" pos:column="33"/></operator><name pos:line="40" pos:column="30">spec<pos:position pos:line="40" pos:column="34"/></name><operator pos:line="40" pos:column="34">.<pos:position pos:line="40" pos:column="35"/></operator><name pos:line="40" pos:column="35">offset<pos:position pos:line="40" pos:column="41"/></name></name> <operator pos:line="40" pos:column="42">+<pos:position pos:line="40" pos:column="43"/></operator> <name><name pos:line="40" pos:column="44">range<pos:position pos:line="40" pos:column="49"/></name><operator pos:line="40" pos:column="49">-&gt;<pos:position pos:line="40" pos:column="54"/></operator><name pos:line="40" pos:column="51">spec<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">.<pos:position pos:line="40" pos:column="56"/></operator><name pos:line="40" pos:column="56">length<pos:position pos:line="40" pos:column="62"/></name></name> <operator pos:line="40" pos:column="63">-<pos:position pos:line="40" pos:column="64"/></operator> <literal type="number" pos:line="40" pos:column="65">1<pos:position pos:line="40" pos:column="66"/></literal> <operator pos:line="40" pos:column="67">&lt;&lt;<pos:position pos:line="40" pos:column="75"/></operator> <literal type="string" pos:line="40" pos:column="70">" / "<pos:position pos:line="40" pos:column="75"/></literal> <operator pos:line="40" pos:column="76">&lt;&lt;<pos:position pos:line="40" pos:column="84"/></operator>
           <operator pos:line="41" pos:column="12">(<pos:position pos:line="41" pos:column="13"/></operator><name pos:line="41" pos:column="13">long<pos:position pos:line="41" pos:column="17"/></name> <name pos:line="41" pos:column="18">int<pos:position pos:line="41" pos:column="21"/></name><operator pos:line="41" pos:column="21">)<pos:position pos:line="41" pos:column="22"/></operator> <name><name pos:line="41" pos:column="23">range<pos:position pos:line="41" pos:column="28"/></name><operator pos:line="41" pos:column="28">-&gt;<pos:position pos:line="41" pos:column="33"/></operator><name pos:line="41" pos:column="30">elength<pos:position pos:line="41" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="39"/></expr_stmt>

    <return pos:line="43" pos:column="5">return <expr><literal type="number" pos:line="43" pos:column="12">1<pos:position pos:line="43" pos:column="13"/></literal></expr>;<pos:position pos:line="43" pos:column="14"/></return>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

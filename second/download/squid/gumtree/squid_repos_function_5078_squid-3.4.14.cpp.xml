<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5078_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ACLIdent<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">parse<pos:position pos:line="2" pos:column="16"/></name></name><parameter_list pos:line="2" pos:column="16">()<pos:position pos:line="2" pos:column="18"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">data<pos:position pos:line="4" pos:column="14"/></name></expr>)<pos:position pos:line="4" pos:column="15"/></condition><then pos:line="4" pos:column="15"> <block pos:line="4" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">28<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">3<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">HERE<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">&lt;&lt;<pos:position pos:line="5" pos:column="36"/></operator> <literal type="string" pos:line="5" pos:column="31">"current is null. Creating"<pos:position pos:line="5" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><name pos:line="6" pos:column="9">data<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">=<pos:position pos:line="6" pos:column="15"/></operator> <operator pos:line="6" pos:column="16">new<pos:position pos:line="6" pos:column="19"/></operator> <name pos:line="6" pos:column="20">ACLUserData<pos:position pos:line="6" pos:column="31"/></name></expr>;<pos:position pos:line="6" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">data<pos:position pos:line="9" pos:column="9"/></name><operator pos:line="9" pos:column="9">-&gt;<pos:position pos:line="9" pos:column="14"/></operator><name pos:line="9" pos:column="11">parse<pos:position pos:line="9" pos:column="16"/></name></name><argument_list pos:line="9" pos:column="16">()<pos:position pos:line="9" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="19"/></expr_stmt>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

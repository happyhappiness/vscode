<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1729_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">DelayIdComposite<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">Pointer<pos:position pos:line="1" pos:column="26"/></name></name></type>
<name><name pos:line="2" pos:column="1">ClassCHostPool<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">id<pos:position pos:line="2" pos:column="19"/></name></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">CompositeSelectionDetails<pos:position pos:line="2" pos:column="45"/></name> <modifier pos:line="2" pos:column="46">&amp;<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="47">details<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">rate<pos:position pos:line="4" pos:column="13"/></name><argument_list pos:line="4" pos:column="13">()<pos:position pos:line="4" pos:column="15"/></argument_list></call><operator pos:line="4" pos:column="15">-&gt;<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="17">restore_bps<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">==<pos:position pos:line="4" pos:column="31"/></operator> <operator pos:line="4" pos:column="32">-<pos:position pos:line="4" pos:column="33"/></operator><literal type="number" pos:line="4" pos:column="33">1<pos:position pos:line="4" pos:column="34"/></literal></expr>)<pos:position pos:line="4" pos:column="35"/></condition><then pos:line="4" pos:column="35">
        <block type="pseudo"><return pos:line="5" pos:column="9">return <expr><operator pos:line="5" pos:column="16">new<pos:position pos:line="5" pos:column="19"/></operator> <name pos:line="5" pos:column="20">NullDelayId<pos:position pos:line="5" pos:column="31"/></name></expr>;<pos:position pos:line="5" pos:column="32"/></return></block></then></if>

    <comment type="block" pos:line="7" pos:column="5">/* non-IPv4 are not able to provide IPv4-bitmask for this pool type key. */</comment>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">( <expr><operator pos:line="8" pos:column="10">!<pos:position pos:line="8" pos:column="11"/></operator><call><name><name pos:line="8" pos:column="11">details<pos:position pos:line="8" pos:column="18"/></name><operator pos:line="8" pos:column="18">.<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="19">src_addr<pos:position pos:line="8" pos:column="27"/></name><operator pos:line="8" pos:column="27">.<pos:position pos:line="8" pos:column="28"/></operator><name pos:line="8" pos:column="28">isIPv4<pos:position pos:line="8" pos:column="34"/></name></name><argument_list pos:line="8" pos:column="34">()<pos:position pos:line="8" pos:column="36"/></argument_list></call></expr> )<pos:position pos:line="8" pos:column="38"/></condition><then pos:line="8" pos:column="38">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><operator pos:line="9" pos:column="16">new<pos:position pos:line="9" pos:column="19"/></operator> <name pos:line="9" pos:column="20">NullDelayId<pos:position pos:line="9" pos:column="31"/></name></expr>;<pos:position pos:line="9" pos:column="32"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="11" pos:column="5">unsigned<pos:position pos:line="11" pos:column="13"/></name> <name pos:line="11" pos:column="14">int<pos:position pos:line="11" pos:column="17"/></name></type> <name pos:line="11" pos:column="18">key<pos:position pos:line="11" pos:column="21"/></name> <init pos:line="11" pos:column="22">= <expr><call><name pos:line="11" pos:column="24">makeKey<pos:position pos:line="11" pos:column="31"/></name> <argument_list pos:line="11" pos:column="32">(<argument><expr><name><name pos:line="11" pos:column="33">details<pos:position pos:line="11" pos:column="40"/></name><operator pos:line="11" pos:column="40">.<pos:position pos:line="11" pos:column="41"/></operator><name pos:line="11" pos:column="41">src_addr<pos:position pos:line="11" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="51"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">unsigned<pos:position pos:line="13" pos:column="13"/></name> <name pos:line="13" pos:column="14">char<pos:position pos:line="13" pos:column="18"/></name></type> <name pos:line="13" pos:column="19">host<pos:position pos:line="13" pos:column="23"/></name> <init pos:line="13" pos:column="24">= <expr><call><name pos:line="13" pos:column="26">makeHostKey<pos:position pos:line="13" pos:column="37"/></name> <argument_list pos:line="13" pos:column="38">(<argument><expr><name><name pos:line="13" pos:column="39">details<pos:position pos:line="13" pos:column="46"/></name><operator pos:line="13" pos:column="46">.<pos:position pos:line="13" pos:column="47"/></operator><name pos:line="13" pos:column="47">src_addr<pos:position pos:line="13" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="57"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="15" pos:column="5">unsigned<pos:position pos:line="15" pos:column="13"/></name> <name pos:line="15" pos:column="14">char<pos:position pos:line="15" pos:column="18"/></name></type> <name pos:line="15" pos:column="19">hostIndex<pos:position pos:line="15" pos:column="28"/></name></decl>;<pos:position pos:line="15" pos:column="29"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="17" pos:column="5">unsigned<pos:position pos:line="17" pos:column="13"/></name> <name pos:line="17" pos:column="14">char<pos:position pos:line="17" pos:column="18"/></name></type> <name pos:line="17" pos:column="19">netIndex<pos:position pos:line="17" pos:column="27"/></name></decl>;<pos:position pos:line="17" pos:column="28"/></decl_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><call><name pos:line="19" pos:column="9">keyAllocated<pos:position pos:line="19" pos:column="21"/></name> <argument_list pos:line="19" pos:column="22">(<argument><expr><name pos:line="19" pos:column="23">key<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="19" pos:column="28"/></condition><then pos:line="19" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="9">netIndex<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <call><name><name pos:line="20" pos:column="20">buckets<pos:position pos:line="20" pos:column="27"/></name><operator pos:line="20" pos:column="27">.<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">findKeyIndex<pos:position pos:line="20" pos:column="40"/></name></name><argument_list pos:line="20" pos:column="40">(<argument><expr><name pos:line="20" pos:column="41">key<pos:position pos:line="20" pos:column="44"/></name></expr></argument>)<pos:position pos:line="20" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="46"/></expr_stmt></block></then>
    <else pos:line="21" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="22" pos:column="9">netIndex<pos:position pos:line="22" pos:column="17"/></name> <operator pos:line="22" pos:column="18">=<pos:position pos:line="22" pos:column="19"/></operator> <call><name><name pos:line="22" pos:column="20">buckets<pos:position pos:line="22" pos:column="27"/></name><operator pos:line="22" pos:column="27">.<pos:position pos:line="22" pos:column="28"/></operator><name pos:line="22" pos:column="28">insert<pos:position pos:line="22" pos:column="34"/></name></name> <argument_list pos:line="22" pos:column="35">(<argument><expr><name pos:line="22" pos:column="36">key<pos:position pos:line="22" pos:column="39"/></name></expr></argument>)<pos:position pos:line="22" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="41"/></expr_stmt></block></else></if>

    <expr_stmt><expr><name pos:line="24" pos:column="5">hostIndex<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <name><name pos:line="24" pos:column="17">buckets<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">.<pos:position pos:line="24" pos:column="25"/></operator><name pos:line="24" pos:column="25">values<pos:position pos:line="24" pos:column="31"/></name><index pos:line="24" pos:column="31">[<expr><name pos:line="24" pos:column="32">netIndex<pos:position pos:line="24" pos:column="40"/></name></expr>]<pos:position pos:line="24" pos:column="41"/></index></name><operator pos:line="24" pos:column="41">.<pos:position pos:line="24" pos:column="42"/></operator><call><name pos:line="24" pos:column="42">hostPosition<pos:position pos:line="24" pos:column="54"/></name> <argument_list pos:line="24" pos:column="55">(<argument><expr><operator pos:line="24" pos:column="56">*<pos:position pos:line="24" pos:column="57"/></operator><call><name pos:line="24" pos:column="57">rate<pos:position pos:line="24" pos:column="61"/></name><argument_list pos:line="24" pos:column="61">()<pos:position pos:line="24" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="24" pos:column="65">host<pos:position pos:line="24" pos:column="69"/></name></expr></argument>)<pos:position pos:line="24" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="71"/></expr_stmt>

    <return pos:line="26" pos:column="5">return <expr><operator pos:line="26" pos:column="12">new<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">Id<pos:position pos:line="26" pos:column="18"/></name> <argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">this<pos:position pos:line="26" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="26">netIndex<pos:position pos:line="26" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="36">hostIndex<pos:position pos:line="26" pos:column="45"/></name></expr></argument>)<pos:position pos:line="26" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="47"/></return>
}<pos:position pos:line="27" pos:column="2"/></block></function></unit>

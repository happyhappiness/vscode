<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2155_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">htcpHandleTstRequest<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">htcpDataHeader<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">dhdr<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">buf<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="56">int<pos:position pos:line="2" pos:column="59"/></name></type> <name pos:line="2" pos:column="60">sz<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="64">Ip<pos:position pos:line="2" pos:column="66"/></name><operator pos:line="2" pos:column="66">::<pos:position pos:line="2" pos:column="68"/></operator><name pos:line="2" pos:column="68">Address<pos:position pos:line="2" pos:column="75"/></name></name> <modifier pos:line="2" pos:column="76">&amp;<pos:position pos:line="2" pos:column="81"/></modifier></type><name pos:line="2" pos:column="77">from<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="82"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">sz<pos:position pos:line="4" pos:column="11"/></name> <operator pos:line="4" pos:column="12">==<pos:position pos:line="4" pos:column="14"/></operator> <literal type="number" pos:line="4" pos:column="15">0<pos:position pos:line="4" pos:column="16"/></literal></expr>)<pos:position pos:line="4" pos:column="17"/></condition><then pos:line="4" pos:column="17"> <block pos:line="4" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">31<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">3<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="23">"htcpHandleTst: nothing to do"<pos:position pos:line="5" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="55"/></expr_stmt>
        <return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">dhdr<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">F1<pos:position pos:line="9" pos:column="17"/></name></name> <operator pos:line="9" pos:column="18">==<pos:position pos:line="9" pos:column="20"/></operator> <literal type="number" pos:line="9" pos:column="21">0<pos:position pos:line="9" pos:column="22"/></literal></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23">
        <block type="pseudo"><return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return></block></then></if>

    <comment type="block" pos:line="12" pos:column="5">/* buf should be a SPECIFIER */</comment>
    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">htcpSpecifier<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">::<pos:position pos:line="13" pos:column="20"/></operator><name pos:line="13" pos:column="20">Pointer<pos:position pos:line="13" pos:column="27"/></name></name></type> <name pos:line="13" pos:column="28">s<pos:position pos:line="13" pos:column="29"/></name><argument_list pos:line="13" pos:column="29">(<argument><expr><call><name pos:line="13" pos:column="30">htcpUnpackSpecifier<pos:position pos:line="13" pos:column="49"/></name><argument_list pos:line="13" pos:column="49">(<argument><expr><name pos:line="13" pos:column="50">buf<pos:position pos:line="13" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="55">sz<pos:position pos:line="13" pos:column="57"/></name></expr></argument>)<pos:position pos:line="13" pos:column="58"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="59"/></argument_list></decl>;<pos:position pos:line="13" pos:column="60"/></decl_stmt>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><operator pos:line="15" pos:column="9">!<pos:position pos:line="15" pos:column="10"/></operator><name pos:line="15" pos:column="10">s<pos:position pos:line="15" pos:column="11"/></name></expr>)<pos:position pos:line="15" pos:column="12"/></condition><then pos:line="15" pos:column="12"> <block pos:line="15" pos:column="13">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">31<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">3<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="23">"htcpHandleTstRequest: htcpUnpackSpecifier failed"<pos:position pos:line="16" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">htcpLogHtcp<pos:position pos:line="17" pos:column="20"/></name><argument_list pos:line="17" pos:column="20">(<argument><expr><name pos:line="17" pos:column="21">from<pos:position pos:line="17" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="27">dhdr<pos:position pos:line="17" pos:column="31"/></name><operator pos:line="17" pos:column="31">-&gt;<pos:position pos:line="17" pos:column="36"/></operator><name pos:line="17" pos:column="33">opcode<pos:position pos:line="17" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="41">LOG_UDP_INVALID<pos:position pos:line="17" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="58">dash_str<pos:position pos:line="17" pos:column="66"/></name></expr></argument>)<pos:position pos:line="17" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="68"/></expr_stmt>
        <return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then> <else pos:line="19" pos:column="7">else <block pos:line="19" pos:column="12">{
        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">s<pos:position pos:line="20" pos:column="10"/></name><operator pos:line="20" pos:column="10">-&gt;<pos:position pos:line="20" pos:column="15"/></operator><name pos:line="20" pos:column="12">setFrom<pos:position pos:line="20" pos:column="19"/></name></name><argument_list pos:line="20" pos:column="19">(<argument><expr><name pos:line="20" pos:column="20">from<pos:position pos:line="20" pos:column="24"/></name></expr></argument>)<pos:position pos:line="20" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="26"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="21" pos:column="9">s<pos:position pos:line="21" pos:column="10"/></name><operator pos:line="21" pos:column="10">-&gt;<pos:position pos:line="21" pos:column="15"/></operator><name pos:line="21" pos:column="12">setDataHeader<pos:position pos:line="21" pos:column="25"/></name></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">dhdr<pos:position pos:line="21" pos:column="30"/></name></expr></argument>)<pos:position pos:line="21" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="22" pos:column="6"/></block></else></if>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">!<pos:position pos:line="24" pos:column="10"/></operator><name><name pos:line="24" pos:column="10">s<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">-&gt;<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="13">request<pos:position pos:line="24" pos:column="20"/></name></name></expr>)<pos:position pos:line="24" pos:column="21"/></condition><then pos:line="24" pos:column="21"> <block pos:line="24" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">debugs<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><literal type="number" pos:line="25" pos:column="16">31<pos:position pos:line="25" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="25" pos:column="20">3<pos:position pos:line="25" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="23">"htcpHandleTstRequest: failed to parse request"<pos:position pos:line="25" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">htcpLogHtcp<pos:position pos:line="26" pos:column="20"/></name><argument_list pos:line="26" pos:column="20">(<argument><expr><name pos:line="26" pos:column="21">from<pos:position pos:line="26" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="26" pos:column="27">dhdr<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="33">opcode<pos:position pos:line="26" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="41">LOG_UDP_INVALID<pos:position pos:line="26" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="58">dash_str<pos:position pos:line="26" pos:column="66"/></name></expr></argument>)<pos:position pos:line="26" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="68"/></expr_stmt>
        <return pos:line="27" pos:column="9">return;<pos:position pos:line="27" pos:column="16"/></return>
    }<pos:position pos:line="28" pos:column="6"/></block></then></if>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><operator pos:line="30" pos:column="9">!<pos:position pos:line="30" pos:column="10"/></operator><call><name pos:line="30" pos:column="10">htcpAccessAllowed<pos:position pos:line="30" pos:column="27"/></name><argument_list pos:line="30" pos:column="27">(<argument><expr><name><name pos:line="30" pos:column="28">Config<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">.<pos:position pos:line="30" pos:column="35"/></operator><name pos:line="30" pos:column="35">accessList<pos:position pos:line="30" pos:column="45"/></name><operator pos:line="30" pos:column="45">.<pos:position pos:line="30" pos:column="46"/></operator><name pos:line="30" pos:column="46">htcp<pos:position pos:line="30" pos:column="50"/></name></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="52">s<pos:position pos:line="30" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="55">from<pos:position pos:line="30" pos:column="59"/></name></expr></argument>)<pos:position pos:line="30" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="30" pos:column="61"/></condition><then pos:line="30" pos:column="61"> <block pos:line="30" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="31" pos:column="9">debugs<pos:position pos:line="31" pos:column="15"/></name><argument_list pos:line="31" pos:column="15">(<argument><expr><literal type="number" pos:line="31" pos:column="16">31<pos:position pos:line="31" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="31" pos:column="20">3<pos:position pos:line="31" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="31" pos:column="23">"htcpHandleTstRequest: Access denied"<pos:position pos:line="31" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="32" pos:column="9">htcpLogHtcp<pos:position pos:line="32" pos:column="20"/></name><argument_list pos:line="32" pos:column="20">(<argument><expr><name pos:line="32" pos:column="21">from<pos:position pos:line="32" pos:column="25"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="27">dhdr<pos:position pos:line="32" pos:column="31"/></name><operator pos:line="32" pos:column="31">-&gt;<pos:position pos:line="32" pos:column="36"/></operator><name pos:line="32" pos:column="33">opcode<pos:position pos:line="32" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="41">LOG_UDP_DENIED<pos:position pos:line="32" pos:column="55"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="57">s<pos:position pos:line="32" pos:column="58"/></name><operator pos:line="32" pos:column="58">-&gt;<pos:position pos:line="32" pos:column="63"/></operator><name pos:line="32" pos:column="60">uri<pos:position pos:line="32" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="65"/></expr_stmt>
        <return pos:line="33" pos:column="9">return;<pos:position pos:line="33" pos:column="16"/></return>
    }<pos:position pos:line="34" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="36" pos:column="5">debugs<pos:position pos:line="36" pos:column="11"/></name><argument_list pos:line="36" pos:column="11">(<argument><expr><literal type="number" pos:line="36" pos:column="12">31<pos:position pos:line="36" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="36" pos:column="16">2<pos:position pos:line="36" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="36" pos:column="19">"HTCP TST request: "<pos:position pos:line="36" pos:column="39"/></literal> <operator pos:line="36" pos:column="40">&lt;&lt;<pos:position pos:line="36" pos:column="48"/></operator> <name><name pos:line="36" pos:column="43">s<pos:position pos:line="36" pos:column="44"/></name><operator pos:line="36" pos:column="44">-&gt;<pos:position pos:line="36" pos:column="49"/></operator><name pos:line="36" pos:column="46">method<pos:position pos:line="36" pos:column="52"/></name></name> <operator pos:line="36" pos:column="53">&lt;&lt;<pos:position pos:line="36" pos:column="61"/></operator> <literal type="string" pos:line="36" pos:column="56">" "<pos:position pos:line="36" pos:column="59"/></literal> <operator pos:line="36" pos:column="60">&lt;&lt;<pos:position pos:line="36" pos:column="68"/></operator> <name><name pos:line="36" pos:column="63">s<pos:position pos:line="36" pos:column="64"/></name><operator pos:line="36" pos:column="64">-&gt;<pos:position pos:line="36" pos:column="69"/></operator><name pos:line="36" pos:column="66">uri<pos:position pos:line="36" pos:column="69"/></name></name> <operator pos:line="36" pos:column="70">&lt;&lt;<pos:position pos:line="36" pos:column="78"/></operator> <literal type="string" pos:line="36" pos:column="73">" "<pos:position pos:line="36" pos:column="76"/></literal> <operator pos:line="36" pos:column="77">&lt;&lt;<pos:position pos:line="36" pos:column="85"/></operator> <name><name pos:line="36" pos:column="80">s<pos:position pos:line="36" pos:column="81"/></name><operator pos:line="36" pos:column="81">-&gt;<pos:position pos:line="36" pos:column="86"/></operator><name pos:line="36" pos:column="83">version<pos:position pos:line="36" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="36" pos:column="91"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="92"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="37" pos:column="5">debugs<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="number" pos:line="37" pos:column="12">31<pos:position pos:line="37" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="16">2<pos:position pos:line="37" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="19">"HTCP TST headers: "<pos:position pos:line="37" pos:column="39"/></literal> <operator pos:line="37" pos:column="40">&lt;&lt;<pos:position pos:line="37" pos:column="48"/></operator> <name><name pos:line="37" pos:column="43">s<pos:position pos:line="37" pos:column="44"/></name><operator pos:line="37" pos:column="44">-&gt;<pos:position pos:line="37" pos:column="49"/></operator><name pos:line="37" pos:column="46">req_hdrs<pos:position pos:line="37" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="38" pos:column="5">s<pos:position pos:line="38" pos:column="6"/></name><operator pos:line="38" pos:column="6">-&gt;<pos:position pos:line="38" pos:column="11"/></operator><name pos:line="38" pos:column="8">checkHit<pos:position pos:line="38" pos:column="16"/></name></name><argument_list pos:line="38" pos:column="16">()<pos:position pos:line="38" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="19"/></expr_stmt>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

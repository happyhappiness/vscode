<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1919_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">BodyPipe<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">expectNoConsumption<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">()<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><operator pos:line="4" pos:column="10">!<pos:position pos:line="4" pos:column="11"/></operator><name pos:line="4" pos:column="11">theConsumer<pos:position pos:line="4" pos:column="22"/></name></expr></argument>)<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><name pos:line="5" pos:column="10">abortedConsumption<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">&amp;&amp;<pos:position pos:line="5" pos:column="39"/></operator> <operator pos:line="5" pos:column="32">!<pos:position pos:line="5" pos:column="33"/></operator><call><name pos:line="5" pos:column="33">exhausted<pos:position pos:line="5" pos:column="42"/></name><argument_list pos:line="5" pos:column="42">()<pos:position pos:line="5" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="45"/></condition><then pos:line="5" pos:column="45"> <block pos:line="5" pos:column="46">{
        <decl_stmt><decl><type><name><name pos:line="6" pos:column="9">AsyncCall<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">::<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="20">Pointer<pos:position pos:line="6" pos:column="27"/></name></name></type> <name pos:line="6" pos:column="28">call<pos:position pos:line="6" pos:column="32"/></name><init pos:line="6" pos:column="32">= <expr><call><name pos:line="6" pos:column="34">asyncCall<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><literal type="number" pos:line="6" pos:column="44">91<pos:position pos:line="6" pos:column="46"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="48">7<pos:position pos:line="6" pos:column="49"/></literal></expr></argument>,
                                           <argument><expr><literal type="string" pos:line="7" pos:column="44">"BodyProducer::noteBodyConsumerAborted"<pos:position pos:line="7" pos:column="83"/></literal></expr></argument>,
                                           <argument><expr><call><name pos:line="8" pos:column="44">BodyProducerDialer<pos:position pos:line="8" pos:column="62"/></name><argument_list pos:line="8" pos:column="62">(<argument><expr><name pos:line="8" pos:column="63">theProducer<pos:position pos:line="8" pos:column="74"/></name></expr></argument>,
                                                              <argument><expr><operator pos:line="9" pos:column="63">&amp;<pos:position pos:line="9" pos:column="68"/></operator><name><name pos:line="9" pos:column="64">BodyProducer<pos:position pos:line="9" pos:column="76"/></name><operator pos:line="9" pos:column="76">::<pos:position pos:line="9" pos:column="78"/></operator><name pos:line="9" pos:column="78">noteBodyConsumerAborted<pos:position pos:line="9" pos:column="101"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="103">this<pos:position pos:line="9" pos:column="107"/></name></expr></argument>)<pos:position pos:line="9" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="109"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="110"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">ScheduleCallHere<pos:position pos:line="10" pos:column="25"/></name><argument_list pos:line="10" pos:column="25">(<argument><expr><name pos:line="10" pos:column="26">call<pos:position pos:line="10" pos:column="30"/></name></expr></argument>)<pos:position pos:line="10" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">abortedConsumption<pos:position pos:line="11" pos:column="27"/></name> <operator pos:line="11" pos:column="28">=<pos:position pos:line="11" pos:column="29"/></operator> <literal type="boolean" pos:line="11" pos:column="30">true<pos:position pos:line="11" pos:column="34"/></literal></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

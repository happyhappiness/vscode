<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6974_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">char<pos:position pos:line="1" pos:column="12"/></name> <modifier pos:line="1" pos:column="13">*<pos:position pos:line="1" pos:column="14"/></modifier></type>
<name pos:line="2" pos:column="1">_tmpnam<pos:position pos:line="2" pos:column="8"/></name><parameter_list pos:line="2" pos:column="8">(<parameter><decl><type><name pos:line="2" pos:column="9">void<pos:position pos:line="2" pos:column="13"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="14"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><specifier pos:line="4" pos:column="5">static<pos:position pos:line="4" pos:column="11"/></specifier> <type><specifier pos:line="4" pos:column="12">const<pos:position pos:line="4" pos:column="17"/></specifier> <name pos:line="4" pos:column="18">char<pos:position pos:line="4" pos:column="22"/></name></type> <name><name pos:line="4" pos:column="23">digits<pos:position pos:line="4" pos:column="29"/></name><index pos:line="4" pos:column="29">[]<pos:position pos:line="4" pos:column="31"/></index></name> <init pos:line="4" pos:column="32">=
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><operator pos:line="5" pos:column="5">(<pos:position pos:line="5" pos:column="6"/></operator><name pos:line="5" pos:column="6">L_tmpnam<pos:position pos:line="5" pos:column="14"/></name> <operator pos:line="5" pos:column="15">&gt;=<pos:position pos:line="5" pos:column="20"/></operator> <name pos:line="5" pos:column="18">L_tmpmin<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">+<pos:position pos:line="5" pos:column="28"/></operator> <name pos:line="5" pos:column="29">LONG_BIT<pos:position pos:line="5" pos:column="37"/></name> <operator pos:line="5" pos:column="38">/<pos:position pos:line="5" pos:column="39"/></operator> <literal type="number" pos:line="5" pos:column="40">4<pos:position pos:line="5" pos:column="41"/></literal><operator pos:line="5" pos:column="41">)<pos:position pos:line="5" pos:column="42"/></operator></expr></cpp:if>
        <expr><literal type="string" pos:line="6" pos:column="9">"0123456789abcdef"<pos:position pos:line="6" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>
<cpp:define pos:line="7" pos:column="1">#<cpp:directive pos:line="7" pos:column="2">define<pos:position pos:line="7" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="7" pos:column="9">TMP_BASE<pos:position pos:line="7" pos:column="17"/></name></cpp:macro>	<cpp:value pos:line="7" pos:column="25">16<pos:position pos:line="7" pos:column="27"/></cpp:value></cpp:define>
<cpp:else pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">else<pos:position pos:line="8" pos:column="6"/></cpp:directive></cpp:else>
        <expr_stmt><expr><literal type="string" pos:line="9" pos:column="9">"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-"<pos:position pos:line="9" pos:column="75"/></literal></expr>;<pos:position pos:line="9" pos:column="76"/></expr_stmt>
<cpp:define pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">define<pos:position pos:line="10" pos:column="8"/></cpp:directive> <cpp:macro><name pos:line="10" pos:column="9">TMP_BASE<pos:position pos:line="10" pos:column="17"/></name></cpp:macro>	<cpp:value pos:line="10" pos:column="25">64<pos:position pos:line="10" pos:column="27"/></cpp:value></cpp:define>
<cpp:endif pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">endif<pos:position pos:line="11" pos:column="7"/></cpp:directive></cpp:endif>
    <decl_stmt><decl><specifier pos:line="12" pos:column="5">static<pos:position pos:line="12" pos:column="11"/></specifier> <type><name pos:line="12" pos:column="12">unsigned<pos:position pos:line="12" pos:column="20"/></name> <name pos:line="12" pos:column="21">long<pos:position pos:line="12" pos:column="25"/></name></type> <name pos:line="12" pos:column="26">lastcount<pos:position pos:line="12" pos:column="35"/></name> <init pos:line="12" pos:column="36">= <expr><literal type="number" pos:line="12" pos:column="38">0<pos:position pos:line="12" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="40"/></decl_stmt>
    <decl_stmt><decl><specifier pos:line="13" pos:column="5">static<pos:position pos:line="13" pos:column="11"/></specifier> <type><name pos:line="13" pos:column="12">char<pos:position pos:line="13" pos:column="16"/></name></type> <name><name pos:line="13" pos:column="17">buffer<pos:position pos:line="13" pos:column="23"/></name><index pos:line="13" pos:column="23">[<expr><name pos:line="13" pos:column="24">L_tmpnam<pos:position pos:line="13" pos:column="32"/></name> <operator pos:line="13" pos:column="33">+<pos:position pos:line="13" pos:column="34"/></operator> <literal type="number" pos:line="13" pos:column="35">1<pos:position pos:line="13" pos:column="36"/></literal></expr>]<pos:position pos:line="13" pos:column="37"/></index></name></decl>;<pos:position pos:line="13" pos:column="38"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name> <modifier pos:line="14" pos:column="10">*<pos:position pos:line="14" pos:column="11"/></modifier></type><name pos:line="14" pos:column="11">s<pos:position pos:line="14" pos:column="12"/></name> <init pos:line="14" pos:column="13">= <expr><name pos:line="14" pos:column="15">buffer<pos:position pos:line="14" pos:column="21"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">unsigned<pos:position pos:line="15" pos:column="13"/></name> <name pos:line="15" pos:column="14">long<pos:position pos:line="15" pos:column="18"/></name></type> <name pos:line="15" pos:column="19">count<pos:position pos:line="15" pos:column="24"/></name> <init pos:line="15" pos:column="25">= <expr><name pos:line="15" pos:column="27">lastcount<pos:position pos:line="15" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="15" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">pid_t<pos:position pos:line="16" pos:column="10"/></name></type> <name pos:line="16" pos:column="11">pid<pos:position pos:line="16" pos:column="14"/></name> <init pos:line="16" pos:column="15">= <expr><call><name pos:line="16" pos:column="17">getpid<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">()<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="26"/></decl_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><sizeof pos:line="18" pos:column="9">sizeof<argument_list pos:line="18" pos:column="15">(<argument><expr><name pos:line="18" pos:column="16">_tmp<pos:position pos:line="18" pos:column="20"/></name></expr></argument>)<pos:position pos:line="18" pos:column="21"/></argument_list></sizeof> <operator pos:line="18" pos:column="22">-<pos:position pos:line="18" pos:column="23"/></operator> <literal type="number" pos:line="18" pos:column="24">1<pos:position pos:line="18" pos:column="25"/></literal> <operator pos:line="18" pos:column="26">!=<pos:position pos:line="18" pos:column="28"/></operator> <name pos:line="18" pos:column="29">lengthof_tmp<pos:position pos:line="18" pos:column="41"/></name></expr>)<pos:position pos:line="18" pos:column="42"/></condition><then pos:line="18" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="19" pos:column="9">abort<pos:position pos:line="19" pos:column="14"/></name><argument_list pos:line="19" pos:column="14">()<pos:position pos:line="19" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt></block></then></if>		<comment type="block" pos:line="19" pos:column="33">/* Consistency error. */</comment>

    <for pos:line="21" pos:column="5">for <control pos:line="21" pos:column="9">(<init pos:line="21" pos:column="10">;<pos:position pos:line="21" pos:column="11"/></init><condition pos:line="21" pos:column="11">;<pos:position pos:line="21" pos:column="12"/></condition><incr/>)<pos:position pos:line="21" pos:column="13"/></control> <block pos:line="21" pos:column="14">{
        <decl_stmt><decl><type><specifier pos:line="22" pos:column="9">register<pos:position pos:line="22" pos:column="17"/></specifier> <name pos:line="22" pos:column="18">int<pos:position pos:line="22" pos:column="21"/></name></type> <name pos:line="22" pos:column="22">i<pos:position pos:line="22" pos:column="23"/></name> <init pos:line="22" pos:column="24">= <expr><name pos:line="22" pos:column="26">L_tmpnam<pos:position pos:line="22" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="35"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="23" pos:column="9">register<pos:position pos:line="23" pos:column="17"/></specifier> <name pos:line="23" pos:column="18">unsigned<pos:position pos:line="23" pos:column="26"/></name> <name pos:line="23" pos:column="27">long<pos:position pos:line="23" pos:column="31"/></name></type> <name pos:line="23" pos:column="32">c<pos:position pos:line="23" pos:column="33"/></name></decl>;<pos:position pos:line="23" pos:column="34"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="24" pos:column="9">register<pos:position pos:line="24" pos:column="17"/></specifier> <name pos:line="24" pos:column="18">unsigned<pos:position pos:line="24" pos:column="26"/></name> <name pos:line="24" pos:column="27">int<pos:position pos:line="24" pos:column="30"/></name></type> <name pos:line="24" pos:column="31">p<pos:position pos:line="24" pos:column="32"/></name></decl>;<pos:position pos:line="24" pos:column="33"/></decl_stmt>

        <comment type="block" pos:line="26" pos:column="9">/* Build filename. (the hard way) */</comment>
        <expr_stmt><expr><name pos:line="27" pos:column="9">s<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">+=<pos:position pos:line="27" pos:column="13"/></operator> <name pos:line="27" pos:column="14">i<pos:position pos:line="27" pos:column="15"/></name></expr>;<pos:position pos:line="27" pos:column="16"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="28" pos:column="9">*<pos:position pos:line="28" pos:column="10"/></operator><name pos:line="28" pos:column="10">s<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">=<pos:position pos:line="28" pos:column="13"/></operator> <literal type="char" pos:line="28" pos:column="14">'\0'<pos:position pos:line="28" pos:column="18"/></literal></expr>;<pos:position pos:line="28" pos:column="19"/></expr_stmt>

        <expr_stmt><expr><name pos:line="30" pos:column="9">c<pos:position pos:line="30" pos:column="10"/></name> <operator pos:line="30" pos:column="11">=<pos:position pos:line="30" pos:column="12"/></operator> <ternary><condition><expr><operator pos:line="30" pos:column="13">(<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="14">count<pos:position pos:line="30" pos:column="19"/></name> <operator pos:line="30" pos:column="20">==<pos:position pos:line="30" pos:column="22"/></operator> <name pos:line="30" pos:column="23">TMP_MAX<pos:position pos:line="30" pos:column="30"/></name><operator pos:line="30" pos:column="30">)<pos:position pos:line="30" pos:column="31"/></operator></expr> ?<pos:position pos:line="30" pos:column="33"/></condition><then pos:line="30" pos:column="33"> <expr><literal type="number" pos:line="30" pos:column="34">0<pos:position pos:line="30" pos:column="35"/></literal></expr> <pos:position pos:line="30" pos:column="36"/></then><else pos:line="30" pos:column="36">: <expr><operator pos:line="30" pos:column="38">++<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="40">count<pos:position pos:line="30" pos:column="45"/></name></expr></else></ternary></expr>;<pos:position pos:line="30" pos:column="46"/></expr_stmt>
        <do pos:line="31" pos:column="9">do <block pos:line="31" pos:column="12">{
            <expr_stmt><expr><operator pos:line="32" pos:column="13">*<pos:position pos:line="32" pos:column="14"/></operator><operator pos:line="32" pos:column="14">--<pos:position pos:line="32" pos:column="16"/></operator><name pos:line="32" pos:column="16">s<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">=<pos:position pos:line="32" pos:column="19"/></operator> <name><name pos:line="32" pos:column="20">digits<pos:position pos:line="32" pos:column="26"/></name><index pos:line="32" pos:column="26">[<expr><name pos:line="32" pos:column="27">c<pos:position pos:line="32" pos:column="28"/></name> <operator pos:line="32" pos:column="29">%<pos:position pos:line="32" pos:column="30"/></operator> <name pos:line="32" pos:column="31">TMP_BASE<pos:position pos:line="32" pos:column="39"/></name></expr>]<pos:position pos:line="32" pos:column="40"/></index></name></expr>;<pos:position pos:line="32" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><name pos:line="33" pos:column="13">c<pos:position pos:line="33" pos:column="14"/></name> <operator pos:line="33" pos:column="15">/=<pos:position pos:line="33" pos:column="17"/></operator> <name pos:line="33" pos:column="18">TMP_BASE<pos:position pos:line="33" pos:column="26"/></name></expr>;<pos:position pos:line="33" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="34" pos:column="10"/></block> while <condition pos:line="34" pos:column="17">(<expr><operator pos:line="34" pos:column="18">--<pos:position pos:line="34" pos:column="20"/></operator><name pos:line="34" pos:column="20">i<pos:position pos:line="34" pos:column="21"/></name> <operator pos:line="34" pos:column="22">&gt;<pos:position pos:line="34" pos:column="26"/></operator> <name pos:line="34" pos:column="24">L_tmpmin<pos:position pos:line="34" pos:column="32"/></name></expr>)<pos:position pos:line="34" pos:column="33"/></condition>;<pos:position pos:line="34" pos:column="34"/></do>

        <expr_stmt><expr><name pos:line="36" pos:column="9">p<pos:position pos:line="36" pos:column="10"/></name> <operator pos:line="36" pos:column="11">=<pos:position pos:line="36" pos:column="12"/></operator> <operator pos:line="36" pos:column="13">(<pos:position pos:line="36" pos:column="14"/></operator><name pos:line="36" pos:column="14">unsigned<pos:position pos:line="36" pos:column="22"/></name> <name pos:line="36" pos:column="23">int<pos:position pos:line="36" pos:column="26"/></name><operator pos:line="36" pos:column="26">)<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="28">pid<pos:position pos:line="36" pos:column="31"/></name></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt>
        <do pos:line="37" pos:column="9">do <block pos:line="37" pos:column="12">{
            <expr_stmt><expr><operator pos:line="38" pos:column="13">*<pos:position pos:line="38" pos:column="14"/></operator><operator pos:line="38" pos:column="14">--<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="16">s<pos:position pos:line="38" pos:column="17"/></name> <operator pos:line="38" pos:column="18">=<pos:position pos:line="38" pos:column="19"/></operator> <name><name pos:line="38" pos:column="20">digits<pos:position pos:line="38" pos:column="26"/></name><index pos:line="38" pos:column="26">[<expr><name pos:line="38" pos:column="27">p<pos:position pos:line="38" pos:column="28"/></name> <operator pos:line="38" pos:column="29">%<pos:position pos:line="38" pos:column="30"/></operator> <literal type="number" pos:line="38" pos:column="31">10<pos:position pos:line="38" pos:column="33"/></literal></expr>]<pos:position pos:line="38" pos:column="34"/></index></name></expr>;<pos:position pos:line="38" pos:column="35"/></expr_stmt>
            <expr_stmt><expr><name pos:line="39" pos:column="13">p<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">/=<pos:position pos:line="39" pos:column="17"/></operator> <literal type="number" pos:line="39" pos:column="18">10<pos:position pos:line="39" pos:column="20"/></literal></expr>;<pos:position pos:line="39" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block> while <condition pos:line="40" pos:column="17">(<expr><operator pos:line="40" pos:column="18">--<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">i<pos:position pos:line="40" pos:column="21"/></name> <operator pos:line="40" pos:column="22">&gt;<pos:position pos:line="40" pos:column="26"/></operator> <name pos:line="40" pos:column="24">lengthof_tmp<pos:position pos:line="40" pos:column="36"/></name></expr>)<pos:position pos:line="40" pos:column="37"/></condition>;<pos:position pos:line="40" pos:column="38"/></do>

        <do pos:line="42" pos:column="9">do <block pos:line="42" pos:column="12">{
            <expr_stmt><expr><operator pos:line="43" pos:column="13">*<pos:position pos:line="43" pos:column="14"/></operator><operator pos:line="43" pos:column="14">--<pos:position pos:line="43" pos:column="16"/></operator><name pos:line="43" pos:column="16">s<pos:position pos:line="43" pos:column="17"/></name> <operator pos:line="43" pos:column="18">=<pos:position pos:line="43" pos:column="19"/></operator> <name><name pos:line="43" pos:column="20">_tmp<pos:position pos:line="43" pos:column="24"/></name><index pos:line="43" pos:column="24">[<expr><operator pos:line="43" pos:column="25">--<pos:position pos:line="43" pos:column="27"/></operator><name pos:line="43" pos:column="27">i<pos:position pos:line="43" pos:column="28"/></name></expr>]<pos:position pos:line="43" pos:column="29"/></index></name></expr>;<pos:position pos:line="43" pos:column="30"/></expr_stmt>
        }<pos:position pos:line="44" pos:column="10"/></block> while <condition pos:line="44" pos:column="17">(<expr><name pos:line="44" pos:column="18">i<pos:position pos:line="44" pos:column="19"/></name> <operator pos:line="44" pos:column="20">&gt;<pos:position pos:line="44" pos:column="24"/></operator> <literal type="number" pos:line="44" pos:column="22">0<pos:position pos:line="44" pos:column="23"/></literal></expr>)<pos:position pos:line="44" pos:column="24"/></condition>;<pos:position pos:line="44" pos:column="25"/></do>

        <comment type="block" pos:line="46" pos:column="9">/* Check that the file doesn't exist. */</comment>
        <if pos:line="47" pos:column="9">if <condition pos:line="47" pos:column="12">(<expr><call><name pos:line="47" pos:column="13">access<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">(<argument><expr><name pos:line="47" pos:column="20">s<pos:position pos:line="47" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="23">0<pos:position pos:line="47" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="25"/></argument_list></call> <operator pos:line="47" pos:column="26">!=<pos:position pos:line="47" pos:column="28"/></operator> <literal type="number" pos:line="47" pos:column="29">0<pos:position pos:line="47" pos:column="30"/></literal></expr>)<pos:position pos:line="47" pos:column="31"/></condition><then pos:line="47" pos:column="31">
            <block type="pseudo"><break pos:line="48" pos:column="13">break;<pos:position pos:line="48" pos:column="19"/></break></block></then></if>

        <comment type="block" pos:line="50" pos:column="9">/* It exists; retry unless we tried them all. */</comment>
        <if pos:line="51" pos:column="9">if <condition pos:line="51" pos:column="12">(<expr><name pos:line="51" pos:column="13">count<pos:position pos:line="51" pos:column="18"/></name> <operator pos:line="51" pos:column="19">==<pos:position pos:line="51" pos:column="21"/></operator> <name pos:line="51" pos:column="22">lastcount<pos:position pos:line="51" pos:column="31"/></name></expr>)<pos:position pos:line="51" pos:column="32"/></condition><then pos:line="51" pos:column="32"> <block pos:line="51" pos:column="33">{
            <expr_stmt><expr><name pos:line="52" pos:column="13">s<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <name pos:line="52" pos:column="17">NULL<pos:position pos:line="52" pos:column="21"/></name></expr>;<pos:position pos:line="52" pos:column="22"/></expr_stmt>
            <break pos:line="53" pos:column="13">break;<pos:position pos:line="53" pos:column="19"/></break>
        }<pos:position pos:line="54" pos:column="10"/></block></then></if>
    }<pos:position pos:line="55" pos:column="6"/></block></for>

    <expr_stmt><expr><name pos:line="57" pos:column="5">lastcount<pos:position pos:line="57" pos:column="14"/></name> <operator pos:line="57" pos:column="15">=<pos:position pos:line="57" pos:column="16"/></operator> <name pos:line="57" pos:column="17">count<pos:position pos:line="57" pos:column="22"/></name></expr>;<pos:position pos:line="57" pos:column="23"/></expr_stmt>

    <return pos:line="59" pos:column="5">return <expr><name pos:line="59" pos:column="12">s<pos:position pos:line="59" pos:column="13"/></name></expr>;<pos:position pos:line="59" pos:column="14"/></return>
}<pos:position pos:line="60" pos:column="2"/></block></function></unit>

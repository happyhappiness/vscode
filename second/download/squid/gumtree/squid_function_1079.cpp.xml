<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1079.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MimeIcon<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">created<pos:position pos:line="2" pos:column="18"/></name></name> <parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">StoreEntry<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="32">newEntry<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* if the icon is already in the store, do nothing */</comment>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">!<pos:position pos:line="5" pos:column="10"/></operator><call><name><name pos:line="5" pos:column="10">newEntry<pos:position pos:line="5" pos:column="18"/></name><operator pos:line="5" pos:column="18">-&gt;<pos:position pos:line="5" pos:column="23"/></operator><name pos:line="5" pos:column="20">isNull<pos:position pos:line="5" pos:column="26"/></name></name><argument_list pos:line="5" pos:column="26">()<pos:position pos:line="5" pos:column="28"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="29"/></condition><then pos:line="5" pos:column="29">
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">fd<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">n<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">RequestFlags<pos:position pos:line="10" pos:column="17"/></name></type> <name pos:line="10" pos:column="18">flags<pos:position pos:line="10" pos:column="23"/></name></decl>;<pos:position pos:line="10" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">stat<pos:position pos:line="11" pos:column="16"/></name></name></type> <name pos:line="11" pos:column="17">sb<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">LOCAL_ARRAY<pos:position pos:line="12" pos:column="16"/></name><argument_list pos:line="12" pos:column="16">(<argument><expr><name pos:line="12" pos:column="17">char<pos:position pos:line="12" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="23">path<pos:position pos:line="12" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="29">MAXPATHLEN<pos:position pos:line="12" pos:column="39"/></name></expr></argument>)<pos:position pos:line="12" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="41"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">buf<pos:position pos:line="13" pos:column="14"/></name></decl>;<pos:position pos:line="13" pos:column="15"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="15" pos:column="5">snprintf<pos:position pos:line="15" pos:column="13"/></name><argument_list pos:line="15" pos:column="13">(<argument><expr><name pos:line="15" pos:column="14">path<pos:position pos:line="15" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="20">MAXPATHLEN<pos:position pos:line="15" pos:column="30"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="32">"%s/%s"<pos:position pos:line="15" pos:column="39"/></literal></expr></argument>, <argument><expr><name><name pos:line="15" pos:column="41">Config<pos:position pos:line="15" pos:column="47"/></name><operator pos:line="15" pos:column="47">.<pos:position pos:line="15" pos:column="48"/></operator><name pos:line="15" pos:column="48">icons<pos:position pos:line="15" pos:column="53"/></name><operator pos:line="15" pos:column="53">.<pos:position pos:line="15" pos:column="54"/></operator><name pos:line="15" pos:column="54">directory<pos:position pos:line="15" pos:column="63"/></name></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="65">icon_<pos:position pos:line="15" pos:column="70"/></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">fd<pos:position pos:line="17" pos:column="7"/></name> <operator pos:line="17" pos:column="8">=<pos:position pos:line="17" pos:column="9"/></operator> <call><name pos:line="17" pos:column="10">file_open<pos:position pos:line="17" pos:column="19"/></name><argument_list pos:line="17" pos:column="19">(<argument><expr><name pos:line="17" pos:column="20">path<pos:position pos:line="17" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="26">O_RDONLY<pos:position pos:line="17" pos:column="34"/></name> <operator pos:line="17" pos:column="35">|<pos:position pos:line="17" pos:column="36"/></operator> <name pos:line="17" pos:column="37">O_BINARY<pos:position pos:line="17" pos:column="45"/></name></expr></argument>)<pos:position pos:line="17" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="47"/></expr_stmt>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">fd<pos:position pos:line="18" pos:column="11"/></name> <operator pos:line="18" pos:column="12">&lt;<pos:position pos:line="18" pos:column="16"/></operator> <literal type="number" pos:line="18" pos:column="14">0<pos:position pos:line="18" pos:column="15"/></literal></expr>)<pos:position pos:line="18" pos:column="16"/></condition><then pos:line="18" pos:column="16"> <block pos:line="18" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">25<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="20">DBG_CRITICAL<pos:position pos:line="19" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="34">"Problem opening icon file "<pos:position pos:line="19" pos:column="62"/></literal> <operator pos:line="19" pos:column="63">&lt;&lt;<pos:position pos:line="19" pos:column="71"/></operator> <name pos:line="19" pos:column="66">path<pos:position pos:line="19" pos:column="70"/></name> <operator pos:line="19" pos:column="71">&lt;&lt;<pos:position pos:line="19" pos:column="79"/></operator> <literal type="string" pos:line="19" pos:column="74">": "<pos:position pos:line="19" pos:column="78"/></literal> <operator pos:line="19" pos:column="79">&lt;&lt;<pos:position pos:line="19" pos:column="87"/></operator> <call><name pos:line="19" pos:column="82">xstrerror<pos:position pos:line="19" pos:column="91"/></name><argument_list pos:line="19" pos:column="91">()<pos:position pos:line="19" pos:column="93"/></argument_list></call></expr></argument>)<pos:position pos:line="19" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="95"/></expr_stmt>
        <return pos:line="20" pos:column="9">return;<pos:position pos:line="20" pos:column="16"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><call><name pos:line="22" pos:column="9">fstat<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><name pos:line="22" pos:column="15">fd<pos:position pos:line="22" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="22" pos:column="19">&amp;<pos:position pos:line="22" pos:column="24"/></operator><name pos:line="22" pos:column="20">sb<pos:position pos:line="22" pos:column="22"/></name></expr></argument>)<pos:position pos:line="22" pos:column="23"/></argument_list></call> <operator pos:line="22" pos:column="24">&lt;<pos:position pos:line="22" pos:column="28"/></operator> <literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr>)<pos:position pos:line="22" pos:column="28"/></condition><then pos:line="22" pos:column="28"> <block pos:line="22" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">25<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="20">DBG_CRITICAL<pos:position pos:line="23" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="34">"Problem opening icon file. Fd: "<pos:position pos:line="23" pos:column="67"/></literal> <operator pos:line="23" pos:column="68">&lt;&lt;<pos:position pos:line="23" pos:column="76"/></operator> <name pos:line="23" pos:column="71">fd<pos:position pos:line="23" pos:column="73"/></name> <operator pos:line="23" pos:column="74">&lt;&lt;<pos:position pos:line="23" pos:column="82"/></operator> <literal type="string" pos:line="23" pos:column="77">", fstat error "<pos:position pos:line="23" pos:column="93"/></literal> <operator pos:line="23" pos:column="94">&lt;&lt;<pos:position pos:line="23" pos:column="102"/></operator> <call><name pos:line="23" pos:column="97">xstrerror<pos:position pos:line="23" pos:column="106"/></name><argument_list pos:line="23" pos:column="106">()<pos:position pos:line="23" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="109"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="110"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">file_close<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name pos:line="24" pos:column="20">fd<pos:position pos:line="24" pos:column="22"/></name></expr></argument>)<pos:position pos:line="24" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="24"/></expr_stmt>
        <return pos:line="25" pos:column="9">return;<pos:position pos:line="25" pos:column="16"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">flags<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">.<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="11">cachable<pos:position pos:line="28" pos:column="19"/></name></name> <operator pos:line="28" pos:column="20">=<pos:position pos:line="28" pos:column="21"/></operator> <literal type="boolean" pos:line="28" pos:column="22">true<pos:position pos:line="28" pos:column="26"/></literal></expr>;<pos:position pos:line="28" pos:column="27"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="29" pos:column="5">StoreEntry<pos:position pos:line="29" pos:column="15"/></name> <modifier pos:line="29" pos:column="16">*<pos:position pos:line="29" pos:column="17"/></modifier></type><name pos:line="29" pos:column="17">e<pos:position pos:line="29" pos:column="18"/></name> <init pos:line="29" pos:column="19">= <expr><call><name pos:line="29" pos:column="21">storeCreateEntry<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">(<argument><expr><name pos:line="29" pos:column="38">url_<pos:position pos:line="29" pos:column="42"/></name></expr></argument>,<argument><expr><name pos:line="29" pos:column="43">url_<pos:position pos:line="29" pos:column="47"/></name></expr></argument>,<argument><expr><name pos:line="29" pos:column="48">flags<pos:position pos:line="29" pos:column="53"/></name></expr></argument>,<argument><expr><name><name pos:line="29" pos:column="54">Http<pos:position pos:line="29" pos:column="58"/></name><operator pos:line="29" pos:column="58">::<pos:position pos:line="29" pos:column="60"/></operator><name pos:line="29" pos:column="60">METHOD_GET<pos:position pos:line="29" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="71"/></argument_list></call></expr></init></decl>;<pos:position pos:line="29" pos:column="72"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">assert<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><name pos:line="30" pos:column="12">e<pos:position pos:line="30" pos:column="13"/></name> <operator pos:line="30" pos:column="14">!=<pos:position pos:line="30" pos:column="16"/></operator> <name pos:line="30" pos:column="17">NULL<pos:position pos:line="30" pos:column="21"/></name></expr></argument>)<pos:position pos:line="30" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="31" pos:column="5">EBIT_SET<pos:position pos:line="31" pos:column="13"/></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name><name pos:line="31" pos:column="14">e<pos:position pos:line="31" pos:column="15"/></name><operator pos:line="31" pos:column="15">-&gt;<pos:position pos:line="31" pos:column="20"/></operator><name pos:line="31" pos:column="17">flags<pos:position pos:line="31" pos:column="22"/></name></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="24">ENTRY_SPECIAL<pos:position pos:line="31" pos:column="37"/></name></expr></argument>)<pos:position pos:line="31" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="32" pos:column="5">e<pos:position pos:line="32" pos:column="6"/></name><operator pos:line="32" pos:column="6">-&gt;<pos:position pos:line="32" pos:column="11"/></operator><name pos:line="32" pos:column="8">setPublicKey<pos:position pos:line="32" pos:column="20"/></name></name><argument_list pos:line="32" pos:column="20">()<pos:position pos:line="32" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="23"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="33" pos:column="5">e<pos:position pos:line="33" pos:column="6"/></name><operator pos:line="33" pos:column="6">-&gt;<pos:position pos:line="33" pos:column="11"/></operator><name pos:line="33" pos:column="8">buffer<pos:position pos:line="33" pos:column="14"/></name></name><argument_list pos:line="33" pos:column="14">()<pos:position pos:line="33" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="17"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="34" pos:column="5">HttpRequest<pos:position pos:line="34" pos:column="16"/></name> <modifier pos:line="34" pos:column="17">*<pos:position pos:line="34" pos:column="18"/></modifier></type><name pos:line="34" pos:column="18">r<pos:position pos:line="34" pos:column="19"/></name> <init pos:line="34" pos:column="20">= <expr><call><name><name pos:line="34" pos:column="22">HttpRequest<pos:position pos:line="34" pos:column="33"/></name><operator pos:line="34" pos:column="33">::<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">CreateFromUrl<pos:position pos:line="34" pos:column="48"/></name></name><argument_list pos:line="34" pos:column="48">(<argument><expr><name pos:line="34" pos:column="49">url_<pos:position pos:line="34" pos:column="53"/></name></expr></argument>)<pos:position pos:line="34" pos:column="54"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="55"/></decl_stmt>

    <if pos:line="36" pos:column="5">if <condition pos:line="36" pos:column="8">(<expr><name pos:line="36" pos:column="9">NULL<pos:position pos:line="36" pos:column="13"/></name> <operator pos:line="36" pos:column="14">==<pos:position pos:line="36" pos:column="16"/></operator> <name pos:line="36" pos:column="17">r<pos:position pos:line="36" pos:column="18"/></name></expr>)<pos:position pos:line="36" pos:column="19"/></condition><then pos:line="36" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="9">fatal<pos:position pos:line="37" pos:column="14"/></name><argument_list pos:line="37" pos:column="14">(<argument><expr><literal type="string" pos:line="37" pos:column="15">"mimeLoadIcon: cannot parse internal URL"<pos:position pos:line="37" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="58"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="39" pos:column="5">e<pos:position pos:line="39" pos:column="6"/></name><operator pos:line="39" pos:column="6">-&gt;<pos:position pos:line="39" pos:column="11"/></operator><name pos:line="39" pos:column="8">mem_obj<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">-&gt;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="17">request<pos:position pos:line="39" pos:column="24"/></name></name> <operator pos:line="39" pos:column="25">=<pos:position pos:line="39" pos:column="26"/></operator> <name pos:line="39" pos:column="27">r<pos:position pos:line="39" pos:column="28"/></name></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="40" pos:column="5">HTTPMSGLOCK<pos:position pos:line="40" pos:column="16"/></name><argument_list pos:line="40" pos:column="16">(<argument><expr><name><name pos:line="40" pos:column="17">e<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">-&gt;<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="20">mem_obj<pos:position pos:line="40" pos:column="27"/></name><operator pos:line="40" pos:column="27">-&gt;<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="29">request<pos:position pos:line="40" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="38"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="42" pos:column="5">HttpReply<pos:position pos:line="42" pos:column="14"/></name> <modifier pos:line="42" pos:column="15">*<pos:position pos:line="42" pos:column="16"/></modifier></type><name pos:line="42" pos:column="16">reply<pos:position pos:line="42" pos:column="21"/></name> <init pos:line="42" pos:column="22">= <expr><operator pos:line="42" pos:column="24">new<pos:position pos:line="42" pos:column="27"/></operator> <name pos:line="42" pos:column="28">HttpReply<pos:position pos:line="42" pos:column="37"/></name></expr></init></decl>;<pos:position pos:line="42" pos:column="38"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="44" pos:column="5">reply<pos:position pos:line="44" pos:column="10"/></name><operator pos:line="44" pos:column="10">-&gt;<pos:position pos:line="44" pos:column="15"/></operator><name pos:line="44" pos:column="12">setHeaders<pos:position pos:line="44" pos:column="22"/></name></name><argument_list pos:line="44" pos:column="22">(<argument><expr><name><name pos:line="44" pos:column="23">Http<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">::<pos:position pos:line="44" pos:column="29"/></operator><name pos:line="44" pos:column="29">scOkay<pos:position pos:line="44" pos:column="35"/></name></name></expr></argument>, <argument><expr><name pos:line="44" pos:column="37">NULL<pos:position pos:line="44" pos:column="41"/></name></expr></argument>, <argument><expr><call><name pos:line="44" pos:column="43">mimeGetContentType<pos:position pos:line="44" pos:column="61"/></name><argument_list pos:line="44" pos:column="61">(<argument><expr><name pos:line="44" pos:column="62">icon_<pos:position pos:line="44" pos:column="67"/></name></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="70">sb<pos:position pos:line="44" pos:column="72"/></name><operator pos:line="44" pos:column="72">.<pos:position pos:line="44" pos:column="73"/></operator><name pos:line="44" pos:column="73">st_size<pos:position pos:line="44" pos:column="80"/></name></name></expr></argument>, <argument><expr><name><name pos:line="44" pos:column="82">sb<pos:position pos:line="44" pos:column="84"/></name><operator pos:line="44" pos:column="84">.<pos:position pos:line="44" pos:column="85"/></operator><name pos:line="44" pos:column="85">st_mtime<pos:position pos:line="44" pos:column="93"/></name></name></expr></argument>, <argument><expr><operator pos:line="44" pos:column="95">-<pos:position pos:line="44" pos:column="96"/></operator><literal type="number" pos:line="44" pos:column="96">1<pos:position pos:line="44" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="99"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="45" pos:column="5">reply<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">cache_control<pos:position pos:line="45" pos:column="25"/></name></name> <operator pos:line="45" pos:column="26">=<pos:position pos:line="45" pos:column="27"/></operator> <operator pos:line="45" pos:column="28">new<pos:position pos:line="45" pos:column="31"/></operator> <call><name pos:line="45" pos:column="32">HttpHdrCc<pos:position pos:line="45" pos:column="41"/></name><argument_list pos:line="45" pos:column="41">()<pos:position pos:line="45" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="46" pos:column="5">reply<pos:position pos:line="46" pos:column="10"/></name><operator pos:line="46" pos:column="10">-&gt;<pos:position pos:line="46" pos:column="15"/></operator><name pos:line="46" pos:column="12">cache_control<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">-&gt;<pos:position pos:line="46" pos:column="30"/></operator><name pos:line="46" pos:column="27">maxAge<pos:position pos:line="46" pos:column="33"/></name></name><argument_list pos:line="46" pos:column="33">(<argument><expr><literal type="number" pos:line="46" pos:column="34">86400<pos:position pos:line="46" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="47" pos:column="5">reply<pos:position pos:line="47" pos:column="10"/></name><operator pos:line="47" pos:column="10">-&gt;<pos:position pos:line="47" pos:column="15"/></operator><name pos:line="47" pos:column="12">header<pos:position pos:line="47" pos:column="18"/></name><operator pos:line="47" pos:column="18">.<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="19">putCc<pos:position pos:line="47" pos:column="24"/></name></name><argument_list pos:line="47" pos:column="24">(<argument><expr><name><name pos:line="47" pos:column="25">reply<pos:position pos:line="47" pos:column="30"/></name><operator pos:line="47" pos:column="30">-&gt;<pos:position pos:line="47" pos:column="35"/></operator><name pos:line="47" pos:column="32">cache_control<pos:position pos:line="47" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="47" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="48" pos:column="5">e<pos:position pos:line="48" pos:column="6"/></name><operator pos:line="48" pos:column="6">-&gt;<pos:position pos:line="48" pos:column="11"/></operator><name pos:line="48" pos:column="8">replaceHttpReply<pos:position pos:line="48" pos:column="24"/></name></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">reply<pos:position pos:line="48" pos:column="30"/></name></expr></argument>)<pos:position pos:line="48" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="50" pos:column="5">/* read the file into the buffer and append it to store */</comment>
    <expr_stmt><expr><name pos:line="51" pos:column="5">buf<pos:position pos:line="51" pos:column="8"/></name> <operator pos:line="51" pos:column="9">=<pos:position pos:line="51" pos:column="10"/></operator> <operator pos:line="51" pos:column="11">(<pos:position pos:line="51" pos:column="12"/></operator><name pos:line="51" pos:column="12">char<pos:position pos:line="51" pos:column="16"/></name> <operator pos:line="51" pos:column="17">*<pos:position pos:line="51" pos:column="18"/></operator><operator pos:line="51" pos:column="18">)<pos:position pos:line="51" pos:column="19"/></operator><call><name pos:line="51" pos:column="19">memAllocate<pos:position pos:line="51" pos:column="30"/></name><argument_list pos:line="51" pos:column="30">(<argument><expr><name pos:line="51" pos:column="31">MEM_4K_BUF<pos:position pos:line="51" pos:column="41"/></name></expr></argument>)<pos:position pos:line="51" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="43"/></expr_stmt>
    <while pos:line="52" pos:column="5">while <condition pos:line="52" pos:column="11">(<expr><operator pos:line="52" pos:column="12">(<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="13">n<pos:position pos:line="52" pos:column="14"/></name> <operator pos:line="52" pos:column="15">=<pos:position pos:line="52" pos:column="16"/></operator> <call><name pos:line="52" pos:column="17">FD_READ_METHOD<pos:position pos:line="52" pos:column="31"/></name><argument_list pos:line="52" pos:column="31">(<argument><expr><name pos:line="52" pos:column="32">fd<pos:position pos:line="52" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="36">buf<pos:position pos:line="52" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="41">4096<pos:position pos:line="52" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="46"/></argument_list></call><operator pos:line="52" pos:column="46">)<pos:position pos:line="52" pos:column="47"/></operator> <operator pos:line="52" pos:column="48">&gt;<pos:position pos:line="52" pos:column="52"/></operator> <literal type="number" pos:line="52" pos:column="50">0<pos:position pos:line="52" pos:column="51"/></literal></expr>)<pos:position pos:line="52" pos:column="52"/></condition>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="53" pos:column="9">e<pos:position pos:line="53" pos:column="10"/></name><operator pos:line="53" pos:column="10">-&gt;<pos:position pos:line="53" pos:column="15"/></operator><name pos:line="53" pos:column="12">append<pos:position pos:line="53" pos:column="18"/></name></name><argument_list pos:line="53" pos:column="18">(<argument><expr><name pos:line="53" pos:column="19">buf<pos:position pos:line="53" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="53" pos:column="24">n<pos:position pos:line="53" pos:column="25"/></name></expr></argument>)<pos:position pos:line="53" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="27"/></expr_stmt></block></while>

    <expr_stmt><expr><call><name pos:line="55" pos:column="5">file_close<pos:position pos:line="55" pos:column="15"/></name><argument_list pos:line="55" pos:column="15">(<argument><expr><name pos:line="55" pos:column="16">fd<pos:position pos:line="55" pos:column="18"/></name></expr></argument>)<pos:position pos:line="55" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="20"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="56" pos:column="5">e<pos:position pos:line="56" pos:column="6"/></name><operator pos:line="56" pos:column="6">-&gt;<pos:position pos:line="56" pos:column="11"/></operator><name pos:line="56" pos:column="8">flush<pos:position pos:line="56" pos:column="13"/></name></name><argument_list pos:line="56" pos:column="13">()<pos:position pos:line="56" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="57" pos:column="5">e<pos:position pos:line="57" pos:column="6"/></name><operator pos:line="57" pos:column="6">-&gt;<pos:position pos:line="57" pos:column="11"/></operator><name pos:line="57" pos:column="8">complete<pos:position pos:line="57" pos:column="16"/></name></name><argument_list pos:line="57" pos:column="16">()<pos:position pos:line="57" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="58" pos:column="5">e<pos:position pos:line="58" pos:column="6"/></name><operator pos:line="58" pos:column="6">-&gt;<pos:position pos:line="58" pos:column="11"/></operator><name pos:line="58" pos:column="8">timestampsSet<pos:position pos:line="58" pos:column="21"/></name></name><argument_list pos:line="58" pos:column="21">()<pos:position pos:line="58" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="59" pos:column="5">e<pos:position pos:line="59" pos:column="6"/></name><operator pos:line="59" pos:column="6">-&gt;<pos:position pos:line="59" pos:column="11"/></operator><name pos:line="59" pos:column="8">unlock<pos:position pos:line="59" pos:column="14"/></name></name><argument_list pos:line="59" pos:column="14">()<pos:position pos:line="59" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="60" pos:column="5">memFree<pos:position pos:line="60" pos:column="12"/></name><argument_list pos:line="60" pos:column="12">(<argument><expr><name pos:line="60" pos:column="13">buf<pos:position pos:line="60" pos:column="16"/></name></expr></argument>, <argument><expr><name pos:line="60" pos:column="18">MEM_4K_BUF<pos:position pos:line="60" pos:column="28"/></name></expr></argument>)<pos:position pos:line="60" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="60" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="61" pos:column="5">debugs<pos:position pos:line="61" pos:column="11"/></name><argument_list pos:line="61" pos:column="11">(<argument><expr><literal type="number" pos:line="61" pos:column="12">25<pos:position pos:line="61" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="61" pos:column="16">3<pos:position pos:line="61" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="61" pos:column="19">"Loaded icon "<pos:position pos:line="61" pos:column="33"/></literal> <operator pos:line="61" pos:column="34">&lt;&lt;<pos:position pos:line="61" pos:column="42"/></operator> <name pos:line="61" pos:column="37">url_<pos:position pos:line="61" pos:column="41"/></name></expr></argument>)<pos:position pos:line="61" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="43"/></expr_stmt>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_427_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">password_conversation<pos:position pos:line="2" pos:column="22"/></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">num_msg<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="36">PAM_CONV_FUNC_CONST_PARM<pos:position pos:line="2" pos:column="60"/></name> <name><name pos:line="2" pos:column="61">struct<pos:position pos:line="2" pos:column="67"/></name> <name pos:line="2" pos:column="68">pam_message<pos:position pos:line="2" pos:column="79"/></name></name> <modifier pos:line="2" pos:column="80">*<pos:position pos:line="2" pos:column="81"/></modifier><modifier pos:line="2" pos:column="81">*<pos:position pos:line="2" pos:column="82"/></modifier></type><name pos:line="2" pos:column="82">msg<pos:position pos:line="2" pos:column="85"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="87">struct<pos:position pos:line="2" pos:column="93"/></name> <name pos:line="2" pos:column="94">pam_response<pos:position pos:line="2" pos:column="106"/></name></name> <modifier pos:line="2" pos:column="107">*<pos:position pos:line="2" pos:column="108"/></modifier><modifier pos:line="2" pos:column="108">*<pos:position pos:line="2" pos:column="109"/></modifier></type><name pos:line="2" pos:column="109">resp<pos:position pos:line="2" pos:column="113"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="115">void<pos:position pos:line="2" pos:column="119"/></name> <modifier pos:line="2" pos:column="120">*<pos:position pos:line="2" pos:column="121"/></modifier></type><name pos:line="2" pos:column="121">appdata_ptr<pos:position pos:line="2" pos:column="132"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="133"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">num_msg<pos:position pos:line="4" pos:column="16"/></name> <operator pos:line="4" pos:column="17">!=<pos:position pos:line="4" pos:column="19"/></operator> <literal type="number" pos:line="4" pos:column="20">1<pos:position pos:line="4" pos:column="21"/></literal> <operator pos:line="4" pos:column="22">||<pos:position pos:line="4" pos:column="24"/></operator> <name><name pos:line="4" pos:column="25">msg<pos:position pos:line="4" pos:column="28"/></name><index pos:line="4" pos:column="28">[<expr><literal type="number" pos:line="4" pos:column="29">0<pos:position pos:line="4" pos:column="30"/></literal></expr>]<pos:position pos:line="4" pos:column="31"/></index></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">msg_style<pos:position pos:line="4" pos:column="42"/></name> <operator pos:line="4" pos:column="43">!=<pos:position pos:line="4" pos:column="45"/></operator> <name pos:line="4" pos:column="46">PAM_PROMPT_ECHO_OFF<pos:position pos:line="4" pos:column="65"/></name></expr>)<pos:position pos:line="4" pos:column="66"/></condition><then pos:line="4" pos:column="66"> <block pos:line="4" pos:column="67">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debug<pos:position pos:line="5" pos:column="14"/></name><argument_list pos:line="5" pos:column="14">(<argument><expr><literal type="string" pos:line="5" pos:column="15">"ERROR: Unexpected PAM converstaion '%d/%s'\n"<pos:position pos:line="5" pos:column="61"/></literal></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="63">msg<pos:position pos:line="5" pos:column="66"/></name><index pos:line="5" pos:column="66">[<expr><literal type="number" pos:line="5" pos:column="67">0<pos:position pos:line="5" pos:column="68"/></literal></expr>]<pos:position pos:line="5" pos:column="69"/></index></name><operator pos:line="5" pos:column="69">-&gt;<pos:position pos:line="5" pos:column="74"/></operator><name pos:line="5" pos:column="71">msg_style<pos:position pos:line="5" pos:column="80"/></name></expr></argument>, <argument><expr><name><name pos:line="5" pos:column="82">msg<pos:position pos:line="5" pos:column="85"/></name><index pos:line="5" pos:column="85">[<expr><literal type="number" pos:line="5" pos:column="86">0<pos:position pos:line="5" pos:column="87"/></literal></expr>]<pos:position pos:line="5" pos:column="88"/></index></name><operator pos:line="5" pos:column="88">-&gt;<pos:position pos:line="5" pos:column="93"/></operator><name pos:line="5" pos:column="90">msg<pos:position pos:line="5" pos:column="93"/></name></expr></argument>)<pos:position pos:line="5" pos:column="94"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="95"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">PAM_CONV_ERR<pos:position pos:line="6" pos:column="28"/></name></expr>;<pos:position pos:line="6" pos:column="29"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
<cpp:if pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">if<pos:position pos:line="8" pos:column="4"/></cpp:directive> <expr><name pos:line="8" pos:column="5">_SQUID_SOLARIS_<pos:position pos:line="8" pos:column="20"/></name></expr></cpp:if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">appdata_ptr<pos:position pos:line="9" pos:column="21"/></name></expr>)<pos:position pos:line="9" pos:column="22"/></condition><then pos:line="9" pos:column="22"> <block pos:line="9" pos:column="23">{
        <comment type="block" pos:line="10" pos:column="9">/* Workaround for Solaris 2.6 where the PAM library is broken
         * and does not pass appdata_ptr to the conversation routine
         */</comment>
        <expr_stmt><expr><name pos:line="13" pos:column="9">appdata_ptr<pos:position pos:line="13" pos:column="20"/></name> <operator pos:line="13" pos:column="21">=<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">password<pos:position pos:line="13" pos:column="31"/></name></expr>;<pos:position pos:line="13" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><name pos:line="16" pos:column="10">appdata_ptr<pos:position pos:line="16" pos:column="21"/></name></expr>)<pos:position pos:line="16" pos:column="22"/></condition><then pos:line="16" pos:column="22"> <block pos:line="16" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">debug<pos:position pos:line="17" pos:column="14"/></name><argument_list pos:line="17" pos:column="14">(<argument><expr><literal type="string" pos:line="17" pos:column="15">"ERROR: No password available to password_converstation!\n"<pos:position pos:line="17" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="17" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="76"/></expr_stmt>
        <return pos:line="18" pos:column="9">return <expr><name pos:line="18" pos:column="16">PAM_CONV_ERR<pos:position pos:line="18" pos:column="28"/></name></expr>;<pos:position pos:line="18" pos:column="29"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="20" pos:column="5">*<pos:position pos:line="20" pos:column="6"/></operator><name pos:line="20" pos:column="6">resp<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <cast type="static" pos:line="20" pos:column="13">static_cast<argument_list type="generic" pos:line="20" pos:column="24">&lt;<argument><expr pos:line="20" pos:column="25">struct <name pos:line="20" pos:column="32">pam_response<pos:position pos:line="20" pos:column="44"/></name> <operator pos:line="20" pos:column="45">*<pos:position pos:line="20" pos:column="46"/></operator></expr></argument>&gt;<pos:position pos:line="20" pos:column="50"/></argument_list><argument_list pos:line="20" pos:column="47">(<argument><expr><call><name pos:line="20" pos:column="48">calloc<pos:position pos:line="20" pos:column="54"/></name><argument_list pos:line="20" pos:column="54">(<argument><expr><name pos:line="20" pos:column="55">num_msg<pos:position pos:line="20" pos:column="62"/></name></expr></argument>, <argument><expr><sizeof pos:line="20" pos:column="64">sizeof<argument_list pos:line="20" pos:column="70">(<argument><expr pos:line="20" pos:column="71">struct <name pos:line="20" pos:column="78">pam_response<pos:position pos:line="20" pos:column="90"/></name></expr></argument>)<pos:position pos:line="20" pos:column="91"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="20" pos:column="92"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="93"/></argument_list></cast></expr>;<pos:position pos:line="20" pos:column="94"/></expr_stmt>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><operator pos:line="21" pos:column="9">!<pos:position pos:line="21" pos:column="10"/></operator><operator pos:line="21" pos:column="10">*<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="11">resp<pos:position pos:line="21" pos:column="15"/></name></expr>)<pos:position pos:line="21" pos:column="16"/></condition><then pos:line="21" pos:column="16"> <block pos:line="21" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debug<pos:position pos:line="22" pos:column="14"/></name><argument_list pos:line="22" pos:column="14">(<argument><expr><literal type="string" pos:line="22" pos:column="15">"ERROR: Out of memory!\n"<pos:position pos:line="22" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
        <return pos:line="23" pos:column="9">return <expr><name pos:line="23" pos:column="16">PAM_CONV_ERR<pos:position pos:line="23" pos:column="28"/></name></expr>;<pos:position pos:line="23" pos:column="29"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="25" pos:column="5">(<pos:position pos:line="25" pos:column="6"/></operator><operator pos:line="25" pos:column="6">*<pos:position pos:line="25" pos:column="7"/></operator><name pos:line="25" pos:column="7">resp<pos:position pos:line="25" pos:column="11"/></name><operator pos:line="25" pos:column="11">)<pos:position pos:line="25" pos:column="12"/></operator><index pos:line="25" pos:column="12">[<expr><literal type="number" pos:line="25" pos:column="13">0<pos:position pos:line="25" pos:column="14"/></literal></expr>]<pos:position pos:line="25" pos:column="15"/></index><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">resp<pos:position pos:line="25" pos:column="20"/></name> <operator pos:line="25" pos:column="21">=<pos:position pos:line="25" pos:column="22"/></operator> <call><name pos:line="25" pos:column="23">xstrdup<pos:position pos:line="25" pos:column="30"/></name><argument_list pos:line="25" pos:column="30">(<argument><expr><operator pos:line="25" pos:column="31">(<pos:position pos:line="25" pos:column="32"/></operator><name pos:line="25" pos:column="32">char<pos:position pos:line="25" pos:column="36"/></name> <operator pos:line="25" pos:column="37">*<pos:position pos:line="25" pos:column="38"/></operator><operator pos:line="25" pos:column="38">)<pos:position pos:line="25" pos:column="39"/></operator> <name pos:line="25" pos:column="40">appdata_ptr<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="26" pos:column="5">(<pos:position pos:line="26" pos:column="6"/></operator><operator pos:line="26" pos:column="6">*<pos:position pos:line="26" pos:column="7"/></operator><name pos:line="26" pos:column="7">resp<pos:position pos:line="26" pos:column="11"/></name><operator pos:line="26" pos:column="11">)<pos:position pos:line="26" pos:column="12"/></operator><index pos:line="26" pos:column="12">[<expr><literal type="number" pos:line="26" pos:column="13">0<pos:position pos:line="26" pos:column="14"/></literal></expr>]<pos:position pos:line="26" pos:column="15"/></index><operator pos:line="26" pos:column="15">.<pos:position pos:line="26" pos:column="16"/></operator><name pos:line="26" pos:column="16">resp_retcode<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">=<pos:position pos:line="26" pos:column="30"/></operator> <literal type="number" pos:line="26" pos:column="31">0<pos:position pos:line="26" pos:column="32"/></literal></expr>;<pos:position pos:line="26" pos:column="33"/></expr_stmt>

    <return pos:line="28" pos:column="5">return <expr><operator pos:line="28" pos:column="12">(<pos:position pos:line="28" pos:column="13"/></operator><ternary><condition><expr><operator pos:line="28" pos:column="13">(<pos:position pos:line="28" pos:column="14"/></operator><operator pos:line="28" pos:column="14">*<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="15">resp<pos:position pos:line="28" pos:column="19"/></name><operator pos:line="28" pos:column="19">)<pos:position pos:line="28" pos:column="20"/></operator><index pos:line="28" pos:column="20">[<expr><literal type="number" pos:line="28" pos:column="21">0<pos:position pos:line="28" pos:column="22"/></literal></expr>]<pos:position pos:line="28" pos:column="23"/></index><operator pos:line="28" pos:column="23">.<pos:position pos:line="28" pos:column="24"/></operator><name pos:line="28" pos:column="24">resp<pos:position pos:line="28" pos:column="28"/></name></expr> ?<pos:position pos:line="28" pos:column="30"/></condition><then pos:line="28" pos:column="30"> <expr><name pos:line="28" pos:column="31">PAM_SUCCESS<pos:position pos:line="28" pos:column="42"/></name></expr> <pos:position pos:line="28" pos:column="43"/></then><else pos:line="28" pos:column="43">: <expr><name pos:line="28" pos:column="45">PAM_CONV_ERR<pos:position pos:line="28" pos:column="57"/></name></expr></else></ternary><operator pos:line="28" pos:column="57">)<pos:position pos:line="28" pos:column="58"/></operator></expr>;<pos:position pos:line="28" pos:column="59"/></return>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

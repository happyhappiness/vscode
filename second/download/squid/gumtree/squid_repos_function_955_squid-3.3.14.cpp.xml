<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_955_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">httpMsgIsolateStart<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><specifier pos:line="2" pos:column="21">const<pos:position pos:line="2" pos:column="26"/></specifier> <name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier><modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">parse_start<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier><modifier pos:line="2" pos:column="59">*<pos:position pos:line="2" pos:column="60"/></modifier></type><name pos:line="2" pos:column="60">blk_start<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="71">const<pos:position pos:line="2" pos:column="76"/></specifier> <name pos:line="2" pos:column="77">char<pos:position pos:line="2" pos:column="81"/></name> <modifier pos:line="2" pos:column="82">*<pos:position pos:line="2" pos:column="83"/></modifier><modifier pos:line="2" pos:column="83">*<pos:position pos:line="2" pos:column="84"/></modifier></type><name pos:line="2" pos:column="84">blk_end<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="92"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">slen<pos:position pos:line="4" pos:column="13"/></name> <init pos:line="4" pos:column="14">= <expr><call><name pos:line="4" pos:column="16">strcspn<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">(<argument><expr><operator pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">parse_start<pos:position pos:line="4" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="38">"\r\n"<pos:position pos:line="4" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="46"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">!<pos:position pos:line="6" pos:column="10"/></operator><operator pos:line="6" pos:column="10">(<pos:position pos:line="6" pos:column="11"/></operator><operator pos:line="6" pos:column="11">*<pos:position pos:line="6" pos:column="12"/></operator><name pos:line="6" pos:column="12">parse_start<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">)<pos:position pos:line="6" pos:column="24"/></operator><index pos:line="6" pos:column="24">[<expr><name pos:line="6" pos:column="25">slen<pos:position pos:line="6" pos:column="29"/></name></expr>]<pos:position pos:line="6" pos:column="30"/></index></expr>)<pos:position pos:line="6" pos:column="31"/></condition><then pos:line="6" pos:column="31">  <comment type="block" pos:line="6" pos:column="33">/* no CRLF found */</comment>
        <block type="pseudo"><return pos:line="7" pos:column="9">return <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr>;<pos:position pos:line="7" pos:column="18"/></return></block></then></if>

    <expr_stmt><expr><operator pos:line="9" pos:column="5">*<pos:position pos:line="9" pos:column="6"/></operator><name pos:line="9" pos:column="6">blk_start<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <operator pos:line="9" pos:column="18">*<pos:position pos:line="9" pos:column="19"/></operator><name pos:line="9" pos:column="19">parse_start<pos:position pos:line="9" pos:column="30"/></name></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="11" pos:column="5">*<pos:position pos:line="11" pos:column="6"/></operator><name pos:line="11" pos:column="6">blk_end<pos:position pos:line="11" pos:column="13"/></name> <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <operator pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></operator><name pos:line="11" pos:column="17">blk_start<pos:position pos:line="11" pos:column="26"/></name> <operator pos:line="11" pos:column="27">+<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">slen<pos:position pos:line="11" pos:column="33"/></name></expr>;<pos:position pos:line="11" pos:column="34"/></expr_stmt>

    <while pos:line="13" pos:column="5">while <condition pos:line="13" pos:column="11">(<expr><operator pos:line="13" pos:column="12">*<pos:position pos:line="13" pos:column="13"/></operator><operator pos:line="13" pos:column="13">*<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">blk_end<pos:position pos:line="13" pos:column="21"/></name> <operator pos:line="13" pos:column="22">==<pos:position pos:line="13" pos:column="24"/></operator> <literal type="char" pos:line="13" pos:column="25">'\r'<pos:position pos:line="13" pos:column="29"/></literal></expr>)<pos:position pos:line="13" pos:column="30"/></condition>   <comment type="block" pos:line="13" pos:column="33">/* CR */</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="9">++<pos:position pos:line="14" pos:column="11"/></operator><operator pos:line="14" pos:column="11">(<pos:position pos:line="14" pos:column="12"/></operator><operator pos:line="14" pos:column="12">*<pos:position pos:line="14" pos:column="13"/></operator><name pos:line="14" pos:column="13">blk_end<pos:position pos:line="14" pos:column="20"/></name><operator pos:line="14" pos:column="20">)<pos:position pos:line="14" pos:column="21"/></operator></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt></block></while>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">*<pos:position pos:line="16" pos:column="10"/></operator><operator pos:line="16" pos:column="10">*<pos:position pos:line="16" pos:column="11"/></operator><name pos:line="16" pos:column="11">blk_end<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">==<pos:position pos:line="16" pos:column="21"/></operator> <literal type="char" pos:line="16" pos:column="22">'\n'<pos:position pos:line="16" pos:column="26"/></literal></expr>)<pos:position pos:line="16" pos:column="27"/></condition><then pos:line="16" pos:column="27">      <comment type="block" pos:line="16" pos:column="33">/* LF */</comment>
        <block type="pseudo"><expr_stmt><expr><operator pos:line="17" pos:column="9">++<pos:position pos:line="17" pos:column="11"/></operator><operator pos:line="17" pos:column="11">(<pos:position pos:line="17" pos:column="12"/></operator><operator pos:line="17" pos:column="12">*<pos:position pos:line="17" pos:column="13"/></operator><name pos:line="17" pos:column="13">blk_end<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">)<pos:position pos:line="17" pos:column="21"/></operator></expr>;<pos:position pos:line="17" pos:column="22"/></expr_stmt></block></then></if>

    <expr_stmt><expr><operator pos:line="19" pos:column="5">*<pos:position pos:line="19" pos:column="6"/></operator><name pos:line="19" pos:column="6">parse_start<pos:position pos:line="19" pos:column="17"/></name> <operator pos:line="19" pos:column="18">=<pos:position pos:line="19" pos:column="19"/></operator> <operator pos:line="19" pos:column="20">*<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">blk_end<pos:position pos:line="19" pos:column="28"/></name></expr>;<pos:position pos:line="19" pos:column="29"/></expr_stmt>

    <return pos:line="21" pos:column="5">return <expr><literal type="number" pos:line="21" pos:column="12">1<pos:position pos:line="21" pos:column="13"/></literal></expr>;<pos:position pos:line="21" pos:column="14"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

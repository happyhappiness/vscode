<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3459_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">clientStream_status_t<pos:position pos:line="1" pos:column="22"/></name></type>
<name><name pos:line="2" pos:column="1">ClientSocketContext<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">socketState<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <switch pos:line="4" pos:column="5">switch <condition pos:line="4" pos:column="12">(<expr><call><name pos:line="4" pos:column="13">clientStreamStatus<pos:position pos:line="4" pos:column="31"/></name><argument_list pos:line="4" pos:column="31">(<argument><expr><call><name pos:line="4" pos:column="32">getTail<pos:position pos:line="4" pos:column="39"/></name><argument_list pos:line="4" pos:column="39">()<pos:position pos:line="4" pos:column="41"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="4" pos:column="43">http<pos:position pos:line="4" pos:column="47"/></name></expr></argument>)<pos:position pos:line="4" pos:column="48"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="49"/></condition> <block pos:line="4" pos:column="50">{

    <case pos:line="6" pos:column="5">case <expr><name pos:line="6" pos:column="10">STREAM_NONE<pos:position pos:line="6" pos:column="21"/></name></expr>:<pos:position pos:line="6" pos:column="22"/></case>
        <comment type="block" pos:line="7" pos:column="9">/* check for range support ending */</comment>

        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<expr><name><name pos:line="9" pos:column="13">http<pos:position pos:line="9" pos:column="17"/></name><operator pos:line="9" pos:column="17">-&gt;<pos:position pos:line="9" pos:column="22"/></operator><name pos:line="9" pos:column="19">request<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">range<pos:position pos:line="9" pos:column="33"/></name></name></expr>)<pos:position pos:line="9" pos:column="34"/></condition><then pos:line="9" pos:column="34"> <block pos:line="9" pos:column="35">{
            <comment type="block" pos:line="10" pos:column="13">/* check: reply was parsed and range iterator was initialized */</comment>
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">assert<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><name><name pos:line="11" pos:column="20">http<pos:position pos:line="11" pos:column="24"/></name><operator pos:line="11" pos:column="24">-&gt;<pos:position pos:line="11" pos:column="29"/></operator><name pos:line="11" pos:column="26">range_iter<pos:position pos:line="11" pos:column="36"/></name><operator pos:line="11" pos:column="36">.<pos:position pos:line="11" pos:column="37"/></operator><name pos:line="11" pos:column="37">valid<pos:position pos:line="11" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="44"/></expr_stmt>
            <comment type="block" pos:line="12" pos:column="13">/* filter out data according to range specs */</comment>

            <if pos:line="14" pos:column="13">if <condition pos:line="14" pos:column="16">(<expr><operator pos:line="14" pos:column="17">!<pos:position pos:line="14" pos:column="18"/></operator><call><name pos:line="14" pos:column="18">canPackMoreRanges<pos:position pos:line="14" pos:column="35"/></name><argument_list pos:line="14" pos:column="35">()<pos:position pos:line="14" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="38"/></condition><then pos:line="14" pos:column="38"> <block pos:line="14" pos:column="39">{
                <expr_stmt><expr><call><name pos:line="15" pos:column="17">debugs<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><literal type="number" pos:line="15" pos:column="24">33<pos:position pos:line="15" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="28">5<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="31">HERE<pos:position pos:line="15" pos:column="35"/></name> <operator pos:line="15" pos:column="36">&lt;&lt;<pos:position pos:line="15" pos:column="44"/></operator> <literal type="string" pos:line="15" pos:column="39">"Range request at end of returnable "<pos:position pos:line="15" pos:column="76"/></literal> <operator pos:line="15" pos:column="77">&lt;&lt;<pos:position pos:line="15" pos:column="85"/></operator>
                       <literal type="string" pos:line="16" pos:column="24">"range sequence on FD "<pos:position pos:line="16" pos:column="47"/></literal> <operator pos:line="16" pos:column="48">&lt;&lt;<pos:position pos:line="16" pos:column="56"/></operator> <call><name pos:line="16" pos:column="51">fd<pos:position pos:line="16" pos:column="53"/></name><argument_list pos:line="16" pos:column="53">()<pos:position pos:line="16" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="57"/></expr_stmt>

                <if pos:line="18" pos:column="17">if <condition pos:line="18" pos:column="20">(<expr><name><name pos:line="18" pos:column="21">http<pos:position pos:line="18" pos:column="25"/></name><operator pos:line="18" pos:column="25">-&gt;<pos:position pos:line="18" pos:column="30"/></operator><name pos:line="18" pos:column="27">request<pos:position pos:line="18" pos:column="34"/></name><operator pos:line="18" pos:column="34">-&gt;<pos:position pos:line="18" pos:column="39"/></operator><name pos:line="18" pos:column="36">flags<pos:position pos:line="18" pos:column="41"/></name><operator pos:line="18" pos:column="41">.<pos:position pos:line="18" pos:column="42"/></operator><name pos:line="18" pos:column="42">proxy_keepalive<pos:position pos:line="18" pos:column="57"/></name></name></expr>)<pos:position pos:line="18" pos:column="58"/></condition><then pos:line="18" pos:column="58">
                    <block type="pseudo"><return pos:line="19" pos:column="21">return <expr><name pos:line="19" pos:column="28">STREAM_COMPLETE<pos:position pos:line="19" pos:column="43"/></name></expr>;<pos:position pos:line="19" pos:column="44"/></return></block></then>
                <else pos:line="20" pos:column="17">else
                    <block type="pseudo"><return pos:line="21" pos:column="21">return <expr><name pos:line="21" pos:column="28">STREAM_UNPLANNED_COMPLETE<pos:position pos:line="21" pos:column="53"/></name></expr>;<pos:position pos:line="21" pos:column="54"/></return></block></else></if>
            }<pos:position pos:line="22" pos:column="14"/></block></then></if>
        }<pos:position pos:line="23" pos:column="10"/></block></then> <elseif pos:line="23" pos:column="11">else <if pos:line="23" pos:column="16">if <condition pos:line="23" pos:column="19">(<expr><name pos:line="23" pos:column="20">reply<pos:position pos:line="23" pos:column="25"/></name> <operator pos:line="23" pos:column="26">&amp;&amp;<pos:position pos:line="23" pos:column="36"/></operator> <name><name pos:line="23" pos:column="29">reply<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">content_range<pos:position pos:line="23" pos:column="49"/></name></name></expr>)<pos:position pos:line="23" pos:column="50"/></condition><then pos:line="23" pos:column="50"> <block pos:line="23" pos:column="51">{
            <comment type="block" pos:line="24" pos:column="13">/* reply has content-range, but Squid is not managing ranges */</comment>
            <decl_stmt><decl><type><specifier pos:line="25" pos:column="13">const<pos:position pos:line="25" pos:column="18"/></specifier> <name pos:line="25" pos:column="19">int64_t<pos:position pos:line="25" pos:column="26"/></name> <modifier pos:line="25" pos:column="27">&amp;<pos:position pos:line="25" pos:column="32"/></modifier></type><name pos:line="25" pos:column="28">bytesSent<pos:position pos:line="25" pos:column="37"/></name> <init pos:line="25" pos:column="38">= <expr><name><name pos:line="25" pos:column="40">http<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">-&gt;<pos:position pos:line="25" pos:column="49"/></operator><name pos:line="25" pos:column="46">out<pos:position pos:line="25" pos:column="49"/></name><operator pos:line="25" pos:column="49">.<pos:position pos:line="25" pos:column="50"/></operator><name pos:line="25" pos:column="50">offset<pos:position pos:line="25" pos:column="56"/></name></name></expr></init></decl>;<pos:position pos:line="25" pos:column="57"/></decl_stmt>
            <decl_stmt><decl><type><specifier pos:line="26" pos:column="13">const<pos:position pos:line="26" pos:column="18"/></specifier> <name pos:line="26" pos:column="19">int64_t<pos:position pos:line="26" pos:column="26"/></name> <modifier pos:line="26" pos:column="27">&amp;<pos:position pos:line="26" pos:column="32"/></modifier></type><name pos:line="26" pos:column="28">bytesExpected<pos:position pos:line="26" pos:column="41"/></name> <init pos:line="26" pos:column="42">= <expr><name><name pos:line="26" pos:column="44">reply<pos:position pos:line="26" pos:column="49"/></name><operator pos:line="26" pos:column="49">-&gt;<pos:position pos:line="26" pos:column="54"/></operator><name pos:line="26" pos:column="51">content_range<pos:position pos:line="26" pos:column="64"/></name><operator pos:line="26" pos:column="64">-&gt;<pos:position pos:line="26" pos:column="69"/></operator><name pos:line="26" pos:column="66">spec<pos:position pos:line="26" pos:column="70"/></name><operator pos:line="26" pos:column="70">.<pos:position pos:line="26" pos:column="71"/></operator><name pos:line="26" pos:column="71">length<pos:position pos:line="26" pos:column="77"/></name></name></expr></init></decl>;<pos:position pos:line="26" pos:column="78"/></decl_stmt>

            <expr_stmt><expr><call><name pos:line="28" pos:column="13">debugs<pos:position pos:line="28" pos:column="19"/></name><argument_list pos:line="28" pos:column="19">(<argument><expr><literal type="number" pos:line="28" pos:column="20">33<pos:position pos:line="28" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="24">7<pos:position pos:line="28" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="28" pos:column="27">HERE<pos:position pos:line="28" pos:column="31"/></name> <operator pos:line="28" pos:column="32">&lt;&lt;<pos:position pos:line="28" pos:column="40"/></operator> <literal type="string" pos:line="28" pos:column="35">"body bytes sent vs. expected: "<pos:position pos:line="28" pos:column="67"/></literal> <operator pos:line="28" pos:column="68">&lt;&lt;<pos:position pos:line="28" pos:column="76"/></operator>
                   <name pos:line="29" pos:column="20">bytesSent<pos:position pos:line="29" pos:column="29"/></name> <operator pos:line="29" pos:column="30">&lt;&lt;<pos:position pos:line="29" pos:column="38"/></operator> <literal type="string" pos:line="29" pos:column="33">" ? "<pos:position pos:line="29" pos:column="38"/></literal> <operator pos:line="29" pos:column="39">&lt;&lt;<pos:position pos:line="29" pos:column="47"/></operator> <name pos:line="29" pos:column="42">bytesExpected<pos:position pos:line="29" pos:column="55"/></name> <operator pos:line="29" pos:column="56">&lt;&lt;<pos:position pos:line="29" pos:column="64"/></operator> <literal type="string" pos:line="29" pos:column="59">" (+"<pos:position pos:line="29" pos:column="64"/></literal> <operator pos:line="29" pos:column="65">&lt;&lt;<pos:position pos:line="29" pos:column="73"/></operator>
                   <name><name pos:line="30" pos:column="20">reply<pos:position pos:line="30" pos:column="25"/></name><operator pos:line="30" pos:column="25">-&gt;<pos:position pos:line="30" pos:column="30"/></operator><name pos:line="30" pos:column="27">content_range<pos:position pos:line="30" pos:column="40"/></name><operator pos:line="30" pos:column="40">-&gt;<pos:position pos:line="30" pos:column="45"/></operator><name pos:line="30" pos:column="42">spec<pos:position pos:line="30" pos:column="46"/></name><operator pos:line="30" pos:column="46">.<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="47">offset<pos:position pos:line="30" pos:column="53"/></name></name> <operator pos:line="30" pos:column="54">&lt;&lt;<pos:position pos:line="30" pos:column="62"/></operator> <literal type="string" pos:line="30" pos:column="57">")"<pos:position pos:line="30" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="62"/></expr_stmt>

            <comment type="line" pos:line="32" pos:column="13">// did we get at least what we expected, based on range specs?</comment>

            <if pos:line="34" pos:column="13">if <condition pos:line="34" pos:column="16">(<expr><name pos:line="34" pos:column="17">bytesSent<pos:position pos:line="34" pos:column="26"/></name> <operator pos:line="34" pos:column="27">==<pos:position pos:line="34" pos:column="29"/></operator> <name pos:line="34" pos:column="30">bytesExpected<pos:position pos:line="34" pos:column="43"/></name></expr>)<pos:position pos:line="34" pos:column="44"/></condition><then pos:line="34" pos:column="44"> <block pos:line="34" pos:column="45">{ <comment type="line" pos:line="34" pos:column="47">// got everything</comment>
                <if pos:line="35" pos:column="17">if <condition pos:line="35" pos:column="20">(<expr><name><name pos:line="35" pos:column="21">http<pos:position pos:line="35" pos:column="25"/></name><operator pos:line="35" pos:column="25">-&gt;<pos:position pos:line="35" pos:column="30"/></operator><name pos:line="35" pos:column="27">request<pos:position pos:line="35" pos:column="34"/></name><operator pos:line="35" pos:column="34">-&gt;<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="36">flags<pos:position pos:line="35" pos:column="41"/></name><operator pos:line="35" pos:column="41">.<pos:position pos:line="35" pos:column="42"/></operator><name pos:line="35" pos:column="42">proxy_keepalive<pos:position pos:line="35" pos:column="57"/></name></name></expr>)<pos:position pos:line="35" pos:column="58"/></condition><then pos:line="35" pos:column="58">
                    <block type="pseudo"><return pos:line="36" pos:column="21">return <expr><name pos:line="36" pos:column="28">STREAM_COMPLETE<pos:position pos:line="36" pos:column="43"/></name></expr>;<pos:position pos:line="36" pos:column="44"/></return></block></then>
                <else pos:line="37" pos:column="17">else
                    <block type="pseudo"><return pos:line="38" pos:column="21">return <expr><name pos:line="38" pos:column="28">STREAM_UNPLANNED_COMPLETE<pos:position pos:line="38" pos:column="53"/></name></expr>;<pos:position pos:line="38" pos:column="54"/></return></block></else></if>
            }<pos:position pos:line="39" pos:column="14"/></block></then></if>

            <comment type="line" pos:line="41" pos:column="13">// The logic below is not clear: If we got more than we</comment>
            <comment type="line" pos:line="42" pos:column="13">// expected why would persistency matter? Should not this</comment>
            <comment type="line" pos:line="43" pos:column="13">// always be an error?</comment>
            <if pos:line="44" pos:column="13">if <condition pos:line="44" pos:column="16">(<expr><name pos:line="44" pos:column="17">bytesSent<pos:position pos:line="44" pos:column="26"/></name> <operator pos:line="44" pos:column="27">&gt;<pos:position pos:line="44" pos:column="31"/></operator> <name pos:line="44" pos:column="29">bytesExpected<pos:position pos:line="44" pos:column="42"/></name></expr>)<pos:position pos:line="44" pos:column="43"/></condition><then pos:line="44" pos:column="43"> <block pos:line="44" pos:column="44">{ <comment type="line" pos:line="44" pos:column="46">// got extra</comment>
                <if pos:line="45" pos:column="17">if <condition pos:line="45" pos:column="20">(<expr><name><name pos:line="45" pos:column="21">http<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">-&gt;<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="27">request<pos:position pos:line="45" pos:column="34"/></name><operator pos:line="45" pos:column="34">-&gt;<pos:position pos:line="45" pos:column="39"/></operator><name pos:line="45" pos:column="36">flags<pos:position pos:line="45" pos:column="41"/></name><operator pos:line="45" pos:column="41">.<pos:position pos:line="45" pos:column="42"/></operator><name pos:line="45" pos:column="42">proxy_keepalive<pos:position pos:line="45" pos:column="57"/></name></name></expr>)<pos:position pos:line="45" pos:column="58"/></condition><then pos:line="45" pos:column="58">
                    <block type="pseudo"><return pos:line="46" pos:column="21">return <expr><name pos:line="46" pos:column="28">STREAM_COMPLETE<pos:position pos:line="46" pos:column="43"/></name></expr>;<pos:position pos:line="46" pos:column="44"/></return></block></then>
                <else pos:line="47" pos:column="17">else
                    <block type="pseudo"><return pos:line="48" pos:column="21">return <expr><name pos:line="48" pos:column="28">STREAM_UNPLANNED_COMPLETE<pos:position pos:line="48" pos:column="53"/></name></expr>;<pos:position pos:line="48" pos:column="54"/></return></block></else></if>
            }<pos:position pos:line="49" pos:column="14"/></block></then></if>

            <comment type="line" pos:line="51" pos:column="13">// did not get enough yet, expecting more</comment>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if></elseif></if>

        <return pos:line="54" pos:column="9">return <expr><name pos:line="54" pos:column="16">STREAM_NONE<pos:position pos:line="54" pos:column="27"/></name></expr>;<pos:position pos:line="54" pos:column="28"/></return>

    <case pos:line="56" pos:column="5">case <expr><name pos:line="56" pos:column="10">STREAM_COMPLETE<pos:position pos:line="56" pos:column="25"/></name></expr>:<pos:position pos:line="56" pos:column="26"/></case>
        <return pos:line="57" pos:column="9">return <expr><name pos:line="57" pos:column="16">STREAM_COMPLETE<pos:position pos:line="57" pos:column="31"/></name></expr>;<pos:position pos:line="57" pos:column="32"/></return>

    <case pos:line="59" pos:column="5">case <expr><name pos:line="59" pos:column="10">STREAM_UNPLANNED_COMPLETE<pos:position pos:line="59" pos:column="35"/></name></expr>:<pos:position pos:line="59" pos:column="36"/></case>
        <return pos:line="60" pos:column="9">return <expr><name pos:line="60" pos:column="16">STREAM_UNPLANNED_COMPLETE<pos:position pos:line="60" pos:column="41"/></name></expr>;<pos:position pos:line="60" pos:column="42"/></return>

    <case pos:line="62" pos:column="5">case <expr><name pos:line="62" pos:column="10">STREAM_FAILED<pos:position pos:line="62" pos:column="23"/></name></expr>:<pos:position pos:line="62" pos:column="24"/></case>
        <return pos:line="63" pos:column="9">return <expr><name pos:line="63" pos:column="16">STREAM_FAILED<pos:position pos:line="63" pos:column="29"/></name></expr>;<pos:position pos:line="63" pos:column="30"/></return>
    }<pos:position pos:line="64" pos:column="6"/></block></switch>

    <expr_stmt><expr><call><name pos:line="66" pos:column="5">fatal<pos:position pos:line="66" pos:column="10"/></name> <argument_list pos:line="66" pos:column="11">(<argument><expr><literal type="string" pos:line="66" pos:column="12">"unreachable code\n"<pos:position pos:line="66" pos:column="32"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="34"/></expr_stmt>
    <return pos:line="67" pos:column="5">return <expr><name pos:line="67" pos:column="12">STREAM_NONE<pos:position pos:line="67" pos:column="23"/></name></expr>;<pos:position pos:line="67" pos:column="24"/></return>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

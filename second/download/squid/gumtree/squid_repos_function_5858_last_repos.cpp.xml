<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5858_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">validUsername<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name pos:line="2" pos:column="21">char<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">user<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">unsigned<pos:position pos:line="4" pos:column="19"/></name> <name pos:line="4" pos:column="20">char<pos:position pos:line="4" pos:column="24"/></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">p<pos:position pos:line="4" pos:column="27"/></name> <init pos:line="4" pos:column="28">= <expr><operator pos:line="4" pos:column="30">(<pos:position pos:line="4" pos:column="31"/></operator><specifier pos:line="4" pos:column="31">const<pos:position pos:line="4" pos:column="36"/></specifier> <name pos:line="4" pos:column="37">unsigned<pos:position pos:line="4" pos:column="45"/></name> <name pos:line="4" pos:column="46">char<pos:position pos:line="4" pos:column="50"/></name> <operator pos:line="4" pos:column="51">*<pos:position pos:line="4" pos:column="52"/></operator><operator pos:line="4" pos:column="52">)<pos:position pos:line="4" pos:column="53"/></operator> <name pos:line="4" pos:column="54">user<pos:position pos:line="4" pos:column="58"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="59"/></decl_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Leading whitespace? */</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">xisspace<pos:position pos:line="7" pos:column="17"/></name><argument_list pos:line="7" pos:column="17">(<argument><expr><name><name pos:line="7" pos:column="18">p<pos:position pos:line="7" pos:column="19"/></name><index pos:line="7" pos:column="19">[<expr><literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr>]<pos:position pos:line="7" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="7" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="24"/></condition><then pos:line="7" pos:column="24">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">0<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return></block></then></if>
    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><name><name pos:line="9" pos:column="12">p<pos:position pos:line="9" pos:column="13"/></name><index pos:line="9" pos:column="13">[<expr><literal type="number" pos:line="9" pos:column="14">0<pos:position pos:line="9" pos:column="15"/></literal></expr>]<pos:position pos:line="9" pos:column="16"/></index></name> <operator pos:line="9" pos:column="17">&amp;&amp;<pos:position pos:line="9" pos:column="27"/></operator> <name><name pos:line="9" pos:column="20">p<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><literal type="number" pos:line="9" pos:column="22">1<pos:position pos:line="9" pos:column="23"/></literal></expr>]<pos:position pos:line="9" pos:column="24"/></index></name></expr>)<pos:position pos:line="9" pos:column="25"/></condition> <block pos:line="9" pos:column="26">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">xisspace<pos:position pos:line="10" pos:column="21"/></name><argument_list pos:line="10" pos:column="21">(<argument><expr><name><name pos:line="10" pos:column="22">p<pos:position pos:line="10" pos:column="23"/></name><index pos:line="10" pos:column="23">[<expr><literal type="number" pos:line="10" pos:column="24">0<pos:position pos:line="10" pos:column="25"/></literal></expr>]<pos:position pos:line="10" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="10" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="28"/></condition><then pos:line="10" pos:column="28"> <block pos:line="10" pos:column="29">{
            <comment type="block" pos:line="11" pos:column="13">/* More than one consequitive space? */</comment>
            <if pos:line="12" pos:column="13">if <condition pos:line="12" pos:column="16">(<expr><call><name pos:line="12" pos:column="17">xisspace<pos:position pos:line="12" pos:column="25"/></name><argument_list pos:line="12" pos:column="25">(<argument><expr><name><name pos:line="12" pos:column="26">p<pos:position pos:line="12" pos:column="27"/></name><index pos:line="12" pos:column="27">[<expr><literal type="number" pos:line="12" pos:column="28">1<pos:position pos:line="12" pos:column="29"/></literal></expr>]<pos:position pos:line="12" pos:column="30"/></index></name></expr></argument>)<pos:position pos:line="12" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="32"/></condition><then pos:line="12" pos:column="32">
                <block type="pseudo"><return pos:line="13" pos:column="17">return <expr><literal type="number" pos:line="13" pos:column="24">0<pos:position pos:line="13" pos:column="25"/></literal></expr>;<pos:position pos:line="13" pos:column="26"/></return></block></then></if>
            <comment type="block" pos:line="14" pos:column="13">/* or odd space type character used? */</comment>
            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><name><name pos:line="15" pos:column="17">p<pos:position pos:line="15" pos:column="18"/></name><index pos:line="15" pos:column="18">[<expr><literal type="number" pos:line="15" pos:column="19">0<pos:position pos:line="15" pos:column="20"/></literal></expr>]<pos:position pos:line="15" pos:column="21"/></index></name> <operator pos:line="15" pos:column="22">!=<pos:position pos:line="15" pos:column="24"/></operator> <literal type="char" pos:line="15" pos:column="25">' '<pos:position pos:line="15" pos:column="28"/></literal></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29">
                <block type="pseudo"><return pos:line="16" pos:column="17">return <expr><literal type="number" pos:line="16" pos:column="24">0<pos:position pos:line="16" pos:column="25"/></literal></expr>;<pos:position pos:line="16" pos:column="26"/></return></block></then></if>
        }<pos:position pos:line="17" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="18" pos:column="9">++<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">p<pos:position pos:line="18" pos:column="12"/></name></expr>;<pos:position pos:line="18" pos:column="13"/></expr_stmt>
    }<pos:position pos:line="19" pos:column="6"/></block></while>
    <comment type="block" pos:line="20" pos:column="5">/* Trailing whitespace? */</comment>
    <if pos:line="21" pos:column="5">if <condition pos:line="21" pos:column="8">(<expr><call><name pos:line="21" pos:column="9">xisspace<pos:position pos:line="21" pos:column="17"/></name><argument_list pos:line="21" pos:column="17">(<argument><expr><name><name pos:line="21" pos:column="18">p<pos:position pos:line="21" pos:column="19"/></name><index pos:line="21" pos:column="19">[<expr><literal type="number" pos:line="21" pos:column="20">0<pos:position pos:line="21" pos:column="21"/></literal></expr>]<pos:position pos:line="21" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="21" pos:column="23"/></argument_list></call></expr>)<pos:position pos:line="21" pos:column="24"/></condition><then pos:line="21" pos:column="24">
        <block type="pseudo"><return pos:line="22" pos:column="9">return <expr><literal type="number" pos:line="22" pos:column="16">0<pos:position pos:line="22" pos:column="17"/></literal></expr>;<pos:position pos:line="22" pos:column="18"/></return></block></then></if>
    <return pos:line="23" pos:column="5">return <expr><literal type="number" pos:line="23" pos:column="12">1<pos:position pos:line="23" pos:column="13"/></literal></expr>;<pos:position pos:line="23" pos:column="14"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1935_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">externalAclHandleReply<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">void<pos:position pos:line="2" pos:column="28"/></name> <modifier pos:line="2" pos:column="29">*<pos:position pos:line="2" pos:column="30"/></modifier></type><name pos:line="2" pos:column="30">data<pos:position pos:line="2" pos:column="34"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="36">const<pos:position pos:line="2" pos:column="41"/></specifier> <name><name pos:line="2" pos:column="42">Helper<pos:position pos:line="2" pos:column="48"/></name><operator pos:line="2" pos:column="48">::<pos:position pos:line="2" pos:column="50"/></operator><name pos:line="2" pos:column="50">Reply<pos:position pos:line="2" pos:column="55"/></name></name> <modifier pos:line="2" pos:column="56">&amp;<pos:position pos:line="2" pos:column="61"/></modifier></type><name pos:line="2" pos:column="57">reply<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">externalAclState<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">state<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><cast type="static" pos:line="4" pos:column="31">static_cast<argument_list type="generic" pos:line="4" pos:column="42">&lt;<argument><expr><name pos:line="4" pos:column="43">externalAclState<pos:position pos:line="4" pos:column="59"/></name> <operator pos:line="4" pos:column="60">*<pos:position pos:line="4" pos:column="61"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="65"/></argument_list><argument_list pos:line="4" pos:column="62">(<argument><expr><name pos:line="4" pos:column="63">data<pos:position pos:line="4" pos:column="67"/></name></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="69"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">externalAclState<pos:position pos:line="5" pos:column="21"/></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">next<pos:position pos:line="5" pos:column="27"/></name></decl>;<pos:position pos:line="5" pos:column="28"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">ExternalACLEntryData<pos:position pos:line="6" pos:column="25"/></name></type> <name pos:line="6" pos:column="26">entryData<pos:position pos:line="6" pos:column="35"/></name></decl>;<pos:position pos:line="6" pos:column="36"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">82<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="16">2<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="19">HERE<pos:position pos:line="8" pos:column="23"/></name> <operator pos:line="8" pos:column="24">&lt;&lt;<pos:position pos:line="8" pos:column="32"/></operator> <literal type="string" pos:line="8" pos:column="27">"reply="<pos:position pos:line="8" pos:column="35"/></literal> <operator pos:line="8" pos:column="36">&lt;&lt;<pos:position pos:line="8" pos:column="44"/></operator> <name pos:line="8" pos:column="39">reply<pos:position pos:line="8" pos:column="44"/></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name><name pos:line="10" pos:column="9">reply<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">.<pos:position pos:line="10" pos:column="15"/></operator><name pos:line="10" pos:column="15">result<pos:position pos:line="10" pos:column="21"/></name></name> <operator pos:line="10" pos:column="22">==<pos:position pos:line="10" pos:column="24"/></operator> <name><name pos:line="10" pos:column="25">Helper<pos:position pos:line="10" pos:column="31"/></name><operator pos:line="10" pos:column="31">::<pos:position pos:line="10" pos:column="33"/></operator><name pos:line="10" pos:column="33">Okay<pos:position pos:line="10" pos:column="37"/></name></name></expr>)<pos:position pos:line="10" pos:column="38"/></condition><then pos:line="10" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="11" pos:column="9">entryData<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">.<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">result<pos:position pos:line="11" pos:column="25"/></name></name> <operator pos:line="11" pos:column="26">=<pos:position pos:line="11" pos:column="27"/></operator> <name pos:line="11" pos:column="28">ACCESS_ALLOWED<pos:position pos:line="11" pos:column="42"/></name></expr>;<pos:position pos:line="11" pos:column="43"/></expr_stmt></block></then>
    <elseif pos:line="12" pos:column="5">else <if pos:line="12" pos:column="10">if <condition pos:line="12" pos:column="13">(<expr><name><name pos:line="12" pos:column="14">reply<pos:position pos:line="12" pos:column="19"/></name><operator pos:line="12" pos:column="19">.<pos:position pos:line="12" pos:column="20"/></operator><name pos:line="12" pos:column="20">result<pos:position pos:line="12" pos:column="26"/></name></name> <operator pos:line="12" pos:column="27">==<pos:position pos:line="12" pos:column="29"/></operator> <name><name pos:line="12" pos:column="30">Helper<pos:position pos:line="12" pos:column="36"/></name><operator pos:line="12" pos:column="36">::<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">Error<pos:position pos:line="12" pos:column="43"/></name></name></expr>)<pos:position pos:line="12" pos:column="44"/></condition><then pos:line="12" pos:column="44">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="13" pos:column="9">entryData<pos:position pos:line="13" pos:column="18"/></name><operator pos:line="13" pos:column="18">.<pos:position pos:line="13" pos:column="19"/></operator><name pos:line="13" pos:column="19">result<pos:position pos:line="13" pos:column="25"/></name></name> <operator pos:line="13" pos:column="26">=<pos:position pos:line="13" pos:column="27"/></operator> <name pos:line="13" pos:column="28">ACCESS_DENIED<pos:position pos:line="13" pos:column="41"/></name></expr>;<pos:position pos:line="13" pos:column="42"/></expr_stmt></block></then></if></elseif>
    <else pos:line="14" pos:column="5">else <comment type="line" pos:line="14" pos:column="10">//BrokenHelper,TimedOut or Unknown. Should not cached.</comment>
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="15" pos:column="9">entryData<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">.<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">result<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">ACCESS_DUNNO<pos:position pos:line="15" pos:column="40"/></name></expr>;<pos:position pos:line="15" pos:column="41"/></expr_stmt></block></else></if>

    <comment type="line" pos:line="17" pos:column="5">// XXX: make entryData store a proper Helper::Reply object instead of copying.</comment>

    <expr_stmt><expr><call><name><name pos:line="19" pos:column="5">entryData<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">.<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">notes<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">.<pos:position pos:line="19" pos:column="21"/></operator><name pos:line="19" pos:column="21">append<pos:position pos:line="19" pos:column="27"/></name></name><argument_list pos:line="19" pos:column="27">(<argument><expr><operator pos:line="19" pos:column="28">&amp;<pos:position pos:line="19" pos:column="33"/></operator><name><name pos:line="19" pos:column="29">reply<pos:position pos:line="19" pos:column="34"/></name><operator pos:line="19" pos:column="34">.<pos:position pos:line="19" pos:column="35"/></operator><name pos:line="19" pos:column="35">notes<pos:position pos:line="19" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="21" pos:column="5">const<pos:position pos:line="21" pos:column="10"/></specifier> <name pos:line="21" pos:column="11">char<pos:position pos:line="21" pos:column="15"/></name> <modifier pos:line="21" pos:column="16">*<pos:position pos:line="21" pos:column="17"/></modifier></type><name pos:line="21" pos:column="17">label<pos:position pos:line="21" pos:column="22"/></name> <init pos:line="21" pos:column="23">= <expr><call><name><name pos:line="21" pos:column="25">reply<pos:position pos:line="21" pos:column="30"/></name><operator pos:line="21" pos:column="30">.<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="31">notes<pos:position pos:line="21" pos:column="36"/></name><operator pos:line="21" pos:column="36">.<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="37">findFirst<pos:position pos:line="21" pos:column="46"/></name></name><argument_list pos:line="21" pos:column="46">(<argument><expr><literal type="string" pos:line="21" pos:column="47">"tag"<pos:position pos:line="21" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="54"/></decl_stmt>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">label<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">!=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">NULL<pos:position pos:line="22" pos:column="22"/></name> <operator pos:line="22" pos:column="23">&amp;&amp;<pos:position pos:line="22" pos:column="33"/></operator> <operator pos:line="22" pos:column="26">*<pos:position pos:line="22" pos:column="27"/></operator><name pos:line="22" pos:column="27">label<pos:position pos:line="22" pos:column="32"/></name> <operator pos:line="22" pos:column="33">!=<pos:position pos:line="22" pos:column="35"/></operator> <literal type="char" pos:line="22" pos:column="36">'\0'<pos:position pos:line="22" pos:column="40"/></literal></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="23" pos:column="9">entryData<pos:position pos:line="23" pos:column="18"/></name><operator pos:line="23" pos:column="18">.<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="19">tag<pos:position pos:line="23" pos:column="22"/></name></name> <operator pos:line="23" pos:column="23">=<pos:position pos:line="23" pos:column="24"/></operator> <name pos:line="23" pos:column="25">label<pos:position pos:line="23" pos:column="30"/></name></expr>;<pos:position pos:line="23" pos:column="31"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="25" pos:column="5">label<pos:position pos:line="25" pos:column="10"/></name> <operator pos:line="25" pos:column="11">=<pos:position pos:line="25" pos:column="12"/></operator> <call><name><name pos:line="25" pos:column="13">reply<pos:position pos:line="25" pos:column="18"/></name><operator pos:line="25" pos:column="18">.<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">notes<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">.<pos:position pos:line="25" pos:column="25"/></operator><name pos:line="25" pos:column="25">findFirst<pos:position pos:line="25" pos:column="34"/></name></name><argument_list pos:line="25" pos:column="34">(<argument><expr><literal type="string" pos:line="25" pos:column="35">"message"<pos:position pos:line="25" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="46"/></expr_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">label<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">!=<pos:position pos:line="26" pos:column="17"/></operator> <name pos:line="26" pos:column="18">NULL<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">&amp;&amp;<pos:position pos:line="26" pos:column="33"/></operator> <operator pos:line="26" pos:column="26">*<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="27">label<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">!=<pos:position pos:line="26" pos:column="35"/></operator> <literal type="char" pos:line="26" pos:column="36">'\0'<pos:position pos:line="26" pos:column="40"/></literal></expr>)<pos:position pos:line="26" pos:column="41"/></condition><then pos:line="26" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="27" pos:column="9">entryData<pos:position pos:line="27" pos:column="18"/></name><operator pos:line="27" pos:column="18">.<pos:position pos:line="27" pos:column="19"/></operator><name pos:line="27" pos:column="19">message<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="29">label<pos:position pos:line="27" pos:column="34"/></name></expr>;<pos:position pos:line="27" pos:column="35"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="29" pos:column="5">label<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">=<pos:position pos:line="29" pos:column="12"/></operator> <call><name><name pos:line="29" pos:column="13">reply<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">.<pos:position pos:line="29" pos:column="19"/></operator><name pos:line="29" pos:column="19">notes<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">.<pos:position pos:line="29" pos:column="25"/></operator><name pos:line="29" pos:column="25">findFirst<pos:position pos:line="29" pos:column="34"/></name></name><argument_list pos:line="29" pos:column="34">(<argument><expr><literal type="string" pos:line="29" pos:column="35">"log"<pos:position pos:line="29" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">label<pos:position pos:line="30" pos:column="14"/></name> <operator pos:line="30" pos:column="15">!=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">NULL<pos:position pos:line="30" pos:column="22"/></name> <operator pos:line="30" pos:column="23">&amp;&amp;<pos:position pos:line="30" pos:column="33"/></operator> <operator pos:line="30" pos:column="26">*<pos:position pos:line="30" pos:column="27"/></operator><name pos:line="30" pos:column="27">label<pos:position pos:line="30" pos:column="32"/></name> <operator pos:line="30" pos:column="33">!=<pos:position pos:line="30" pos:column="35"/></operator> <literal type="char" pos:line="30" pos:column="36">'\0'<pos:position pos:line="30" pos:column="40"/></literal></expr>)<pos:position pos:line="30" pos:column="41"/></condition><then pos:line="30" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="31" pos:column="9">entryData<pos:position pos:line="31" pos:column="18"/></name><operator pos:line="31" pos:column="18">.<pos:position pos:line="31" pos:column="19"/></operator><name pos:line="31" pos:column="19">log<pos:position pos:line="31" pos:column="22"/></name></name> <operator pos:line="31" pos:column="23">=<pos:position pos:line="31" pos:column="24"/></operator> <name pos:line="31" pos:column="25">label<pos:position pos:line="31" pos:column="30"/></name></expr>;<pos:position pos:line="31" pos:column="31"/></expr_stmt></block></then></if>

<cpp:if pos:line="33" pos:column="1">#<cpp:directive pos:line="33" pos:column="2">if<pos:position pos:line="33" pos:column="4"/></cpp:directive> <expr><name pos:line="33" pos:column="5">USE_AUTH<pos:position pos:line="33" pos:column="13"/></name></expr></cpp:if>
    <expr_stmt><expr><name pos:line="34" pos:column="5">label<pos:position pos:line="34" pos:column="10"/></name> <operator pos:line="34" pos:column="11">=<pos:position pos:line="34" pos:column="12"/></operator> <call><name><name pos:line="34" pos:column="13">reply<pos:position pos:line="34" pos:column="18"/></name><operator pos:line="34" pos:column="18">.<pos:position pos:line="34" pos:column="19"/></operator><name pos:line="34" pos:column="19">notes<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">.<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="25">findFirst<pos:position pos:line="34" pos:column="34"/></name></name><argument_list pos:line="34" pos:column="34">(<argument><expr><literal type="string" pos:line="34" pos:column="35">"user"<pos:position pos:line="34" pos:column="41"/></literal></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>
    <if pos:line="35" pos:column="5">if <condition pos:line="35" pos:column="8">(<expr><name pos:line="35" pos:column="9">label<pos:position pos:line="35" pos:column="14"/></name> <operator pos:line="35" pos:column="15">!=<pos:position pos:line="35" pos:column="17"/></operator> <name pos:line="35" pos:column="18">NULL<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">&amp;&amp;<pos:position pos:line="35" pos:column="33"/></operator> <operator pos:line="35" pos:column="26">*<pos:position pos:line="35" pos:column="27"/></operator><name pos:line="35" pos:column="27">label<pos:position pos:line="35" pos:column="32"/></name> <operator pos:line="35" pos:column="33">!=<pos:position pos:line="35" pos:column="35"/></operator> <literal type="char" pos:line="35" pos:column="36">'\0'<pos:position pos:line="35" pos:column="40"/></literal></expr>)<pos:position pos:line="35" pos:column="41"/></condition><then pos:line="35" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="36" pos:column="9">entryData<pos:position pos:line="36" pos:column="18"/></name><operator pos:line="36" pos:column="18">.<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="19">user<pos:position pos:line="36" pos:column="23"/></name></name> <operator pos:line="36" pos:column="24">=<pos:position pos:line="36" pos:column="25"/></operator> <name pos:line="36" pos:column="26">label<pos:position pos:line="36" pos:column="31"/></name></expr>;<pos:position pos:line="36" pos:column="32"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="38" pos:column="5">label<pos:position pos:line="38" pos:column="10"/></name> <operator pos:line="38" pos:column="11">=<pos:position pos:line="38" pos:column="12"/></operator> <call><name><name pos:line="38" pos:column="13">reply<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">.<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">notes<pos:position pos:line="38" pos:column="24"/></name><operator pos:line="38" pos:column="24">.<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="25">findFirst<pos:position pos:line="38" pos:column="34"/></name></name><argument_list pos:line="38" pos:column="34">(<argument><expr><literal type="string" pos:line="38" pos:column="35">"password"<pos:position pos:line="38" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="47"/></expr_stmt>
    <if pos:line="39" pos:column="5">if <condition pos:line="39" pos:column="8">(<expr><name pos:line="39" pos:column="9">label<pos:position pos:line="39" pos:column="14"/></name> <operator pos:line="39" pos:column="15">!=<pos:position pos:line="39" pos:column="17"/></operator> <name pos:line="39" pos:column="18">NULL<pos:position pos:line="39" pos:column="22"/></name> <operator pos:line="39" pos:column="23">&amp;&amp;<pos:position pos:line="39" pos:column="33"/></operator> <operator pos:line="39" pos:column="26">*<pos:position pos:line="39" pos:column="27"/></operator><name pos:line="39" pos:column="27">label<pos:position pos:line="39" pos:column="32"/></name> <operator pos:line="39" pos:column="33">!=<pos:position pos:line="39" pos:column="35"/></operator> <literal type="char" pos:line="39" pos:column="36">'\0'<pos:position pos:line="39" pos:column="40"/></literal></expr>)<pos:position pos:line="39" pos:column="41"/></condition><then pos:line="39" pos:column="41">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="40" pos:column="9">entryData<pos:position pos:line="40" pos:column="18"/></name><operator pos:line="40" pos:column="18">.<pos:position pos:line="40" pos:column="19"/></operator><name pos:line="40" pos:column="19">password<pos:position pos:line="40" pos:column="27"/></name></name> <operator pos:line="40" pos:column="28">=<pos:position pos:line="40" pos:column="29"/></operator> <name pos:line="40" pos:column="30">label<pos:position pos:line="40" pos:column="35"/></name></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt></block></then></if>
<cpp:endif pos:line="41" pos:column="1">#<cpp:directive pos:line="41" pos:column="2">endif<pos:position pos:line="41" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="43" pos:column="5">dlinkDelete<pos:position pos:line="43" pos:column="16"/></name><argument_list pos:line="43" pos:column="16">(<argument><expr><operator pos:line="43" pos:column="17">&amp;<pos:position pos:line="43" pos:column="22"/></operator><name><name pos:line="43" pos:column="18">state<pos:position pos:line="43" pos:column="23"/></name><operator pos:line="43" pos:column="23">-&gt;<pos:position pos:line="43" pos:column="28"/></operator><name pos:line="43" pos:column="25">list<pos:position pos:line="43" pos:column="29"/></name></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="31">&amp;<pos:position pos:line="43" pos:column="36"/></operator><name><name pos:line="43" pos:column="32">state<pos:position pos:line="43" pos:column="37"/></name><operator pos:line="43" pos:column="37">-&gt;<pos:position pos:line="43" pos:column="42"/></operator><name pos:line="43" pos:column="39">def<pos:position pos:line="43" pos:column="42"/></name><operator pos:line="43" pos:column="42">-&gt;<pos:position pos:line="43" pos:column="47"/></operator><name pos:line="43" pos:column="44">queue<pos:position pos:line="43" pos:column="49"/></name></name></expr></argument>)<pos:position pos:line="43" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="51"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="45" pos:column="5">ExternalACLEntryPointer<pos:position pos:line="45" pos:column="28"/></name></type> <name pos:line="45" pos:column="29">entry<pos:position pos:line="45" pos:column="34"/></name></decl>;<pos:position pos:line="45" pos:column="35"/></decl_stmt>
    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><call><name pos:line="46" pos:column="9">cbdataReferenceValid<pos:position pos:line="46" pos:column="29"/></name><argument_list pos:line="46" pos:column="29">(<argument><expr><name><name pos:line="46" pos:column="30">state<pos:position pos:line="46" pos:column="35"/></name><operator pos:line="46" pos:column="35">-&gt;<pos:position pos:line="46" pos:column="40"/></operator><name pos:line="46" pos:column="37">def<pos:position pos:line="46" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="46" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="46" pos:column="42"/></condition><then pos:line="46" pos:column="42">
        <block type="pseudo"><expr_stmt><expr><name pos:line="47" pos:column="9">entry<pos:position pos:line="47" pos:column="14"/></name> <operator pos:line="47" pos:column="15">=<pos:position pos:line="47" pos:column="16"/></operator> <call><name pos:line="47" pos:column="17">external_acl_cache_add<pos:position pos:line="47" pos:column="39"/></name><argument_list pos:line="47" pos:column="39">(<argument><expr><name><name pos:line="47" pos:column="40">state<pos:position pos:line="47" pos:column="45"/></name><operator pos:line="47" pos:column="45">-&gt;<pos:position pos:line="47" pos:column="50"/></operator><name pos:line="47" pos:column="47">def<pos:position pos:line="47" pos:column="50"/></name></name></expr></argument>, <argument><expr><name><name pos:line="47" pos:column="52">state<pos:position pos:line="47" pos:column="57"/></name><operator pos:line="47" pos:column="57">-&gt;<pos:position pos:line="47" pos:column="62"/></operator><name pos:line="47" pos:column="59">key<pos:position pos:line="47" pos:column="62"/></name></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="64">entryData<pos:position pos:line="47" pos:column="73"/></name></expr></argument>)<pos:position pos:line="47" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="75"/></expr_stmt></block></then></if>

    <do pos:line="49" pos:column="5">do <block pos:line="49" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="50" pos:column="9">void<pos:position pos:line="50" pos:column="13"/></name> <modifier pos:line="50" pos:column="14">*<pos:position pos:line="50" pos:column="15"/></modifier></type><name pos:line="50" pos:column="15">cbdata<pos:position pos:line="50" pos:column="21"/></name></decl>;<pos:position pos:line="50" pos:column="22"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">cbdataReferenceDone<pos:position pos:line="51" pos:column="28"/></name><argument_list pos:line="51" pos:column="28">(<argument><expr><name><name pos:line="51" pos:column="29">state<pos:position pos:line="51" pos:column="34"/></name><operator pos:line="51" pos:column="34">-&gt;<pos:position pos:line="51" pos:column="39"/></operator><name pos:line="51" pos:column="36">def<pos:position pos:line="51" pos:column="39"/></name></name></expr></argument>)<pos:position pos:line="51" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="41"/></expr_stmt>

        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name><name pos:line="53" pos:column="13">state<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">-&gt;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="20">callback<pos:position pos:line="53" pos:column="28"/></name></name> <operator pos:line="53" pos:column="29">&amp;&amp;<pos:position pos:line="53" pos:column="39"/></operator> <call><name pos:line="53" pos:column="32">cbdataReferenceValidDone<pos:position pos:line="53" pos:column="56"/></name><argument_list pos:line="53" pos:column="56">(<argument><expr><name><name pos:line="53" pos:column="57">state<pos:position pos:line="53" pos:column="62"/></name><operator pos:line="53" pos:column="62">-&gt;<pos:position pos:line="53" pos:column="67"/></operator><name pos:line="53" pos:column="64">callback_data<pos:position pos:line="53" pos:column="77"/></name></name></expr></argument>, <argument><expr><operator pos:line="53" pos:column="79">&amp;<pos:position pos:line="53" pos:column="84"/></operator><name pos:line="53" pos:column="80">cbdata<pos:position pos:line="53" pos:column="86"/></name></expr></argument>)<pos:position pos:line="53" pos:column="87"/></argument_list></call></expr>)<pos:position pos:line="53" pos:column="88"/></condition><then pos:line="53" pos:column="88">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="54" pos:column="13">state<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">-&gt;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="20">callback<pos:position pos:line="54" pos:column="28"/></name></name><argument_list pos:line="54" pos:column="28">(<argument><expr><name pos:line="54" pos:column="29">cbdata<pos:position pos:line="54" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="37">entry<pos:position pos:line="54" pos:column="42"/></name></expr></argument>)<pos:position pos:line="54" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="44"/></expr_stmt></block></then></if>

        <expr_stmt><expr><name pos:line="56" pos:column="9">next<pos:position pos:line="56" pos:column="13"/></name> <operator pos:line="56" pos:column="14">=<pos:position pos:line="56" pos:column="15"/></operator> <name><name pos:line="56" pos:column="16">state<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">-&gt;<pos:position pos:line="56" pos:column="26"/></operator><name pos:line="56" pos:column="23">queue<pos:position pos:line="56" pos:column="28"/></name></name></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="58" pos:column="9">cbdataFree<pos:position pos:line="58" pos:column="19"/></name><argument_list pos:line="58" pos:column="19">(<argument><expr><name pos:line="58" pos:column="20">state<pos:position pos:line="58" pos:column="25"/></name></expr></argument>)<pos:position pos:line="58" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="27"/></expr_stmt>

        <expr_stmt><expr><name pos:line="60" pos:column="9">state<pos:position pos:line="60" pos:column="14"/></name> <operator pos:line="60" pos:column="15">=<pos:position pos:line="60" pos:column="16"/></operator> <name pos:line="60" pos:column="17">next<pos:position pos:line="60" pos:column="21"/></name></expr>;<pos:position pos:line="60" pos:column="22"/></expr_stmt>
    }<pos:position pos:line="61" pos:column="6"/></block> while <condition pos:line="61" pos:column="13">(<expr><name pos:line="61" pos:column="14">state<pos:position pos:line="61" pos:column="19"/></name></expr>)<pos:position pos:line="61" pos:column="20"/></condition>;<pos:position pos:line="61" pos:column="21"/></do>
}<pos:position pos:line="62" pos:column="2"/></block></function></unit>

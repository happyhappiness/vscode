<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4108_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">GlobalContextStorage<pos:position pos:line="1" pos:column="31"/></name><operator pos:line="1" pos:column="31">::<pos:position pos:line="1" pos:column="33"/></operator><name pos:line="1" pos:column="33">addLocalStorage<pos:position pos:line="1" pos:column="48"/></name></name><parameter_list pos:line="1" pos:column="48">(<parameter><decl><type><name pos:line="1" pos:column="49">IpAddress<pos:position pos:line="1" pos:column="58"/></name> <specifier pos:line="1" pos:column="59">const<pos:position pos:line="1" pos:column="64"/></specifier> <modifier pos:line="1" pos:column="65">&amp;<pos:position pos:line="1" pos:column="70"/></modifier></type> <name pos:line="1" pos:column="67">address<pos:position pos:line="1" pos:column="74"/></name></decl></parameter>, <parameter><decl><type><name pos:line="1" pos:column="76">size_t<pos:position pos:line="1" pos:column="82"/></name></type> <name pos:line="1" pos:column="83">size_of_store<pos:position pos:line="1" pos:column="96"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="97"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">assert<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><name pos:line="3" pos:column="12">reconfiguring<pos:position pos:line="3" pos:column="25"/></name></expr></argument>)<pos:position pos:line="3" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">configureStorage<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">.<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">insert<pos:position pos:line="4" pos:column="28"/></name></name><argument_list pos:line="4" pos:column="28">(<argument><expr><call><name><name pos:line="4" pos:column="29">std<pos:position pos:line="4" pos:column="32"/></name><operator pos:line="4" pos:column="32">::<pos:position pos:line="4" pos:column="34"/></operator><name><name pos:line="4" pos:column="34">pair<pos:position pos:line="4" pos:column="38"/></name><argument_list type="generic" pos:line="4" pos:column="38">&lt;<argument><expr><name pos:line="4" pos:column="39">IpAddress<pos:position pos:line="4" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="50">size_t<pos:position pos:line="4" pos:column="56"/></name></expr></argument>&gt;<pos:position pos:line="4" pos:column="60"/></argument_list></name></name><argument_list pos:line="4" pos:column="57">(<argument><expr><name pos:line="4" pos:column="58">address<pos:position pos:line="4" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="67">size_of_store<pos:position pos:line="4" pos:column="80"/></name></expr></argument>)<pos:position pos:line="4" pos:column="81"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="83"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

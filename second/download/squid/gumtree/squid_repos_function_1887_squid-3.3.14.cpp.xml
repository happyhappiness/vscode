<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1887_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">usage<pos:position pos:line="2" pos:column="6"/></name><parameter_list pos:line="2" pos:column="6">(<parameter><decl><type><specifier pos:line="2" pos:column="7">const<pos:position pos:line="2" pos:column="12"/></specifier> <name pos:line="2" pos:column="13">char<pos:position pos:line="2" pos:column="17"/></name> <modifier pos:line="2" pos:column="18">*<pos:position pos:line="2" pos:column="19"/></modifier></type><name pos:line="2" pos:column="19">program_name<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">std<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">cerr<pos:position pos:line="4" pos:column="14"/></name></name> <operator pos:line="4" pos:column="15">&lt;&lt;<pos:position pos:line="4" pos:column="23"/></operator> <literal type="string" pos:line="4" pos:column="18">"Usage: "<pos:position pos:line="4" pos:column="27"/></literal> <operator pos:line="4" pos:column="28">&lt;&lt;<pos:position pos:line="4" pos:column="36"/></operator> <name pos:line="4" pos:column="31">program_name<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">&lt;&lt;<pos:position pos:line="4" pos:column="52"/></operator> <literal type="string" pos:line="4" pos:column="47">" cf.data cf.data.depend\n"<pos:position pos:line="4" pos:column="74"/></literal></expr>;<pos:position pos:line="4" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">exit<pos:position pos:line="5" pos:column="9"/></name><argument_list pos:line="5" pos:column="9">(<argument><expr><literal type="number" pos:line="5" pos:column="10">1<pos:position pos:line="5" pos:column="11"/></literal></expr></argument>)<pos:position pos:line="5" pos:column="12"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="13"/></expr_stmt>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3603_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">storeCleanupDoubleCheck<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">StoreEntry<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type> <name pos:line="2" pos:column="38">e<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">SwapDir<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">SD<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><cast type="dynamic" pos:line="4" pos:column="19">dynamic_cast<argument_list type="generic" pos:line="4" pos:column="31">&lt;<argument><expr><name pos:line="4" pos:column="32">SwapDir<pos:position pos:line="4" pos:column="39"/></name> <operator pos:line="4" pos:column="40">*<pos:position pos:line="4" pos:column="41"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="45"/></argument_list><argument_list pos:line="4" pos:column="42">(<argument><expr><call><name pos:line="4" pos:column="43">INDEXSD<pos:position pos:line="4" pos:column="50"/></name><argument_list pos:line="4" pos:column="50">(<argument><expr><name><name pos:line="4" pos:column="51">e<pos:position pos:line="4" pos:column="52"/></name><operator pos:line="4" pos:column="52">-&gt;<pos:position pos:line="4" pos:column="57"/></operator><name pos:line="4" pos:column="54">swap_dirn<pos:position pos:line="4" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="65"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="66"/></decl_stmt>
    <return pos:line="5" pos:column="5">return <expr><operator pos:line="5" pos:column="12">(<pos:position pos:line="5" pos:column="13"/></operator><call><name><name pos:line="5" pos:column="13">SD<pos:position pos:line="5" pos:column="15"/></name><operator pos:line="5" pos:column="15">-&gt;<pos:position pos:line="5" pos:column="20"/></operator><name pos:line="5" pos:column="17">doubleCheck<pos:position pos:line="5" pos:column="28"/></name></name><argument_list pos:line="5" pos:column="28">(<argument><expr><operator pos:line="5" pos:column="29">*<pos:position pos:line="5" pos:column="30"/></operator><name pos:line="5" pos:column="30">e<pos:position pos:line="5" pos:column="31"/></name></expr></argument>)<pos:position pos:line="5" pos:column="32"/></argument_list></call><operator pos:line="5" pos:column="32">)<pos:position pos:line="5" pos:column="33"/></operator></expr>;<pos:position pos:line="5" pos:column="34"/></return>
}<pos:position pos:line="6" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_731_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">WIN32_SetServiceCommandLine<pos:position pos:line="2" pos:column="28"/></name><parameter_list pos:line="2" pos:column="28">()<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name><name pos:line="4" pos:column="9">service_name<pos:position pos:line="4" pos:column="21"/></name><operator pos:line="4" pos:column="21">.<pos:position pos:line="4" pos:column="22"/></operator><name pos:line="4" pos:column="22">isEmpty<pos:position pos:line="4" pos:column="29"/></name></name><argument_list pos:line="4" pos:column="29">()<pos:position pos:line="4" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="32"/></condition><then pos:line="4" pos:column="32">
        <block type="pseudo"><expr_stmt><expr><name pos:line="5" pos:column="9">service_name<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">=<pos:position pos:line="5" pos:column="23"/></operator> <call><name pos:line="5" pos:column="24">SBuf<pos:position pos:line="5" pos:column="28"/></name><argument_list pos:line="5" pos:column="28">(<argument><expr><name pos:line="5" pos:column="29">APP_SHORTNAME<pos:position pos:line="5" pos:column="42"/></name></expr></argument>)<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="44"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">service<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><call><name><name pos:line="7" pos:column="27">service_name<pos:position pos:line="7" pos:column="39"/></name><operator pos:line="7" pos:column="39">.<pos:position pos:line="7" pos:column="40"/></operator><name pos:line="7" pos:column="40">c_str<pos:position pos:line="7" pos:column="45"/></name></name><argument_list pos:line="7" pos:column="45">()<pos:position pos:line="7" pos:column="47"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="48"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">strcat<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><name pos:line="8" pos:column="12">REGKEY<pos:position pos:line="8" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="20">service<pos:position pos:line="8" pos:column="27"/></name></expr></argument>)<pos:position pos:line="8" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="10" pos:column="5">keys<pos:position pos:line="10" pos:column="9"/></name><index pos:line="10" pos:column="9">[<expr><literal type="number" pos:line="10" pos:column="10">4<pos:position pos:line="10" pos:column="11"/></literal></expr>]<pos:position pos:line="10" pos:column="12"/></index></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <cast type="const" pos:line="10" pos:column="15">const_cast<argument_list type="generic" pos:line="10" pos:column="25">&lt;<argument><expr><name pos:line="10" pos:column="26">char<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">*<pos:position pos:line="10" pos:column="31"/></operator></expr></argument>&gt;<pos:position pos:line="10" pos:column="35"/></argument_list><argument_list pos:line="10" pos:column="32">(<argument><expr><name pos:line="10" pos:column="33">service<pos:position pos:line="10" pos:column="40"/></name></expr></argument>)<pos:position pos:line="10" pos:column="41"/></argument_list></cast></expr>;<pos:position pos:line="10" pos:column="42"/></expr_stmt>

    <comment type="block" pos:line="12" pos:column="5">/* Now store the Service Command Line in the registry */</comment>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">WIN32_StoreKey<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><name pos:line="13" pos:column="20">COMMANDLINE<pos:position pos:line="13" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="33">REG_SZ<pos:position pos:line="13" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="41">(<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">unsigned<pos:position pos:line="13" pos:column="50"/></name> <name pos:line="13" pos:column="51">char<pos:position pos:line="13" pos:column="55"/></name> <operator pos:line="13" pos:column="56">*<pos:position pos:line="13" pos:column="57"/></operator><operator pos:line="13" pos:column="57">)<pos:position pos:line="13" pos:column="58"/></operator> <name pos:line="13" pos:column="59">WIN32_Command_Line<pos:position pos:line="13" pos:column="77"/></name></expr></argument>, <argument><expr><call><name pos:line="13" pos:column="79">strlen<pos:position pos:line="13" pos:column="85"/></name><argument_list pos:line="13" pos:column="85">(<argument><expr><name pos:line="13" pos:column="86">WIN32_Command_Line<pos:position pos:line="13" pos:column="104"/></name></expr></argument>)<pos:position pos:line="13" pos:column="105"/></argument_list></call> <operator pos:line="13" pos:column="106">+<pos:position pos:line="13" pos:column="107"/></operator> <literal type="number" pos:line="13" pos:column="108">1<pos:position pos:line="13" pos:column="109"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="110"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="111"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

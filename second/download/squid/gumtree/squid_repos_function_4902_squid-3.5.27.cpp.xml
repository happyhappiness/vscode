<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4902_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">RegexList<pos:position pos:line="1" pos:column="17"/></name> <modifier pos:line="1" pos:column="18">*<pos:position pos:line="1" pos:column="19"/></modifier><modifier pos:line="1" pos:column="19">*<pos:position pos:line="1" pos:column="20"/></modifier></type>
<name pos:line="2" pos:column="1">compileRE<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">RegexList<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier><modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">Tail<pos:position pos:line="2" pos:column="27"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="29">char<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type> <name pos:line="2" pos:column="36">RE<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">int<pos:position pos:line="2" pos:column="43"/></name></type> <name pos:line="2" pos:column="44">flags<pos:position pos:line="2" pos:column="49"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">errcode<pos:position pos:line="4" pos:column="16"/></name></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">RegexList<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">q<pos:position pos:line="5" pos:column="17"/></name></decl>;<pos:position pos:line="5" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">regex_t<pos:position pos:line="6" pos:column="12"/></name></type> <name pos:line="6" pos:column="13">comp<pos:position pos:line="6" pos:column="17"/></name></decl>;<pos:position pos:line="6" pos:column="18"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">RE<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">==<pos:position pos:line="8" pos:column="14"/></operator> <name pos:line="8" pos:column="15">NULL<pos:position pos:line="8" pos:column="19"/></name>  <operator pos:line="8" pos:column="21">||<pos:position pos:line="8" pos:column="23"/></operator>  <operator pos:line="8" pos:column="25">*<pos:position pos:line="8" pos:column="26"/></operator><name pos:line="8" pos:column="26">RE<pos:position pos:line="8" pos:column="28"/></name> <operator pos:line="8" pos:column="29">==<pos:position pos:line="8" pos:column="31"/></operator> <literal type="char" pos:line="8" pos:column="32">'\0'<pos:position pos:line="8" pos:column="36"/></literal></expr>)<pos:position pos:line="8" pos:column="37"/></condition><then pos:line="8" pos:column="37">
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><name pos:line="9" pos:column="16">Tail<pos:position pos:line="9" pos:column="20"/></name></expr>;<pos:position pos:line="9" pos:column="21"/></return></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">(<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">errcode<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">=<pos:position pos:line="11" pos:column="19"/></operator> <call><name pos:line="11" pos:column="20">regcomp<pos:position pos:line="11" pos:column="27"/></name><argument_list pos:line="11" pos:column="27">(<argument><expr><operator pos:line="11" pos:column="28">&amp;<pos:position pos:line="11" pos:column="33"/></operator><name pos:line="11" pos:column="29">comp<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="35">RE<pos:position pos:line="11" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="39">flags<pos:position pos:line="11" pos:column="44"/></name></expr></argument>)<pos:position pos:line="11" pos:column="45"/></argument_list></call><operator pos:line="11" pos:column="45">)<pos:position pos:line="11" pos:column="46"/></operator> <operator pos:line="11" pos:column="47">!=<pos:position pos:line="11" pos:column="49"/></operator> <literal type="number" pos:line="11" pos:column="50">0<pos:position pos:line="11" pos:column="51"/></literal></expr>)<pos:position pos:line="11" pos:column="52"/></condition><then pos:line="11" pos:column="52"> <block pos:line="11" pos:column="53">{
        <decl_stmt><decl><type><name pos:line="12" pos:column="9">char<pos:position pos:line="12" pos:column="13"/></name></type> <name><name pos:line="12" pos:column="14">errbuf<pos:position pos:line="12" pos:column="20"/></name><index pos:line="12" pos:column="20">[<expr><literal type="number" pos:line="12" pos:column="21">256<pos:position pos:line="12" pos:column="24"/></literal></expr>]<pos:position pos:line="12" pos:column="25"/></index></name></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">regerror<pos:position pos:line="13" pos:column="17"/></name><argument_list pos:line="13" pos:column="17">(<argument><expr><name pos:line="13" pos:column="18">errcode<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="13" pos:column="27">&amp;<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="28">comp<pos:position pos:line="13" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="34">errbuf<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><sizeof pos:line="13" pos:column="42">sizeof <name pos:line="13" pos:column="49">errbuf<pos:position pos:line="13" pos:column="55"/></name></sizeof></expr></argument>)<pos:position pos:line="13" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="57"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">28<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="20">DBG_CRITICAL<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">""<pos:position pos:line="14" pos:column="36"/></literal> <operator pos:line="14" pos:column="37">&lt;&lt;<pos:position pos:line="14" pos:column="45"/></operator> <name pos:line="14" pos:column="40">cfg_filename<pos:position pos:line="14" pos:column="52"/></name> <operator pos:line="14" pos:column="53">&lt;&lt;<pos:position pos:line="14" pos:column="61"/></operator> <literal type="string" pos:line="14" pos:column="56">" line "<pos:position pos:line="14" pos:column="64"/></literal> <operator pos:line="14" pos:column="65">&lt;&lt;<pos:position pos:line="14" pos:column="73"/></operator> <name pos:line="14" pos:column="68">config_lineno<pos:position pos:line="14" pos:column="81"/></name> <operator pos:line="14" pos:column="82">&lt;&lt;<pos:position pos:line="14" pos:column="90"/></operator> <literal type="string" pos:line="14" pos:column="85">": "<pos:position pos:line="14" pos:column="89"/></literal> <operator pos:line="14" pos:column="90">&lt;&lt;<pos:position pos:line="14" pos:column="98"/></operator> <name pos:line="14" pos:column="93">config_input_line<pos:position pos:line="14" pos:column="110"/></name></expr></argument>)<pos:position pos:line="14" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="112"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">debugs<pos:position pos:line="15" pos:column="15"/></name><argument_list pos:line="15" pos:column="15">(<argument><expr><literal type="number" pos:line="15" pos:column="16">28<pos:position pos:line="15" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="20">DBG_CRITICAL<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="34">"ERROR: invalid regular expression: '"<pos:position pos:line="15" pos:column="72"/></literal> <operator pos:line="15" pos:column="73">&lt;&lt;<pos:position pos:line="15" pos:column="81"/></operator> <name pos:line="15" pos:column="76">RE<pos:position pos:line="15" pos:column="78"/></name> <operator pos:line="15" pos:column="79">&lt;&lt;<pos:position pos:line="15" pos:column="87"/></operator> <literal type="string" pos:line="15" pos:column="82">"': "<pos:position pos:line="15" pos:column="87"/></literal> <operator pos:line="15" pos:column="88">&lt;&lt;<pos:position pos:line="15" pos:column="96"/></operator> <name pos:line="15" pos:column="91">errbuf<pos:position pos:line="15" pos:column="97"/></name></expr></argument>)<pos:position pos:line="15" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="99"/></expr_stmt>
        <return pos:line="16" pos:column="9">return <expr><name pos:line="16" pos:column="16">NULL<pos:position pos:line="16" pos:column="20"/></name></expr>;<pos:position pos:line="16" pos:column="21"/></return>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
    <expr_stmt><expr><call><name pos:line="18" pos:column="5">debugs<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><literal type="number" pos:line="18" pos:column="12">28<pos:position pos:line="18" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="16">2<pos:position pos:line="18" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="19">"compileRE: compiled '"<pos:position pos:line="18" pos:column="42"/></literal> <operator pos:line="18" pos:column="43">&lt;&lt;<pos:position pos:line="18" pos:column="51"/></operator> <name pos:line="18" pos:column="46">RE<pos:position pos:line="18" pos:column="48"/></name> <operator pos:line="18" pos:column="49">&lt;&lt;<pos:position pos:line="18" pos:column="57"/></operator> <literal type="string" pos:line="18" pos:column="52">"' with flags "<pos:position pos:line="18" pos:column="67"/></literal> <operator pos:line="18" pos:column="68">&lt;&lt;<pos:position pos:line="18" pos:column="76"/></operator> <name pos:line="18" pos:column="71">flags<pos:position pos:line="18" pos:column="76"/></name></expr></argument> )<pos:position pos:line="18" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="79"/></expr_stmt>

    <expr_stmt><expr><name pos:line="20" pos:column="5">q<pos:position pos:line="20" pos:column="6"/></name> <operator pos:line="20" pos:column="7">=<pos:position pos:line="20" pos:column="8"/></operator> <operator pos:line="20" pos:column="9">(<pos:position pos:line="20" pos:column="10"/></operator><name pos:line="20" pos:column="10">RegexList<pos:position pos:line="20" pos:column="19"/></name> <operator pos:line="20" pos:column="20">*<pos:position pos:line="20" pos:column="21"/></operator><operator pos:line="20" pos:column="21">)<pos:position pos:line="20" pos:column="22"/></operator> <call><name pos:line="20" pos:column="23">memAllocate<pos:position pos:line="20" pos:column="34"/></name><argument_list pos:line="20" pos:column="34">(<argument><expr><name pos:line="20" pos:column="35">MEM_RELIST<pos:position pos:line="20" pos:column="45"/></name></expr></argument>)<pos:position pos:line="20" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="47"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">q<pos:position pos:line="21" pos:column="6"/></name><operator pos:line="21" pos:column="6">-&gt;<pos:position pos:line="21" pos:column="11"/></operator><name pos:line="21" pos:column="8">pattern<pos:position pos:line="21" pos:column="15"/></name></name> <operator pos:line="21" pos:column="16">=<pos:position pos:line="21" pos:column="17"/></operator> <call><name pos:line="21" pos:column="18">xstrdup<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">RE<pos:position pos:line="21" pos:column="28"/></name></expr></argument>)<pos:position pos:line="21" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">q<pos:position pos:line="22" pos:column="6"/></name><operator pos:line="22" pos:column="6">-&gt;<pos:position pos:line="22" pos:column="11"/></operator><name pos:line="22" pos:column="8">regex<pos:position pos:line="22" pos:column="13"/></name></name> <operator pos:line="22" pos:column="14">=<pos:position pos:line="22" pos:column="15"/></operator> <name pos:line="22" pos:column="16">comp<pos:position pos:line="22" pos:column="20"/></name></expr>;<pos:position pos:line="22" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">q<pos:position pos:line="23" pos:column="6"/></name><operator pos:line="23" pos:column="6">-&gt;<pos:position pos:line="23" pos:column="11"/></operator><name pos:line="23" pos:column="8">flags<pos:position pos:line="23" pos:column="13"/></name></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">flags<pos:position pos:line="23" pos:column="21"/></name></expr>;<pos:position pos:line="23" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="24" pos:column="5">*<pos:position pos:line="24" pos:column="6"/></operator><operator pos:line="24" pos:column="6">(<pos:position pos:line="24" pos:column="7"/></operator><name pos:line="24" pos:column="7">Tail<pos:position pos:line="24" pos:column="11"/></name><operator pos:line="24" pos:column="11">)<pos:position pos:line="24" pos:column="12"/></operator> <operator pos:line="24" pos:column="13">=<pos:position pos:line="24" pos:column="14"/></operator> <name pos:line="24" pos:column="15">q<pos:position pos:line="24" pos:column="16"/></name></expr>;<pos:position pos:line="24" pos:column="17"/></expr_stmt>
    <expr_stmt><expr><name pos:line="25" pos:column="5">Tail<pos:position pos:line="25" pos:column="9"/></name> <operator pos:line="25" pos:column="10">=<pos:position pos:line="25" pos:column="11"/></operator> <operator pos:line="25" pos:column="12">&amp;<pos:position pos:line="25" pos:column="17"/></operator><name><name pos:line="25" pos:column="13">q<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">-&gt;<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="16">next<pos:position pos:line="25" pos:column="20"/></name></name></expr>;<pos:position pos:line="25" pos:column="21"/></expr_stmt>

    <return pos:line="27" pos:column="5">return <expr><name pos:line="27" pos:column="12">Tail<pos:position pos:line="27" pos:column="16"/></name></expr>;<pos:position pos:line="27" pos:column="17"/></return>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

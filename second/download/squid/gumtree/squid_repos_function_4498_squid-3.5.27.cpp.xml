<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4498_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">get_error_id<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><specifier pos:line="2" pos:column="14">const<pos:position pos:line="2" pos:column="19"/></specifier> <name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">label<pos:position pos:line="2" pos:column="31"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="33">size_t<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">len<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">label<pos:position pos:line="4" pos:column="26"/></name> <operator pos:line="4" pos:column="27">+<pos:position pos:line="4" pos:column="28"/></operator> <name pos:line="4" pos:column="29">len<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">-<pos:position pos:line="4" pos:column="34"/></operator><literal type="number" pos:line="4" pos:column="34">1<pos:position pos:line="4" pos:column="35"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="36"/></decl_stmt>
    <while pos:line="5" pos:column="5">while <condition pos:line="5" pos:column="11">(<expr><name pos:line="5" pos:column="12">e<pos:position pos:line="5" pos:column="13"/></name> <operator pos:line="5" pos:column="14">!=<pos:position pos:line="5" pos:column="16"/></operator> <name pos:line="5" pos:column="17">label<pos:position pos:line="5" pos:column="22"/></name> <operator pos:line="5" pos:column="23">&amp;&amp;<pos:position pos:line="5" pos:column="33"/></operator> <call><name pos:line="5" pos:column="26">xisdigit<pos:position pos:line="5" pos:column="34"/></name><argument_list pos:line="5" pos:column="34">(<argument><expr><operator pos:line="5" pos:column="35">*<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="36">e<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="39"/></condition> <block type="pseudo"><expr_stmt><expr><operator pos:line="5" pos:column="40">--<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">e<pos:position pos:line="5" pos:column="43"/></name></expr>;<pos:position pos:line="5" pos:column="44"/></expr_stmt></block></while>
    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">e<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">!=<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">label<pos:position pos:line="6" pos:column="19"/></name></expr>)<pos:position pos:line="6" pos:column="20"/></condition><then pos:line="6" pos:column="20"> <block type="pseudo"><expr_stmt><expr><operator pos:line="6" pos:column="21">++<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">e<pos:position pos:line="6" pos:column="24"/></name></expr>;<pos:position pos:line="6" pos:column="25"/></expr_stmt></block></then></if>
    <return pos:line="7" pos:column="5">return <expr><call><name pos:line="7" pos:column="12">strtol<pos:position pos:line="7" pos:column="18"/></name><argument_list pos:line="7" pos:column="18">(<argument><expr><name pos:line="7" pos:column="19">e<pos:position pos:line="7" pos:column="20"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="22">0<pos:position pos:line="7" pos:column="23"/></literal></expr></argument> , <argument><expr><literal type="number" pos:line="7" pos:column="26">10<pos:position pos:line="7" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></return>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5604_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">MemPoolChunked<pos:position pos:line="2" pos:column="15"/></name><operator pos:line="2" pos:column="15">::<pos:position pos:line="2" pos:column="17"/></operator><name pos:line="2" pos:column="17">getStats<pos:position pos:line="2" pos:column="25"/></name></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">MemPoolStats<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">*<pos:position pos:line="2" pos:column="40"/></modifier></type> <name pos:line="2" pos:column="41">stats<pos:position pos:line="2" pos:column="46"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="48">int<pos:position pos:line="2" pos:column="51"/></name></type> <name pos:line="2" pos:column="52">accumulate<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="63"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">MemChunk<pos:position pos:line="4" pos:column="13"/></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">chunk<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">chunks_free<pos:position pos:line="5" pos:column="20"/></name> <init pos:line="5" pos:column="21">= <expr><literal type="number" pos:line="5" pos:column="23">0<pos:position pos:line="5" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="25"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">chunks_partial<pos:position pos:line="6" pos:column="23"/></name> <init pos:line="6" pos:column="24">= <expr><literal type="number" pos:line="6" pos:column="26">0<pos:position pos:line="6" pos:column="27"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="28"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">accumulate<pos:position pos:line="8" pos:column="20"/></name></expr>)<pos:position pos:line="8" pos:column="21"/></condition><then pos:line="8" pos:column="21">	<comment type="block" pos:line="8" pos:column="25">/* need skip memset for GlobalStats accumulation */</comment>
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="9" pos:column="9">memset<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><name pos:line="9" pos:column="16">stats<pos:position pos:line="9" pos:column="21"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="23">0<pos:position pos:line="9" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="9" pos:column="26">sizeof<argument_list pos:line="9" pos:column="32">(<argument><expr><name pos:line="9" pos:column="33">MemPoolStats<pos:position pos:line="9" pos:column="45"/></name></expr></argument>)<pos:position pos:line="9" pos:column="46"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="9" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="48"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="11" pos:column="5">clean<pos:position pos:line="11" pos:column="10"/></name><argument_list pos:line="11" pos:column="10">(<argument><expr><operator pos:line="11" pos:column="11">(<pos:position pos:line="11" pos:column="12"/></operator><name pos:line="11" pos:column="12">time_t<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">)<pos:position pos:line="11" pos:column="19"/></operator> <literal type="number" pos:line="11" pos:column="20">555555<pos:position pos:line="11" pos:column="26"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="28"/></expr_stmt>	<comment type="block" pos:line="11" pos:column="33">/* don't want to get chunks released before reporting */</comment>

    <expr_stmt><expr><name><name pos:line="13" pos:column="5">stats<pos:position pos:line="13" pos:column="10"/></name><operator pos:line="13" pos:column="10">-&gt;<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="12">pool<pos:position pos:line="13" pos:column="16"/></name></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <name pos:line="13" pos:column="19">this<pos:position pos:line="13" pos:column="23"/></name></expr>;<pos:position pos:line="13" pos:column="24"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">stats<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">label<pos:position pos:line="14" pos:column="17"/></name></name> <operator pos:line="14" pos:column="18">=<pos:position pos:line="14" pos:column="19"/></operator> <call><name pos:line="14" pos:column="20">objectType<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">()<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">stats<pos:position pos:line="15" pos:column="10"/></name><operator pos:line="15" pos:column="10">-&gt;<pos:position pos:line="15" pos:column="15"/></operator><name pos:line="15" pos:column="12">meter<pos:position pos:line="15" pos:column="17"/></name></name> <operator pos:line="15" pos:column="18">=<pos:position pos:line="15" pos:column="19"/></operator> <operator pos:line="15" pos:column="20">&amp;<pos:position pos:line="15" pos:column="25"/></operator><name pos:line="15" pos:column="21">meter<pos:position pos:line="15" pos:column="26"/></name></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">stats<pos:position pos:line="16" pos:column="10"/></name><operator pos:line="16" pos:column="10">-&gt;<pos:position pos:line="16" pos:column="15"/></operator><name pos:line="16" pos:column="12">obj_size<pos:position pos:line="16" pos:column="20"/></name></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">obj_size<pos:position pos:line="16" pos:column="31"/></name></expr>;<pos:position pos:line="16" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">stats<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">chunk_capacity<pos:position pos:line="17" pos:column="26"/></name></name> <operator pos:line="17" pos:column="27">=<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">chunk_capacity<pos:position pos:line="17" pos:column="43"/></name></expr>;<pos:position pos:line="17" pos:column="44"/></expr_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* gather stats for each Chunk */</comment>
    <expr_stmt><expr><name pos:line="20" pos:column="5">chunk<pos:position pos:line="20" pos:column="10"/></name> <operator pos:line="20" pos:column="11">=<pos:position pos:line="20" pos:column="12"/></operator> <name pos:line="20" pos:column="13">Chunks<pos:position pos:line="20" pos:column="19"/></name></expr>;<pos:position pos:line="20" pos:column="20"/></expr_stmt>
    <while pos:line="21" pos:column="5">while <condition pos:line="21" pos:column="11">(<expr><name pos:line="21" pos:column="12">chunk<pos:position pos:line="21" pos:column="17"/></name></expr>)<pos:position pos:line="21" pos:column="18"/></condition> <block pos:line="21" pos:column="19">{
        <if pos:line="22" pos:column="9">if <condition pos:line="22" pos:column="12">(<expr><name><name pos:line="22" pos:column="13">chunk<pos:position pos:line="22" pos:column="18"/></name><operator pos:line="22" pos:column="18">-&gt;<pos:position pos:line="22" pos:column="23"/></operator><name pos:line="22" pos:column="20">inuse_count<pos:position pos:line="22" pos:column="31"/></name></name> <operator pos:line="22" pos:column="32">==<pos:position pos:line="22" pos:column="34"/></operator> <literal type="number" pos:line="22" pos:column="35">0<pos:position pos:line="22" pos:column="36"/></literal></expr>)<pos:position pos:line="22" pos:column="37"/></condition><then pos:line="22" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><name pos:line="23" pos:column="13">chunks_free<pos:position pos:line="23" pos:column="24"/></name><operator pos:line="23" pos:column="24">++<pos:position pos:line="23" pos:column="26"/></operator></expr>;<pos:position pos:line="23" pos:column="27"/></expr_stmt></block></then>
        <elseif pos:line="24" pos:column="9">else <if pos:line="24" pos:column="14">if <condition pos:line="24" pos:column="17">(<expr><name><name pos:line="24" pos:column="18">chunk<pos:position pos:line="24" pos:column="23"/></name><operator pos:line="24" pos:column="23">-&gt;<pos:position pos:line="24" pos:column="28"/></operator><name pos:line="24" pos:column="25">inuse_count<pos:position pos:line="24" pos:column="36"/></name></name> <operator pos:line="24" pos:column="37">&lt;<pos:position pos:line="24" pos:column="41"/></operator> <name pos:line="24" pos:column="39">chunk_capacity<pos:position pos:line="24" pos:column="53"/></name></expr>)<pos:position pos:line="24" pos:column="54"/></condition><then pos:line="24" pos:column="54">
            <block type="pseudo"><expr_stmt><expr><name pos:line="25" pos:column="13">chunks_partial<pos:position pos:line="25" pos:column="27"/></name><operator pos:line="25" pos:column="27">++<pos:position pos:line="25" pos:column="29"/></operator></expr>;<pos:position pos:line="25" pos:column="30"/></expr_stmt></block></then></if></elseif></if>
        <expr_stmt><expr><name pos:line="26" pos:column="9">chunk<pos:position pos:line="26" pos:column="14"/></name> <operator pos:line="26" pos:column="15">=<pos:position pos:line="26" pos:column="16"/></operator> <name><name pos:line="26" pos:column="17">chunk<pos:position pos:line="26" pos:column="22"/></name><operator pos:line="26" pos:column="22">-&gt;<pos:position pos:line="26" pos:column="27"/></operator><name pos:line="26" pos:column="24">next<pos:position pos:line="26" pos:column="28"/></name></name></expr>;<pos:position pos:line="26" pos:column="29"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></while>

    <expr_stmt><expr><name><name pos:line="29" pos:column="5">stats<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">chunks_alloc<pos:position pos:line="29" pos:column="24"/></name></name> <operator pos:line="29" pos:column="25">+=<pos:position pos:line="29" pos:column="27"/></operator> <name pos:line="29" pos:column="28">chunkCount<pos:position pos:line="29" pos:column="38"/></name></expr>;<pos:position pos:line="29" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">stats<pos:position pos:line="30" pos:column="10"/></name><operator pos:line="30" pos:column="10">-&gt;<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="12">chunks_inuse<pos:position pos:line="30" pos:column="24"/></name></name> <operator pos:line="30" pos:column="25">+=<pos:position pos:line="30" pos:column="27"/></operator> <name pos:line="30" pos:column="28">chunkCount<pos:position pos:line="30" pos:column="38"/></name> <operator pos:line="30" pos:column="39">-<pos:position pos:line="30" pos:column="40"/></operator> <name pos:line="30" pos:column="41">chunks_free<pos:position pos:line="30" pos:column="52"/></name></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">stats<pos:position pos:line="31" pos:column="10"/></name><operator pos:line="31" pos:column="10">-&gt;<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="12">chunks_partial<pos:position pos:line="31" pos:column="26"/></name></name> <operator pos:line="31" pos:column="27">+=<pos:position pos:line="31" pos:column="29"/></operator> <name pos:line="31" pos:column="30">chunks_partial<pos:position pos:line="31" pos:column="44"/></name></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="32" pos:column="5">stats<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">chunks_free<pos:position pos:line="32" pos:column="23"/></name></name> <operator pos:line="32" pos:column="24">+=<pos:position pos:line="32" pos:column="26"/></operator> <name pos:line="32" pos:column="27">chunks_free<pos:position pos:line="32" pos:column="38"/></name></expr>;<pos:position pos:line="32" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="34" pos:column="5">stats<pos:position pos:line="34" pos:column="10"/></name><operator pos:line="34" pos:column="10">-&gt;<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="12">items_alloc<pos:position pos:line="34" pos:column="23"/></name></name> <operator pos:line="34" pos:column="24">+=<pos:position pos:line="34" pos:column="26"/></operator> <name><name pos:line="34" pos:column="27">meter<pos:position pos:line="34" pos:column="32"/></name><operator pos:line="34" pos:column="32">.<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="33">alloc<pos:position pos:line="34" pos:column="38"/></name><operator pos:line="34" pos:column="38">.<pos:position pos:line="34" pos:column="39"/></operator><name pos:line="34" pos:column="39">level<pos:position pos:line="34" pos:column="44"/></name></name></expr>;<pos:position pos:line="34" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">stats<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">items_inuse<pos:position pos:line="35" pos:column="23"/></name></name> <operator pos:line="35" pos:column="24">+=<pos:position pos:line="35" pos:column="26"/></operator> <name><name pos:line="35" pos:column="27">meter<pos:position pos:line="35" pos:column="32"/></name><operator pos:line="35" pos:column="32">.<pos:position pos:line="35" pos:column="33"/></operator><name pos:line="35" pos:column="33">inuse<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">.<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">level<pos:position pos:line="35" pos:column="44"/></name></name></expr>;<pos:position pos:line="35" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="36" pos:column="5">stats<pos:position pos:line="36" pos:column="10"/></name><operator pos:line="36" pos:column="10">-&gt;<pos:position pos:line="36" pos:column="15"/></operator><name pos:line="36" pos:column="12">items_idle<pos:position pos:line="36" pos:column="22"/></name></name> <operator pos:line="36" pos:column="23">+=<pos:position pos:line="36" pos:column="25"/></operator> <name><name pos:line="36" pos:column="26">meter<pos:position pos:line="36" pos:column="31"/></name><operator pos:line="36" pos:column="31">.<pos:position pos:line="36" pos:column="32"/></operator><name pos:line="36" pos:column="32">idle<pos:position pos:line="36" pos:column="36"/></name><operator pos:line="36" pos:column="36">.<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="37">level<pos:position pos:line="36" pos:column="42"/></name></name></expr>;<pos:position pos:line="36" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="38" pos:column="5">stats<pos:position pos:line="38" pos:column="10"/></name><operator pos:line="38" pos:column="10">-&gt;<pos:position pos:line="38" pos:column="15"/></operator><name pos:line="38" pos:column="12">overhead<pos:position pos:line="38" pos:column="20"/></name></name> <operator pos:line="38" pos:column="21">+=<pos:position pos:line="38" pos:column="23"/></operator> <sizeof pos:line="38" pos:column="24">sizeof<argument_list pos:line="38" pos:column="30">(<argument><expr><name pos:line="38" pos:column="31">MemPoolChunked<pos:position pos:line="38" pos:column="45"/></name></expr></argument>)<pos:position pos:line="38" pos:column="46"/></argument_list></sizeof> <operator pos:line="38" pos:column="47">+<pos:position pos:line="38" pos:column="48"/></operator> <name pos:line="38" pos:column="49">chunkCount<pos:position pos:line="38" pos:column="59"/></name> <operator pos:line="38" pos:column="60">*<pos:position pos:line="38" pos:column="61"/></operator> <sizeof pos:line="38" pos:column="62">sizeof<argument_list pos:line="38" pos:column="68">(<argument><expr><name pos:line="38" pos:column="69">MemChunk<pos:position pos:line="38" pos:column="77"/></name></expr></argument>)<pos:position pos:line="38" pos:column="78"/></argument_list></sizeof> <operator pos:line="38" pos:column="79">+<pos:position pos:line="38" pos:column="80"/></operator> <call><name pos:line="38" pos:column="81">strlen<pos:position pos:line="38" pos:column="87"/></name><argument_list pos:line="38" pos:column="87">(<argument><expr><call><name pos:line="38" pos:column="88">objectType<pos:position pos:line="38" pos:column="98"/></name><argument_list pos:line="38" pos:column="98">()<pos:position pos:line="38" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="101"/></argument_list></call> <operator pos:line="38" pos:column="102">+<pos:position pos:line="38" pos:column="103"/></operator> <literal type="number" pos:line="38" pos:column="104">1<pos:position pos:line="38" pos:column="105"/></literal></expr>;<pos:position pos:line="38" pos:column="106"/></expr_stmt>

    <return pos:line="40" pos:column="5">return <expr><name><name pos:line="40" pos:column="12">meter<pos:position pos:line="40" pos:column="17"/></name><operator pos:line="40" pos:column="17">.<pos:position pos:line="40" pos:column="18"/></operator><name pos:line="40" pos:column="18">inuse<pos:position pos:line="40" pos:column="23"/></name><operator pos:line="40" pos:column="23">.<pos:position pos:line="40" pos:column="24"/></operator><name pos:line="40" pos:column="24">level<pos:position pos:line="40" pos:column="29"/></name></name></expr>;<pos:position pos:line="40" pos:column="30"/></return>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

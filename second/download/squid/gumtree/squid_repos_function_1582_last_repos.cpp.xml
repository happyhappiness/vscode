<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1582_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">gen_parse<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><specifier pos:line="2" pos:column="11">const<pos:position pos:line="2" pos:column="16"/></specifier> <name pos:line="2" pos:column="17">EntryList<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">&amp;<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="28">head<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="34">std<pos:position pos:line="2" pos:column="37"/></name><operator pos:line="2" pos:column="37">::<pos:position pos:line="2" pos:column="39"/></operator><name pos:line="2" pos:column="39">ostream<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">&amp;<pos:position pos:line="2" pos:column="52"/></modifier></type><name pos:line="2" pos:column="48">fout<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="53"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">fout<pos:position pos:line="4" pos:column="9"/></name> <operator pos:line="4" pos:column="10">&lt;&lt;<pos:position pos:line="4" pos:column="18"/></operator>
         <literal type="string" pos:line="5" pos:column="10">"static int\n"<pos:position pos:line="5" pos:column="24"/></literal>
         <literal type="string" pos:line="6" pos:column="10">"parse_line(char *buff)\n"<pos:position pos:line="6" pos:column="36"/></literal>
         <literal type="string" pos:line="7" pos:column="10">"{\n"<pos:position pos:line="7" pos:column="15"/></literal>
         <literal type="string" pos:line="8" pos:column="10">"\tchar\t*token;\n"<pos:position pos:line="8" pos:column="29"/></literal>
         <literal type="string" pos:line="9" pos:column="10">"\tif ((token = strtok(buff, w_space)) == NULL) \n"<pos:position pos:line="9" pos:column="61"/></literal>
         <literal type="string" pos:line="10" pos:column="10">"\t\treturn 1;\t/* ignore empty lines */\n"<pos:position pos:line="10" pos:column="53"/></literal>
         <literal type="string" pos:line="11" pos:column="10">"\tConfigParser::SetCfgLine(strtok(NULL, \"\"));\n"<pos:position pos:line="11" pos:column="61"/></literal></expr>;<pos:position pos:line="11" pos:column="62"/></expr_stmt>

    <for pos:line="13" pos:column="5">for <control pos:line="13" pos:column="9">(<init><decl><type><name><name pos:line="13" pos:column="10">EntryList<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">::<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">const_iterator<pos:position pos:line="13" pos:column="35"/></name></name></type> <name pos:line="13" pos:column="36">e<pos:position pos:line="13" pos:column="37"/></name> <init pos:line="13" pos:column="38">= <expr><call><name><name pos:line="13" pos:column="40">head<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">.<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="45">begin<pos:position pos:line="13" pos:column="50"/></name></name><argument_list pos:line="13" pos:column="50">()<pos:position pos:line="13" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="53"/></init> <condition><expr><name pos:line="13" pos:column="54">e<pos:position pos:line="13" pos:column="55"/></name> <operator pos:line="13" pos:column="56">!=<pos:position pos:line="13" pos:column="58"/></operator> <call><name><name pos:line="13" pos:column="59">head<pos:position pos:line="13" pos:column="63"/></name><operator pos:line="13" pos:column="63">.<pos:position pos:line="13" pos:column="64"/></operator><name pos:line="13" pos:column="64">end<pos:position pos:line="13" pos:column="67"/></name></name><argument_list pos:line="13" pos:column="67">()<pos:position pos:line="13" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="70"/></condition> <incr><expr><operator pos:line="13" pos:column="71">++<pos:position pos:line="13" pos:column="73"/></operator><name pos:line="13" pos:column="73">e<pos:position pos:line="13" pos:column="74"/></name></expr></incr>)<pos:position pos:line="13" pos:column="75"/></control>
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="14" pos:column="9">e<pos:position pos:line="14" pos:column="10"/></name><operator pos:line="14" pos:column="10">-&gt;<pos:position pos:line="14" pos:column="15"/></operator><name pos:line="14" pos:column="12">genParse<pos:position pos:line="14" pos:column="20"/></name></name><argument_list pos:line="14" pos:column="20">(<argument><expr><name pos:line="14" pos:column="21">fout<pos:position pos:line="14" pos:column="25"/></name></expr></argument>)<pos:position pos:line="14" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="27"/></expr_stmt></block></for>

    <expr_stmt><expr><name pos:line="16" pos:column="5">fout<pos:position pos:line="16" pos:column="9"/></name> <operator pos:line="16" pos:column="10">&lt;&lt;<pos:position pos:line="16" pos:column="18"/></operator> <literal type="string" pos:line="16" pos:column="13">"\treturn 0; /* failure */\n"<pos:position pos:line="16" pos:column="42"/></literal>
         <literal type="string" pos:line="17" pos:column="10">"}\n\n"<pos:position pos:line="17" pos:column="17"/></literal></expr>;<pos:position pos:line="17" pos:column="18"/></expr_stmt>

}<pos:position pos:line="19" pos:column="2"/></block></function></unit>

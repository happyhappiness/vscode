<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3067_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">CommCommonCbParams<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">print<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name><name pos:line="2" pos:column="27">std<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">ostream<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">&amp;<pos:position pos:line="2" pos:column="45"/></modifier></type><name pos:line="2" pos:column="41">os<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list> <specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><name pos:line="4" pos:column="5">os<pos:position pos:line="4" pos:column="7"/></name> <operator pos:line="4" pos:column="8">&lt;&lt;<pos:position pos:line="4" pos:column="16"/></operator> <literal type="string" pos:line="4" pos:column="11">"FD "<pos:position pos:line="4" pos:column="16"/></literal> <operator pos:line="4" pos:column="17">&lt;&lt;<pos:position pos:line="4" pos:column="25"/></operator> <name pos:line="4" pos:column="20">fd<pos:position pos:line="4" pos:column="22"/></name></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">xerrno<pos:position pos:line="5" pos:column="15"/></name></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><name pos:line="6" pos:column="9">os<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">&lt;&lt;<pos:position pos:line="6" pos:column="20"/></operator> <literal type="string" pos:line="6" pos:column="15">", errno="<pos:position pos:line="6" pos:column="25"/></literal> <operator pos:line="6" pos:column="26">&lt;&lt;<pos:position pos:line="6" pos:column="34"/></operator> <name pos:line="6" pos:column="29">xerrno<pos:position pos:line="6" pos:column="35"/></name></expr>;<pos:position pos:line="6" pos:column="36"/></expr_stmt></block></then></if>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">flag<pos:position pos:line="7" pos:column="13"/></name> <operator pos:line="7" pos:column="14">!=<pos:position pos:line="7" pos:column="16"/></operator> <name pos:line="7" pos:column="17">COMM_OK<pos:position pos:line="7" pos:column="24"/></name></expr>)<pos:position pos:line="7" pos:column="25"/></condition><then pos:line="7" pos:column="25">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">os<pos:position pos:line="8" pos:column="11"/></name> <operator pos:line="8" pos:column="12">&lt;&lt;<pos:position pos:line="8" pos:column="20"/></operator> <literal type="string" pos:line="8" pos:column="15">", flag="<pos:position pos:line="8" pos:column="24"/></literal> <operator pos:line="8" pos:column="25">&lt;&lt;<pos:position pos:line="8" pos:column="33"/></operator> <name pos:line="8" pos:column="28">flag<pos:position pos:line="8" pos:column="32"/></name></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt></block></then></if>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">data<pos:position pos:line="9" pos:column="13"/></name></expr>)<pos:position pos:line="9" pos:column="14"/></condition><then pos:line="9" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">os<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">&lt;&lt;<pos:position pos:line="10" pos:column="20"/></operator> <literal type="string" pos:line="10" pos:column="15">", data="<pos:position pos:line="10" pos:column="24"/></literal> <operator pos:line="10" pos:column="25">&lt;&lt;<pos:position pos:line="10" pos:column="33"/></operator> <name pos:line="10" pos:column="28">data<pos:position pos:line="10" pos:column="32"/></name></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt></block></then></if>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

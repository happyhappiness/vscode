<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3766_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Config<pos:position pos:line="2" pos:column="19"/></name><operator pos:line="2" pos:column="19">::<pos:position pos:line="2" pos:column="21"/></operator><name pos:line="2" pos:column="21">freeService<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">FreeAccess<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">()<pos:position pos:line="4" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">FreeServiceGroups<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">()<pos:position pos:line="5" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">DetachServices<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">()<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>

    <while pos:line="9" pos:column="5">while <condition pos:line="9" pos:column="11">(<expr><operator pos:line="9" pos:column="12">!<pos:position pos:line="9" pos:column="13"/></operator><call><name><name pos:line="9" pos:column="13">serviceConfigs<pos:position pos:line="9" pos:column="27"/></name><operator pos:line="9" pos:column="27">.<pos:position pos:line="9" pos:column="28"/></operator><name pos:line="9" pos:column="28">empty<pos:position pos:line="9" pos:column="33"/></name></name><argument_list pos:line="9" pos:column="33">()<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="36"/></condition> <block pos:line="9" pos:column="37">{
        <expr_stmt><expr><operator pos:line="10" pos:column="9">delete<pos:position pos:line="10" pos:column="15"/></operator> <call><name><name pos:line="10" pos:column="16">serviceConfigs<pos:position pos:line="10" pos:column="30"/></name><operator pos:line="10" pos:column="30">.<pos:position pos:line="10" pos:column="31"/></operator><name pos:line="10" pos:column="31">back<pos:position pos:line="10" pos:column="35"/></name></name><argument_list pos:line="10" pos:column="35">()<pos:position pos:line="10" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">serviceConfigs<pos:position pos:line="11" pos:column="23"/></name><operator pos:line="11" pos:column="23">.<pos:position pos:line="11" pos:column="24"/></operator><name pos:line="11" pos:column="24">pop_back<pos:position pos:line="11" pos:column="32"/></name></name><argument_list pos:line="11" pos:column="32">()<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></while>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

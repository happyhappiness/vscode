<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5548_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">squidaio_do_write<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name pos:line="2" pos:column="19">squidaio_request_t<pos:position pos:line="2" pos:column="37"/></name> <modifier pos:line="2" pos:column="38">*<pos:position pos:line="2" pos:column="39"/></modifier></type> <name pos:line="2" pos:column="40">requestp<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="49"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><call><name pos:line="4" pos:column="10">WriteFile<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><operator pos:line="4" pos:column="20">(<pos:position pos:line="4" pos:column="21"/></operator><name pos:line="4" pos:column="21">HANDLE<pos:position pos:line="4" pos:column="27"/></name><operator pos:line="4" pos:column="27">)<pos:position pos:line="4" pos:column="28"/></operator><call><name pos:line="4" pos:column="28">_get_osfhandle<pos:position pos:line="4" pos:column="42"/></name><argument_list pos:line="4" pos:column="42">(<argument><expr><name><name pos:line="4" pos:column="43">requestp<pos:position pos:line="4" pos:column="51"/></name><operator pos:line="4" pos:column="51">-&gt;<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="53">fd<pos:position pos:line="4" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="58">requestp<pos:position pos:line="4" pos:column="66"/></name><operator pos:line="4" pos:column="66">-&gt;<pos:position pos:line="4" pos:column="71"/></operator><name pos:line="4" pos:column="68">bufferp<pos:position pos:line="4" pos:column="75"/></name></name></expr></argument>,
                   <argument><expr><name><name pos:line="5" pos:column="20">requestp<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">-&gt;<pos:position pos:line="5" pos:column="33"/></operator><name pos:line="5" pos:column="30">buflen<pos:position pos:line="5" pos:column="36"/></name></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="38">(<pos:position pos:line="5" pos:column="39"/></operator><name pos:line="5" pos:column="39">LPDWORD<pos:position pos:line="5" pos:column="46"/></name><operator pos:line="5" pos:column="46">)<pos:position pos:line="5" pos:column="47"/></operator><operator pos:line="5" pos:column="47">&amp;<pos:position pos:line="5" pos:column="52"/></operator><name><name pos:line="5" pos:column="48">requestp<pos:position pos:line="5" pos:column="56"/></name><operator pos:line="5" pos:column="56">-&gt;<pos:position pos:line="5" pos:column="61"/></operator><name pos:line="5" pos:column="58">ret<pos:position pos:line="5" pos:column="61"/></name></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="63">NULL<pos:position pos:line="5" pos:column="67"/></name></expr></argument>)<pos:position pos:line="5" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="69"/></condition><then pos:line="5" pos:column="69"> <block pos:line="5" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="6" pos:column="9">WIN32_maperror<pos:position pos:line="6" pos:column="23"/></name><argument_list pos:line="6" pos:column="23">(<argument><expr><call><name pos:line="6" pos:column="24">GetLastError<pos:position pos:line="6" pos:column="36"/></name><argument_list pos:line="6" pos:column="36">()<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="7" pos:column="9">requestp<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">-&gt;<pos:position pos:line="7" pos:column="22"/></operator><name pos:line="7" pos:column="19">ret<pos:position pos:line="7" pos:column="22"/></name></name> <operator pos:line="7" pos:column="23">=<pos:position pos:line="7" pos:column="24"/></operator> <operator pos:line="7" pos:column="25">-<pos:position pos:line="7" pos:column="26"/></operator><literal type="number" pos:line="7" pos:column="26">1<pos:position pos:line="7" pos:column="27"/></literal></expr>;<pos:position pos:line="7" pos:column="28"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="10" pos:column="5">requestp<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">err<pos:position pos:line="10" pos:column="18"/></name></name> <operator pos:line="10" pos:column="19">=<pos:position pos:line="10" pos:column="20"/></operator> <name pos:line="10" pos:column="21">errno<pos:position pos:line="10" pos:column="26"/></name></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

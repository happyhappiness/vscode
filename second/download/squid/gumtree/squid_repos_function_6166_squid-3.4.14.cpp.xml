<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6166_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESIVariableProcessor<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">identifyFunction<pos:position pos:line="2" pos:column="39"/></name></name><parameter_list pos:line="2" pos:column="39">()<pos:position pos:line="2" pos:column="41"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><operator pos:line="4" pos:column="5">delete<pos:position pos:line="4" pos:column="11"/></operator> <name pos:line="4" pos:column="12">currentFunction<pos:position pos:line="4" pos:column="27"/></name></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="5" pos:column="5">currentFunction<pos:position pos:line="5" pos:column="20"/></name> <operator pos:line="5" pos:column="21">=<pos:position pos:line="5" pos:column="22"/></operator> <call><name><name pos:line="5" pos:column="23">ESIFunction<pos:position pos:line="5" pos:column="34"/></name><operator pos:line="5" pos:column="34">::<pos:position pos:line="5" pos:column="36"/></operator><name pos:line="5" pos:column="36">GetFunction<pos:position pos:line="5" pos:column="47"/></name></name> <argument_list pos:line="5" pos:column="48">(<argument><expr><operator pos:line="5" pos:column="49">&amp;<pos:position pos:line="5" pos:column="54"/></operator><name><name pos:line="5" pos:column="50">string<pos:position pos:line="5" pos:column="56"/></name><index pos:line="5" pos:column="56">[<expr><name pos:line="5" pos:column="57">pos<pos:position pos:line="5" pos:column="60"/></name></expr>]<pos:position pos:line="5" pos:column="61"/></index></name></expr></argument>, <argument><expr><operator pos:line="5" pos:column="63">*<pos:position pos:line="5" pos:column="64"/></operator><name pos:line="5" pos:column="64">this<pos:position pos:line="5" pos:column="68"/></name></expr></argument>)<pos:position pos:line="5" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="70"/></expr_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">currentFunction<pos:position pos:line="7" pos:column="25"/></name></expr>)<pos:position pos:line="7" pos:column="26"/></condition><then pos:line="7" pos:column="26"> <block pos:line="7" pos:column="27">{
        <expr_stmt><expr><name pos:line="8" pos:column="9">state<pos:position pos:line="8" pos:column="14"/></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">LOOKFORSTART<pos:position pos:line="8" pos:column="29"/></name></expr>;<pos:position pos:line="8" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></then> <else pos:line="9" pos:column="7">else <block pos:line="9" pos:column="12">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">state<pos:position pos:line="10" pos:column="14"/></name> <operator pos:line="10" pos:column="15">=<pos:position pos:line="10" pos:column="16"/></operator> <literal type="number" pos:line="10" pos:column="17">2<pos:position pos:line="10" pos:column="18"/></literal></expr>;<pos:position pos:line="10" pos:column="19"/></expr_stmt> <comment type="block" pos:line="10" pos:column="20">/* process a function */</comment>
        <comment type="block" pos:line="11" pos:column="9">/* advance past function name */</comment>
        <expr_stmt><expr><name pos:line="12" pos:column="9">var_pos<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">=<pos:position pos:line="12" pos:column="18"/></operator> <operator pos:line="12" pos:column="19">++<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="21">pos<pos:position pos:line="12" pos:column="24"/></name></expr>;<pos:position pos:line="12" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></else></if>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

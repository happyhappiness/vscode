<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3925_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Adaptation<pos:position pos:line="1" pos:column="16"/></name><operator pos:line="1" pos:column="16">::<pos:position pos:line="1" pos:column="18"/></operator><name pos:line="1" pos:column="18">History<pos:position pos:line="1" pos:column="25"/></name><operator pos:line="1" pos:column="25">::<pos:position pos:line="1" pos:column="27"/></operator><name pos:line="1" pos:column="27">recordXactFinish<pos:position pos:line="1" pos:column="43"/></name></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><name pos:line="1" pos:column="44">int<pos:position pos:line="1" pos:column="47"/></name></type> <name pos:line="1" pos:column="48">hid<pos:position pos:line="1" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="52"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">Must<pos:position pos:line="3" pos:column="9"/></name><argument_list pos:line="3" pos:column="9">(<argument><expr><literal type="number" pos:line="3" pos:column="10">0<pos:position pos:line="3" pos:column="11"/></literal> <operator pos:line="3" pos:column="12">&lt;=<pos:position pos:line="3" pos:column="17"/></operator> <name pos:line="3" pos:column="15">hid<pos:position pos:line="3" pos:column="18"/></name> <operator pos:line="3" pos:column="19">&amp;&amp;<pos:position pos:line="3" pos:column="29"/></operator> <name pos:line="3" pos:column="22">hid<pos:position pos:line="3" pos:column="25"/></name> <operator pos:line="3" pos:column="26">&lt;<pos:position pos:line="3" pos:column="30"/></operator> <cast type="static" pos:line="3" pos:column="28">static_cast<argument_list type="generic" pos:line="3" pos:column="39">&lt;<argument><expr><name pos:line="3" pos:column="40">int<pos:position pos:line="3" pos:column="43"/></name></expr></argument>&gt;<pos:position pos:line="3" pos:column="47"/></argument_list><argument_list pos:line="3" pos:column="44">(<argument><expr><call><name><name pos:line="3" pos:column="45">theEntries<pos:position pos:line="3" pos:column="55"/></name><operator pos:line="3" pos:column="55">.<pos:position pos:line="3" pos:column="56"/></operator><name pos:line="3" pos:column="56">size<pos:position pos:line="3" pos:column="60"/></name></name><argument_list pos:line="3" pos:column="60">()<pos:position pos:line="3" pos:column="62"/></argument_list></call></expr></argument>)<pos:position pos:line="3" pos:column="63"/></argument_list></cast></expr></argument>)<pos:position pos:line="3" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="4" pos:column="5">theEntries<pos:position pos:line="4" pos:column="15"/></name><index pos:line="4" pos:column="15">[<expr><name pos:line="4" pos:column="16">hid<pos:position pos:line="4" pos:column="19"/></name></expr>]<pos:position pos:line="4" pos:column="20"/></index></name><operator pos:line="4" pos:column="20">.<pos:position pos:line="4" pos:column="21"/></operator><call><name pos:line="4" pos:column="21">stop<pos:position pos:line="4" pos:column="25"/></name><argument_list pos:line="4" pos:column="25">()<pos:position pos:line="4" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="28"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

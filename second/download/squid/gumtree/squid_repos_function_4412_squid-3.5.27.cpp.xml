<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4412_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">squid_bio_read<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">BIO<pos:position pos:line="2" pos:column="19"/></name> <modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">table<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="28">char<pos:position pos:line="2" pos:column="32"/></name> <modifier pos:line="2" pos:column="33">*<pos:position pos:line="2" pos:column="34"/></modifier></type><name pos:line="2" pos:column="34">buf<pos:position pos:line="2" pos:column="37"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="39">int<pos:position pos:line="2" pos:column="42"/></name></type> <name pos:line="2" pos:column="43">size<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="48"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">Ssl<pos:position pos:line="4" pos:column="8"/></name><operator pos:line="4" pos:column="8">::<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">Bio<pos:position pos:line="4" pos:column="13"/></name></name> <modifier pos:line="4" pos:column="14">*<pos:position pos:line="4" pos:column="15"/></modifier></type><name pos:line="4" pos:column="15">bio<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><cast type="static" pos:line="4" pos:column="21">static_cast<argument_list type="generic" pos:line="4" pos:column="32">&lt;<argument><expr><name><name pos:line="4" pos:column="33">Ssl<pos:position pos:line="4" pos:column="36"/></name><operator pos:line="4" pos:column="36">::<pos:position pos:line="4" pos:column="38"/></operator><name pos:line="4" pos:column="38">Bio<pos:position pos:line="4" pos:column="41"/></name></name><operator pos:line="4" pos:column="41">*<pos:position pos:line="4" pos:column="42"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="46"/></argument_list><argument_list pos:line="4" pos:column="43">(<argument><expr><name><name pos:line="4" pos:column="44">table<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">-&gt;<pos:position pos:line="4" pos:column="54"/></operator><name pos:line="4" pos:column="51">ptr<pos:position pos:line="4" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="55"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="56"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name><argument_list pos:line="5" pos:column="11">(<argument><expr><name pos:line="5" pos:column="12">bio<pos:position pos:line="5" pos:column="15"/></name></expr></argument>)<pos:position pos:line="5" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="17"/></expr_stmt>
    <return pos:line="6" pos:column="5">return <expr><call><name><name pos:line="6" pos:column="12">bio<pos:position pos:line="6" pos:column="15"/></name><operator pos:line="6" pos:column="15">-&gt;<pos:position pos:line="6" pos:column="20"/></operator><name pos:line="6" pos:column="17">read<pos:position pos:line="6" pos:column="21"/></name></name><argument_list pos:line="6" pos:column="21">(<argument><expr><name pos:line="6" pos:column="22">buf<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="27">size<pos:position pos:line="6" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="33">table<pos:position pos:line="6" pos:column="38"/></name></expr></argument>)<pos:position pos:line="6" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="40"/></return>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

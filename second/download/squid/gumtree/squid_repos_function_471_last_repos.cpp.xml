<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_471_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">time_t<pos:position pos:line="1" pos:column="7"/></name></type>
<name><name pos:line="2" pos:column="1">HttpReply<pos:position pos:line="2" pos:column="10"/></name><operator pos:line="2" pos:column="10">::<pos:position pos:line="2" pos:column="12"/></operator><name pos:line="2" pos:column="12">hdrExpirationTime<pos:position pos:line="2" pos:column="29"/></name></name><parameter_list pos:line="2" pos:column="29">()<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* The s-maxage and max-age directive takes priority over Expires */</comment>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">cache_control<pos:position pos:line="6" pos:column="22"/></name></expr>)<pos:position pos:line="6" pos:column="23"/></condition><then pos:line="6" pos:column="23"> <block pos:line="6" pos:column="24">{
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">int<pos:position pos:line="7" pos:column="12"/></name></type> <name pos:line="7" pos:column="13">maxAge<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><operator pos:line="7" pos:column="22">-<pos:position pos:line="7" pos:column="23"/></operator><literal type="number" pos:line="7" pos:column="23">1<pos:position pos:line="7" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="25"/></decl_stmt>
        <comment type="block" pos:line="8" pos:column="9">/*
         * Conservatively handle the case when we have a max-age
         * header, but no Date for reference?
         */</comment>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><call><name><name pos:line="12" pos:column="13">cache_control<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">hasSMaxAge<pos:position pos:line="12" pos:column="38"/></name></name><argument_list pos:line="12" pos:column="38">(<argument><expr><operator pos:line="12" pos:column="39">&amp;<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="40">maxAge<pos:position pos:line="12" pos:column="46"/></name></expr></argument>)<pos:position pos:line="12" pos:column="47"/></argument_list></call> <operator pos:line="12" pos:column="48">||<pos:position pos:line="12" pos:column="50"/></operator> <call><name><name pos:line="12" pos:column="51">cache_control<pos:position pos:line="12" pos:column="64"/></name><operator pos:line="12" pos:column="64">-&gt;<pos:position pos:line="12" pos:column="69"/></operator><name pos:line="12" pos:column="66">hasMaxAge<pos:position pos:line="12" pos:column="75"/></name></name><argument_list pos:line="12" pos:column="75">(<argument><expr><operator pos:line="12" pos:column="76">&amp;<pos:position pos:line="12" pos:column="81"/></operator><name pos:line="12" pos:column="77">maxAge<pos:position pos:line="12" pos:column="83"/></name></expr></argument>)<pos:position pos:line="12" pos:column="84"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="85"/></condition><then pos:line="12" pos:column="85">
            <block type="pseudo"><return pos:line="13" pos:column="13">return <expr><ternary><condition><expr><operator pos:line="13" pos:column="20">(<pos:position pos:line="13" pos:column="21"/></operator><name pos:line="13" pos:column="21">date<pos:position pos:line="13" pos:column="25"/></name> <operator pos:line="13" pos:column="26">&gt;=<pos:position pos:line="13" pos:column="31"/></operator> <literal type="number" pos:line="13" pos:column="29">0<pos:position pos:line="13" pos:column="30"/></literal><operator pos:line="13" pos:column="30">)<pos:position pos:line="13" pos:column="31"/></operator></expr> ?<pos:position pos:line="13" pos:column="33"/></condition><then pos:line="13" pos:column="33"> <expr><name pos:line="13" pos:column="34">date<pos:position pos:line="13" pos:column="38"/></name> <operator pos:line="13" pos:column="39">+<pos:position pos:line="13" pos:column="40"/></operator> <name pos:line="13" pos:column="41">maxAge<pos:position pos:line="13" pos:column="47"/></name></expr> <pos:position pos:line="13" pos:column="48"/></then><else pos:line="13" pos:column="48">: <expr><name pos:line="13" pos:column="50">squid_curtime<pos:position pos:line="13" pos:column="63"/></name></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="64"/></return></block></then></if>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><name><name pos:line="16" pos:column="9">Config<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">.<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="16">onoff<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">vary_ignore_expire<pos:position pos:line="16" pos:column="40"/></name></name> <operator pos:line="16" pos:column="41">&amp;&amp;<pos:position pos:line="16" pos:column="51"/></operator>
            <call><name><name pos:line="17" pos:column="13">header<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">.<pos:position pos:line="17" pos:column="20"/></operator><name pos:line="17" pos:column="20">has<pos:position pos:line="17" pos:column="23"/></name></name><argument_list pos:line="17" pos:column="23">(<argument><expr><name><name pos:line="17" pos:column="24">Http<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">::<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">HdrType<pos:position pos:line="17" pos:column="37"/></name><operator pos:line="17" pos:column="37">::<pos:position pos:line="17" pos:column="39"/></operator><name pos:line="17" pos:column="39">VARY<pos:position pos:line="17" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="45"/></condition><then pos:line="17" pos:column="45"> <block pos:line="17" pos:column="46">{
        <decl_stmt><decl><type><specifier pos:line="18" pos:column="9">const<pos:position pos:line="18" pos:column="14"/></specifier> <name pos:line="18" pos:column="15">time_t<pos:position pos:line="18" pos:column="21"/></name></type> <name pos:line="18" pos:column="22">d<pos:position pos:line="18" pos:column="23"/></name> <init pos:line="18" pos:column="24">= <expr><call><name><name pos:line="18" pos:column="26">header<pos:position pos:line="18" pos:column="32"/></name><operator pos:line="18" pos:column="32">.<pos:position pos:line="18" pos:column="33"/></operator><name pos:line="18" pos:column="33">getTime<pos:position pos:line="18" pos:column="40"/></name></name><argument_list pos:line="18" pos:column="40">(<argument><expr><name><name pos:line="18" pos:column="41">Http<pos:position pos:line="18" pos:column="45"/></name><operator pos:line="18" pos:column="45">::<pos:position pos:line="18" pos:column="47"/></operator><name pos:line="18" pos:column="47">HdrType<pos:position pos:line="18" pos:column="54"/></name><operator pos:line="18" pos:column="54">::<pos:position pos:line="18" pos:column="56"/></operator><name pos:line="18" pos:column="56">DATE<pos:position pos:line="18" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="18" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="62"/></decl_stmt>
        <decl_stmt><decl><type><specifier pos:line="19" pos:column="9">const<pos:position pos:line="19" pos:column="14"/></specifier> <name pos:line="19" pos:column="15">time_t<pos:position pos:line="19" pos:column="21"/></name></type> <name pos:line="19" pos:column="22">e<pos:position pos:line="19" pos:column="23"/></name> <init pos:line="19" pos:column="24">= <expr><call><name><name pos:line="19" pos:column="26">header<pos:position pos:line="19" pos:column="32"/></name><operator pos:line="19" pos:column="32">.<pos:position pos:line="19" pos:column="33"/></operator><name pos:line="19" pos:column="33">getTime<pos:position pos:line="19" pos:column="40"/></name></name><argument_list pos:line="19" pos:column="40">(<argument><expr><name><name pos:line="19" pos:column="41">Http<pos:position pos:line="19" pos:column="45"/></name><operator pos:line="19" pos:column="45">::<pos:position pos:line="19" pos:column="47"/></operator><name pos:line="19" pos:column="47">HdrType<pos:position pos:line="19" pos:column="54"/></name><operator pos:line="19" pos:column="54">::<pos:position pos:line="19" pos:column="56"/></operator><name pos:line="19" pos:column="56">EXPIRES<pos:position pos:line="19" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="19" pos:column="65"/></decl_stmt>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">d<pos:position pos:line="21" pos:column="14"/></name> <operator pos:line="21" pos:column="15">==<pos:position pos:line="21" pos:column="17"/></operator> <name pos:line="21" pos:column="18">e<pos:position pos:line="21" pos:column="19"/></name></expr>)<pos:position pos:line="21" pos:column="20"/></condition><then pos:line="21" pos:column="20">
            <block type="pseudo"><return pos:line="22" pos:column="13">return <expr><operator pos:line="22" pos:column="20">-<pos:position pos:line="22" pos:column="21"/></operator><literal type="number" pos:line="22" pos:column="21">1<pos:position pos:line="22" pos:column="22"/></literal></expr>;<pos:position pos:line="22" pos:column="23"/></return></block></then></if>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <if pos:line="25" pos:column="5">if <condition pos:line="25" pos:column="8">(<expr><call><name><name pos:line="25" pos:column="9">header<pos:position pos:line="25" pos:column="15"/></name><operator pos:line="25" pos:column="15">.<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">has<pos:position pos:line="25" pos:column="19"/></name></name><argument_list pos:line="25" pos:column="19">(<argument><expr><name><name pos:line="25" pos:column="20">Http<pos:position pos:line="25" pos:column="24"/></name><operator pos:line="25" pos:column="24">::<pos:position pos:line="25" pos:column="26"/></operator><name pos:line="25" pos:column="26">HdrType<pos:position pos:line="25" pos:column="33"/></name><operator pos:line="25" pos:column="33">::<pos:position pos:line="25" pos:column="35"/></operator><name pos:line="25" pos:column="35">EXPIRES<pos:position pos:line="25" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="25" pos:column="44"/></condition><then pos:line="25" pos:column="44"> <block pos:line="25" pos:column="45">{
        <decl_stmt><decl><type><specifier pos:line="26" pos:column="9">const<pos:position pos:line="26" pos:column="14"/></specifier> <name pos:line="26" pos:column="15">time_t<pos:position pos:line="26" pos:column="21"/></name></type> <name pos:line="26" pos:column="22">e<pos:position pos:line="26" pos:column="23"/></name> <init pos:line="26" pos:column="24">= <expr><call><name><name pos:line="26" pos:column="26">header<pos:position pos:line="26" pos:column="32"/></name><operator pos:line="26" pos:column="32">.<pos:position pos:line="26" pos:column="33"/></operator><name pos:line="26" pos:column="33">getTime<pos:position pos:line="26" pos:column="40"/></name></name><argument_list pos:line="26" pos:column="40">(<argument><expr><name><name pos:line="26" pos:column="41">Http<pos:position pos:line="26" pos:column="45"/></name><operator pos:line="26" pos:column="45">::<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="47">HdrType<pos:position pos:line="26" pos:column="54"/></name><operator pos:line="26" pos:column="54">::<pos:position pos:line="26" pos:column="56"/></operator><name pos:line="26" pos:column="56">EXPIRES<pos:position pos:line="26" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="64"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="65"/></decl_stmt>
        <comment type="block" pos:line="27" pos:column="9">/*
         * HTTP/1.0 says that robust implementations should consider
         * bad or malformed Expires header as equivalent to "expires
         * immediately."
         */</comment>
        <return pos:line="32" pos:column="9">return <expr><ternary><condition><expr><name pos:line="32" pos:column="16">e<pos:position pos:line="32" pos:column="17"/></name> <operator pos:line="32" pos:column="18">&lt;<pos:position pos:line="32" pos:column="22"/></operator> <literal type="number" pos:line="32" pos:column="20">0<pos:position pos:line="32" pos:column="21"/></literal></expr> ?<pos:position pos:line="32" pos:column="23"/></condition><then pos:line="32" pos:column="23"> <expr><name pos:line="32" pos:column="24">squid_curtime<pos:position pos:line="32" pos:column="37"/></name></expr> <pos:position pos:line="32" pos:column="38"/></then><else pos:line="32" pos:column="38">: <expr><name pos:line="32" pos:column="40">e<pos:position pos:line="32" pos:column="41"/></name></expr></else></ternary></expr>;<pos:position pos:line="32" pos:column="42"/></return>
    }<pos:position pos:line="33" pos:column="6"/></block></then></if>

    <return pos:line="35" pos:column="5">return <expr><operator pos:line="35" pos:column="12">-<pos:position pos:line="35" pos:column="13"/></operator><literal type="number" pos:line="35" pos:column="13">1<pos:position pos:line="35" pos:column="14"/></literal></expr>;<pos:position pos:line="35" pos:column="15"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

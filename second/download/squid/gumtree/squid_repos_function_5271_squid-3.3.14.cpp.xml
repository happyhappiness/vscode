<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5271_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Auth<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">Ntlm<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">UserRequest<pos:position pos:line="2" pos:column="24"/></name><operator pos:line="2" pos:column="24">::<pos:position pos:line="2" pos:column="26"/></operator><name pos:line="2" pos:column="26">authenticate<pos:position pos:line="2" pos:column="38"/></name></name><parameter_list pos:line="2" pos:column="38">(<parameter><decl><type><name pos:line="2" pos:column="39">HttpRequest<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">aRequest<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="63">ConnStateData<pos:position pos:line="2" pos:column="76"/></name> <modifier pos:line="2" pos:column="77">*<pos:position pos:line="2" pos:column="78"/></modifier></type> <name pos:line="2" pos:column="79">conn<pos:position pos:line="2" pos:column="83"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="85">http_hdr_type<pos:position pos:line="2" pos:column="98"/></name></type> <name pos:line="2" pos:column="99">type<pos:position pos:line="2" pos:column="103"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="104"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">this<pos:position pos:line="4" pos:column="16"/></name></expr></argument>)<pos:position pos:line="4" pos:column="17"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="18"/></expr_stmt>

    <comment type="block" pos:line="6" pos:column="5">/* Check that we are in the client side, where we can generate
     * auth challenges */</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">conn<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">==<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">NULL<pos:position pos:line="9" pos:column="21"/></name> <operator pos:line="9" pos:column="22">||<pos:position pos:line="9" pos:column="24"/></operator> <operator pos:line="9" pos:column="25">!<pos:position pos:line="9" pos:column="26"/></operator><call><name pos:line="9" pos:column="26">cbdataReferenceValid<pos:position pos:line="9" pos:column="46"/></name><argument_list pos:line="9" pos:column="46">(<argument><expr><name pos:line="9" pos:column="47">conn<pos:position pos:line="9" pos:column="51"/></name></expr></argument>)<pos:position pos:line="9" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="53"/></condition><then pos:line="9" pos:column="53"> <block pos:line="9" pos:column="54">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">user<pos:position pos:line="10" pos:column="13"/></name><argument_list pos:line="10" pos:column="13">()<pos:position pos:line="10" pos:column="15"/></argument_list></call><operator pos:line="10" pos:column="15">-&gt;<pos:position pos:line="10" pos:column="20"/></operator><call><name pos:line="10" pos:column="17">credentials<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name><name pos:line="10" pos:column="29">Auth<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">::<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">Failed<pos:position pos:line="10" pos:column="41"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="43"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">29<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="11" pos:column="20">DBG_IMPORTANT<pos:position pos:line="11" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="35">"WARNING: NTLM Authentication attempt to perform authentication without a connection!"<pos:position pos:line="11" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="123"/></expr_stmt>
        <return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return>
    }<pos:position pos:line="13" pos:column="6"/></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">waiting<pos:position pos:line="15" pos:column="16"/></name></expr>)<pos:position pos:line="15" pos:column="17"/></condition><then pos:line="15" pos:column="17"> <block pos:line="15" pos:column="18">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">29<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="20">DBG_IMPORTANT<pos:position pos:line="16" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="35">"WARNING: NTLM Authentication waiting for helper reply!"<pos:position pos:line="16" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="92"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="93"/></expr_stmt>
        <return pos:line="17" pos:column="9">return;<pos:position pos:line="17" pos:column="16"/></return>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">server_blob<pos:position pos:line="20" pos:column="20"/></name></expr>)<pos:position pos:line="20" pos:column="21"/></condition><then pos:line="20" pos:column="21"> <block pos:line="20" pos:column="22">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">29<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="20">2<pos:position pos:line="21" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="23">HERE<pos:position pos:line="21" pos:column="27"/></name> <operator pos:line="21" pos:column="28">&lt;&lt;<pos:position pos:line="21" pos:column="36"/></operator> <literal type="string" pos:line="21" pos:column="31">"need to challenge client '"<pos:position pos:line="21" pos:column="59"/></literal> <operator pos:line="21" pos:column="60">&lt;&lt;<pos:position pos:line="21" pos:column="68"/></operator> <name pos:line="21" pos:column="63">server_blob<pos:position pos:line="21" pos:column="74"/></name> <operator pos:line="21" pos:column="75">&lt;&lt;<pos:position pos:line="21" pos:column="83"/></operator> <literal type="string" pos:line="21" pos:column="78">"'!"<pos:position pos:line="21" pos:column="82"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="83"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="84"/></expr_stmt>
        <return pos:line="22" pos:column="9">return;<pos:position pos:line="22" pos:column="16"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="25" pos:column="5">/* get header */</comment>
    <decl_stmt><decl><type><specifier pos:line="26" pos:column="5">const<pos:position pos:line="26" pos:column="10"/></specifier> <name pos:line="26" pos:column="11">char<pos:position pos:line="26" pos:column="15"/></name> <modifier pos:line="26" pos:column="16">*<pos:position pos:line="26" pos:column="17"/></modifier></type><name pos:line="26" pos:column="17">proxy_auth<pos:position pos:line="26" pos:column="27"/></name> <init pos:line="26" pos:column="28">= <expr><call><name><name pos:line="26" pos:column="30">aRequest<pos:position pos:line="26" pos:column="38"/></name><operator pos:line="26" pos:column="38">-&gt;<pos:position pos:line="26" pos:column="43"/></operator><name pos:line="26" pos:column="40">header<pos:position pos:line="26" pos:column="46"/></name><operator pos:line="26" pos:column="46">.<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="47">getStr<pos:position pos:line="26" pos:column="53"/></name></name><argument_list pos:line="26" pos:column="53">(<argument><expr><name pos:line="26" pos:column="54">type<pos:position pos:line="26" pos:column="58"/></name></expr></argument>)<pos:position pos:line="26" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="26" pos:column="60"/></decl_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* locate second word */</comment>
    <decl_stmt><decl><type><specifier pos:line="29" pos:column="5">const<pos:position pos:line="29" pos:column="10"/></specifier> <name pos:line="29" pos:column="11">char<pos:position pos:line="29" pos:column="15"/></name> <modifier pos:line="29" pos:column="16">*<pos:position pos:line="29" pos:column="17"/></modifier></type><name pos:line="29" pos:column="17">blob<pos:position pos:line="29" pos:column="21"/></name> <init pos:line="29" pos:column="22">= <expr><name pos:line="29" pos:column="24">proxy_auth<pos:position pos:line="29" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="29" pos:column="35"/></decl_stmt>

    <comment type="block" pos:line="31" pos:column="5">/* if proxy_auth is actually NULL, we'd better not manipulate it. */</comment>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name pos:line="32" pos:column="9">blob<pos:position pos:line="32" pos:column="13"/></name></expr>)<pos:position pos:line="32" pos:column="14"/></condition><then pos:line="32" pos:column="14"> <block pos:line="32" pos:column="15">{
        <while pos:line="33" pos:column="9">while <condition pos:line="33" pos:column="15">(<expr><call><name pos:line="33" pos:column="16">xisspace<pos:position pos:line="33" pos:column="24"/></name><argument_list pos:line="33" pos:column="24">(<argument><expr><operator pos:line="33" pos:column="25">*<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">blob<pos:position pos:line="33" pos:column="30"/></name></expr></argument>)<pos:position pos:line="33" pos:column="31"/></argument_list></call> <operator pos:line="33" pos:column="32">&amp;&amp;<pos:position pos:line="33" pos:column="42"/></operator> <operator pos:line="33" pos:column="35">*<pos:position pos:line="33" pos:column="36"/></operator><name pos:line="33" pos:column="36">blob<pos:position pos:line="33" pos:column="40"/></name></expr>)<pos:position pos:line="33" pos:column="41"/></condition>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="34" pos:column="13">++<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">blob<pos:position pos:line="34" pos:column="19"/></name></expr>;<pos:position pos:line="34" pos:column="20"/></expr_stmt></block></while>

        <while pos:line="36" pos:column="9">while <condition pos:line="36" pos:column="15">(<expr><operator pos:line="36" pos:column="16">!<pos:position pos:line="36" pos:column="17"/></operator><call><name pos:line="36" pos:column="17">xisspace<pos:position pos:line="36" pos:column="25"/></name><argument_list pos:line="36" pos:column="25">(<argument><expr><operator pos:line="36" pos:column="26">*<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="27">blob<pos:position pos:line="36" pos:column="31"/></name></expr></argument>)<pos:position pos:line="36" pos:column="32"/></argument_list></call> <operator pos:line="36" pos:column="33">&amp;&amp;<pos:position pos:line="36" pos:column="43"/></operator> <operator pos:line="36" pos:column="36">*<pos:position pos:line="36" pos:column="37"/></operator><name pos:line="36" pos:column="37">blob<pos:position pos:line="36" pos:column="41"/></name></expr>)<pos:position pos:line="36" pos:column="42"/></condition>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="37" pos:column="13">++<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="15">blob<pos:position pos:line="37" pos:column="19"/></name></expr>;<pos:position pos:line="37" pos:column="20"/></expr_stmt></block></while>

        <while pos:line="39" pos:column="9">while <condition pos:line="39" pos:column="15">(<expr><call><name pos:line="39" pos:column="16">xisspace<pos:position pos:line="39" pos:column="24"/></name><argument_list pos:line="39" pos:column="24">(<argument><expr><operator pos:line="39" pos:column="25">*<pos:position pos:line="39" pos:column="26"/></operator><name pos:line="39" pos:column="26">blob<pos:position pos:line="39" pos:column="30"/></name></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call> <operator pos:line="39" pos:column="32">&amp;&amp;<pos:position pos:line="39" pos:column="42"/></operator> <operator pos:line="39" pos:column="35">*<pos:position pos:line="39" pos:column="36"/></operator><name pos:line="39" pos:column="36">blob<pos:position pos:line="39" pos:column="40"/></name></expr>)<pos:position pos:line="39" pos:column="41"/></condition>
            <block type="pseudo"><expr_stmt><expr><operator pos:line="40" pos:column="13">++<pos:position pos:line="40" pos:column="15"/></operator><name pos:line="40" pos:column="15">blob<pos:position pos:line="40" pos:column="19"/></name></expr>;<pos:position pos:line="40" pos:column="20"/></expr_stmt></block></while>
    }<pos:position pos:line="41" pos:column="6"/></block></then></if>

    <switch pos:line="43" pos:column="5">switch <condition pos:line="43" pos:column="12">(<expr><call><name pos:line="43" pos:column="13">user<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">()<pos:position pos:line="43" pos:column="19"/></argument_list></call><operator pos:line="43" pos:column="19">-&gt;<pos:position pos:line="43" pos:column="24"/></operator><call><name pos:line="43" pos:column="21">credentials<pos:position pos:line="43" pos:column="32"/></name><argument_list pos:line="43" pos:column="32">()<pos:position pos:line="43" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="43" pos:column="35"/></condition> <block pos:line="43" pos:column="36">{

    <case pos:line="45" pos:column="5">case <expr><name><name pos:line="45" pos:column="10">Auth<pos:position pos:line="45" pos:column="14"/></name><operator pos:line="45" pos:column="14">::<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="16">Unchecked<pos:position pos:line="45" pos:column="25"/></name></name></expr>:<pos:position pos:line="45" pos:column="26"/></case>
        <comment type="block" pos:line="46" pos:column="9">/* we've received a ntlm request. pass to a helper */</comment>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">debugs<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><literal type="number" pos:line="47" pos:column="16">29<pos:position pos:line="47" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="20">9<pos:position pos:line="47" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="47" pos:column="23">HERE<pos:position pos:line="47" pos:column="27"/></name> <operator pos:line="47" pos:column="28">&lt;&lt;<pos:position pos:line="47" pos:column="36"/></operator> <literal type="string" pos:line="47" pos:column="31">"auth state ntlm none. Received blob: '"<pos:position pos:line="47" pos:column="71"/></literal> <operator pos:line="47" pos:column="72">&lt;&lt;<pos:position pos:line="47" pos:column="80"/></operator> <name pos:line="47" pos:column="75">proxy_auth<pos:position pos:line="47" pos:column="85"/></name> <operator pos:line="47" pos:column="86">&lt;&lt;<pos:position pos:line="47" pos:column="94"/></operator> <literal type="string" pos:line="47" pos:column="89">"'"<pos:position pos:line="47" pos:column="92"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="93"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="94"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">user<pos:position pos:line="48" pos:column="13"/></name><argument_list pos:line="48" pos:column="13">()<pos:position pos:line="48" pos:column="15"/></argument_list></call><operator pos:line="48" pos:column="15">-&gt;<pos:position pos:line="48" pos:column="20"/></operator><call><name pos:line="48" pos:column="17">credentials<pos:position pos:line="48" pos:column="28"/></name><argument_list pos:line="48" pos:column="28">(<argument><expr><name><name pos:line="48" pos:column="29">Auth<pos:position pos:line="48" pos:column="33"/></name><operator pos:line="48" pos:column="33">::<pos:position pos:line="48" pos:column="35"/></operator><name pos:line="48" pos:column="35">Pending<pos:position pos:line="48" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="48" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">safe_free<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">client_blob<pos:position pos:line="49" pos:column="30"/></name></expr></argument>)<pos:position pos:line="49" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">client_blob<pos:position pos:line="50" pos:column="20"/></name><operator pos:line="50" pos:column="20">=<pos:position pos:line="50" pos:column="21"/></operator><call><name pos:line="50" pos:column="21">xstrdup<pos:position pos:line="50" pos:column="28"/></name><argument_list pos:line="50" pos:column="28">(<argument><expr><name pos:line="50" pos:column="29">blob<pos:position pos:line="50" pos:column="33"/></name></expr></argument>)<pos:position pos:line="50" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="51" pos:column="9">assert<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><name><name pos:line="51" pos:column="16">conn<pos:position pos:line="51" pos:column="20"/></name><operator pos:line="51" pos:column="20">-&gt;<pos:position pos:line="51" pos:column="25"/></operator><name pos:line="51" pos:column="22">auth_user_request<pos:position pos:line="51" pos:column="39"/></name></name> <operator pos:line="51" pos:column="40">==<pos:position pos:line="51" pos:column="42"/></operator> <name pos:line="51" pos:column="43">NULL<pos:position pos:line="51" pos:column="47"/></name></expr></argument>)<pos:position pos:line="51" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="52" pos:column="9">conn<pos:position pos:line="52" pos:column="13"/></name><operator pos:line="52" pos:column="13">-&gt;<pos:position pos:line="52" pos:column="18"/></operator><name pos:line="52" pos:column="15">auth_user_request<pos:position pos:line="52" pos:column="32"/></name></name> <operator pos:line="52" pos:column="33">=<pos:position pos:line="52" pos:column="34"/></operator> <name pos:line="52" pos:column="35">this<pos:position pos:line="52" pos:column="39"/></name></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name pos:line="53" pos:column="9">request<pos:position pos:line="53" pos:column="16"/></name> <operator pos:line="53" pos:column="17">=<pos:position pos:line="53" pos:column="18"/></operator> <name pos:line="53" pos:column="19">aRequest<pos:position pos:line="53" pos:column="27"/></name></expr>;<pos:position pos:line="53" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="54" pos:column="9">HTTPMSGLOCK<pos:position pos:line="54" pos:column="20"/></name><argument_list pos:line="54" pos:column="20">(<argument><expr><name pos:line="54" pos:column="21">request<pos:position pos:line="54" pos:column="28"/></name></expr></argument>)<pos:position pos:line="54" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="30"/></expr_stmt>
        <break pos:line="55" pos:column="9">break;<pos:position pos:line="55" pos:column="15"/></break>

    <case pos:line="57" pos:column="5">case <expr><name><name pos:line="57" pos:column="10">Auth<pos:position pos:line="57" pos:column="14"/></name><operator pos:line="57" pos:column="14">::<pos:position pos:line="57" pos:column="16"/></operator><name pos:line="57" pos:column="16">Pending<pos:position pos:line="57" pos:column="23"/></name></name></expr>:<pos:position pos:line="57" pos:column="24"/></case>
        <expr_stmt><expr><call><name pos:line="58" pos:column="9">debugs<pos:position pos:line="58" pos:column="15"/></name><argument_list pos:line="58" pos:column="15">(<argument><expr><literal type="number" pos:line="58" pos:column="16">29<pos:position pos:line="58" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="58" pos:column="20">DBG_IMPORTANT<pos:position pos:line="58" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="58" pos:column="35">HERE<pos:position pos:line="58" pos:column="39"/></name> <operator pos:line="58" pos:column="40">&lt;&lt;<pos:position pos:line="58" pos:column="48"/></operator> <literal type="string" pos:line="58" pos:column="43">"need to ask helper"<pos:position pos:line="58" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="65"/></expr_stmt>
        <break pos:line="59" pos:column="9">break;<pos:position pos:line="59" pos:column="15"/></break>

    <case pos:line="61" pos:column="5">case <expr><name><name pos:line="61" pos:column="10">Auth<pos:position pos:line="61" pos:column="14"/></name><operator pos:line="61" pos:column="14">::<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">Handshake<pos:position pos:line="61" pos:column="25"/></name></name></expr>:<pos:position pos:line="61" pos:column="26"/></case>
        <comment type="block" pos:line="62" pos:column="9">/* we should have received a blob from the client. Hand it off to
         * some helper */</comment>
        <expr_stmt><expr><call><name pos:line="64" pos:column="9">safe_free<pos:position pos:line="64" pos:column="18"/></name><argument_list pos:line="64" pos:column="18">(<argument><expr><name pos:line="64" pos:column="19">client_blob<pos:position pos:line="64" pos:column="30"/></name></expr></argument>)<pos:position pos:line="64" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="64" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="65" pos:column="9">client_blob<pos:position pos:line="65" pos:column="20"/></name> <operator pos:line="65" pos:column="21">=<pos:position pos:line="65" pos:column="22"/></operator> <call><name pos:line="65" pos:column="23">xstrdup<pos:position pos:line="65" pos:column="30"/></name><argument_list pos:line="65" pos:column="30">(<argument><expr><name pos:line="65" pos:column="31">blob<pos:position pos:line="65" pos:column="35"/></name></expr></argument>)<pos:position pos:line="65" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="37"/></expr_stmt>
        <if pos:line="66" pos:column="9">if <condition pos:line="66" pos:column="12">(<expr><name pos:line="66" pos:column="13">request<pos:position pos:line="66" pos:column="20"/></name></expr>)<pos:position pos:line="66" pos:column="21"/></condition><then pos:line="66" pos:column="21">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="13">HTTPMSGUNLOCK<pos:position pos:line="67" pos:column="26"/></name><argument_list pos:line="67" pos:column="26">(<argument><expr><name pos:line="67" pos:column="27">request<pos:position pos:line="67" pos:column="34"/></name></expr></argument>)<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt></block></then></if>
        <expr_stmt><expr><name pos:line="68" pos:column="9">request<pos:position pos:line="68" pos:column="16"/></name> <operator pos:line="68" pos:column="17">=<pos:position pos:line="68" pos:column="18"/></operator> <name pos:line="68" pos:column="19">aRequest<pos:position pos:line="68" pos:column="27"/></name></expr>;<pos:position pos:line="68" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="69" pos:column="9">HTTPMSGLOCK<pos:position pos:line="69" pos:column="20"/></name><argument_list pos:line="69" pos:column="20">(<argument><expr><name pos:line="69" pos:column="21">request<pos:position pos:line="69" pos:column="28"/></name></expr></argument>)<pos:position pos:line="69" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="69" pos:column="30"/></expr_stmt>
        <break pos:line="70" pos:column="9">break;<pos:position pos:line="70" pos:column="15"/></break>

    <case pos:line="72" pos:column="5">case <expr><name><name pos:line="72" pos:column="10">Auth<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">::<pos:position pos:line="72" pos:column="16"/></operator><name pos:line="72" pos:column="16">Ok<pos:position pos:line="72" pos:column="18"/></name></name></expr>:<pos:position pos:line="72" pos:column="19"/></case>
        <expr_stmt><expr><call><name pos:line="73" pos:column="9">fatal<pos:position pos:line="73" pos:column="14"/></name><argument_list pos:line="73" pos:column="14">(<argument><expr><literal type="string" pos:line="73" pos:column="15">"Auth::Ntlm::UserRequest::authenticate: unexpect auth state DONE! Report a bug to the squid developers.\n"<pos:position pos:line="73" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="73" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="123"/></expr_stmt>
        <break pos:line="74" pos:column="9">break;<pos:position pos:line="74" pos:column="15"/></break>

    <case pos:line="76" pos:column="5">case <expr><name><name pos:line="76" pos:column="10">Auth<pos:position pos:line="76" pos:column="14"/></name><operator pos:line="76" pos:column="14">::<pos:position pos:line="76" pos:column="16"/></operator><name pos:line="76" pos:column="16">Failed<pos:position pos:line="76" pos:column="22"/></name></name></expr>:<pos:position pos:line="76" pos:column="23"/></case>
        <comment type="block" pos:line="77" pos:column="9">/* we've failed somewhere in authentication */</comment>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">debugs<pos:position pos:line="78" pos:column="15"/></name><argument_list pos:line="78" pos:column="15">(<argument><expr><literal type="number" pos:line="78" pos:column="16">29<pos:position pos:line="78" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="78" pos:column="20">9<pos:position pos:line="78" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="78" pos:column="23">HERE<pos:position pos:line="78" pos:column="27"/></name> <operator pos:line="78" pos:column="28">&lt;&lt;<pos:position pos:line="78" pos:column="36"/></operator> <literal type="string" pos:line="78" pos:column="31">"auth state ntlm failed. "<pos:position pos:line="78" pos:column="57"/></literal> <operator pos:line="78" pos:column="58">&lt;&lt;<pos:position pos:line="78" pos:column="66"/></operator> <name pos:line="78" pos:column="61">proxy_auth<pos:position pos:line="78" pos:column="71"/></name></expr></argument>)<pos:position pos:line="78" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="73"/></expr_stmt>
        <break pos:line="79" pos:column="9">break;<pos:position pos:line="79" pos:column="15"/></break>
    }<pos:position pos:line="80" pos:column="6"/></block></switch>
}<pos:position pos:line="81" pos:column="2"/></block></function></unit>

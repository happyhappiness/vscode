<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_812_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">String<pos:position pos:line="1" pos:column="7"/></name></type> <name><name pos:line="1" pos:column="8">HttpReply<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">removeStaleWarningValues<pos:position pos:line="1" pos:column="43"/></name></name><parameter_list pos:line="1" pos:column="43">(<parameter><decl><type><specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier> <name pos:line="1" pos:column="50">String<pos:position pos:line="1" pos:column="56"/></name> <modifier pos:line="1" pos:column="57">&amp;<pos:position pos:line="1" pos:column="62"/></modifier></type><name pos:line="1" pos:column="58">value<pos:position pos:line="1" pos:column="63"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="64"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">String<pos:position pos:line="3" pos:column="11"/></name></type> <name pos:line="3" pos:column="12">newValue<pos:position pos:line="3" pos:column="20"/></name></decl>;<pos:position pos:line="3" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name pos:line="4" pos:column="11">char<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">item<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">len<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><literal type="number" pos:line="5" pos:column="15">0<pos:position pos:line="5" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="6" pos:column="5">const<pos:position pos:line="6" pos:column="10"/></specifier> <name pos:line="6" pos:column="11">char<pos:position pos:line="6" pos:column="15"/></name> <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier></type><name pos:line="6" pos:column="17">pos<pos:position pos:line="6" pos:column="20"/></name> <init pos:line="6" pos:column="21">= <expr><literal type="number" pos:line="6" pos:column="23">0<pos:position pos:line="6" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="25"/></decl_stmt>
    <while pos:line="7" pos:column="5">while <condition pos:line="7" pos:column="11">(<expr><call><name pos:line="7" pos:column="12">strListGetItem<pos:position pos:line="7" pos:column="26"/></name><argument_list pos:line="7" pos:column="26">(<argument><expr><operator pos:line="7" pos:column="27">&amp;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="28">value<pos:position pos:line="7" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="7" pos:column="35">','<pos:position pos:line="7" pos:column="38"/></literal></expr></argument>, <argument><expr><operator pos:line="7" pos:column="40">&amp;<pos:position pos:line="7" pos:column="45"/></operator><name pos:line="7" pos:column="41">item<pos:position pos:line="7" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="47">&amp;<pos:position pos:line="7" pos:column="52"/></operator><name pos:line="7" pos:column="48">len<pos:position pos:line="7" pos:column="51"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="53">&amp;<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="54">pos<pos:position pos:line="7" pos:column="57"/></name></expr></argument>)<pos:position pos:line="7" pos:column="58"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="59"/></condition> <block pos:line="7" pos:column="60">{
        <decl_stmt><decl><type><name pos:line="8" pos:column="9">bool<pos:position pos:line="8" pos:column="13"/></name></type> <name pos:line="8" pos:column="14">keep<pos:position pos:line="8" pos:column="18"/></name> <init pos:line="8" pos:column="19">= <expr><literal type="boolean" pos:line="8" pos:column="21">true<pos:position pos:line="8" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="26"/></decl_stmt>
        <comment type="line" pos:line="9" pos:column="9">// Does warning-value have warn-date (which contains quoted date)?</comment>
        <comment type="line" pos:line="10" pos:column="9">// We scan backwards, looking for two quoted strings.</comment>
        <comment type="line" pos:line="11" pos:column="9">// warning-value = warn-code SP warn-agent SP warn-text [SP warn-date]</comment>
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">p<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><name pos:line="12" pos:column="25">item<pos:position pos:line="12" pos:column="29"/></name> <operator pos:line="12" pos:column="30">+<pos:position pos:line="12" pos:column="31"/></operator> <name pos:line="12" pos:column="32">len<pos:position pos:line="12" pos:column="35"/></name> <operator pos:line="12" pos:column="36">-<pos:position pos:line="12" pos:column="37"/></operator> <literal type="number" pos:line="12" pos:column="38">1<pos:position pos:line="12" pos:column="39"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="40"/></decl_stmt>

        <while pos:line="14" pos:column="9">while <condition pos:line="14" pos:column="15">(<expr><name pos:line="14" pos:column="16">p<pos:position pos:line="14" pos:column="17"/></name> <operator pos:line="14" pos:column="18">&gt;=<pos:position pos:line="14" pos:column="23"/></operator> <name pos:line="14" pos:column="21">item<pos:position pos:line="14" pos:column="25"/></name> <operator pos:line="14" pos:column="26">&amp;&amp;<pos:position pos:line="14" pos:column="36"/></operator> <call><name pos:line="14" pos:column="29">xisspace<pos:position pos:line="14" pos:column="37"/></name><argument_list pos:line="14" pos:column="37">(<argument><expr><operator pos:line="14" pos:column="38">*<pos:position pos:line="14" pos:column="39"/></operator><name pos:line="14" pos:column="39">p<pos:position pos:line="14" pos:column="40"/></name></expr></argument>)<pos:position pos:line="14" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="14" pos:column="42"/></condition> <block type="pseudo"><expr_stmt><expr><operator pos:line="14" pos:column="43">--<pos:position pos:line="14" pos:column="45"/></operator><name pos:line="14" pos:column="45">p<pos:position pos:line="14" pos:column="46"/></name></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt></block></while> <comment type="line" pos:line="14" pos:column="48">// skip whitespace</comment>

        <comment type="line" pos:line="16" pos:column="9">// warning-value MUST end with quote</comment>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">p<pos:position pos:line="17" pos:column="14"/></name> <operator pos:line="17" pos:column="15">&gt;=<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="18">item<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">&amp;&amp;<pos:position pos:line="17" pos:column="33"/></operator> <operator pos:line="17" pos:column="26">*<pos:position pos:line="17" pos:column="27"/></operator><name pos:line="17" pos:column="27">p<pos:position pos:line="17" pos:column="28"/></name> <operator pos:line="17" pos:column="29">==<pos:position pos:line="17" pos:column="31"/></operator> <literal type="char" pos:line="17" pos:column="32">'"'<pos:position pos:line="17" pos:column="35"/></literal></expr>)<pos:position pos:line="17" pos:column="36"/></condition><then pos:line="17" pos:column="36"> <block pos:line="17" pos:column="37">{
            <decl_stmt><decl><type><specifier pos:line="18" pos:column="13">const<pos:position pos:line="18" pos:column="18"/></specifier> <name pos:line="18" pos:column="19">char<pos:position pos:line="18" pos:column="23"/></name> <modifier pos:line="18" pos:column="24">*<pos:position pos:line="18" pos:column="25"/></modifier><specifier pos:line="18" pos:column="25">const<pos:position pos:line="18" pos:column="30"/></specifier></type> <name pos:line="18" pos:column="31">warnDateEnd<pos:position pos:line="18" pos:column="42"/></name> <init pos:line="18" pos:column="43">= <expr><name pos:line="18" pos:column="45">p<pos:position pos:line="18" pos:column="46"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="47"/></decl_stmt>
            <expr_stmt><expr><operator pos:line="19" pos:column="13">--<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="15">p<pos:position pos:line="19" pos:column="16"/></name></expr>;<pos:position pos:line="19" pos:column="17"/></expr_stmt>
            <while pos:line="20" pos:column="13">while <condition pos:line="20" pos:column="19">(<expr><name pos:line="20" pos:column="20">p<pos:position pos:line="20" pos:column="21"/></name> <operator pos:line="20" pos:column="22">&gt;=<pos:position pos:line="20" pos:column="27"/></operator> <name pos:line="20" pos:column="25">item<pos:position pos:line="20" pos:column="29"/></name> <operator pos:line="20" pos:column="30">&amp;&amp;<pos:position pos:line="20" pos:column="40"/></operator> <operator pos:line="20" pos:column="33">*<pos:position pos:line="20" pos:column="34"/></operator><name pos:line="20" pos:column="34">p<pos:position pos:line="20" pos:column="35"/></name> <operator pos:line="20" pos:column="36">!=<pos:position pos:line="20" pos:column="38"/></operator> <literal type="char" pos:line="20" pos:column="39">'"'<pos:position pos:line="20" pos:column="42"/></literal></expr>)<pos:position pos:line="20" pos:column="43"/></condition> <block type="pseudo"><expr_stmt><expr><operator pos:line="20" pos:column="44">--<pos:position pos:line="20" pos:column="46"/></operator><name pos:line="20" pos:column="46">p<pos:position pos:line="20" pos:column="47"/></name></expr>;<pos:position pos:line="20" pos:column="48"/></expr_stmt></block></while> <comment type="line" pos:line="20" pos:column="49">// find the next quote</comment>

            <decl_stmt><decl><type><specifier pos:line="22" pos:column="13">const<pos:position pos:line="22" pos:column="18"/></specifier> <name pos:line="22" pos:column="19">char<pos:position pos:line="22" pos:column="23"/></name> <modifier pos:line="22" pos:column="24">*<pos:position pos:line="22" pos:column="25"/></modifier></type><name pos:line="22" pos:column="25">warnDateBeg<pos:position pos:line="22" pos:column="36"/></name> <init pos:line="22" pos:column="37">= <expr><name pos:line="22" pos:column="39">p<pos:position pos:line="22" pos:column="40"/></name> <operator pos:line="22" pos:column="41">+<pos:position pos:line="22" pos:column="42"/></operator> <literal type="number" pos:line="22" pos:column="43">1<pos:position pos:line="22" pos:column="44"/></literal></expr></init></decl>;<pos:position pos:line="22" pos:column="45"/></decl_stmt>
            <expr_stmt><expr><operator pos:line="23" pos:column="13">--<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">p<pos:position pos:line="23" pos:column="16"/></name></expr>;<pos:position pos:line="23" pos:column="17"/></expr_stmt>
            <while pos:line="24" pos:column="13">while <condition pos:line="24" pos:column="19">(<expr><name pos:line="24" pos:column="20">p<pos:position pos:line="24" pos:column="21"/></name> <operator pos:line="24" pos:column="22">&gt;=<pos:position pos:line="24" pos:column="27"/></operator> <name pos:line="24" pos:column="25">item<pos:position pos:line="24" pos:column="29"/></name> <operator pos:line="24" pos:column="30">&amp;&amp;<pos:position pos:line="24" pos:column="40"/></operator> <call><name pos:line="24" pos:column="33">xisspace<pos:position pos:line="24" pos:column="41"/></name><argument_list pos:line="24" pos:column="41">(<argument><expr><operator pos:line="24" pos:column="42">*<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="43">p<pos:position pos:line="24" pos:column="44"/></name></expr></argument>)<pos:position pos:line="24" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="24" pos:column="46"/></condition> <block type="pseudo"><expr_stmt><expr><operator pos:line="24" pos:column="47">--<pos:position pos:line="24" pos:column="49"/></operator><name pos:line="24" pos:column="49">p<pos:position pos:line="24" pos:column="50"/></name></expr>;<pos:position pos:line="24" pos:column="51"/></expr_stmt></block></while> <comment type="line" pos:line="24" pos:column="52">// skip whitespace</comment>

            <if pos:line="26" pos:column="13">if <condition pos:line="26" pos:column="16">(<expr><name pos:line="26" pos:column="17">p<pos:position pos:line="26" pos:column="18"/></name> <operator pos:line="26" pos:column="19">&gt;=<pos:position pos:line="26" pos:column="24"/></operator> <name pos:line="26" pos:column="22">item<pos:position pos:line="26" pos:column="26"/></name> <operator pos:line="26" pos:column="27">&amp;&amp;<pos:position pos:line="26" pos:column="37"/></operator> <operator pos:line="26" pos:column="30">*<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="31">p<pos:position pos:line="26" pos:column="32"/></name> <operator pos:line="26" pos:column="33">==<pos:position pos:line="26" pos:column="35"/></operator> <literal type="char" pos:line="26" pos:column="36">'"'<pos:position pos:line="26" pos:column="39"/></literal> <operator pos:line="26" pos:column="40">&amp;&amp;<pos:position pos:line="26" pos:column="50"/></operator> <name pos:line="26" pos:column="43">warnDateBeg<pos:position pos:line="26" pos:column="54"/></name> <operator pos:line="26" pos:column="55">-<pos:position pos:line="26" pos:column="56"/></operator> <name pos:line="26" pos:column="57">p<pos:position pos:line="26" pos:column="58"/></name> <operator pos:line="26" pos:column="59">&gt;<pos:position pos:line="26" pos:column="63"/></operator> <literal type="number" pos:line="26" pos:column="61">2<pos:position pos:line="26" pos:column="62"/></literal></expr>)<pos:position pos:line="26" pos:column="63"/></condition><then pos:line="26" pos:column="63"> <block pos:line="26" pos:column="64">{
                <comment type="line" pos:line="27" pos:column="17">// found warn-text</comment>
                <decl_stmt><decl><type><name pos:line="28" pos:column="17">String<pos:position pos:line="28" pos:column="23"/></name></type> <name pos:line="28" pos:column="24">warnDate<pos:position pos:line="28" pos:column="32"/></name></decl>;<pos:position pos:line="28" pos:column="33"/></decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="29" pos:column="17">warnDate<pos:position pos:line="29" pos:column="25"/></name><operator pos:line="29" pos:column="25">.<pos:position pos:line="29" pos:column="26"/></operator><name pos:line="29" pos:column="26">append<pos:position pos:line="29" pos:column="32"/></name></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">warnDateBeg<pos:position pos:line="29" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">warnDateEnd<pos:position pos:line="29" pos:column="57"/></name> <operator pos:line="29" pos:column="58">-<pos:position pos:line="29" pos:column="59"/></operator> <name pos:line="29" pos:column="60">warnDateBeg<pos:position pos:line="29" pos:column="71"/></name></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>
                <decl_stmt><decl><type><specifier pos:line="30" pos:column="17">const<pos:position pos:line="30" pos:column="22"/></specifier> <name pos:line="30" pos:column="23">time_t<pos:position pos:line="30" pos:column="29"/></name></type> <name pos:line="30" pos:column="30">time<pos:position pos:line="30" pos:column="34"/></name> <init pos:line="30" pos:column="35">= <expr><call><name pos:line="30" pos:column="37">parse_rfc1123<pos:position pos:line="30" pos:column="50"/></name><argument_list pos:line="30" pos:column="50">(<argument><expr><call><name><name pos:line="30" pos:column="51">warnDate<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">.<pos:position pos:line="30" pos:column="60"/></operator><name pos:line="30" pos:column="60">termedBuf<pos:position pos:line="30" pos:column="69"/></name></name><argument_list pos:line="30" pos:column="69">()<pos:position pos:line="30" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="30" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="73"/></decl_stmt>
                <expr_stmt><expr><name pos:line="31" pos:column="17">keep<pos:position pos:line="31" pos:column="21"/></name> <operator pos:line="31" pos:column="22">=<pos:position pos:line="31" pos:column="23"/></operator> <operator pos:line="31" pos:column="24">(<pos:position pos:line="31" pos:column="25"/></operator><name pos:line="31" pos:column="25">time<pos:position pos:line="31" pos:column="29"/></name> <operator pos:line="31" pos:column="30">&gt;<pos:position pos:line="31" pos:column="34"/></operator> <literal type="number" pos:line="31" pos:column="32">0<pos:position pos:line="31" pos:column="33"/></literal> <operator pos:line="31" pos:column="34">&amp;&amp;<pos:position pos:line="31" pos:column="44"/></operator> <name pos:line="31" pos:column="37">time<pos:position pos:line="31" pos:column="41"/></name> <operator pos:line="31" pos:column="42">==<pos:position pos:line="31" pos:column="44"/></operator> <name pos:line="31" pos:column="45">date<pos:position pos:line="31" pos:column="49"/></name><operator pos:line="31" pos:column="49">)<pos:position pos:line="31" pos:column="50"/></operator></expr>;<pos:position pos:line="31" pos:column="51"/></expr_stmt> <comment type="line" pos:line="31" pos:column="52">// keep valid and matching date</comment>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>

        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">keep<pos:position pos:line="35" pos:column="17"/></name></expr>)<pos:position pos:line="35" pos:column="18"/></condition><then pos:line="35" pos:column="18"> <block pos:line="35" pos:column="19">{
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><call><name><name pos:line="36" pos:column="17">newValue<pos:position pos:line="36" pos:column="25"/></name><operator pos:line="36" pos:column="25">.<pos:position pos:line="36" pos:column="26"/></operator><name pos:line="36" pos:column="26">size<pos:position pos:line="36" pos:column="30"/></name></name><argument_list pos:line="36" pos:column="30">()<pos:position pos:line="36" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="33"/></condition><then pos:line="36" pos:column="33">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="37" pos:column="17">newValue<pos:position pos:line="37" pos:column="25"/></name><operator pos:line="37" pos:column="25">.<pos:position pos:line="37" pos:column="26"/></operator><name pos:line="37" pos:column="26">append<pos:position pos:line="37" pos:column="32"/></name></name><argument_list pos:line="37" pos:column="32">(<argument><expr><literal type="string" pos:line="37" pos:column="33">", "<pos:position pos:line="37" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="39"/></expr_stmt></block></then></if>
            <expr_stmt><expr><call><name><name pos:line="38" pos:column="13">newValue<pos:position pos:line="38" pos:column="21"/></name><operator pos:line="38" pos:column="21">.<pos:position pos:line="38" pos:column="22"/></operator><name pos:line="38" pos:column="22">append<pos:position pos:line="38" pos:column="28"/></name></name><argument_list pos:line="38" pos:column="28">(<argument><expr><name pos:line="38" pos:column="29">item<pos:position pos:line="38" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="35">len<pos:position pos:line="38" pos:column="38"/></name></expr></argument>)<pos:position pos:line="38" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="40"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></while>

    <return pos:line="42" pos:column="5">return <expr><name pos:line="42" pos:column="12">newValue<pos:position pos:line="42" pos:column="20"/></name></expr>;<pos:position pos:line="42" pos:column="21"/></return>
}<pos:position pos:line="43" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1425_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">icpOpenPorts<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">void<pos:position pos:line="2" pos:column="18"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="19"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">uint16_t<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">port<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><operator pos:line="6" pos:column="9">(<pos:position pos:line="6" pos:column="10"/></operator><name pos:line="6" pos:column="10">port<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <name><name pos:line="6" pos:column="17">Config<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">.<pos:position pos:line="6" pos:column="24"/></operator><name pos:line="6" pos:column="24">Port<pos:position pos:line="6" pos:column="28"/></name><operator pos:line="6" pos:column="28">.<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">icp<pos:position pos:line="6" pos:column="32"/></name></name><operator pos:line="6" pos:column="32">)<pos:position pos:line="6" pos:column="33"/></operator> <operator pos:line="6" pos:column="34">&lt;=<pos:position pos:line="6" pos:column="39"/></operator> <literal type="number" pos:line="6" pos:column="37">0<pos:position pos:line="6" pos:column="38"/></literal></expr>)<pos:position pos:line="6" pos:column="39"/></condition><then pos:line="6" pos:column="39">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="9" pos:column="5">icpIncomingConn<pos:position pos:line="9" pos:column="20"/></name> <operator pos:line="9" pos:column="21">=<pos:position pos:line="9" pos:column="22"/></operator> <operator pos:line="9" pos:column="23">new<pos:position pos:line="9" pos:column="26"/></operator> <name><name pos:line="9" pos:column="27">Comm<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">::<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="33">Connection<pos:position pos:line="9" pos:column="43"/></name></name></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">icpIncomingConn<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">-&gt;<pos:position pos:line="10" pos:column="25"/></operator><name pos:line="10" pos:column="22">local<pos:position pos:line="10" pos:column="27"/></name></name> <operator pos:line="10" pos:column="28">=<pos:position pos:line="10" pos:column="29"/></operator> <name><name pos:line="10" pos:column="30">Config<pos:position pos:line="10" pos:column="36"/></name><operator pos:line="10" pos:column="36">.<pos:position pos:line="10" pos:column="37"/></operator><name pos:line="10" pos:column="37">Addrs<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">.<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="43">udp_incoming<pos:position pos:line="10" pos:column="55"/></name></name></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="11" pos:column="5">icpIncomingConn<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">local<pos:position pos:line="11" pos:column="27"/></name><operator pos:line="11" pos:column="27">.<pos:position pos:line="11" pos:column="28"/></operator><name pos:line="11" pos:column="28">port<pos:position pos:line="11" pos:column="32"/></name></name><argument_list pos:line="11" pos:column="32">(<argument><expr><name pos:line="11" pos:column="33">port<pos:position pos:line="11" pos:column="37"/></name></expr></argument>)<pos:position pos:line="11" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>

    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><operator pos:line="13" pos:column="9">!<pos:position pos:line="13" pos:column="10"/></operator><name><name pos:line="13" pos:column="10">Ip<pos:position pos:line="13" pos:column="12"/></name><operator pos:line="13" pos:column="12">::<pos:position pos:line="13" pos:column="14"/></operator><name pos:line="13" pos:column="14">EnableIpv6<pos:position pos:line="13" pos:column="24"/></name></name> <operator pos:line="13" pos:column="25">&amp;&amp;<pos:position pos:line="13" pos:column="35"/></operator> <operator pos:line="13" pos:column="28">!<pos:position pos:line="13" pos:column="29"/></operator><call><name><name pos:line="13" pos:column="29">icpIncomingConn<pos:position pos:line="13" pos:column="44"/></name><operator pos:line="13" pos:column="44">-&gt;<pos:position pos:line="13" pos:column="49"/></operator><name pos:line="13" pos:column="46">local<pos:position pos:line="13" pos:column="51"/></name><operator pos:line="13" pos:column="51">.<pos:position pos:line="13" pos:column="52"/></operator><name pos:line="13" pos:column="52">setIPv4<pos:position pos:line="13" pos:column="59"/></name></name><argument_list pos:line="13" pos:column="59">()<pos:position pos:line="13" pos:column="61"/></argument_list></call></expr>)<pos:position pos:line="13" pos:column="62"/></condition><then pos:line="13" pos:column="62"> <block pos:line="13" pos:column="63">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">12<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="20">DBG_CRITICAL<pos:position pos:line="14" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="34">"ERROR: IPv6 is disabled. "<pos:position pos:line="14" pos:column="61"/></literal> <operator pos:line="14" pos:column="62">&lt;&lt;<pos:position pos:line="14" pos:column="70"/></operator> <name><name pos:line="14" pos:column="65">icpIncomingConn<pos:position pos:line="14" pos:column="80"/></name><operator pos:line="14" pos:column="80">-&gt;<pos:position pos:line="14" pos:column="85"/></operator><name pos:line="14" pos:column="82">local<pos:position pos:line="14" pos:column="87"/></name></name> <operator pos:line="14" pos:column="88">&lt;&lt;<pos:position pos:line="14" pos:column="96"/></operator> <literal type="string" pos:line="14" pos:column="91">" is not an IPv4 address."<pos:position pos:line="14" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="118"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="119"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="15" pos:column="9">fatal<pos:position pos:line="15" pos:column="14"/></name><argument_list pos:line="15" pos:column="14">(<argument><expr><literal type="string" pos:line="15" pos:column="15">"ICP port cannot be opened."<pos:position pos:line="15" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="45"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="17" pos:column="5">/* split-stack for now requires default IPv4-only ICP */</comment>
    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name><name pos:line="18" pos:column="9">Ip<pos:position pos:line="18" pos:column="11"/></name><operator pos:line="18" pos:column="11">::<pos:position pos:line="18" pos:column="13"/></operator><name pos:line="18" pos:column="13">EnableIpv6<pos:position pos:line="18" pos:column="23"/></name></name><operator pos:line="18" pos:column="23">&amp;<pos:position pos:line="18" pos:column="28"/></operator><name pos:line="18" pos:column="24">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="18" pos:column="47"/></name> <operator pos:line="18" pos:column="48">&amp;&amp;<pos:position pos:line="18" pos:column="58"/></operator> <call><name><name pos:line="18" pos:column="51">icpIncomingConn<pos:position pos:line="18" pos:column="66"/></name><operator pos:line="18" pos:column="66">-&gt;<pos:position pos:line="18" pos:column="71"/></operator><name pos:line="18" pos:column="68">local<pos:position pos:line="18" pos:column="73"/></name><operator pos:line="18" pos:column="73">.<pos:position pos:line="18" pos:column="74"/></operator><name pos:line="18" pos:column="74">isAnyAddr<pos:position pos:line="18" pos:column="83"/></name></name><argument_list pos:line="18" pos:column="83">()<pos:position pos:line="18" pos:column="85"/></argument_list></call></expr>)<pos:position pos:line="18" pos:column="86"/></condition><then pos:line="18" pos:column="86"> <block pos:line="18" pos:column="87">{
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">icpIncomingConn<pos:position pos:line="19" pos:column="24"/></name><operator pos:line="19" pos:column="24">-&gt;<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="26">local<pos:position pos:line="19" pos:column="31"/></name><operator pos:line="19" pos:column="31">.<pos:position pos:line="19" pos:column="32"/></operator><name pos:line="19" pos:column="32">setIPv4<pos:position pos:line="19" pos:column="39"/></name></name><argument_list pos:line="19" pos:column="39">()<pos:position pos:line="19" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name><name pos:line="22" pos:column="5">AsyncCall<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">::<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">Pointer<pos:position pos:line="22" pos:column="23"/></name></name></type> <name pos:line="22" pos:column="24">call<pos:position pos:line="22" pos:column="28"/></name> <init pos:line="22" pos:column="29">= <expr><call><name pos:line="22" pos:column="31">asyncCall<pos:position pos:line="22" pos:column="40"/></name><argument_list pos:line="22" pos:column="40">(<argument><expr><literal type="number" pos:line="22" pos:column="41">12<pos:position pos:line="22" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="45">2<pos:position pos:line="22" pos:column="46"/></literal></expr></argument>,
                                        <argument><expr><literal type="string" pos:line="23" pos:column="41">"icpIncomingConnectionOpened"<pos:position pos:line="23" pos:column="70"/></literal></expr></argument>,
                                        <argument><expr><call><name><name pos:line="24" pos:column="41">Comm<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">::<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="47">UdpOpenDialer<pos:position pos:line="24" pos:column="60"/></name></name><argument_list pos:line="24" pos:column="60">(<argument><expr><operator pos:line="24" pos:column="61">&amp;<pos:position pos:line="24" pos:column="66"/></operator><name pos:line="24" pos:column="62">icpIncomingConnectionOpened<pos:position pos:line="24" pos:column="89"/></name></expr></argument>)<pos:position pos:line="24" pos:column="90"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="91"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="92"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="26" pos:column="5">Ipc<pos:position pos:line="26" pos:column="8"/></name><operator pos:line="26" pos:column="8">::<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">StartListening<pos:position pos:line="26" pos:column="24"/></name></name><argument_list pos:line="26" pos:column="24">(<argument><expr><name pos:line="26" pos:column="25">SOCK_DGRAM<pos:position pos:line="26" pos:column="35"/></name></expr></argument>,
                        <argument><expr><name pos:line="27" pos:column="25">IPPROTO_UDP<pos:position pos:line="27" pos:column="36"/></name></expr></argument>,
                        <argument><expr><name pos:line="28" pos:column="25">icpIncomingConn<pos:position pos:line="28" pos:column="40"/></name></expr></argument>,
                        <argument><expr><name><name pos:line="29" pos:column="25">Ipc<pos:position pos:line="29" pos:column="28"/></name><operator pos:line="29" pos:column="28">::<pos:position pos:line="29" pos:column="30"/></operator><name pos:line="29" pos:column="30">fdnInIcpSocket<pos:position pos:line="29" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="46">call<pos:position pos:line="29" pos:column="50"/></name></expr></argument>)<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="52"/></expr_stmt>

    <if pos:line="31" pos:column="5">if <condition pos:line="31" pos:column="8">( <expr><operator pos:line="31" pos:column="10">!<pos:position pos:line="31" pos:column="11"/></operator><call><name><name pos:line="31" pos:column="11">Config<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">.<pos:position pos:line="31" pos:column="18"/></operator><name pos:line="31" pos:column="18">Addrs<pos:position pos:line="31" pos:column="23"/></name><operator pos:line="31" pos:column="23">.<pos:position pos:line="31" pos:column="24"/></operator><name pos:line="31" pos:column="24">udp_outgoing<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">.<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="37">isNoAddr<pos:position pos:line="31" pos:column="45"/></name></name><argument_list pos:line="31" pos:column="45">()<pos:position pos:line="31" pos:column="47"/></argument_list></call></expr> )<pos:position pos:line="31" pos:column="49"/></condition><then pos:line="31" pos:column="49"> <block pos:line="31" pos:column="50">{
        <expr_stmt><expr><name pos:line="32" pos:column="9">icpOutgoingConn<pos:position pos:line="32" pos:column="24"/></name> <operator pos:line="32" pos:column="25">=<pos:position pos:line="32" pos:column="26"/></operator> <operator pos:line="32" pos:column="27">new<pos:position pos:line="32" pos:column="30"/></operator> <name><name pos:line="32" pos:column="31">Comm<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">::<pos:position pos:line="32" pos:column="37"/></operator><name pos:line="32" pos:column="37">Connection<pos:position pos:line="32" pos:column="47"/></name></name></expr>;<pos:position pos:line="32" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">icpOutgoingConn<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">-&gt;<pos:position pos:line="33" pos:column="29"/></operator><name pos:line="33" pos:column="26">local<pos:position pos:line="33" pos:column="31"/></name></name> <operator pos:line="33" pos:column="32">=<pos:position pos:line="33" pos:column="33"/></operator> <name><name pos:line="33" pos:column="34">Config<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">.<pos:position pos:line="33" pos:column="41"/></operator><name pos:line="33" pos:column="41">Addrs<pos:position pos:line="33" pos:column="46"/></name><operator pos:line="33" pos:column="46">.<pos:position pos:line="33" pos:column="47"/></operator><name pos:line="33" pos:column="47">udp_outgoing<pos:position pos:line="33" pos:column="59"/></name></name></expr>;<pos:position pos:line="33" pos:column="60"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="34" pos:column="9">icpOutgoingConn<pos:position pos:line="34" pos:column="24"/></name><operator pos:line="34" pos:column="24">-&gt;<pos:position pos:line="34" pos:column="29"/></operator><name pos:line="34" pos:column="26">local<pos:position pos:line="34" pos:column="31"/></name><operator pos:line="34" pos:column="31">.<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="32">port<pos:position pos:line="34" pos:column="36"/></name></name><argument_list pos:line="34" pos:column="36">(<argument><expr><name pos:line="34" pos:column="37">port<pos:position pos:line="34" pos:column="41"/></name></expr></argument>)<pos:position pos:line="34" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="43"/></expr_stmt>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><operator pos:line="36" pos:column="13">!<pos:position pos:line="36" pos:column="14"/></operator><name><name pos:line="36" pos:column="14">Ip<pos:position pos:line="36" pos:column="16"/></name><operator pos:line="36" pos:column="16">::<pos:position pos:line="36" pos:column="18"/></operator><name pos:line="36" pos:column="18">EnableIpv6<pos:position pos:line="36" pos:column="28"/></name></name> <operator pos:line="36" pos:column="29">&amp;&amp;<pos:position pos:line="36" pos:column="39"/></operator> <operator pos:line="36" pos:column="32">!<pos:position pos:line="36" pos:column="33"/></operator><call><name><name pos:line="36" pos:column="33">icpOutgoingConn<pos:position pos:line="36" pos:column="48"/></name><operator pos:line="36" pos:column="48">-&gt;<pos:position pos:line="36" pos:column="53"/></operator><name pos:line="36" pos:column="50">local<pos:position pos:line="36" pos:column="55"/></name><operator pos:line="36" pos:column="55">.<pos:position pos:line="36" pos:column="56"/></operator><name pos:line="36" pos:column="56">setIPv4<pos:position pos:line="36" pos:column="63"/></name></name><argument_list pos:line="36" pos:column="63">()<pos:position pos:line="36" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="36" pos:column="66"/></condition><then pos:line="36" pos:column="66"> <block pos:line="36" pos:column="67">{
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">debugs<pos:position pos:line="37" pos:column="19"/></name><argument_list pos:line="37" pos:column="19">(<argument><expr><literal type="number" pos:line="37" pos:column="20">49<pos:position pos:line="37" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="24">DBG_CRITICAL<pos:position pos:line="37" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="38">"ERROR: IPv6 is disabled. "<pos:position pos:line="37" pos:column="65"/></literal> <operator pos:line="37" pos:column="66">&lt;&lt;<pos:position pos:line="37" pos:column="74"/></operator> <name><name pos:line="37" pos:column="69">icpOutgoingConn<pos:position pos:line="37" pos:column="84"/></name><operator pos:line="37" pos:column="84">-&gt;<pos:position pos:line="37" pos:column="89"/></operator><name pos:line="37" pos:column="86">local<pos:position pos:line="37" pos:column="91"/></name></name> <operator pos:line="37" pos:column="92">&lt;&lt;<pos:position pos:line="37" pos:column="100"/></operator> <literal type="string" pos:line="37" pos:column="95">" is not an IPv4 address."<pos:position pos:line="37" pos:column="121"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="122"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="123"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="38" pos:column="13">fatal<pos:position pos:line="38" pos:column="18"/></name><argument_list pos:line="38" pos:column="18">(<argument><expr><literal type="string" pos:line="38" pos:column="19">"ICP port cannot be opened."<pos:position pos:line="38" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="49"/></expr_stmt>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
        <comment type="block" pos:line="40" pos:column="9">/* split-stack for now requires default IPv4-only ICP */</comment>
        <if pos:line="41" pos:column="9">if <condition pos:line="41" pos:column="12">(<expr><name><name pos:line="41" pos:column="13">Ip<pos:position pos:line="41" pos:column="15"/></name><operator pos:line="41" pos:column="15">::<pos:position pos:line="41" pos:column="17"/></operator><name pos:line="41" pos:column="17">EnableIpv6<pos:position pos:line="41" pos:column="27"/></name></name><operator pos:line="41" pos:column="27">&amp;<pos:position pos:line="41" pos:column="32"/></operator><name pos:line="41" pos:column="28">IPV6_SPECIAL_SPLITSTACK<pos:position pos:line="41" pos:column="51"/></name> <operator pos:line="41" pos:column="52">&amp;&amp;<pos:position pos:line="41" pos:column="62"/></operator> <call><name><name pos:line="41" pos:column="55">icpOutgoingConn<pos:position pos:line="41" pos:column="70"/></name><operator pos:line="41" pos:column="70">-&gt;<pos:position pos:line="41" pos:column="75"/></operator><name pos:line="41" pos:column="72">local<pos:position pos:line="41" pos:column="77"/></name><operator pos:line="41" pos:column="77">.<pos:position pos:line="41" pos:column="78"/></operator><name pos:line="41" pos:column="78">isAnyAddr<pos:position pos:line="41" pos:column="87"/></name></name><argument_list pos:line="41" pos:column="87">()<pos:position pos:line="41" pos:column="89"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="90"/></condition><then pos:line="41" pos:column="90"> <block pos:line="41" pos:column="91">{
            <expr_stmt><expr><call><name><name pos:line="42" pos:column="13">icpOutgoingConn<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">-&gt;<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="30">local<pos:position pos:line="42" pos:column="35"/></name><operator pos:line="42" pos:column="35">.<pos:position pos:line="42" pos:column="36"/></operator><name pos:line="42" pos:column="36">setIPv4<pos:position pos:line="42" pos:column="43"/></name></name><argument_list pos:line="42" pos:column="43">()<pos:position pos:line="42" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="46"/></expr_stmt>
        }<pos:position pos:line="43" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="45" pos:column="9">enter_suid<pos:position pos:line="45" pos:column="19"/></name><argument_list pos:line="45" pos:column="19">()<pos:position pos:line="45" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="22"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="46" pos:column="9">comm_open_listener<pos:position pos:line="46" pos:column="27"/></name><argument_list pos:line="46" pos:column="27">(<argument><expr><name pos:line="46" pos:column="28">SOCK_DGRAM<pos:position pos:line="46" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="40">IPPROTO_UDP<pos:position pos:line="46" pos:column="51"/></name></expr></argument>, <argument><expr><name pos:line="46" pos:column="53">icpOutgoingConn<pos:position pos:line="46" pos:column="68"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="70">"Outgoing ICP Port"<pos:position pos:line="46" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="46" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="91"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">leave_suid<pos:position pos:line="47" pos:column="19"/></name><argument_list pos:line="47" pos:column="19">()<pos:position pos:line="47" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="22"/></expr_stmt>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">!<pos:position pos:line="49" pos:column="14"/></operator><call><name><name pos:line="49" pos:column="14">Comm<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">::<pos:position pos:line="49" pos:column="20"/></operator><name pos:line="49" pos:column="20">IsConnOpen<pos:position pos:line="49" pos:column="30"/></name></name><argument_list pos:line="49" pos:column="30">(<argument><expr><name pos:line="49" pos:column="31">icpOutgoingConn<pos:position pos:line="49" pos:column="46"/></name></expr></argument>)<pos:position pos:line="49" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="49" pos:column="48"/></condition><then pos:line="49" pos:column="48">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="50" pos:column="13">fatal<pos:position pos:line="50" pos:column="18"/></name><argument_list pos:line="50" pos:column="18">(<argument><expr><literal type="string" pos:line="50" pos:column="19">"Cannot open Outgoing ICP Port"<pos:position pos:line="50" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="50" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="52"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="52" pos:column="9">debugs<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="number" pos:line="52" pos:column="16">12<pos:position pos:line="52" pos:column="18"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="20">DBG_CRITICAL<pos:position pos:line="52" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="34">"Sending ICP messages from "<pos:position pos:line="52" pos:column="62"/></literal> <operator pos:line="52" pos:column="63">&lt;&lt;<pos:position pos:line="52" pos:column="71"/></operator> <name><name pos:line="52" pos:column="66">icpOutgoingConn<pos:position pos:line="52" pos:column="81"/></name><operator pos:line="52" pos:column="81">-&gt;<pos:position pos:line="52" pos:column="86"/></operator><name pos:line="52" pos:column="83">local<pos:position pos:line="52" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="52" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="90"/></expr_stmt>

        <expr_stmt><expr><call><name><name pos:line="54" pos:column="9">Comm<pos:position pos:line="54" pos:column="13"/></name><operator pos:line="54" pos:column="13">::<pos:position pos:line="54" pos:column="15"/></operator><name pos:line="54" pos:column="15">SetSelect<pos:position pos:line="54" pos:column="24"/></name></name><argument_list pos:line="54" pos:column="24">(<argument><expr><name><name pos:line="54" pos:column="25">icpOutgoingConn<pos:position pos:line="54" pos:column="40"/></name><operator pos:line="54" pos:column="40">-&gt;<pos:position pos:line="54" pos:column="45"/></operator><name pos:line="54" pos:column="42">fd<pos:position pos:line="54" pos:column="44"/></name></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="46">COMM_SELECT_READ<pos:position pos:line="54" pos:column="62"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="64">icpHandleUdp<pos:position pos:line="54" pos:column="76"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="78">NULL<pos:position pos:line="54" pos:column="82"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="54" pos:column="84">0<pos:position pos:line="54" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="54" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="54" pos:column="87"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="55" pos:column="9">fd_note<pos:position pos:line="55" pos:column="16"/></name><argument_list pos:line="55" pos:column="16">(<argument><expr><name><name pos:line="55" pos:column="17">icpOutgoingConn<pos:position pos:line="55" pos:column="32"/></name><operator pos:line="55" pos:column="32">-&gt;<pos:position pos:line="55" pos:column="37"/></operator><name pos:line="55" pos:column="34">fd<pos:position pos:line="55" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="38">"Outgoing ICP socket"<pos:position pos:line="55" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="61"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></then></if>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4733_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">RebuildState<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">rebuildFromDirectory<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">()<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">LOCAL_ARRAY<pos:position pos:line="4" pos:column="16"/></name><argument_list pos:line="4" pos:column="16">(<argument><expr><name pos:line="4" pos:column="17">char<pos:position pos:line="4" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="23">hdr_buf<pos:position pos:line="4" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="32">SM_PAGE_SIZE<pos:position pos:line="4" pos:column="44"/></name></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="46"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">currentEntry<pos:position pos:line="5" pos:column="17"/></name><argument_list pos:line="5" pos:column="17">(<argument><expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></argument>)<pos:position pos:line="5" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="24"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">cache_key<pos:position pos:line="6" pos:column="14"/></name></type> <name><name pos:line="6" pos:column="15">key<pos:position pos:line="6" pos:column="18"/></name><index pos:line="6" pos:column="18">[<expr><name pos:line="6" pos:column="19">SQUID_MD5_DIGEST_LENGTH<pos:position pos:line="6" pos:column="42"/></name></expr>]<pos:position pos:line="6" pos:column="43"/></index></name></decl>;<pos:position pos:line="6" pos:column="44"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="8" pos:column="5">struct<pos:position pos:line="8" pos:column="11"/></name> <name pos:line="8" pos:column="12">stat<pos:position pos:line="8" pos:column="16"/></name></name></type> <name pos:line="8" pos:column="17">sb<pos:position pos:line="8" pos:column="19"/></name></decl>;<pos:position pos:line="8" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">swap_hdr_len<pos:position pos:line="9" pos:column="21"/></name></decl>;<pos:position pos:line="9" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">fd<pos:position pos:line="10" pos:column="11"/></name> <init pos:line="10" pos:column="12">= <expr><operator pos:line="10" pos:column="14">-<pos:position pos:line="10" pos:column="15"/></operator><literal type="number" pos:line="10" pos:column="15">1<pos:position pos:line="10" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">StoreMeta<pos:position pos:line="11" pos:column="14"/></name> <modifier pos:line="11" pos:column="15">*<pos:position pos:line="11" pos:column="16"/></modifier></type><name pos:line="11" pos:column="16">tlv_list<pos:position pos:line="11" pos:column="24"/></name></decl>;<pos:position pos:line="11" pos:column="25"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">this<pos:position pos:line="12" pos:column="16"/></name> <operator pos:line="12" pos:column="17">!=<pos:position pos:line="12" pos:column="19"/></operator> <name pos:line="12" pos:column="20">NULL<pos:position pos:line="12" pos:column="24"/></name></expr></argument>)<pos:position pos:line="12" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="13" pos:column="5">debugs<pos:position pos:line="13" pos:column="11"/></name><argument_list pos:line="13" pos:column="11">(<argument><expr><literal type="number" pos:line="13" pos:column="12">47<pos:position pos:line="13" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="16">3<pos:position pos:line="13" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="19">"commonUfsDirRebuildFromDirectory: DIR #"<pos:position pos:line="13" pos:column="60"/></literal> <operator pos:line="13" pos:column="61">&lt;&lt;<pos:position pos:line="13" pos:column="69"/></operator> <name><name pos:line="13" pos:column="64">sd<pos:position pos:line="13" pos:column="66"/></name><operator pos:line="13" pos:column="66">-&gt;<pos:position pos:line="13" pos:column="71"/></operator><name pos:line="13" pos:column="68">index<pos:position pos:line="13" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="75"/></expr_stmt>

    <for pos:line="15" pos:column="5">for <control pos:line="15" pos:column="9">(<init><decl><type><name pos:line="15" pos:column="10">int<pos:position pos:line="15" pos:column="13"/></name></type> <name pos:line="15" pos:column="14">count<pos:position pos:line="15" pos:column="19"/></name> <init pos:line="15" pos:column="20">= <expr><literal type="number" pos:line="15" pos:column="22">0<pos:position pos:line="15" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="24"/></init> <condition><expr><name pos:line="15" pos:column="25">count<pos:position pos:line="15" pos:column="30"/></name> <operator pos:line="15" pos:column="31">&lt;<pos:position pos:line="15" pos:column="35"/></operator> <name pos:line="15" pos:column="33">speed<pos:position pos:line="15" pos:column="38"/></name></expr>;<pos:position pos:line="15" pos:column="39"/></condition> <incr><expr><name pos:line="15" pos:column="40">count<pos:position pos:line="15" pos:column="45"/></name><operator pos:line="15" pos:column="45">++<pos:position pos:line="15" pos:column="47"/></operator></expr></incr>)<pos:position pos:line="15" pos:column="48"/></control> <block pos:line="15" pos:column="49">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">assert<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">fd<pos:position pos:line="16" pos:column="18"/></name> <operator pos:line="16" pos:column="19">==<pos:position pos:line="16" pos:column="21"/></operator> <operator pos:line="16" pos:column="22">-<pos:position pos:line="16" pos:column="23"/></operator><literal type="number" pos:line="16" pos:column="23">1<pos:position pos:line="16" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="26"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="17" pos:column="9">sfileno<pos:position pos:line="17" pos:column="16"/></name></type> <name pos:line="17" pos:column="17">filn<pos:position pos:line="17" pos:column="21"/></name> <init pos:line="17" pos:column="22">= <expr><literal type="number" pos:line="17" pos:column="24">0<pos:position pos:line="17" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="26"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">int<pos:position pos:line="18" pos:column="12"/></name></type> <name pos:line="18" pos:column="13">size<pos:position pos:line="18" pos:column="17"/></name></decl>;<pos:position pos:line="18" pos:column="18"/></decl_stmt>
        <expr_stmt><expr><name pos:line="19" pos:column="9">fd<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <call><name pos:line="19" pos:column="14">getNextFile<pos:position pos:line="19" pos:column="25"/></name><argument_list pos:line="19" pos:column="25">(<argument><expr><operator pos:line="19" pos:column="26">&amp;<pos:position pos:line="19" pos:column="31"/></operator><name pos:line="19" pos:column="27">filn<pos:position pos:line="19" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="33">&amp;<pos:position pos:line="19" pos:column="38"/></operator><name pos:line="19" pos:column="34">size<pos:position pos:line="19" pos:column="38"/></name></expr></argument>)<pos:position pos:line="19" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="40"/></expr_stmt>

        <if pos:line="21" pos:column="9">if <condition pos:line="21" pos:column="12">(<expr><name pos:line="21" pos:column="13">fd<pos:position pos:line="21" pos:column="15"/></name> <operator pos:line="21" pos:column="16">==<pos:position pos:line="21" pos:column="18"/></operator> <operator pos:line="21" pos:column="19">-<pos:position pos:line="21" pos:column="20"/></operator><literal type="number" pos:line="21" pos:column="20">2<pos:position pos:line="21" pos:column="21"/></literal></expr>)<pos:position pos:line="21" pos:column="22"/></condition><then pos:line="21" pos:column="22"> <block pos:line="21" pos:column="23">{
            <expr_stmt><expr><call><name pos:line="22" pos:column="13">debugs<pos:position pos:line="22" pos:column="19"/></name><argument_list pos:line="22" pos:column="19">(<argument><expr><literal type="number" pos:line="22" pos:column="20">47<pos:position pos:line="22" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="24">1<pos:position pos:line="22" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="27">"Done scanning "<pos:position pos:line="22" pos:column="43"/></literal> <operator pos:line="22" pos:column="44">&lt;&lt;<pos:position pos:line="22" pos:column="52"/></operator> <name><name pos:line="22" pos:column="47">sd<pos:position pos:line="22" pos:column="49"/></name><operator pos:line="22" pos:column="49">-&gt;<pos:position pos:line="22" pos:column="54"/></operator><name pos:line="22" pos:column="51">path<pos:position pos:line="22" pos:column="55"/></name></name> <operator pos:line="22" pos:column="56">&lt;&lt;<pos:position pos:line="22" pos:column="64"/></operator> <literal type="string" pos:line="22" pos:column="59">" swaplog ("<pos:position pos:line="22" pos:column="71"/></literal> <operator pos:line="22" pos:column="72">&lt;&lt;<pos:position pos:line="22" pos:column="80"/></operator> <name pos:line="22" pos:column="75">n_read<pos:position pos:line="22" pos:column="81"/></name> <operator pos:line="22" pos:column="82">&lt;&lt;<pos:position pos:line="22" pos:column="90"/></operator> <literal type="string" pos:line="22" pos:column="85">" entries)"<pos:position pos:line="22" pos:column="96"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="98"/></expr_stmt>
            <expr_stmt><expr><name pos:line="23" pos:column="13">_done<pos:position pos:line="23" pos:column="18"/></name> <operator pos:line="23" pos:column="19">=<pos:position pos:line="23" pos:column="20"/></operator> <literal type="boolean" pos:line="23" pos:column="21">true<pos:position pos:line="23" pos:column="25"/></literal></expr>;<pos:position pos:line="23" pos:column="26"/></expr_stmt>
            <return pos:line="24" pos:column="13">return;<pos:position pos:line="24" pos:column="20"/></return>
        }<pos:position pos:line="25" pos:column="10"/></block></then> <elseif pos:line="25" pos:column="11">else <if pos:line="25" pos:column="16">if <condition pos:line="25" pos:column="19">(<expr><name pos:line="25" pos:column="20">fd<pos:position pos:line="25" pos:column="22"/></name> <operator pos:line="25" pos:column="23">&lt;<pos:position pos:line="25" pos:column="27"/></operator> <literal type="number" pos:line="25" pos:column="25">0<pos:position pos:line="25" pos:column="26"/></literal></expr>)<pos:position pos:line="25" pos:column="27"/></condition><then pos:line="25" pos:column="27"> <block pos:line="25" pos:column="28">{
            <continue pos:line="26" pos:column="13">continue;<pos:position pos:line="26" pos:column="22"/></continue>
        }<pos:position pos:line="27" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><call><name pos:line="29" pos:column="9">assert<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><name pos:line="29" pos:column="16">fd<pos:position pos:line="29" pos:column="18"/></name> <operator pos:line="29" pos:column="19">&gt;<pos:position pos:line="29" pos:column="23"/></operator> <operator pos:line="29" pos:column="21">-<pos:position pos:line="29" pos:column="22"/></operator><literal type="number" pos:line="29" pos:column="22">1<pos:position pos:line="29" pos:column="23"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>
        <comment type="block" pos:line="30" pos:column="9">/* lets get file stats here */</comment>

        <if pos:line="32" pos:column="9">if <condition pos:line="32" pos:column="12">(<expr><call><name pos:line="32" pos:column="13">fstat<pos:position pos:line="32" pos:column="18"/></name><argument_list pos:line="32" pos:column="18">(<argument><expr><name pos:line="32" pos:column="19">fd<pos:position pos:line="32" pos:column="21"/></name></expr></argument>, <argument><expr><operator pos:line="32" pos:column="23">&amp;<pos:position pos:line="32" pos:column="28"/></operator><name pos:line="32" pos:column="24">sb<pos:position pos:line="32" pos:column="26"/></name></expr></argument>)<pos:position pos:line="32" pos:column="27"/></argument_list></call> <operator pos:line="32" pos:column="28">&lt;<pos:position pos:line="32" pos:column="32"/></operator> <literal type="number" pos:line="32" pos:column="30">0<pos:position pos:line="32" pos:column="31"/></literal></expr>)<pos:position pos:line="32" pos:column="32"/></condition><then pos:line="32" pos:column="32"> <block pos:line="32" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="33" pos:column="13">debugs<pos:position pos:line="33" pos:column="19"/></name><argument_list pos:line="33" pos:column="19">(<argument><expr><literal type="number" pos:line="33" pos:column="20">47<pos:position pos:line="33" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="24">1<pos:position pos:line="33" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="27">"commonUfsDirRebuildFromDirectory: fstat(FD "<pos:position pos:line="33" pos:column="72"/></literal> <operator pos:line="33" pos:column="73">&lt;&lt;<pos:position pos:line="33" pos:column="81"/></operator> <name pos:line="33" pos:column="76">fd<pos:position pos:line="33" pos:column="78"/></name> <operator pos:line="33" pos:column="79">&lt;&lt;<pos:position pos:line="33" pos:column="87"/></operator> <literal type="string" pos:line="33" pos:column="82">"): "<pos:position pos:line="33" pos:column="87"/></literal> <operator pos:line="33" pos:column="88">&lt;&lt;<pos:position pos:line="33" pos:column="96"/></operator> <call><name pos:line="33" pos:column="91">xstrerror<pos:position pos:line="33" pos:column="100"/></name><argument_list pos:line="33" pos:column="100">()<pos:position pos:line="33" pos:column="102"/></argument_list></call></expr></argument>)<pos:position pos:line="33" pos:column="103"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="104"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="34" pos:column="13">file_close<pos:position pos:line="34" pos:column="23"/></name><argument_list pos:line="34" pos:column="23">(<argument><expr><name pos:line="34" pos:column="24">fd<pos:position pos:line="34" pos:column="26"/></name></expr></argument>)<pos:position pos:line="34" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="35" pos:column="13">store_open_disk_fd<pos:position pos:line="35" pos:column="31"/></name><operator pos:line="35" pos:column="31">--<pos:position pos:line="35" pos:column="33"/></operator></expr>;<pos:position pos:line="35" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="36" pos:column="13">fd<pos:position pos:line="36" pos:column="15"/></name> <operator pos:line="36" pos:column="16">=<pos:position pos:line="36" pos:column="17"/></operator> <operator pos:line="36" pos:column="18">-<pos:position pos:line="36" pos:column="19"/></operator><literal type="number" pos:line="36" pos:column="19">1<pos:position pos:line="36" pos:column="20"/></literal></expr>;<pos:position pos:line="36" pos:column="21"/></expr_stmt>
            <continue pos:line="37" pos:column="13">continue;<pos:position pos:line="37" pos:column="22"/></continue>
        }<pos:position pos:line="38" pos:column="10"/></block></then></if>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">(<pos:position pos:line="40" pos:column="14"/></operator><operator pos:line="40" pos:column="14">++<pos:position pos:line="40" pos:column="16"/></operator><name><name pos:line="40" pos:column="16">counts<pos:position pos:line="40" pos:column="22"/></name><operator pos:line="40" pos:column="22">.<pos:position pos:line="40" pos:column="23"/></operator><name pos:line="40" pos:column="23">scancount<pos:position pos:line="40" pos:column="32"/></name></name> <operator pos:line="40" pos:column="33">&amp;<pos:position pos:line="40" pos:column="38"/></operator> <literal type="number" pos:line="40" pos:column="35">0xFFFF<pos:position pos:line="40" pos:column="41"/></literal><operator pos:line="40" pos:column="41">)<pos:position pos:line="40" pos:column="42"/></operator> <operator pos:line="40" pos:column="43">==<pos:position pos:line="40" pos:column="45"/></operator> <literal type="number" pos:line="40" pos:column="46">0<pos:position pos:line="40" pos:column="47"/></literal></expr>)<pos:position pos:line="40" pos:column="48"/></condition><then pos:line="40" pos:column="48">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="41" pos:column="13">debugs<pos:position pos:line="41" pos:column="19"/></name><argument_list pos:line="41" pos:column="19">(<argument><expr><literal type="number" pos:line="41" pos:column="20">47<pos:position pos:line="41" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="41" pos:column="24">3<pos:position pos:line="41" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="41" pos:column="27">"  "<pos:position pos:line="41" pos:column="31"/></literal> <operator pos:line="41" pos:column="32">&lt;&lt;<pos:position pos:line="41" pos:column="40"/></operator> <name><name pos:line="41" pos:column="35">sd<pos:position pos:line="41" pos:column="37"/></name><operator pos:line="41" pos:column="37">-&gt;<pos:position pos:line="41" pos:column="42"/></operator><name pos:line="41" pos:column="39">path<pos:position pos:line="41" pos:column="43"/></name></name>  <operator pos:line="41" pos:column="45">&lt;&lt;<pos:position pos:line="41" pos:column="53"/></operator> <literal type="string" pos:line="41" pos:column="48">" "<pos:position pos:line="41" pos:column="51"/></literal> <operator pos:line="41" pos:column="52">&lt;&lt;<pos:position pos:line="41" pos:column="60"/></operator> <call><name><name pos:line="41" pos:column="55">std<pos:position pos:line="41" pos:column="58"/></name><operator pos:line="41" pos:column="58">::<pos:position pos:line="41" pos:column="60"/></operator><name pos:line="41" pos:column="60">setw<pos:position pos:line="41" pos:column="64"/></name></name><argument_list pos:line="41" pos:column="64">(<argument><expr><literal type="number" pos:line="41" pos:column="65">7<pos:position pos:line="41" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="67"/></argument_list></call> <operator pos:line="41" pos:column="68">&lt;&lt;<pos:position pos:line="41" pos:column="76"/></operator> <name><name pos:line="41" pos:column="71">counts<pos:position pos:line="41" pos:column="77"/></name><operator pos:line="41" pos:column="77">.<pos:position pos:line="41" pos:column="78"/></operator><name pos:line="41" pos:column="78">scancount<pos:position pos:line="41" pos:column="87"/></name></name>  <operator pos:line="41" pos:column="89">&lt;&lt;<pos:position pos:line="41" pos:column="97"/></operator> <literal type="string" pos:line="41" pos:column="92">" files opened so far."<pos:position pos:line="41" pos:column="115"/></literal></expr></argument>)<pos:position pos:line="41" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="117"/></expr_stmt></block></then></if>
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">debugs<pos:position pos:line="42" pos:column="15"/></name><argument_list pos:line="42" pos:column="15">(<argument><expr><literal type="number" pos:line="42" pos:column="16">47<pos:position pos:line="42" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="42" pos:column="20">9<pos:position pos:line="42" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="23">"file_in: fd="<pos:position pos:line="42" pos:column="37"/></literal> <operator pos:line="42" pos:column="38">&lt;&lt;<pos:position pos:line="42" pos:column="46"/></operator> <name pos:line="42" pos:column="41">fd<pos:position pos:line="42" pos:column="43"/></name>  <operator pos:line="42" pos:column="45">&lt;&lt;<pos:position pos:line="42" pos:column="53"/></operator> <literal type="string" pos:line="42" pos:column="48">" "<pos:position pos:line="42" pos:column="51"/></literal><operator pos:line="42" pos:column="51">&lt;&lt;<pos:position pos:line="42" pos:column="59"/></operator> <call><name><name pos:line="42" pos:column="54">std<pos:position pos:line="42" pos:column="57"/></name><operator pos:line="42" pos:column="57">::<pos:position pos:line="42" pos:column="59"/></operator><name pos:line="42" pos:column="59">setfill<pos:position pos:line="42" pos:column="66"/></name></name><argument_list pos:line="42" pos:column="66">(<argument><expr><literal type="char" pos:line="42" pos:column="67">'0'<pos:position pos:line="42" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="71"/></argument_list></call> <operator pos:line="42" pos:column="72">&lt;&lt;<pos:position pos:line="42" pos:column="80"/></operator> <name><name pos:line="42" pos:column="75">std<pos:position pos:line="42" pos:column="78"/></name><operator pos:line="42" pos:column="78">::<pos:position pos:line="42" pos:column="80"/></operator><name pos:line="42" pos:column="80">hex<pos:position pos:line="42" pos:column="83"/></name></name> <operator pos:line="42" pos:column="84">&lt;&lt;<pos:position pos:line="42" pos:column="92"/></operator> <name><name pos:line="42" pos:column="87">std<pos:position pos:line="42" pos:column="90"/></name><operator pos:line="42" pos:column="90">::<pos:position pos:line="42" pos:column="92"/></operator><name pos:line="42" pos:column="92">uppercase<pos:position pos:line="42" pos:column="101"/></name></name> <operator pos:line="42" pos:column="102">&lt;&lt;<pos:position pos:line="42" pos:column="110"/></operator> <call><name><name pos:line="42" pos:column="105">std<pos:position pos:line="42" pos:column="108"/></name><operator pos:line="42" pos:column="108">::<pos:position pos:line="42" pos:column="110"/></operator><name pos:line="42" pos:column="110">setw<pos:position pos:line="42" pos:column="114"/></name></name><argument_list pos:line="42" pos:column="114">(<argument><expr><literal type="number" pos:line="42" pos:column="115">8<pos:position pos:line="42" pos:column="116"/></literal></expr></argument>)<pos:position pos:line="42" pos:column="117"/></argument_list></call> <operator pos:line="42" pos:column="118">&lt;&lt;<pos:position pos:line="42" pos:column="126"/></operator> <name pos:line="42" pos:column="121">filn<pos:position pos:line="42" pos:column="125"/></name></expr></argument>)<pos:position pos:line="42" pos:column="126"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="127"/></expr_stmt>


        <expr_stmt><expr><name><name pos:line="45" pos:column="9">statCounter<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">.<pos:position pos:line="45" pos:column="21"/></operator><name pos:line="45" pos:column="21">syscalls<pos:position pos:line="45" pos:column="29"/></name><operator pos:line="45" pos:column="29">.<pos:position pos:line="45" pos:column="30"/></operator><name pos:line="45" pos:column="30">disk<pos:position pos:line="45" pos:column="34"/></name><operator pos:line="45" pos:column="34">.<pos:position pos:line="45" pos:column="35"/></operator><name pos:line="45" pos:column="35">reads<pos:position pos:line="45" pos:column="40"/></name></name><operator pos:line="45" pos:column="40">++<pos:position pos:line="45" pos:column="42"/></operator></expr>;<pos:position pos:line="45" pos:column="43"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="47" pos:column="9">int<pos:position pos:line="47" pos:column="12"/></name></type> <name pos:line="47" pos:column="13">len<pos:position pos:line="47" pos:column="16"/></name></decl>;<pos:position pos:line="47" pos:column="17"/></decl_stmt>

        <if pos:line="49" pos:column="9">if <condition pos:line="49" pos:column="12">(<expr><operator pos:line="49" pos:column="13">(<pos:position pos:line="49" pos:column="14"/></operator><name pos:line="49" pos:column="14">len<pos:position pos:line="49" pos:column="17"/></name> <operator pos:line="49" pos:column="18">=<pos:position pos:line="49" pos:column="19"/></operator> <call><name pos:line="49" pos:column="20">FD_READ_METHOD<pos:position pos:line="49" pos:column="34"/></name><argument_list pos:line="49" pos:column="34">(<argument><expr><name pos:line="49" pos:column="35">fd<pos:position pos:line="49" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="39">hdr_buf<pos:position pos:line="49" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="48">SM_PAGE_SIZE<pos:position pos:line="49" pos:column="60"/></name></expr></argument>)<pos:position pos:line="49" pos:column="61"/></argument_list></call><operator pos:line="49" pos:column="61">)<pos:position pos:line="49" pos:column="62"/></operator> <operator pos:line="49" pos:column="63">&lt;<pos:position pos:line="49" pos:column="67"/></operator> <literal type="number" pos:line="49" pos:column="65">0<pos:position pos:line="49" pos:column="66"/></literal></expr>)<pos:position pos:line="49" pos:column="67"/></condition><then pos:line="49" pos:column="67"> <block pos:line="49" pos:column="68">{
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">debugs<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><literal type="number" pos:line="50" pos:column="20">47<pos:position pos:line="50" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="50" pos:column="24">1<pos:position pos:line="50" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="50" pos:column="27">"commonUfsDirRebuildFromDirectory: read(FD "<pos:position pos:line="50" pos:column="71"/></literal> <operator pos:line="50" pos:column="72">&lt;&lt;<pos:position pos:line="50" pos:column="80"/></operator> <name pos:line="50" pos:column="75">fd<pos:position pos:line="50" pos:column="77"/></name> <operator pos:line="50" pos:column="78">&lt;&lt;<pos:position pos:line="50" pos:column="86"/></operator> <literal type="string" pos:line="50" pos:column="81">"): "<pos:position pos:line="50" pos:column="86"/></literal> <operator pos:line="50" pos:column="87">&lt;&lt;<pos:position pos:line="50" pos:column="95"/></operator> <call><name pos:line="50" pos:column="90">xstrerror<pos:position pos:line="50" pos:column="99"/></name><argument_list pos:line="50" pos:column="99">()<pos:position pos:line="50" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="50" pos:column="102"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="103"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">file_close<pos:position pos:line="51" pos:column="23"/></name><argument_list pos:line="51" pos:column="23">(<argument><expr><name pos:line="51" pos:column="24">fd<pos:position pos:line="51" pos:column="26"/></name></expr></argument>)<pos:position pos:line="51" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><name pos:line="52" pos:column="13">store_open_disk_fd<pos:position pos:line="52" pos:column="31"/></name><operator pos:line="52" pos:column="31">--<pos:position pos:line="52" pos:column="33"/></operator></expr>;<pos:position pos:line="52" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name pos:line="53" pos:column="13">fd<pos:position pos:line="53" pos:column="15"/></name> <operator pos:line="53" pos:column="16">=<pos:position pos:line="53" pos:column="17"/></operator> <operator pos:line="53" pos:column="18">-<pos:position pos:line="53" pos:column="19"/></operator><literal type="number" pos:line="53" pos:column="19">1<pos:position pos:line="53" pos:column="20"/></literal></expr>;<pos:position pos:line="53" pos:column="21"/></expr_stmt>
            <continue pos:line="54" pos:column="13">continue;<pos:position pos:line="54" pos:column="22"/></continue>
        }<pos:position pos:line="55" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="57" pos:column="9">file_close<pos:position pos:line="57" pos:column="19"/></name><argument_list pos:line="57" pos:column="19">(<argument><expr><name pos:line="57" pos:column="20">fd<pos:position pos:line="57" pos:column="22"/></name></expr></argument>)<pos:position pos:line="57" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="58" pos:column="9">store_open_disk_fd<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">--<pos:position pos:line="58" pos:column="29"/></operator></expr>;<pos:position pos:line="58" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="59" pos:column="9">fd<pos:position pos:line="59" pos:column="11"/></name> <operator pos:line="59" pos:column="12">=<pos:position pos:line="59" pos:column="13"/></operator> <operator pos:line="59" pos:column="14">-<pos:position pos:line="59" pos:column="15"/></operator><literal type="number" pos:line="59" pos:column="15">1<pos:position pos:line="59" pos:column="16"/></literal></expr>;<pos:position pos:line="59" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name pos:line="60" pos:column="9">swap_hdr_len<pos:position pos:line="60" pos:column="21"/></name> <operator pos:line="60" pos:column="22">=<pos:position pos:line="60" pos:column="23"/></operator> <literal type="number" pos:line="60" pos:column="24">0<pos:position pos:line="60" pos:column="25"/></literal></expr>;<pos:position pos:line="60" pos:column="26"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="62" pos:column="9">StoreMetaUnpacker<pos:position pos:line="62" pos:column="26"/></name></type> <name pos:line="62" pos:column="27">aBuilder<pos:position pos:line="62" pos:column="35"/></name><argument_list pos:line="62" pos:column="35">(<argument><expr><name pos:line="62" pos:column="36">hdr_buf<pos:position pos:line="62" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="45">len<pos:position pos:line="62" pos:column="48"/></name></expr></argument>, <argument><expr><operator pos:line="62" pos:column="50">&amp;<pos:position pos:line="62" pos:column="55"/></operator><name pos:line="62" pos:column="51">swap_hdr_len<pos:position pos:line="62" pos:column="63"/></name></expr></argument>)<pos:position pos:line="62" pos:column="64"/></argument_list></decl>;<pos:position pos:line="62" pos:column="65"/></decl_stmt>

        <if pos:line="64" pos:column="9">if <condition pos:line="64" pos:column="12">(<expr><operator pos:line="64" pos:column="13">!<pos:position pos:line="64" pos:column="14"/></operator><call><name><name pos:line="64" pos:column="14">aBuilder<pos:position pos:line="64" pos:column="22"/></name><operator pos:line="64" pos:column="22">.<pos:position pos:line="64" pos:column="23"/></operator><name pos:line="64" pos:column="23">isBufferSane<pos:position pos:line="64" pos:column="35"/></name></name><argument_list pos:line="64" pos:column="35">()<pos:position pos:line="64" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="38"/></condition><then pos:line="64" pos:column="38"> <block pos:line="64" pos:column="39">{
            <expr_stmt><expr><call><name pos:line="65" pos:column="13">debugs<pos:position pos:line="65" pos:column="19"/></name><argument_list pos:line="65" pos:column="19">(<argument><expr><literal type="number" pos:line="65" pos:column="20">47<pos:position pos:line="65" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="65" pos:column="24">1<pos:position pos:line="65" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="65" pos:column="27">"commonUfsDirRebuildFromDirectory: Swap data buffer length is not sane."<pos:position pos:line="65" pos:column="99"/></literal></expr></argument>)<pos:position pos:line="65" pos:column="100"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="101"/></expr_stmt>
            <comment type="block" pos:line="66" pos:column="13">/* XXX shouldn't this be a call to commonUfsUnlink ? */</comment>
            <expr_stmt><expr><call><name><name pos:line="67" pos:column="13">sd<pos:position pos:line="67" pos:column="15"/></name><operator pos:line="67" pos:column="15">-&gt;<pos:position pos:line="67" pos:column="20"/></operator><name pos:line="67" pos:column="17">unlinkFile<pos:position pos:line="67" pos:column="27"/></name></name> <argument_list pos:line="67" pos:column="28">( <argument><expr><name pos:line="67" pos:column="30">filn<pos:position pos:line="67" pos:column="34"/></name></expr></argument>)<pos:position pos:line="67" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="36"/></expr_stmt>
            <continue pos:line="68" pos:column="13">continue;<pos:position pos:line="68" pos:column="22"/></continue>
        }<pos:position pos:line="69" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="71" pos:column="9">tlv_list<pos:position pos:line="71" pos:column="17"/></name> <operator pos:line="71" pos:column="18">=<pos:position pos:line="71" pos:column="19"/></operator> <call><name><name pos:line="71" pos:column="20">aBuilder<pos:position pos:line="71" pos:column="28"/></name><operator pos:line="71" pos:column="28">.<pos:position pos:line="71" pos:column="29"/></operator><name pos:line="71" pos:column="29">createStoreMeta<pos:position pos:line="71" pos:column="44"/></name></name> <argument_list pos:line="71" pos:column="45">()<pos:position pos:line="71" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="48"/></expr_stmt>

        <if pos:line="73" pos:column="9">if <condition pos:line="73" pos:column="12">(<expr><name pos:line="73" pos:column="13">tlv_list<pos:position pos:line="73" pos:column="21"/></name> <operator pos:line="73" pos:column="22">==<pos:position pos:line="73" pos:column="24"/></operator> <name pos:line="73" pos:column="25">NULL<pos:position pos:line="73" pos:column="29"/></name></expr>)<pos:position pos:line="73" pos:column="30"/></condition><then pos:line="73" pos:column="30"> <block pos:line="73" pos:column="31">{
            <expr_stmt><expr><call><name pos:line="74" pos:column="13">debugs<pos:position pos:line="74" pos:column="19"/></name><argument_list pos:line="74" pos:column="19">(<argument><expr><literal type="number" pos:line="74" pos:column="20">47<pos:position pos:line="74" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="74" pos:column="24">1<pos:position pos:line="74" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="74" pos:column="27">"commonUfsDirRebuildFromDirectory: failed to get meta data"<pos:position pos:line="74" pos:column="86"/></literal></expr></argument>)<pos:position pos:line="74" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="74" pos:column="88"/></expr_stmt>
            <comment type="block" pos:line="75" pos:column="13">/* XXX shouldn't this be a call to commonUfsUnlink ? */</comment>
            <expr_stmt><expr><call><name><name pos:line="76" pos:column="13">sd<pos:position pos:line="76" pos:column="15"/></name><operator pos:line="76" pos:column="15">-&gt;<pos:position pos:line="76" pos:column="20"/></operator><name pos:line="76" pos:column="17">unlinkFile<pos:position pos:line="76" pos:column="27"/></name></name> <argument_list pos:line="76" pos:column="28">(<argument><expr><name pos:line="76" pos:column="29">filn<pos:position pos:line="76" pos:column="33"/></name></expr></argument>)<pos:position pos:line="76" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="35"/></expr_stmt>
            <continue pos:line="77" pos:column="13">continue;<pos:position pos:line="77" pos:column="22"/></continue>
        }<pos:position pos:line="78" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="80" pos:column="9">debugs<pos:position pos:line="80" pos:column="15"/></name><argument_list pos:line="80" pos:column="15">(<argument><expr><literal type="number" pos:line="80" pos:column="16">47<pos:position pos:line="80" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="80" pos:column="20">3<pos:position pos:line="80" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="80" pos:column="23">"commonUfsDirRebuildFromDirectory: successful swap meta unpacking"<pos:position pos:line="80" pos:column="89"/></literal></expr></argument>)<pos:position pos:line="80" pos:column="90"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="91"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">memset<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><name pos:line="81" pos:column="16">key<pos:position pos:line="81" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="81" pos:column="21">'\0'<pos:position pos:line="81" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="81" pos:column="27">SQUID_MD5_DIGEST_LENGTH<pos:position pos:line="81" pos:column="50"/></name></expr></argument>)<pos:position pos:line="81" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="52"/></expr_stmt>

        <decl_stmt><decl><type><name pos:line="83" pos:column="9">StoreEntry<pos:position pos:line="83" pos:column="19"/></name></type> <name pos:line="83" pos:column="20">tmpe<pos:position pos:line="83" pos:column="24"/></name></decl>;<pos:position pos:line="83" pos:column="25"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="84" pos:column="9">InitStoreEntry<pos:position pos:line="84" pos:column="23"/></name></type> <name pos:line="84" pos:column="24">visitor<pos:position pos:line="84" pos:column="31"/></name><argument_list pos:line="84" pos:column="31">(<argument><expr><operator pos:line="84" pos:column="32">&amp;<pos:position pos:line="84" pos:column="37"/></operator><name pos:line="84" pos:column="33">tmpe<pos:position pos:line="84" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="84" pos:column="39">key<pos:position pos:line="84" pos:column="42"/></name></expr></argument>)<pos:position pos:line="84" pos:column="43"/></argument_list></decl>;<pos:position pos:line="84" pos:column="44"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="85" pos:column="9">for_each<pos:position pos:line="85" pos:column="17"/></name><argument_list pos:line="85" pos:column="17">(<argument><expr><operator pos:line="85" pos:column="18">*<pos:position pos:line="85" pos:column="19"/></operator><name pos:line="85" pos:column="19">tlv_list<pos:position pos:line="85" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="29">visitor<pos:position pos:line="85" pos:column="36"/></name></expr></argument>)<pos:position pos:line="85" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="85" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="86" pos:column="9">storeSwapTLVFree<pos:position pos:line="86" pos:column="25"/></name><argument_list pos:line="86" pos:column="25">(<argument><expr><name pos:line="86" pos:column="26">tlv_list<pos:position pos:line="86" pos:column="34"/></name></expr></argument>)<pos:position pos:line="86" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="36"/></expr_stmt>
        <expr_stmt><expr><name pos:line="87" pos:column="9">tlv_list<pos:position pos:line="87" pos:column="17"/></name> <operator pos:line="87" pos:column="18">=<pos:position pos:line="87" pos:column="19"/></operator> <name pos:line="87" pos:column="20">NULL<pos:position pos:line="87" pos:column="24"/></name></expr>;<pos:position pos:line="87" pos:column="25"/></expr_stmt>

        <if pos:line="89" pos:column="9">if <condition pos:line="89" pos:column="12">(<expr><call><name pos:line="89" pos:column="13">storeKeyNull<pos:position pos:line="89" pos:column="25"/></name><argument_list pos:line="89" pos:column="25">(<argument><expr><name pos:line="89" pos:column="26">key<pos:position pos:line="89" pos:column="29"/></name></expr></argument>)<pos:position pos:line="89" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="89" pos:column="31"/></condition><then pos:line="89" pos:column="31"> <block pos:line="89" pos:column="32">{
            <expr_stmt><expr><call><name pos:line="90" pos:column="13">debugs<pos:position pos:line="90" pos:column="19"/></name><argument_list pos:line="90" pos:column="19">(<argument><expr><literal type="number" pos:line="90" pos:column="20">47<pos:position pos:line="90" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="90" pos:column="24">1<pos:position pos:line="90" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="27">"commonUfsDirRebuildFromDirectory: NULL key"<pos:position pos:line="90" pos:column="71"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="73"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="91" pos:column="13">sd<pos:position pos:line="91" pos:column="15"/></name><operator pos:line="91" pos:column="15">-&gt;<pos:position pos:line="91" pos:column="20"/></operator><name pos:line="91" pos:column="17">unlinkFile<pos:position pos:line="91" pos:column="27"/></name></name><argument_list pos:line="91" pos:column="27">(<argument><expr><name pos:line="91" pos:column="28">filn<pos:position pos:line="91" pos:column="32"/></name></expr></argument>)<pos:position pos:line="91" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="34"/></expr_stmt>
            <continue pos:line="92" pos:column="13">continue;<pos:position pos:line="92" pos:column="22"/></continue>
        }<pos:position pos:line="93" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="95" pos:column="9">tmpe<pos:position pos:line="95" pos:column="13"/></name><operator pos:line="95" pos:column="13">.<pos:position pos:line="95" pos:column="14"/></operator><name pos:line="95" pos:column="14">key<pos:position pos:line="95" pos:column="17"/></name></name> <operator pos:line="95" pos:column="18">=<pos:position pos:line="95" pos:column="19"/></operator> <name pos:line="95" pos:column="20">key<pos:position pos:line="95" pos:column="23"/></name></expr>;<pos:position pos:line="95" pos:column="24"/></expr_stmt>
        <comment type="block" pos:line="96" pos:column="9">/* check sizes */</comment>

        <if pos:line="98" pos:column="9">if <condition pos:line="98" pos:column="12">(<expr><name><name pos:line="98" pos:column="13">tmpe<pos:position pos:line="98" pos:column="17"/></name><operator pos:line="98" pos:column="17">.<pos:position pos:line="98" pos:column="18"/></operator><name pos:line="98" pos:column="18">swap_file_sz<pos:position pos:line="98" pos:column="30"/></name></name> <operator pos:line="98" pos:column="31">==<pos:position pos:line="98" pos:column="33"/></operator> <literal type="number" pos:line="98" pos:column="34">0<pos:position pos:line="98" pos:column="35"/></literal></expr>)<pos:position pos:line="98" pos:column="36"/></condition><then pos:line="98" pos:column="36"> <block pos:line="98" pos:column="37">{
            <expr_stmt><expr><name><name pos:line="99" pos:column="13">tmpe<pos:position pos:line="99" pos:column="17"/></name><operator pos:line="99" pos:column="17">.<pos:position pos:line="99" pos:column="18"/></operator><name pos:line="99" pos:column="18">swap_file_sz<pos:position pos:line="99" pos:column="30"/></name></name> <operator pos:line="99" pos:column="31">=<pos:position pos:line="99" pos:column="32"/></operator> <operator pos:line="99" pos:column="33">(<pos:position pos:line="99" pos:column="34"/></operator><name pos:line="99" pos:column="34">uint64_t<pos:position pos:line="99" pos:column="42"/></name><operator pos:line="99" pos:column="42">)<pos:position pos:line="99" pos:column="43"/></operator> <name><name pos:line="99" pos:column="44">sb<pos:position pos:line="99" pos:column="46"/></name><operator pos:line="99" pos:column="46">.<pos:position pos:line="99" pos:column="47"/></operator><name pos:line="99" pos:column="47">st_size<pos:position pos:line="99" pos:column="54"/></name></name></expr>;<pos:position pos:line="99" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="100" pos:column="10"/></block></then> <elseif pos:line="100" pos:column="11">else <if pos:line="100" pos:column="16">if <condition pos:line="100" pos:column="19">(<expr><name><name pos:line="100" pos:column="20">tmpe<pos:position pos:line="100" pos:column="24"/></name><operator pos:line="100" pos:column="24">.<pos:position pos:line="100" pos:column="25"/></operator><name pos:line="100" pos:column="25">swap_file_sz<pos:position pos:line="100" pos:column="37"/></name></name> <operator pos:line="100" pos:column="38">==<pos:position pos:line="100" pos:column="40"/></operator> <call pos:line="100" pos:column="41">(<name pos:line="100" pos:column="42">uint64_t<pos:position pos:line="100" pos:column="50"/></name>)<argument_list pos:line="100" pos:column="51">(<argument><expr><name><name pos:line="100" pos:column="52">sb<pos:position pos:line="100" pos:column="54"/></name><operator pos:line="100" pos:column="54">.<pos:position pos:line="100" pos:column="55"/></operator><name pos:line="100" pos:column="55">st_size<pos:position pos:line="100" pos:column="62"/></name></name> <operator pos:line="100" pos:column="63">-<pos:position pos:line="100" pos:column="64"/></operator> <name pos:line="100" pos:column="65">swap_hdr_len<pos:position pos:line="100" pos:column="77"/></name></expr></argument>)<pos:position pos:line="100" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="100" pos:column="79"/></condition><then pos:line="100" pos:column="79"> <block pos:line="100" pos:column="80">{
            <expr_stmt><expr><name><name pos:line="101" pos:column="13">tmpe<pos:position pos:line="101" pos:column="17"/></name><operator pos:line="101" pos:column="17">.<pos:position pos:line="101" pos:column="18"/></operator><name pos:line="101" pos:column="18">swap_file_sz<pos:position pos:line="101" pos:column="30"/></name></name> <operator pos:line="101" pos:column="31">=<pos:position pos:line="101" pos:column="32"/></operator> <operator pos:line="101" pos:column="33">(<pos:position pos:line="101" pos:column="34"/></operator><name pos:line="101" pos:column="34">uint64_t<pos:position pos:line="101" pos:column="42"/></name><operator pos:line="101" pos:column="42">)<pos:position pos:line="101" pos:column="43"/></operator> <name><name pos:line="101" pos:column="44">sb<pos:position pos:line="101" pos:column="46"/></name><operator pos:line="101" pos:column="46">.<pos:position pos:line="101" pos:column="47"/></operator><name pos:line="101" pos:column="47">st_size<pos:position pos:line="101" pos:column="54"/></name></name></expr>;<pos:position pos:line="101" pos:column="55"/></expr_stmt>
        }<pos:position pos:line="102" pos:column="10"/></block></then></if></elseif> <elseif pos:line="102" pos:column="11">else <if pos:line="102" pos:column="16">if <condition pos:line="102" pos:column="19">(<expr><name><name pos:line="102" pos:column="20">tmpe<pos:position pos:line="102" pos:column="24"/></name><operator pos:line="102" pos:column="24">.<pos:position pos:line="102" pos:column="25"/></operator><name pos:line="102" pos:column="25">swap_file_sz<pos:position pos:line="102" pos:column="37"/></name></name> <operator pos:line="102" pos:column="38">!=<pos:position pos:line="102" pos:column="40"/></operator> <operator pos:line="102" pos:column="41">(<pos:position pos:line="102" pos:column="42"/></operator><name pos:line="102" pos:column="42">uint64_t<pos:position pos:line="102" pos:column="50"/></name><operator pos:line="102" pos:column="50">)<pos:position pos:line="102" pos:column="51"/></operator><name><name pos:line="102" pos:column="51">sb<pos:position pos:line="102" pos:column="53"/></name><operator pos:line="102" pos:column="53">.<pos:position pos:line="102" pos:column="54"/></operator><name pos:line="102" pos:column="54">st_size<pos:position pos:line="102" pos:column="61"/></name></name></expr>)<pos:position pos:line="102" pos:column="62"/></condition><then pos:line="102" pos:column="62"> <block pos:line="102" pos:column="63">{
            <expr_stmt><expr><call><name pos:line="103" pos:column="13">debugs<pos:position pos:line="103" pos:column="19"/></name><argument_list pos:line="103" pos:column="19">(<argument><expr><literal type="number" pos:line="103" pos:column="20">47<pos:position pos:line="103" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="103" pos:column="24">1<pos:position pos:line="103" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="103" pos:column="27">"commonUfsDirRebuildFromDirectory: SIZE MISMATCH "<pos:position pos:line="103" pos:column="77"/></literal> <operator pos:line="103" pos:column="78">&lt;&lt;<pos:position pos:line="103" pos:column="86"/></operator>
                   <name><name pos:line="104" pos:column="20">tmpe<pos:position pos:line="104" pos:column="24"/></name><operator pos:line="104" pos:column="24">.<pos:position pos:line="104" pos:column="25"/></operator><name pos:line="104" pos:column="25">swap_file_sz<pos:position pos:line="104" pos:column="37"/></name></name> <operator pos:line="104" pos:column="38">&lt;&lt;<pos:position pos:line="104" pos:column="46"/></operator> <literal type="string" pos:line="104" pos:column="41">"!="<pos:position pos:line="104" pos:column="45"/></literal> <operator pos:line="104" pos:column="46">&lt;&lt;<pos:position pos:line="104" pos:column="54"/></operator>
                   <name><name pos:line="105" pos:column="20">sb<pos:position pos:line="105" pos:column="22"/></name><operator pos:line="105" pos:column="22">.<pos:position pos:line="105" pos:column="23"/></operator><name pos:line="105" pos:column="23">st_size<pos:position pos:line="105" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="105" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="105" pos:column="32"/></expr_stmt>

            <expr_stmt><expr><call><name><name pos:line="107" pos:column="13">sd<pos:position pos:line="107" pos:column="15"/></name><operator pos:line="107" pos:column="15">-&gt;<pos:position pos:line="107" pos:column="20"/></operator><name pos:line="107" pos:column="17">unlinkFile<pos:position pos:line="107" pos:column="27"/></name></name><argument_list pos:line="107" pos:column="27">(<argument><expr><name pos:line="107" pos:column="28">filn<pos:position pos:line="107" pos:column="32"/></name></expr></argument>)<pos:position pos:line="107" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="34"/></expr_stmt>
            <continue pos:line="108" pos:column="13">continue;<pos:position pos:line="108" pos:column="22"/></continue>
        }<pos:position pos:line="109" pos:column="10"/></block></then></if></elseif></if>

        <if pos:line="111" pos:column="9">if <condition pos:line="111" pos:column="12">(<expr><call><name pos:line="111" pos:column="13">EBIT_TEST<pos:position pos:line="111" pos:column="22"/></name><argument_list pos:line="111" pos:column="22">(<argument><expr><name><name pos:line="111" pos:column="23">tmpe<pos:position pos:line="111" pos:column="27"/></name><operator pos:line="111" pos:column="27">.<pos:position pos:line="111" pos:column="28"/></operator><name pos:line="111" pos:column="28">flags<pos:position pos:line="111" pos:column="33"/></name></name></expr></argument>, <argument><expr><name pos:line="111" pos:column="35">KEY_PRIVATE<pos:position pos:line="111" pos:column="46"/></name></expr></argument>)<pos:position pos:line="111" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="111" pos:column="48"/></condition><then pos:line="111" pos:column="48"> <block pos:line="111" pos:column="49">{
            <expr_stmt><expr><call><name><name pos:line="112" pos:column="13">sd<pos:position pos:line="112" pos:column="15"/></name><operator pos:line="112" pos:column="15">-&gt;<pos:position pos:line="112" pos:column="20"/></operator><name pos:line="112" pos:column="17">unlinkFile<pos:position pos:line="112" pos:column="27"/></name></name><argument_list pos:line="112" pos:column="27">(<argument><expr><name pos:line="112" pos:column="28">filn<pos:position pos:line="112" pos:column="32"/></name></expr></argument>)<pos:position pos:line="112" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="34"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="113" pos:column="13">counts<pos:position pos:line="113" pos:column="19"/></name><operator pos:line="113" pos:column="19">.<pos:position pos:line="113" pos:column="20"/></operator><name pos:line="113" pos:column="20">badflags<pos:position pos:line="113" pos:column="28"/></name></name><operator pos:line="113" pos:column="28">++<pos:position pos:line="113" pos:column="30"/></operator></expr>;<pos:position pos:line="113" pos:column="31"/></expr_stmt>
            <continue pos:line="114" pos:column="13">continue;<pos:position pos:line="114" pos:column="22"/></continue>
        }<pos:position pos:line="115" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="117" pos:column="9">/* this needs to become
         * 1) unpack url
         * 2) make synthetic request with headers ?? or otherwise search
         * for a matching object in the store
         * TODO FIXME change to new async api
         * TODO FIXME I think there is a race condition here with the
         * async api :
         * store A reads in object foo, searchs for it, and finds nothing.
         * store B reads in object foo, searchs for it, finds nothing.
         * store A gets called back with nothing, so registers the object
         * store B gets called back with nothing, so registers the object,
         * which will conflict when the in core index gets around to scanning
         * store B.
         *
         * this suggests that rather than searching for duplicates, the
         * index rebuild should just assume its the most recent accurate
         * store entry and whoever indexes the stores handles duplicates.
         */</comment>
        <expr_stmt><expr><name pos:line="135" pos:column="9">e<pos:position pos:line="135" pos:column="10"/></name> <operator pos:line="135" pos:column="11">=<pos:position pos:line="135" pos:column="12"/></operator> <call><name><name pos:line="135" pos:column="13">Store<pos:position pos:line="135" pos:column="18"/></name><operator pos:line="135" pos:column="18">::<pos:position pos:line="135" pos:column="20"/></operator><name pos:line="135" pos:column="20">Root<pos:position pos:line="135" pos:column="24"/></name></name><argument_list pos:line="135" pos:column="24">()<pos:position pos:line="135" pos:column="26"/></argument_list></call><operator pos:line="135" pos:column="26">.<pos:position pos:line="135" pos:column="27"/></operator><call><name pos:line="135" pos:column="27">get<pos:position pos:line="135" pos:column="30"/></name><argument_list pos:line="135" pos:column="30">(<argument><expr><name pos:line="135" pos:column="31">key<pos:position pos:line="135" pos:column="34"/></name></expr></argument>)<pos:position pos:line="135" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="36"/></expr_stmt>

        <if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><name pos:line="137" pos:column="13">e<pos:position pos:line="137" pos:column="14"/></name> <operator pos:line="137" pos:column="15">&amp;&amp;<pos:position pos:line="137" pos:column="25"/></operator> <name><name pos:line="137" pos:column="18">e<pos:position pos:line="137" pos:column="19"/></name><operator pos:line="137" pos:column="19">-&gt;<pos:position pos:line="137" pos:column="24"/></operator><name pos:line="137" pos:column="21">lastref<pos:position pos:line="137" pos:column="28"/></name></name> <operator pos:line="137" pos:column="29">&gt;=<pos:position pos:line="137" pos:column="34"/></operator> <name><name pos:line="137" pos:column="32">tmpe<pos:position pos:line="137" pos:column="36"/></name><operator pos:line="137" pos:column="36">.<pos:position pos:line="137" pos:column="37"/></operator><name pos:line="137" pos:column="37">lastref<pos:position pos:line="137" pos:column="44"/></name></name></expr>)<pos:position pos:line="137" pos:column="45"/></condition><then pos:line="137" pos:column="45"> <block pos:line="137" pos:column="46">{
            <comment type="block" pos:line="138" pos:column="13">/* key already exists, current entry is newer */</comment>
            <comment type="block" pos:line="139" pos:column="13">/* keep old, ignore new */</comment>
            <expr_stmt><expr><name><name pos:line="140" pos:column="13">counts<pos:position pos:line="140" pos:column="19"/></name><operator pos:line="140" pos:column="19">.<pos:position pos:line="140" pos:column="20"/></operator><name pos:line="140" pos:column="20">dupcount<pos:position pos:line="140" pos:column="28"/></name></name><operator pos:line="140" pos:column="28">++<pos:position pos:line="140" pos:column="30"/></operator></expr>;<pos:position pos:line="140" pos:column="31"/></expr_stmt>
            <continue pos:line="141" pos:column="13">continue;<pos:position pos:line="141" pos:column="22"/></continue>
        }<pos:position pos:line="142" pos:column="10"/></block></then> <elseif pos:line="142" pos:column="11">else <if pos:line="142" pos:column="16">if <condition pos:line="142" pos:column="19">(<expr><name pos:line="142" pos:column="20">NULL<pos:position pos:line="142" pos:column="24"/></name> <operator pos:line="142" pos:column="25">!=<pos:position pos:line="142" pos:column="27"/></operator> <name pos:line="142" pos:column="28">e<pos:position pos:line="142" pos:column="29"/></name></expr>)<pos:position pos:line="142" pos:column="30"/></condition><then pos:line="142" pos:column="30"> <block pos:line="142" pos:column="31">{
            <comment type="block" pos:line="143" pos:column="13">/* URL already exists, this swapfile not being used */</comment>
            <comment type="block" pos:line="144" pos:column="13">/* junk old, load new */</comment>
            <expr_stmt><expr><call><name><name pos:line="145" pos:column="13">e<pos:position pos:line="145" pos:column="14"/></name><operator pos:line="145" pos:column="14">-&gt;<pos:position pos:line="145" pos:column="19"/></operator><name pos:line="145" pos:column="16">release<pos:position pos:line="145" pos:column="23"/></name></name><argument_list pos:line="145" pos:column="23">()<pos:position pos:line="145" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="26"/></expr_stmt>	<comment type="block" pos:line="145" pos:column="33">/* release old entry */</comment>
            <expr_stmt><expr><name><name pos:line="146" pos:column="13">counts<pos:position pos:line="146" pos:column="19"/></name><operator pos:line="146" pos:column="19">.<pos:position pos:line="146" pos:column="20"/></operator><name pos:line="146" pos:column="20">dupcount<pos:position pos:line="146" pos:column="28"/></name></name><operator pos:line="146" pos:column="28">++<pos:position pos:line="146" pos:column="30"/></operator></expr>;<pos:position pos:line="146" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="147" pos:column="10"/></block></then></if></elseif></if>

        <expr_stmt><expr><name><name pos:line="149" pos:column="9">counts<pos:position pos:line="149" pos:column="15"/></name><operator pos:line="149" pos:column="15">.<pos:position pos:line="149" pos:column="16"/></operator><name pos:line="149" pos:column="16">objcount<pos:position pos:line="149" pos:column="24"/></name></name><operator pos:line="149" pos:column="24">++<pos:position pos:line="149" pos:column="26"/></operator></expr>;<pos:position pos:line="149" pos:column="27"/></expr_stmt>
        <comment type="line" pos:line="150" pos:column="9">// tmpe.dump(5);</comment>
        <expr_stmt><expr><call><name pos:line="151" pos:column="9">currentEntry<pos:position pos:line="151" pos:column="21"/></name><argument_list pos:line="151" pos:column="21">(<argument><expr><call><name><name pos:line="151" pos:column="22">sd<pos:position pos:line="151" pos:column="24"/></name><operator pos:line="151" pos:column="24">-&gt;<pos:position pos:line="151" pos:column="29"/></operator><name pos:line="151" pos:column="26">addDiskRestore<pos:position pos:line="151" pos:column="40"/></name></name><argument_list pos:line="151" pos:column="40">(<argument><expr><name pos:line="151" pos:column="41">key<pos:position pos:line="151" pos:column="44"/></name></expr></argument>,
                                        <argument><expr><name pos:line="152" pos:column="41">filn<pos:position pos:line="152" pos:column="45"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="153" pos:column="41">tmpe<pos:position pos:line="153" pos:column="45"/></name><operator pos:line="153" pos:column="45">.<pos:position pos:line="153" pos:column="46"/></operator><name pos:line="153" pos:column="46">swap_file_sz<pos:position pos:line="153" pos:column="58"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="154" pos:column="41">tmpe<pos:position pos:line="154" pos:column="45"/></name><operator pos:line="154" pos:column="45">.<pos:position pos:line="154" pos:column="46"/></operator><name pos:line="154" pos:column="46">expires<pos:position pos:line="154" pos:column="53"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="155" pos:column="41">tmpe<pos:position pos:line="155" pos:column="45"/></name><operator pos:line="155" pos:column="45">.<pos:position pos:line="155" pos:column="46"/></operator><name pos:line="155" pos:column="46">timestamp<pos:position pos:line="155" pos:column="55"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="156" pos:column="41">tmpe<pos:position pos:line="156" pos:column="45"/></name><operator pos:line="156" pos:column="45">.<pos:position pos:line="156" pos:column="46"/></operator><name pos:line="156" pos:column="46">lastref<pos:position pos:line="156" pos:column="53"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="157" pos:column="41">tmpe<pos:position pos:line="157" pos:column="45"/></name><operator pos:line="157" pos:column="45">.<pos:position pos:line="157" pos:column="46"/></operator><name pos:line="157" pos:column="46">lastmod<pos:position pos:line="157" pos:column="53"/></name></name></expr></argument>,
                                        <argument><expr><name><name pos:line="158" pos:column="41">tmpe<pos:position pos:line="158" pos:column="45"/></name><operator pos:line="158" pos:column="45">.<pos:position pos:line="158" pos:column="46"/></operator><name pos:line="158" pos:column="46">refcount<pos:position pos:line="158" pos:column="54"/></name></name></expr></argument>,	<comment type="block" pos:line="158" pos:column="57">/* refcount */</comment>
                                        <argument><expr><name><name pos:line="159" pos:column="41">tmpe<pos:position pos:line="159" pos:column="45"/></name><operator pos:line="159" pos:column="45">.<pos:position pos:line="159" pos:column="46"/></operator><name pos:line="159" pos:column="46">flags<pos:position pos:line="159" pos:column="51"/></name></name></expr></argument>,		<comment type="block" pos:line="159" pos:column="65">/* flags */</comment>
                                        <argument><expr><operator pos:line="160" pos:column="41">(<pos:position pos:line="160" pos:column="42"/></operator><name pos:line="160" pos:column="42">int<pos:position pos:line="160" pos:column="45"/></name><operator pos:line="160" pos:column="45">)<pos:position pos:line="160" pos:column="46"/></operator> <name><name pos:line="160" pos:column="47">flags<pos:position pos:line="160" pos:column="52"/></name><operator pos:line="160" pos:column="52">.<pos:position pos:line="160" pos:column="53"/></operator><name pos:line="160" pos:column="53">clean<pos:position pos:line="160" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="160" pos:column="59"/></argument_list></call></expr></argument>)<pos:position pos:line="160" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="160" pos:column="61"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="161" pos:column="9">storeDirSwapLog<pos:position pos:line="161" pos:column="24"/></name><argument_list pos:line="161" pos:column="24">(<argument><expr><call><name pos:line="161" pos:column="25">currentEntry<pos:position pos:line="161" pos:column="37"/></name><argument_list pos:line="161" pos:column="37">()<pos:position pos:line="161" pos:column="39"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="161" pos:column="41">SWAP_LOG_ADD<pos:position pos:line="161" pos:column="53"/></name></expr></argument>)<pos:position pos:line="161" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="161" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="162" pos:column="6"/></block></for>

}<pos:position pos:line="164" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3432_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">oid<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">client_Inst<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><name pos:line="2" pos:column="13">oid<pos:position pos:line="2" pos:column="16"/></name> <modifier pos:line="2" pos:column="17">*<pos:position pos:line="2" pos:column="18"/></modifier></type> <name pos:line="2" pos:column="19">name<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">snint<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">len<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">mib_tree_entry<pos:position pos:line="2" pos:column="52"/></name> <modifier pos:line="2" pos:column="53">*<pos:position pos:line="2" pos:column="54"/></modifier></type> <name pos:line="2" pos:column="55">current<pos:position pos:line="2" pos:column="62"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="64">oid_ParseFn<pos:position pos:line="2" pos:column="75"/></name> <modifier pos:line="2" pos:column="76">*<pos:position pos:line="2" pos:column="77"/></modifier><modifier pos:line="2" pos:column="77">*<pos:position pos:line="2" pos:column="78"/></modifier></type> <name pos:line="2" pos:column="79">Fn<pos:position pos:line="2" pos:column="81"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="82"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">oid<pos:position pos:line="4" pos:column="8"/></name> <modifier pos:line="4" pos:column="9">*<pos:position pos:line="4" pos:column="10"/></modifier></type><name pos:line="4" pos:column="10">instance<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">NULL<pos:position pos:line="4" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">Ip<pos:position pos:line="5" pos:column="7"/></name><operator pos:line="5" pos:column="7">::<pos:position pos:line="5" pos:column="9"/></operator><name pos:line="5" pos:column="9">Address<pos:position pos:line="5" pos:column="16"/></name></name></type> <name pos:line="5" pos:column="17">laddr<pos:position pos:line="5" pos:column="22"/></name></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">Ip<pos:position pos:line="6" pos:column="7"/></name><operator pos:line="6" pos:column="7">::<pos:position pos:line="6" pos:column="9"/></operator><name pos:line="6" pos:column="9">Address<pos:position pos:line="6" pos:column="16"/></name></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">aux<pos:position pos:line="6" pos:column="21"/></name></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">size<pos:position pos:line="7" pos:column="13"/></name> <init pos:line="7" pos:column="14">= <expr><literal type="number" pos:line="7" pos:column="16">0<pos:position pos:line="7" pos:column="17"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="18"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">newshift<pos:position pos:line="8" pos:column="17"/></name> <init pos:line="8" pos:column="18">= <expr><literal type="number" pos:line="8" pos:column="20">0<pos:position pos:line="8" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="22"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">*<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">len<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">&lt;=<pos:position pos:line="10" pos:column="19"/></operator> <name><name pos:line="10" pos:column="17">current<pos:position pos:line="10" pos:column="24"/></name><operator pos:line="10" pos:column="24">-&gt;<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="26">len<pos:position pos:line="10" pos:column="29"/></name></name></expr>)<pos:position pos:line="10" pos:column="30"/></condition><then pos:line="10" pos:column="30"> <block pos:line="10" pos:column="31">{
        <expr_stmt><expr><name pos:line="11" pos:column="9">aux<pos:position pos:line="11" pos:column="12"/></name>  <operator pos:line="11" pos:column="14">=<pos:position pos:line="11" pos:column="15"/></operator> <call><name pos:line="11" pos:column="16">client_entry<pos:position pos:line="11" pos:column="28"/></name><argument_list pos:line="11" pos:column="28">(<argument><expr><name pos:line="11" pos:column="29">NULL<pos:position pos:line="11" pos:column="33"/></name></expr></argument>)<pos:position pos:line="11" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="35"/></expr_stmt>
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">aux<pos:position pos:line="12" pos:column="16"/></name></expr>)<pos:position pos:line="12" pos:column="17"/></condition><then pos:line="12" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><name pos:line="13" pos:column="13">laddr<pos:position pos:line="13" pos:column="18"/></name> <operator pos:line="13" pos:column="19">=<pos:position pos:line="13" pos:column="20"/></operator> <operator pos:line="13" pos:column="21">*<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="22">aux<pos:position pos:line="13" pos:column="25"/></name></expr>;<pos:position pos:line="13" pos:column="26"/></expr_stmt></block></then>
        <else pos:line="14" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="15" pos:column="13">laddr<pos:position pos:line="15" pos:column="18"/></name><operator pos:line="15" pos:column="18">.<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">setAnyAddr<pos:position pos:line="15" pos:column="29"/></name></name><argument_list pos:line="15" pos:column="29">()<pos:position pos:line="15" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="32"/></expr_stmt></block></else></if>

        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><call><name><name pos:line="17" pos:column="13">laddr<pos:position pos:line="17" pos:column="18"/></name><operator pos:line="17" pos:column="18">.<pos:position pos:line="17" pos:column="19"/></operator><name pos:line="17" pos:column="19">isIPv4<pos:position pos:line="17" pos:column="25"/></name></name><argument_list pos:line="17" pos:column="25">()<pos:position pos:line="17" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="28"/></condition><then pos:line="17" pos:column="28">
            <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="13">size<pos:position pos:line="18" pos:column="17"/></name> <operator pos:line="18" pos:column="18">=<pos:position pos:line="18" pos:column="19"/></operator> <sizeof pos:line="18" pos:column="20">sizeof<argument_list pos:line="18" pos:column="26">(<argument><expr><name pos:line="18" pos:column="27">in_addr<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></sizeof></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt></block></then>
        <else pos:line="19" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><name pos:line="20" pos:column="13">size<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">=<pos:position pos:line="20" pos:column="19"/></operator> <sizeof pos:line="20" pos:column="20">sizeof<argument_list pos:line="20" pos:column="26">(<argument><expr><name pos:line="20" pos:column="27">in6_addr<pos:position pos:line="20" pos:column="35"/></name></expr></argument>)<pos:position pos:line="20" pos:column="36"/></argument_list></sizeof></expr>;<pos:position pos:line="20" pos:column="37"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">49<pos:position pos:line="22" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="20">6<pos:position pos:line="22" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="22" pos:column="23">HERE<pos:position pos:line="22" pos:column="27"/></name> <operator pos:line="22" pos:column="28">&lt;&lt;<pos:position pos:line="22" pos:column="36"/></operator> <literal type="string" pos:line="22" pos:column="31">"len"<pos:position pos:line="22" pos:column="36"/></literal> <operator pos:line="22" pos:column="37">&lt;&lt;<pos:position pos:line="22" pos:column="45"/></operator> <operator pos:line="22" pos:column="40">*<pos:position pos:line="22" pos:column="41"/></operator><name pos:line="22" pos:column="41">len<pos:position pos:line="22" pos:column="44"/></name> <operator pos:line="22" pos:column="45">&lt;&lt;<pos:position pos:line="22" pos:column="53"/></operator> <literal type="string" pos:line="22" pos:column="48">", current-len"<pos:position pos:line="22" pos:column="63"/></literal> <operator pos:line="22" pos:column="64">&lt;&lt;<pos:position pos:line="22" pos:column="72"/></operator> <name><name pos:line="22" pos:column="67">current<pos:position pos:line="22" pos:column="74"/></name><operator pos:line="22" pos:column="74">-&gt;<pos:position pos:line="22" pos:column="79"/></operator><name pos:line="22" pos:column="76">len<pos:position pos:line="22" pos:column="79"/></name></name> <operator pos:line="22" pos:column="80">&lt;&lt;<pos:position pos:line="22" pos:column="88"/></operator> <literal type="string" pos:line="22" pos:column="83">", addr="<pos:position pos:line="22" pos:column="92"/></literal> <operator pos:line="22" pos:column="93">&lt;&lt;<pos:position pos:line="22" pos:column="101"/></operator> <name pos:line="22" pos:column="96">laddr<pos:position pos:line="22" pos:column="101"/></name> <operator pos:line="22" pos:column="102">&lt;&lt;<pos:position pos:line="22" pos:column="110"/></operator> <literal type="string" pos:line="22" pos:column="105">", size="<pos:position pos:line="22" pos:column="114"/></literal> <operator pos:line="22" pos:column="115">&lt;&lt;<pos:position pos:line="22" pos:column="123"/></operator> <name pos:line="22" pos:column="118">size<pos:position pos:line="22" pos:column="122"/></name></expr></argument>)<pos:position pos:line="22" pos:column="123"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="124"/></expr_stmt>

        <expr_stmt><expr><name pos:line="24" pos:column="9">instance<pos:position pos:line="24" pos:column="17"/></name> <operator pos:line="24" pos:column="18">=<pos:position pos:line="24" pos:column="19"/></operator> <operator pos:line="24" pos:column="20">(<pos:position pos:line="24" pos:column="21"/></operator><name pos:line="24" pos:column="21">oid<pos:position pos:line="24" pos:column="24"/></name> <operator pos:line="24" pos:column="25">*<pos:position pos:line="24" pos:column="26"/></operator><operator pos:line="24" pos:column="26">)<pos:position pos:line="24" pos:column="27"/></operator><call><name pos:line="24" pos:column="27">xmalloc<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><sizeof pos:line="24" pos:column="35">sizeof<argument_list pos:line="24" pos:column="41">(<argument><expr><operator pos:line="24" pos:column="42">*<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="43">name<pos:position pos:line="24" pos:column="47"/></name></expr></argument>)<pos:position pos:line="24" pos:column="48"/></argument_list></sizeof> <operator pos:line="24" pos:column="49">*<pos:position pos:line="24" pos:column="50"/></operator> <operator pos:line="24" pos:column="51">(<pos:position pos:line="24" pos:column="52"/></operator><operator pos:line="24" pos:column="52">*<pos:position pos:line="24" pos:column="53"/></operator><name pos:line="24" pos:column="53">len<pos:position pos:line="24" pos:column="56"/></name> <operator pos:line="24" pos:column="57">+<pos:position pos:line="24" pos:column="58"/></operator> <name pos:line="24" pos:column="59">size<pos:position pos:line="24" pos:column="63"/></name> <operator pos:line="24" pos:column="64">)<pos:position pos:line="24" pos:column="65"/></operator></expr></argument>)<pos:position pos:line="24" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">memcpy<pos:position pos:line="25" pos:column="15"/></name><argument_list pos:line="25" pos:column="15">(<argument><expr><name pos:line="25" pos:column="16">instance<pos:position pos:line="25" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="26">name<pos:position pos:line="25" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="25" pos:column="32">(<pos:position pos:line="25" pos:column="33"/></operator><sizeof pos:line="25" pos:column="33">sizeof<argument_list pos:line="25" pos:column="39">(<argument><expr><operator pos:line="25" pos:column="40">*<pos:position pos:line="25" pos:column="41"/></operator><name pos:line="25" pos:column="41">name<pos:position pos:line="25" pos:column="45"/></name></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></sizeof> <operator pos:line="25" pos:column="47">*<pos:position pos:line="25" pos:column="48"/></operator> <operator pos:line="25" pos:column="49">(<pos:position pos:line="25" pos:column="50"/></operator><operator pos:line="25" pos:column="50">*<pos:position pos:line="25" pos:column="51"/></operator><name pos:line="25" pos:column="51">len<pos:position pos:line="25" pos:column="54"/></name><operator pos:line="25" pos:column="54">)<pos:position pos:line="25" pos:column="55"/></operator><operator pos:line="25" pos:column="55">)<pos:position pos:line="25" pos:column="56"/></operator></expr></argument>)<pos:position pos:line="25" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="58"/></expr_stmt>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">( <expr><operator pos:line="27" pos:column="14">!<pos:position pos:line="27" pos:column="15"/></operator><call><name><name pos:line="27" pos:column="15">laddr<pos:position pos:line="27" pos:column="20"/></name><operator pos:line="27" pos:column="20">.<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="21">isAnyAddr<pos:position pos:line="27" pos:column="30"/></name></name><argument_list pos:line="27" pos:column="30">()<pos:position pos:line="27" pos:column="32"/></argument_list></call></expr> )<pos:position pos:line="27" pos:column="34"/></condition><then pos:line="27" pos:column="34"> <block pos:line="27" pos:column="35">{
            <expr_stmt><expr><call><name pos:line="28" pos:column="13">addr2oid<pos:position pos:line="28" pos:column="21"/></name><argument_list pos:line="28" pos:column="21">(<argument><expr><name pos:line="28" pos:column="22">laddr<pos:position pos:line="28" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="29">&amp;<pos:position pos:line="28" pos:column="34"/></operator><name><name pos:line="28" pos:column="30">instance<pos:position pos:line="28" pos:column="38"/></name><index pos:line="28" pos:column="38">[ <expr><operator pos:line="28" pos:column="40">*<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="41">len<pos:position pos:line="28" pos:column="44"/></name></expr>]<pos:position pos:line="28" pos:column="45"/></index></name></expr></argument>)<pos:position pos:line="28" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="47"/></expr_stmt>  <comment type="line" pos:line="28" pos:column="49">// the addr</comment>
            <expr_stmt><expr><operator pos:line="29" pos:column="13">*<pos:position pos:line="29" pos:column="14"/></operator><name pos:line="29" pos:column="14">len<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">+=<pos:position pos:line="29" pos:column="20"/></operator> <name pos:line="29" pos:column="21">size<pos:position pos:line="29" pos:column="25"/></name></expr> ;<pos:position pos:line="29" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="30" pos:column="10"/></block></then></if>
    }<pos:position pos:line="31" pos:column="6"/></block></then> <else pos:line="31" pos:column="7">else <block pos:line="31" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="32" pos:column="9">int<pos:position pos:line="32" pos:column="12"/></name></type> <name pos:line="32" pos:column="13">shift<pos:position pos:line="32" pos:column="18"/></name> <init pos:line="32" pos:column="19">= <expr><operator pos:line="32" pos:column="21">*<pos:position pos:line="32" pos:column="22"/></operator><name pos:line="32" pos:column="22">len<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">-<pos:position pos:line="32" pos:column="27"/></operator> <name><name pos:line="32" pos:column="28">current<pos:position pos:line="32" pos:column="35"/></name><operator pos:line="32" pos:column="35">-&gt;<pos:position pos:line="32" pos:column="40"/></operator><name pos:line="32" pos:column="37">len<pos:position pos:line="32" pos:column="40"/></name></name></expr></init></decl> ;<pos:position pos:line="32" pos:column="42"/></decl_stmt> <comment type="line" pos:line="32" pos:column="43">// i.e 4 or 16</comment>
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">oid2addr<pos:position pos:line="33" pos:column="17"/></name><argument_list pos:line="33" pos:column="17">(<argument><expr><operator pos:line="33" pos:column="18">&amp;<pos:position pos:line="33" pos:column="23"/></operator><name><name pos:line="33" pos:column="19">name<pos:position pos:line="33" pos:column="23"/></name><index pos:line="33" pos:column="23">[<expr><operator pos:line="33" pos:column="24">*<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">len<pos:position pos:line="33" pos:column="28"/></name> <operator pos:line="33" pos:column="29">-<pos:position pos:line="33" pos:column="30"/></operator> <name pos:line="33" pos:column="31">shift<pos:position pos:line="33" pos:column="36"/></name></expr>]<pos:position pos:line="33" pos:column="37"/></index></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="39">laddr<pos:position pos:line="33" pos:column="44"/></name></expr></argument>,<argument><expr><name pos:line="33" pos:column="45">shift<pos:position pos:line="33" pos:column="50"/></name></expr></argument>)<pos:position pos:line="33" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name pos:line="34" pos:column="9">aux<pos:position pos:line="34" pos:column="12"/></name> <operator pos:line="34" pos:column="13">=<pos:position pos:line="34" pos:column="14"/></operator> <call><name pos:line="34" pos:column="15">client_entry<pos:position pos:line="34" pos:column="27"/></name><argument_list pos:line="34" pos:column="27">(<argument><expr><operator pos:line="34" pos:column="28">&amp;<pos:position pos:line="34" pos:column="33"/></operator><name pos:line="34" pos:column="29">laddr<pos:position pos:line="34" pos:column="34"/></name></expr></argument>)<pos:position pos:line="34" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="36"/></expr_stmt>
        <if pos:line="35" pos:column="9">if <condition pos:line="35" pos:column="12">(<expr><name pos:line="35" pos:column="13">aux<pos:position pos:line="35" pos:column="16"/></name></expr>)<pos:position pos:line="35" pos:column="17"/></condition><then pos:line="35" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><name pos:line="36" pos:column="13">laddr<pos:position pos:line="36" pos:column="18"/></name> <operator pos:line="36" pos:column="19">=<pos:position pos:line="36" pos:column="20"/></operator> <operator pos:line="36" pos:column="21">*<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">aux<pos:position pos:line="36" pos:column="25"/></name></expr>;<pos:position pos:line="36" pos:column="26"/></expr_stmt></block></then>
        <else pos:line="37" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="38" pos:column="13">laddr<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">.<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">setAnyAddr<pos:position pos:line="38" pos:column="29"/></name></name><argument_list pos:line="38" pos:column="29">()<pos:position pos:line="38" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="32"/></expr_stmt></block></else></if>

        <if pos:line="40" pos:column="9">if <condition pos:line="40" pos:column="12">(<expr><operator pos:line="40" pos:column="13">!<pos:position pos:line="40" pos:column="14"/></operator><call><name><name pos:line="40" pos:column="14">laddr<pos:position pos:line="40" pos:column="19"/></name><operator pos:line="40" pos:column="19">.<pos:position pos:line="40" pos:column="20"/></operator><name pos:line="40" pos:column="20">isAnyAddr<pos:position pos:line="40" pos:column="29"/></name></name><argument_list pos:line="40" pos:column="29">()<pos:position pos:line="40" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="40" pos:column="32"/></condition><then pos:line="40" pos:column="32"> <block pos:line="40" pos:column="33">{
            <if pos:line="41" pos:column="13">if <condition pos:line="41" pos:column="16">(<expr><call><name><name pos:line="41" pos:column="17">laddr<pos:position pos:line="41" pos:column="22"/></name><operator pos:line="41" pos:column="22">.<pos:position pos:line="41" pos:column="23"/></operator><name pos:line="41" pos:column="23">isIPv4<pos:position pos:line="41" pos:column="29"/></name></name><argument_list pos:line="41" pos:column="29">()<pos:position pos:line="41" pos:column="31"/></argument_list></call></expr>)<pos:position pos:line="41" pos:column="32"/></condition><then pos:line="41" pos:column="32">
                <block type="pseudo"><expr_stmt><expr><name pos:line="42" pos:column="17">newshift<pos:position pos:line="42" pos:column="25"/></name> <operator pos:line="42" pos:column="26">=<pos:position pos:line="42" pos:column="27"/></operator> <sizeof pos:line="42" pos:column="28">sizeof<argument_list pos:line="42" pos:column="34">(<argument><expr><name pos:line="42" pos:column="35">in_addr<pos:position pos:line="42" pos:column="42"/></name></expr></argument>)<pos:position pos:line="42" pos:column="43"/></argument_list></sizeof></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt></block></then>
            <else pos:line="43" pos:column="13">else
                <block type="pseudo"><expr_stmt><expr><name pos:line="44" pos:column="17">newshift<pos:position pos:line="44" pos:column="25"/></name> <operator pos:line="44" pos:column="26">=<pos:position pos:line="44" pos:column="27"/></operator> <sizeof pos:line="44" pos:column="28">sizeof<argument_list pos:line="44" pos:column="34">(<argument><expr><name pos:line="44" pos:column="35">in6_addr<pos:position pos:line="44" pos:column="43"/></name></expr></argument>)<pos:position pos:line="44" pos:column="44"/></argument_list></sizeof></expr>;<pos:position pos:line="44" pos:column="45"/></expr_stmt></block></else></if>

            <expr_stmt><expr><call><name pos:line="46" pos:column="13">debugs<pos:position pos:line="46" pos:column="19"/></name><argument_list pos:line="46" pos:column="19">(<argument><expr><literal type="number" pos:line="46" pos:column="20">49<pos:position pos:line="46" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="24">6<pos:position pos:line="46" pos:column="25"/></literal></expr></argument>, <argument><expr><name pos:line="46" pos:column="27">HERE<pos:position pos:line="46" pos:column="31"/></name> <operator pos:line="46" pos:column="32">&lt;&lt;<pos:position pos:line="46" pos:column="40"/></operator> <literal type="string" pos:line="46" pos:column="35">"len"<pos:position pos:line="46" pos:column="40"/></literal> <operator pos:line="46" pos:column="41">&lt;&lt;<pos:position pos:line="46" pos:column="49"/></operator> <operator pos:line="46" pos:column="44">*<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="45">len<pos:position pos:line="46" pos:column="48"/></name> <operator pos:line="46" pos:column="49">&lt;&lt;<pos:position pos:line="46" pos:column="57"/></operator> <literal type="string" pos:line="46" pos:column="52">", current-len"<pos:position pos:line="46" pos:column="67"/></literal> <operator pos:line="46" pos:column="68">&lt;&lt;<pos:position pos:line="46" pos:column="76"/></operator> <name><name pos:line="46" pos:column="71">current<pos:position pos:line="46" pos:column="78"/></name><operator pos:line="46" pos:column="78">-&gt;<pos:position pos:line="46" pos:column="83"/></operator><name pos:line="46" pos:column="80">len<pos:position pos:line="46" pos:column="83"/></name></name> <operator pos:line="46" pos:column="84">&lt;&lt;<pos:position pos:line="46" pos:column="92"/></operator> <literal type="string" pos:line="46" pos:column="87">", addr="<pos:position pos:line="46" pos:column="96"/></literal> <operator pos:line="46" pos:column="97">&lt;&lt;<pos:position pos:line="46" pos:column="105"/></operator> <name pos:line="46" pos:column="100">laddr<pos:position pos:line="46" pos:column="105"/></name> <operator pos:line="46" pos:column="106">&lt;&lt;<pos:position pos:line="46" pos:column="114"/></operator> <literal type="string" pos:line="46" pos:column="109">", newshift="<pos:position pos:line="46" pos:column="122"/></literal> <operator pos:line="46" pos:column="123">&lt;&lt;<pos:position pos:line="46" pos:column="131"/></operator> <name pos:line="46" pos:column="126">newshift<pos:position pos:line="46" pos:column="134"/></name></expr></argument>)<pos:position pos:line="46" pos:column="135"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="136"/></expr_stmt>

            <expr_stmt><expr><name pos:line="48" pos:column="13">instance<pos:position pos:line="48" pos:column="21"/></name> <operator pos:line="48" pos:column="22">=<pos:position pos:line="48" pos:column="23"/></operator> <operator pos:line="48" pos:column="24">(<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="25">oid<pos:position pos:line="48" pos:column="28"/></name> <operator pos:line="48" pos:column="29">*<pos:position pos:line="48" pos:column="30"/></operator><operator pos:line="48" pos:column="30">)<pos:position pos:line="48" pos:column="31"/></operator><call><name pos:line="48" pos:column="31">xmalloc<pos:position pos:line="48" pos:column="38"/></name><argument_list pos:line="48" pos:column="38">(<argument><expr><sizeof pos:line="48" pos:column="39">sizeof<argument_list pos:line="48" pos:column="45">(<argument><expr><operator pos:line="48" pos:column="46">*<pos:position pos:line="48" pos:column="47"/></operator><name pos:line="48" pos:column="47">name<pos:position pos:line="48" pos:column="51"/></name></expr></argument>)<pos:position pos:line="48" pos:column="52"/></argument_list></sizeof> <operator pos:line="48" pos:column="53">*<pos:position pos:line="48" pos:column="54"/></operator> <operator pos:line="48" pos:column="55">(<pos:position pos:line="48" pos:column="56"/></operator><name><name pos:line="48" pos:column="56">current<pos:position pos:line="48" pos:column="63"/></name><operator pos:line="48" pos:column="63">-&gt;<pos:position pos:line="48" pos:column="68"/></operator><name pos:line="48" pos:column="65">len<pos:position pos:line="48" pos:column="68"/></name></name> <operator pos:line="48" pos:column="69">+<pos:position pos:line="48" pos:column="70"/></operator>  <name pos:line="48" pos:column="72">newshift<pos:position pos:line="48" pos:column="80"/></name><operator pos:line="48" pos:column="80">)<pos:position pos:line="48" pos:column="81"/></operator></expr></argument>)<pos:position pos:line="48" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="49" pos:column="13">memcpy<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><name pos:line="49" pos:column="20">instance<pos:position pos:line="49" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="30">name<pos:position pos:line="49" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="49" pos:column="36">(<pos:position pos:line="49" pos:column="37"/></operator><sizeof pos:line="49" pos:column="37">sizeof<argument_list pos:line="49" pos:column="43">(<argument><expr><operator pos:line="49" pos:column="44">*<pos:position pos:line="49" pos:column="45"/></operator><name pos:line="49" pos:column="45">name<pos:position pos:line="49" pos:column="49"/></name></expr></argument>)<pos:position pos:line="49" pos:column="50"/></argument_list></sizeof> <operator pos:line="49" pos:column="51">*<pos:position pos:line="49" pos:column="52"/></operator> <operator pos:line="49" pos:column="53">(<pos:position pos:line="49" pos:column="54"/></operator><name><name pos:line="49" pos:column="54">current<pos:position pos:line="49" pos:column="61"/></name><operator pos:line="49" pos:column="61">-&gt;<pos:position pos:line="49" pos:column="66"/></operator><name pos:line="49" pos:column="63">len<pos:position pos:line="49" pos:column="66"/></name></name><operator pos:line="49" pos:column="66">)<pos:position pos:line="49" pos:column="67"/></operator><operator pos:line="49" pos:column="67">)<pos:position pos:line="49" pos:column="68"/></operator></expr></argument>)<pos:position pos:line="49" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="70"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="50" pos:column="13">addr2oid<pos:position pos:line="50" pos:column="21"/></name><argument_list pos:line="50" pos:column="21">(<argument><expr><name pos:line="50" pos:column="22">laddr<pos:position pos:line="50" pos:column="27"/></name></expr></argument>, <argument><expr><operator pos:line="50" pos:column="29">&amp;<pos:position pos:line="50" pos:column="34"/></operator><name><name pos:line="50" pos:column="30">instance<pos:position pos:line="50" pos:column="38"/></name><index pos:line="50" pos:column="38">[<expr><name><name pos:line="50" pos:column="39">current<pos:position pos:line="50" pos:column="46"/></name><operator pos:line="50" pos:column="46">-&gt;<pos:position pos:line="50" pos:column="51"/></operator><name pos:line="50" pos:column="48">len<pos:position pos:line="50" pos:column="51"/></name></name></expr>]<pos:position pos:line="50" pos:column="52"/></index></name></expr></argument>)<pos:position pos:line="50" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="54"/></expr_stmt>  <comment type="line" pos:line="50" pos:column="56">// the addr.</comment>
            <expr_stmt><expr><operator pos:line="51" pos:column="13">*<pos:position pos:line="51" pos:column="14"/></operator><name pos:line="51" pos:column="14">len<pos:position pos:line="51" pos:column="17"/></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <name><name pos:line="51" pos:column="20">current<pos:position pos:line="51" pos:column="27"/></name><operator pos:line="51" pos:column="27">-&gt;<pos:position pos:line="51" pos:column="32"/></operator><name pos:line="51" pos:column="29">len<pos:position pos:line="51" pos:column="32"/></name></name> <operator pos:line="51" pos:column="33">+<pos:position pos:line="51" pos:column="34"/></operator> <name pos:line="51" pos:column="35">newshift<pos:position pos:line="51" pos:column="43"/></name></expr> ;<pos:position pos:line="51" pos:column="45"/></expr_stmt>
        }<pos:position pos:line="52" pos:column="10"/></block></then></if>
    }<pos:position pos:line="53" pos:column="6"/></block></else></if>

    <expr_stmt><expr><operator pos:line="55" pos:column="5">*<pos:position pos:line="55" pos:column="6"/></operator><name pos:line="55" pos:column="6">Fn<pos:position pos:line="55" pos:column="8"/></name> <operator pos:line="55" pos:column="9">=<pos:position pos:line="55" pos:column="10"/></operator> <name><name pos:line="55" pos:column="11">current<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">parsefunction<pos:position pos:line="55" pos:column="33"/></name></name></expr>;<pos:position pos:line="55" pos:column="34"/></expr_stmt>
    <return pos:line="56" pos:column="5">return <expr><operator pos:line="56" pos:column="12">(<pos:position pos:line="56" pos:column="13"/></operator><name pos:line="56" pos:column="13">instance<pos:position pos:line="56" pos:column="21"/></name><operator pos:line="56" pos:column="21">)<pos:position pos:line="56" pos:column="22"/></operator></expr>;<pos:position pos:line="56" pos:column="23"/></return>
}<pos:position pos:line="57" pos:column="2"/></block></function></unit>

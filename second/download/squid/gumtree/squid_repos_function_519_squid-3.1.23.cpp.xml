<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_519_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type>
<name pos:line="2" pos:column="1">getoid<pos:position pos:line="2" pos:column="7"/></name><parameter_list pos:line="2" pos:column="7">(<parameter><decl><type><specifier pos:line="2" pos:column="8">register<pos:position pos:line="2" pos:column="16"/></specifier> <name pos:line="2" pos:column="17">FILE<pos:position pos:line="2" pos:column="21"/></name> <modifier pos:line="2" pos:column="22">*<pos:position pos:line="2" pos:column="23"/></modifier></type><name pos:line="2" pos:column="23">fp<pos:position pos:line="2" pos:column="25"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="27">register<pos:position pos:line="2" pos:column="35"/></specifier> <name><name pos:line="2" pos:column="36">struct<pos:position pos:line="2" pos:column="42"/></name> <name pos:line="2" pos:column="43">subid<pos:position pos:line="2" pos:column="48"/></name></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">SubOid<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">int<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">length<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">register<pos:position pos:line="4" pos:column="13"/></specifier> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type> <name pos:line="4" pos:column="18">count<pos:position pos:line="4" pos:column="23"/></name></decl>;<pos:position pos:line="4" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">type<pos:position pos:line="5" pos:column="13"/></name></decl>;<pos:position pos:line="5" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">token<pos:position pos:line="6" pos:column="15"/></name><index pos:line="6" pos:column="15">[<expr><literal type="number" pos:line="6" pos:column="16">128<pos:position pos:line="6" pos:column="19"/></literal></expr>]<pos:position pos:line="6" pos:column="20"/></index></name></decl>;<pos:position pos:line="6" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">register<pos:position pos:line="7" pos:column="13"/></specifier> <name pos:line="7" pos:column="14">char<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">cp<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">(<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">type<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <call><name pos:line="9" pos:column="17">get_token<pos:position pos:line="9" pos:column="26"/></name><argument_list pos:line="9" pos:column="26">(<argument><expr><name pos:line="9" pos:column="27">fp<pos:position pos:line="9" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="31">token<pos:position pos:line="9" pos:column="36"/></name></expr></argument>)<pos:position pos:line="9" pos:column="37"/></argument_list></call><operator pos:line="9" pos:column="37">)<pos:position pos:line="9" pos:column="38"/></operator> <operator pos:line="9" pos:column="39">!=<pos:position pos:line="9" pos:column="41"/></operator> <name pos:line="9" pos:column="42">LEFTBRACKET<pos:position pos:line="9" pos:column="53"/></name></expr>)<pos:position pos:line="9" pos:column="54"/></condition><then pos:line="9" pos:column="54"> <block pos:line="9" pos:column="55">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">print_error<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><literal type="string" pos:line="10" pos:column="21">"Expected \"{\""<pos:position pos:line="10" pos:column="37"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="39">token<pos:position pos:line="10" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="46">type<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">0<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="13" pos:column="5">type<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <call><name pos:line="13" pos:column="12">get_token<pos:position pos:line="13" pos:column="21"/></name><argument_list pos:line="13" pos:column="21">(<argument><expr><name pos:line="13" pos:column="22">fp<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="26">token<pos:position pos:line="13" pos:column="31"/></name></expr></argument>)<pos:position pos:line="13" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="33"/></expr_stmt>
    <for pos:line="14" pos:column="5">for <control pos:line="14" pos:column="9">(<init><expr><name pos:line="14" pos:column="10">count<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <literal type="number" pos:line="14" pos:column="18">0<pos:position pos:line="14" pos:column="19"/></literal></expr>;<pos:position pos:line="14" pos:column="20"/></init> <condition><expr><name pos:line="14" pos:column="21">count<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">&lt;<pos:position pos:line="14" pos:column="31"/></operator> <name pos:line="14" pos:column="29">length<pos:position pos:line="14" pos:column="35"/></name></expr>;<pos:position pos:line="14" pos:column="36"/></condition> <incr><expr><name pos:line="14" pos:column="37">count<pos:position pos:line="14" pos:column="42"/></name><operator pos:line="14" pos:column="42">++<pos:position pos:line="14" pos:column="44"/></operator></expr><operator pos:line="14" pos:column="44">,<pos:position pos:line="14" pos:column="45"/></operator> <expr><name pos:line="14" pos:column="46">SubOid<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">++<pos:position pos:line="14" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="14" pos:column="55"/></control> <block pos:line="14" pos:column="56">{
        <expr_stmt><expr><name><name pos:line="15" pos:column="9">SubOid<pos:position pos:line="15" pos:column="15"/></name><operator pos:line="15" pos:column="15">-&gt;<pos:position pos:line="15" pos:column="20"/></operator><name pos:line="15" pos:column="17">label<pos:position pos:line="15" pos:column="22"/></name></name> <operator pos:line="15" pos:column="23">=<pos:position pos:line="15" pos:column="24"/></operator> <literal type="number" pos:line="15" pos:column="25">0<pos:position pos:line="15" pos:column="26"/></literal></expr>;<pos:position pos:line="15" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="16" pos:column="9">SubOid<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">subid<pos:position pos:line="16" pos:column="22"/></name></name> <operator pos:line="16" pos:column="23">=<pos:position pos:line="16" pos:column="24"/></operator> <operator pos:line="16" pos:column="25">-<pos:position pos:line="16" pos:column="26"/></operator><literal type="number" pos:line="16" pos:column="26">1<pos:position pos:line="16" pos:column="27"/></literal></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
        <if pos:line="17" pos:column="9">if <condition pos:line="17" pos:column="12">(<expr><name pos:line="17" pos:column="13">type<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">==<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">RIGHTBRACKET<pos:position pos:line="17" pos:column="33"/></name></expr>)<pos:position pos:line="17" pos:column="34"/></condition><then pos:line="17" pos:column="34"> <block pos:line="17" pos:column="35">{
            <return pos:line="18" pos:column="13">return <expr><name pos:line="18" pos:column="20">count<pos:position pos:line="18" pos:column="25"/></name></expr>;<pos:position pos:line="18" pos:column="26"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then> <elseif pos:line="19" pos:column="11">else <if pos:line="19" pos:column="16">if <condition pos:line="19" pos:column="19">(<expr><name pos:line="19" pos:column="20">type<pos:position pos:line="19" pos:column="24"/></name> <operator pos:line="19" pos:column="25">!=<pos:position pos:line="19" pos:column="27"/></operator> <name pos:line="19" pos:column="28">LABEL<pos:position pos:line="19" pos:column="33"/></name> <operator pos:line="19" pos:column="34">&amp;&amp;<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="37">type<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">!=<pos:position pos:line="19" pos:column="44"/></operator> <name pos:line="19" pos:column="45">NUMBER<pos:position pos:line="19" pos:column="51"/></name></expr>)<pos:position pos:line="19" pos:column="52"/></condition><then pos:line="19" pos:column="52"> <block pos:line="19" pos:column="53">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">print_error<pos:position pos:line="20" pos:column="24"/></name><argument_list pos:line="20" pos:column="24">(<argument><expr><literal type="string" pos:line="20" pos:column="25">"Not valid for object identifier"<pos:position pos:line="20" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="20" pos:column="60">token<pos:position pos:line="20" pos:column="65"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="67">type<pos:position pos:line="20" pos:column="71"/></name></expr></argument>)<pos:position pos:line="20" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="73"/></expr_stmt>
            <return pos:line="21" pos:column="13">return <expr><literal type="number" pos:line="21" pos:column="20">0<pos:position pos:line="21" pos:column="21"/></literal></expr>;<pos:position pos:line="21" pos:column="22"/></return>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if></elseif></if>
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name pos:line="23" pos:column="13">type<pos:position pos:line="23" pos:column="17"/></name> <operator pos:line="23" pos:column="18">==<pos:position pos:line="23" pos:column="20"/></operator> <name pos:line="23" pos:column="21">LABEL<pos:position pos:line="23" pos:column="26"/></name></expr>)<pos:position pos:line="23" pos:column="27"/></condition><then pos:line="23" pos:column="27"> <block pos:line="23" pos:column="28">{
            <comment type="block" pos:line="24" pos:column="13">/* this entry has a label */</comment>
            <expr_stmt><expr><name pos:line="25" pos:column="13">cp<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <operator pos:line="25" pos:column="18">(<pos:position pos:line="25" pos:column="19"/></operator><name pos:line="25" pos:column="19">char<pos:position pos:line="25" pos:column="23"/></name> <operator pos:line="25" pos:column="24">*<pos:position pos:line="25" pos:column="25"/></operator><operator pos:line="25" pos:column="25">)<pos:position pos:line="25" pos:column="26"/></operator> <call><name pos:line="25" pos:column="27">xmalloc<pos:position pos:line="25" pos:column="34"/></name><argument_list pos:line="25" pos:column="34">(<argument><expr><operator pos:line="25" pos:column="35">(<pos:position pos:line="25" pos:column="36"/></operator><name pos:line="25" pos:column="36">unsigned<pos:position pos:line="25" pos:column="44"/></name><operator pos:line="25" pos:column="44">)<pos:position pos:line="25" pos:column="45"/></operator> <call><name pos:line="25" pos:column="46">strlen<pos:position pos:line="25" pos:column="52"/></name><argument_list pos:line="25" pos:column="52">(<argument><expr><name pos:line="25" pos:column="53">token<pos:position pos:line="25" pos:column="58"/></name></expr></argument>)<pos:position pos:line="25" pos:column="59"/></argument_list></call> <operator pos:line="25" pos:column="60">+<pos:position pos:line="25" pos:column="61"/></operator> <literal type="number" pos:line="25" pos:column="62">1<pos:position pos:line="25" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="25" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="65"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="26" pos:column="13">strcpy<pos:position pos:line="26" pos:column="19"/></name><argument_list pos:line="26" pos:column="19">(<argument><expr><name pos:line="26" pos:column="20">cp<pos:position pos:line="26" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="24">token<pos:position pos:line="26" pos:column="29"/></name></expr></argument>)<pos:position pos:line="26" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="31"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="27" pos:column="13">SubOid<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">-&gt;<pos:position pos:line="27" pos:column="24"/></operator><name pos:line="27" pos:column="21">label<pos:position pos:line="27" pos:column="26"/></name></name> <operator pos:line="27" pos:column="27">=<pos:position pos:line="27" pos:column="28"/></operator> <name pos:line="27" pos:column="29">cp<pos:position pos:line="27" pos:column="31"/></name></expr>;<pos:position pos:line="27" pos:column="32"/></expr_stmt>
            <expr_stmt><expr><name pos:line="28" pos:column="13">type<pos:position pos:line="28" pos:column="17"/></name> <operator pos:line="28" pos:column="18">=<pos:position pos:line="28" pos:column="19"/></operator> <call><name pos:line="28" pos:column="20">get_token<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">fp<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">token<pos:position pos:line="28" pos:column="39"/></name></expr></argument>)<pos:position pos:line="28" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="41"/></expr_stmt>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name pos:line="29" pos:column="17">type<pos:position pos:line="29" pos:column="21"/></name> <operator pos:line="29" pos:column="22">==<pos:position pos:line="29" pos:column="24"/></operator> <name pos:line="29" pos:column="25">LEFTPAREN<pos:position pos:line="29" pos:column="34"/></name></expr>)<pos:position pos:line="29" pos:column="35"/></condition><then pos:line="29" pos:column="35"> <block pos:line="29" pos:column="36">{
                <expr_stmt><expr><name pos:line="30" pos:column="17">type<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <call><name pos:line="30" pos:column="24">get_token<pos:position pos:line="30" pos:column="33"/></name><argument_list pos:line="30" pos:column="33">(<argument><expr><name pos:line="30" pos:column="34">fp<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="38">token<pos:position pos:line="30" pos:column="43"/></name></expr></argument>)<pos:position pos:line="30" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="45"/></expr_stmt>
                <if pos:line="31" pos:column="17">if <condition pos:line="31" pos:column="20">(<expr><name pos:line="31" pos:column="21">type<pos:position pos:line="31" pos:column="25"/></name> <operator pos:line="31" pos:column="26">==<pos:position pos:line="31" pos:column="28"/></operator> <name pos:line="31" pos:column="29">NUMBER<pos:position pos:line="31" pos:column="35"/></name></expr>)<pos:position pos:line="31" pos:column="36"/></condition><then pos:line="31" pos:column="36"> <block pos:line="31" pos:column="37">{
                    <expr_stmt><expr><name><name pos:line="32" pos:column="21">SubOid<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">subid<pos:position pos:line="32" pos:column="34"/></name></name> <operator pos:line="32" pos:column="35">=<pos:position pos:line="32" pos:column="36"/></operator> <call><name pos:line="32" pos:column="37">atoi<pos:position pos:line="32" pos:column="41"/></name><argument_list pos:line="32" pos:column="41">(<argument><expr><name pos:line="32" pos:column="42">token<pos:position pos:line="32" pos:column="47"/></name></expr></argument>)<pos:position pos:line="32" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="49"/></expr_stmt>
                    <if pos:line="33" pos:column="21">if <condition pos:line="33" pos:column="24">(<expr><operator pos:line="33" pos:column="25">(<pos:position pos:line="33" pos:column="26"/></operator><name pos:line="33" pos:column="26">type<pos:position pos:line="33" pos:column="30"/></name> <operator pos:line="33" pos:column="31">=<pos:position pos:line="33" pos:column="32"/></operator> <call><name pos:line="33" pos:column="33">get_token<pos:position pos:line="33" pos:column="42"/></name><argument_list pos:line="33" pos:column="42">(<argument><expr><name pos:line="33" pos:column="43">fp<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">token<pos:position pos:line="33" pos:column="52"/></name></expr></argument>)<pos:position pos:line="33" pos:column="53"/></argument_list></call><operator pos:line="33" pos:column="53">)<pos:position pos:line="33" pos:column="54"/></operator> <operator pos:line="33" pos:column="55">!=<pos:position pos:line="33" pos:column="57"/></operator> <name pos:line="33" pos:column="58">RIGHTPAREN<pos:position pos:line="33" pos:column="68"/></name></expr>)<pos:position pos:line="33" pos:column="69"/></condition><then pos:line="33" pos:column="69"> <block pos:line="33" pos:column="70">{
                        <expr_stmt><expr><call><name pos:line="34" pos:column="25">print_error<pos:position pos:line="34" pos:column="36"/></name><argument_list pos:line="34" pos:column="36">(<argument><expr><literal type="string" pos:line="34" pos:column="37">"Unexpected a closing parenthesis"<pos:position pos:line="34" pos:column="71"/></literal></expr></argument>, <argument><expr><name pos:line="34" pos:column="73">token<pos:position pos:line="34" pos:column="78"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="80">type<pos:position pos:line="34" pos:column="84"/></name></expr></argument>)<pos:position pos:line="34" pos:column="85"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="86"/></expr_stmt>
                        <return pos:line="35" pos:column="25">return <expr><literal type="number" pos:line="35" pos:column="32">0<pos:position pos:line="35" pos:column="33"/></literal></expr>;<pos:position pos:line="35" pos:column="34"/></return>
                    }<pos:position pos:line="36" pos:column="22"/></block></then></if>
                }<pos:position pos:line="37" pos:column="18"/></block></then> <else pos:line="37" pos:column="19">else <block pos:line="37" pos:column="24">{
                    <expr_stmt><expr><call><name pos:line="38" pos:column="21">print_error<pos:position pos:line="38" pos:column="32"/></name><argument_list pos:line="38" pos:column="32">(<argument><expr><literal type="string" pos:line="38" pos:column="33">"Expected a number"<pos:position pos:line="38" pos:column="52"/></literal></expr></argument>, <argument><expr><name pos:line="38" pos:column="54">token<pos:position pos:line="38" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="38" pos:column="61">type<pos:position pos:line="38" pos:column="65"/></name></expr></argument>)<pos:position pos:line="38" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="67"/></expr_stmt>
                    <return pos:line="39" pos:column="21">return <expr><literal type="number" pos:line="39" pos:column="28">0<pos:position pos:line="39" pos:column="29"/></literal></expr>;<pos:position pos:line="39" pos:column="30"/></return>
                }<pos:position pos:line="40" pos:column="18"/></block></else></if>
            }<pos:position pos:line="41" pos:column="14"/></block></then> <else pos:line="41" pos:column="15">else <block pos:line="41" pos:column="20">{
                <continue pos:line="42" pos:column="17">continue;<pos:position pos:line="42" pos:column="26"/></continue>
            }<pos:position pos:line="43" pos:column="14"/></block></else></if>
        }<pos:position pos:line="44" pos:column="10"/></block></then> <else pos:line="44" pos:column="11">else <block pos:line="44" pos:column="16">{
            <comment type="block" pos:line="45" pos:column="13">/* this entry  has just an integer sub-identifier */</comment>
            <expr_stmt><expr><name><name pos:line="46" pos:column="13">SubOid<pos:position pos:line="46" pos:column="19"/></name><operator pos:line="46" pos:column="19">-&gt;<pos:position pos:line="46" pos:column="24"/></operator><name pos:line="46" pos:column="21">subid<pos:position pos:line="46" pos:column="26"/></name></name> <operator pos:line="46" pos:column="27">=<pos:position pos:line="46" pos:column="28"/></operator> <call><name pos:line="46" pos:column="29">atoi<pos:position pos:line="46" pos:column="33"/></name><argument_list pos:line="46" pos:column="33">(<argument><expr><name pos:line="46" pos:column="34">token<pos:position pos:line="46" pos:column="39"/></name></expr></argument>)<pos:position pos:line="46" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="47" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name pos:line="48" pos:column="9">type<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <call><name pos:line="48" pos:column="16">get_token<pos:position pos:line="48" pos:column="25"/></name><argument_list pos:line="48" pos:column="25">(<argument><expr><name pos:line="48" pos:column="26">fp<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="30">token<pos:position pos:line="48" pos:column="35"/></name></expr></argument>)<pos:position pos:line="48" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="37"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></for>
    <return pos:line="50" pos:column="5">return <expr><name pos:line="50" pos:column="12">count<pos:position pos:line="50" pos:column="17"/></name></expr>;<pos:position pos:line="50" pos:column="18"/></return>


}<pos:position pos:line="53" pos:column="2"/></block></function></unit>

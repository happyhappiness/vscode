<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_908_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">comm_write_mbuf<pos:position pos:line="2" pos:column="16"/></name><parameter_list pos:line="2" pos:column="16">(<parameter><decl><type><name pos:line="2" pos:column="17">int<pos:position pos:line="2" pos:column="20"/></name></type> <name pos:line="2" pos:column="21">fd<pos:position pos:line="2" pos:column="23"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="25">MemBuf<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">mb<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">IOCB<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type> <name pos:line="2" pos:column="44">handler<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="53">void<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">handler_data<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="72"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">comm_write<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name pos:line="4" pos:column="16">fd<pos:position pos:line="4" pos:column="18"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="20">mb<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">-&gt;<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="24">buf<pos:position pos:line="4" pos:column="27"/></name></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="29">mb<pos:position pos:line="4" pos:column="31"/></name><operator pos:line="4" pos:column="31">-&gt;<pos:position pos:line="4" pos:column="36"/></operator><name pos:line="4" pos:column="33">size<pos:position pos:line="4" pos:column="37"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="39">handler<pos:position pos:line="4" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="48">handler_data<pos:position pos:line="4" pos:column="60"/></name></expr></argument>, <argument><expr><call><name><name pos:line="4" pos:column="62">mb<pos:position pos:line="4" pos:column="64"/></name><operator pos:line="4" pos:column="64">-&gt;<pos:position pos:line="4" pos:column="69"/></operator><name pos:line="4" pos:column="66">freeFunc<pos:position pos:line="4" pos:column="74"/></name></name><argument_list pos:line="4" pos:column="74">()<pos:position pos:line="4" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="78"/></expr_stmt>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

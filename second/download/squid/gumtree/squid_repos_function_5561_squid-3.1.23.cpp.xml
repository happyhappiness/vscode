<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5561_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">heap_purgeDone<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">RemovalPurgeWalker<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">walker<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="44"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">HeapPurgeData<pos:position pos:line="4" pos:column="18"/></name> <modifier pos:line="4" pos:column="19">*<pos:position pos:line="4" pos:column="20"/></modifier></type><name pos:line="4" pos:column="20">heap_walker<pos:position pos:line="4" pos:column="31"/></name> <init pos:line="4" pos:column="32">= <expr><operator pos:line="4" pos:column="34">(<pos:position pos:line="4" pos:column="35"/></operator><name pos:line="4" pos:column="35">HeapPurgeData<pos:position pos:line="4" pos:column="48"/></name> <operator pos:line="4" pos:column="49">*<pos:position pos:line="4" pos:column="50"/></operator><operator pos:line="4" pos:column="50">)<pos:position pos:line="4" pos:column="51"/></operator><name><name pos:line="4" pos:column="51">walker<pos:position pos:line="4" pos:column="57"/></name><operator pos:line="4" pos:column="57">-&gt;<pos:position pos:line="4" pos:column="62"/></operator><name pos:line="4" pos:column="59">_data<pos:position pos:line="4" pos:column="64"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="65"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">RemovalPolicy<pos:position pos:line="5" pos:column="18"/></name> <modifier pos:line="5" pos:column="19">*<pos:position pos:line="5" pos:column="20"/></modifier></type><name pos:line="5" pos:column="20">policy<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><name><name pos:line="5" pos:column="29">walker<pos:position pos:line="5" pos:column="35"/></name><operator pos:line="5" pos:column="35">-&gt;<pos:position pos:line="5" pos:column="40"/></operator><name pos:line="5" pos:column="37">_policy<pos:position pos:line="5" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="5" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HeapPolicyData<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">heap<pos:position pos:line="6" pos:column="25"/></name> <init pos:line="6" pos:column="26">= <expr><operator pos:line="6" pos:column="28">(<pos:position pos:line="6" pos:column="29"/></operator><name pos:line="6" pos:column="29">HeapPolicyData<pos:position pos:line="6" pos:column="43"/></name> <operator pos:line="6" pos:column="44">*<pos:position pos:line="6" pos:column="45"/></operator><operator pos:line="6" pos:column="45">)<pos:position pos:line="6" pos:column="46"/></operator><name><name pos:line="6" pos:column="46">policy<pos:position pos:line="6" pos:column="52"/></name><operator pos:line="6" pos:column="52">-&gt;<pos:position pos:line="6" pos:column="57"/></operator><name pos:line="6" pos:column="54">_data<pos:position pos:line="6" pos:column="59"/></name></name></expr></init></decl>;<pos:position pos:line="6" pos:column="60"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">StoreEntry<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">entry<pos:position pos:line="7" pos:column="22"/></name></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">assert<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><call><name pos:line="8" pos:column="12">strcmp<pos:position pos:line="8" pos:column="18"/></name><argument_list pos:line="8" pos:column="18">(<argument><expr><name><name pos:line="8" pos:column="19">policy<pos:position pos:line="8" pos:column="25"/></name><operator pos:line="8" pos:column="25">-&gt;<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="27">_type<pos:position pos:line="8" pos:column="32"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="34">"heap"<pos:position pos:line="8" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="41"/></argument_list></call> <operator pos:line="8" pos:column="42">==<pos:position pos:line="8" pos:column="44"/></operator> <literal type="number" pos:line="8" pos:column="45">0<pos:position pos:line="8" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name><name pos:line="9" pos:column="12">heap<pos:position pos:line="9" pos:column="16"/></name><operator pos:line="9" pos:column="16">-&gt;<pos:position pos:line="9" pos:column="21"/></operator><name pos:line="9" pos:column="18">nwalkers<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">&gt;<pos:position pos:line="9" pos:column="31"/></operator> <literal type="number" pos:line="9" pos:column="29">0<pos:position pos:line="9" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">heap<pos:position pos:line="10" pos:column="9"/></name><operator pos:line="10" pos:column="9">-&gt;<pos:position pos:line="10" pos:column="14"/></operator><name pos:line="10" pos:column="11">nwalkers<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">-=<pos:position pos:line="10" pos:column="22"/></operator> <literal type="number" pos:line="10" pos:column="23">1<pos:position pos:line="10" pos:column="24"/></literal></expr>;<pos:position pos:line="10" pos:column="25"/></expr_stmt>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">heap_walker<pos:position pos:line="12" pos:column="20"/></name><operator pos:line="12" pos:column="20">-&gt;<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="22">min_age<pos:position pos:line="12" pos:column="29"/></name></name> <operator pos:line="12" pos:column="30">&gt;<pos:position pos:line="12" pos:column="34"/></operator> <literal type="number" pos:line="12" pos:column="32">0<pos:position pos:line="12" pos:column="33"/></literal></expr>)<pos:position pos:line="12" pos:column="34"/></condition><then pos:line="12" pos:column="34"> <block pos:line="12" pos:column="35">{
        <expr_stmt><expr><name><name pos:line="13" pos:column="9">heap<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">-&gt;<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="15">theHeap<pos:position pos:line="13" pos:column="22"/></name><operator pos:line="13" pos:column="22">-&gt;<pos:position pos:line="13" pos:column="27"/></operator><name pos:line="13" pos:column="24">age<pos:position pos:line="13" pos:column="27"/></name></name> <operator pos:line="13" pos:column="28">=<pos:position pos:line="13" pos:column="29"/></operator> <name><name pos:line="13" pos:column="30">heap_walker<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">-&gt;<pos:position pos:line="13" pos:column="46"/></operator><name pos:line="13" pos:column="43">min_age<pos:position pos:line="13" pos:column="50"/></name></name></expr>;<pos:position pos:line="13" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">81<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="20">3<pos:position pos:line="14" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="23">"heap_purgeDone: Heap age set to "<pos:position pos:line="14" pos:column="57"/></literal> <operator pos:line="14" pos:column="58">&lt;&lt;<pos:position pos:line="14" pos:column="66"/></operator> <name><name pos:line="14" pos:column="61">heap<pos:position pos:line="14" pos:column="65"/></name><operator pos:line="14" pos:column="65">-&gt;<pos:position pos:line="14" pos:column="70"/></operator><name pos:line="14" pos:column="67">theHeap<pos:position pos:line="14" pos:column="74"/></name><operator pos:line="14" pos:column="74">-&gt;<pos:position pos:line="14" pos:column="79"/></operator><name pos:line="14" pos:column="76">age<pos:position pos:line="14" pos:column="79"/></name></name></expr></argument>  )<pos:position pos:line="14" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="83"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="17" pos:column="5">/*
     * Reinsert the locked entries
     */</comment>
    <while pos:line="20" pos:column="5">while <condition pos:line="20" pos:column="11">(<expr><operator pos:line="20" pos:column="12">(<pos:position pos:line="20" pos:column="13"/></operator><name pos:line="20" pos:column="13">entry<pos:position pos:line="20" pos:column="18"/></name> <operator pos:line="20" pos:column="19">=<pos:position pos:line="20" pos:column="20"/></operator> <operator pos:line="20" pos:column="21">(<pos:position pos:line="20" pos:column="22"/></operator><name pos:line="20" pos:column="22">StoreEntry<pos:position pos:line="20" pos:column="32"/></name> <operator pos:line="20" pos:column="33">*<pos:position pos:line="20" pos:column="34"/></operator><operator pos:line="20" pos:column="34">)<pos:position pos:line="20" pos:column="35"/></operator><call><name pos:line="20" pos:column="35">linklistShift<pos:position pos:line="20" pos:column="48"/></name><argument_list pos:line="20" pos:column="48">(<argument><expr><operator pos:line="20" pos:column="49">&amp;<pos:position pos:line="20" pos:column="54"/></operator><name><name pos:line="20" pos:column="50">heap_walker<pos:position pos:line="20" pos:column="61"/></name><operator pos:line="20" pos:column="61">-&gt;<pos:position pos:line="20" pos:column="66"/></operator><name pos:line="20" pos:column="63">locked_entries<pos:position pos:line="20" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="20" pos:column="78"/></argument_list></call><operator pos:line="20" pos:column="78">)<pos:position pos:line="20" pos:column="79"/></operator></expr>)<pos:position pos:line="20" pos:column="80"/></condition> <block pos:line="20" pos:column="81">{
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">heap_node<pos:position pos:line="21" pos:column="18"/></name> <modifier pos:line="21" pos:column="19">*<pos:position pos:line="21" pos:column="20"/></modifier></type><name pos:line="21" pos:column="20">node<pos:position pos:line="21" pos:column="24"/></name> <init pos:line="21" pos:column="25">= <expr><call><name pos:line="21" pos:column="27">heap_insert<pos:position pos:line="21" pos:column="38"/></name><argument_list pos:line="21" pos:column="38">(<argument><expr><name><name pos:line="21" pos:column="39">heap<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">-&gt;<pos:position pos:line="21" pos:column="48"/></operator><name pos:line="21" pos:column="45">theHeap<pos:position pos:line="21" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="54">entry<pos:position pos:line="21" pos:column="59"/></name></expr></argument>)<pos:position pos:line="21" pos:column="60"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="61"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">heap<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">-&gt;<pos:position pos:line="22" pos:column="18"/></operator><name pos:line="22" pos:column="15">setPolicyNode<pos:position pos:line="22" pos:column="28"/></name></name><argument_list pos:line="22" pos:column="28">(<argument><expr><name pos:line="22" pos:column="29">entry<pos:position pos:line="22" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="36">node<pos:position pos:line="22" pos:column="40"/></name></expr></argument>)<pos:position pos:line="22" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="23" pos:column="9">entry<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">-&gt;<pos:position pos:line="23" pos:column="19"/></operator><name pos:line="23" pos:column="16">unlock<pos:position pos:line="23" pos:column="22"/></name></name><argument_list pos:line="23" pos:column="22">()<pos:position pos:line="23" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="25"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">safe_free<pos:position pos:line="26" pos:column="14"/></name><argument_list pos:line="26" pos:column="14">(<argument><expr><name><name pos:line="26" pos:column="15">walker<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">_data<pos:position pos:line="26" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="26" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="27" pos:column="5">delete<pos:position pos:line="27" pos:column="11"/></operator> <name pos:line="27" pos:column="12">walker<pos:position pos:line="27" pos:column="18"/></name></expr>;<pos:position pos:line="27" pos:column="19"/></expr_stmt>
}<pos:position pos:line="28" pos:column="2"/></block></function></unit>

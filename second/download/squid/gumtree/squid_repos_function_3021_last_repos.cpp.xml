<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3021_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ConnStateData<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">consumeInput<pos:position pos:line="2" pos:column="28"/></name></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><specifier pos:line="2" pos:column="29">const<pos:position pos:line="2" pos:column="34"/></specifier> <name pos:line="2" pos:column="35">size_t<pos:position pos:line="2" pos:column="41"/></name></type> <name pos:line="2" pos:column="42">byteCount<pos:position pos:line="2" pos:column="51"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="52"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">byteCount<pos:position pos:line="4" pos:column="21"/></name> <operator pos:line="4" pos:column="22">&gt;<pos:position pos:line="4" pos:column="26"/></operator> <literal type="number" pos:line="4" pos:column="24">0<pos:position pos:line="4" pos:column="25"/></literal> <operator pos:line="4" pos:column="26">&amp;&amp;<pos:position pos:line="4" pos:column="36"/></operator> <name pos:line="4" pos:column="29">byteCount<pos:position pos:line="4" pos:column="38"/></name> <operator pos:line="4" pos:column="39">&lt;=<pos:position pos:line="4" pos:column="44"/></operator> <call><name><name pos:line="4" pos:column="42">inBuf<pos:position pos:line="4" pos:column="47"/></name><operator pos:line="4" pos:column="47">.<pos:position pos:line="4" pos:column="48"/></operator><name pos:line="4" pos:column="48">length<pos:position pos:line="4" pos:column="54"/></name></name><argument_list pos:line="4" pos:column="54">()<pos:position pos:line="4" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="58"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="5" pos:column="5">inBuf<pos:position pos:line="5" pos:column="10"/></name><operator pos:line="5" pos:column="10">.<pos:position pos:line="5" pos:column="11"/></operator><name pos:line="5" pos:column="11">consume<pos:position pos:line="5" pos:column="18"/></name></name><argument_list pos:line="5" pos:column="18">(<argument><expr><name pos:line="5" pos:column="19">byteCount<pos:position pos:line="5" pos:column="28"/></name></expr></argument>)<pos:position pos:line="5" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">33<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">5<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"inBuf has "<pos:position pos:line="6" pos:column="31"/></literal> <operator pos:line="6" pos:column="32">&lt;&lt;<pos:position pos:line="6" pos:column="40"/></operator> <call><name><name pos:line="6" pos:column="35">inBuf<pos:position pos:line="6" pos:column="40"/></name><operator pos:line="6" pos:column="40">.<pos:position pos:line="6" pos:column="41"/></operator><name pos:line="6" pos:column="41">length<pos:position pos:line="6" pos:column="47"/></name></name><argument_list pos:line="6" pos:column="47">()<pos:position pos:line="6" pos:column="49"/></argument_list></call> <operator pos:line="6" pos:column="50">&lt;&lt;<pos:position pos:line="6" pos:column="58"/></operator> <literal type="string" pos:line="6" pos:column="53">" unused bytes"<pos:position pos:line="6" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="70"/></expr_stmt>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

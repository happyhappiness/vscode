<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6618_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ESISegment<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">dumpToLog<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">()<pos:position pos:line="2" pos:column="24"/></parameter_list> <specifier pos:line="2" pos:column="25">const<pos:position pos:line="2" pos:column="30"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">ESISegment<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">Pointer<pos:position pos:line="4" pos:column="24"/></name></name></type> <name pos:line="4" pos:column="25">temp<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name pos:line="4" pos:column="32">this<pos:position pos:line="4" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="37"/></decl_stmt>

    <while pos:line="6" pos:column="5">while <condition pos:line="6" pos:column="11">(<expr><call><name><name pos:line="6" pos:column="12">temp<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">.<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="17">getRaw<pos:position pos:line="6" pos:column="23"/></name></name><argument_list pos:line="6" pos:column="23">()<pos:position pos:line="6" pos:column="25"/></argument_list></call></expr>)<pos:position pos:line="6" pos:column="26"/></condition> <block pos:line="6" pos:column="27">{
        <expr_stmt><expr><call><name><name pos:line="7" pos:column="9">temp<pos:position pos:line="7" pos:column="13"/></name><operator pos:line="7" pos:column="13">-&gt;<pos:position pos:line="7" pos:column="18"/></operator><name pos:line="7" pos:column="15">dumpOne<pos:position pos:line="7" pos:column="22"/></name></name><argument_list pos:line="7" pos:column="22">()<pos:position pos:line="7" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><name pos:line="8" pos:column="9">temp<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <name><name pos:line="8" pos:column="16">temp<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">next<pos:position pos:line="8" pos:column="26"/></name></name></expr>;<pos:position pos:line="8" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="9" pos:column="6"/></block></while>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

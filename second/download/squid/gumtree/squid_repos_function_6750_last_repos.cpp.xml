<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6750_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">ElementList<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">setNULL<pos:position pos:line="2" pos:column="21"/></name></name> <parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">start<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">end<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">start<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">&gt;=<pos:position pos:line="4" pos:column="24"/></operator> <literal type="number" pos:line="4" pos:column="22">0<pos:position pos:line="4" pos:column="23"/></literal> <operator pos:line="4" pos:column="24">&amp;&amp;<pos:position pos:line="4" pos:column="34"/></operator> <name pos:line="4" pos:column="27">start<pos:position pos:line="4" pos:column="32"/></name> <operator pos:line="4" pos:column="33">&lt;=<pos:position pos:line="4" pos:column="38"/></operator> <name pos:line="4" pos:column="36">elementcount<pos:position pos:line="4" pos:column="48"/></name></expr></argument>)<pos:position pos:line="4" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="50"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">end<pos:position pos:line="5" pos:column="16"/></name> <operator pos:line="5" pos:column="17">&gt;=<pos:position pos:line="5" pos:column="22"/></operator> <literal type="number" pos:line="5" pos:column="20">0<pos:position pos:line="5" pos:column="21"/></literal> <operator pos:line="5" pos:column="22">&amp;&amp;<pos:position pos:line="5" pos:column="32"/></operator> <name pos:line="5" pos:column="25">end<pos:position pos:line="5" pos:column="28"/></name> <operator pos:line="5" pos:column="29">&lt;=<pos:position pos:line="5" pos:column="34"/></operator> <name pos:line="5" pos:column="32">elementcount<pos:position pos:line="5" pos:column="44"/></name></expr></argument>)<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="46"/></expr_stmt>

    <for pos:line="7" pos:column="5">for <control pos:line="7" pos:column="9">(<init><decl><type><name pos:line="7" pos:column="10">int<pos:position pos:line="7" pos:column="13"/></name></type> <name pos:line="7" pos:column="14">loopPosition<pos:position pos:line="7" pos:column="26"/></name> <init pos:line="7" pos:column="27">= <expr><name pos:line="7" pos:column="29">start<pos:position pos:line="7" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="35"/></init> <condition><expr><name pos:line="7" pos:column="36">loopPosition<pos:position pos:line="7" pos:column="48"/></name> <operator pos:line="7" pos:column="49">&lt;<pos:position pos:line="7" pos:column="53"/></operator> <name pos:line="7" pos:column="51">end<pos:position pos:line="7" pos:column="54"/></name></expr>;<pos:position pos:line="7" pos:column="55"/></condition> <incr><expr><operator pos:line="7" pos:column="56">++<pos:position pos:line="7" pos:column="58"/></operator><name pos:line="7" pos:column="58">loopPosition<pos:position pos:line="7" pos:column="70"/></name></expr></incr>)<pos:position pos:line="7" pos:column="71"/></control> <block pos:line="7" pos:column="72">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">elements<pos:position pos:line="8" pos:column="21"/></name><index pos:line="8" pos:column="21">[<expr><name pos:line="8" pos:column="22">loopPosition<pos:position pos:line="8" pos:column="34"/></name></expr>]<pos:position pos:line="8" pos:column="35"/></index></name><operator pos:line="8" pos:column="35">.<pos:position pos:line="8" pos:column="36"/></operator><call><name pos:line="8" pos:column="36">getRaw<pos:position pos:line="8" pos:column="42"/></name><argument_list pos:line="8" pos:column="42">()<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="45"/></condition><then pos:line="8" pos:column="45">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="9" pos:column="13">elements<pos:position pos:line="9" pos:column="21"/></name><index pos:line="9" pos:column="21">[<expr><name pos:line="9" pos:column="22">loopPosition<pos:position pos:line="9" pos:column="34"/></name></expr>]<pos:position pos:line="9" pos:column="35"/></index></name><operator pos:line="9" pos:column="35">-&gt;<pos:position pos:line="9" pos:column="40"/></operator><call><name pos:line="9" pos:column="37">finish<pos:position pos:line="9" pos:column="43"/></name><argument_list pos:line="9" pos:column="43">()<pos:position pos:line="9" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="46"/></expr_stmt></block></then></if>

        <expr_stmt><expr><call><name pos:line="11" pos:column="9">debugs<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><literal type="number" pos:line="11" pos:column="16">86<pos:position pos:line="11" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="20">5<pos:position pos:line="11" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="23">"esiSequence::NULLElements: Setting index "<pos:position pos:line="11" pos:column="66"/></literal> <operator pos:line="11" pos:column="67">&lt;&lt;<pos:position pos:line="11" pos:column="75"/></operator>
               <name pos:line="12" pos:column="16">loopPosition<pos:position pos:line="12" pos:column="28"/></name> <operator pos:line="12" pos:column="29">&lt;&lt;<pos:position pos:line="12" pos:column="37"/></operator> <literal type="string" pos:line="12" pos:column="32">", pointer "<pos:position pos:line="12" pos:column="44"/></literal> <operator pos:line="12" pos:column="45">&lt;&lt;<pos:position pos:line="12" pos:column="53"/></operator>
               <name><name pos:line="13" pos:column="16">elements<pos:position pos:line="13" pos:column="24"/></name><index pos:line="13" pos:column="24">[<expr><name pos:line="13" pos:column="25">loopPosition<pos:position pos:line="13" pos:column="37"/></name></expr>]<pos:position pos:line="13" pos:column="38"/></index></name><operator pos:line="13" pos:column="38">.<pos:position pos:line="13" pos:column="39"/></operator><call><name pos:line="13" pos:column="39">getRaw<pos:position pos:line="13" pos:column="45"/></name><argument_list pos:line="13" pos:column="45">()<pos:position pos:line="13" pos:column="47"/></argument_list></call> <operator pos:line="13" pos:column="48">&lt;&lt;<pos:position pos:line="13" pos:column="56"/></operator> <literal type="string" pos:line="13" pos:column="51">" to NULL"<pos:position pos:line="13" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="63"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="15" pos:column="9">elements<pos:position pos:line="15" pos:column="17"/></name><index pos:line="15" pos:column="17">[<expr><name pos:line="15" pos:column="18">loopPosition<pos:position pos:line="15" pos:column="30"/></name></expr>]<pos:position pos:line="15" pos:column="31"/></index></name> <operator pos:line="15" pos:column="32">=<pos:position pos:line="15" pos:column="33"/></operator> <name pos:line="15" pos:column="34">NULL<pos:position pos:line="15" pos:column="38"/></name></expr>;<pos:position pos:line="15" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="16" pos:column="6"/></block></for>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5371_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">esiTry<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">fail<pos:position pos:line="2" pos:column="13"/></name></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">ESIElement<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">source<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">char<pos:position pos:line="2" pos:column="38"/></name> <specifier pos:line="2" pos:column="39">const<pos:position pos:line="2" pos:column="44"/></specifier> <modifier pos:line="2" pos:column="45">*<pos:position pos:line="2" pos:column="46"/></modifier></type><name pos:line="2" pos:column="46">anError<pos:position pos:line="2" pos:column="53"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="54"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name> <argument_list pos:line="4" pos:column="12">(<argument><expr><name pos:line="4" pos:column="13">source<pos:position pos:line="4" pos:column="19"/></name></expr></argument>)<pos:position pos:line="4" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="5" pos:column="5">assert<pos:position pos:line="5" pos:column="11"/></name> <argument_list pos:line="5" pos:column="12">(<argument><expr><name pos:line="5" pos:column="13">source<pos:position pos:line="5" pos:column="19"/></name> <operator pos:line="5" pos:column="20">==<pos:position pos:line="5" pos:column="22"/></operator> <name pos:line="5" pos:column="23">attempt<pos:position pos:line="5" pos:column="30"/></name> <operator pos:line="5" pos:column="31">||<pos:position pos:line="5" pos:column="33"/></operator> <name pos:line="5" pos:column="34">source<pos:position pos:line="5" pos:column="40"/></name> <operator pos:line="5" pos:column="41">==<pos:position pos:line="5" pos:column="43"/></operator> <name pos:line="5" pos:column="44">except<pos:position pos:line="5" pos:column="50"/></name></expr></argument>)<pos:position pos:line="5" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">86<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">5<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="19">"esiTry::fail: this="<pos:position pos:line="6" pos:column="40"/></literal> <operator pos:line="6" pos:column="41">&lt;&lt;<pos:position pos:line="6" pos:column="49"/></operator> <name pos:line="6" pos:column="44">this<pos:position pos:line="6" pos:column="48"/></name> <operator pos:line="6" pos:column="49">&lt;&lt;<pos:position pos:line="6" pos:column="57"/></operator> <literal type="string" pos:line="6" pos:column="52">", source="<pos:position pos:line="6" pos:column="63"/></literal> <operator pos:line="6" pos:column="64">&lt;&lt;<pos:position pos:line="6" pos:column="72"/></operator> <name pos:line="6" pos:column="67">source<pos:position pos:line="6" pos:column="73"/></name> <operator pos:line="6" pos:column="74">&lt;&lt;<pos:position pos:line="6" pos:column="82"/></operator> <literal type="string" pos:line="6" pos:column="77">", message="<pos:position pos:line="6" pos:column="89"/></literal> <operator pos:line="6" pos:column="90">&lt;&lt;<pos:position pos:line="6" pos:column="98"/></operator> <name pos:line="6" pos:column="93">anError<pos:position pos:line="6" pos:column="100"/></name></expr></argument>)<pos:position pos:line="6" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="102"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">source<pos:position pos:line="8" pos:column="15"/></name> <operator pos:line="8" pos:column="16">==<pos:position pos:line="8" pos:column="18"/></operator> <name pos:line="8" pos:column="19">except<pos:position pos:line="8" pos:column="25"/></name></expr>)<pos:position pos:line="8" pos:column="26"/></condition><then pos:line="8" pos:column="26"> <block pos:line="8" pos:column="27">{
        <expr_stmt><expr><name><name pos:line="9" pos:column="9">flags<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">.<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">exceptfailed<pos:position pos:line="9" pos:column="27"/></name></name> <operator pos:line="9" pos:column="28">=<pos:position pos:line="9" pos:column="29"/></operator> <literal type="number" pos:line="9" pos:column="30">1<pos:position pos:line="9" pos:column="31"/></literal></expr>;<pos:position pos:line="9" pos:column="32"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then> <else pos:line="10" pos:column="7">else <block pos:line="10" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="11" pos:column="9">flags<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">.<pos:position pos:line="11" pos:column="15"/></operator><name pos:line="11" pos:column="15">attemptfailed<pos:position pos:line="11" pos:column="28"/></name></name> <operator pos:line="11" pos:column="29">=<pos:position pos:line="11" pos:column="30"/></operator> <literal type="number" pos:line="11" pos:column="31">1<pos:position pos:line="11" pos:column="32"/></literal></expr>;<pos:position pos:line="11" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="12" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">notifyParent<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">()<pos:position pos:line="14" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="20"/></expr_stmt>
}<pos:position pos:line="15" pos:column="2"/></block></function></unit>

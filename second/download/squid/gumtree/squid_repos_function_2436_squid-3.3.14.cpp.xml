<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2436_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">fail<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">ErrorState<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">*<pos:position pos:line="2" pos:column="28"/></modifier></type> <name pos:line="2" pos:column="29">errorState<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">17<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="16">3<pos:position pos:line="4" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="4" pos:column="19">HERE<pos:position pos:line="4" pos:column="23"/></name> <operator pos:line="4" pos:column="24">&lt;&lt;<pos:position pos:line="4" pos:column="32"/></operator> <name><name pos:line="4" pos:column="27">err_type_str<pos:position pos:line="4" pos:column="39"/></name><index pos:line="4" pos:column="39">[<expr><name><name pos:line="4" pos:column="40">errorState<pos:position pos:line="4" pos:column="50"/></name><operator pos:line="4" pos:column="50">-&gt;<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="52">type<pos:position pos:line="4" pos:column="56"/></name></name></expr>]<pos:position pos:line="4" pos:column="57"/></index></name> <operator pos:line="4" pos:column="58">&lt;&lt;<pos:position pos:line="4" pos:column="66"/></operator> <literal type="string" pos:line="4" pos:column="61">" \""<pos:position pos:line="4" pos:column="66"/></literal> <operator pos:line="4" pos:column="67">&lt;&lt;<pos:position pos:line="4" pos:column="75"/></operator> <call><name pos:line="4" pos:column="70">httpStatusString<pos:position pos:line="4" pos:column="86"/></name><argument_list pos:line="4" pos:column="86">(<argument><expr><name><name pos:line="4" pos:column="87">errorState<pos:position pos:line="4" pos:column="97"/></name><operator pos:line="4" pos:column="97">-&gt;<pos:position pos:line="4" pos:column="102"/></operator><name pos:line="4" pos:column="99">httpStatus<pos:position pos:line="4" pos:column="109"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="110"/></argument_list></call> <operator pos:line="4" pos:column="111">&lt;&lt;<pos:position pos:line="4" pos:column="119"/></operator> <literal type="string" pos:line="4" pos:column="114">"\"\n\t"<pos:position pos:line="4" pos:column="122"/></literal> <operator pos:line="4" pos:column="123">&lt;&lt;<pos:position pos:line="4" pos:column="131"/></operator> <call><name><name pos:line="4" pos:column="126">entry<pos:position pos:line="4" pos:column="131"/></name><operator pos:line="4" pos:column="131">-&gt;<pos:position pos:line="4" pos:column="136"/></operator><name pos:line="4" pos:column="133">url<pos:position pos:line="4" pos:column="136"/></name></name><argument_list pos:line="4" pos:column="136">()<pos:position pos:line="4" pos:column="138"/></argument_list></call></expr></argument>  )<pos:position pos:line="4" pos:column="141"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="142"/></expr_stmt>

    <expr_stmt><expr><operator pos:line="6" pos:column="5">delete<pos:position pos:line="6" pos:column="11"/></operator> <name pos:line="6" pos:column="12">err<pos:position pos:line="6" pos:column="15"/></name></expr>;<pos:position pos:line="6" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">err<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <name pos:line="7" pos:column="11">errorState<pos:position pos:line="7" pos:column="21"/></name></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name><name pos:line="9" pos:column="10">errorState<pos:position pos:line="9" pos:column="20"/></name><operator pos:line="9" pos:column="20">-&gt;<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="22">request<pos:position pos:line="9" pos:column="29"/></name></name></expr>)<pos:position pos:line="9" pos:column="30"/></condition><then pos:line="9" pos:column="30">
        <block type="pseudo"><expr_stmt><expr><name><name pos:line="10" pos:column="9">errorState<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">request<pos:position pos:line="10" pos:column="28"/></name></name> <operator pos:line="10" pos:column="29">=<pos:position pos:line="10" pos:column="30"/></operator> <call><name pos:line="10" pos:column="31">HTTPMSGLOCK<pos:position pos:line="10" pos:column="42"/></name><argument_list pos:line="10" pos:column="42">(<argument><expr><name pos:line="10" pos:column="43">request<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="52"/></expr_stmt></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><name><name pos:line="12" pos:column="9">err<pos:position pos:line="12" pos:column="12"/></name><operator pos:line="12" pos:column="12">-&gt;<pos:position pos:line="12" pos:column="17"/></operator><name pos:line="12" pos:column="14">type<pos:position pos:line="12" pos:column="18"/></name></name> <operator pos:line="12" pos:column="19">!=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">ERR_ZERO_SIZE_OBJECT<pos:position pos:line="12" pos:column="42"/></name></expr>)<pos:position pos:line="12" pos:column="43"/></condition><then pos:line="12" pos:column="43">
        <block type="pseudo"><return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return></block></then></if>

    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">pconnRace<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">==<pos:position pos:line="15" pos:column="21"/></operator> <name pos:line="15" pos:column="22">racePossible<pos:position pos:line="15" pos:column="34"/></name></expr>)<pos:position pos:line="15" pos:column="35"/></condition><then pos:line="15" pos:column="35"> <block pos:line="15" pos:column="36">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">17<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="20">5<pos:position pos:line="16" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="16" pos:column="23">HERE<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">&lt;&lt;<pos:position pos:line="16" pos:column="36"/></operator> <literal type="string" pos:line="16" pos:column="31">"pconn race happened"<pos:position pos:line="16" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="54"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">pconnRace<pos:position pos:line="17" pos:column="18"/></name> <operator pos:line="17" pos:column="19">=<pos:position pos:line="17" pos:column="20"/></operator> <name pos:line="17" pos:column="21">raceHappened<pos:position pos:line="17" pos:column="33"/></name></expr>;<pos:position pos:line="17" pos:column="34"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<decl><type><name pos:line="20" pos:column="9">ConnStateData<pos:position pos:line="20" pos:column="22"/></name> <modifier pos:line="20" pos:column="23">*<pos:position pos:line="20" pos:column="24"/></modifier></type><name pos:line="20" pos:column="24">pinned_connection<pos:position pos:line="20" pos:column="41"/></name> <init pos:line="20" pos:column="42">= <expr><call><name><name pos:line="20" pos:column="44">request<pos:position pos:line="20" pos:column="51"/></name><operator pos:line="20" pos:column="51">-&gt;<pos:position pos:line="20" pos:column="56"/></operator><name pos:line="20" pos:column="53">pinnedConnection<pos:position pos:line="20" pos:column="69"/></name></name><argument_list pos:line="20" pos:column="69">()<pos:position pos:line="20" pos:column="71"/></argument_list></call></expr></init></decl>)<pos:position pos:line="20" pos:column="72"/></condition><then pos:line="20" pos:column="72"> <block pos:line="20" pos:column="73">{
        <expr_stmt><expr><name><name pos:line="21" pos:column="9">pinned_connection<pos:position pos:line="21" pos:column="26"/></name><operator pos:line="21" pos:column="26">-&gt;<pos:position pos:line="21" pos:column="31"/></operator><name pos:line="21" pos:column="28">pinning<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">.<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="36">zeroReply<pos:position pos:line="21" pos:column="45"/></name></name> <operator pos:line="21" pos:column="46">=<pos:position pos:line="21" pos:column="47"/></operator> <literal type="boolean" pos:line="21" pos:column="48">true<pos:position pos:line="21" pos:column="52"/></literal></expr>;<pos:position pos:line="21" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">flags<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">.<pos:position pos:line="22" pos:column="15"/></operator><name pos:line="22" pos:column="15">dont_retry<pos:position pos:line="22" pos:column="25"/></name></name> <operator pos:line="22" pos:column="26">=<pos:position pos:line="22" pos:column="27"/></operator> <literal type="boolean" pos:line="22" pos:column="28">true<pos:position pos:line="22" pos:column="32"/></literal></expr>;<pos:position pos:line="22" pos:column="33"/></expr_stmt> <comment type="line" pos:line="22" pos:column="34">// we want to propagate failure to the client</comment>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">17<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="20">4<pos:position pos:line="23" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="23">"zero reply on pinned connection"<pos:position pos:line="23" pos:column="56"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="58"/></expr_stmt>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

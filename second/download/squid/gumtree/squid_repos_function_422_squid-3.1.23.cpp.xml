<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_422_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">main<pos:position pos:line="2" pos:column="5"/></name><parameter_list pos:line="2" pos:column="5">(<parameter><decl><type><name pos:line="2" pos:column="6">int<pos:position pos:line="2" pos:column="9"/></name></type> <name pos:line="2" pos:column="10">argc<pos:position pos:line="2" pos:column="14"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="16">char<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type><name><name pos:line="2" pos:column="22">argv<pos:position pos:line="2" pos:column="26"/></name><index pos:line="2" pos:column="26">[]<pos:position pos:line="2" pos:column="28"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">pam_handle_t<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">pamh<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">NULL<pos:position pos:line="4" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="31"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">retval<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">PAM_SUCCESS<pos:position pos:line="5" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">user<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">password_buf<pos:position pos:line="7" pos:column="23"/></name></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name></type> <name><name pos:line="8" pos:column="10">buf<pos:position pos:line="8" pos:column="13"/></name><index pos:line="8" pos:column="13">[<expr><name pos:line="8" pos:column="14">BUFSIZE<pos:position pos:line="8" pos:column="21"/></name></expr>]<pos:position pos:line="8" pos:column="22"/></index></name></decl>;<pos:position pos:line="8" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">time_t<pos:position pos:line="9" pos:column="11"/></name></type> <name pos:line="9" pos:column="12">pamh_created<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><literal type="number" pos:line="9" pos:column="27">0<pos:position pos:line="9" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="9" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">ttl<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><name pos:line="10" pos:column="15">DEFAULT_SQUID_PAM_TTL<pos:position pos:line="10" pos:column="36"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="11" pos:column="5">const<pos:position pos:line="11" pos:column="10"/></specifier> <name pos:line="11" pos:column="11">char<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">service<pos:position pos:line="11" pos:column="24"/></name> <init pos:line="11" pos:column="25">= <expr><name pos:line="11" pos:column="27">DEFAULT_SQUID_PAM_SERVICE<pos:position pos:line="11" pos:column="52"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="53"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">int<pos:position pos:line="12" pos:column="8"/></name></type> <name pos:line="12" pos:column="9">no_acct_mgmt<pos:position pos:line="12" pos:column="21"/></name> <init pos:line="12" pos:column="22">= <expr><literal type="number" pos:line="12" pos:column="24">0<pos:position pos:line="12" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="26"/></decl_stmt>

    <comment type="block" pos:line="14" pos:column="5">/* make standard output line buffered */</comment>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">setvbuf<pos:position pos:line="15" pos:column="12"/></name><argument_list pos:line="15" pos:column="12">(<argument><expr><name pos:line="15" pos:column="13">stdout<pos:position pos:line="15" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="21">NULL<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="27">_IOLBF<pos:position pos:line="15" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="35">0<pos:position pos:line="15" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="38"/></expr_stmt>

    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><literal type="number" pos:line="17" pos:column="12">1<pos:position pos:line="17" pos:column="13"/></literal></expr>)<pos:position pos:line="17" pos:column="14"/></condition> <block pos:line="17" pos:column="15">{
        <decl_stmt><decl><type><name pos:line="18" pos:column="9">int<pos:position pos:line="18" pos:column="12"/></name></type> <name pos:line="18" pos:column="13">ch<pos:position pos:line="18" pos:column="15"/></name> <init pos:line="18" pos:column="16">= <expr><call><name pos:line="18" pos:column="18">getopt<pos:position pos:line="18" pos:column="24"/></name><argument_list pos:line="18" pos:column="24">(<argument><expr><name pos:line="18" pos:column="25">argc<pos:position pos:line="18" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="18" pos:column="31">argv<pos:position pos:line="18" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="37">"1n:t:o"<pos:position pos:line="18" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="46"/></argument_list></call></expr></init></decl>;<pos:position pos:line="18" pos:column="47"/></decl_stmt>
        <switch pos:line="19" pos:column="9">switch <condition pos:line="19" pos:column="16">(<expr><name pos:line="19" pos:column="17">ch<pos:position pos:line="19" pos:column="19"/></name></expr>)<pos:position pos:line="19" pos:column="20"/></condition> <block pos:line="19" pos:column="21">{
        <case pos:line="20" pos:column="9">case <expr><operator pos:line="20" pos:column="14">-<pos:position pos:line="20" pos:column="15"/></operator><literal type="number" pos:line="20" pos:column="15">1<pos:position pos:line="20" pos:column="16"/></literal></expr>:<pos:position pos:line="20" pos:column="17"/></case>
            <goto pos:line="21" pos:column="13">goto <name pos:line="21" pos:column="18">start<pos:position pos:line="21" pos:column="23"/></name>;<pos:position pos:line="21" pos:column="24"/></goto>
        <case pos:line="22" pos:column="9">case <expr><literal type="char" pos:line="22" pos:column="14">'n'<pos:position pos:line="22" pos:column="17"/></literal></expr>:<pos:position pos:line="22" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="23" pos:column="13">service<pos:position pos:line="23" pos:column="20"/></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <name pos:line="23" pos:column="23">optarg<pos:position pos:line="23" pos:column="29"/></name></expr>;<pos:position pos:line="23" pos:column="30"/></expr_stmt>
            <break pos:line="24" pos:column="13">break;<pos:position pos:line="24" pos:column="19"/></break>
        <case pos:line="25" pos:column="9">case <expr><literal type="char" pos:line="25" pos:column="14">'t'<pos:position pos:line="25" pos:column="17"/></literal></expr>:<pos:position pos:line="25" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="26" pos:column="13">ttl<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">atoi<pos:position pos:line="26" pos:column="23"/></name><argument_list pos:line="26" pos:column="23">(<argument><expr><name pos:line="26" pos:column="24">optarg<pos:position pos:line="26" pos:column="30"/></name></expr></argument>)<pos:position pos:line="26" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="32"/></expr_stmt>
            <break pos:line="27" pos:column="13">break;<pos:position pos:line="27" pos:column="19"/></break>
        <case pos:line="28" pos:column="9">case <expr><literal type="char" pos:line="28" pos:column="14">'1'<pos:position pos:line="28" pos:column="17"/></literal></expr>:<pos:position pos:line="28" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="29" pos:column="13">ttl<pos:position pos:line="29" pos:column="16"/></name> <operator pos:line="29" pos:column="17">=<pos:position pos:line="29" pos:column="18"/></operator> <literal type="number" pos:line="29" pos:column="19">0<pos:position pos:line="29" pos:column="20"/></literal></expr>;<pos:position pos:line="29" pos:column="21"/></expr_stmt>
            <break pos:line="30" pos:column="13">break;<pos:position pos:line="30" pos:column="19"/></break>
        <case pos:line="31" pos:column="9">case <expr><literal type="char" pos:line="31" pos:column="14">'o'<pos:position pos:line="31" pos:column="17"/></literal></expr>:<pos:position pos:line="31" pos:column="18"/></case>
            <expr_stmt><expr><name pos:line="32" pos:column="13">no_acct_mgmt<pos:position pos:line="32" pos:column="25"/></name> <operator pos:line="32" pos:column="26">=<pos:position pos:line="32" pos:column="27"/></operator> <literal type="number" pos:line="32" pos:column="28">1<pos:position pos:line="32" pos:column="29"/></literal></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
            <break pos:line="33" pos:column="13">break;<pos:position pos:line="33" pos:column="19"/></break>
        <default pos:line="34" pos:column="9">default:<pos:position pos:line="34" pos:column="17"/></default>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">fprintf<pos:position pos:line="35" pos:column="20"/></name><argument_list pos:line="35" pos:column="20">(<argument><expr><name pos:line="35" pos:column="21">stderr<pos:position pos:line="35" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="29">"Unknown getopt value '%c'\n"<pos:position pos:line="35" pos:column="58"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="60">ch<pos:position pos:line="35" pos:column="62"/></name></expr></argument>)<pos:position pos:line="35" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="64"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">usage<pos:position pos:line="36" pos:column="18"/></name><argument_list pos:line="36" pos:column="18">(<argument><expr><name><name pos:line="36" pos:column="19">argv<pos:position pos:line="36" pos:column="23"/></name><index pos:line="36" pos:column="23">[<expr><literal type="number" pos:line="36" pos:column="24">0<pos:position pos:line="36" pos:column="25"/></literal></expr>]<pos:position pos:line="36" pos:column="26"/></index></name></expr></argument>)<pos:position pos:line="36" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">exit<pos:position pos:line="37" pos:column="17"/></name><argument_list pos:line="37" pos:column="17">(<argument><expr><literal type="number" pos:line="37" pos:column="18">1<pos:position pos:line="37" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></switch>
    }<pos:position pos:line="39" pos:column="6"/></block></while>
<label><name pos:line="40" pos:column="1">start<pos:position pos:line="40" pos:column="6"/></name>:<pos:position pos:line="40" pos:column="7"/></label>
    <if pos:line="41" pos:column="5">if <condition pos:line="41" pos:column="8">(<expr><name pos:line="41" pos:column="9">optind<pos:position pos:line="41" pos:column="15"/></name> <operator pos:line="41" pos:column="16">&lt;<pos:position pos:line="41" pos:column="20"/></operator> <name pos:line="41" pos:column="18">argc<pos:position pos:line="41" pos:column="22"/></name></expr>)<pos:position pos:line="41" pos:column="23"/></condition><then pos:line="41" pos:column="23"> <block pos:line="41" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="42" pos:column="9">fprintf<pos:position pos:line="42" pos:column="16"/></name><argument_list pos:line="42" pos:column="16">(<argument><expr><name pos:line="42" pos:column="17">stderr<pos:position pos:line="42" pos:column="23"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="42" pos:column="25">"Unknown option '%s'\n"<pos:position pos:line="42" pos:column="48"/></literal></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="50">argv<pos:position pos:line="42" pos:column="54"/></name><index pos:line="42" pos:column="54">[<expr><name pos:line="42" pos:column="55">optind<pos:position pos:line="42" pos:column="61"/></name></expr>]<pos:position pos:line="42" pos:column="62"/></index></name></expr></argument>)<pos:position pos:line="42" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="64"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">usage<pos:position pos:line="43" pos:column="14"/></name><argument_list pos:line="43" pos:column="14">(<argument><expr><name><name pos:line="43" pos:column="15">argv<pos:position pos:line="43" pos:column="19"/></name><index pos:line="43" pos:column="19">[<expr><literal type="number" pos:line="43" pos:column="20">0<pos:position pos:line="43" pos:column="21"/></literal></expr>]<pos:position pos:line="43" pos:column="22"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">exit<pos:position pos:line="44" pos:column="13"/></name><argument_list pos:line="44" pos:column="13">(<argument><expr><literal type="number" pos:line="44" pos:column="14">1<pos:position pos:line="44" pos:column="15"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="45" pos:column="6"/></block></then></if>

    <while pos:line="47" pos:column="5">while <condition pos:line="47" pos:column="11">(<expr><call><name pos:line="47" pos:column="12">fgets<pos:position pos:line="47" pos:column="17"/></name><argument_list pos:line="47" pos:column="17">(<argument><expr><name pos:line="47" pos:column="18">buf<pos:position pos:line="47" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="23">BUFSIZE<pos:position pos:line="47" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="32">stdin<pos:position pos:line="47" pos:column="37"/></name></expr></argument>)<pos:position pos:line="47" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="47" pos:column="39"/></condition> <block pos:line="47" pos:column="40">{
        <expr_stmt><expr><name pos:line="48" pos:column="9">user<pos:position pos:line="48" pos:column="13"/></name> <operator pos:line="48" pos:column="14">=<pos:position pos:line="48" pos:column="15"/></operator> <name pos:line="48" pos:column="16">buf<pos:position pos:line="48" pos:column="19"/></name></expr>;<pos:position pos:line="48" pos:column="20"/></expr_stmt>
        <expr_stmt><expr><name pos:line="49" pos:column="9">password_buf<pos:position pos:line="49" pos:column="21"/></name> <operator pos:line="49" pos:column="22">=<pos:position pos:line="49" pos:column="23"/></operator> <call><name pos:line="49" pos:column="24">strchr<pos:position pos:line="49" pos:column="30"/></name><argument_list pos:line="49" pos:column="30">(<argument><expr><name pos:line="49" pos:column="31">buf<pos:position pos:line="49" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="49" pos:column="36">'\n'<pos:position pos:line="49" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="42"/></expr_stmt>
        <if pos:line="50" pos:column="9">if <condition pos:line="50" pos:column="12">(<expr><operator pos:line="50" pos:column="13">!<pos:position pos:line="50" pos:column="14"/></operator><name pos:line="50" pos:column="14">password_buf<pos:position pos:line="50" pos:column="26"/></name></expr>)<pos:position pos:line="50" pos:column="27"/></condition><then pos:line="50" pos:column="27"> <block pos:line="50" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="51" pos:column="13">fprintf<pos:position pos:line="51" pos:column="20"/></name><argument_list pos:line="51" pos:column="20">(<argument><expr><name pos:line="51" pos:column="21">stderr<pos:position pos:line="51" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="29">"authenticator: Unexpected input '%s'\n"<pos:position pos:line="51" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="51" pos:column="71">buf<pos:position pos:line="51" pos:column="74"/></name></expr></argument>)<pos:position pos:line="51" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="51" pos:column="76"/></expr_stmt>
            <goto pos:line="52" pos:column="13">goto <name pos:line="52" pos:column="18">error<pos:position pos:line="52" pos:column="23"/></name>;<pos:position pos:line="52" pos:column="24"/></goto>
        }<pos:position pos:line="53" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="54" pos:column="9">*<pos:position pos:line="54" pos:column="10"/></operator><name pos:line="54" pos:column="10">password_buf<pos:position pos:line="54" pos:column="22"/></name> <operator pos:line="54" pos:column="23">=<pos:position pos:line="54" pos:column="24"/></operator> <literal type="char" pos:line="54" pos:column="25">'\0'<pos:position pos:line="54" pos:column="29"/></literal></expr>;<pos:position pos:line="54" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="55" pos:column="9">password_buf<pos:position pos:line="55" pos:column="21"/></name> <operator pos:line="55" pos:column="22">=<pos:position pos:line="55" pos:column="23"/></operator> <call><name pos:line="55" pos:column="24">strchr<pos:position pos:line="55" pos:column="30"/></name><argument_list pos:line="55" pos:column="30">(<argument><expr><name pos:line="55" pos:column="31">buf<pos:position pos:line="55" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="55" pos:column="36">' '<pos:position pos:line="55" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="55" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="41"/></expr_stmt>
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">!<pos:position pos:line="56" pos:column="14"/></operator><name pos:line="56" pos:column="14">password_buf<pos:position pos:line="56" pos:column="26"/></name></expr>)<pos:position pos:line="56" pos:column="27"/></condition><then pos:line="56" pos:column="27"> <block pos:line="56" pos:column="28">{
            <expr_stmt><expr><call><name pos:line="57" pos:column="13">fprintf<pos:position pos:line="57" pos:column="20"/></name><argument_list pos:line="57" pos:column="20">(<argument><expr><name pos:line="57" pos:column="21">stderr<pos:position pos:line="57" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="29">"authenticator: Unexpected input '%s'\n"<pos:position pos:line="57" pos:column="69"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="71">buf<pos:position pos:line="57" pos:column="74"/></name></expr></argument>)<pos:position pos:line="57" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="76"/></expr_stmt>
            <goto pos:line="58" pos:column="13">goto <name pos:line="58" pos:column="18">error<pos:position pos:line="58" pos:column="23"/></name>;<pos:position pos:line="58" pos:column="24"/></goto>
        }<pos:position pos:line="59" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="60" pos:column="9">*<pos:position pos:line="60" pos:column="10"/></operator><name pos:line="60" pos:column="10">password_buf<pos:position pos:line="60" pos:column="22"/></name><operator pos:line="60" pos:column="22">++<pos:position pos:line="60" pos:column="24"/></operator> <operator pos:line="60" pos:column="25">=<pos:position pos:line="60" pos:column="26"/></operator> <literal type="char" pos:line="60" pos:column="27">'\0'<pos:position pos:line="60" pos:column="31"/></literal></expr>;<pos:position pos:line="60" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="61" pos:column="9">rfc1738_unescape<pos:position pos:line="61" pos:column="25"/></name><argument_list pos:line="61" pos:column="25">(<argument><expr><name pos:line="61" pos:column="26">user<pos:position pos:line="61" pos:column="30"/></name></expr></argument>)<pos:position pos:line="61" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="62" pos:column="9">rfc1738_unescape<pos:position pos:line="62" pos:column="25"/></name><argument_list pos:line="62" pos:column="25">(<argument><expr><name pos:line="62" pos:column="26">password_buf<pos:position pos:line="62" pos:column="38"/></name></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="63" pos:column="9">conv<pos:position pos:line="63" pos:column="13"/></name><operator pos:line="63" pos:column="13">.<pos:position pos:line="63" pos:column="14"/></operator><name pos:line="63" pos:column="14">appdata_ptr<pos:position pos:line="63" pos:column="25"/></name></name> <operator pos:line="63" pos:column="26">=<pos:position pos:line="63" pos:column="27"/></operator> <operator pos:line="63" pos:column="28">(<pos:position pos:line="63" pos:column="29"/></operator><name pos:line="63" pos:column="29">char<pos:position pos:line="63" pos:column="33"/></name> <operator pos:line="63" pos:column="34">*<pos:position pos:line="63" pos:column="35"/></operator><operator pos:line="63" pos:column="35">)<pos:position pos:line="63" pos:column="36"/></operator> <name pos:line="63" pos:column="37">password_buf<pos:position pos:line="63" pos:column="49"/></name></expr>;<pos:position pos:line="63" pos:column="50"/></expr_stmt>	<comment type="block" pos:line="63" pos:column="57">/* from buf above. not allocated */</comment>

<cpp:if pos:line="65" pos:column="1">#<cpp:directive pos:line="65" pos:column="2">if<pos:position pos:line="65" pos:column="4"/></cpp:directive> <expr><name pos:line="65" pos:column="5">_SQUID_SOLARIS_<pos:position pos:line="65" pos:column="20"/></name></expr></cpp:if>
        <comment type="block" pos:line="66" pos:column="9">/* Workaround for Solaris 2.6 where the PAM library is broken
         * and does not pass appdata_ptr to the conversation routine
         */</comment>
        <expr_stmt><expr><name pos:line="69" pos:column="9">password<pos:position pos:line="69" pos:column="17"/></name> <operator pos:line="69" pos:column="18">=<pos:position pos:line="69" pos:column="19"/></operator> <name pos:line="69" pos:column="20">password_buf<pos:position pos:line="69" pos:column="32"/></name></expr>;<pos:position pos:line="69" pos:column="33"/></expr_stmt>
<cpp:endif pos:line="70" pos:column="1">#<cpp:directive pos:line="70" pos:column="2">endif<pos:position pos:line="70" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="71" pos:column="9">if <condition pos:line="71" pos:column="12">(<expr><name pos:line="71" pos:column="13">ttl<pos:position pos:line="71" pos:column="16"/></name> <operator pos:line="71" pos:column="17">==<pos:position pos:line="71" pos:column="19"/></operator> <literal type="number" pos:line="71" pos:column="20">0<pos:position pos:line="71" pos:column="21"/></literal></expr>)<pos:position pos:line="71" pos:column="22"/></condition><then pos:line="71" pos:column="22"> <block pos:line="71" pos:column="23">{
            <comment type="block" pos:line="72" pos:column="13">/* Create PAM connection */</comment>
            <expr_stmt><expr><name pos:line="73" pos:column="13">retval<pos:position pos:line="73" pos:column="19"/></name> <operator pos:line="73" pos:column="20">=<pos:position pos:line="73" pos:column="21"/></operator> <call><name pos:line="73" pos:column="22">pam_start<pos:position pos:line="73" pos:column="31"/></name><argument_list pos:line="73" pos:column="31">(<argument><expr><name pos:line="73" pos:column="32">service<pos:position pos:line="73" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="73" pos:column="41">user<pos:position pos:line="73" pos:column="45"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="47">&amp;<pos:position pos:line="73" pos:column="52"/></operator><name pos:line="73" pos:column="48">conv<pos:position pos:line="73" pos:column="52"/></name></expr></argument>, <argument><expr><operator pos:line="73" pos:column="54">&amp;<pos:position pos:line="73" pos:column="59"/></operator><name pos:line="73" pos:column="55">pamh<pos:position pos:line="73" pos:column="59"/></name></expr></argument>)<pos:position pos:line="73" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="73" pos:column="61"/></expr_stmt>
            <if pos:line="74" pos:column="13">if <condition pos:line="74" pos:column="16">(<expr><name pos:line="74" pos:column="17">retval<pos:position pos:line="74" pos:column="23"/></name> <operator pos:line="74" pos:column="24">!=<pos:position pos:line="74" pos:column="26"/></operator> <name pos:line="74" pos:column="27">PAM_SUCCESS<pos:position pos:line="74" pos:column="38"/></name></expr>)<pos:position pos:line="74" pos:column="39"/></condition><then pos:line="74" pos:column="39"> <block pos:line="74" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="75" pos:column="17">fprintf<pos:position pos:line="75" pos:column="24"/></name><argument_list pos:line="75" pos:column="24">(<argument><expr><name pos:line="75" pos:column="25">stderr<pos:position pos:line="75" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="75" pos:column="33">"ERROR: failed to create PAM authenticator\n"<pos:position pos:line="75" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="75" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="75" pos:column="80"/></expr_stmt>
                <goto pos:line="76" pos:column="17">goto <name pos:line="76" pos:column="22">error<pos:position pos:line="76" pos:column="27"/></name>;<pos:position pos:line="76" pos:column="28"/></goto>
            }<pos:position pos:line="77" pos:column="14"/></block></then></if>
        }<pos:position pos:line="78" pos:column="10"/></block></then> <elseif pos:line="78" pos:column="11">else <if pos:line="78" pos:column="16">if <condition pos:line="78" pos:column="19">(<expr><operator pos:line="78" pos:column="20">!<pos:position pos:line="78" pos:column="21"/></operator><name pos:line="78" pos:column="21">pamh<pos:position pos:line="78" pos:column="25"/></name> <operator pos:line="78" pos:column="26">||<pos:position pos:line="78" pos:column="28"/></operator> <operator pos:line="78" pos:column="29">(<pos:position pos:line="78" pos:column="30"/></operator><call><name pos:line="78" pos:column="30">time<pos:position pos:line="78" pos:column="34"/></name><argument_list pos:line="78" pos:column="34">(<argument><expr><name pos:line="78" pos:column="35">NULL<pos:position pos:line="78" pos:column="39"/></name></expr></argument>)<pos:position pos:line="78" pos:column="40"/></argument_list></call> <operator pos:line="78" pos:column="41">-<pos:position pos:line="78" pos:column="42"/></operator> <name pos:line="78" pos:column="43">pamh_created<pos:position pos:line="78" pos:column="55"/></name><operator pos:line="78" pos:column="55">)<pos:position pos:line="78" pos:column="56"/></operator> <operator pos:line="78" pos:column="57">&gt;=<pos:position pos:line="78" pos:column="62"/></operator> <name pos:line="78" pos:column="60">ttl<pos:position pos:line="78" pos:column="63"/></name> <operator pos:line="78" pos:column="64">||<pos:position pos:line="78" pos:column="66"/></operator> <name pos:line="78" pos:column="67">pamh_created<pos:position pos:line="78" pos:column="79"/></name> <operator pos:line="78" pos:column="80">&gt;<pos:position pos:line="78" pos:column="84"/></operator> <call><name pos:line="78" pos:column="82">time<pos:position pos:line="78" pos:column="86"/></name><argument_list pos:line="78" pos:column="86">(<argument><expr><name pos:line="78" pos:column="87">NULL<pos:position pos:line="78" pos:column="91"/></name></expr></argument>)<pos:position pos:line="78" pos:column="92"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="93"/></condition><then pos:line="78" pos:column="93"> <block pos:line="78" pos:column="94">{
            <comment type="block" pos:line="79" pos:column="13">/* Close previous PAM connection */</comment>
            <if pos:line="80" pos:column="13">if <condition pos:line="80" pos:column="16">(<expr><name pos:line="80" pos:column="17">pamh<pos:position pos:line="80" pos:column="21"/></name></expr>)<pos:position pos:line="80" pos:column="22"/></condition><then pos:line="80" pos:column="22"> <block pos:line="80" pos:column="23">{
                <expr_stmt><expr><name pos:line="81" pos:column="17">retval<pos:position pos:line="81" pos:column="23"/></name> <operator pos:line="81" pos:column="24">=<pos:position pos:line="81" pos:column="25"/></operator> <call><name pos:line="81" pos:column="26">pam_end<pos:position pos:line="81" pos:column="33"/></name><argument_list pos:line="81" pos:column="33">(<argument><expr><name pos:line="81" pos:column="34">pamh<pos:position pos:line="81" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="81" pos:column="40">retval<pos:position pos:line="81" pos:column="46"/></name></expr></argument>)<pos:position pos:line="81" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="48"/></expr_stmt>
                <if pos:line="82" pos:column="17">if <condition pos:line="82" pos:column="20">(<expr><name pos:line="82" pos:column="21">retval<pos:position pos:line="82" pos:column="27"/></name> <operator pos:line="82" pos:column="28">!=<pos:position pos:line="82" pos:column="30"/></operator> <name pos:line="82" pos:column="31">PAM_SUCCESS<pos:position pos:line="82" pos:column="42"/></name></expr>)<pos:position pos:line="82" pos:column="43"/></condition><then pos:line="82" pos:column="43"> <block pos:line="82" pos:column="44">{
                    <expr_stmt><expr><call><name pos:line="83" pos:column="21">fprintf<pos:position pos:line="83" pos:column="28"/></name><argument_list pos:line="83" pos:column="28">(<argument><expr><name pos:line="83" pos:column="29">stderr<pos:position pos:line="83" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="83" pos:column="37">"WARNING: failed to release PAM authenticator\n"<pos:position pos:line="83" pos:column="85"/></literal></expr></argument>)<pos:position pos:line="83" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="87"/></expr_stmt>
                }<pos:position pos:line="84" pos:column="18"/></block></then></if>
                <expr_stmt><expr><name pos:line="85" pos:column="17">pamh<pos:position pos:line="85" pos:column="21"/></name> <operator pos:line="85" pos:column="22">=<pos:position pos:line="85" pos:column="23"/></operator> <name pos:line="85" pos:column="24">NULL<pos:position pos:line="85" pos:column="28"/></name></expr>;<pos:position pos:line="85" pos:column="29"/></expr_stmt>
            }<pos:position pos:line="86" pos:column="14"/></block></then></if>
            <comment type="block" pos:line="87" pos:column="13">/* Initialize persistent PAM connection */</comment>
            <expr_stmt><expr><name pos:line="88" pos:column="13">retval<pos:position pos:line="88" pos:column="19"/></name> <operator pos:line="88" pos:column="20">=<pos:position pos:line="88" pos:column="21"/></operator> <call><name pos:line="88" pos:column="22">pam_start<pos:position pos:line="88" pos:column="31"/></name><argument_list pos:line="88" pos:column="31">(<argument><expr><name pos:line="88" pos:column="32">service<pos:position pos:line="88" pos:column="39"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="88" pos:column="41">"squid@"<pos:position pos:line="88" pos:column="49"/></literal></expr></argument>, <argument><expr><operator pos:line="88" pos:column="51">&amp;<pos:position pos:line="88" pos:column="56"/></operator><name pos:line="88" pos:column="52">conv<pos:position pos:line="88" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="88" pos:column="58">&amp;<pos:position pos:line="88" pos:column="63"/></operator><name pos:line="88" pos:column="59">pamh<pos:position pos:line="88" pos:column="63"/></name></expr></argument>)<pos:position pos:line="88" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="65"/></expr_stmt>
            <if pos:line="89" pos:column="13">if <condition pos:line="89" pos:column="16">(<expr><name pos:line="89" pos:column="17">retval<pos:position pos:line="89" pos:column="23"/></name> <operator pos:line="89" pos:column="24">!=<pos:position pos:line="89" pos:column="26"/></operator> <name pos:line="89" pos:column="27">PAM_SUCCESS<pos:position pos:line="89" pos:column="38"/></name></expr>)<pos:position pos:line="89" pos:column="39"/></condition><then pos:line="89" pos:column="39"> <block pos:line="89" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="90" pos:column="17">fprintf<pos:position pos:line="90" pos:column="24"/></name><argument_list pos:line="90" pos:column="24">(<argument><expr><name pos:line="90" pos:column="25">stderr<pos:position pos:line="90" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="90" pos:column="33">"ERROR: failed to create PAM authenticator\n"<pos:position pos:line="90" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="90" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="80"/></expr_stmt>
                <goto pos:line="91" pos:column="17">goto <name pos:line="91" pos:column="22">error<pos:position pos:line="91" pos:column="27"/></name>;<pos:position pos:line="91" pos:column="28"/></goto>
            }<pos:position pos:line="92" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="93" pos:column="13">pamh_created<pos:position pos:line="93" pos:column="25"/></name> <operator pos:line="93" pos:column="26">=<pos:position pos:line="93" pos:column="27"/></operator> <call><name pos:line="93" pos:column="28">time<pos:position pos:line="93" pos:column="32"/></name><argument_list pos:line="93" pos:column="32">(<argument><expr><name pos:line="93" pos:column="33">NULL<pos:position pos:line="93" pos:column="37"/></name></expr></argument>)<pos:position pos:line="93" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="39"/></expr_stmt>
        }<pos:position pos:line="94" pos:column="10"/></block></then></if></elseif></if>
        <comment type="block" pos:line="95" pos:column="9">/* Authentication */</comment>
        <expr_stmt><expr><name pos:line="96" pos:column="9">retval<pos:position pos:line="96" pos:column="15"/></name> <operator pos:line="96" pos:column="16">=<pos:position pos:line="96" pos:column="17"/></operator> <name pos:line="96" pos:column="18">PAM_SUCCESS<pos:position pos:line="96" pos:column="29"/></name></expr>;<pos:position pos:line="96" pos:column="30"/></expr_stmt>
        <if pos:line="97" pos:column="9">if <condition pos:line="97" pos:column="12">(<expr><name pos:line="97" pos:column="13">ttl<pos:position pos:line="97" pos:column="16"/></name> <operator pos:line="97" pos:column="17">!=<pos:position pos:line="97" pos:column="19"/></operator> <literal type="number" pos:line="97" pos:column="20">0<pos:position pos:line="97" pos:column="21"/></literal></expr>)<pos:position pos:line="97" pos:column="22"/></condition><then pos:line="97" pos:column="22"> <block pos:line="97" pos:column="23">{
            <if pos:line="98" pos:column="13">if <condition pos:line="98" pos:column="16">(<expr><name pos:line="98" pos:column="17">retval<pos:position pos:line="98" pos:column="23"/></name> <operator pos:line="98" pos:column="24">==<pos:position pos:line="98" pos:column="26"/></operator> <name pos:line="98" pos:column="27">PAM_SUCCESS<pos:position pos:line="98" pos:column="38"/></name></expr>)<pos:position pos:line="98" pos:column="39"/></condition><then pos:line="98" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><name pos:line="99" pos:column="17">retval<pos:position pos:line="99" pos:column="23"/></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <call><name pos:line="99" pos:column="26">pam_set_item<pos:position pos:line="99" pos:column="38"/></name><argument_list pos:line="99" pos:column="38">(<argument><expr><name pos:line="99" pos:column="39">pamh<pos:position pos:line="99" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="45">PAM_USER<pos:position pos:line="99" pos:column="53"/></name></expr></argument>, <argument><expr><name pos:line="99" pos:column="55">user<pos:position pos:line="99" pos:column="59"/></name></expr></argument>)<pos:position pos:line="99" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="99" pos:column="61"/></expr_stmt></block></then></if>
            <if pos:line="100" pos:column="13">if <condition pos:line="100" pos:column="16">(<expr><name pos:line="100" pos:column="17">retval<pos:position pos:line="100" pos:column="23"/></name> <operator pos:line="100" pos:column="24">==<pos:position pos:line="100" pos:column="26"/></operator> <name pos:line="100" pos:column="27">PAM_SUCCESS<pos:position pos:line="100" pos:column="38"/></name></expr>)<pos:position pos:line="100" pos:column="39"/></condition><then pos:line="100" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><name pos:line="101" pos:column="17">retval<pos:position pos:line="101" pos:column="23"/></name> <operator pos:line="101" pos:column="24">=<pos:position pos:line="101" pos:column="25"/></operator> <call><name pos:line="101" pos:column="26">pam_set_item<pos:position pos:line="101" pos:column="38"/></name><argument_list pos:line="101" pos:column="38">(<argument><expr><name pos:line="101" pos:column="39">pamh<pos:position pos:line="101" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="101" pos:column="45">PAM_CONV<pos:position pos:line="101" pos:column="53"/></name></expr></argument>, <argument><expr><operator pos:line="101" pos:column="55">&amp;<pos:position pos:line="101" pos:column="60"/></operator><name pos:line="101" pos:column="56">conv<pos:position pos:line="101" pos:column="60"/></name></expr></argument>)<pos:position pos:line="101" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="62"/></expr_stmt></block></then></if>
        }<pos:position pos:line="102" pos:column="10"/></block></then></if>
        <if pos:line="103" pos:column="9">if <condition pos:line="103" pos:column="12">(<expr><name pos:line="103" pos:column="13">retval<pos:position pos:line="103" pos:column="19"/></name> <operator pos:line="103" pos:column="20">==<pos:position pos:line="103" pos:column="22"/></operator> <name pos:line="103" pos:column="23">PAM_SUCCESS<pos:position pos:line="103" pos:column="34"/></name></expr>)<pos:position pos:line="103" pos:column="35"/></condition><then pos:line="103" pos:column="35">
            <block type="pseudo"><expr_stmt><expr><name pos:line="104" pos:column="13">retval<pos:position pos:line="104" pos:column="19"/></name> <operator pos:line="104" pos:column="20">=<pos:position pos:line="104" pos:column="21"/></operator> <call><name pos:line="104" pos:column="22">pam_authenticate<pos:position pos:line="104" pos:column="38"/></name><argument_list pos:line="104" pos:column="38">(<argument><expr><name pos:line="104" pos:column="39">pamh<pos:position pos:line="104" pos:column="43"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="104" pos:column="45">0<pos:position pos:line="104" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="48"/></expr_stmt></block></then></if>
        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><name pos:line="105" pos:column="13">retval<pos:position pos:line="105" pos:column="19"/></name> <operator pos:line="105" pos:column="20">==<pos:position pos:line="105" pos:column="22"/></operator> <name pos:line="105" pos:column="23">PAM_SUCCESS<pos:position pos:line="105" pos:column="34"/></name> <operator pos:line="105" pos:column="35">&amp;&amp;<pos:position pos:line="105" pos:column="45"/></operator> <operator pos:line="105" pos:column="38">!<pos:position pos:line="105" pos:column="39"/></operator><name pos:line="105" pos:column="39">no_acct_mgmt<pos:position pos:line="105" pos:column="51"/></name></expr>)<pos:position pos:line="105" pos:column="52"/></condition><then pos:line="105" pos:column="52">
            <block type="pseudo"><expr_stmt><expr><name pos:line="106" pos:column="13">retval<pos:position pos:line="106" pos:column="19"/></name> <operator pos:line="106" pos:column="20">=<pos:position pos:line="106" pos:column="21"/></operator> <call><name pos:line="106" pos:column="22">pam_acct_mgmt<pos:position pos:line="106" pos:column="35"/></name><argument_list pos:line="106" pos:column="35">(<argument><expr><name pos:line="106" pos:column="36">pamh<pos:position pos:line="106" pos:column="40"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="106" pos:column="42">0<pos:position pos:line="106" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="106" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="106" pos:column="45"/></expr_stmt></block></then></if>
        <if pos:line="107" pos:column="9">if <condition pos:line="107" pos:column="12">(<expr><name pos:line="107" pos:column="13">retval<pos:position pos:line="107" pos:column="19"/></name> <operator pos:line="107" pos:column="20">==<pos:position pos:line="107" pos:column="22"/></operator> <name pos:line="107" pos:column="23">PAM_SUCCESS<pos:position pos:line="107" pos:column="34"/></name></expr>)<pos:position pos:line="107" pos:column="35"/></condition><then pos:line="107" pos:column="35"> <block pos:line="107" pos:column="36">{
            <expr_stmt><expr><call><name pos:line="108" pos:column="13">fprintf<pos:position pos:line="108" pos:column="20"/></name><argument_list pos:line="108" pos:column="20">(<argument><expr><name pos:line="108" pos:column="21">stdout<pos:position pos:line="108" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="108" pos:column="29">"OK\n"<pos:position pos:line="108" pos:column="35"/></literal></expr></argument>)<pos:position pos:line="108" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="108" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="109" pos:column="10"/></block></then> <else pos:line="109" pos:column="11">else <block pos:line="109" pos:column="16">{
<label><name pos:line="110" pos:column="1">error<pos:position pos:line="110" pos:column="6"/></name>:<pos:position pos:line="110" pos:column="7"/></label>
            <expr_stmt><expr><call><name pos:line="111" pos:column="13">fprintf<pos:position pos:line="111" pos:column="20"/></name><argument_list pos:line="111" pos:column="20">(<argument><expr><name pos:line="111" pos:column="21">stdout<pos:position pos:line="111" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="111" pos:column="29">"ERR\n"<pos:position pos:line="111" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="111" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="111" pos:column="38"/></expr_stmt>
        }<pos:position pos:line="112" pos:column="10"/></block></else></if>
        <comment type="block" pos:line="113" pos:column="9">/* cleanup */</comment>
        <expr_stmt><expr><name pos:line="114" pos:column="9">retval<pos:position pos:line="114" pos:column="15"/></name> <operator pos:line="114" pos:column="16">=<pos:position pos:line="114" pos:column="17"/></operator> <name pos:line="114" pos:column="18">PAM_SUCCESS<pos:position pos:line="114" pos:column="29"/></name></expr>;<pos:position pos:line="114" pos:column="30"/></expr_stmt>
<cpp:ifdef pos:line="115" pos:column="1">#<cpp:directive pos:line="115" pos:column="2">ifdef<pos:position pos:line="115" pos:column="7"/></cpp:directive> <name pos:line="115" pos:column="8">PAM_AUTHTOK<pos:position pos:line="115" pos:column="19"/></name></cpp:ifdef>
        <if pos:line="116" pos:column="9">if <condition pos:line="116" pos:column="12">(<expr><name pos:line="116" pos:column="13">ttl<pos:position pos:line="116" pos:column="16"/></name> <operator pos:line="116" pos:column="17">!=<pos:position pos:line="116" pos:column="19"/></operator> <literal type="number" pos:line="116" pos:column="20">0<pos:position pos:line="116" pos:column="21"/></literal></expr>)<pos:position pos:line="116" pos:column="22"/></condition><then pos:line="116" pos:column="22"> <block pos:line="116" pos:column="23">{
            <if pos:line="117" pos:column="13">if <condition pos:line="117" pos:column="16">(<expr><name pos:line="117" pos:column="17">retval<pos:position pos:line="117" pos:column="23"/></name> <operator pos:line="117" pos:column="24">==<pos:position pos:line="117" pos:column="26"/></operator> <name pos:line="117" pos:column="27">PAM_SUCCESS<pos:position pos:line="117" pos:column="38"/></name></expr>)<pos:position pos:line="117" pos:column="39"/></condition><then pos:line="117" pos:column="39">
                <block type="pseudo"><expr_stmt><expr><name pos:line="118" pos:column="17">retval<pos:position pos:line="118" pos:column="23"/></name> <operator pos:line="118" pos:column="24">=<pos:position pos:line="118" pos:column="25"/></operator> <call><name pos:line="118" pos:column="26">pam_set_item<pos:position pos:line="118" pos:column="38"/></name><argument_list pos:line="118" pos:column="38">(<argument><expr><name pos:line="118" pos:column="39">pamh<pos:position pos:line="118" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="45">PAM_AUTHTOK<pos:position pos:line="118" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="118" pos:column="58">NULL<pos:position pos:line="118" pos:column="62"/></name></expr></argument>)<pos:position pos:line="118" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="118" pos:column="64"/></expr_stmt></block></then></if>
        }<pos:position pos:line="119" pos:column="10"/></block></then></if>
<cpp:endif pos:line="120" pos:column="1">#<cpp:directive pos:line="120" pos:column="2">endif<pos:position pos:line="120" pos:column="7"/></cpp:directive></cpp:endif>
        <if pos:line="121" pos:column="9">if <condition pos:line="121" pos:column="12">(<expr><name pos:line="121" pos:column="13">ttl<pos:position pos:line="121" pos:column="16"/></name> <operator pos:line="121" pos:column="17">==<pos:position pos:line="121" pos:column="19"/></operator> <literal type="number" pos:line="121" pos:column="20">0<pos:position pos:line="121" pos:column="21"/></literal> <operator pos:line="121" pos:column="22">||<pos:position pos:line="121" pos:column="24"/></operator> <name pos:line="121" pos:column="25">retval<pos:position pos:line="121" pos:column="31"/></name> <operator pos:line="121" pos:column="32">!=<pos:position pos:line="121" pos:column="34"/></operator> <name pos:line="121" pos:column="35">PAM_SUCCESS<pos:position pos:line="121" pos:column="46"/></name></expr>)<pos:position pos:line="121" pos:column="47"/></condition><then pos:line="121" pos:column="47"> <block pos:line="121" pos:column="48">{
            <expr_stmt><expr><name pos:line="122" pos:column="13">retval<pos:position pos:line="122" pos:column="19"/></name> <operator pos:line="122" pos:column="20">=<pos:position pos:line="122" pos:column="21"/></operator> <call><name pos:line="122" pos:column="22">pam_end<pos:position pos:line="122" pos:column="29"/></name><argument_list pos:line="122" pos:column="29">(<argument><expr><name pos:line="122" pos:column="30">pamh<pos:position pos:line="122" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="122" pos:column="36">retval<pos:position pos:line="122" pos:column="42"/></name></expr></argument>)<pos:position pos:line="122" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="122" pos:column="44"/></expr_stmt>
            <if pos:line="123" pos:column="13">if <condition pos:line="123" pos:column="16">(<expr><name pos:line="123" pos:column="17">retval<pos:position pos:line="123" pos:column="23"/></name> <operator pos:line="123" pos:column="24">!=<pos:position pos:line="123" pos:column="26"/></operator> <name pos:line="123" pos:column="27">PAM_SUCCESS<pos:position pos:line="123" pos:column="38"/></name></expr>)<pos:position pos:line="123" pos:column="39"/></condition><then pos:line="123" pos:column="39"> <block pos:line="123" pos:column="40">{
                <expr_stmt><expr><call><name pos:line="124" pos:column="17">fprintf<pos:position pos:line="124" pos:column="24"/></name><argument_list pos:line="124" pos:column="24">(<argument><expr><name pos:line="124" pos:column="25">stderr<pos:position pos:line="124" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="124" pos:column="33">"WARNING: failed to release PAM authenticator\n"<pos:position pos:line="124" pos:column="81"/></literal></expr></argument>)<pos:position pos:line="124" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="124" pos:column="83"/></expr_stmt>
            }<pos:position pos:line="125" pos:column="14"/></block></then></if>
            <expr_stmt><expr><name pos:line="126" pos:column="13">pamh<pos:position pos:line="126" pos:column="17"/></name> <operator pos:line="126" pos:column="18">=<pos:position pos:line="126" pos:column="19"/></operator> <name pos:line="126" pos:column="20">NULL<pos:position pos:line="126" pos:column="24"/></name></expr>;<pos:position pos:line="126" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="127" pos:column="10"/></block></then></if>
    }<pos:position pos:line="128" pos:column="6"/></block></while>

    <if pos:line="130" pos:column="5">if <condition pos:line="130" pos:column="8">(<expr><name pos:line="130" pos:column="9">pamh<pos:position pos:line="130" pos:column="13"/></name></expr>)<pos:position pos:line="130" pos:column="14"/></condition><then pos:line="130" pos:column="14"> <block pos:line="130" pos:column="15">{
        <expr_stmt><expr><name pos:line="131" pos:column="9">retval<pos:position pos:line="131" pos:column="15"/></name> <operator pos:line="131" pos:column="16">=<pos:position pos:line="131" pos:column="17"/></operator> <call><name pos:line="131" pos:column="18">pam_end<pos:position pos:line="131" pos:column="25"/></name><argument_list pos:line="131" pos:column="25">(<argument><expr><name pos:line="131" pos:column="26">pamh<pos:position pos:line="131" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="131" pos:column="32">retval<pos:position pos:line="131" pos:column="38"/></name></expr></argument>)<pos:position pos:line="131" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="40"/></expr_stmt>
        <if pos:line="132" pos:column="9">if <condition pos:line="132" pos:column="12">(<expr><name pos:line="132" pos:column="13">retval<pos:position pos:line="132" pos:column="19"/></name> <operator pos:line="132" pos:column="20">!=<pos:position pos:line="132" pos:column="22"/></operator> <name pos:line="132" pos:column="23">PAM_SUCCESS<pos:position pos:line="132" pos:column="34"/></name></expr>)<pos:position pos:line="132" pos:column="35"/></condition><then pos:line="132" pos:column="35"> <block pos:line="132" pos:column="36">{
            <expr_stmt><expr><name pos:line="133" pos:column="13">pamh<pos:position pos:line="133" pos:column="17"/></name> <operator pos:line="133" pos:column="18">=<pos:position pos:line="133" pos:column="19"/></operator> <name pos:line="133" pos:column="20">NULL<pos:position pos:line="133" pos:column="24"/></name></expr>;<pos:position pos:line="133" pos:column="25"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="134" pos:column="13">fprintf<pos:position pos:line="134" pos:column="20"/></name><argument_list pos:line="134" pos:column="20">(<argument><expr><name pos:line="134" pos:column="21">stderr<pos:position pos:line="134" pos:column="27"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="134" pos:column="29">"ERROR: failed to release PAM authenticator\n"<pos:position pos:line="134" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="134" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="134" pos:column="77"/></expr_stmt>
        }<pos:position pos:line="135" pos:column="10"/></block></then></if>
    }<pos:position pos:line="136" pos:column="6"/></block></then></if>
    <return pos:line="137" pos:column="5">return <expr><literal type="number" pos:line="137" pos:column="12">0<pos:position pos:line="137" pos:column="13"/></literal></expr>;<pos:position pos:line="137" pos:column="14"/></return>
}<pos:position pos:line="138" pos:column="2"/></block></function></unit>

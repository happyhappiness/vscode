<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6578_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">netdbReloadState<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">(<parameter><decl><type><name pos:line="2" pos:column="18">void<pos:position pos:line="2" pos:column="22"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><call><name pos:line="4" pos:column="9">strcmp<pos:position pos:line="4" pos:column="15"/></name><argument_list pos:line="4" pos:column="15">(<argument><expr><name><name pos:line="4" pos:column="16">Config<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">.<pos:position pos:line="4" pos:column="23"/></operator><name pos:line="4" pos:column="23">netdbFilename<pos:position pos:line="4" pos:column="36"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="38">"none"<pos:position pos:line="4" pos:column="44"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="45"/></argument_list></call> <operator pos:line="4" pos:column="46">==<pos:position pos:line="4" pos:column="48"/></operator> <literal type="number" pos:line="4" pos:column="49">0<pos:position pos:line="4" pos:column="50"/></literal></expr>)<pos:position pos:line="4" pos:column="51"/></condition><then pos:line="4" pos:column="51">
        <block type="pseudo"><return pos:line="5" pos:column="9">return;<pos:position pos:line="5" pos:column="16"/></return></block></then></if>

    <decl_stmt><decl><type><name pos:line="7" pos:column="5">char<pos:position pos:line="7" pos:column="9"/></name> <modifier pos:line="7" pos:column="10">*<pos:position pos:line="7" pos:column="11"/></modifier></type><name pos:line="7" pos:column="11">s<pos:position pos:line="7" pos:column="12"/></name></decl>;<pos:position pos:line="7" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">fd<pos:position pos:line="8" pos:column="11"/></name></decl>;<pos:position pos:line="8" pos:column="12"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">int<pos:position pos:line="9" pos:column="8"/></name></type> <name pos:line="9" pos:column="9">l<pos:position pos:line="9" pos:column="10"/></name></decl>;<pos:position pos:line="9" pos:column="11"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="11" pos:column="5">struct<pos:position pos:line="11" pos:column="11"/></name> <name pos:line="11" pos:column="12">stat<pos:position pos:line="11" pos:column="16"/></name></name></type> <name pos:line="11" pos:column="17">sb<pos:position pos:line="11" pos:column="19"/></name></decl>;<pos:position pos:line="11" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">netdbEntry<pos:position pos:line="12" pos:column="15"/></name> <modifier pos:line="12" pos:column="16">*<pos:position pos:line="12" pos:column="17"/></modifier></type><name pos:line="12" pos:column="17">n<pos:position pos:line="12" pos:column="18"/></name></decl>;<pos:position pos:line="12" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">netdbEntry<pos:position pos:line="13" pos:column="15"/></name></type> <name pos:line="13" pos:column="16">N<pos:position pos:line="13" pos:column="17"/></name></decl>;<pos:position pos:line="13" pos:column="18"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="15" pos:column="5">Ip<pos:position pos:line="15" pos:column="7"/></name><operator pos:line="15" pos:column="7">::<pos:position pos:line="15" pos:column="9"/></operator><name pos:line="15" pos:column="9">Address<pos:position pos:line="15" pos:column="16"/></name></name></type> <name pos:line="15" pos:column="17">addr<pos:position pos:line="15" pos:column="21"/></name></decl>;<pos:position pos:line="15" pos:column="22"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">int<pos:position pos:line="16" pos:column="8"/></name></type> <name pos:line="16" pos:column="9">count<pos:position pos:line="16" pos:column="14"/></name> <init pos:line="16" pos:column="15">= <expr><literal type="number" pos:line="16" pos:column="17">0<pos:position pos:line="16" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="16" pos:column="19"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="18" pos:column="5">struct<pos:position pos:line="18" pos:column="11"/></name> <name pos:line="18" pos:column="12">timeval<pos:position pos:line="18" pos:column="19"/></name></name></type> <name pos:line="18" pos:column="20">start<pos:position pos:line="18" pos:column="25"/></name> <init pos:line="18" pos:column="26">= <expr><name pos:line="18" pos:column="28">current_time<pos:position pos:line="18" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="41"/></decl_stmt>
    <comment type="block" pos:line="19" pos:column="5">/*
     * This was nicer when we were using stdio, but thanks to
     * Solaris bugs, its a bad idea.  fopen can fail if more than
     * 256 FDs are open.
     */</comment>
    <expr_stmt><expr><name pos:line="24" pos:column="5">fd<pos:position pos:line="24" pos:column="7"/></name> <operator pos:line="24" pos:column="8">=<pos:position pos:line="24" pos:column="9"/></operator> <call><name pos:line="24" pos:column="10">file_open<pos:position pos:line="24" pos:column="19"/></name><argument_list pos:line="24" pos:column="19">(<argument><expr><name><name pos:line="24" pos:column="20">Config<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">.<pos:position pos:line="24" pos:column="27"/></operator><name pos:line="24" pos:column="27">netdbFilename<pos:position pos:line="24" pos:column="40"/></name></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="42">O_RDONLY<pos:position pos:line="24" pos:column="50"/></name> <operator pos:line="24" pos:column="51">|<pos:position pos:line="24" pos:column="52"/></operator> <name pos:line="24" pos:column="53">O_BINARY<pos:position pos:line="24" pos:column="61"/></name></expr></argument>)<pos:position pos:line="24" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="63"/></expr_stmt>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">fd<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">&lt;<pos:position pos:line="26" pos:column="16"/></operator> <literal type="number" pos:line="26" pos:column="14">0<pos:position pos:line="26" pos:column="15"/></literal></expr>)<pos:position pos:line="26" pos:column="16"/></condition><then pos:line="26" pos:column="16">
        <block type="pseudo"><return pos:line="27" pos:column="9">return;<pos:position pos:line="27" pos:column="16"/></return></block></then></if>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><call><name pos:line="29" pos:column="9">fstat<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><name pos:line="29" pos:column="15">fd<pos:position pos:line="29" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="29" pos:column="19">&amp;<pos:position pos:line="29" pos:column="24"/></operator><name pos:line="29" pos:column="20">sb<pos:position pos:line="29" pos:column="22"/></name></expr></argument>)<pos:position pos:line="29" pos:column="23"/></argument_list></call> <operator pos:line="29" pos:column="24">&lt;<pos:position pos:line="29" pos:column="28"/></operator> <literal type="number" pos:line="29" pos:column="26">0<pos:position pos:line="29" pos:column="27"/></literal></expr>)<pos:position pos:line="29" pos:column="28"/></condition><then pos:line="29" pos:column="28"> <block pos:line="29" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">file_close<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">fd<pos:position pos:line="30" pos:column="22"/></name></expr></argument>)<pos:position pos:line="30" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="24"/></expr_stmt>
        <return pos:line="31" pos:column="9">return;<pos:position pos:line="31" pos:column="16"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="34" pos:column="5">char<pos:position pos:line="34" pos:column="9"/></name> <modifier pos:line="34" pos:column="10">*<pos:position pos:line="34" pos:column="11"/></modifier></type><name pos:line="34" pos:column="11">t<pos:position pos:line="34" pos:column="12"/></name></decl>;<pos:position pos:line="34" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="35" pos:column="5">char<pos:position pos:line="35" pos:column="9"/></name> <modifier pos:line="35" pos:column="10">*<pos:position pos:line="35" pos:column="11"/></modifier></type><name pos:line="35" pos:column="11">buf<pos:position pos:line="35" pos:column="14"/></name> <init pos:line="35" pos:column="15">= <expr><operator pos:line="35" pos:column="17">(<pos:position pos:line="35" pos:column="18"/></operator><name pos:line="35" pos:column="18">char<pos:position pos:line="35" pos:column="22"/></name> <operator pos:line="35" pos:column="23">*<pos:position pos:line="35" pos:column="24"/></operator><operator pos:line="35" pos:column="24">)<pos:position pos:line="35" pos:column="25"/></operator><call><name pos:line="35" pos:column="25">xcalloc<pos:position pos:line="35" pos:column="32"/></name><argument_list pos:line="35" pos:column="32">(<argument><expr><literal type="number" pos:line="35" pos:column="33">1<pos:position pos:line="35" pos:column="34"/></literal></expr></argument>, <argument><expr><name><name pos:line="35" pos:column="36">sb<pos:position pos:line="35" pos:column="38"/></name><operator pos:line="35" pos:column="38">.<pos:position pos:line="35" pos:column="39"/></operator><name pos:line="35" pos:column="39">st_size<pos:position pos:line="35" pos:column="46"/></name></name> <operator pos:line="35" pos:column="47">+<pos:position pos:line="35" pos:column="48"/></operator> <literal type="number" pos:line="35" pos:column="49">1<pos:position pos:line="35" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="51"/></argument_list></call></expr></init></decl>;<pos:position pos:line="35" pos:column="52"/></decl_stmt>
    <expr_stmt><expr><name pos:line="36" pos:column="5">t<pos:position pos:line="36" pos:column="6"/></name> <operator pos:line="36" pos:column="7">=<pos:position pos:line="36" pos:column="8"/></operator> <name pos:line="36" pos:column="9">buf<pos:position pos:line="36" pos:column="12"/></name></expr>;<pos:position pos:line="36" pos:column="13"/></expr_stmt>
    <expr_stmt><expr><name pos:line="37" pos:column="5">l<pos:position pos:line="37" pos:column="6"/></name> <operator pos:line="37" pos:column="7">=<pos:position pos:line="37" pos:column="8"/></operator> <call><name pos:line="37" pos:column="9">FD_READ_METHOD<pos:position pos:line="37" pos:column="23"/></name><argument_list pos:line="37" pos:column="23">(<argument><expr><name pos:line="37" pos:column="24">fd<pos:position pos:line="37" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="28">buf<pos:position pos:line="37" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="33">sb<pos:position pos:line="37" pos:column="35"/></name><operator pos:line="37" pos:column="35">.<pos:position pos:line="37" pos:column="36"/></operator><name pos:line="37" pos:column="36">st_size<pos:position pos:line="37" pos:column="43"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="38" pos:column="5">file_close<pos:position pos:line="38" pos:column="15"/></name><argument_list pos:line="38" pos:column="15">(<argument><expr><name pos:line="38" pos:column="16">fd<pos:position pos:line="38" pos:column="18"/></name></expr></argument>)<pos:position pos:line="38" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="20"/></expr_stmt>

    <if pos:line="40" pos:column="5">if <condition pos:line="40" pos:column="8">(<expr><name pos:line="40" pos:column="9">l<pos:position pos:line="40" pos:column="10"/></name> <operator pos:line="40" pos:column="11">&lt;=<pos:position pos:line="40" pos:column="16"/></operator> <literal type="number" pos:line="40" pos:column="14">0<pos:position pos:line="40" pos:column="15"/></literal></expr>)<pos:position pos:line="40" pos:column="16"/></condition><then pos:line="40" pos:column="16"> <block pos:line="40" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">safe_free<pos:position pos:line="41" pos:column="18"/></name> <argument_list pos:line="41" pos:column="19">(<argument><expr><name pos:line="41" pos:column="20">buf<pos:position pos:line="41" pos:column="23"/></name></expr></argument>)<pos:position pos:line="41" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="25"/></expr_stmt>
        <return pos:line="42" pos:column="9">return;<pos:position pos:line="42" pos:column="16"/></return>
    }<pos:position pos:line="43" pos:column="6"/></block></then></if><empty_stmt pos:line="43" pos:column="6">;<pos:position pos:line="43" pos:column="7"/></empty_stmt>

    <while pos:line="45" pos:column="5">while <condition pos:line="45" pos:column="11">(<expr><operator pos:line="45" pos:column="12">(<pos:position pos:line="45" pos:column="13"/></operator><name pos:line="45" pos:column="13">s<pos:position pos:line="45" pos:column="14"/></name> <operator pos:line="45" pos:column="15">=<pos:position pos:line="45" pos:column="16"/></operator> <call><name pos:line="45" pos:column="17">strchr<pos:position pos:line="45" pos:column="23"/></name><argument_list pos:line="45" pos:column="23">(<argument><expr><name pos:line="45" pos:column="24">t<pos:position pos:line="45" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="45" pos:column="27">'\n'<pos:position pos:line="45" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call><operator pos:line="45" pos:column="32">)<pos:position pos:line="45" pos:column="33"/></operator></expr>)<pos:position pos:line="45" pos:column="34"/></condition> <block pos:line="45" pos:column="35">{
        <decl_stmt><decl><type><name pos:line="46" pos:column="9">char<pos:position pos:line="46" pos:column="13"/></name> <modifier pos:line="46" pos:column="14">*<pos:position pos:line="46" pos:column="15"/></modifier></type><name pos:line="46" pos:column="15">q<pos:position pos:line="46" pos:column="16"/></name></decl>;<pos:position pos:line="46" pos:column="17"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="47" pos:column="9">assert<pos:position pos:line="47" pos:column="15"/></name><argument_list pos:line="47" pos:column="15">(<argument><expr><name pos:line="47" pos:column="16">s<pos:position pos:line="47" pos:column="17"/></name> <operator pos:line="47" pos:column="18">-<pos:position pos:line="47" pos:column="19"/></operator> <name pos:line="47" pos:column="20">buf<pos:position pos:line="47" pos:column="23"/></name> <operator pos:line="47" pos:column="24">&lt;<pos:position pos:line="47" pos:column="28"/></operator> <name pos:line="47" pos:column="26">l<pos:position pos:line="47" pos:column="27"/></name></expr></argument>)<pos:position pos:line="47" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="48" pos:column="9">*<pos:position pos:line="48" pos:column="10"/></operator><name pos:line="48" pos:column="10">s<pos:position pos:line="48" pos:column="11"/></name> <operator pos:line="48" pos:column="12">=<pos:position pos:line="48" pos:column="13"/></operator> <literal type="char" pos:line="48" pos:column="14">'\0'<pos:position pos:line="48" pos:column="18"/></literal></expr>;<pos:position pos:line="48" pos:column="19"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">memset<pos:position pos:line="49" pos:column="15"/></name><argument_list pos:line="49" pos:column="15">(<argument><expr><operator pos:line="49" pos:column="16">&amp;<pos:position pos:line="49" pos:column="21"/></operator><name pos:line="49" pos:column="17">N<pos:position pos:line="49" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="49" pos:column="20">'\0'<pos:position pos:line="49" pos:column="24"/></literal></expr></argument>, <argument><expr><sizeof pos:line="49" pos:column="26">sizeof<argument_list pos:line="49" pos:column="32">(<argument><expr><name pos:line="49" pos:column="33">netdbEntry<pos:position pos:line="49" pos:column="43"/></name></expr></argument>)<pos:position pos:line="49" pos:column="44"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="49" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name pos:line="50" pos:column="9">q<pos:position pos:line="50" pos:column="10"/></name> <operator pos:line="50" pos:column="11">=<pos:position pos:line="50" pos:column="12"/></operator> <call><name pos:line="50" pos:column="13">strtok<pos:position pos:line="50" pos:column="19"/></name><argument_list pos:line="50" pos:column="19">(<argument><expr><name pos:line="50" pos:column="20">t<pos:position pos:line="50" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="50" pos:column="23">w_space<pos:position pos:line="50" pos:column="30"/></name></expr></argument>)<pos:position pos:line="50" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="50" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="51" pos:column="9">t<pos:position pos:line="51" pos:column="10"/></name> <operator pos:line="51" pos:column="11">=<pos:position pos:line="51" pos:column="12"/></operator> <name pos:line="51" pos:column="13">s<pos:position pos:line="51" pos:column="14"/></name> <operator pos:line="51" pos:column="15">+<pos:position pos:line="51" pos:column="16"/></operator> <literal type="number" pos:line="51" pos:column="17">1<pos:position pos:line="51" pos:column="18"/></literal></expr>;<pos:position pos:line="51" pos:column="19"/></expr_stmt>

        <if pos:line="53" pos:column="9">if <condition pos:line="53" pos:column="12">(<expr><name pos:line="53" pos:column="13">NULL<pos:position pos:line="53" pos:column="17"/></name> <operator pos:line="53" pos:column="18">==<pos:position pos:line="53" pos:column="20"/></operator> <name pos:line="53" pos:column="21">q<pos:position pos:line="53" pos:column="22"/></name></expr>)<pos:position pos:line="53" pos:column="23"/></condition><then pos:line="53" pos:column="23">
            <block type="pseudo"><continue pos:line="54" pos:column="13">continue;<pos:position pos:line="54" pos:column="22"/></continue></block></then></if>

        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><operator pos:line="56" pos:column="13">!<pos:position pos:line="56" pos:column="14"/></operator> <operator pos:line="56" pos:column="15">(<pos:position pos:line="56" pos:column="16"/></operator><name pos:line="56" pos:column="16">addr<pos:position pos:line="56" pos:column="20"/></name> <operator pos:line="56" pos:column="21">=<pos:position pos:line="56" pos:column="22"/></operator> <name pos:line="56" pos:column="23">q<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">)<pos:position pos:line="56" pos:column="25"/></operator></expr> )<pos:position pos:line="56" pos:column="27"/></condition><then pos:line="56" pos:column="27">
            <block type="pseudo"><continue pos:line="57" pos:column="13">continue;<pos:position pos:line="57" pos:column="22"/></continue></block></then></if>

        <if pos:line="59" pos:column="9">if <condition pos:line="59" pos:column="12">(<expr><call><name pos:line="59" pos:column="13">netdbLookupAddr<pos:position pos:line="59" pos:column="28"/></name><argument_list pos:line="59" pos:column="28">(<argument><expr><name pos:line="59" pos:column="29">addr<pos:position pos:line="59" pos:column="33"/></name></expr></argument>)<pos:position pos:line="59" pos:column="34"/></argument_list></call> <operator pos:line="59" pos:column="35">!=<pos:position pos:line="59" pos:column="37"/></operator> <name pos:line="59" pos:column="38">NULL<pos:position pos:line="59" pos:column="42"/></name></expr>)<pos:position pos:line="59" pos:column="43"/></condition><then pos:line="59" pos:column="43">  <comment type="block" pos:line="59" pos:column="45">/* no dups! */</comment>
            <block type="pseudo"><continue pos:line="60" pos:column="13">continue;<pos:position pos:line="60" pos:column="22"/></continue></block></then></if>

        <if pos:line="62" pos:column="9">if <condition pos:line="62" pos:column="12">(<expr><operator pos:line="62" pos:column="13">(<pos:position pos:line="62" pos:column="14"/></operator><name pos:line="62" pos:column="14">q<pos:position pos:line="62" pos:column="15"/></name> <operator pos:line="62" pos:column="16">=<pos:position pos:line="62" pos:column="17"/></operator> <call><name pos:line="62" pos:column="18">strtok<pos:position pos:line="62" pos:column="24"/></name><argument_list pos:line="62" pos:column="24">(<argument><expr><name pos:line="62" pos:column="25">NULL<pos:position pos:line="62" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="62" pos:column="31">w_space<pos:position pos:line="62" pos:column="38"/></name></expr></argument>)<pos:position pos:line="62" pos:column="39"/></argument_list></call><operator pos:line="62" pos:column="39">)<pos:position pos:line="62" pos:column="40"/></operator> <operator pos:line="62" pos:column="41">==<pos:position pos:line="62" pos:column="43"/></operator> <name pos:line="62" pos:column="44">NULL<pos:position pos:line="62" pos:column="48"/></name></expr>)<pos:position pos:line="62" pos:column="49"/></condition><then pos:line="62" pos:column="49">
            <block type="pseudo"><continue pos:line="63" pos:column="13">continue;<pos:position pos:line="63" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name><name pos:line="65" pos:column="9">N<pos:position pos:line="65" pos:column="10"/></name><operator pos:line="65" pos:column="10">.<pos:position pos:line="65" pos:column="11"/></operator><name pos:line="65" pos:column="11">pings_sent<pos:position pos:line="65" pos:column="21"/></name></name> <operator pos:line="65" pos:column="22">=<pos:position pos:line="65" pos:column="23"/></operator> <call><name pos:line="65" pos:column="24">atoi<pos:position pos:line="65" pos:column="28"/></name><argument_list pos:line="65" pos:column="28">(<argument><expr><name pos:line="65" pos:column="29">q<pos:position pos:line="65" pos:column="30"/></name></expr></argument>)<pos:position pos:line="65" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="65" pos:column="32"/></expr_stmt>

        <if pos:line="67" pos:column="9">if <condition pos:line="67" pos:column="12">(<expr><operator pos:line="67" pos:column="13">(<pos:position pos:line="67" pos:column="14"/></operator><name pos:line="67" pos:column="14">q<pos:position pos:line="67" pos:column="15"/></name> <operator pos:line="67" pos:column="16">=<pos:position pos:line="67" pos:column="17"/></operator> <call><name pos:line="67" pos:column="18">strtok<pos:position pos:line="67" pos:column="24"/></name><argument_list pos:line="67" pos:column="24">(<argument><expr><name pos:line="67" pos:column="25">NULL<pos:position pos:line="67" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="67" pos:column="31">w_space<pos:position pos:line="67" pos:column="38"/></name></expr></argument>)<pos:position pos:line="67" pos:column="39"/></argument_list></call><operator pos:line="67" pos:column="39">)<pos:position pos:line="67" pos:column="40"/></operator> <operator pos:line="67" pos:column="41">==<pos:position pos:line="67" pos:column="43"/></operator> <name pos:line="67" pos:column="44">NULL<pos:position pos:line="67" pos:column="48"/></name></expr>)<pos:position pos:line="67" pos:column="49"/></condition><then pos:line="67" pos:column="49">
            <block type="pseudo"><continue pos:line="68" pos:column="13">continue;<pos:position pos:line="68" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name><name pos:line="70" pos:column="9">N<pos:position pos:line="70" pos:column="10"/></name><operator pos:line="70" pos:column="10">.<pos:position pos:line="70" pos:column="11"/></operator><name pos:line="70" pos:column="11">pings_recv<pos:position pos:line="70" pos:column="21"/></name></name> <operator pos:line="70" pos:column="22">=<pos:position pos:line="70" pos:column="23"/></operator> <call><name pos:line="70" pos:column="24">atoi<pos:position pos:line="70" pos:column="28"/></name><argument_list pos:line="70" pos:column="28">(<argument><expr><name pos:line="70" pos:column="29">q<pos:position pos:line="70" pos:column="30"/></name></expr></argument>)<pos:position pos:line="70" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="32"/></expr_stmt>

        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name><name pos:line="72" pos:column="13">N<pos:position pos:line="72" pos:column="14"/></name><operator pos:line="72" pos:column="14">.<pos:position pos:line="72" pos:column="15"/></operator><name pos:line="72" pos:column="15">pings_recv<pos:position pos:line="72" pos:column="25"/></name></name> <operator pos:line="72" pos:column="26">==<pos:position pos:line="72" pos:column="28"/></operator> <literal type="number" pos:line="72" pos:column="29">0<pos:position pos:line="72" pos:column="30"/></literal></expr>)<pos:position pos:line="72" pos:column="31"/></condition><then pos:line="72" pos:column="31">
            <block type="pseudo"><continue pos:line="73" pos:column="13">continue;<pos:position pos:line="73" pos:column="22"/></continue></block></then></if>

        <comment type="block" pos:line="75" pos:column="9">/* give this measurement low weight */</comment>
        <expr_stmt><expr><name><name pos:line="76" pos:column="9">N<pos:position pos:line="76" pos:column="10"/></name><operator pos:line="76" pos:column="10">.<pos:position pos:line="76" pos:column="11"/></operator><name pos:line="76" pos:column="11">pings_sent<pos:position pos:line="76" pos:column="21"/></name></name> <operator pos:line="76" pos:column="22">=<pos:position pos:line="76" pos:column="23"/></operator> <literal type="number" pos:line="76" pos:column="24">1<pos:position pos:line="76" pos:column="25"/></literal></expr>;<pos:position pos:line="76" pos:column="26"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="78" pos:column="9">N<pos:position pos:line="78" pos:column="10"/></name><operator pos:line="78" pos:column="10">.<pos:position pos:line="78" pos:column="11"/></operator><name pos:line="78" pos:column="11">pings_recv<pos:position pos:line="78" pos:column="21"/></name></name> <operator pos:line="78" pos:column="22">=<pos:position pos:line="78" pos:column="23"/></operator> <literal type="number" pos:line="78" pos:column="24">1<pos:position pos:line="78" pos:column="25"/></literal></expr>;<pos:position pos:line="78" pos:column="26"/></expr_stmt>

        <if pos:line="80" pos:column="9">if <condition pos:line="80" pos:column="12">(<expr><operator pos:line="80" pos:column="13">(<pos:position pos:line="80" pos:column="14"/></operator><name pos:line="80" pos:column="14">q<pos:position pos:line="80" pos:column="15"/></name> <operator pos:line="80" pos:column="16">=<pos:position pos:line="80" pos:column="17"/></operator> <call><name pos:line="80" pos:column="18">strtok<pos:position pos:line="80" pos:column="24"/></name><argument_list pos:line="80" pos:column="24">(<argument><expr><name pos:line="80" pos:column="25">NULL<pos:position pos:line="80" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="31">w_space<pos:position pos:line="80" pos:column="38"/></name></expr></argument>)<pos:position pos:line="80" pos:column="39"/></argument_list></call><operator pos:line="80" pos:column="39">)<pos:position pos:line="80" pos:column="40"/></operator> <operator pos:line="80" pos:column="41">==<pos:position pos:line="80" pos:column="43"/></operator> <name pos:line="80" pos:column="44">NULL<pos:position pos:line="80" pos:column="48"/></name></expr>)<pos:position pos:line="80" pos:column="49"/></condition><then pos:line="80" pos:column="49">
            <block type="pseudo"><continue pos:line="81" pos:column="13">continue;<pos:position pos:line="81" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name><name pos:line="83" pos:column="9">N<pos:position pos:line="83" pos:column="10"/></name><operator pos:line="83" pos:column="10">.<pos:position pos:line="83" pos:column="11"/></operator><name pos:line="83" pos:column="11">hops<pos:position pos:line="83" pos:column="15"/></name></name> <operator pos:line="83" pos:column="16">=<pos:position pos:line="83" pos:column="17"/></operator> <call><name pos:line="83" pos:column="18">atof<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><name pos:line="83" pos:column="23">q<pos:position pos:line="83" pos:column="24"/></name></expr></argument>)<pos:position pos:line="83" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="26"/></expr_stmt>

        <if pos:line="85" pos:column="9">if <condition pos:line="85" pos:column="12">(<expr><operator pos:line="85" pos:column="13">(<pos:position pos:line="85" pos:column="14"/></operator><name pos:line="85" pos:column="14">q<pos:position pos:line="85" pos:column="15"/></name> <operator pos:line="85" pos:column="16">=<pos:position pos:line="85" pos:column="17"/></operator> <call><name pos:line="85" pos:column="18">strtok<pos:position pos:line="85" pos:column="24"/></name><argument_list pos:line="85" pos:column="24">(<argument><expr><name pos:line="85" pos:column="25">NULL<pos:position pos:line="85" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="85" pos:column="31">w_space<pos:position pos:line="85" pos:column="38"/></name></expr></argument>)<pos:position pos:line="85" pos:column="39"/></argument_list></call><operator pos:line="85" pos:column="39">)<pos:position pos:line="85" pos:column="40"/></operator> <operator pos:line="85" pos:column="41">==<pos:position pos:line="85" pos:column="43"/></operator> <name pos:line="85" pos:column="44">NULL<pos:position pos:line="85" pos:column="48"/></name></expr>)<pos:position pos:line="85" pos:column="49"/></condition><then pos:line="85" pos:column="49">
            <block type="pseudo"><continue pos:line="86" pos:column="13">continue;<pos:position pos:line="86" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name><name pos:line="88" pos:column="9">N<pos:position pos:line="88" pos:column="10"/></name><operator pos:line="88" pos:column="10">.<pos:position pos:line="88" pos:column="11"/></operator><name pos:line="88" pos:column="11">rtt<pos:position pos:line="88" pos:column="14"/></name></name> <operator pos:line="88" pos:column="15">=<pos:position pos:line="88" pos:column="16"/></operator> <call><name pos:line="88" pos:column="17">atof<pos:position pos:line="88" pos:column="21"/></name><argument_list pos:line="88" pos:column="21">(<argument><expr><name pos:line="88" pos:column="22">q<pos:position pos:line="88" pos:column="23"/></name></expr></argument>)<pos:position pos:line="88" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="88" pos:column="25"/></expr_stmt>

        <if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><operator pos:line="90" pos:column="13">(<pos:position pos:line="90" pos:column="14"/></operator><name pos:line="90" pos:column="14">q<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <call><name pos:line="90" pos:column="18">strtok<pos:position pos:line="90" pos:column="24"/></name><argument_list pos:line="90" pos:column="24">(<argument><expr><name pos:line="90" pos:column="25">NULL<pos:position pos:line="90" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="90" pos:column="31">w_space<pos:position pos:line="90" pos:column="38"/></name></expr></argument>)<pos:position pos:line="90" pos:column="39"/></argument_list></call><operator pos:line="90" pos:column="39">)<pos:position pos:line="90" pos:column="40"/></operator> <operator pos:line="90" pos:column="41">==<pos:position pos:line="90" pos:column="43"/></operator> <name pos:line="90" pos:column="44">NULL<pos:position pos:line="90" pos:column="48"/></name></expr>)<pos:position pos:line="90" pos:column="49"/></condition><then pos:line="90" pos:column="49">
            <block type="pseudo"><continue pos:line="91" pos:column="13">continue;<pos:position pos:line="91" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name><name pos:line="93" pos:column="9">N<pos:position pos:line="93" pos:column="10"/></name><operator pos:line="93" pos:column="10">.<pos:position pos:line="93" pos:column="11"/></operator><name pos:line="93" pos:column="11">next_ping_time<pos:position pos:line="93" pos:column="25"/></name></name> <operator pos:line="93" pos:column="26">=<pos:position pos:line="93" pos:column="27"/></operator> <operator pos:line="93" pos:column="28">(<pos:position pos:line="93" pos:column="29"/></operator><name pos:line="93" pos:column="29">time_t<pos:position pos:line="93" pos:column="35"/></name><operator pos:line="93" pos:column="35">)<pos:position pos:line="93" pos:column="36"/></operator> <call><name pos:line="93" pos:column="37">atoi<pos:position pos:line="93" pos:column="41"/></name><argument_list pos:line="93" pos:column="41">(<argument><expr><name pos:line="93" pos:column="42">q<pos:position pos:line="93" pos:column="43"/></name></expr></argument>)<pos:position pos:line="93" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="45"/></expr_stmt>

        <if pos:line="95" pos:column="9">if <condition pos:line="95" pos:column="12">(<expr><operator pos:line="95" pos:column="13">(<pos:position pos:line="95" pos:column="14"/></operator><name pos:line="95" pos:column="14">q<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">=<pos:position pos:line="95" pos:column="17"/></operator> <call><name pos:line="95" pos:column="18">strtok<pos:position pos:line="95" pos:column="24"/></name><argument_list pos:line="95" pos:column="24">(<argument><expr><name pos:line="95" pos:column="25">NULL<pos:position pos:line="95" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="95" pos:column="31">w_space<pos:position pos:line="95" pos:column="38"/></name></expr></argument>)<pos:position pos:line="95" pos:column="39"/></argument_list></call><operator pos:line="95" pos:column="39">)<pos:position pos:line="95" pos:column="40"/></operator> <operator pos:line="95" pos:column="41">==<pos:position pos:line="95" pos:column="43"/></operator> <name pos:line="95" pos:column="44">NULL<pos:position pos:line="95" pos:column="48"/></name></expr>)<pos:position pos:line="95" pos:column="49"/></condition><then pos:line="95" pos:column="49">
            <block type="pseudo"><continue pos:line="96" pos:column="13">continue;<pos:position pos:line="96" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><name><name pos:line="98" pos:column="9">N<pos:position pos:line="98" pos:column="10"/></name><operator pos:line="98" pos:column="10">.<pos:position pos:line="98" pos:column="11"/></operator><name pos:line="98" pos:column="11">last_use_time<pos:position pos:line="98" pos:column="24"/></name></name> <operator pos:line="98" pos:column="25">=<pos:position pos:line="98" pos:column="26"/></operator> <operator pos:line="98" pos:column="27">(<pos:position pos:line="98" pos:column="28"/></operator><name pos:line="98" pos:column="28">time_t<pos:position pos:line="98" pos:column="34"/></name><operator pos:line="98" pos:column="34">)<pos:position pos:line="98" pos:column="35"/></operator> <call><name pos:line="98" pos:column="36">atoi<pos:position pos:line="98" pos:column="40"/></name><argument_list pos:line="98" pos:column="40">(<argument><expr><name pos:line="98" pos:column="41">q<pos:position pos:line="98" pos:column="42"/></name></expr></argument>)<pos:position pos:line="98" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="98" pos:column="44"/></expr_stmt>

        <expr_stmt><expr><name pos:line="100" pos:column="9">n<pos:position pos:line="100" pos:column="10"/></name> <operator pos:line="100" pos:column="11">=<pos:position pos:line="100" pos:column="12"/></operator> <operator pos:line="100" pos:column="13">new<pos:position pos:line="100" pos:column="16"/></operator> <name pos:line="100" pos:column="17">netdbEntry<pos:position pos:line="100" pos:column="27"/></name></expr>;<pos:position pos:line="100" pos:column="28"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="102" pos:column="9">memcpy<pos:position pos:line="102" pos:column="15"/></name><argument_list pos:line="102" pos:column="15">(<argument><expr><name pos:line="102" pos:column="16">n<pos:position pos:line="102" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="102" pos:column="19">&amp;<pos:position pos:line="102" pos:column="24"/></operator><name pos:line="102" pos:column="20">N<pos:position pos:line="102" pos:column="21"/></name></expr></argument>, <argument><expr><sizeof pos:line="102" pos:column="23">sizeof<argument_list pos:line="102" pos:column="29">(<argument><expr><name pos:line="102" pos:column="30">netdbEntry<pos:position pos:line="102" pos:column="40"/></name></expr></argument>)<pos:position pos:line="102" pos:column="41"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="102" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="43"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="104" pos:column="9">netdbHashInsert<pos:position pos:line="104" pos:column="24"/></name><argument_list pos:line="104" pos:column="24">(<argument><expr><name pos:line="104" pos:column="25">n<pos:position pos:line="104" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="104" pos:column="28">addr<pos:position pos:line="104" pos:column="32"/></name></expr></argument>)<pos:position pos:line="104" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="34"/></expr_stmt>

        <while pos:line="106" pos:column="9">while <condition pos:line="106" pos:column="15">(<expr><operator pos:line="106" pos:column="16">(<pos:position pos:line="106" pos:column="17"/></operator><name pos:line="106" pos:column="17">q<pos:position pos:line="106" pos:column="18"/></name> <operator pos:line="106" pos:column="19">=<pos:position pos:line="106" pos:column="20"/></operator> <call><name pos:line="106" pos:column="21">strtok<pos:position pos:line="106" pos:column="27"/></name><argument_list pos:line="106" pos:column="27">(<argument><expr><name pos:line="106" pos:column="28">NULL<pos:position pos:line="106" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="106" pos:column="34">w_space<pos:position pos:line="106" pos:column="41"/></name></expr></argument>)<pos:position pos:line="106" pos:column="42"/></argument_list></call><operator pos:line="106" pos:column="42">)<pos:position pos:line="106" pos:column="43"/></operator> <operator pos:line="106" pos:column="44">!=<pos:position pos:line="106" pos:column="46"/></operator> <name pos:line="106" pos:column="47">NULL<pos:position pos:line="106" pos:column="51"/></name></expr>)<pos:position pos:line="106" pos:column="52"/></condition> <block pos:line="106" pos:column="53">{
            <if pos:line="107" pos:column="13">if <condition pos:line="107" pos:column="16">(<expr><call><name pos:line="107" pos:column="17">netdbLookupHost<pos:position pos:line="107" pos:column="32"/></name><argument_list pos:line="107" pos:column="32">(<argument><expr><name pos:line="107" pos:column="33">q<pos:position pos:line="107" pos:column="34"/></name></expr></argument>)<pos:position pos:line="107" pos:column="35"/></argument_list></call> <operator pos:line="107" pos:column="36">!=<pos:position pos:line="107" pos:column="38"/></operator> <name pos:line="107" pos:column="39">NULL<pos:position pos:line="107" pos:column="43"/></name></expr>)<pos:position pos:line="107" pos:column="44"/></condition><then pos:line="107" pos:column="44"> <comment type="block" pos:line="107" pos:column="45">/* no dups! */</comment>
                <block type="pseudo"><continue pos:line="108" pos:column="17">continue;<pos:position pos:line="108" pos:column="26"/></continue></block></then></if>

            <expr_stmt><expr><call><name pos:line="110" pos:column="13">netdbHostInsert<pos:position pos:line="110" pos:column="28"/></name><argument_list pos:line="110" pos:column="28">(<argument><expr><name pos:line="110" pos:column="29">n<pos:position pos:line="110" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="32">q<pos:position pos:line="110" pos:column="33"/></name></expr></argument>)<pos:position pos:line="110" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="111" pos:column="10"/></block></while>

        <expr_stmt><expr><operator pos:line="113" pos:column="9">++<pos:position pos:line="113" pos:column="11"/></operator><name pos:line="113" pos:column="11">count<pos:position pos:line="113" pos:column="16"/></name></expr>;<pos:position pos:line="113" pos:column="17"/></expr_stmt>
    }<pos:position pos:line="114" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="116" pos:column="5">xfree<pos:position pos:line="116" pos:column="10"/></name><argument_list pos:line="116" pos:column="10">(<argument><expr><name pos:line="116" pos:column="11">buf<pos:position pos:line="116" pos:column="14"/></name></expr></argument>)<pos:position pos:line="116" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="116" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="117" pos:column="5">getCurrentTime<pos:position pos:line="117" pos:column="19"/></name><argument_list pos:line="117" pos:column="19">()<pos:position pos:line="117" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="117" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="118" pos:column="5">debugs<pos:position pos:line="118" pos:column="11"/></name><argument_list pos:line="118" pos:column="11">(<argument><expr><literal type="number" pos:line="118" pos:column="12">38<pos:position pos:line="118" pos:column="14"/></literal></expr></argument>, <argument><expr><name pos:line="118" pos:column="16">DBG_IMPORTANT<pos:position pos:line="118" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="118" pos:column="31">"NETDB state reloaded; "<pos:position pos:line="118" pos:column="55"/></literal> <operator pos:line="118" pos:column="56">&lt;&lt;<pos:position pos:line="118" pos:column="64"/></operator>
           <name pos:line="119" pos:column="12">count<pos:position pos:line="119" pos:column="17"/></name> <operator pos:line="119" pos:column="18">&lt;&lt;<pos:position pos:line="119" pos:column="26"/></operator> <literal type="string" pos:line="119" pos:column="21">" entries, "<pos:position pos:line="119" pos:column="33"/></literal> <operator pos:line="119" pos:column="34">&lt;&lt;<pos:position pos:line="119" pos:column="42"/></operator>
           <call><name pos:line="120" pos:column="12">tvSubMsec<pos:position pos:line="120" pos:column="21"/></name><argument_list pos:line="120" pos:column="21">(<argument><expr><name pos:line="120" pos:column="22">start<pos:position pos:line="120" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="29">current_time<pos:position pos:line="120" pos:column="41"/></name></expr></argument>)<pos:position pos:line="120" pos:column="42"/></argument_list></call> <operator pos:line="120" pos:column="43">&lt;&lt;<pos:position pos:line="120" pos:column="51"/></operator> <literal type="string" pos:line="120" pos:column="46">" msec"<pos:position pos:line="120" pos:column="53"/></literal></expr></argument> )<pos:position pos:line="120" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="56"/></expr_stmt>
}<pos:position pos:line="121" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5912_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">inline<pos:position pos:line="1" pos:column="7"/></specifier>
<type><name pos:line="2" pos:column="1">int<pos:position pos:line="2" pos:column="4"/></name></type> <name pos:line="2" pos:column="5">getsockopt<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">int<pos:position pos:line="2" pos:column="19"/></name></type> <name pos:line="2" pos:column="20">s<pos:position pos:line="2" pos:column="21"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">l<pos:position pos:line="2" pos:column="28"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="30">int<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">o<pos:position pos:line="2" pos:column="35"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="37">void<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type> <name pos:line="2" pos:column="44">v<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="47">int<pos:position pos:line="2" pos:column="50"/></name> <modifier pos:line="2" pos:column="51">*<pos:position pos:line="2" pos:column="52"/></modifier></type> <name pos:line="2" pos:column="53">n<pos:position pos:line="2" pos:column="54"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="55"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Sleep<pos:position pos:line="4" pos:column="10"/></name><argument_list pos:line="4" pos:column="10">(<argument><expr><literal type="number" pos:line="4" pos:column="11">1<pos:position pos:line="4" pos:column="12"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="14"/></expr_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><operator pos:line="5" pos:column="9">(<pos:position pos:line="5" pos:column="10"/></operator><call><name><operator pos:line="5" pos:column="10">::<pos:position pos:line="5" pos:column="12"/></operator><name pos:line="5" pos:column="12">getsockopt<pos:position pos:line="5" pos:column="22"/></name></name><argument_list pos:line="5" pos:column="22">(<argument><expr><call><name pos:line="5" pos:column="23">_get_osfhandle<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">(<argument><expr><name pos:line="5" pos:column="38">s<pos:position pos:line="5" pos:column="39"/></name></expr></argument>)<pos:position pos:line="5" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="5" pos:column="42">l<pos:position pos:line="5" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="45">o<pos:position pos:line="5" pos:column="46"/></name></expr></argument>,<argument><expr><operator pos:line="5" pos:column="47">(<pos:position pos:line="5" pos:column="48"/></operator><name pos:line="5" pos:column="48">char<pos:position pos:line="5" pos:column="52"/></name> <operator pos:line="5" pos:column="53">*<pos:position pos:line="5" pos:column="54"/></operator><operator pos:line="5" pos:column="54">)<pos:position pos:line="5" pos:column="55"/></operator> <name pos:line="5" pos:column="56">v<pos:position pos:line="5" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="5" pos:column="59">n<pos:position pos:line="5" pos:column="60"/></name></expr></argument>)<pos:position pos:line="5" pos:column="61"/></argument_list></call><operator pos:line="5" pos:column="61">)<pos:position pos:line="5" pos:column="62"/></operator> <operator pos:line="5" pos:column="63">==<pos:position pos:line="5" pos:column="65"/></operator> <name pos:line="5" pos:column="66">SOCKET_ERROR<pos:position pos:line="5" pos:column="78"/></name></expr>)<pos:position pos:line="5" pos:column="79"/></condition><then pos:line="5" pos:column="79"> <block pos:line="5" pos:column="80">{
        <expr_stmt><expr><name pos:line="6" pos:column="9">errno<pos:position pos:line="6" pos:column="14"/></name> <operator pos:line="6" pos:column="15">=<pos:position pos:line="6" pos:column="16"/></operator> <call><name pos:line="6" pos:column="17">WSAGetLastError<pos:position pos:line="6" pos:column="32"/></name><argument_list pos:line="6" pos:column="32">()<pos:position pos:line="6" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="35"/></expr_stmt>
        <return pos:line="7" pos:column="9">return <expr><operator pos:line="7" pos:column="16">-<pos:position pos:line="7" pos:column="17"/></operator><literal type="number" pos:line="7" pos:column="17">1<pos:position pos:line="7" pos:column="18"/></literal></expr>;<pos:position pos:line="7" pos:column="19"/></return>
    }<pos:position pos:line="8" pos:column="6"/></block></then> <else pos:line="8" pos:column="7">else
        <block type="pseudo"><return pos:line="9" pos:column="9">return <expr><literal type="number" pos:line="9" pos:column="16">0<pos:position pos:line="9" pos:column="17"/></literal></expr>;<pos:position pos:line="9" pos:column="18"/></return></block></else></if>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

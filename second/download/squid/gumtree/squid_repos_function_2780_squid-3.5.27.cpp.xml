<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2780_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">switchToTunnel<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">HttpRequest<pos:position pos:line="2" pos:column="27"/></name> <modifier pos:line="2" pos:column="28">*<pos:position pos:line="2" pos:column="29"/></modifier></type><name pos:line="2" pos:column="29">request<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="38">Comm<pos:position pos:line="2" pos:column="42"/></name><operator pos:line="2" pos:column="42">::<pos:position pos:line="2" pos:column="44"/></operator><name pos:line="2" pos:column="44">ConnectionPointer<pos:position pos:line="2" pos:column="61"/></name></name> <modifier pos:line="2" pos:column="62">&amp;<pos:position pos:line="2" pos:column="67"/></modifier></type><name pos:line="2" pos:column="63">clientConn<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="75">Comm<pos:position pos:line="2" pos:column="79"/></name><operator pos:line="2" pos:column="79">::<pos:position pos:line="2" pos:column="81"/></operator><name pos:line="2" pos:column="81">ConnectionPointer<pos:position pos:line="2" pos:column="98"/></name></name> <modifier pos:line="2" pos:column="99">&amp;<pos:position pos:line="2" pos:column="104"/></modifier></type><name pos:line="2" pos:column="100">srvConn<pos:position pos:line="2" pos:column="107"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="108"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">26<pos:position pos:line="4" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="4" pos:column="15">5<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="18">"Revert to tunnel FD "<pos:position pos:line="4" pos:column="40"/></literal> <operator pos:line="4" pos:column="41">&lt;&lt;<pos:position pos:line="4" pos:column="49"/></operator> <name><name pos:line="4" pos:column="44">clientConn<pos:position pos:line="4" pos:column="54"/></name><operator pos:line="4" pos:column="54">-&gt;<pos:position pos:line="4" pos:column="59"/></operator><name pos:line="4" pos:column="56">fd<pos:position pos:line="4" pos:column="58"/></name></name> <operator pos:line="4" pos:column="59">&lt;&lt;<pos:position pos:line="4" pos:column="67"/></operator> <literal type="string" pos:line="4" pos:column="62">" with FD "<pos:position pos:line="4" pos:column="73"/></literal> <operator pos:line="4" pos:column="74">&lt;&lt;<pos:position pos:line="4" pos:column="82"/></operator> <name><name pos:line="4" pos:column="77">srvConn<pos:position pos:line="4" pos:column="84"/></name><operator pos:line="4" pos:column="84">-&gt;<pos:position pos:line="4" pos:column="89"/></operator><name pos:line="4" pos:column="86">fd<pos:position pos:line="4" pos:column="88"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="89"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="90"/></expr_stmt>
    <comment type="block" pos:line="5" pos:column="5">/* Create state structure. */</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">TunnelStateData<pos:position pos:line="6" pos:column="20"/></name> <modifier pos:line="6" pos:column="21">*<pos:position pos:line="6" pos:column="22"/></modifier></type><name pos:line="6" pos:column="22">tunnelState<pos:position pos:line="6" pos:column="33"/></name> <init pos:line="6" pos:column="34">= <expr><name pos:line="6" pos:column="36">NULL<pos:position pos:line="6" pos:column="40"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="41"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="7" pos:column="5">const<pos:position pos:line="7" pos:column="10"/></specifier> <name pos:line="7" pos:column="11">char<pos:position pos:line="7" pos:column="15"/></name> <modifier pos:line="7" pos:column="16">*<pos:position pos:line="7" pos:column="17"/></modifier></type><name pos:line="7" pos:column="17">url<pos:position pos:line="7" pos:column="20"/></name> <init pos:line="7" pos:column="21">= <expr><call><name pos:line="7" pos:column="23">urlCanonical<pos:position pos:line="7" pos:column="35"/></name><argument_list pos:line="7" pos:column="35">(<argument><expr><name pos:line="7" pos:column="36">request<pos:position pos:line="7" pos:column="43"/></name></expr></argument>)<pos:position pos:line="7" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="7" pos:column="45"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">26<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">3<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="19">request<pos:position pos:line="9" pos:column="26"/></name><operator pos:line="9" pos:column="26">-&gt;<pos:position pos:line="9" pos:column="31"/></operator><name pos:line="9" pos:column="28">method<pos:position pos:line="9" pos:column="34"/></name></name> <operator pos:line="9" pos:column="35">&lt;&lt;<pos:position pos:line="9" pos:column="43"/></operator> <literal type="string" pos:line="9" pos:column="38">" "<pos:position pos:line="9" pos:column="41"/></literal> <operator pos:line="9" pos:column="42">&lt;&lt;<pos:position pos:line="9" pos:column="50"/></operator> <name pos:line="9" pos:column="45">url<pos:position pos:line="9" pos:column="48"/></name> <operator pos:line="9" pos:column="49">&lt;&lt;<pos:position pos:line="9" pos:column="57"/></operator> <literal type="string" pos:line="9" pos:column="52">" "<pos:position pos:line="9" pos:column="55"/></literal> <operator pos:line="9" pos:column="56">&lt;&lt;<pos:position pos:line="9" pos:column="64"/></operator> <name><name pos:line="9" pos:column="59">request<pos:position pos:line="9" pos:column="66"/></name><operator pos:line="9" pos:column="66">-&gt;<pos:position pos:line="9" pos:column="71"/></operator><name pos:line="9" pos:column="68">http_ver<pos:position pos:line="9" pos:column="76"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="78"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="10" pos:column="5">++<pos:position pos:line="10" pos:column="7"/></operator><name><name pos:line="10" pos:column="7">statCounter<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">.<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="19">server<pos:position pos:line="10" pos:column="25"/></name><operator pos:line="10" pos:column="25">.<pos:position pos:line="10" pos:column="26"/></operator><name pos:line="10" pos:column="26">all<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">.<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">requests<pos:position pos:line="10" pos:column="38"/></name></name></expr>;<pos:position pos:line="10" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="11" pos:column="5">++<pos:position pos:line="11" pos:column="7"/></operator><name><name pos:line="11" pos:column="7">statCounter<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">.<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="19">server<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">.<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">other<pos:position pos:line="11" pos:column="31"/></name><operator pos:line="11" pos:column="31">.<pos:position pos:line="11" pos:column="32"/></operator><name pos:line="11" pos:column="32">requests<pos:position pos:line="11" pos:column="40"/></name></name></expr>;<pos:position pos:line="11" pos:column="41"/></expr_stmt>

    <expr_stmt><expr><name pos:line="13" pos:column="5">tunnelState<pos:position pos:line="13" pos:column="16"/></name> <operator pos:line="13" pos:column="17">=<pos:position pos:line="13" pos:column="18"/></operator> <operator pos:line="13" pos:column="19">new<pos:position pos:line="13" pos:column="22"/></operator> <name pos:line="13" pos:column="23">TunnelStateData<pos:position pos:line="13" pos:column="38"/></name></expr>;<pos:position pos:line="13" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">tunnelState<pos:position pos:line="14" pos:column="16"/></name><operator pos:line="14" pos:column="16">-&gt;<pos:position pos:line="14" pos:column="21"/></operator><name pos:line="14" pos:column="18">url<pos:position pos:line="14" pos:column="21"/></name></name> <operator pos:line="14" pos:column="22">=<pos:position pos:line="14" pos:column="23"/></operator> <call><name pos:line="14" pos:column="24">xstrdup<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">url<pos:position pos:line="14" pos:column="35"/></name></expr></argument>)<pos:position pos:line="14" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">tunnelState<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">-&gt;<pos:position pos:line="15" pos:column="21"/></operator><name pos:line="15" pos:column="18">request<pos:position pos:line="15" pos:column="25"/></name></name> <operator pos:line="15" pos:column="26">=<pos:position pos:line="15" pos:column="27"/></operator> <name pos:line="15" pos:column="28">request<pos:position pos:line="15" pos:column="35"/></name></expr>;<pos:position pos:line="15" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="16" pos:column="5">tunnelState<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">server<pos:position pos:line="16" pos:column="24"/></name><operator pos:line="16" pos:column="24">.<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">size_ptr<pos:position pos:line="16" pos:column="33"/></name></name> <operator pos:line="16" pos:column="34">=<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">NULL<pos:position pos:line="16" pos:column="40"/></name></expr>;<pos:position pos:line="16" pos:column="41"/></expr_stmt> <comment type="line" pos:line="16" pos:column="42">//Set later if ClientSocketContext is available</comment>

    <comment type="line" pos:line="18" pos:column="5">// Temporary static variable to store the unneeded for our case status code</comment>
    <decl_stmt><decl><specifier pos:line="19" pos:column="5">static<pos:position pos:line="19" pos:column="11"/></specifier> <type><name pos:line="19" pos:column="12">int<pos:position pos:line="19" pos:column="15"/></name></type> <name pos:line="19" pos:column="16">status_code<pos:position pos:line="19" pos:column="27"/></name> <init pos:line="19" pos:column="28">= <expr><literal type="number" pos:line="19" pos:column="30">0<pos:position pos:line="19" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="19" pos:column="32"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="20" pos:column="5">tunnelState<pos:position pos:line="20" pos:column="16"/></name><operator pos:line="20" pos:column="16">-&gt;<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="18">status_ptr<pos:position pos:line="20" pos:column="28"/></name></name> <operator pos:line="20" pos:column="29">=<pos:position pos:line="20" pos:column="30"/></operator> <operator pos:line="20" pos:column="31">&amp;<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="32">status_code<pos:position pos:line="20" pos:column="43"/></name></expr>;<pos:position pos:line="20" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">tunnelState<pos:position pos:line="21" pos:column="16"/></name><operator pos:line="21" pos:column="16">-&gt;<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="18">client<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">.<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">conn<pos:position pos:line="21" pos:column="29"/></name></name> <operator pos:line="21" pos:column="30">=<pos:position pos:line="21" pos:column="31"/></operator> <name pos:line="21" pos:column="32">clientConn<pos:position pos:line="21" pos:column="42"/></name></expr>;<pos:position pos:line="21" pos:column="43"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="23" pos:column="5">ConnStateData<pos:position pos:line="23" pos:column="18"/></name> <modifier pos:line="23" pos:column="19">*<pos:position pos:line="23" pos:column="20"/></modifier></type><name pos:line="23" pos:column="20">conn<pos:position pos:line="23" pos:column="24"/></name></decl>;<pos:position pos:line="23" pos:column="25"/></decl_stmt>
    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><operator pos:line="24" pos:column="9">(<pos:position pos:line="24" pos:column="10"/></operator><name pos:line="24" pos:column="10">conn<pos:position pos:line="24" pos:column="14"/></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <call><name><name pos:line="24" pos:column="17">request<pos:position pos:line="24" pos:column="24"/></name><operator pos:line="24" pos:column="24">-&gt;<pos:position pos:line="24" pos:column="29"/></operator><name pos:line="24" pos:column="26">clientConnectionManager<pos:position pos:line="24" pos:column="49"/></name><operator pos:line="24" pos:column="49">.<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="50">get<pos:position pos:line="24" pos:column="53"/></name></name><argument_list pos:line="24" pos:column="53">()<pos:position pos:line="24" pos:column="55"/></argument_list></call><operator pos:line="24" pos:column="55">)<pos:position pos:line="24" pos:column="56"/></operator></expr>)<pos:position pos:line="24" pos:column="57"/></condition><then pos:line="24" pos:column="57"> <block pos:line="24" pos:column="58">{
        <decl_stmt><decl><type><name><name pos:line="25" pos:column="9">ClientSocketContext<pos:position pos:line="25" pos:column="28"/></name><operator pos:line="25" pos:column="28">::<pos:position pos:line="25" pos:column="30"/></operator><name pos:line="25" pos:column="30">Pointer<pos:position pos:line="25" pos:column="37"/></name></name></type> <name pos:line="25" pos:column="38">context<pos:position pos:line="25" pos:column="45"/></name> <init pos:line="25" pos:column="46">= <expr><call><name><name pos:line="25" pos:column="48">conn<pos:position pos:line="25" pos:column="52"/></name><operator pos:line="25" pos:column="52">-&gt;<pos:position pos:line="25" pos:column="57"/></operator><name pos:line="25" pos:column="54">getCurrentContext<pos:position pos:line="25" pos:column="71"/></name></name><argument_list pos:line="25" pos:column="71">()<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="74"/></decl_stmt>
        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name pos:line="26" pos:column="13">context<pos:position pos:line="26" pos:column="20"/></name> <operator pos:line="26" pos:column="21">!=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="24">NULL<pos:position pos:line="26" pos:column="28"/></name> <operator pos:line="26" pos:column="29">&amp;&amp;<pos:position pos:line="26" pos:column="39"/></operator> <name><name pos:line="26" pos:column="32">context<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">-&gt;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="41">http<pos:position pos:line="26" pos:column="45"/></name></name> <operator pos:line="26" pos:column="46">!=<pos:position pos:line="26" pos:column="48"/></operator> <name pos:line="26" pos:column="49">NULL<pos:position pos:line="26" pos:column="53"/></name></expr>)<pos:position pos:line="26" pos:column="54"/></condition><then pos:line="26" pos:column="54"> <block pos:line="26" pos:column="55">{
            <expr_stmt><expr><name><name pos:line="27" pos:column="13">tunnelState<pos:position pos:line="27" pos:column="24"/></name><operator pos:line="27" pos:column="24">-&gt;<pos:position pos:line="27" pos:column="29"/></operator><name pos:line="27" pos:column="26">logTag_ptr<pos:position pos:line="27" pos:column="36"/></name></name> <operator pos:line="27" pos:column="37">=<pos:position pos:line="27" pos:column="38"/></operator> <operator pos:line="27" pos:column="39">&amp;<pos:position pos:line="27" pos:column="44"/></operator><name><name pos:line="27" pos:column="40">context<pos:position pos:line="27" pos:column="47"/></name><operator pos:line="27" pos:column="47">-&gt;<pos:position pos:line="27" pos:column="52"/></operator><name pos:line="27" pos:column="49">http<pos:position pos:line="27" pos:column="53"/></name><operator pos:line="27" pos:column="53">-&gt;<pos:position pos:line="27" pos:column="58"/></operator><name pos:line="27" pos:column="55">logType<pos:position pos:line="27" pos:column="62"/></name></name></expr>;<pos:position pos:line="27" pos:column="63"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="28" pos:column="13">tunnelState<pos:position pos:line="28" pos:column="24"/></name><operator pos:line="28" pos:column="24">-&gt;<pos:position pos:line="28" pos:column="29"/></operator><name pos:line="28" pos:column="26">server<pos:position pos:line="28" pos:column="32"/></name><operator pos:line="28" pos:column="32">.<pos:position pos:line="28" pos:column="33"/></operator><name pos:line="28" pos:column="33">size_ptr<pos:position pos:line="28" pos:column="41"/></name></name> <operator pos:line="28" pos:column="42">=<pos:position pos:line="28" pos:column="43"/></operator> <operator pos:line="28" pos:column="44">&amp;<pos:position pos:line="28" pos:column="49"/></operator><name><name pos:line="28" pos:column="45">context<pos:position pos:line="28" pos:column="52"/></name><operator pos:line="28" pos:column="52">-&gt;<pos:position pos:line="28" pos:column="57"/></operator><name pos:line="28" pos:column="54">http<pos:position pos:line="28" pos:column="58"/></name><operator pos:line="28" pos:column="58">-&gt;<pos:position pos:line="28" pos:column="63"/></operator><name pos:line="28" pos:column="60">out<pos:position pos:line="28" pos:column="63"/></name><operator pos:line="28" pos:column="63">.<pos:position pos:line="28" pos:column="64"/></operator><name pos:line="28" pos:column="64">size<pos:position pos:line="28" pos:column="68"/></name></name></expr>;<pos:position pos:line="28" pos:column="69"/></expr_stmt>
            <if pos:line="29" pos:column="13">if <condition pos:line="29" pos:column="16">(<expr><name><name pos:line="29" pos:column="17">context<pos:position pos:line="29" pos:column="24"/></name><operator pos:line="29" pos:column="24">-&gt;<pos:position pos:line="29" pos:column="29"/></operator><name pos:line="29" pos:column="26">http<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">al<pos:position pos:line="29" pos:column="34"/></name></name> <operator pos:line="29" pos:column="35">!=<pos:position pos:line="29" pos:column="37"/></operator> <name pos:line="29" pos:column="38">NULL<pos:position pos:line="29" pos:column="42"/></name></expr>)<pos:position pos:line="29" pos:column="43"/></condition><then pos:line="29" pos:column="43"> <block pos:line="29" pos:column="44">{
                <expr_stmt><expr><name><name pos:line="30" pos:column="17">tunnelState<pos:position pos:line="30" pos:column="28"/></name><operator pos:line="30" pos:column="28">-&gt;<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="30">al<pos:position pos:line="30" pos:column="32"/></name></name> <operator pos:line="30" pos:column="33">=<pos:position pos:line="30" pos:column="34"/></operator> <name><name pos:line="30" pos:column="35">context<pos:position pos:line="30" pos:column="42"/></name><operator pos:line="30" pos:column="42">-&gt;<pos:position pos:line="30" pos:column="47"/></operator><name pos:line="30" pos:column="44">http<pos:position pos:line="30" pos:column="48"/></name><operator pos:line="30" pos:column="48">-&gt;<pos:position pos:line="30" pos:column="53"/></operator><name pos:line="30" pos:column="50">al<pos:position pos:line="30" pos:column="52"/></name></name></expr>;<pos:position pos:line="30" pos:column="53"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="31" pos:column="17">tunnelState<pos:position pos:line="31" pos:column="28"/></name><operator pos:line="31" pos:column="28">-&gt;<pos:position pos:line="31" pos:column="33"/></operator><name pos:line="31" pos:column="30">client<pos:position pos:line="31" pos:column="36"/></name><operator pos:line="31" pos:column="36">.<pos:position pos:line="31" pos:column="37"/></operator><name pos:line="31" pos:column="37">size_ptr<pos:position pos:line="31" pos:column="45"/></name></name> <operator pos:line="31" pos:column="46">=<pos:position pos:line="31" pos:column="47"/></operator> <operator pos:line="31" pos:column="48">&amp;<pos:position pos:line="31" pos:column="53"/></operator><name><name pos:line="31" pos:column="49">context<pos:position pos:line="31" pos:column="56"/></name><operator pos:line="31" pos:column="56">-&gt;<pos:position pos:line="31" pos:column="61"/></operator><name pos:line="31" pos:column="58">http<pos:position pos:line="31" pos:column="62"/></name><operator pos:line="31" pos:column="62">-&gt;<pos:position pos:line="31" pos:column="67"/></operator><name pos:line="31" pos:column="64">al<pos:position pos:line="31" pos:column="66"/></name><operator pos:line="31" pos:column="66">-&gt;<pos:position pos:line="31" pos:column="71"/></operator><name pos:line="31" pos:column="68">http<pos:position pos:line="31" pos:column="72"/></name><operator pos:line="31" pos:column="72">.<pos:position pos:line="31" pos:column="73"/></operator><name pos:line="31" pos:column="73">clientRequestSz<pos:position pos:line="31" pos:column="88"/></name><operator pos:line="31" pos:column="88">.<pos:position pos:line="31" pos:column="89"/></operator><name pos:line="31" pos:column="89">payloadData<pos:position pos:line="31" pos:column="100"/></name></name></expr>;<pos:position pos:line="31" pos:column="101"/></expr_stmt>
            }<pos:position pos:line="32" pos:column="14"/></block></then></if>

<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><name pos:line="34" pos:column="5">USE_DELAY_POOLS<pos:position pos:line="34" pos:column="20"/></name></expr></cpp:if>
            <comment type="block" pos:line="35" pos:column="13">/* no point using the delayIsNoDelay stuff since tunnel is nice and simple */</comment>
            <if pos:line="36" pos:column="13">if <condition pos:line="36" pos:column="16">(<expr><call><name><name pos:line="36" pos:column="17">srvConn<pos:position pos:line="36" pos:column="24"/></name><operator pos:line="36" pos:column="24">-&gt;<pos:position pos:line="36" pos:column="29"/></operator><name pos:line="36" pos:column="26">getPeer<pos:position pos:line="36" pos:column="33"/></name></name><argument_list pos:line="36" pos:column="33">()<pos:position pos:line="36" pos:column="35"/></argument_list></call> <operator pos:line="36" pos:column="36">&amp;&amp;<pos:position pos:line="36" pos:column="46"/></operator> <call><name><name pos:line="36" pos:column="39">srvConn<pos:position pos:line="36" pos:column="46"/></name><operator pos:line="36" pos:column="46">-&gt;<pos:position pos:line="36" pos:column="51"/></operator><name pos:line="36" pos:column="48">getPeer<pos:position pos:line="36" pos:column="55"/></name></name><argument_list pos:line="36" pos:column="55">()<pos:position pos:line="36" pos:column="57"/></argument_list></call><operator pos:line="36" pos:column="57">-&gt;<pos:position pos:line="36" pos:column="62"/></operator><name><name pos:line="36" pos:column="59">options<pos:position pos:line="36" pos:column="66"/></name><operator pos:line="36" pos:column="66">.<pos:position pos:line="36" pos:column="67"/></operator><name pos:line="36" pos:column="67">no_delay<pos:position pos:line="36" pos:column="75"/></name></name></expr>)<pos:position pos:line="36" pos:column="76"/></condition><then pos:line="36" pos:column="76">
                <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="37" pos:column="17">tunnelState<pos:position pos:line="37" pos:column="28"/></name><operator pos:line="37" pos:column="28">-&gt;<pos:position pos:line="37" pos:column="33"/></operator><name pos:line="37" pos:column="30">server<pos:position pos:line="37" pos:column="36"/></name><operator pos:line="37" pos:column="36">.<pos:position pos:line="37" pos:column="37"/></operator><name pos:line="37" pos:column="37">setDelayId<pos:position pos:line="37" pos:column="47"/></name></name><argument_list pos:line="37" pos:column="47">(<argument><expr><call><name><name pos:line="37" pos:column="48">DelayId<pos:position pos:line="37" pos:column="55"/></name><operator pos:line="37" pos:column="55">::<pos:position pos:line="37" pos:column="57"/></operator><name pos:line="37" pos:column="57">DelayClient<pos:position pos:line="37" pos:column="68"/></name></name><argument_list pos:line="37" pos:column="68">(<argument><expr><name><name pos:line="37" pos:column="69">context<pos:position pos:line="37" pos:column="76"/></name><operator pos:line="37" pos:column="76">-&gt;<pos:position pos:line="37" pos:column="81"/></operator><name pos:line="37" pos:column="78">http<pos:position pos:line="37" pos:column="82"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="37" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="85"/></expr_stmt></block></then></if>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif>
        }<pos:position pos:line="39" pos:column="10"/></block></then></if>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="42" pos:column="5">comm_add_close_handler<pos:position pos:line="42" pos:column="27"/></name><argument_list pos:line="42" pos:column="27">(<argument><expr><name><name pos:line="42" pos:column="28">tunnelState<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">-&gt;<pos:position pos:line="42" pos:column="44"/></operator><name pos:line="42" pos:column="41">client<pos:position pos:line="42" pos:column="47"/></name><operator pos:line="42" pos:column="47">.<pos:position pos:line="42" pos:column="48"/></operator><name pos:line="42" pos:column="48">conn<pos:position pos:line="42" pos:column="52"/></name><operator pos:line="42" pos:column="52">-&gt;<pos:position pos:line="42" pos:column="57"/></operator><name pos:line="42" pos:column="54">fd<pos:position pos:line="42" pos:column="56"/></name></name></expr></argument>,
                           <argument><expr><name pos:line="43" pos:column="28">tunnelClientClosed<pos:position pos:line="43" pos:column="46"/></name></expr></argument>,
                           <argument><expr><name pos:line="44" pos:column="28">tunnelState<pos:position pos:line="44" pos:column="39"/></name></expr></argument>)<pos:position pos:line="44" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="41"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="46" pos:column="5">AsyncCall<pos:position pos:line="46" pos:column="14"/></name><operator pos:line="46" pos:column="14">::<pos:position pos:line="46" pos:column="16"/></operator><name pos:line="46" pos:column="16">Pointer<pos:position pos:line="46" pos:column="23"/></name></name></type> <name pos:line="46" pos:column="24">timeoutCall<pos:position pos:line="46" pos:column="35"/></name> <init pos:line="46" pos:column="36">= <expr><call><name pos:line="46" pos:column="38">commCbCall<pos:position pos:line="46" pos:column="48"/></name><argument_list pos:line="46" pos:column="48">(<argument><expr><literal type="number" pos:line="46" pos:column="49">5<pos:position pos:line="46" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="46" pos:column="52">4<pos:position pos:line="46" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="46" pos:column="55">"tunnelTimeout"<pos:position pos:line="46" pos:column="70"/></literal></expr></argument>,
                                     <argument><expr><call><name pos:line="47" pos:column="38">CommTimeoutCbPtrFun<pos:position pos:line="47" pos:column="57"/></name><argument_list pos:line="47" pos:column="57">(<argument><expr><name pos:line="47" pos:column="58">tunnelTimeout<pos:position pos:line="47" pos:column="71"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="73">tunnelState<pos:position pos:line="47" pos:column="84"/></name></expr></argument>)<pos:position pos:line="47" pos:column="85"/></argument_list></call></expr></argument>)<pos:position pos:line="47" pos:column="86"/></argument_list></call></expr></init></decl>;<pos:position pos:line="47" pos:column="87"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">commSetConnTimeout<pos:position pos:line="48" pos:column="23"/></name><argument_list pos:line="48" pos:column="23">(<argument><expr><name><name pos:line="48" pos:column="24">tunnelState<pos:position pos:line="48" pos:column="35"/></name><operator pos:line="48" pos:column="35">-&gt;<pos:position pos:line="48" pos:column="40"/></operator><name pos:line="48" pos:column="37">client<pos:position pos:line="48" pos:column="43"/></name><operator pos:line="48" pos:column="43">.<pos:position pos:line="48" pos:column="44"/></operator><name pos:line="48" pos:column="44">conn<pos:position pos:line="48" pos:column="48"/></name></name></expr></argument>, <argument><expr><name><name pos:line="48" pos:column="50">Config<pos:position pos:line="48" pos:column="56"/></name><operator pos:line="48" pos:column="56">.<pos:position pos:line="48" pos:column="57"/></operator><name pos:line="48" pos:column="57">Timeout<pos:position pos:line="48" pos:column="64"/></name><operator pos:line="48" pos:column="64">.<pos:position pos:line="48" pos:column="65"/></operator><name pos:line="48" pos:column="65">lifetime<pos:position pos:line="48" pos:column="73"/></name></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="75">timeoutCall<pos:position pos:line="48" pos:column="86"/></name></expr></argument>)<pos:position pos:line="48" pos:column="87"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="88"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="49" pos:column="5">fd_table<pos:position pos:line="49" pos:column="13"/></name><index pos:line="49" pos:column="13">[<expr><name><name pos:line="49" pos:column="14">clientConn<pos:position pos:line="49" pos:column="24"/></name><operator pos:line="49" pos:column="24">-&gt;<pos:position pos:line="49" pos:column="29"/></operator><name pos:line="49" pos:column="26">fd<pos:position pos:line="49" pos:column="28"/></name></name></expr>]<pos:position pos:line="49" pos:column="29"/></index></name><operator pos:line="49" pos:column="29">.<pos:position pos:line="49" pos:column="30"/></operator><name pos:line="49" pos:column="30">read_method<pos:position pos:line="49" pos:column="41"/></name> <operator pos:line="49" pos:column="42">=<pos:position pos:line="49" pos:column="43"/></operator> <operator pos:line="49" pos:column="44">&amp;<pos:position pos:line="49" pos:column="49"/></operator><name pos:line="49" pos:column="45">default_read_method<pos:position pos:line="49" pos:column="64"/></name></expr>;<pos:position pos:line="49" pos:column="65"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="50" pos:column="5">fd_table<pos:position pos:line="50" pos:column="13"/></name><index pos:line="50" pos:column="13">[<expr><name><name pos:line="50" pos:column="14">clientConn<pos:position pos:line="50" pos:column="24"/></name><operator pos:line="50" pos:column="24">-&gt;<pos:position pos:line="50" pos:column="29"/></operator><name pos:line="50" pos:column="26">fd<pos:position pos:line="50" pos:column="28"/></name></name></expr>]<pos:position pos:line="50" pos:column="29"/></index></name><operator pos:line="50" pos:column="29">.<pos:position pos:line="50" pos:column="30"/></operator><name pos:line="50" pos:column="30">write_method<pos:position pos:line="50" pos:column="42"/></name> <operator pos:line="50" pos:column="43">=<pos:position pos:line="50" pos:column="44"/></operator> <operator pos:line="50" pos:column="45">&amp;<pos:position pos:line="50" pos:column="50"/></operator><name pos:line="50" pos:column="46">default_write_method<pos:position pos:line="50" pos:column="66"/></name></expr>;<pos:position pos:line="50" pos:column="67"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="52" pos:column="5">tunnelState<pos:position pos:line="52" pos:column="16"/></name><operator pos:line="52" pos:column="16">-&gt;<pos:position pos:line="52" pos:column="21"/></operator><name pos:line="52" pos:column="18">request<pos:position pos:line="52" pos:column="25"/></name><operator pos:line="52" pos:column="25">-&gt;<pos:position pos:line="52" pos:column="30"/></operator><name pos:line="52" pos:column="27">hier<pos:position pos:line="52" pos:column="31"/></name><operator pos:line="52" pos:column="31">.<pos:position pos:line="52" pos:column="32"/></operator><name pos:line="52" pos:column="32">note<pos:position pos:line="52" pos:column="36"/></name></name><argument_list pos:line="52" pos:column="36">(<argument><expr><name pos:line="52" pos:column="37">srvConn<pos:position pos:line="52" pos:column="44"/></name></expr></argument>, <argument><expr><call><name><name pos:line="52" pos:column="46">tunnelState<pos:position pos:line="52" pos:column="57"/></name><operator pos:line="52" pos:column="57">-&gt;<pos:position pos:line="52" pos:column="62"/></operator><name pos:line="52" pos:column="59">getHost<pos:position pos:line="52" pos:column="66"/></name></name><argument_list pos:line="52" pos:column="66">()<pos:position pos:line="52" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="52" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="70"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="54" pos:column="5">tunnelState<pos:position pos:line="54" pos:column="16"/></name><operator pos:line="54" pos:column="16">-&gt;<pos:position pos:line="54" pos:column="21"/></operator><name pos:line="54" pos:column="18">server<pos:position pos:line="54" pos:column="24"/></name><operator pos:line="54" pos:column="24">.<pos:position pos:line="54" pos:column="25"/></operator><name pos:line="54" pos:column="25">conn<pos:position pos:line="54" pos:column="29"/></name></name> <operator pos:line="54" pos:column="30">=<pos:position pos:line="54" pos:column="31"/></operator> <name pos:line="54" pos:column="32">srvConn<pos:position pos:line="54" pos:column="39"/></name></expr>;<pos:position pos:line="54" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="55" pos:column="5">tunnelState<pos:position pos:line="55" pos:column="16"/></name><operator pos:line="55" pos:column="16">-&gt;<pos:position pos:line="55" pos:column="21"/></operator><name pos:line="55" pos:column="18">request<pos:position pos:line="55" pos:column="25"/></name><operator pos:line="55" pos:column="25">-&gt;<pos:position pos:line="55" pos:column="30"/></operator><name pos:line="55" pos:column="27">peer_host<pos:position pos:line="55" pos:column="36"/></name></name> <operator pos:line="55" pos:column="37">=<pos:position pos:line="55" pos:column="38"/></operator> <ternary><condition><expr><call><name><name pos:line="55" pos:column="39">srvConn<pos:position pos:line="55" pos:column="46"/></name><operator pos:line="55" pos:column="46">-&gt;<pos:position pos:line="55" pos:column="51"/></operator><name pos:line="55" pos:column="48">getPeer<pos:position pos:line="55" pos:column="55"/></name></name><argument_list pos:line="55" pos:column="55">()<pos:position pos:line="55" pos:column="57"/></argument_list></call></expr> ?<pos:position pos:line="55" pos:column="59"/></condition><then pos:line="55" pos:column="59"> <expr><call><name><name pos:line="55" pos:column="60">srvConn<pos:position pos:line="55" pos:column="67"/></name><operator pos:line="55" pos:column="67">-&gt;<pos:position pos:line="55" pos:column="72"/></operator><name pos:line="55" pos:column="69">getPeer<pos:position pos:line="55" pos:column="76"/></name></name><argument_list pos:line="55" pos:column="76">()<pos:position pos:line="55" pos:column="78"/></argument_list></call><operator pos:line="55" pos:column="78">-&gt;<pos:position pos:line="55" pos:column="83"/></operator><name pos:line="55" pos:column="80">host<pos:position pos:line="55" pos:column="84"/></name></expr> <pos:position pos:line="55" pos:column="85"/></then><else pos:line="55" pos:column="85">: <expr><name pos:line="55" pos:column="87">NULL<pos:position pos:line="55" pos:column="91"/></name></expr></else></ternary></expr>;<pos:position pos:line="55" pos:column="92"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="56" pos:column="5">comm_add_close_handler<pos:position pos:line="56" pos:column="27"/></name><argument_list pos:line="56" pos:column="27">(<argument><expr><name><name pos:line="56" pos:column="28">srvConn<pos:position pos:line="56" pos:column="35"/></name><operator pos:line="56" pos:column="35">-&gt;<pos:position pos:line="56" pos:column="40"/></operator><name pos:line="56" pos:column="37">fd<pos:position pos:line="56" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="41">tunnelServerClosed<pos:position pos:line="56" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="61">tunnelState<pos:position pos:line="56" pos:column="72"/></name></expr></argument>)<pos:position pos:line="56" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="74"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="58" pos:column="5">debugs<pos:position pos:line="58" pos:column="11"/></name><argument_list pos:line="58" pos:column="11">(<argument><expr><literal type="number" pos:line="58" pos:column="12">26<pos:position pos:line="58" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="58" pos:column="16">4<pos:position pos:line="58" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="58" pos:column="19">"determine post-connect handling pathway."<pos:position pos:line="58" pos:column="61"/></literal></expr></argument>)<pos:position pos:line="58" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="58" pos:column="63"/></expr_stmt>
    <if pos:line="59" pos:column="5">if <condition pos:line="59" pos:column="8">(<expr><call><name><name pos:line="59" pos:column="9">srvConn<pos:position pos:line="59" pos:column="16"/></name><operator pos:line="59" pos:column="16">-&gt;<pos:position pos:line="59" pos:column="21"/></operator><name pos:line="59" pos:column="18">getPeer<pos:position pos:line="59" pos:column="25"/></name></name><argument_list pos:line="59" pos:column="25">()<pos:position pos:line="59" pos:column="27"/></argument_list></call></expr>)<pos:position pos:line="59" pos:column="28"/></condition><then pos:line="59" pos:column="28"> <block pos:line="59" pos:column="29">{
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">tunnelState<pos:position pos:line="60" pos:column="20"/></name><operator pos:line="60" pos:column="20">-&gt;<pos:position pos:line="60" pos:column="25"/></operator><name pos:line="60" pos:column="22">request<pos:position pos:line="60" pos:column="29"/></name><operator pos:line="60" pos:column="29">-&gt;<pos:position pos:line="60" pos:column="34"/></operator><name pos:line="60" pos:column="31">peer_login<pos:position pos:line="60" pos:column="41"/></name></name> <operator pos:line="60" pos:column="42">=<pos:position pos:line="60" pos:column="43"/></operator> <call><name><name pos:line="60" pos:column="44">srvConn<pos:position pos:line="60" pos:column="51"/></name><operator pos:line="60" pos:column="51">-&gt;<pos:position pos:line="60" pos:column="56"/></operator><name pos:line="60" pos:column="53">getPeer<pos:position pos:line="60" pos:column="60"/></name></name><argument_list pos:line="60" pos:column="60">()<pos:position pos:line="60" pos:column="62"/></argument_list></call><operator pos:line="60" pos:column="62">-&gt;<pos:position pos:line="60" pos:column="67"/></operator><name pos:line="60" pos:column="64">login<pos:position pos:line="60" pos:column="69"/></name></expr>;<pos:position pos:line="60" pos:column="70"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">tunnelState<pos:position pos:line="61" pos:column="20"/></name><operator pos:line="61" pos:column="20">-&gt;<pos:position pos:line="61" pos:column="25"/></operator><name pos:line="61" pos:column="22">request<pos:position pos:line="61" pos:column="29"/></name><operator pos:line="61" pos:column="29">-&gt;<pos:position pos:line="61" pos:column="34"/></operator><name pos:line="61" pos:column="31">peer_domain<pos:position pos:line="61" pos:column="42"/></name></name> <operator pos:line="61" pos:column="43">=<pos:position pos:line="61" pos:column="44"/></operator> <call><name><name pos:line="61" pos:column="45">srvConn<pos:position pos:line="61" pos:column="52"/></name><operator pos:line="61" pos:column="52">-&gt;<pos:position pos:line="61" pos:column="57"/></operator><name pos:line="61" pos:column="54">getPeer<pos:position pos:line="61" pos:column="61"/></name></name><argument_list pos:line="61" pos:column="61">()<pos:position pos:line="61" pos:column="63"/></argument_list></call><operator pos:line="61" pos:column="63">-&gt;<pos:position pos:line="61" pos:column="68"/></operator><name pos:line="61" pos:column="65">domain<pos:position pos:line="61" pos:column="71"/></name></expr>;<pos:position pos:line="61" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="62" pos:column="9">tunnelState<pos:position pos:line="62" pos:column="20"/></name><operator pos:line="62" pos:column="20">-&gt;<pos:position pos:line="62" pos:column="25"/></operator><name pos:line="62" pos:column="22">request<pos:position pos:line="62" pos:column="29"/></name><operator pos:line="62" pos:column="29">-&gt;<pos:position pos:line="62" pos:column="34"/></operator><name pos:line="62" pos:column="31">flags<pos:position pos:line="62" pos:column="36"/></name><operator pos:line="62" pos:column="36">.<pos:position pos:line="62" pos:column="37"/></operator><name pos:line="62" pos:column="37">proxying<pos:position pos:line="62" pos:column="45"/></name></name> <operator pos:line="62" pos:column="46">=<pos:position pos:line="62" pos:column="47"/></operator> <operator pos:line="62" pos:column="48">!<pos:position pos:line="62" pos:column="49"/></operator><operator pos:line="62" pos:column="49">(<pos:position pos:line="62" pos:column="50"/></operator><call><name><name pos:line="62" pos:column="50">srvConn<pos:position pos:line="62" pos:column="57"/></name><operator pos:line="62" pos:column="57">-&gt;<pos:position pos:line="62" pos:column="62"/></operator><name pos:line="62" pos:column="59">getPeer<pos:position pos:line="62" pos:column="66"/></name></name><argument_list pos:line="62" pos:column="66">()<pos:position pos:line="62" pos:column="68"/></argument_list></call><operator pos:line="62" pos:column="68">-&gt;<pos:position pos:line="62" pos:column="73"/></operator><name><name pos:line="62" pos:column="70">options<pos:position pos:line="62" pos:column="77"/></name><operator pos:line="62" pos:column="77">.<pos:position pos:line="62" pos:column="78"/></operator><name pos:line="62" pos:column="78">originserver<pos:position pos:line="62" pos:column="90"/></name></name><operator pos:line="62" pos:column="90">)<pos:position pos:line="62" pos:column="91"/></operator></expr>;<pos:position pos:line="62" pos:column="92"/></expr_stmt>
    }<pos:position pos:line="63" pos:column="6"/></block></then> <else pos:line="63" pos:column="7">else <block pos:line="63" pos:column="12">{
        <expr_stmt><expr><name><name pos:line="64" pos:column="9">tunnelState<pos:position pos:line="64" pos:column="20"/></name><operator pos:line="64" pos:column="20">-&gt;<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="22">request<pos:position pos:line="64" pos:column="29"/></name><operator pos:line="64" pos:column="29">-&gt;<pos:position pos:line="64" pos:column="34"/></operator><name pos:line="64" pos:column="31">peer_login<pos:position pos:line="64" pos:column="41"/></name></name> <operator pos:line="64" pos:column="42">=<pos:position pos:line="64" pos:column="43"/></operator> <name pos:line="64" pos:column="44">NULL<pos:position pos:line="64" pos:column="48"/></name></expr>;<pos:position pos:line="64" pos:column="49"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="65" pos:column="9">tunnelState<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">-&gt;<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="22">request<pos:position pos:line="65" pos:column="29"/></name><operator pos:line="65" pos:column="29">-&gt;<pos:position pos:line="65" pos:column="34"/></operator><name pos:line="65" pos:column="31">peer_domain<pos:position pos:line="65" pos:column="42"/></name></name> <operator pos:line="65" pos:column="43">=<pos:position pos:line="65" pos:column="44"/></operator> <name pos:line="65" pos:column="45">NULL<pos:position pos:line="65" pos:column="49"/></name></expr>;<pos:position pos:line="65" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="66" pos:column="9">tunnelState<pos:position pos:line="66" pos:column="20"/></name><operator pos:line="66" pos:column="20">-&gt;<pos:position pos:line="66" pos:column="25"/></operator><name pos:line="66" pos:column="22">request<pos:position pos:line="66" pos:column="29"/></name><operator pos:line="66" pos:column="29">-&gt;<pos:position pos:line="66" pos:column="34"/></operator><name pos:line="66" pos:column="31">flags<pos:position pos:line="66" pos:column="36"/></name><operator pos:line="66" pos:column="36">.<pos:position pos:line="66" pos:column="37"/></operator><name pos:line="66" pos:column="37">proxying<pos:position pos:line="66" pos:column="45"/></name></name> <operator pos:line="66" pos:column="46">=<pos:position pos:line="66" pos:column="47"/></operator> <literal type="boolean" pos:line="66" pos:column="48">false<pos:position pos:line="66" pos:column="53"/></literal></expr>;<pos:position pos:line="66" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="67" pos:column="6"/></block></else></if>

    <expr_stmt><expr><name pos:line="69" pos:column="5">timeoutCall<pos:position pos:line="69" pos:column="16"/></name> <operator pos:line="69" pos:column="17">=<pos:position pos:line="69" pos:column="18"/></operator> <call><name pos:line="69" pos:column="19">commCbCall<pos:position pos:line="69" pos:column="29"/></name><argument_list pos:line="69" pos:column="29">(<argument><expr><literal type="number" pos:line="69" pos:column="30">5<pos:position pos:line="69" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="69" pos:column="33">4<pos:position pos:line="69" pos:column="34"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="69" pos:column="36">"tunnelTimeout"<pos:position pos:line="69" pos:column="51"/></literal></expr></argument>,
                             <argument><expr><call><name pos:line="70" pos:column="30">CommTimeoutCbPtrFun<pos:position pos:line="70" pos:column="49"/></name><argument_list pos:line="70" pos:column="49">(<argument><expr><name pos:line="70" pos:column="50">tunnelTimeout<pos:position pos:line="70" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="70" pos:column="65">tunnelState<pos:position pos:line="70" pos:column="76"/></name></expr></argument>)<pos:position pos:line="70" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="70" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="70" pos:column="79"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="71" pos:column="5">commSetConnTimeout<pos:position pos:line="71" pos:column="23"/></name><argument_list pos:line="71" pos:column="23">(<argument><expr><name pos:line="71" pos:column="24">srvConn<pos:position pos:line="71" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="71" pos:column="33">Config<pos:position pos:line="71" pos:column="39"/></name><operator pos:line="71" pos:column="39">.<pos:position pos:line="71" pos:column="40"/></operator><name pos:line="71" pos:column="40">Timeout<pos:position pos:line="71" pos:column="47"/></name><operator pos:line="71" pos:column="47">.<pos:position pos:line="71" pos:column="48"/></operator><name pos:line="71" pos:column="48">read<pos:position pos:line="71" pos:column="52"/></name></name></expr></argument>, <argument><expr><name pos:line="71" pos:column="54">timeoutCall<pos:position pos:line="71" pos:column="65"/></name></expr></argument>)<pos:position pos:line="71" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="67"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="72" pos:column="5">fd_table<pos:position pos:line="72" pos:column="13"/></name><index pos:line="72" pos:column="13">[<expr><name><name pos:line="72" pos:column="14">srvConn<pos:position pos:line="72" pos:column="21"/></name><operator pos:line="72" pos:column="21">-&gt;<pos:position pos:line="72" pos:column="26"/></operator><name pos:line="72" pos:column="23">fd<pos:position pos:line="72" pos:column="25"/></name></name></expr>]<pos:position pos:line="72" pos:column="26"/></index></name><operator pos:line="72" pos:column="26">.<pos:position pos:line="72" pos:column="27"/></operator><name pos:line="72" pos:column="27">read_method<pos:position pos:line="72" pos:column="38"/></name> <operator pos:line="72" pos:column="39">=<pos:position pos:line="72" pos:column="40"/></operator> <operator pos:line="72" pos:column="41">&amp;<pos:position pos:line="72" pos:column="46"/></operator><name pos:line="72" pos:column="42">default_read_method<pos:position pos:line="72" pos:column="61"/></name></expr>;<pos:position pos:line="72" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="73" pos:column="5">fd_table<pos:position pos:line="73" pos:column="13"/></name><index pos:line="73" pos:column="13">[<expr><name><name pos:line="73" pos:column="14">srvConn<pos:position pos:line="73" pos:column="21"/></name><operator pos:line="73" pos:column="21">-&gt;<pos:position pos:line="73" pos:column="26"/></operator><name pos:line="73" pos:column="23">fd<pos:position pos:line="73" pos:column="25"/></name></name></expr>]<pos:position pos:line="73" pos:column="26"/></index></name><operator pos:line="73" pos:column="26">.<pos:position pos:line="73" pos:column="27"/></operator><name pos:line="73" pos:column="27">write_method<pos:position pos:line="73" pos:column="39"/></name> <operator pos:line="73" pos:column="40">=<pos:position pos:line="73" pos:column="41"/></operator> <operator pos:line="73" pos:column="42">&amp;<pos:position pos:line="73" pos:column="47"/></operator><name pos:line="73" pos:column="43">default_write_method<pos:position pos:line="73" pos:column="63"/></name></expr>;<pos:position pos:line="73" pos:column="64"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="75" pos:column="5">SSL<pos:position pos:line="75" pos:column="8"/></name> <modifier pos:line="75" pos:column="9">*<pos:position pos:line="75" pos:column="10"/></modifier></type><name pos:line="75" pos:column="10">ssl<pos:position pos:line="75" pos:column="13"/></name> <init pos:line="75" pos:column="14">= <expr><name><name pos:line="75" pos:column="16">fd_table<pos:position pos:line="75" pos:column="24"/></name><index pos:line="75" pos:column="24">[<expr><name><name pos:line="75" pos:column="25">srvConn<pos:position pos:line="75" pos:column="32"/></name><operator pos:line="75" pos:column="32">-&gt;<pos:position pos:line="75" pos:column="37"/></operator><name pos:line="75" pos:column="34">fd<pos:position pos:line="75" pos:column="36"/></name></name></expr>]<pos:position pos:line="75" pos:column="37"/></index></name><operator pos:line="75" pos:column="37">.<pos:position pos:line="75" pos:column="38"/></operator><name pos:line="75" pos:column="38">ssl<pos:position pos:line="75" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="75" pos:column="42"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="76" pos:column="5">assert<pos:position pos:line="76" pos:column="11"/></name><argument_list pos:line="76" pos:column="11">(<argument><expr><name pos:line="76" pos:column="12">ssl<pos:position pos:line="76" pos:column="15"/></name></expr></argument>)<pos:position pos:line="76" pos:column="16"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="17"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="77" pos:column="5">BIO<pos:position pos:line="77" pos:column="8"/></name> <modifier pos:line="77" pos:column="9">*<pos:position pos:line="77" pos:column="10"/></modifier></type><name pos:line="77" pos:column="10">b<pos:position pos:line="77" pos:column="11"/></name> <init pos:line="77" pos:column="12">= <expr><call><name pos:line="77" pos:column="14">SSL_get_rbio<pos:position pos:line="77" pos:column="26"/></name><argument_list pos:line="77" pos:column="26">(<argument><expr><name pos:line="77" pos:column="27">ssl<pos:position pos:line="77" pos:column="30"/></name></expr></argument>)<pos:position pos:line="77" pos:column="31"/></argument_list></call></expr></init></decl>;<pos:position pos:line="77" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="78" pos:column="5">Ssl<pos:position pos:line="78" pos:column="8"/></name><operator pos:line="78" pos:column="8">::<pos:position pos:line="78" pos:column="10"/></operator><name pos:line="78" pos:column="10">ServerBio<pos:position pos:line="78" pos:column="19"/></name></name> <modifier pos:line="78" pos:column="20">*<pos:position pos:line="78" pos:column="21"/></modifier></type><name pos:line="78" pos:column="21">srvBio<pos:position pos:line="78" pos:column="27"/></name> <init pos:line="78" pos:column="28">= <expr><cast type="static" pos:line="78" pos:column="30">static_cast<argument_list type="generic" pos:line="78" pos:column="41">&lt;<argument><expr><name><name pos:line="78" pos:column="42">Ssl<pos:position pos:line="78" pos:column="45"/></name><operator pos:line="78" pos:column="45">::<pos:position pos:line="78" pos:column="47"/></operator><name pos:line="78" pos:column="47">ServerBio<pos:position pos:line="78" pos:column="56"/></name></name> <operator pos:line="78" pos:column="57">*<pos:position pos:line="78" pos:column="58"/></operator></expr></argument>&gt;<pos:position pos:line="78" pos:column="62"/></argument_list><argument_list pos:line="78" pos:column="59">(<argument><expr><name><name pos:line="78" pos:column="60">b<pos:position pos:line="78" pos:column="61"/></name><operator pos:line="78" pos:column="61">-&gt;<pos:position pos:line="78" pos:column="66"/></operator><name pos:line="78" pos:column="63">ptr<pos:position pos:line="78" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="67"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="78" pos:column="68"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="79" pos:column="5">const<pos:position pos:line="79" pos:column="10"/></specifier> <name pos:line="79" pos:column="11">MemBuf<pos:position pos:line="79" pos:column="17"/></name> <modifier pos:line="79" pos:column="18">&amp;<pos:position pos:line="79" pos:column="23"/></modifier></type><name pos:line="79" pos:column="19">buf<pos:position pos:line="79" pos:column="22"/></name> <init pos:line="79" pos:column="23">= <expr><call><name><name pos:line="79" pos:column="25">srvBio<pos:position pos:line="79" pos:column="31"/></name><operator pos:line="79" pos:column="31">-&gt;<pos:position pos:line="79" pos:column="36"/></operator><name pos:line="79" pos:column="33">rBufData<pos:position pos:line="79" pos:column="41"/></name></name><argument_list pos:line="79" pos:column="41">()<pos:position pos:line="79" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="79" pos:column="44"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="81" pos:column="5">AsyncCall<pos:position pos:line="81" pos:column="14"/></name><operator pos:line="81" pos:column="14">::<pos:position pos:line="81" pos:column="16"/></operator><name pos:line="81" pos:column="16">Pointer<pos:position pos:line="81" pos:column="23"/></name></name></type> <name pos:line="81" pos:column="24">call<pos:position pos:line="81" pos:column="28"/></name> <init pos:line="81" pos:column="29">= <expr><call><name pos:line="81" pos:column="31">commCbCall<pos:position pos:line="81" pos:column="41"/></name><argument_list pos:line="81" pos:column="41">(<argument><expr><literal type="number" pos:line="81" pos:column="42">5<pos:position pos:line="81" pos:column="43"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="81" pos:column="44">5<pos:position pos:line="81" pos:column="45"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="81" pos:column="47">"tunnelConnectedWriteDone"<pos:position pos:line="81" pos:column="73"/></literal></expr></argument>,
                                         <argument><expr><call><name pos:line="82" pos:column="42">CommIoCbPtrFun<pos:position pos:line="82" pos:column="56"/></name><argument_list pos:line="82" pos:column="56">(<argument><expr><name pos:line="82" pos:column="57">tunnelConnectedWriteDone<pos:position pos:line="82" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="82" pos:column="83">tunnelState<pos:position pos:line="82" pos:column="94"/></name></expr></argument>)<pos:position pos:line="82" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="82" pos:column="96"/></argument_list></call></expr></init></decl>;<pos:position pos:line="82" pos:column="97"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="83" pos:column="5">tunnelState<pos:position pos:line="83" pos:column="16"/></name><operator pos:line="83" pos:column="16">-&gt;<pos:position pos:line="83" pos:column="21"/></operator><name pos:line="83" pos:column="18">client<pos:position pos:line="83" pos:column="24"/></name><operator pos:line="83" pos:column="24">.<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="25">write<pos:position pos:line="83" pos:column="30"/></name></name><argument_list pos:line="83" pos:column="30">(<argument><expr><call><name><name pos:line="83" pos:column="31">buf<pos:position pos:line="83" pos:column="34"/></name><operator pos:line="83" pos:column="34">.<pos:position pos:line="83" pos:column="35"/></operator><name pos:line="83" pos:column="35">content<pos:position pos:line="83" pos:column="42"/></name></name><argument_list pos:line="83" pos:column="42">()<pos:position pos:line="83" pos:column="44"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="83" pos:column="46">buf<pos:position pos:line="83" pos:column="49"/></name><operator pos:line="83" pos:column="49">.<pos:position pos:line="83" pos:column="50"/></operator><name pos:line="83" pos:column="50">contentSize<pos:position pos:line="83" pos:column="61"/></name></name><argument_list pos:line="83" pos:column="61">()<pos:position pos:line="83" pos:column="63"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="83" pos:column="65">call<pos:position pos:line="83" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="71">NULL<pos:position pos:line="83" pos:column="75"/></name></expr></argument>)<pos:position pos:line="83" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="77"/></expr_stmt>
}<pos:position pos:line="84" pos:column="2"/></block></function></unit>

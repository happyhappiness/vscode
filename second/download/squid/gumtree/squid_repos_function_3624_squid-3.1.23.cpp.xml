<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3624_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">IpIntercept<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">NetfilterInterception<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">(<parameter><decl><type><name pos:line="2" pos:column="36">int<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">fd<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">IpAddress<pos:position pos:line="2" pos:column="59"/></name> <modifier pos:line="2" pos:column="60">&amp;<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="61">me<pos:position pos:line="2" pos:column="63"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="65">IpAddress<pos:position pos:line="2" pos:column="74"/></name> <modifier pos:line="2" pos:column="75">&amp;<pos:position pos:line="2" pos:column="80"/></modifier></type><name pos:line="2" pos:column="76">dst<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="81">int<pos:position pos:line="2" pos:column="84"/></name></type> <name pos:line="2" pos:column="85">silent<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="92"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">LINUX_NETFILTER<pos:position pos:line="4" pos:column="20"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">struct<pos:position pos:line="5" pos:column="11"/></name> <name pos:line="5" pos:column="12">addrinfo<pos:position pos:line="5" pos:column="20"/></name></name> <modifier pos:line="5" pos:column="21">*<pos:position pos:line="5" pos:column="22"/></modifier></type><name pos:line="5" pos:column="22">lookup<pos:position pos:line="5" pos:column="28"/></name> <init pos:line="5" pos:column="29">= <expr><name pos:line="5" pos:column="31">NULL<pos:position pos:line="5" pos:column="35"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="36"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">dst<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">.<pos:position pos:line="7" pos:column="9"/></operator><name pos:line="7" pos:column="9">GetAddrInfo<pos:position pos:line="7" pos:column="20"/></name></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">lookup<pos:position pos:line="7" pos:column="27"/></name></expr></argument>,<argument><expr><name pos:line="7" pos:column="28">AF_INET<pos:position pos:line="7" pos:column="35"/></name></expr></argument>)<pos:position pos:line="7" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="37"/></expr_stmt>

    <comment type="block" format="doxygen" pos:line="9" pos:column="5">/** \par
     * Try NAT lookup for REDIRECT or DNAT targets. */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">( <expr><call><name pos:line="11" pos:column="10">getsockopt<pos:position pos:line="11" pos:column="20"/></name><argument_list pos:line="11" pos:column="20">(<argument><expr><name pos:line="11" pos:column="21">fd<pos:position pos:line="11" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="25">IPPROTO_IP<pos:position pos:line="11" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="37">SO_ORIGINAL_DST<pos:position pos:line="11" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="11" pos:column="54">lookup<pos:position pos:line="11" pos:column="60"/></name><operator pos:line="11" pos:column="60">-&gt;<pos:position pos:line="11" pos:column="65"/></operator><name pos:line="11" pos:column="62">ai_addr<pos:position pos:line="11" pos:column="69"/></name></name></expr></argument>, <argument><expr><operator pos:line="11" pos:column="71">&amp;<pos:position pos:line="11" pos:column="76"/></operator><name><name pos:line="11" pos:column="72">lookup<pos:position pos:line="11" pos:column="78"/></name><operator pos:line="11" pos:column="78">-&gt;<pos:position pos:line="11" pos:column="83"/></operator><name pos:line="11" pos:column="80">ai_addrlen<pos:position pos:line="11" pos:column="90"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="91"/></argument_list></call> <operator pos:line="11" pos:column="92">!=<pos:position pos:line="11" pos:column="94"/></operator> <literal type="number" pos:line="11" pos:column="95">0<pos:position pos:line="11" pos:column="96"/></literal></expr>)<pos:position pos:line="11" pos:column="97"/></condition><then pos:line="11" pos:column="97"> <block pos:line="11" pos:column="98">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><operator pos:line="12" pos:column="13">!<pos:position pos:line="12" pos:column="14"/></operator><name pos:line="12" pos:column="14">silent<pos:position pos:line="12" pos:column="20"/></name></expr>)<pos:position pos:line="12" pos:column="21"/></condition><then pos:line="12" pos:column="21"> <block pos:line="12" pos:column="22">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">debugs<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">89<pos:position pos:line="13" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="24">DBG_IMPORTANT<pos:position pos:line="13" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="39">HERE<pos:position pos:line="13" pos:column="43"/></name> <operator pos:line="13" pos:column="44">&lt;&lt;<pos:position pos:line="13" pos:column="52"/></operator> <literal type="string" pos:line="13" pos:column="47">" NF getsockopt(SO_ORIGINAL_DST) failed on FD "<pos:position pos:line="13" pos:column="94"/></literal> <operator pos:line="13" pos:column="95">&lt;&lt;<pos:position pos:line="13" pos:column="103"/></operator> <name pos:line="13" pos:column="98">fd<pos:position pos:line="13" pos:column="100"/></name> <operator pos:line="13" pos:column="101">&lt;&lt;<pos:position pos:line="13" pos:column="109"/></operator> <literal type="string" pos:line="13" pos:column="104">": "<pos:position pos:line="13" pos:column="108"/></literal> <operator pos:line="13" pos:column="109">&lt;&lt;<pos:position pos:line="13" pos:column="117"/></operator> <call><name pos:line="13" pos:column="112">xstrerror<pos:position pos:line="13" pos:column="121"/></name><argument_list pos:line="13" pos:column="121">()<pos:position pos:line="13" pos:column="123"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="124"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="125"/></expr_stmt>
            <expr_stmt><expr><name pos:line="14" pos:column="13">last_reported<pos:position pos:line="14" pos:column="26"/></name> <operator pos:line="14" pos:column="27">=<pos:position pos:line="14" pos:column="28"/></operator> <name pos:line="14" pos:column="29">squid_curtime<pos:position pos:line="14" pos:column="42"/></name></expr>;<pos:position pos:line="14" pos:column="43"/></expr_stmt>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>
    }<pos:position pos:line="16" pos:column="6"/></block></then> <else pos:line="16" pos:column="7">else <block pos:line="16" pos:column="12">{
        <expr_stmt><expr><name pos:line="17" pos:column="9">dst<pos:position pos:line="17" pos:column="12"/></name> <operator pos:line="17" pos:column="13">=<pos:position pos:line="17" pos:column="14"/></operator> <operator pos:line="17" pos:column="15">*<pos:position pos:line="17" pos:column="16"/></operator><name pos:line="17" pos:column="16">lookup<pos:position pos:line="17" pos:column="22"/></name></expr>;<pos:position pos:line="17" pos:column="23"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name><name pos:line="20" pos:column="5">dst<pos:position pos:line="20" pos:column="8"/></name><operator pos:line="20" pos:column="8">.<pos:position pos:line="20" pos:column="9"/></operator><name pos:line="20" pos:column="9">FreeAddrInfo<pos:position pos:line="20" pos:column="21"/></name></name><argument_list pos:line="20" pos:column="21">(<argument><expr><name pos:line="20" pos:column="22">lookup<pos:position pos:line="20" pos:column="28"/></name></expr></argument>)<pos:position pos:line="20" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">me<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">!=<pos:position pos:line="22" pos:column="14"/></operator> <name pos:line="22" pos:column="15">dst<pos:position pos:line="22" pos:column="18"/></name></expr>)<pos:position pos:line="22" pos:column="19"/></condition><then pos:line="22" pos:column="19"> <block pos:line="22" pos:column="20">{
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">debugs<pos:position pos:line="23" pos:column="15"/></name><argument_list pos:line="23" pos:column="15">(<argument><expr><literal type="number" pos:line="23" pos:column="16">89<pos:position pos:line="23" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="20">5<pos:position pos:line="23" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="23">HERE<pos:position pos:line="23" pos:column="27"/></name> <operator pos:line="23" pos:column="28">&lt;&lt;<pos:position pos:line="23" pos:column="36"/></operator> <literal type="string" pos:line="23" pos:column="31">"address NAT: me= "<pos:position pos:line="23" pos:column="50"/></literal> <operator pos:line="23" pos:column="51">&lt;&lt;<pos:position pos:line="23" pos:column="59"/></operator> <name pos:line="23" pos:column="54">me<pos:position pos:line="23" pos:column="56"/></name> <operator pos:line="23" pos:column="57">&lt;&lt;<pos:position pos:line="23" pos:column="65"/></operator> <literal type="string" pos:line="23" pos:column="60">", dst= "<pos:position pos:line="23" pos:column="69"/></literal> <operator pos:line="23" pos:column="70">&lt;&lt;<pos:position pos:line="23" pos:column="78"/></operator> <name pos:line="23" pos:column="73">dst<pos:position pos:line="23" pos:column="76"/></name></expr></argument>)<pos:position pos:line="23" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="78"/></expr_stmt>
        <return pos:line="24" pos:column="9">return <expr><literal type="number" pos:line="24" pos:column="16">0<pos:position pos:line="24" pos:column="17"/></literal></expr>;<pos:position pos:line="24" pos:column="18"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="27" pos:column="5">debugs<pos:position pos:line="27" pos:column="11"/></name><argument_list pos:line="27" pos:column="11">(<argument><expr><literal type="number" pos:line="27" pos:column="12">89<pos:position pos:line="27" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="16">9<pos:position pos:line="27" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="27" pos:column="19">HERE<pos:position pos:line="27" pos:column="23"/></name> <operator pos:line="27" pos:column="24">&lt;&lt;<pos:position pos:line="27" pos:column="32"/></operator> <literal type="string" pos:line="27" pos:column="27">"address: me= "<pos:position pos:line="27" pos:column="42"/></literal> <operator pos:line="27" pos:column="43">&lt;&lt;<pos:position pos:line="27" pos:column="51"/></operator> <name pos:line="27" pos:column="46">me<pos:position pos:line="27" pos:column="48"/></name> <operator pos:line="27" pos:column="49">&lt;&lt;<pos:position pos:line="27" pos:column="57"/></operator> <literal type="string" pos:line="27" pos:column="52">", dst= "<pos:position pos:line="27" pos:column="61"/></literal> <operator pos:line="27" pos:column="62">&lt;&lt;<pos:position pos:line="27" pos:column="70"/></operator> <name pos:line="27" pos:column="65">dst<pos:position pos:line="27" pos:column="68"/></name></expr></argument>)<pos:position pos:line="27" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="70"/></expr_stmt>
<cpp:endif pos:line="28" pos:column="1">#<cpp:directive pos:line="28" pos:column="2">endif<pos:position pos:line="28" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="29" pos:column="5">return <expr><operator pos:line="29" pos:column="12">-<pos:position pos:line="29" pos:column="13"/></operator><literal type="number" pos:line="29" pos:column="13">1<pos:position pos:line="29" pos:column="14"/></literal></expr>;<pos:position pos:line="29" pos:column="15"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4760_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemBlob<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">memAlloc<pos:position pos:line="2" pos:column="18"/></name></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><specifier pos:line="2" pos:column="19">const<pos:position pos:line="2" pos:column="24"/></specifier> <name pos:line="2" pos:column="25">size_type<pos:position pos:line="2" pos:column="34"/></name></type> <name pos:line="2" pos:column="35">minSize<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">size_t<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">actualAlloc<pos:position pos:line="4" pos:column="23"/></name> <init pos:line="4" pos:column="24">= <expr><name pos:line="4" pos:column="26">minSize<pos:position pos:line="4" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="34"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">Must<pos:position pos:line="6" pos:column="9"/></name><argument_list pos:line="6" pos:column="9">(<argument><expr><operator pos:line="6" pos:column="10">!<pos:position pos:line="6" pos:column="11"/></operator><name pos:line="6" pos:column="11">mem<pos:position pos:line="6" pos:column="14"/></name></expr></argument>)<pos:position pos:line="6" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="16"/></expr_stmt>
    <expr_stmt><expr><name pos:line="7" pos:column="5">mem<pos:position pos:line="7" pos:column="8"/></name> <operator pos:line="7" pos:column="9">=<pos:position pos:line="7" pos:column="10"/></operator> <cast type="static" pos:line="7" pos:column="11">static_cast<argument_list type="generic" pos:line="7" pos:column="22">&lt;<argument><expr><name pos:line="7" pos:column="23">char<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">*<pos:position pos:line="7" pos:column="28"/></operator></expr></argument>&gt;<pos:position pos:line="7" pos:column="32"/></argument_list><argument_list pos:line="7" pos:column="29">(<argument><expr><call><name pos:line="7" pos:column="30">memAllocString<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">(<argument><expr><name pos:line="7" pos:column="45">actualAlloc<pos:position pos:line="7" pos:column="56"/></name></expr></argument>, <argument><expr><operator pos:line="7" pos:column="58">&amp;<pos:position pos:line="7" pos:column="63"/></operator><name pos:line="7" pos:column="59">actualAlloc<pos:position pos:line="7" pos:column="70"/></name></expr></argument>)<pos:position pos:line="7" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="7" pos:column="72"/></argument_list></cast></expr>;<pos:position pos:line="7" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">Must<pos:position pos:line="8" pos:column="9"/></name><argument_list pos:line="8" pos:column="9">(<argument><expr><name pos:line="8" pos:column="10">mem<pos:position pos:line="8" pos:column="13"/></name></expr></argument>)<pos:position pos:line="8" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="15"/></expr_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">capacity<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name pos:line="10" pos:column="16">actualAlloc<pos:position pos:line="10" pos:column="27"/></name></expr>;<pos:position pos:line="10" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="11" pos:column="5">size<pos:position pos:line="11" pos:column="9"/></name> <operator pos:line="11" pos:column="10">=<pos:position pos:line="11" pos:column="11"/></operator> <literal type="number" pos:line="11" pos:column="12">0<pos:position pos:line="11" pos:column="13"/></literal></expr>;<pos:position pos:line="11" pos:column="14"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">debugs<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name pos:line="12" pos:column="12">MEMBLOB_DEBUGSECTION<pos:position pos:line="12" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="34">8<pos:position pos:line="12" pos:column="35"/></literal></expr></argument>,
           <argument><expr><name pos:line="13" pos:column="12">id<pos:position pos:line="13" pos:column="14"/></name> <operator pos:line="13" pos:column="15">&lt;&lt;<pos:position pos:line="13" pos:column="23"/></operator> <literal type="string" pos:line="13" pos:column="18">" memAlloc: requested="<pos:position pos:line="13" pos:column="41"/></literal> <operator pos:line="13" pos:column="42">&lt;&lt;<pos:position pos:line="13" pos:column="50"/></operator> <name pos:line="13" pos:column="45">minSize<pos:position pos:line="13" pos:column="52"/></name> <operator pos:line="13" pos:column="53">&lt;&lt;<pos:position pos:line="13" pos:column="61"/></operator>
           <literal type="string" pos:line="14" pos:column="12">", received="<pos:position pos:line="14" pos:column="25"/></literal> <operator pos:line="14" pos:column="26">&lt;&lt;<pos:position pos:line="14" pos:column="34"/></operator> <name pos:line="14" pos:column="29">capacity<pos:position pos:line="14" pos:column="37"/></name></expr></argument>)<pos:position pos:line="14" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="15" pos:column="5">++<pos:position pos:line="15" pos:column="7"/></operator><name><name pos:line="15" pos:column="7">Stats<pos:position pos:line="15" pos:column="12"/></name><operator pos:line="15" pos:column="12">.<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">live<pos:position pos:line="15" pos:column="17"/></name></name></expr>;<pos:position pos:line="15" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><operator pos:line="16" pos:column="5">++<pos:position pos:line="16" pos:column="7"/></operator><name><name pos:line="16" pos:column="7">Stats<pos:position pos:line="16" pos:column="12"/></name><operator pos:line="16" pos:column="12">.<pos:position pos:line="16" pos:column="13"/></operator><name pos:line="16" pos:column="13">alloc<pos:position pos:line="16" pos:column="18"/></name></name></expr>;<pos:position pos:line="16" pos:column="19"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="17" pos:column="5">Stats<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">.<pos:position pos:line="17" pos:column="11"/></operator><name pos:line="17" pos:column="11">liveBytes<pos:position pos:line="17" pos:column="20"/></name></name> <operator pos:line="17" pos:column="21">+=<pos:position pos:line="17" pos:column="23"/></operator> <name pos:line="17" pos:column="24">capacity<pos:position pos:line="17" pos:column="32"/></name></expr>;<pos:position pos:line="17" pos:column="33"/></expr_stmt>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

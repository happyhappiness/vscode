<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1405_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">doV2Query<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">int<pos:position pos:line="2" pos:column="14"/></name></type> <name pos:line="2" pos:column="15">fd<pos:position pos:line="2" pos:column="17"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="19">Ip<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">Address<pos:position pos:line="2" pos:column="30"/></name></name> <modifier pos:line="2" pos:column="31">&amp;<pos:position pos:line="2" pos:column="36"/></modifier></type><name pos:line="2" pos:column="32">from<pos:position pos:line="2" pos:column="36"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="38">char<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="44">buf<pos:position pos:line="2" pos:column="47"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="49">icp_common_t<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">header<pos:position pos:line="2" pos:column="68"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="69"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">rtt<pos:position pos:line="4" pos:column="12"/></name> <init pos:line="4" pos:column="13">= <expr><literal type="number" pos:line="4" pos:column="15">0<pos:position pos:line="4" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">src_rtt<pos:position pos:line="5" pos:column="16"/></name> <init pos:line="5" pos:column="17">= <expr><literal type="number" pos:line="5" pos:column="19">0<pos:position pos:line="5" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">uint32_t<pos:position pos:line="6" pos:column="13"/></name></type> <name pos:line="6" pos:column="14">flags<pos:position pos:line="6" pos:column="19"/></name> <init pos:line="6" pos:column="20">= <expr><literal type="number" pos:line="6" pos:column="22">0<pos:position pos:line="6" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <comment type="block" pos:line="7" pos:column="5">/* We have a valid packet */</comment>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">char<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">url<pos:position pos:line="8" pos:column="14"/></name> <init pos:line="8" pos:column="15">= <expr><name pos:line="8" pos:column="17">buf<pos:position pos:line="8" pos:column="20"/></name> <operator pos:line="8" pos:column="21">+<pos:position pos:line="8" pos:column="22"/></operator> <sizeof pos:line="8" pos:column="23">sizeof<argument_list pos:line="8" pos:column="29">(<argument><expr><name pos:line="8" pos:column="30">icp_common_t<pos:position pos:line="8" pos:column="42"/></name></expr></argument>)<pos:position pos:line="8" pos:column="43"/></argument_list></sizeof> <operator pos:line="8" pos:column="44">+<pos:position pos:line="8" pos:column="45"/></operator> <sizeof pos:line="8" pos:column="46">sizeof<argument_list pos:line="8" pos:column="52">(<argument><expr><name pos:line="8" pos:column="53">uint32_t<pos:position pos:line="8" pos:column="61"/></name></expr></argument>)<pos:position pos:line="8" pos:column="62"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="8" pos:column="63"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">HttpRequest<pos:position pos:line="9" pos:column="16"/></name> <modifier pos:line="9" pos:column="17">*<pos:position pos:line="9" pos:column="18"/></modifier></type><name pos:line="9" pos:column="18">icp_request<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><call><name pos:line="9" pos:column="32">icpGetRequest<pos:position pos:line="9" pos:column="45"/></name><argument_list pos:line="9" pos:column="45">(<argument><expr><name pos:line="9" pos:column="46">url<pos:position pos:line="9" pos:column="49"/></name></expr></argument>, <argument><expr><name><name pos:line="9" pos:column="51">header<pos:position pos:line="9" pos:column="57"/></name><operator pos:line="9" pos:column="57">.<pos:position pos:line="9" pos:column="58"/></operator><name pos:line="9" pos:column="58">reqnum<pos:position pos:line="9" pos:column="64"/></name></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="66">fd<pos:position pos:line="9" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="9" pos:column="70">from<pos:position pos:line="9" pos:column="74"/></name></expr></argument>)<pos:position pos:line="9" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="76"/></decl_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">icp_request<pos:position pos:line="11" pos:column="21"/></name></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
        <block type="pseudo"><return pos:line="12" pos:column="9">return;<pos:position pos:line="12" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">HTTPMSGLOCK<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">(<argument><expr><name pos:line="14" pos:column="17">icp_request<pos:position pos:line="14" pos:column="28"/></name></expr></argument>)<pos:position pos:line="14" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><operator pos:line="16" pos:column="9">!<pos:position pos:line="16" pos:column="10"/></operator><call><name pos:line="16" pos:column="10">icpAccessAllowed<pos:position pos:line="16" pos:column="26"/></name><argument_list pos:line="16" pos:column="26">(<argument><expr><name pos:line="16" pos:column="27">from<pos:position pos:line="16" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="33">icp_request<pos:position pos:line="16" pos:column="44"/></name></expr></argument>)<pos:position pos:line="16" pos:column="45"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="46"/></condition><then pos:line="16" pos:column="46"> <block pos:line="16" pos:column="47">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">icpDenyAccess<pos:position pos:line="17" pos:column="22"/></name><argument_list pos:line="17" pos:column="22">(<argument><expr><name pos:line="17" pos:column="23">from<pos:position pos:line="17" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="29">url<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="34">header<pos:position pos:line="17" pos:column="40"/></name><operator pos:line="17" pos:column="40">.<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="41">reqnum<pos:position pos:line="17" pos:column="47"/></name></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="49">fd<pos:position pos:line="17" pos:column="51"/></name></expr></argument>)<pos:position pos:line="17" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="53"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">HTTPMSGUNLOCK<pos:position pos:line="18" pos:column="22"/></name><argument_list pos:line="18" pos:column="22">(<argument><expr><name pos:line="18" pos:column="23">icp_request<pos:position pos:line="18" pos:column="34"/></name></expr></argument>)<pos:position pos:line="18" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="36"/></expr_stmt>
        <return pos:line="19" pos:column="9">return;<pos:position pos:line="19" pos:column="16"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>
<cpp:if pos:line="21" pos:column="1">#<cpp:directive pos:line="21" pos:column="2">if<pos:position pos:line="21" pos:column="4"/></cpp:directive> <expr><name pos:line="21" pos:column="5">USE_ICMP<pos:position pos:line="21" pos:column="13"/></name></expr></cpp:if>
    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name><name pos:line="22" pos:column="9">header<pos:position pos:line="22" pos:column="15"/></name><operator pos:line="22" pos:column="15">.<pos:position pos:line="22" pos:column="16"/></operator><name pos:line="22" pos:column="16">flags<pos:position pos:line="22" pos:column="21"/></name></name> <operator pos:line="22" pos:column="22">&amp;<pos:position pos:line="22" pos:column="27"/></operator> <name pos:line="22" pos:column="24">ICP_FLAG_SRC_RTT<pos:position pos:line="22" pos:column="40"/></name></expr>)<pos:position pos:line="22" pos:column="41"/></condition><then pos:line="22" pos:column="41"> <block pos:line="22" pos:column="42">{
        <expr_stmt><expr><name pos:line="23" pos:column="9">rtt<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">=<pos:position pos:line="23" pos:column="14"/></operator> <call><name pos:line="23" pos:column="15">netdbHostRtt<pos:position pos:line="23" pos:column="27"/></name><argument_list pos:line="23" pos:column="27">(<argument><expr><call><name><name pos:line="23" pos:column="28">icp_request<pos:position pos:line="23" pos:column="39"/></name><operator pos:line="23" pos:column="39">-&gt;<pos:position pos:line="23" pos:column="44"/></operator><name pos:line="23" pos:column="41">GetHost<pos:position pos:line="23" pos:column="48"/></name></name><argument_list pos:line="23" pos:column="48">()<pos:position pos:line="23" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="23" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="52"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">int<pos:position pos:line="24" pos:column="12"/></name></type> <name pos:line="24" pos:column="13">hops<pos:position pos:line="24" pos:column="17"/></name> <init pos:line="24" pos:column="18">= <expr><call><name pos:line="24" pos:column="20">netdbHostHops<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><call><name><name pos:line="24" pos:column="34">icp_request<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">-&gt;<pos:position pos:line="24" pos:column="50"/></operator><name pos:line="24" pos:column="47">GetHost<pos:position pos:line="24" pos:column="54"/></name></name><argument_list pos:line="24" pos:column="54">()<pos:position pos:line="24" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="57"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="58"/></decl_stmt>
        <expr_stmt><expr><name pos:line="25" pos:column="9">src_rtt<pos:position pos:line="25" pos:column="16"/></name> <operator pos:line="25" pos:column="17">=<pos:position pos:line="25" pos:column="18"/></operator> <operator pos:line="25" pos:column="19">(<pos:position pos:line="25" pos:column="20"/></operator><operator pos:line="25" pos:column="20">(<pos:position pos:line="25" pos:column="21"/></operator><name pos:line="25" pos:column="21">hops<pos:position pos:line="25" pos:column="25"/></name> <operator pos:line="25" pos:column="26">&amp;<pos:position pos:line="25" pos:column="31"/></operator> <literal type="number" pos:line="25" pos:column="28">0xFFFF<pos:position pos:line="25" pos:column="34"/></literal><operator pos:line="25" pos:column="34">)<pos:position pos:line="25" pos:column="35"/></operator> <operator pos:line="25" pos:column="36">&lt;&lt;<pos:position pos:line="25" pos:column="44"/></operator> <literal type="number" pos:line="25" pos:column="39">16<pos:position pos:line="25" pos:column="41"/></literal><operator pos:line="25" pos:column="41">)<pos:position pos:line="25" pos:column="42"/></operator> <operator pos:line="25" pos:column="43">|<pos:position pos:line="25" pos:column="44"/></operator> <operator pos:line="25" pos:column="45">(<pos:position pos:line="25" pos:column="46"/></operator><name pos:line="25" pos:column="46">rtt<pos:position pos:line="25" pos:column="49"/></name> <operator pos:line="25" pos:column="50">&amp;<pos:position pos:line="25" pos:column="55"/></operator> <literal type="number" pos:line="25" pos:column="52">0xFFFF<pos:position pos:line="25" pos:column="58"/></literal><operator pos:line="25" pos:column="58">)<pos:position pos:line="25" pos:column="59"/></operator></expr>;<pos:position pos:line="25" pos:column="60"/></expr_stmt>

        <if pos:line="27" pos:column="9">if <condition pos:line="27" pos:column="12">(<expr><name pos:line="27" pos:column="13">rtt<pos:position pos:line="27" pos:column="16"/></name></expr>)<pos:position pos:line="27" pos:column="17"/></condition><then pos:line="27" pos:column="17">
            <block type="pseudo"><expr_stmt><expr><name pos:line="28" pos:column="13">flags<pos:position pos:line="28" pos:column="18"/></name> <operator pos:line="28" pos:column="19">|=<pos:position pos:line="28" pos:column="21"/></operator> <name pos:line="28" pos:column="22">ICP_FLAG_SRC_RTT<pos:position pos:line="28" pos:column="38"/></name></expr>;<pos:position pos:line="28" pos:column="39"/></expr_stmt></block></then></if>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if>
<cpp:endif pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">endif<pos:position pos:line="30" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="30" pos:column="8">/* USE_ICMP */</comment>

    <comment type="block" pos:line="32" pos:column="5">/* The peer is allowed to use this cache */</comment>
    <decl_stmt><decl><type><name pos:line="33" pos:column="5">ICP2State<pos:position pos:line="33" pos:column="14"/></name> <modifier pos:line="33" pos:column="15">*<pos:position pos:line="33" pos:column="16"/></modifier></type><name pos:line="33" pos:column="16">state<pos:position pos:line="33" pos:column="21"/></name> <init pos:line="33" pos:column="22">= <expr><operator pos:line="33" pos:column="24">new<pos:position pos:line="33" pos:column="27"/></operator> <call><name pos:line="33" pos:column="28">ICP2State<pos:position pos:line="33" pos:column="37"/></name> <argument_list pos:line="33" pos:column="38">(<argument><expr><name pos:line="33" pos:column="39">header<pos:position pos:line="33" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="47">icp_request<pos:position pos:line="33" pos:column="58"/></name></expr></argument>)<pos:position pos:line="33" pos:column="59"/></argument_list></call></expr></init></decl>;<pos:position pos:line="33" pos:column="60"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="35" pos:column="5">state<pos:position pos:line="35" pos:column="10"/></name><operator pos:line="35" pos:column="10">-&gt;<pos:position pos:line="35" pos:column="15"/></operator><name pos:line="35" pos:column="12">fd<pos:position pos:line="35" pos:column="14"/></name></name> <operator pos:line="35" pos:column="15">=<pos:position pos:line="35" pos:column="16"/></operator> <name pos:line="35" pos:column="17">fd<pos:position pos:line="35" pos:column="19"/></name></expr>;<pos:position pos:line="35" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="37" pos:column="5">state<pos:position pos:line="37" pos:column="10"/></name><operator pos:line="37" pos:column="10">-&gt;<pos:position pos:line="37" pos:column="15"/></operator><name pos:line="37" pos:column="12">from<pos:position pos:line="37" pos:column="16"/></name></name> <operator pos:line="37" pos:column="17">=<pos:position pos:line="37" pos:column="18"/></operator> <name pos:line="37" pos:column="19">from<pos:position pos:line="37" pos:column="23"/></name></expr>;<pos:position pos:line="37" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="39" pos:column="5">state<pos:position pos:line="39" pos:column="10"/></name><operator pos:line="39" pos:column="10">-&gt;<pos:position pos:line="39" pos:column="15"/></operator><name pos:line="39" pos:column="12">url<pos:position pos:line="39" pos:column="15"/></name></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">xstrdup<pos:position pos:line="39" pos:column="25"/></name> <argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">url<pos:position pos:line="39" pos:column="30"/></name></expr></argument>)<pos:position pos:line="39" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="32"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="41" pos:column="5">state<pos:position pos:line="41" pos:column="10"/></name><operator pos:line="41" pos:column="10">-&gt;<pos:position pos:line="41" pos:column="15"/></operator><name pos:line="41" pos:column="12">flags<pos:position pos:line="41" pos:column="17"/></name></name> <operator pos:line="41" pos:column="18">=<pos:position pos:line="41" pos:column="19"/></operator> <name pos:line="41" pos:column="20">flags<pos:position pos:line="41" pos:column="25"/></name></expr>;<pos:position pos:line="41" pos:column="26"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="43" pos:column="5">state<pos:position pos:line="43" pos:column="10"/></name><operator pos:line="43" pos:column="10">-&gt;<pos:position pos:line="43" pos:column="15"/></operator><name pos:line="43" pos:column="12">rtt<pos:position pos:line="43" pos:column="15"/></name></name> <operator pos:line="43" pos:column="16">=<pos:position pos:line="43" pos:column="17"/></operator> <name pos:line="43" pos:column="18">rtt<pos:position pos:line="43" pos:column="21"/></name></expr>;<pos:position pos:line="43" pos:column="22"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="45" pos:column="5">state<pos:position pos:line="45" pos:column="10"/></name><operator pos:line="45" pos:column="10">-&gt;<pos:position pos:line="45" pos:column="15"/></operator><name pos:line="45" pos:column="12">src_rtt<pos:position pos:line="45" pos:column="19"/></name></name> <operator pos:line="45" pos:column="20">=<pos:position pos:line="45" pos:column="21"/></operator> <name pos:line="45" pos:column="22">src_rtt<pos:position pos:line="45" pos:column="29"/></name></expr>;<pos:position pos:line="45" pos:column="30"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="47" pos:column="5">StoreEntry<pos:position pos:line="47" pos:column="15"/></name><operator pos:line="47" pos:column="15">::<pos:position pos:line="47" pos:column="17"/></operator><name pos:line="47" pos:column="17">getPublic<pos:position pos:line="47" pos:column="26"/></name></name> <argument_list pos:line="47" pos:column="27">(<argument><expr><name pos:line="47" pos:column="28">state<pos:position pos:line="47" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="35">url<pos:position pos:line="47" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="47" pos:column="40">METHOD_GET<pos:position pos:line="47" pos:column="50"/></name></expr></argument>)<pos:position pos:line="47" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="49" pos:column="5">HTTPMSGUNLOCK<pos:position pos:line="49" pos:column="18"/></name><argument_list pos:line="49" pos:column="18">(<argument><expr><name pos:line="49" pos:column="19">icp_request<pos:position pos:line="49" pos:column="30"/></name></expr></argument>)<pos:position pos:line="49" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="32"/></expr_stmt>
}<pos:position pos:line="50" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1815_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">external_acl_entry<pos:position pos:line="1" pos:column="26"/></name> <modifier pos:line="1" pos:column="27">*<pos:position pos:line="1" pos:column="28"/></modifier></type>
<name pos:line="2" pos:column="1">external_acl_cache_add<pos:position pos:line="2" pos:column="23"/></name><parameter_list pos:line="2" pos:column="23">(<parameter><decl><type><name pos:line="2" pos:column="24">external_acl<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">def<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="44">const<pos:position pos:line="2" pos:column="49"/></specifier> <name pos:line="2" pos:column="50">char<pos:position pos:line="2" pos:column="54"/></name> <modifier pos:line="2" pos:column="55">*<pos:position pos:line="2" pos:column="56"/></modifier></type><name pos:line="2" pos:column="56">key<pos:position pos:line="2" pos:column="59"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="61">ExternalACLEntryData<pos:position pos:line="2" pos:column="81"/></name> <specifier pos:line="2" pos:column="82">const<pos:position pos:line="2" pos:column="87"/></specifier> <modifier pos:line="2" pos:column="88">&amp;<pos:position pos:line="2" pos:column="93"/></modifier></type> <name pos:line="2" pos:column="90">data<pos:position pos:line="2" pos:column="94"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="95"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ExternalACLEntry<pos:position pos:line="4" pos:column="21"/></name> <modifier pos:line="4" pos:column="22">*<pos:position pos:line="4" pos:column="23"/></modifier></type><name pos:line="4" pos:column="23">entry<pos:position pos:line="4" pos:column="28"/></name></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>

    <comment type="line" pos:line="6" pos:column="5">// do not bother caching this result if TTL is going to expire it immediately</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name><name pos:line="7" pos:column="9">def<pos:position pos:line="7" pos:column="12"/></name><operator pos:line="7" pos:column="12">-&gt;<pos:position pos:line="7" pos:column="17"/></operator><name pos:line="7" pos:column="14">cache_size<pos:position pos:line="7" pos:column="24"/></name></name> <operator pos:line="7" pos:column="25">&lt;=<pos:position pos:line="7" pos:column="30"/></operator> <literal type="number" pos:line="7" pos:column="28">0<pos:position pos:line="7" pos:column="29"/></literal> <operator pos:line="7" pos:column="30">||<pos:position pos:line="7" pos:column="32"/></operator> <operator pos:line="7" pos:column="33">(<pos:position pos:line="7" pos:column="34"/></operator><name><name pos:line="7" pos:column="34">def<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">-&gt;<pos:position pos:line="7" pos:column="42"/></operator><name pos:line="7" pos:column="39">ttl<pos:position pos:line="7" pos:column="42"/></name></name> <operator pos:line="7" pos:column="43">&lt;=<pos:position pos:line="7" pos:column="48"/></operator> <literal type="number" pos:line="7" pos:column="46">0<pos:position pos:line="7" pos:column="47"/></literal> <operator pos:line="7" pos:column="48">&amp;&amp;<pos:position pos:line="7" pos:column="58"/></operator> <name><name pos:line="7" pos:column="51">data<pos:position pos:line="7" pos:column="55"/></name><operator pos:line="7" pos:column="55">.<pos:position pos:line="7" pos:column="56"/></operator><name pos:line="7" pos:column="56">result<pos:position pos:line="7" pos:column="62"/></name></name> <operator pos:line="7" pos:column="63">==<pos:position pos:line="7" pos:column="65"/></operator> <literal type="number" pos:line="7" pos:column="66">1<pos:position pos:line="7" pos:column="67"/></literal><operator pos:line="7" pos:column="67">)<pos:position pos:line="7" pos:column="68"/></operator> <operator pos:line="7" pos:column="69">||<pos:position pos:line="7" pos:column="71"/></operator> <operator pos:line="7" pos:column="72">(<pos:position pos:line="7" pos:column="73"/></operator><name><name pos:line="7" pos:column="73">def<pos:position pos:line="7" pos:column="76"/></name><operator pos:line="7" pos:column="76">-&gt;<pos:position pos:line="7" pos:column="81"/></operator><name pos:line="7" pos:column="78">negative_ttl<pos:position pos:line="7" pos:column="90"/></name></name> <operator pos:line="7" pos:column="91">&lt;=<pos:position pos:line="7" pos:column="96"/></operator> <literal type="number" pos:line="7" pos:column="94">0<pos:position pos:line="7" pos:column="95"/></literal> <operator pos:line="7" pos:column="96">&amp;&amp;<pos:position pos:line="7" pos:column="106"/></operator> <name><name pos:line="7" pos:column="99">data<pos:position pos:line="7" pos:column="103"/></name><operator pos:line="7" pos:column="103">.<pos:position pos:line="7" pos:column="104"/></operator><name pos:line="7" pos:column="104">result<pos:position pos:line="7" pos:column="110"/></name></name> <operator pos:line="7" pos:column="111">!=<pos:position pos:line="7" pos:column="113"/></operator> <literal type="number" pos:line="7" pos:column="114">1<pos:position pos:line="7" pos:column="115"/></literal><operator pos:line="7" pos:column="115">)<pos:position pos:line="7" pos:column="116"/></operator></expr>)<pos:position pos:line="7" pos:column="117"/></condition><then pos:line="7" pos:column="117"> <block pos:line="7" pos:column="118">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">82<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="8" pos:column="19">6<pos:position pos:line="8" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="22">HERE<pos:position pos:line="8" pos:column="26"/></name></expr></argument>)<pos:position pos:line="8" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">entry<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <operator pos:line="9" pos:column="17">new<pos:position pos:line="9" pos:column="20"/></operator> <name pos:line="9" pos:column="21">ExternalACLEntry<pos:position pos:line="9" pos:column="37"/></name></expr>;<pos:position pos:line="9" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">entry<pos:position pos:line="10" pos:column="14"/></name><operator pos:line="10" pos:column="14">-&gt;<pos:position pos:line="10" pos:column="19"/></operator><name pos:line="10" pos:column="16">key<pos:position pos:line="10" pos:column="19"/></name></name> <operator pos:line="10" pos:column="20">=<pos:position pos:line="10" pos:column="21"/></operator> <call><name pos:line="10" pos:column="22">xstrdup<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">key<pos:position pos:line="10" pos:column="33"/></name></expr></argument>)<pos:position pos:line="10" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="35"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="11" pos:column="9">entry<pos:position pos:line="11" pos:column="14"/></name><operator pos:line="11" pos:column="14">-&gt;<pos:position pos:line="11" pos:column="19"/></operator><name pos:line="11" pos:column="16">update<pos:position pos:line="11" pos:column="22"/></name></name><argument_list pos:line="11" pos:column="22">(<argument><expr><name pos:line="11" pos:column="23">data<pos:position pos:line="11" pos:column="27"/></name></expr></argument>)<pos:position pos:line="11" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="12" pos:column="9">entry<pos:position pos:line="12" pos:column="14"/></name><operator pos:line="12" pos:column="14">-&gt;<pos:position pos:line="12" pos:column="19"/></operator><name pos:line="12" pos:column="16">def<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name pos:line="12" pos:column="22">def<pos:position pos:line="12" pos:column="25"/></name></expr>;<pos:position pos:line="12" pos:column="26"/></expr_stmt>
        <return pos:line="13" pos:column="9">return <expr><name pos:line="13" pos:column="16">entry<pos:position pos:line="13" pos:column="21"/></name></expr>;<pos:position pos:line="13" pos:column="22"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">entry<pos:position pos:line="16" pos:column="10"/></name> <operator pos:line="16" pos:column="11">=<pos:position pos:line="16" pos:column="12"/></operator> <cast type="static" pos:line="16" pos:column="13">static_cast<argument_list type="generic" pos:line="16" pos:column="24">&lt;<argument><expr><name pos:line="16" pos:column="25">ExternalACLEntry<pos:position pos:line="16" pos:column="41"/></name> <operator pos:line="16" pos:column="42">*<pos:position pos:line="16" pos:column="43"/></operator></expr></argument>&gt;<pos:position pos:line="16" pos:column="47"/></argument_list><argument_list pos:line="16" pos:column="44">(<argument><expr><call><name pos:line="16" pos:column="45">hash_lookup<pos:position pos:line="16" pos:column="56"/></name><argument_list pos:line="16" pos:column="56">(<argument><expr><name><name pos:line="16" pos:column="57">def<pos:position pos:line="16" pos:column="60"/></name><operator pos:line="16" pos:column="60">-&gt;<pos:position pos:line="16" pos:column="65"/></operator><name pos:line="16" pos:column="62">cache<pos:position pos:line="16" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="69">key<pos:position pos:line="16" pos:column="72"/></name></expr></argument>)<pos:position pos:line="16" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="16" pos:column="74"/></argument_list></cast></expr>;<pos:position pos:line="16" pos:column="75"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="17" pos:column="5">debugs<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><literal type="number" pos:line="17" pos:column="12">82<pos:position pos:line="17" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="17" pos:column="16">2<pos:position pos:line="17" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="17" pos:column="19">"external_acl_cache_add: Adding '"<pos:position pos:line="17" pos:column="53"/></literal> <operator pos:line="17" pos:column="54">&lt;&lt;<pos:position pos:line="17" pos:column="62"/></operator> <name pos:line="17" pos:column="57">key<pos:position pos:line="17" pos:column="60"/></name> <operator pos:line="17" pos:column="61">&lt;&lt;<pos:position pos:line="17" pos:column="69"/></operator> <literal type="string" pos:line="17" pos:column="64">"' = "<pos:position pos:line="17" pos:column="70"/></literal> <operator pos:line="17" pos:column="71">&lt;&lt;<pos:position pos:line="17" pos:column="79"/></operator> <name><name pos:line="17" pos:column="74">data<pos:position pos:line="17" pos:column="78"/></name><operator pos:line="17" pos:column="78">.<pos:position pos:line="17" pos:column="79"/></operator><name pos:line="17" pos:column="79">result<pos:position pos:line="17" pos:column="85"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="87"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><name pos:line="19" pos:column="9">entry<pos:position pos:line="19" pos:column="14"/></name></expr>)<pos:position pos:line="19" pos:column="15"/></condition><then pos:line="19" pos:column="15"> <block pos:line="19" pos:column="16">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">82<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="20">3<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="23">"ExternalACLEntry::update: updating existing entry"<pos:position pos:line="20" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="76"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="21" pos:column="9">entry<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">update<pos:position pos:line="21" pos:column="22"/></name></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">data<pos:position pos:line="21" pos:column="27"/></name></expr></argument>)<pos:position pos:line="21" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">external_acl_cache_touch<pos:position pos:line="22" pos:column="33"/></name><argument_list pos:line="22" pos:column="33">(<argument><expr><name pos:line="22" pos:column="34">def<pos:position pos:line="22" pos:column="37"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="39">entry<pos:position pos:line="22" pos:column="44"/></name></expr></argument>)<pos:position pos:line="22" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="46"/></expr_stmt>

        <return pos:line="24" pos:column="9">return <expr><name pos:line="24" pos:column="16">entry<pos:position pos:line="24" pos:column="21"/></name></expr>;<pos:position pos:line="24" pos:column="22"/></return>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="27" pos:column="5">entry<pos:position pos:line="27" pos:column="10"/></name> <operator pos:line="27" pos:column="11">=<pos:position pos:line="27" pos:column="12"/></operator> <operator pos:line="27" pos:column="13">new<pos:position pos:line="27" pos:column="16"/></operator> <name pos:line="27" pos:column="17">ExternalACLEntry<pos:position pos:line="27" pos:column="33"/></name></expr>;<pos:position pos:line="27" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="28" pos:column="5">entry<pos:position pos:line="28" pos:column="10"/></name><operator pos:line="28" pos:column="10">-&gt;<pos:position pos:line="28" pos:column="15"/></operator><name pos:line="28" pos:column="12">key<pos:position pos:line="28" pos:column="15"/></name></name> <operator pos:line="28" pos:column="16">=<pos:position pos:line="28" pos:column="17"/></operator> <call><name pos:line="28" pos:column="18">xstrdup<pos:position pos:line="28" pos:column="25"/></name><argument_list pos:line="28" pos:column="25">(<argument><expr><name pos:line="28" pos:column="26">key<pos:position pos:line="28" pos:column="29"/></name></expr></argument>)<pos:position pos:line="28" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="29" pos:column="5">entry<pos:position pos:line="29" pos:column="10"/></name><operator pos:line="29" pos:column="10">-&gt;<pos:position pos:line="29" pos:column="15"/></operator><name pos:line="29" pos:column="12">update<pos:position pos:line="29" pos:column="18"/></name></name><argument_list pos:line="29" pos:column="18">(<argument><expr><name pos:line="29" pos:column="19">data<pos:position pos:line="29" pos:column="23"/></name></expr></argument>)<pos:position pos:line="29" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="25"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="31" pos:column="5">def<pos:position pos:line="31" pos:column="8"/></name><operator pos:line="31" pos:column="8">-&gt;<pos:position pos:line="31" pos:column="13"/></operator><name pos:line="31" pos:column="10">add<pos:position pos:line="31" pos:column="13"/></name></name><argument_list pos:line="31" pos:column="13">(<argument><expr><name pos:line="31" pos:column="14">entry<pos:position pos:line="31" pos:column="19"/></name></expr></argument>)<pos:position pos:line="31" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="21"/></expr_stmt>

    <return pos:line="33" pos:column="5">return <expr><name pos:line="33" pos:column="12">entry<pos:position pos:line="33" pos:column="17"/></name></expr>;<pos:position pos:line="33" pos:column="18"/></return>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

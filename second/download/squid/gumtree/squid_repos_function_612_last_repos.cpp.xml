<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_612_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">ClientInfo<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">quotaForDequed<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">()<pos:position pos:line="2" pos:column="29"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* If we have multiple clients and give full bucketSize to each client then
     * clt1 may often get a lot more because clt1-&gt;clt2 time distance in the
     * select(2) callback order may be a lot smaller than cltN-&gt;clt1 distance.
     * We divide quota evenly to be more fair. */</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><operator pos:line="9" pos:column="9">!<pos:position pos:line="9" pos:column="10"/></operator><name pos:line="9" pos:column="10">rationedCount<pos:position pos:line="9" pos:column="23"/></name></expr>)<pos:position pos:line="9" pos:column="24"/></condition><then pos:line="9" pos:column="24"> <block pos:line="9" pos:column="25">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">rationedCount<pos:position pos:line="10" pos:column="22"/></name> <operator pos:line="10" pos:column="23">=<pos:position pos:line="10" pos:column="24"/></operator> <call><name><name pos:line="10" pos:column="25">quotaQueue<pos:position pos:line="10" pos:column="35"/></name><operator pos:line="10" pos:column="35">-&gt;<pos:position pos:line="10" pos:column="40"/></operator><name pos:line="10" pos:column="37">size<pos:position pos:line="10" pos:column="41"/></name></name><argument_list pos:line="10" pos:column="41">()<pos:position pos:line="10" pos:column="43"/></argument_list></call> <operator pos:line="10" pos:column="44">+<pos:position pos:line="10" pos:column="45"/></operator> <literal type="number" pos:line="10" pos:column="46">1<pos:position pos:line="10" pos:column="47"/></literal></expr>;<pos:position pos:line="10" pos:column="48"/></expr_stmt>

        <comment type="line" pos:line="12" pos:column="9">// The delay in ration recalculation _temporary_ deprives clients from</comment>
        <comment type="line" pos:line="13" pos:column="9">// bytes that should have trickled in while rationedCount was positive.</comment>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">refillBucket<pos:position pos:line="14" pos:column="21"/></name><argument_list pos:line="14" pos:column="21">()<pos:position pos:line="14" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="24"/></expr_stmt>

        <comment type="line" pos:line="16" pos:column="9">// Rounding errors do not accumulate here, but we round down to avoid</comment>
        <comment type="line" pos:line="17" pos:column="9">// negative bucket sizes after write with rationedCount=1.</comment>
        <expr_stmt><expr><name pos:line="18" pos:column="9">rationedQuota<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <cast type="static" pos:line="18" pos:column="25">static_cast<argument_list type="generic" pos:line="18" pos:column="36">&lt;<argument><expr><name pos:line="18" pos:column="37">int<pos:position pos:line="18" pos:column="40"/></name></expr></argument>&gt;<pos:position pos:line="18" pos:column="44"/></argument_list><argument_list pos:line="18" pos:column="41">(<argument><expr><call><name pos:line="18" pos:column="42">floor<pos:position pos:line="18" pos:column="47"/></name><argument_list pos:line="18" pos:column="47">(<argument><expr><name pos:line="18" pos:column="48">bucketSize<pos:position pos:line="18" pos:column="58"/></name><operator pos:line="18" pos:column="58">/<pos:position pos:line="18" pos:column="59"/></operator><name pos:line="18" pos:column="59">rationedCount<pos:position pos:line="18" pos:column="72"/></name></expr></argument>)<pos:position pos:line="18" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="18" pos:column="74"/></argument_list></cast></expr>;<pos:position pos:line="18" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">debugs<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="number" pos:line="19" pos:column="16">77<pos:position pos:line="19" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="19" pos:column="19">5<pos:position pos:line="19" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="22">HERE<pos:position pos:line="19" pos:column="26"/></name> <operator pos:line="19" pos:column="27">&lt;&lt;<pos:position pos:line="19" pos:column="35"/></operator> <literal type="string" pos:line="19" pos:column="30">"new rationedQuota: "<pos:position pos:line="19" pos:column="51"/></literal> <operator pos:line="19" pos:column="52">&lt;&lt;<pos:position pos:line="19" pos:column="60"/></operator> <name pos:line="19" pos:column="55">rationedQuota<pos:position pos:line="19" pos:column="68"/></name> <operator pos:line="19" pos:column="69">&lt;&lt;<pos:position pos:line="19" pos:column="77"/></operator>
               <literal type="char" pos:line="20" pos:column="16">'*'<pos:position pos:line="20" pos:column="19"/></literal> <operator pos:line="20" pos:column="20">&lt;&lt;<pos:position pos:line="20" pos:column="28"/></operator> <name pos:line="20" pos:column="23">rationedCount<pos:position pos:line="20" pos:column="36"/></name></expr></argument>)<pos:position pos:line="20" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <expr_stmt><expr><operator pos:line="23" pos:column="5">--<pos:position pos:line="23" pos:column="7"/></operator><name pos:line="23" pos:column="7">rationedCount<pos:position pos:line="23" pos:column="20"/></name></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">debugs<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">77<pos:position pos:line="24" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="24" pos:column="15">7<pos:position pos:line="24" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="24" pos:column="18">HERE<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">&lt;&lt;<pos:position pos:line="24" pos:column="31"/></operator> <literal type="string" pos:line="24" pos:column="26">"rationedQuota: "<pos:position pos:line="24" pos:column="43"/></literal> <operator pos:line="24" pos:column="44">&lt;&lt;<pos:position pos:line="24" pos:column="52"/></operator> <name pos:line="24" pos:column="47">rationedQuota<pos:position pos:line="24" pos:column="60"/></name> <operator pos:line="24" pos:column="61">&lt;&lt;<pos:position pos:line="24" pos:column="69"/></operator>
           <literal type="string" pos:line="25" pos:column="12">" rations remaining: "<pos:position pos:line="25" pos:column="34"/></literal> <operator pos:line="25" pos:column="35">&lt;&lt;<pos:position pos:line="25" pos:column="43"/></operator> <name pos:line="25" pos:column="38">rationedCount<pos:position pos:line="25" pos:column="51"/></name></expr></argument>)<pos:position pos:line="25" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="53"/></expr_stmt>

    <comment type="line" pos:line="27" pos:column="5">// update 'last seen' time to prevent clientdb GC from dropping us</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">last_seen<pos:position pos:line="28" pos:column="14"/></name> <operator pos:line="28" pos:column="15">=<pos:position pos:line="28" pos:column="16"/></operator> <name pos:line="28" pos:column="17">squid_curtime<pos:position pos:line="28" pos:column="30"/></name></expr>;<pos:position pos:line="28" pos:column="31"/></expr_stmt>
    <return pos:line="29" pos:column="5">return <expr><name pos:line="29" pos:column="12">rationedQuota<pos:position pos:line="29" pos:column="25"/></name></expr>;<pos:position pos:line="29" pos:column="26"/></return>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

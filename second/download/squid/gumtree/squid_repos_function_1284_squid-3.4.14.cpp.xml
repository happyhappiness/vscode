<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1284_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">eventAddIsh<pos:position pos:line="2" pos:column="12"/></name><parameter_list pos:line="2" pos:column="12">(<parameter><decl><type><specifier pos:line="2" pos:column="13">const<pos:position pos:line="2" pos:column="18"/></specifier> <name pos:line="2" pos:column="19">char<pos:position pos:line="2" pos:column="23"/></name> <modifier pos:line="2" pos:column="24">*<pos:position pos:line="2" pos:column="25"/></modifier></type><name pos:line="2" pos:column="25">name<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">EVH<pos:position pos:line="2" pos:column="34"/></name> <modifier pos:line="2" pos:column="35">*<pos:position pos:line="2" pos:column="36"/></modifier></type> <name pos:line="2" pos:column="37">func<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">void<pos:position pos:line="2" pos:column="47"/></name> <modifier pos:line="2" pos:column="48">*<pos:position pos:line="2" pos:column="49"/></modifier></type><name pos:line="2" pos:column="49">arg<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">double<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">delta_ish<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="72">int<pos:position pos:line="2" pos:column="75"/></name></type> <name pos:line="2" pos:column="76">weight<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="83"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">delta_ish<pos:position pos:line="4" pos:column="18"/></name> <operator pos:line="4" pos:column="19">&gt;=<pos:position pos:line="4" pos:column="24"/></operator> <literal type="number" pos:line="4" pos:column="22">3.0<pos:position pos:line="4" pos:column="25"/></literal></expr>)<pos:position pos:line="4" pos:column="26"/></condition><then pos:line="4" pos:column="26"> <block pos:line="4" pos:column="27">{
        <decl_stmt><decl><type><specifier pos:line="5" pos:column="9">const<pos:position pos:line="5" pos:column="14"/></specifier> <name pos:line="5" pos:column="15">double<pos:position pos:line="5" pos:column="21"/></name></type> <name pos:line="5" pos:column="22">two_third<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><operator pos:line="5" pos:column="34">(<pos:position pos:line="5" pos:column="35"/></operator><literal type="number" pos:line="5" pos:column="35">2.0<pos:position pos:line="5" pos:column="38"/></literal> <operator pos:line="5" pos:column="39">*<pos:position pos:line="5" pos:column="40"/></operator> <name pos:line="5" pos:column="41">delta_ish<pos:position pos:line="5" pos:column="50"/></name><operator pos:line="5" pos:column="50">)<pos:position pos:line="5" pos:column="51"/></operator> <operator pos:line="5" pos:column="52">/<pos:position pos:line="5" pos:column="53"/></operator> <literal type="number" pos:line="5" pos:column="54">3.0<pos:position pos:line="5" pos:column="57"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="58"/></decl_stmt>
        <expr_stmt><expr><name pos:line="6" pos:column="9">delta_ish<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">=<pos:position pos:line="6" pos:column="20"/></operator> <name pos:line="6" pos:column="21">two_third<pos:position pos:line="6" pos:column="30"/></name> <operator pos:line="6" pos:column="31">+<pos:position pos:line="6" pos:column="32"/></operator> <operator pos:line="6" pos:column="33">(<pos:position pos:line="6" pos:column="34"/></operator><call><name pos:line="6" pos:column="34">drand48<pos:position pos:line="6" pos:column="41"/></name><argument_list pos:line="6" pos:column="41">()<pos:position pos:line="6" pos:column="43"/></argument_list></call> <operator pos:line="6" pos:column="44">*<pos:position pos:line="6" pos:column="45"/></operator> <name pos:line="6" pos:column="46">two_third<pos:position pos:line="6" pos:column="55"/></name><operator pos:line="6" pos:column="55">)<pos:position pos:line="6" pos:column="56"/></operator></expr>;<pos:position pos:line="6" pos:column="57"/></expr_stmt>
        <comment type="block" pos:line="7" pos:column="9">/*
         * I'm sure drand48() isn't portable.  Tell me what function
         * you have that returns a random double value in the range 0,1.
         */</comment>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="13" pos:column="5">eventAdd<pos:position pos:line="13" pos:column="13"/></name><argument_list pos:line="13" pos:column="13">(<argument><expr><name pos:line="13" pos:column="14">name<pos:position pos:line="13" pos:column="18"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="20">func<pos:position pos:line="13" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="26">arg<pos:position pos:line="13" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="31">delta_ish<pos:position pos:line="13" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="42">weight<pos:position pos:line="13" pos:column="48"/></name></expr></argument>)<pos:position pos:line="13" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="50"/></expr_stmt>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5220_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Client<pos:position pos:line="2" pos:column="7"/></name><operator pos:line="2" pos:column="7">::<pos:position pos:line="2" pos:column="9"/></operator><name pos:line="2" pos:column="9">blockCaching<pos:position pos:line="2" pos:column="21"/></name></name><parameter_list pos:line="2" pos:column="21">()<pos:position pos:line="2" pos:column="23"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<decl><type><specifier pos:line="4" pos:column="9">const<pos:position pos:line="4" pos:column="14"/></specifier> <name><name pos:line="4" pos:column="15">Acl<pos:position pos:line="4" pos:column="18"/></name><operator pos:line="4" pos:column="18">::<pos:position pos:line="4" pos:column="20"/></operator><name pos:line="4" pos:column="20">Tree<pos:position pos:line="4" pos:column="24"/></name></name> <modifier pos:line="4" pos:column="25">*<pos:position pos:line="4" pos:column="26"/></modifier></type><name pos:line="4" pos:column="26">acl<pos:position pos:line="4" pos:column="29"/></name> <init pos:line="4" pos:column="30">= <expr><name><name pos:line="4" pos:column="32">Config<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">.<pos:position pos:line="4" pos:column="39"/></operator><name pos:line="4" pos:column="39">accessList<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">.<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="50">storeMiss<pos:position pos:line="4" pos:column="59"/></name></name></expr></init></decl>)<pos:position pos:line="4" pos:column="60"/></condition><then pos:line="4" pos:column="60"> <block pos:line="4" pos:column="61">{
        <comment type="line" pos:line="5" pos:column="9">// This relatively expensive check is not in StoreEntry::checkCachable:</comment>
        <comment type="line" pos:line="6" pos:column="9">// That method lacks HttpRequest and may be called too many times.</comment>
        <decl_stmt><decl><type><name pos:line="7" pos:column="9">ACLFilledChecklist<pos:position pos:line="7" pos:column="27"/></name></type> <name pos:line="7" pos:column="28">ch<pos:position pos:line="7" pos:column="30"/></name><argument_list pos:line="7" pos:column="30">(<argument><expr><name pos:line="7" pos:column="31">acl<pos:position pos:line="7" pos:column="34"/></name></expr></argument>, <argument><expr><call><name pos:line="7" pos:column="36">originalRequest<pos:position pos:line="7" pos:column="51"/></name><argument_list pos:line="7" pos:column="51">()<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="7" pos:column="55">NULL<pos:position pos:line="7" pos:column="59"/></name></expr></argument>)<pos:position pos:line="7" pos:column="60"/></argument_list></decl>;<pos:position pos:line="7" pos:column="61"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="8" pos:column="9">ch<pos:position pos:line="8" pos:column="11"/></name><operator pos:line="8" pos:column="11">.<pos:position pos:line="8" pos:column="12"/></operator><name pos:line="8" pos:column="12">reply<pos:position pos:line="8" pos:column="17"/></name></name> <operator pos:line="8" pos:column="18">=<pos:position pos:line="8" pos:column="19"/></operator> <cast type="const" pos:line="8" pos:column="20">const_cast<argument_list type="generic" pos:line="8" pos:column="30">&lt;<argument><expr><name pos:line="8" pos:column="31">HttpReply<pos:position pos:line="8" pos:column="40"/></name><operator pos:line="8" pos:column="40">*<pos:position pos:line="8" pos:column="41"/></operator></expr></argument>&gt;<pos:position pos:line="8" pos:column="45"/></argument_list><argument_list pos:line="8" pos:column="42">(<argument><expr><call><name><name pos:line="8" pos:column="43">entry<pos:position pos:line="8" pos:column="48"/></name><operator pos:line="8" pos:column="48">-&gt;<pos:position pos:line="8" pos:column="53"/></operator><name pos:line="8" pos:column="50">getReply<pos:position pos:line="8" pos:column="58"/></name></name><argument_list pos:line="8" pos:column="58">()<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="61"/></argument_list></cast></expr>;<pos:position pos:line="8" pos:column="62"/></expr_stmt> <comment type="line" pos:line="8" pos:column="63">// ACLFilledChecklist API bug</comment>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">HTTPMSGLOCK<pos:position pos:line="9" pos:column="20"/></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name><name pos:line="9" pos:column="21">ch<pos:position pos:line="9" pos:column="23"/></name><operator pos:line="9" pos:column="23">.<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">reply<pos:position pos:line="9" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="9" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><operator pos:line="10" pos:column="13">!<pos:position pos:line="10" pos:column="14"/></operator><call><name><name pos:line="10" pos:column="14">ch<pos:position pos:line="10" pos:column="16"/></name><operator pos:line="10" pos:column="16">.<pos:position pos:line="10" pos:column="17"/></operator><name pos:line="10" pos:column="17">fastCheck<pos:position pos:line="10" pos:column="26"/></name></name><argument_list pos:line="10" pos:column="26">()<pos:position pos:line="10" pos:column="28"/></argument_list></call><operator pos:line="10" pos:column="28">.<pos:position pos:line="10" pos:column="29"/></operator><call><name pos:line="10" pos:column="29">allowed<pos:position pos:line="10" pos:column="36"/></name><argument_list pos:line="10" pos:column="36">()<pos:position pos:line="10" pos:column="38"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="39"/></condition><then pos:line="10" pos:column="39"> <block pos:line="10" pos:column="40">{ <comment type="line" pos:line="10" pos:column="42">// when in doubt, block</comment>
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">debugs<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><literal type="number" pos:line="11" pos:column="20">20<pos:position pos:line="11" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="11" pos:column="24">3<pos:position pos:line="11" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="11" pos:column="27">"store_miss prohibits caching"<pos:position pos:line="11" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="59"/></expr_stmt>
            <return pos:line="12" pos:column="13">return <expr><literal type="boolean" pos:line="12" pos:column="20">true<pos:position pos:line="12" pos:column="24"/></literal></expr>;<pos:position pos:line="12" pos:column="25"/></return>
        }<pos:position pos:line="13" pos:column="10"/></block></then></if>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
    <return pos:line="15" pos:column="5">return <expr><literal type="boolean" pos:line="15" pos:column="12">false<pos:position pos:line="15" pos:column="17"/></literal></expr>;<pos:position pos:line="15" pos:column="18"/></return>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

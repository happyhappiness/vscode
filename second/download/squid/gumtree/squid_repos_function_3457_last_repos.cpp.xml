<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3457_last_repos.cpp" pos:tabs="8"><function><type><specifier pos:line="1" pos:column="1">const<pos:position pos:line="1" pos:column="6"/></specifier> <name><name pos:line="1" pos:column="7">libecap<pos:position pos:line="1" pos:column="14"/></name><operator pos:line="1" pos:column="14">::<pos:position pos:line="1" pos:column="16"/></operator><name pos:line="1" pos:column="16">Area<pos:position pos:line="1" pos:column="20"/></name></name></type>
<name><name pos:line="2" pos:column="1">Adaptation<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">Ecap<pos:position pos:line="2" pos:column="17"/></name><operator pos:line="2" pos:column="17">::<pos:position pos:line="2" pos:column="19"/></operator><name pos:line="2" pos:column="19">XactionRep<pos:position pos:line="2" pos:column="29"/></name><operator pos:line="2" pos:column="29">::<pos:position pos:line="2" pos:column="31"/></operator><name pos:line="2" pos:column="31">usernameValue<pos:position pos:line="2" pos:column="44"/></name></name><parameter_list pos:line="2" pos:column="44">()<pos:position pos:line="2" pos:column="46"/></parameter_list> <specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_AUTH<pos:position pos:line="4" pos:column="13"/></name></expr></cpp:if>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">HttpRequest<pos:position pos:line="5" pos:column="22"/></name> <modifier pos:line="5" pos:column="23">*<pos:position pos:line="5" pos:column="24"/></modifier></type><name pos:line="5" pos:column="24">request<pos:position pos:line="5" pos:column="31"/></name> <init pos:line="5" pos:column="32">= <expr><cast type="dynamic" pos:line="5" pos:column="34">dynamic_cast<argument_list type="generic" pos:line="5" pos:column="46">&lt;<argument><expr><specifier pos:line="5" pos:column="47">const<pos:position pos:line="5" pos:column="52"/></specifier> <name pos:line="5" pos:column="53">HttpRequest<pos:position pos:line="5" pos:column="64"/></name><operator pos:line="5" pos:column="64">*<pos:position pos:line="5" pos:column="65"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="69"/></argument_list><argument_list pos:line="5" pos:column="66">(<argument><expr><ternary><condition><expr><name pos:line="5" pos:column="67">theCauseRep<pos:position pos:line="5" pos:column="78"/></name></expr> ?<pos:position pos:line="5" pos:column="80"/></condition><then pos:line="5" pos:column="80">
                                 <expr><call><name><name pos:line="6" pos:column="34">theCauseRep<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">-&gt;<pos:position pos:line="6" pos:column="50"/></operator><name pos:line="6" pos:column="47">raw<pos:position pos:line="6" pos:column="50"/></name></name><argument_list pos:line="6" pos:column="50">()<pos:position pos:line="6" pos:column="52"/></argument_list></call><operator pos:line="6" pos:column="52">.<pos:position pos:line="6" pos:column="53"/></operator><name pos:line="6" pos:column="53">header<pos:position pos:line="6" pos:column="59"/></name></expr> <pos:position pos:line="6" pos:column="60"/></then><else pos:line="6" pos:column="60">: <expr><call><name><name pos:line="6" pos:column="62">theVirginRep<pos:position pos:line="6" pos:column="74"/></name><operator pos:line="6" pos:column="74">.<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="75">raw<pos:position pos:line="6" pos:column="78"/></name></name><argument_list pos:line="6" pos:column="78">()<pos:position pos:line="6" pos:column="80"/></argument_list></call><operator pos:line="6" pos:column="80">.<pos:position pos:line="6" pos:column="81"/></operator><name pos:line="6" pos:column="81">header<pos:position pos:line="6" pos:column="87"/></name></expr></else></ternary></expr></argument>)<pos:position pos:line="6" pos:column="88"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="6" pos:column="89"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">Must<pos:position pos:line="7" pos:column="9"/></name><argument_list pos:line="7" pos:column="9">(<argument><expr><name pos:line="7" pos:column="10">request<pos:position pos:line="7" pos:column="17"/></name></expr></argument>)<pos:position pos:line="7" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="19"/></expr_stmt>
    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name><name pos:line="8" pos:column="9">request<pos:position pos:line="8" pos:column="16"/></name><operator pos:line="8" pos:column="16">-&gt;<pos:position pos:line="8" pos:column="21"/></operator><name pos:line="8" pos:column="18">auth_user_request<pos:position pos:line="8" pos:column="35"/></name></name> <operator pos:line="8" pos:column="36">!=<pos:position pos:line="8" pos:column="38"/></operator> <name pos:line="8" pos:column="39">NULL<pos:position pos:line="8" pos:column="43"/></name></expr>)<pos:position pos:line="8" pos:column="44"/></condition><then pos:line="8" pos:column="44"> <block pos:line="8" pos:column="45">{
        <if pos:line="9" pos:column="9">if <condition pos:line="9" pos:column="12">(<decl><type><name pos:line="9" pos:column="13">char<pos:position pos:line="9" pos:column="17"/></name> <specifier pos:line="9" pos:column="18">const<pos:position pos:line="9" pos:column="23"/></specifier> <modifier pos:line="9" pos:column="24">*<pos:position pos:line="9" pos:column="25"/></modifier></type><name pos:line="9" pos:column="25">name<pos:position pos:line="9" pos:column="29"/></name> <init pos:line="9" pos:column="30">= <expr><call><name><name pos:line="9" pos:column="32">request<pos:position pos:line="9" pos:column="39"/></name><operator pos:line="9" pos:column="39">-&gt;<pos:position pos:line="9" pos:column="44"/></operator><name pos:line="9" pos:column="41">auth_user_request<pos:position pos:line="9" pos:column="58"/></name><operator pos:line="9" pos:column="58">-&gt;<pos:position pos:line="9" pos:column="63"/></operator><name pos:line="9" pos:column="60">username<pos:position pos:line="9" pos:column="68"/></name></name><argument_list pos:line="9" pos:column="68">()<pos:position pos:line="9" pos:column="70"/></argument_list></call></expr></init></decl>)<pos:position pos:line="9" pos:column="71"/></condition><then pos:line="9" pos:column="71">
            <block type="pseudo"><return pos:line="10" pos:column="13">return <expr><call><name><name pos:line="10" pos:column="20">libecap<pos:position pos:line="10" pos:column="27"/></name><operator pos:line="10" pos:column="27">::<pos:position pos:line="10" pos:column="29"/></operator><name pos:line="10" pos:column="29">Area<pos:position pos:line="10" pos:column="33"/></name><operator pos:line="10" pos:column="33">::<pos:position pos:line="10" pos:column="35"/></operator><name pos:line="10" pos:column="35">FromTempBuffer<pos:position pos:line="10" pos:column="49"/></name></name><argument_list pos:line="10" pos:column="49">(<argument><expr><name pos:line="10" pos:column="50">name<pos:position pos:line="10" pos:column="54"/></name></expr></argument>, <argument><expr><call><name pos:line="10" pos:column="56">strlen<pos:position pos:line="10" pos:column="62"/></name><argument_list pos:line="10" pos:column="62">(<argument><expr><name pos:line="10" pos:column="63">name<pos:position pos:line="10" pos:column="67"/></name></expr></argument>)<pos:position pos:line="10" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="10" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="70"/></return></block></then>
        <elseif pos:line="11" pos:column="9">else <if pos:line="11" pos:column="14">if <condition pos:line="11" pos:column="17">(<expr><call><name><name pos:line="11" pos:column="18">request<pos:position pos:line="11" pos:column="25"/></name><operator pos:line="11" pos:column="25">-&gt;<pos:position pos:line="11" pos:column="30"/></operator><name pos:line="11" pos:column="27">extacl_user<pos:position pos:line="11" pos:column="38"/></name><operator pos:line="11" pos:column="38">.<pos:position pos:line="11" pos:column="39"/></operator><name pos:line="11" pos:column="39">size<pos:position pos:line="11" pos:column="43"/></name></name><argument_list pos:line="11" pos:column="43">()<pos:position pos:line="11" pos:column="45"/></argument_list></call> <operator pos:line="11" pos:column="46">&gt;<pos:position pos:line="11" pos:column="50"/></operator> <literal type="number" pos:line="11" pos:column="48">0<pos:position pos:line="11" pos:column="49"/></literal></expr>)<pos:position pos:line="11" pos:column="50"/></condition><then pos:line="11" pos:column="50">
            <block type="pseudo"><return pos:line="12" pos:column="13">return <expr><call><name><name pos:line="12" pos:column="20">libecap<pos:position pos:line="12" pos:column="27"/></name><operator pos:line="12" pos:column="27">::<pos:position pos:line="12" pos:column="29"/></operator><name pos:line="12" pos:column="29">Area<pos:position pos:line="12" pos:column="33"/></name><operator pos:line="12" pos:column="33">::<pos:position pos:line="12" pos:column="35"/></operator><name pos:line="12" pos:column="35">FromTempBuffer<pos:position pos:line="12" pos:column="49"/></name></name><argument_list pos:line="12" pos:column="49">(<argument><expr><call><name><name pos:line="12" pos:column="50">request<pos:position pos:line="12" pos:column="57"/></name><operator pos:line="12" pos:column="57">-&gt;<pos:position pos:line="12" pos:column="62"/></operator><name pos:line="12" pos:column="59">extacl_user<pos:position pos:line="12" pos:column="70"/></name><operator pos:line="12" pos:column="70">.<pos:position pos:line="12" pos:column="71"/></operator><name pos:line="12" pos:column="71">rawBuf<pos:position pos:line="12" pos:column="77"/></name></name><argument_list pos:line="12" pos:column="77">()<pos:position pos:line="12" pos:column="79"/></argument_list></call></expr></argument>,
                                                 <argument><expr><call><name><name pos:line="13" pos:column="50">request<pos:position pos:line="13" pos:column="57"/></name><operator pos:line="13" pos:column="57">-&gt;<pos:position pos:line="13" pos:column="62"/></operator><name pos:line="13" pos:column="59">extacl_user<pos:position pos:line="13" pos:column="70"/></name><operator pos:line="13" pos:column="70">.<pos:position pos:line="13" pos:column="71"/></operator><name pos:line="13" pos:column="71">size<pos:position pos:line="13" pos:column="75"/></name></name><argument_list pos:line="13" pos:column="75">()<pos:position pos:line="13" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="13" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="79"/></return></block></then></if></elseif></if>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>
<cpp:endif pos:line="15" pos:column="1">#<cpp:directive pos:line="15" pos:column="2">endif<pos:position pos:line="15" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="16" pos:column="5">return <expr><call><name><name pos:line="16" pos:column="12">libecap<pos:position pos:line="16" pos:column="19"/></name><operator pos:line="16" pos:column="19">::<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="21">Area<pos:position pos:line="16" pos:column="25"/></name></name><argument_list pos:line="16" pos:column="25">()<pos:position pos:line="16" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="28"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1380_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">LoadModule<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><specifier pos:line="2" pos:column="12">const<pos:position pos:line="2" pos:column="17"/></specifier> <name pos:line="2" pos:column="18">char<pos:position pos:line="2" pos:column="22"/></name> <modifier pos:line="2" pos:column="23">*<pos:position pos:line="2" pos:column="24"/></modifier></type><name pos:line="2" pos:column="24">fname<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">debugs<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><literal type="number" pos:line="4" pos:column="12">1<pos:position pos:line="4" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="4" pos:column="15">1<pos:position pos:line="4" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="18">"Loading Squid module from '"<pos:position pos:line="4" pos:column="47"/></literal> <operator pos:line="4" pos:column="48">&lt;&lt;<pos:position pos:line="4" pos:column="56"/></operator> <name pos:line="4" pos:column="51">fname<pos:position pos:line="4" pos:column="56"/></name> <operator pos:line="4" pos:column="57">&lt;&lt;<pos:position pos:line="4" pos:column="65"/></operator> <literal type="string" pos:line="4" pos:column="60">"'"<pos:position pos:line="4" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="65"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">LoadableModule<pos:position pos:line="6" pos:column="19"/></name> <modifier pos:line="6" pos:column="20">*<pos:position pos:line="6" pos:column="21"/></modifier></type><name pos:line="6" pos:column="21">m<pos:position pos:line="6" pos:column="22"/></name> <init pos:line="6" pos:column="23">= <expr><operator pos:line="6" pos:column="25">new<pos:position pos:line="6" pos:column="28"/></operator> <call><name pos:line="6" pos:column="29">LoadableModule<pos:position pos:line="6" pos:column="43"/></name><argument_list pos:line="6" pos:column="43">(<argument><expr><name pos:line="6" pos:column="44">fname<pos:position pos:line="6" pos:column="49"/></name></expr></argument>)<pos:position pos:line="6" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="6" pos:column="51"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="7" pos:column="5">m<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">-&gt;<pos:position pos:line="7" pos:column="11"/></operator><name pos:line="7" pos:column="8">load<pos:position pos:line="7" pos:column="12"/></name></name><argument_list pos:line="7" pos:column="12">()<pos:position pos:line="7" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="15"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">1<pos:position pos:line="8" pos:column="13"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="15">2<pos:position pos:line="8" pos:column="16"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="18">"Loaded Squid module from '"<pos:position pos:line="8" pos:column="46"/></literal> <operator pos:line="8" pos:column="47">&lt;&lt;<pos:position pos:line="8" pos:column="55"/></operator> <name pos:line="8" pos:column="50">fname<pos:position pos:line="8" pos:column="55"/></name> <operator pos:line="8" pos:column="56">&lt;&lt;<pos:position pos:line="8" pos:column="64"/></operator> <literal type="string" pos:line="8" pos:column="59">"'"<pos:position pos:line="8" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="64"/></expr_stmt>

    <comment type="line" pos:line="10" pos:column="5">//TODO: TheModules.push_back(m);</comment>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

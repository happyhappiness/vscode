<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2661_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">restoreCapabilities<pos:position pos:line="2" pos:column="20"/></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">bool<pos:position pos:line="2" pos:column="25"/></name></type> <name pos:line="2" pos:column="26">keep<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="31"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* NP: keep these two if-endif separate. Non-Linux work perfectly well without Linux syscap support. */</comment>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">USE_LIBCAP<pos:position pos:line="5" pos:column="15"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">cap_t<pos:position pos:line="6" pos:column="10"/></name></type> <name pos:line="6" pos:column="11">caps<pos:position pos:line="6" pos:column="15"/></name></decl>;<pos:position pos:line="6" pos:column="16"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">keep<pos:position pos:line="7" pos:column="13"/></name></expr>)<pos:position pos:line="7" pos:column="14"/></condition><then pos:line="7" pos:column="14">
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">caps<pos:position pos:line="8" pos:column="13"/></name> <operator pos:line="8" pos:column="14">=<pos:position pos:line="8" pos:column="15"/></operator> <call><name pos:line="8" pos:column="16">cap_get_proc<pos:position pos:line="8" pos:column="28"/></name><argument_list pos:line="8" pos:column="28">()<pos:position pos:line="8" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="31"/></expr_stmt></block></then>
    <else pos:line="9" pos:column="5">else
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">caps<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <call><name pos:line="10" pos:column="16">cap_init<pos:position pos:line="10" pos:column="24"/></name><argument_list pos:line="10" pos:column="24">()<pos:position pos:line="10" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt></block></else></if>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">caps<pos:position pos:line="11" pos:column="14"/></name></expr>)<pos:position pos:line="11" pos:column="15"/></condition><then pos:line="11" pos:column="15"> <block pos:line="11" pos:column="16">{
        <expr_stmt><expr><call><name><name pos:line="12" pos:column="9">Ip<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">::<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">Interceptor<pos:position pos:line="12" pos:column="24"/></name><operator pos:line="12" pos:column="24">.<pos:position pos:line="12" pos:column="25"/></operator><name pos:line="12" pos:column="25">StopTransparency<pos:position pos:line="12" pos:column="41"/></name></name><argument_list pos:line="12" pos:column="41">(<argument><expr><literal type="string" pos:line="12" pos:column="42">"Can't get current capabilities"<pos:position pos:line="12" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="76"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then> <else pos:line="13" pos:column="7">else <block pos:line="13" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="14" pos:column="9">int<pos:position pos:line="14" pos:column="12"/></name></type> <name pos:line="14" pos:column="13">ncaps<pos:position pos:line="14" pos:column="18"/></name> <init pos:line="14" pos:column="19">= <expr><literal type="number" pos:line="14" pos:column="21">0<pos:position pos:line="14" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="14" pos:column="23"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="15" pos:column="9">int<pos:position pos:line="15" pos:column="12"/></name></type> <name pos:line="15" pos:column="13">rc<pos:position pos:line="15" pos:column="15"/></name> <init pos:line="15" pos:column="16">= <expr><literal type="number" pos:line="15" pos:column="18">0<pos:position pos:line="15" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="20"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="16" pos:column="9">cap_value_t<pos:position pos:line="16" pos:column="20"/></name></type> <name><name pos:line="16" pos:column="21">cap_list<pos:position pos:line="16" pos:column="29"/></name><index pos:line="16" pos:column="29">[<expr><literal type="number" pos:line="16" pos:column="30">10<pos:position pos:line="16" pos:column="32"/></literal></expr>]<pos:position pos:line="16" pos:column="33"/></index></name></decl>;<pos:position pos:line="16" pos:column="34"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="17" pos:column="9">cap_list<pos:position pos:line="17" pos:column="17"/></name><index pos:line="17" pos:column="17">[<expr><name pos:line="17" pos:column="18">ncaps<pos:position pos:line="17" pos:column="23"/></name></expr>]<pos:position pos:line="17" pos:column="24"/></index></name> <operator pos:line="17" pos:column="25">=<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="27">CAP_NET_BIND_SERVICE<pos:position pos:line="17" pos:column="47"/></name></expr>;<pos:position pos:line="17" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="18" pos:column="9">++<pos:position pos:line="18" pos:column="11"/></operator><name pos:line="18" pos:column="11">ncaps<pos:position pos:line="18" pos:column="16"/></name></expr>;<pos:position pos:line="18" pos:column="17"/></expr_stmt>
        <if pos:line="19" pos:column="9">if <condition pos:line="19" pos:column="12">(<expr><call><name><name pos:line="19" pos:column="13">Ip<pos:position pos:line="19" pos:column="15"/></name><operator pos:line="19" pos:column="15">::<pos:position pos:line="19" pos:column="17"/></operator><name pos:line="19" pos:column="17">Interceptor<pos:position pos:line="19" pos:column="28"/></name><operator pos:line="19" pos:column="28">.<pos:position pos:line="19" pos:column="29"/></operator><name pos:line="19" pos:column="29">TransparentActive<pos:position pos:line="19" pos:column="46"/></name></name><argument_list pos:line="19" pos:column="46">()<pos:position pos:line="19" pos:column="48"/></argument_list></call> <operator pos:line="19" pos:column="49">||<pos:position pos:line="19" pos:column="51"/></operator>
                <call><name><name pos:line="20" pos:column="17">Ip<pos:position pos:line="20" pos:column="19"/></name><operator pos:line="20" pos:column="19">::<pos:position pos:line="20" pos:column="21"/></operator><name pos:line="20" pos:column="21">Qos<pos:position pos:line="20" pos:column="24"/></name><operator pos:line="20" pos:column="24">::<pos:position pos:line="20" pos:column="26"/></operator><name pos:line="20" pos:column="26">TheConfig<pos:position pos:line="20" pos:column="35"/></name><operator pos:line="20" pos:column="35">.<pos:position pos:line="20" pos:column="36"/></operator><name pos:line="20" pos:column="36">isHitNfmarkActive<pos:position pos:line="20" pos:column="53"/></name></name><argument_list pos:line="20" pos:column="53">()<pos:position pos:line="20" pos:column="55"/></argument_list></call> <operator pos:line="20" pos:column="56">||<pos:position pos:line="20" pos:column="58"/></operator>
                <call><name><name pos:line="21" pos:column="17">Ip<pos:position pos:line="21" pos:column="19"/></name><operator pos:line="21" pos:column="19">::<pos:position pos:line="21" pos:column="21"/></operator><name pos:line="21" pos:column="21">Qos<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">::<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">TheConfig<pos:position pos:line="21" pos:column="35"/></name><operator pos:line="21" pos:column="35">.<pos:position pos:line="21" pos:column="36"/></operator><name pos:line="21" pos:column="36">isAclNfmarkActive<pos:position pos:line="21" pos:column="53"/></name></name><argument_list pos:line="21" pos:column="53">()<pos:position pos:line="21" pos:column="55"/></argument_list></call> <operator pos:line="21" pos:column="56">||<pos:position pos:line="21" pos:column="58"/></operator>
                <call><name><name pos:line="22" pos:column="17">Ip<pos:position pos:line="22" pos:column="19"/></name><operator pos:line="22" pos:column="19">::<pos:position pos:line="22" pos:column="21"/></operator><name pos:line="22" pos:column="21">Qos<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">::<pos:position pos:line="22" pos:column="26"/></operator><name pos:line="22" pos:column="26">TheConfig<pos:position pos:line="22" pos:column="35"/></name><operator pos:line="22" pos:column="35">.<pos:position pos:line="22" pos:column="36"/></operator><name pos:line="22" pos:column="36">isAclTosActive<pos:position pos:line="22" pos:column="50"/></name></name><argument_list pos:line="22" pos:column="50">()<pos:position pos:line="22" pos:column="52"/></argument_list></call></expr>)<pos:position pos:line="22" pos:column="53"/></condition><then pos:line="22" pos:column="53"> <block pos:line="22" pos:column="54">{
            <expr_stmt><expr><name><name pos:line="23" pos:column="13">cap_list<pos:position pos:line="23" pos:column="21"/></name><index pos:line="23" pos:column="21">[<expr><name pos:line="23" pos:column="22">ncaps<pos:position pos:line="23" pos:column="27"/></name></expr>]<pos:position pos:line="23" pos:column="28"/></index></name> <operator pos:line="23" pos:column="29">=<pos:position pos:line="23" pos:column="30"/></operator> <name pos:line="23" pos:column="31">CAP_NET_ADMIN<pos:position pos:line="23" pos:column="44"/></name></expr>;<pos:position pos:line="23" pos:column="45"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="24" pos:column="13">++<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="15">ncaps<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>

        <expr_stmt><expr><call><name pos:line="27" pos:column="9">cap_clear_flag<pos:position pos:line="27" pos:column="23"/></name><argument_list pos:line="27" pos:column="23">(<argument><expr><name pos:line="27" pos:column="24">caps<pos:position pos:line="27" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="27" pos:column="30">CAP_EFFECTIVE<pos:position pos:line="27" pos:column="43"/></name></expr></argument>)<pos:position pos:line="27" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">rc<pos:position pos:line="28" pos:column="11"/></name> <operator pos:line="28" pos:column="12">|=<pos:position pos:line="28" pos:column="14"/></operator> <call><name pos:line="28" pos:column="15">cap_set_flag<pos:position pos:line="28" pos:column="27"/></name><argument_list pos:line="28" pos:column="27">(<argument><expr><name pos:line="28" pos:column="28">caps<pos:position pos:line="28" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="34">CAP_EFFECTIVE<pos:position pos:line="28" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="49">ncaps<pos:position pos:line="28" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">cap_list<pos:position pos:line="28" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="66">CAP_SET<pos:position pos:line="28" pos:column="73"/></name></expr></argument>)<pos:position pos:line="28" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="75"/></expr_stmt>
        <expr_stmt><expr><name pos:line="29" pos:column="9">rc<pos:position pos:line="29" pos:column="11"/></name> <operator pos:line="29" pos:column="12">|=<pos:position pos:line="29" pos:column="14"/></operator> <call><name pos:line="29" pos:column="15">cap_set_flag<pos:position pos:line="29" pos:column="27"/></name><argument_list pos:line="29" pos:column="27">(<argument><expr><name pos:line="29" pos:column="28">caps<pos:position pos:line="29" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="34">CAP_PERMITTED<pos:position pos:line="29" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="49">ncaps<pos:position pos:line="29" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="56">cap_list<pos:position pos:line="29" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="66">CAP_SET<pos:position pos:line="29" pos:column="73"/></name></expr></argument>)<pos:position pos:line="29" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="75"/></expr_stmt>

        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name pos:line="31" pos:column="13">rc<pos:position pos:line="31" pos:column="15"/></name> <operator pos:line="31" pos:column="16">||<pos:position pos:line="31" pos:column="18"/></operator> <call><name pos:line="31" pos:column="19">cap_set_proc<pos:position pos:line="31" pos:column="31"/></name><argument_list pos:line="31" pos:column="31">(<argument><expr><name pos:line="31" pos:column="32">caps<pos:position pos:line="31" pos:column="36"/></name></expr></argument>)<pos:position pos:line="31" pos:column="37"/></argument_list></call> <operator pos:line="31" pos:column="38">!=<pos:position pos:line="31" pos:column="40"/></operator> <literal type="number" pos:line="31" pos:column="41">0<pos:position pos:line="31" pos:column="42"/></literal></expr>)<pos:position pos:line="31" pos:column="43"/></condition><then pos:line="31" pos:column="43"> <block pos:line="31" pos:column="44">{
            <expr_stmt><expr><call><name><name pos:line="32" pos:column="13">Ip<pos:position pos:line="32" pos:column="15"/></name><operator pos:line="32" pos:column="15">::<pos:position pos:line="32" pos:column="17"/></operator><name pos:line="32" pos:column="17">Interceptor<pos:position pos:line="32" pos:column="28"/></name><operator pos:line="32" pos:column="28">.<pos:position pos:line="32" pos:column="29"/></operator><name pos:line="32" pos:column="29">StopTransparency<pos:position pos:line="32" pos:column="45"/></name></name><argument_list pos:line="32" pos:column="45">(<argument><expr><literal type="string" pos:line="32" pos:column="46">"Error enabling needed capabilities."<pos:position pos:line="32" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="85"/></expr_stmt>
        }<pos:position pos:line="33" pos:column="10"/></block></then></if>
        <expr_stmt><expr><call><name pos:line="34" pos:column="9">cap_free<pos:position pos:line="34" pos:column="17"/></name><argument_list pos:line="34" pos:column="17">(<argument><expr><name pos:line="34" pos:column="18">caps<pos:position pos:line="34" pos:column="22"/></name></expr></argument>)<pos:position pos:line="34" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>
<cpp:elif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">elif<pos:position pos:line="36" pos:column="6"/></cpp:directive> <expr><name pos:line="36" pos:column="7">_SQUID_LINUX_<pos:position pos:line="36" pos:column="20"/></name></expr></cpp:elif>
    <expr_stmt><expr><call><name><name pos:line="37" pos:column="5">Ip<pos:position pos:line="37" pos:column="7"/></name><operator pos:line="37" pos:column="7">::<pos:position pos:line="37" pos:column="9"/></operator><name pos:line="37" pos:column="9">Interceptor<pos:position pos:line="37" pos:column="20"/></name><operator pos:line="37" pos:column="20">.<pos:position pos:line="37" pos:column="21"/></operator><name pos:line="37" pos:column="21">StopTransparency<pos:position pos:line="37" pos:column="37"/></name></name><argument_list pos:line="37" pos:column="37">(<argument><expr><literal type="string" pos:line="37" pos:column="38">"Missing needed capability support."<pos:position pos:line="37" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="76"/></expr_stmt>
<cpp:endif pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">endif<pos:position pos:line="38" pos:column="7"/></cpp:directive></cpp:endif> <comment type="block" pos:line="38" pos:column="8">/* HAVE_SYS_CAPABILITY_H */</comment>
}<pos:position pos:line="39" pos:column="2"/></block></function></unit>

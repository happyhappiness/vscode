<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_465_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">int<pos:position pos:line="1" pos:column="11"/></name></type> <name pos:line="1" pos:column="12">berEncodeLoginData<pos:position pos:line="1" pos:column="30"/></name><parameter_list pos:line="1" pos:column="30">(
    <parameter><decl><type><name><name pos:line="2" pos:column="5">struct<pos:position pos:line="2" pos:column="11"/></name> <name pos:line="2" pos:column="12">berval<pos:position pos:line="2" pos:column="18"/></name></name> <modifier pos:line="2" pos:column="19">*<pos:position pos:line="2" pos:column="20"/></modifier><modifier pos:line="2" pos:column="20">*<pos:position pos:line="2" pos:column="21"/></modifier></type><name pos:line="2" pos:column="21">requestBV<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name>     <modifier pos:line="3" pos:column="14">*<pos:position pos:line="3" pos:column="15"/></modifier></type><name pos:line="3" pos:column="15">objectDN<pos:position pos:line="3" pos:column="23"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="4" pos:column="5">unsigned<pos:position pos:line="4" pos:column="13"/></name> <name pos:line="4" pos:column="14">int<pos:position pos:line="4" pos:column="17"/></name></type>  <name pos:line="4" pos:column="19">methodIDLen<pos:position pos:line="4" pos:column="30"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="5" pos:column="5">unsigned<pos:position pos:line="5" pos:column="13"/></name> <name pos:line="5" pos:column="14">int<pos:position pos:line="5" pos:column="17"/></name> <modifier pos:line="5" pos:column="18">*<pos:position pos:line="5" pos:column="19"/></modifier></type><name pos:line="5" pos:column="19">methodID<pos:position pos:line="5" pos:column="27"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name>     <modifier pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></modifier></type><name pos:line="6" pos:column="15">tag<pos:position pos:line="6" pos:column="18"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="7" pos:column="5">size_t<pos:position pos:line="7" pos:column="11"/></name></type>   <name pos:line="7" pos:column="14">putDataLen<pos:position pos:line="7" pos:column="24"/></name></decl></parameter>,
    <parameter><decl><type><name pos:line="8" pos:column="5">void<pos:position pos:line="8" pos:column="9"/></name>     <modifier pos:line="8" pos:column="14">*<pos:position pos:line="8" pos:column="15"/></modifier></type><name pos:line="8" pos:column="15">putData<pos:position pos:line="8" pos:column="22"/></name></decl></parameter>)<pos:position pos:line="8" pos:column="23"/></parameter_list>
<block pos:line="9" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">int<pos:position pos:line="10" pos:column="8"/></name></type> <name pos:line="10" pos:column="9">err<pos:position pos:line="10" pos:column="12"/></name> <init pos:line="10" pos:column="13">= <expr><literal type="number" pos:line="10" pos:column="15">0<pos:position pos:line="10" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="10" pos:column="17"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">BerElement<pos:position pos:line="11" pos:column="15"/></name> <modifier pos:line="11" pos:column="16">*<pos:position pos:line="11" pos:column="17"/></modifier></type><name pos:line="11" pos:column="17">requestBer<pos:position pos:line="11" pos:column="27"/></name> <init pos:line="11" pos:column="28">= <expr><name pos:line="11" pos:column="30">NULL<pos:position pos:line="11" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="35"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="13" pos:column="5">unsigned<pos:position pos:line="13" pos:column="13"/></name> <name pos:line="13" pos:column="14">int<pos:position pos:line="13" pos:column="17"/></name></type> <name pos:line="13" pos:column="18">i<pos:position pos:line="13" pos:column="19"/></name></decl>;<pos:position pos:line="13" pos:column="20"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">unsigned<pos:position pos:line="14" pos:column="13"/></name> <name pos:line="14" pos:column="14">int<pos:position pos:line="14" pos:column="17"/></name></type> <name pos:line="14" pos:column="18">elemCnt<pos:position pos:line="14" pos:column="25"/></name> <init pos:line="14" pos:column="26">= <expr><name pos:line="14" pos:column="28">methodIDLen<pos:position pos:line="14" pos:column="39"/></name> <operator pos:line="14" pos:column="40">/<pos:position pos:line="14" pos:column="41"/></operator> sizeof<operator pos:line="14" pos:column="48">(<pos:position pos:line="14" pos:column="49"/></operator><name pos:line="14" pos:column="49">unsigned<pos:position pos:line="14" pos:column="57"/></name> <name pos:line="14" pos:column="58">int<pos:position pos:line="14" pos:column="61"/></name><operator pos:line="14" pos:column="61">)<pos:position pos:line="14" pos:column="62"/></operator></expr></init></decl>;<pos:position pos:line="14" pos:column="63"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">char<pos:position pos:line="16" pos:column="9"/></name>	<modifier pos:line="16" pos:column="17">*<pos:position pos:line="16" pos:column="18"/></modifier></type><name pos:line="16" pos:column="18">utf8ObjPtr<pos:position pos:line="16" pos:column="28"/></name><init pos:line="16" pos:column="28">=<expr><name pos:line="16" pos:column="29">NULL<pos:position pos:line="16" pos:column="33"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="34"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type>     <name pos:line="17" pos:column="13">utf8ObjSize<pos:position pos:line="17" pos:column="24"/></name> <init pos:line="17" pos:column="25">= <expr><literal type="number" pos:line="17" pos:column="27">0<pos:position pos:line="17" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="29"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="19" pos:column="5">char<pos:position pos:line="19" pos:column="9"/></name>    <modifier pos:line="19" pos:column="13">*<pos:position pos:line="19" pos:column="14"/></modifier></type><name pos:line="19" pos:column="14">utf8TagPtr<pos:position pos:line="19" pos:column="24"/></name> <init pos:line="19" pos:column="25">= <expr><name pos:line="19" pos:column="27">NULL<pos:position pos:line="19" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="19" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="20" pos:column="5">int<pos:position pos:line="20" pos:column="8"/></name></type>     <name pos:line="20" pos:column="13">utf8TagSize<pos:position pos:line="20" pos:column="24"/></name> <init pos:line="20" pos:column="25">= <expr><literal type="number" pos:line="20" pos:column="27">0<pos:position pos:line="20" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="20" pos:column="29"/></decl_stmt>

    <expr_stmt><expr><name pos:line="22" pos:column="5">utf8ObjPtr<pos:position pos:line="22" pos:column="15"/></name> <operator pos:line="22" pos:column="16">=<pos:position pos:line="22" pos:column="17"/></operator> <name pos:line="22" pos:column="18">objectDN<pos:position pos:line="22" pos:column="26"/></name></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name pos:line="23" pos:column="5">utf8ObjSize<pos:position pos:line="23" pos:column="16"/></name> <operator pos:line="23" pos:column="17">=<pos:position pos:line="23" pos:column="18"/></operator> <call><name pos:line="23" pos:column="19">strlen<pos:position pos:line="23" pos:column="25"/></name><argument_list pos:line="23" pos:column="25">(<argument><expr><name pos:line="23" pos:column="26">utf8ObjPtr<pos:position pos:line="23" pos:column="36"/></name></expr></argument>)<pos:position pos:line="23" pos:column="37"/></argument_list></call><operator pos:line="23" pos:column="37">+<pos:position pos:line="23" pos:column="38"/></operator><literal type="number" pos:line="23" pos:column="38">1<pos:position pos:line="23" pos:column="39"/></literal></expr>;<pos:position pos:line="23" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name pos:line="25" pos:column="5">utf8TagPtr<pos:position pos:line="25" pos:column="15"/></name> <operator pos:line="25" pos:column="16">=<pos:position pos:line="25" pos:column="17"/></operator> <name pos:line="25" pos:column="18">tag<pos:position pos:line="25" pos:column="21"/></name></expr>;<pos:position pos:line="25" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name pos:line="26" pos:column="5">utf8TagSize<pos:position pos:line="26" pos:column="16"/></name> <operator pos:line="26" pos:column="17">=<pos:position pos:line="26" pos:column="18"/></operator> <call><name pos:line="26" pos:column="19">strlen<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name pos:line="26" pos:column="26">utf8TagPtr<pos:position pos:line="26" pos:column="36"/></name></expr></argument>)<pos:position pos:line="26" pos:column="37"/></argument_list></call><operator pos:line="26" pos:column="37">+<pos:position pos:line="26" pos:column="38"/></operator><literal type="number" pos:line="26" pos:column="38">1<pos:position pos:line="26" pos:column="39"/></literal></expr>;<pos:position pos:line="26" pos:column="40"/></expr_stmt>

    <comment type="block" pos:line="28" pos:column="5">/* Allocate a BerElement for the request parameters. */</comment>
    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><operator pos:line="29" pos:column="9">(<pos:position pos:line="29" pos:column="10"/></operator><name pos:line="29" pos:column="10">requestBer<pos:position pos:line="29" pos:column="20"/></name> <operator pos:line="29" pos:column="21">=<pos:position pos:line="29" pos:column="22"/></operator> <call><name pos:line="29" pos:column="23">ber_alloc<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">()<pos:position pos:line="29" pos:column="34"/></argument_list></call><operator pos:line="29" pos:column="34">)<pos:position pos:line="29" pos:column="35"/></operator> <operator pos:line="29" pos:column="36">==<pos:position pos:line="29" pos:column="38"/></operator> <name pos:line="29" pos:column="39">NULL<pos:position pos:line="29" pos:column="43"/></name></expr>)<pos:position pos:line="29" pos:column="44"/></condition><then pos:line="29" pos:column="44"> <block pos:line="29" pos:column="45">{
        <expr_stmt><expr><name pos:line="30" pos:column="9">err<pos:position pos:line="30" pos:column="12"/></name> <operator pos:line="30" pos:column="13">=<pos:position pos:line="30" pos:column="14"/></operator> <name pos:line="30" pos:column="15">LDAP_ENCODING_ERROR<pos:position pos:line="30" pos:column="34"/></name></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>
        <goto pos:line="31" pos:column="9">goto <name pos:line="31" pos:column="14">Cleanup<pos:position pos:line="31" pos:column="21"/></name>;<pos:position pos:line="31" pos:column="22"/></goto>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="34" pos:column="5">/* BER encode the NMAS Version and the objectDN */</comment>
    <expr_stmt><expr><name pos:line="35" pos:column="5">err<pos:position pos:line="35" pos:column="8"/></name> <operator pos:line="35" pos:column="9">=<pos:position pos:line="35" pos:column="10"/></operator> <ternary><condition><expr><operator pos:line="35" pos:column="11">(<pos:position pos:line="35" pos:column="12"/></operator><call><name pos:line="35" pos:column="12">ber_printf<pos:position pos:line="35" pos:column="22"/></name><argument_list pos:line="35" pos:column="22">(<argument><expr><name pos:line="35" pos:column="23">requestBer<pos:position pos:line="35" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="35">"{io"<pos:position pos:line="35" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="35" pos:column="42">NMAS_LDAP_EXT_VERSION<pos:position pos:line="35" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="65">utf8ObjPtr<pos:position pos:line="35" pos:column="75"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="77">utf8ObjSize<pos:position pos:line="35" pos:column="88"/></name></expr></argument>)<pos:position pos:line="35" pos:column="89"/></argument_list></call> <operator pos:line="35" pos:column="90">&lt;<pos:position pos:line="35" pos:column="94"/></operator> <literal type="number" pos:line="35" pos:column="92">0<pos:position pos:line="35" pos:column="93"/></literal><operator pos:line="35" pos:column="93">)<pos:position pos:line="35" pos:column="94"/></operator></expr> ?<pos:position pos:line="35" pos:column="96"/></condition><then pos:line="35" pos:column="96"> <expr><name pos:line="35" pos:column="97">LDAP_ENCODING_ERROR<pos:position pos:line="35" pos:column="116"/></name></expr> <pos:position pos:line="35" pos:column="117"/></then><else pos:line="35" pos:column="117">: <expr><literal type="number" pos:line="35" pos:column="119">0<pos:position pos:line="35" pos:column="120"/></literal></expr></else></ternary></expr>;<pos:position pos:line="35" pos:column="121"/></expr_stmt>

    <comment type="block" pos:line="37" pos:column="5">/* BER encode the MethodID Length and value */</comment>
    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><operator pos:line="38" pos:column="9">!<pos:position pos:line="38" pos:column="10"/></operator><name pos:line="38" pos:column="10">err<pos:position pos:line="38" pos:column="13"/></name></expr>)<pos:position pos:line="38" pos:column="14"/></condition><then pos:line="38" pos:column="14"> <block pos:line="38" pos:column="15">{
        <expr_stmt><expr><name pos:line="39" pos:column="9">err<pos:position pos:line="39" pos:column="12"/></name> <operator pos:line="39" pos:column="13">=<pos:position pos:line="39" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="39" pos:column="15">(<pos:position pos:line="39" pos:column="16"/></operator><call><name pos:line="39" pos:column="16">ber_printf<pos:position pos:line="39" pos:column="26"/></name><argument_list pos:line="39" pos:column="26">(<argument><expr><name pos:line="39" pos:column="27">requestBer<pos:position pos:line="39" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="39">"{i{"<pos:position pos:line="39" pos:column="44"/></literal></expr></argument>, <argument><expr><name pos:line="39" pos:column="46">methodIDLen<pos:position pos:line="39" pos:column="57"/></name></expr></argument>)<pos:position pos:line="39" pos:column="58"/></argument_list></call> <operator pos:line="39" pos:column="59">&lt;<pos:position pos:line="39" pos:column="63"/></operator> <literal type="number" pos:line="39" pos:column="61">0<pos:position pos:line="39" pos:column="62"/></literal><operator pos:line="39" pos:column="62">)<pos:position pos:line="39" pos:column="63"/></operator></expr> ?<pos:position pos:line="39" pos:column="65"/></condition><then pos:line="39" pos:column="65"> <expr><name pos:line="39" pos:column="66">LDAP_ENCODING_ERROR<pos:position pos:line="39" pos:column="85"/></name></expr> <pos:position pos:line="39" pos:column="86"/></then><else pos:line="39" pos:column="86">: <expr><literal type="number" pos:line="39" pos:column="88">0<pos:position pos:line="39" pos:column="89"/></literal></expr></else></ternary></expr>;<pos:position pos:line="39" pos:column="90"/></expr_stmt>
    }<pos:position pos:line="40" pos:column="6"/></block></then></if>

    <for pos:line="42" pos:column="5">for <control pos:line="42" pos:column="9">(<init><expr><name pos:line="42" pos:column="10">i<pos:position pos:line="42" pos:column="11"/></name> <operator pos:line="42" pos:column="12">=<pos:position pos:line="42" pos:column="13"/></operator> <literal type="number" pos:line="42" pos:column="14">0<pos:position pos:line="42" pos:column="15"/></literal></expr>;<pos:position pos:line="42" pos:column="16"/></init> <condition><expr><operator pos:line="42" pos:column="17">!<pos:position pos:line="42" pos:column="18"/></operator><name pos:line="42" pos:column="18">err<pos:position pos:line="42" pos:column="21"/></name> <operator pos:line="42" pos:column="22">&amp;&amp;<pos:position pos:line="42" pos:column="32"/></operator> <name pos:line="42" pos:column="25">i<pos:position pos:line="42" pos:column="26"/></name> <operator pos:line="42" pos:column="27">&lt;<pos:position pos:line="42" pos:column="31"/></operator> <name pos:line="42" pos:column="29">elemCnt<pos:position pos:line="42" pos:column="36"/></name></expr>;<pos:position pos:line="42" pos:column="37"/></condition> <incr><expr><name pos:line="42" pos:column="38">i<pos:position pos:line="42" pos:column="39"/></name><operator pos:line="42" pos:column="39">++<pos:position pos:line="42" pos:column="41"/></operator></expr></incr>)<pos:position pos:line="42" pos:column="42"/></control> <block pos:line="42" pos:column="43">{
        <expr_stmt><expr><name pos:line="43" pos:column="9">err<pos:position pos:line="43" pos:column="12"/></name> <operator pos:line="43" pos:column="13">=<pos:position pos:line="43" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="43" pos:column="15">(<pos:position pos:line="43" pos:column="16"/></operator><call><name pos:line="43" pos:column="16">ber_printf<pos:position pos:line="43" pos:column="26"/></name><argument_list pos:line="43" pos:column="26">(<argument><expr><name pos:line="43" pos:column="27">requestBer<pos:position pos:line="43" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="39">"i"<pos:position pos:line="43" pos:column="42"/></literal></expr></argument>, <argument><expr><name><name pos:line="43" pos:column="44">methodID<pos:position pos:line="43" pos:column="52"/></name><index pos:line="43" pos:column="52">[<expr><name pos:line="43" pos:column="53">i<pos:position pos:line="43" pos:column="54"/></name></expr>]<pos:position pos:line="43" pos:column="55"/></index></name></expr></argument>)<pos:position pos:line="43" pos:column="56"/></argument_list></call> <operator pos:line="43" pos:column="57">&lt;<pos:position pos:line="43" pos:column="61"/></operator> <literal type="number" pos:line="43" pos:column="59">0<pos:position pos:line="43" pos:column="60"/></literal><operator pos:line="43" pos:column="60">)<pos:position pos:line="43" pos:column="61"/></operator></expr> ?<pos:position pos:line="43" pos:column="63"/></condition><then pos:line="43" pos:column="63"> <expr><name pos:line="43" pos:column="64">LDAP_ENCODING_ERROR<pos:position pos:line="43" pos:column="83"/></name></expr> <pos:position pos:line="43" pos:column="84"/></then><else pos:line="43" pos:column="84">: <expr><literal type="number" pos:line="43" pos:column="86">0<pos:position pos:line="43" pos:column="87"/></literal></expr></else></ternary></expr>;<pos:position pos:line="43" pos:column="88"/></expr_stmt>
    }<pos:position pos:line="44" pos:column="6"/></block></for>

    <if pos:line="46" pos:column="5">if <condition pos:line="46" pos:column="8">(<expr><operator pos:line="46" pos:column="9">!<pos:position pos:line="46" pos:column="10"/></operator><name pos:line="46" pos:column="10">err<pos:position pos:line="46" pos:column="13"/></name></expr>)<pos:position pos:line="46" pos:column="14"/></condition><then pos:line="46" pos:column="14"> <block pos:line="46" pos:column="15">{
        <expr_stmt><expr><name pos:line="47" pos:column="9">err<pos:position pos:line="47" pos:column="12"/></name> <operator pos:line="47" pos:column="13">=<pos:position pos:line="47" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="47" pos:column="15">(<pos:position pos:line="47" pos:column="16"/></operator><call><name pos:line="47" pos:column="16">ber_printf<pos:position pos:line="47" pos:column="26"/></name><argument_list pos:line="47" pos:column="26">(<argument><expr><name pos:line="47" pos:column="27">requestBer<pos:position pos:line="47" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="47" pos:column="39">"}}"<pos:position pos:line="47" pos:column="43"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="47" pos:column="45">0<pos:position pos:line="47" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="47" pos:column="47"/></argument_list></call> <operator pos:line="47" pos:column="48">&lt;<pos:position pos:line="47" pos:column="52"/></operator> <literal type="number" pos:line="47" pos:column="50">0<pos:position pos:line="47" pos:column="51"/></literal><operator pos:line="47" pos:column="51">)<pos:position pos:line="47" pos:column="52"/></operator></expr> ?<pos:position pos:line="47" pos:column="54"/></condition><then pos:line="47" pos:column="54"> <expr><name pos:line="47" pos:column="55">LDAP_ENCODING_ERROR<pos:position pos:line="47" pos:column="74"/></name></expr> <pos:position pos:line="47" pos:column="75"/></then><else pos:line="47" pos:column="75">: <expr><literal type="number" pos:line="47" pos:column="77">0<pos:position pos:line="47" pos:column="78"/></literal></expr></else></ternary></expr>;<pos:position pos:line="47" pos:column="79"/></expr_stmt>
    }<pos:position pos:line="48" pos:column="6"/></block></then></if>

    <if pos:line="50" pos:column="5">if <condition pos:line="50" pos:column="8">(<expr><name pos:line="50" pos:column="9">putData<pos:position pos:line="50" pos:column="16"/></name></expr>)<pos:position pos:line="50" pos:column="17"/></condition><then pos:line="50" pos:column="17"> <block pos:line="50" pos:column="18">{
        <comment type="block" pos:line="51" pos:column="9">/* BER Encode the the tag and data */</comment>
        <expr_stmt><expr><name pos:line="52" pos:column="9">err<pos:position pos:line="52" pos:column="12"/></name> <operator pos:line="52" pos:column="13">=<pos:position pos:line="52" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="52" pos:column="15">(<pos:position pos:line="52" pos:column="16"/></operator><call><name pos:line="52" pos:column="16">ber_printf<pos:position pos:line="52" pos:column="26"/></name><argument_list pos:line="52" pos:column="26">(<argument><expr><name pos:line="52" pos:column="27">requestBer<pos:position pos:line="52" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="39">"oio}"<pos:position pos:line="52" pos:column="45"/></literal></expr></argument>, <argument><expr><name pos:line="52" pos:column="47">utf8TagPtr<pos:position pos:line="52" pos:column="57"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="59">utf8TagSize<pos:position pos:line="52" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="72">putDataLen<pos:position pos:line="52" pos:column="82"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="84">putData<pos:position pos:line="52" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="52" pos:column="93">putDataLen<pos:position pos:line="52" pos:column="103"/></name></expr></argument>)<pos:position pos:line="52" pos:column="104"/></argument_list></call> <operator pos:line="52" pos:column="105">&lt;<pos:position pos:line="52" pos:column="109"/></operator> <literal type="number" pos:line="52" pos:column="107">0<pos:position pos:line="52" pos:column="108"/></literal><operator pos:line="52" pos:column="108">)<pos:position pos:line="52" pos:column="109"/></operator></expr> ?<pos:position pos:line="52" pos:column="111"/></condition><then pos:line="52" pos:column="111"> <expr><name pos:line="52" pos:column="112">LDAP_ENCODING_ERROR<pos:position pos:line="52" pos:column="131"/></name></expr> <pos:position pos:line="52" pos:column="132"/></then><else pos:line="52" pos:column="132">: <expr><literal type="number" pos:line="52" pos:column="134">0<pos:position pos:line="52" pos:column="135"/></literal></expr></else></ternary></expr>;<pos:position pos:line="52" pos:column="136"/></expr_stmt>
    }<pos:position pos:line="53" pos:column="6"/></block></then> <else pos:line="53" pos:column="7">else <block pos:line="53" pos:column="12">{
        <comment type="block" pos:line="54" pos:column="9">/* BER Encode the the tag */</comment>
        <expr_stmt><expr><name pos:line="55" pos:column="9">err<pos:position pos:line="55" pos:column="12"/></name> <operator pos:line="55" pos:column="13">=<pos:position pos:line="55" pos:column="14"/></operator> <ternary><condition><expr><operator pos:line="55" pos:column="15">(<pos:position pos:line="55" pos:column="16"/></operator><call><name pos:line="55" pos:column="16">ber_printf<pos:position pos:line="55" pos:column="26"/></name><argument_list pos:line="55" pos:column="26">(<argument><expr><name pos:line="55" pos:column="27">requestBer<pos:position pos:line="55" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="55" pos:column="39">"o}"<pos:position pos:line="55" pos:column="43"/></literal></expr></argument>, <argument><expr><name pos:line="55" pos:column="45">utf8TagPtr<pos:position pos:line="55" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="55" pos:column="57">utf8TagSize<pos:position pos:line="55" pos:column="68"/></name></expr></argument>)<pos:position pos:line="55" pos:column="69"/></argument_list></call> <operator pos:line="55" pos:column="70">&lt;<pos:position pos:line="55" pos:column="74"/></operator> <literal type="number" pos:line="55" pos:column="72">0<pos:position pos:line="55" pos:column="73"/></literal><operator pos:line="55" pos:column="73">)<pos:position pos:line="55" pos:column="74"/></operator></expr> ?<pos:position pos:line="55" pos:column="76"/></condition><then pos:line="55" pos:column="76"> <expr><name pos:line="55" pos:column="77">LDAP_ENCODING_ERROR<pos:position pos:line="55" pos:column="96"/></name></expr> <pos:position pos:line="55" pos:column="97"/></then><else pos:line="55" pos:column="97">: <expr><literal type="number" pos:line="55" pos:column="99">0<pos:position pos:line="55" pos:column="100"/></literal></expr></else></ternary></expr>;<pos:position pos:line="55" pos:column="101"/></expr_stmt>
    }<pos:position pos:line="56" pos:column="6"/></block></else></if>

    <if pos:line="58" pos:column="5">if <condition pos:line="58" pos:column="8">(<expr><name pos:line="58" pos:column="9">err<pos:position pos:line="58" pos:column="12"/></name></expr>)<pos:position pos:line="58" pos:column="13"/></condition><then pos:line="58" pos:column="13"> <block pos:line="58" pos:column="14">{
        <goto pos:line="59" pos:column="9">goto <name pos:line="59" pos:column="14">Cleanup<pos:position pos:line="59" pos:column="21"/></name>;<pos:position pos:line="59" pos:column="22"/></goto>
    }<pos:position pos:line="60" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="62" pos:column="5">/* Convert the BER we just built to a berval that we'll send with the extended request. */</comment>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><call><name pos:line="63" pos:column="9">ber_flatten<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><name pos:line="63" pos:column="21">requestBer<pos:position pos:line="63" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="63" pos:column="33">requestBV<pos:position pos:line="63" pos:column="42"/></name></expr></argument>)<pos:position pos:line="63" pos:column="43"/></argument_list></call> <operator pos:line="63" pos:column="44">==<pos:position pos:line="63" pos:column="46"/></operator> <name pos:line="63" pos:column="47">LBER_ERROR<pos:position pos:line="63" pos:column="57"/></name></expr>)<pos:position pos:line="63" pos:column="58"/></condition><then pos:line="63" pos:column="58"> <block pos:line="63" pos:column="59">{
        <expr_stmt><expr><name pos:line="64" pos:column="9">err<pos:position pos:line="64" pos:column="12"/></name> <operator pos:line="64" pos:column="13">=<pos:position pos:line="64" pos:column="14"/></operator> <name pos:line="64" pos:column="15">LDAP_ENCODING_ERROR<pos:position pos:line="64" pos:column="34"/></name></expr>;<pos:position pos:line="64" pos:column="35"/></expr_stmt>
        <goto pos:line="65" pos:column="9">goto <name pos:line="65" pos:column="14">Cleanup<pos:position pos:line="65" pos:column="21"/></name>;<pos:position pos:line="65" pos:column="22"/></goto>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

<label><name pos:line="68" pos:column="1">Cleanup<pos:position pos:line="68" pos:column="8"/></name>:<pos:position pos:line="68" pos:column="9"/></label>

    <if pos:line="70" pos:column="5">if <condition pos:line="70" pos:column="8">(<expr><name pos:line="70" pos:column="9">requestBer<pos:position pos:line="70" pos:column="19"/></name></expr>)<pos:position pos:line="70" pos:column="20"/></condition><then pos:line="70" pos:column="20"> <block pos:line="70" pos:column="21">{
        <expr_stmt><expr><call><name pos:line="71" pos:column="9">ber_free<pos:position pos:line="71" pos:column="17"/></name><argument_list pos:line="71" pos:column="17">(<argument><expr><name pos:line="71" pos:column="18">requestBer<pos:position pos:line="71" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="71" pos:column="30">1<pos:position pos:line="71" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="71" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="33"/></expr_stmt>
    }<pos:position pos:line="72" pos:column="6"/></block></then></if>

    <return pos:line="74" pos:column="5">return <expr><name pos:line="74" pos:column="12">err<pos:position pos:line="74" pos:column="15"/></name></expr>;<pos:position pos:line="74" pos:column="16"/></return>
}<pos:position pos:line="75" pos:column="2"/></block></function></unit>

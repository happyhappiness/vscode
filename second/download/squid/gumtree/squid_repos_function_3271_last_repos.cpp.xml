<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3271_last_repos.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">Adaptation<pos:position pos:line="1" pos:column="11"/></name><operator pos:line="1" pos:column="11">::<pos:position pos:line="1" pos:column="13"/></operator><name pos:line="1" pos:column="13">ServiceFilter<pos:position pos:line="1" pos:column="26"/></name></name></type> <name><name pos:line="1" pos:column="27">Adaptation<pos:position pos:line="1" pos:column="37"/></name><operator pos:line="1" pos:column="37">::<pos:position pos:line="1" pos:column="39"/></operator><name pos:line="1" pos:column="39">Iterator<pos:position pos:line="1" pos:column="47"/></name><operator pos:line="1" pos:column="47">::<pos:position pos:line="1" pos:column="49"/></operator><name pos:line="1" pos:column="49">filter<pos:position pos:line="1" pos:column="55"/></name></name><parameter_list pos:line="1" pos:column="55">()<pos:position pos:line="1" pos:column="57"/></parameter_list> <specifier pos:line="1" pos:column="58">const<pos:position pos:line="1" pos:column="63"/></specifier>
<block pos:line="2" pos:column="1">{
    <comment type="line" pos:line="3" pos:column="5">// the method may differ from theGroup-&gt;method due to request satisfaction</comment>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">Method<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">method<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">methodNone<pos:position pos:line="4" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="32"/></decl_stmt>
    <comment type="line" pos:line="5" pos:column="5">// temporary variables, no locking needed</comment>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">HttpRequest<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">req<pos:position pos:line="6" pos:column="21"/></name> <init pos:line="6" pos:column="22">= <expr><name pos:line="6" pos:column="24">NULL<pos:position pos:line="6" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">HttpReply<pos:position pos:line="7" pos:column="14"/></name> <modifier pos:line="7" pos:column="15">*<pos:position pos:line="7" pos:column="16"/></modifier></type><name pos:line="7" pos:column="16">rep<pos:position pos:line="7" pos:column="19"/></name> <init pos:line="7" pos:column="20">= <expr><name pos:line="7" pos:column="22">NULL<pos:position pos:line="7" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="27"/></decl_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<decl><type><name pos:line="9" pos:column="9">HttpRequest<pos:position pos:line="9" pos:column="20"/></name> <modifier pos:line="9" pos:column="21">*<pos:position pos:line="9" pos:column="22"/></modifier></type><name pos:line="9" pos:column="22">r<pos:position pos:line="9" pos:column="23"/></name> <init pos:line="9" pos:column="24">= <expr><cast type="dynamic" pos:line="9" pos:column="26">dynamic_cast<argument_list type="generic" pos:line="9" pos:column="38">&lt;<argument><expr><name pos:line="9" pos:column="39">HttpRequest<pos:position pos:line="9" pos:column="50"/></name><operator pos:line="9" pos:column="50">*<pos:position pos:line="9" pos:column="51"/></operator></expr></argument>&gt;<pos:position pos:line="9" pos:column="55"/></argument_list><argument_list pos:line="9" pos:column="52">(<argument><expr><name pos:line="9" pos:column="53">theMsg<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="9" pos:column="61"/></condition><then pos:line="9" pos:column="61"> <block pos:line="9" pos:column="62">{
        <expr_stmt><expr><name pos:line="10" pos:column="9">method<pos:position pos:line="10" pos:column="15"/></name> <operator pos:line="10" pos:column="16">=<pos:position pos:line="10" pos:column="17"/></operator> <name pos:line="10" pos:column="18">methodReqmod<pos:position pos:line="10" pos:column="30"/></name></expr>;<pos:position pos:line="10" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="11" pos:column="9">req<pos:position pos:line="11" pos:column="12"/></name> <operator pos:line="11" pos:column="13">=<pos:position pos:line="11" pos:column="14"/></operator> <name pos:line="11" pos:column="15">r<pos:position pos:line="11" pos:column="16"/></name></expr>;<pos:position pos:line="11" pos:column="17"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">rep<pos:position pos:line="12" pos:column="12"/></name> <operator pos:line="12" pos:column="13">=<pos:position pos:line="12" pos:column="14"/></operator> <name pos:line="12" pos:column="15">NULL<pos:position pos:line="12" pos:column="19"/></name></expr>;<pos:position pos:line="12" pos:column="20"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then> <elseif pos:line="13" pos:column="7">else <if pos:line="13" pos:column="12">if <condition pos:line="13" pos:column="15">(<decl><type><name pos:line="13" pos:column="16">HttpReply<pos:position pos:line="13" pos:column="25"/></name> <modifier pos:line="13" pos:column="26">*<pos:position pos:line="13" pos:column="27"/></modifier></type><name pos:line="13" pos:column="27">theReply<pos:position pos:line="13" pos:column="35"/></name> <init pos:line="13" pos:column="36">= <expr><cast type="dynamic" pos:line="13" pos:column="38">dynamic_cast<argument_list type="generic" pos:line="13" pos:column="50">&lt;<argument><expr><name pos:line="13" pos:column="51">HttpReply<pos:position pos:line="13" pos:column="60"/></name><operator pos:line="13" pos:column="60">*<pos:position pos:line="13" pos:column="61"/></operator></expr></argument>&gt;<pos:position pos:line="13" pos:column="65"/></argument_list><argument_list pos:line="13" pos:column="62">(<argument><expr><name pos:line="13" pos:column="63">theMsg<pos:position pos:line="13" pos:column="69"/></name></expr></argument>)<pos:position pos:line="13" pos:column="70"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="13" pos:column="71"/></condition><then pos:line="13" pos:column="71"> <block pos:line="13" pos:column="72">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">method<pos:position pos:line="14" pos:column="15"/></name> <operator pos:line="14" pos:column="16">=<pos:position pos:line="14" pos:column="17"/></operator> <name pos:line="14" pos:column="18">methodRespmod<pos:position pos:line="14" pos:column="31"/></name></expr>;<pos:position pos:line="14" pos:column="32"/></expr_stmt>
        <expr_stmt><expr><name pos:line="15" pos:column="9">req<pos:position pos:line="15" pos:column="12"/></name> <operator pos:line="15" pos:column="13">=<pos:position pos:line="15" pos:column="14"/></operator> <name pos:line="15" pos:column="15">theCause<pos:position pos:line="15" pos:column="23"/></name></expr>;<pos:position pos:line="15" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name pos:line="16" pos:column="9">rep<pos:position pos:line="16" pos:column="12"/></name> <operator pos:line="16" pos:column="13">=<pos:position pos:line="16" pos:column="14"/></operator> <name pos:line="16" pos:column="15">theReply<pos:position pos:line="16" pos:column="23"/></name></expr>;<pos:position pos:line="16" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if></elseif> <else pos:line="17" pos:column="7">else <block pos:line="17" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">Must<pos:position pos:line="18" pos:column="13"/></name><argument_list pos:line="18" pos:column="13">(<argument><expr><literal type="boolean" pos:line="18" pos:column="14">false<pos:position pos:line="18" pos:column="19"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt> <comment type="line" pos:line="18" pos:column="22">// should not happen</comment>
    }<pos:position pos:line="19" pos:column="6"/></block></else></if>

    <return pos:line="21" pos:column="5">return <expr><call><name pos:line="21" pos:column="12">ServiceFilter<pos:position pos:line="21" pos:column="25"/></name><argument_list pos:line="21" pos:column="25">(<argument><expr><name pos:line="21" pos:column="26">method<pos:position pos:line="21" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="21" pos:column="34">theGroup<pos:position pos:line="21" pos:column="42"/></name><operator pos:line="21" pos:column="42">-&gt;<pos:position pos:line="21" pos:column="47"/></operator><name pos:line="21" pos:column="44">point<pos:position pos:line="21" pos:column="49"/></name></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="51">req<pos:position pos:line="21" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="56">rep<pos:position pos:line="21" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="61">al<pos:position pos:line="21" pos:column="63"/></name></expr></argument>)<pos:position pos:line="21" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="65"/></return>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

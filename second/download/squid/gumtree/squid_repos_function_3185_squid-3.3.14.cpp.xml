<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3185_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">CpuAffinityCheck<pos:position pos:line="2" pos:column="17"/></name><parameter_list pos:line="2" pos:column="17">()<pos:position pos:line="2" pos:column="19"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">Config<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">.<pos:position pos:line="4" pos:column="16"/></operator><name pos:line="4" pos:column="16">cpuAffinityMap<pos:position pos:line="4" pos:column="30"/></name></name></expr>)<pos:position pos:line="4" pos:column="31"/></condition><then pos:line="4" pos:column="31"> <block pos:line="4" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">Must<pos:position pos:line="5" pos:column="13"/></name><argument_list pos:line="5" pos:column="13">(<argument><expr><operator pos:line="5" pos:column="14">!<pos:position pos:line="5" pos:column="15"/></operator><call><name><name pos:line="5" pos:column="15">Config<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">.<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">cpuAffinityMap<pos:position pos:line="5" pos:column="36"/></name><operator pos:line="5" pos:column="36">-&gt;<pos:position pos:line="5" pos:column="41"/></operator><name pos:line="5" pos:column="38">processes<pos:position pos:line="5" pos:column="47"/></name></name><argument_list pos:line="5" pos:column="47">()<pos:position pos:line="5" pos:column="49"/></argument_list></call><operator pos:line="5" pos:column="49">.<pos:position pos:line="5" pos:column="50"/></operator><call><name pos:line="5" pos:column="50">empty<pos:position pos:line="5" pos:column="55"/></name><argument_list pos:line="5" pos:column="55">()<pos:position pos:line="5" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="5" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="59"/></expr_stmt>
        <decl_stmt><decl><type><specifier pos:line="6" pos:column="9">const<pos:position pos:line="6" pos:column="14"/></specifier> <name pos:line="6" pos:column="15">int<pos:position pos:line="6" pos:column="18"/></name></type> <name pos:line="6" pos:column="19">maxProcess<pos:position pos:line="6" pos:column="29"/></name> <init pos:line="6" pos:column="30">=
            <expr><operator pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></operator><call><name><name pos:line="7" pos:column="14">std<pos:position pos:line="7" pos:column="17"/></name><operator pos:line="7" pos:column="17">::<pos:position pos:line="7" pos:column="19"/></operator><name pos:line="7" pos:column="19">max_element<pos:position pos:line="7" pos:column="30"/></name></name><argument_list pos:line="7" pos:column="30">(<argument><expr><call><name><name pos:line="7" pos:column="31">Config<pos:position pos:line="7" pos:column="37"/></name><operator pos:line="7" pos:column="37">.<pos:position pos:line="7" pos:column="38"/></operator><name pos:line="7" pos:column="38">cpuAffinityMap<pos:position pos:line="7" pos:column="52"/></name><operator pos:line="7" pos:column="52">-&gt;<pos:position pos:line="7" pos:column="57"/></operator><name pos:line="7" pos:column="54">processes<pos:position pos:line="7" pos:column="63"/></name></name><argument_list pos:line="7" pos:column="63">()<pos:position pos:line="7" pos:column="65"/></argument_list></call><operator pos:line="7" pos:column="65">.<pos:position pos:line="7" pos:column="66"/></operator><call><name pos:line="7" pos:column="66">begin<pos:position pos:line="7" pos:column="71"/></name><argument_list pos:line="7" pos:column="71">()<pos:position pos:line="7" pos:column="73"/></argument_list></call></expr></argument>,
                              <argument><expr><call><name><name pos:line="8" pos:column="31">Config<pos:position pos:line="8" pos:column="37"/></name><operator pos:line="8" pos:column="37">.<pos:position pos:line="8" pos:column="38"/></operator><name pos:line="8" pos:column="38">cpuAffinityMap<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">-&gt;<pos:position pos:line="8" pos:column="57"/></operator><name pos:line="8" pos:column="54">processes<pos:position pos:line="8" pos:column="63"/></name></name><argument_list pos:line="8" pos:column="63">()<pos:position pos:line="8" pos:column="65"/></argument_list></call><operator pos:line="8" pos:column="65">.<pos:position pos:line="8" pos:column="66"/></operator><call><name pos:line="8" pos:column="66">end<pos:position pos:line="8" pos:column="69"/></name><argument_list pos:line="8" pos:column="69">()<pos:position pos:line="8" pos:column="71"/></argument_list></call></expr></argument>)<pos:position pos:line="8" pos:column="72"/></argument_list></call></expr></init></decl>;<pos:position pos:line="8" pos:column="73"/></decl_stmt>

        <comment type="line" pos:line="10" pos:column="9">// in no-deamon mode, there is one process regardless of squid.conf</comment>
        <decl_stmt><decl><type><specifier pos:line="11" pos:column="9">const<pos:position pos:line="11" pos:column="14"/></specifier> <name pos:line="11" pos:column="15">int<pos:position pos:line="11" pos:column="18"/></name></type> <name pos:line="11" pos:column="19">numberOfProcesses<pos:position pos:line="11" pos:column="36"/></name> <init pos:line="11" pos:column="37">= <expr><ternary><condition><expr><call><name pos:line="11" pos:column="39">InDaemonMode<pos:position pos:line="11" pos:column="51"/></name><argument_list pos:line="11" pos:column="51">()<pos:position pos:line="11" pos:column="53"/></argument_list></call></expr> ?<pos:position pos:line="11" pos:column="55"/></condition><then pos:line="11" pos:column="55"> <expr><call><name pos:line="11" pos:column="56">NumberOfKids<pos:position pos:line="11" pos:column="68"/></name><argument_list pos:line="11" pos:column="68">()<pos:position pos:line="11" pos:column="70"/></argument_list></call></expr> <pos:position pos:line="11" pos:column="71"/></then><else pos:line="11" pos:column="71">: <expr><literal type="number" pos:line="11" pos:column="73">1<pos:position pos:line="11" pos:column="74"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="11" pos:column="75"/></decl_stmt>

        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><name pos:line="13" pos:column="13">maxProcess<pos:position pos:line="13" pos:column="23"/></name> <operator pos:line="13" pos:column="24">&gt;<pos:position pos:line="13" pos:column="28"/></operator> <name pos:line="13" pos:column="26">numberOfProcesses<pos:position pos:line="13" pos:column="43"/></name></expr>)<pos:position pos:line="13" pos:column="44"/></condition><then pos:line="13" pos:column="44"> <block pos:line="13" pos:column="45">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">debugs<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><literal type="number" pos:line="14" pos:column="20">54<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="24">DBG_IMPORTANT<pos:position pos:line="14" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="39">"WARNING: 'cpu_affinity_map' has "<pos:position pos:line="14" pos:column="73"/></literal>
                   <literal type="string" pos:line="15" pos:column="20">"non-existing process number(s)"<pos:position pos:line="15" pos:column="52"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="54"/></expr_stmt>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
}<pos:position pos:line="18" pos:column="2"/></block></function></unit>

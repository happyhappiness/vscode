<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4467_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">Acl<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">AllOf<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">doMatch<pos:position pos:line="2" pos:column="20"/></name></name><parameter_list pos:line="2" pos:column="20">(<parameter><decl><type><name pos:line="2" pos:column="21">ACLChecklist<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">checklist<pos:position pos:line="2" pos:column="44"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="46">Nodes<pos:position pos:line="2" pos:column="51"/></name><operator pos:line="2" pos:column="51">::<pos:position pos:line="2" pos:column="53"/></operator><name pos:line="2" pos:column="53">const_iterator<pos:position pos:line="2" pos:column="67"/></name></name></type> <name pos:line="2" pos:column="68">start<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list> <specifier pos:line="2" pos:column="75">const<pos:position pos:line="2" pos:column="80"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">start<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">==<pos:position pos:line="4" pos:column="20"/></operator> <call><name><name pos:line="4" pos:column="21">nodes<pos:position pos:line="4" pos:column="26"/></name><operator pos:line="4" pos:column="26">.<pos:position pos:line="4" pos:column="27"/></operator><name pos:line="4" pos:column="27">begin<pos:position pos:line="4" pos:column="32"/></name></name><argument_list pos:line="4" pos:column="32">()<pos:position pos:line="4" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="36"/></expr_stmt> <comment type="line" pos:line="4" pos:column="37">// we only have one node</comment>

    <comment type="line" pos:line="6" pos:column="5">// avoid dereferencing invalid start</comment>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><call><name pos:line="7" pos:column="9">empty<pos:position pos:line="7" pos:column="14"/></name><argument_list pos:line="7" pos:column="14">()<pos:position pos:line="7" pos:column="16"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="17"/></condition><then pos:line="7" pos:column="17">
        <block type="pseudo"><return pos:line="8" pos:column="9">return <expr><literal type="number" pos:line="8" pos:column="16">1<pos:position pos:line="8" pos:column="17"/></literal></expr>;<pos:position pos:line="8" pos:column="18"/></return></block></then></if> <comment type="line" pos:line="8" pos:column="19">// not 0 because in math empty product equals identity</comment>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><call><name><name pos:line="10" pos:column="9">checklist<pos:position pos:line="10" pos:column="18"/></name><operator pos:line="10" pos:column="18">-&gt;<pos:position pos:line="10" pos:column="23"/></operator><name pos:line="10" pos:column="20">matchChild<pos:position pos:line="10" pos:column="30"/></name></name><argument_list pos:line="10" pos:column="30">(<argument><expr><name pos:line="10" pos:column="31">this<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">start<pos:position pos:line="10" pos:column="42"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="44">*<pos:position pos:line="10" pos:column="45"/></operator><name pos:line="10" pos:column="45">start<pos:position pos:line="10" pos:column="50"/></name></expr></argument>)<pos:position pos:line="10" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="52"/></condition><then pos:line="10" pos:column="52">
        <block type="pseudo"><return pos:line="11" pos:column="9">return <expr><literal type="number" pos:line="11" pos:column="16">1<pos:position pos:line="11" pos:column="17"/></literal></expr>;<pos:position pos:line="11" pos:column="18"/></return></block></then></if> <comment type="line" pos:line="11" pos:column="19">// match</comment>

    <return pos:line="13" pos:column="5">return <expr><ternary><condition><expr><call><name><name pos:line="13" pos:column="12">checklist<pos:position pos:line="13" pos:column="21"/></name><operator pos:line="13" pos:column="21">-&gt;<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="23">keepMatching<pos:position pos:line="13" pos:column="35"/></name></name><argument_list pos:line="13" pos:column="35">()<pos:position pos:line="13" pos:column="37"/></argument_list></call></expr> ?<pos:position pos:line="13" pos:column="39"/></condition><then pos:line="13" pos:column="39"> <expr><literal type="number" pos:line="13" pos:column="40">0<pos:position pos:line="13" pos:column="41"/></literal></expr> <pos:position pos:line="13" pos:column="42"/></then><else pos:line="13" pos:column="42">: <expr><operator pos:line="13" pos:column="44">-<pos:position pos:line="13" pos:column="45"/></operator><literal type="number" pos:line="13" pos:column="45">1<pos:position pos:line="13" pos:column="46"/></literal></expr></else></ternary></expr>;<pos:position pos:line="13" pos:column="47"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4415_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">squid_ssl_info<pos:position pos:line="2" pos:column="15"/></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><specifier pos:line="2" pos:column="16">const<pos:position pos:line="2" pos:column="21"/></specifier> <name pos:line="2" pos:column="22">SSL<pos:position pos:line="2" pos:column="25"/></name> <modifier pos:line="2" pos:column="26">*<pos:position pos:line="2" pos:column="27"/></modifier></type><name pos:line="2" pos:column="27">ssl<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="32">int<pos:position pos:line="2" pos:column="35"/></name></type> <name pos:line="2" pos:column="36">where<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">int<pos:position pos:line="2" pos:column="46"/></name></type> <name pos:line="2" pos:column="47">ret<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="51"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<decl><type><name pos:line="4" pos:column="9">BIO<pos:position pos:line="4" pos:column="12"/></name> <modifier pos:line="4" pos:column="13">*<pos:position pos:line="4" pos:column="14"/></modifier></type><name pos:line="4" pos:column="14">table<pos:position pos:line="4" pos:column="19"/></name> <init pos:line="4" pos:column="20">= <expr><call><name pos:line="4" pos:column="22">SSL_get_rbio<pos:position pos:line="4" pos:column="34"/></name><argument_list pos:line="4" pos:column="34">(<argument><expr><name pos:line="4" pos:column="35">ssl<pos:position pos:line="4" pos:column="38"/></name></expr></argument>)<pos:position pos:line="4" pos:column="39"/></argument_list></call></expr></init></decl>)<pos:position pos:line="4" pos:column="40"/></condition><then pos:line="4" pos:column="40"> <block pos:line="4" pos:column="41">{
        <if pos:line="5" pos:column="9">if <condition pos:line="5" pos:column="12">(<decl><type><name><name pos:line="5" pos:column="13">Ssl<pos:position pos:line="5" pos:column="16"/></name><operator pos:line="5" pos:column="16">::<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="18">Bio<pos:position pos:line="5" pos:column="21"/></name></name> <modifier pos:line="5" pos:column="22">*<pos:position pos:line="5" pos:column="23"/></modifier></type><name pos:line="5" pos:column="23">bio<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><cast type="static" pos:line="5" pos:column="29">static_cast<argument_list type="generic" pos:line="5" pos:column="40">&lt;<argument><expr><name><name pos:line="5" pos:column="41">Ssl<pos:position pos:line="5" pos:column="44"/></name><operator pos:line="5" pos:column="44">::<pos:position pos:line="5" pos:column="46"/></operator><name pos:line="5" pos:column="46">Bio<pos:position pos:line="5" pos:column="49"/></name></name><operator pos:line="5" pos:column="49">*<pos:position pos:line="5" pos:column="50"/></operator></expr></argument>&gt;<pos:position pos:line="5" pos:column="54"/></argument_list><argument_list pos:line="5" pos:column="51">(<argument><expr><name><name pos:line="5" pos:column="52">table<pos:position pos:line="5" pos:column="57"/></name><operator pos:line="5" pos:column="57">-&gt;<pos:position pos:line="5" pos:column="62"/></operator><name pos:line="5" pos:column="59">ptr<pos:position pos:line="5" pos:column="62"/></name></name></expr></argument>)<pos:position pos:line="5" pos:column="63"/></argument_list></cast></expr></init></decl>)<pos:position pos:line="5" pos:column="64"/></condition><then pos:line="5" pos:column="64">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="6" pos:column="13">bio<pos:position pos:line="6" pos:column="16"/></name><operator pos:line="6" pos:column="16">-&gt;<pos:position pos:line="6" pos:column="21"/></operator><name pos:line="6" pos:column="18">stateChanged<pos:position pos:line="6" pos:column="30"/></name></name><argument_list pos:line="6" pos:column="30">(<argument><expr><name pos:line="6" pos:column="31">ssl<pos:position pos:line="6" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="36">where<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="43">ret<pos:position pos:line="6" pos:column="46"/></name></expr></argument>)<pos:position pos:line="6" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="48"/></expr_stmt></block></then></if>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

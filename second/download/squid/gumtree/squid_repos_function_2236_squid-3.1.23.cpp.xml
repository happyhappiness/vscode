<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2236_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">idnsReadVC<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">int<pos:position pos:line="2" pos:column="15"/></name></type> <name pos:line="2" pos:column="16">fd<pos:position pos:line="2" pos:column="18"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="20">char<pos:position pos:line="2" pos:column="24"/></name> <modifier pos:line="2" pos:column="25">*<pos:position pos:line="2" pos:column="26"/></modifier></type><name pos:line="2" pos:column="26">buf<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="31">size_t<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">len<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="43">comm_err_t<pos:position pos:line="2" pos:column="53"/></name></type> <name pos:line="2" pos:column="54">flag<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">int<pos:position pos:line="2" pos:column="63"/></name></type> <name pos:line="2" pos:column="64">xerrno<pos:position pos:line="2" pos:column="70"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="72">void<pos:position pos:line="2" pos:column="76"/></name> <modifier pos:line="2" pos:column="77">*<pos:position pos:line="2" pos:column="78"/></modifier></type><name pos:line="2" pos:column="78">data<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="83"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">nsvc<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type> <name pos:line="4" pos:column="12">vc<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><operator pos:line="4" pos:column="17">(<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="18">nsvc<pos:position pos:line="4" pos:column="22"/></name> <operator pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></operator><operator pos:line="4" pos:column="24">)<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">data<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">flag<pos:position pos:line="6" pos:column="13"/></name> <operator pos:line="6" pos:column="14">==<pos:position pos:line="6" pos:column="16"/></operator> <name pos:line="6" pos:column="17">COMM_ERR_CLOSING<pos:position pos:line="6" pos:column="33"/></name></expr>)<pos:position pos:line="6" pos:column="34"/></condition><then pos:line="6" pos:column="34">
        <block type="pseudo"><return pos:line="7" pos:column="9">return;<pos:position pos:line="7" pos:column="16"/></return></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">flag<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">!=<pos:position pos:line="9" pos:column="16"/></operator> <name pos:line="9" pos:column="17">COMM_OK<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">||<pos:position pos:line="9" pos:column="27"/></operator> <name pos:line="9" pos:column="28">len<pos:position pos:line="9" pos:column="31"/></name> <operator pos:line="9" pos:column="32">&lt;=<pos:position pos:line="9" pos:column="37"/></operator> <literal type="number" pos:line="9" pos:column="35">0<pos:position pos:line="9" pos:column="36"/></literal></expr>)<pos:position pos:line="9" pos:column="37"/></condition><then pos:line="9" pos:column="37"> <block pos:line="9" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">comm_close<pos:position pos:line="10" pos:column="19"/></name><argument_list pos:line="10" pos:column="19">(<argument><expr><name pos:line="10" pos:column="20">fd<pos:position pos:line="10" pos:column="22"/></name></expr></argument>)<pos:position pos:line="10" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="24"/></expr_stmt>
        <return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="14" pos:column="5">vc<pos:position pos:line="14" pos:column="7"/></name><operator pos:line="14" pos:column="7">-&gt;<pos:position pos:line="14" pos:column="12"/></operator><name pos:line="14" pos:column="9">msg<pos:position pos:line="14" pos:column="12"/></name><operator pos:line="14" pos:column="12">-&gt;<pos:position pos:line="14" pos:column="17"/></operator><name pos:line="14" pos:column="14">size<pos:position pos:line="14" pos:column="18"/></name></name> <operator pos:line="14" pos:column="19">+=<pos:position pos:line="14" pos:column="21"/></operator> <name pos:line="14" pos:column="22">len<pos:position pos:line="14" pos:column="25"/></name></expr>;<pos:position pos:line="14" pos:column="26"/></expr_stmt>       <comment type="line" pos:line="14" pos:column="33">// XXX should not access -&gt; size directly</comment>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name><name pos:line="16" pos:column="9">vc<pos:position pos:line="16" pos:column="11"/></name><operator pos:line="16" pos:column="11">-&gt;<pos:position pos:line="16" pos:column="16"/></operator><name pos:line="16" pos:column="13">msg<pos:position pos:line="16" pos:column="16"/></name><operator pos:line="16" pos:column="16">-&gt;<pos:position pos:line="16" pos:column="21"/></operator><name pos:line="16" pos:column="18">contentSize<pos:position pos:line="16" pos:column="29"/></name></name><argument_list pos:line="16" pos:column="29">()<pos:position pos:line="16" pos:column="31"/></argument_list></call> <operator pos:line="16" pos:column="32">&lt;<pos:position pos:line="16" pos:column="36"/></operator> <name><name pos:line="16" pos:column="34">vc<pos:position pos:line="16" pos:column="36"/></name><operator pos:line="16" pos:column="36">-&gt;<pos:position pos:line="16" pos:column="41"/></operator><name pos:line="16" pos:column="38">msglen<pos:position pos:line="16" pos:column="44"/></name></name></expr>)<pos:position pos:line="16" pos:column="45"/></condition><then pos:line="16" pos:column="45"> <block pos:line="16" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="17" pos:column="9">comm_read<pos:position pos:line="17" pos:column="18"/></name><argument_list pos:line="17" pos:column="18">(<argument><expr><name pos:line="17" pos:column="19">fd<pos:position pos:line="17" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="23">buf<pos:position pos:line="17" pos:column="26"/></name> <operator pos:line="17" pos:column="27">+<pos:position pos:line="17" pos:column="28"/></operator> <name pos:line="17" pos:column="29">len<pos:position pos:line="17" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="17" pos:column="34">vc<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">-&gt;<pos:position pos:line="17" pos:column="41"/></operator><name pos:line="17" pos:column="38">msglen<pos:position pos:line="17" pos:column="44"/></name></name> <operator pos:line="17" pos:column="45">-<pos:position pos:line="17" pos:column="46"/></operator> <call><name><name pos:line="17" pos:column="47">vc<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">-&gt;<pos:position pos:line="17" pos:column="54"/></operator><name pos:line="17" pos:column="51">msg<pos:position pos:line="17" pos:column="54"/></name><operator pos:line="17" pos:column="54">-&gt;<pos:position pos:line="17" pos:column="59"/></operator><name pos:line="17" pos:column="56">contentSize<pos:position pos:line="17" pos:column="67"/></name></name><argument_list pos:line="17" pos:column="67">()<pos:position pos:line="17" pos:column="69"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="17" pos:column="71">idnsReadVC<pos:position pos:line="17" pos:column="81"/></name></expr></argument>, <argument><expr><name pos:line="17" pos:column="83">vc<pos:position pos:line="17" pos:column="85"/></name></expr></argument>)<pos:position pos:line="17" pos:column="86"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="87"/></expr_stmt>
        <return pos:line="18" pos:column="9">return;<pos:position pos:line="18" pos:column="16"/></return>
    }<pos:position pos:line="19" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name><name pos:line="21" pos:column="12">vc<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">ns<pos:position pos:line="21" pos:column="18"/></name></name> <operator pos:line="21" pos:column="19">&lt;<pos:position pos:line="21" pos:column="23"/></operator> <name pos:line="21" pos:column="21">nns<pos:position pos:line="21" pos:column="24"/></name></expr></argument>)<pos:position pos:line="21" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">debugs<pos:position pos:line="22" pos:column="11"/></name><argument_list pos:line="22" pos:column="11">(<argument><expr><literal type="number" pos:line="22" pos:column="12">78<pos:position pos:line="22" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="16">3<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="19">"idnsReadVC: FD "<pos:position pos:line="22" pos:column="36"/></literal> <operator pos:line="22" pos:column="37">&lt;&lt;<pos:position pos:line="22" pos:column="45"/></operator> <name pos:line="22" pos:column="40">fd<pos:position pos:line="22" pos:column="42"/></name> <operator pos:line="22" pos:column="43">&lt;&lt;<pos:position pos:line="22" pos:column="51"/></operator> <literal type="string" pos:line="22" pos:column="46">": received "<pos:position pos:line="22" pos:column="59"/></literal> <operator pos:line="22" pos:column="60">&lt;&lt;<pos:position pos:line="22" pos:column="68"/></operator>
           <operator pos:line="23" pos:column="12">(<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="13">int<pos:position pos:line="23" pos:column="16"/></name><operator pos:line="23" pos:column="16">)<pos:position pos:line="23" pos:column="17"/></operator> <call><name><name pos:line="23" pos:column="18">vc<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">msg<pos:position pos:line="23" pos:column="25"/></name><operator pos:line="23" pos:column="25">-&gt;<pos:position pos:line="23" pos:column="30"/></operator><name pos:line="23" pos:column="27">contentSize<pos:position pos:line="23" pos:column="38"/></name></name><argument_list pos:line="23" pos:column="38">()<pos:position pos:line="23" pos:column="40"/></argument_list></call> <operator pos:line="23" pos:column="41">&lt;&lt;<pos:position pos:line="23" pos:column="49"/></operator> <literal type="string" pos:line="23" pos:column="44">" bytes via tcp from "<pos:position pos:line="23" pos:column="66"/></literal> <operator pos:line="23" pos:column="67">&lt;&lt;<pos:position pos:line="23" pos:column="75"/></operator>
           <name><name pos:line="24" pos:column="12">nameservers<pos:position pos:line="24" pos:column="23"/></name><index pos:line="24" pos:column="23">[<expr><name><name pos:line="24" pos:column="24">vc<pos:position pos:line="24" pos:column="26"/></name><operator pos:line="24" pos:column="26">-&gt;<pos:position pos:line="24" pos:column="31"/></operator><name pos:line="24" pos:column="28">ns<pos:position pos:line="24" pos:column="30"/></name></name></expr>]<pos:position pos:line="24" pos:column="31"/></index></name><operator pos:line="24" pos:column="31">.<pos:position pos:line="24" pos:column="32"/></operator><name pos:line="24" pos:column="32">S<pos:position pos:line="24" pos:column="33"/></name> <operator pos:line="24" pos:column="34">&lt;&lt;<pos:position pos:line="24" pos:column="42"/></operator> <literal type="string" pos:line="24" pos:column="37">"."<pos:position pos:line="24" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="42"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="26" pos:column="5">idnsGrokReply<pos:position pos:line="26" pos:column="18"/></name><argument_list pos:line="26" pos:column="18">(<argument><expr><name><name pos:line="26" pos:column="19">vc<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">msg<pos:position pos:line="26" pos:column="26"/></name><operator pos:line="26" pos:column="26">-&gt;<pos:position pos:line="26" pos:column="31"/></operator><name pos:line="26" pos:column="28">buf<pos:position pos:line="26" pos:column="31"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="26" pos:column="33">vc<pos:position pos:line="26" pos:column="35"/></name><operator pos:line="26" pos:column="35">-&gt;<pos:position pos:line="26" pos:column="40"/></operator><name pos:line="26" pos:column="37">msg<pos:position pos:line="26" pos:column="40"/></name><operator pos:line="26" pos:column="40">-&gt;<pos:position pos:line="26" pos:column="45"/></operator><name pos:line="26" pos:column="42">contentSize<pos:position pos:line="26" pos:column="53"/></name></name><argument_list pos:line="26" pos:column="53">()<pos:position pos:line="26" pos:column="55"/></argument_list></call></expr></argument>)<pos:position pos:line="26" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="27" pos:column="5">vc<pos:position pos:line="27" pos:column="7"/></name><operator pos:line="27" pos:column="7">-&gt;<pos:position pos:line="27" pos:column="12"/></operator><name pos:line="27" pos:column="9">msg<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">clean<pos:position pos:line="27" pos:column="19"/></name></name><argument_list pos:line="27" pos:column="19">()<pos:position pos:line="27" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="28" pos:column="5">comm_read<pos:position pos:line="28" pos:column="14"/></name><argument_list pos:line="28" pos:column="14">(<argument><expr><name pos:line="28" pos:column="15">fd<pos:position pos:line="28" pos:column="17"/></name></expr></argument>, <argument><expr><operator pos:line="28" pos:column="19">(<pos:position pos:line="28" pos:column="20"/></operator><name pos:line="28" pos:column="20">char<pos:position pos:line="28" pos:column="24"/></name> <operator pos:line="28" pos:column="25">*<pos:position pos:line="28" pos:column="26"/></operator><operator pos:line="28" pos:column="26">)<pos:position pos:line="28" pos:column="27"/></operator><operator pos:line="28" pos:column="27">&amp;<pos:position pos:line="28" pos:column="32"/></operator><name><name pos:line="28" pos:column="28">vc<pos:position pos:line="28" pos:column="30"/></name><operator pos:line="28" pos:column="30">-&gt;<pos:position pos:line="28" pos:column="35"/></operator><name pos:line="28" pos:column="32">msglen<pos:position pos:line="28" pos:column="38"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="40">2<pos:position pos:line="28" pos:column="41"/></literal></expr></argument> , <argument><expr><name pos:line="28" pos:column="44">idnsReadVCHeader<pos:position pos:line="28" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="62">vc<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="66"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

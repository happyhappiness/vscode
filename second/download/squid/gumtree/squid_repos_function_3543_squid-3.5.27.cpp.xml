<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3543_squid-3.5.27.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">virtual<pos:position pos:line="1" pos:column="8"/></specifier> <type><name pos:line="1" pos:column="9">void<pos:position pos:line="1" pos:column="13"/></name></type> <name pos:line="1" pos:column="14">print<pos:position pos:line="1" pos:column="19"/></name><parameter_list pos:line="1" pos:column="19">(<parameter><decl><type><name><name pos:line="1" pos:column="20">std<pos:position pos:line="1" pos:column="23"/></name><operator pos:line="1" pos:column="23">::<pos:position pos:line="1" pos:column="25"/></operator><name pos:line="1" pos:column="25">ostream<pos:position pos:line="1" pos:column="32"/></name></name> <modifier pos:line="1" pos:column="33">&amp;<pos:position pos:line="1" pos:column="38"/></modifier></type><name pos:line="1" pos:column="34">os<pos:position pos:line="1" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="37"/></parameter_list> <specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier> <block pos:line="1" pos:column="44">{
        <expr_stmt><expr><call><name pos:line="2" pos:column="9">startPrint<pos:position pos:line="2" pos:column="19"/></name><argument_list pos:line="2" pos:column="19">(<argument><expr><name pos:line="2" pos:column="20">os<pos:position pos:line="2" pos:column="22"/></name></expr></argument>)<pos:position pos:line="2" pos:column="23"/></argument_list></call> <operator pos:line="2" pos:column="24">&lt;&lt;<pos:position pos:line="2" pos:column="32"/></operator>
                       <literal type="string" pos:line="3" pos:column="24">", "<pos:position pos:line="3" pos:column="28"/></literal> <operator pos:line="3" pos:column="29">&lt;&lt;<pos:position pos:line="3" pos:column="37"/></operator> <call><name pos:line="3" pos:column="32">FdNote<pos:position pos:line="3" pos:column="38"/></name><argument_list pos:line="3" pos:column="38">(<argument><expr><name pos:line="3" pos:column="39">portTypeNote<pos:position pos:line="3" pos:column="51"/></name></expr></argument>)<pos:position pos:line="3" pos:column="52"/></argument_list></call> <operator pos:line="3" pos:column="53">&lt;&lt;<pos:position pos:line="3" pos:column="61"/></operator> <literal type="string" pos:line="3" pos:column="56">" port="<pos:position pos:line="3" pos:column="64"/></literal> <operator pos:line="3" pos:column="65">&lt;&lt;<pos:position pos:line="3" pos:column="73"/></operator> <operator pos:line="3" pos:column="68">(<pos:position pos:line="3" pos:column="69"/></operator><name pos:line="3" pos:column="69">void<pos:position pos:line="3" pos:column="73"/></name><operator pos:line="3" pos:column="73">*<pos:position pos:line="3" pos:column="74"/></operator><operator pos:line="3" pos:column="74">)<pos:position pos:line="3" pos:column="75"/></operator><operator pos:line="3" pos:column="75">&amp;<pos:position pos:line="3" pos:column="80"/></operator><name pos:line="3" pos:column="76">portCfg<pos:position pos:line="3" pos:column="83"/></name> <operator pos:line="3" pos:column="84">&lt;&lt;<pos:position pos:line="3" pos:column="92"/></operator> <literal type="char" pos:line="3" pos:column="87">')'<pos:position pos:line="3" pos:column="90"/></literal></expr>;<pos:position pos:line="3" pos:column="91"/></expr_stmt>
    }<pos:position pos:line="4" pos:column="6"/></block></function></unit>

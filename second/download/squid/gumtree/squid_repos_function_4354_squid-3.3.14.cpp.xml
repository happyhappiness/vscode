<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4354_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">ErrorDetail<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">buildDetail<pos:position pos:line="1" pos:column="35"/></name></name><parameter_list pos:line="1" pos:column="35">()<pos:position pos:line="1" pos:column="37"/></parameter_list> <specifier pos:line="1" pos:column="38">const<pos:position pos:line="1" pos:column="43"/></specifier>
<block pos:line="2" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="3" pos:column="5">char<pos:position pos:line="3" pos:column="9"/></name> <specifier pos:line="3" pos:column="10">const<pos:position pos:line="3" pos:column="15"/></specifier> <modifier pos:line="3" pos:column="16">*<pos:position pos:line="3" pos:column="17"/></modifier></type><name pos:line="3" pos:column="17">s<pos:position pos:line="3" pos:column="18"/></name> <init pos:line="3" pos:column="19">= <expr><name pos:line="3" pos:column="21">NULL<pos:position pos:line="3" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="3" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <specifier pos:line="4" pos:column="10">const<pos:position pos:line="4" pos:column="15"/></specifier> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">p<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <specifier pos:line="5" pos:column="10">const<pos:position pos:line="5" pos:column="15"/></specifier> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">t<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">int<pos:position pos:line="6" pos:column="8"/></name></type> <name pos:line="6" pos:column="9">code_len<pos:position pos:line="6" pos:column="17"/></name> <init pos:line="6" pos:column="18">= <expr><literal type="number" pos:line="6" pos:column="20">0<pos:position pos:line="6" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="22"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><call><name><name pos:line="8" pos:column="9">ErrorDetailsManager<pos:position pos:line="8" pos:column="28"/></name><operator pos:line="8" pos:column="28">::<pos:position pos:line="8" pos:column="30"/></operator><name pos:line="8" pos:column="30">GetInstance<pos:position pos:line="8" pos:column="41"/></name></name><argument_list pos:line="8" pos:column="41">()<pos:position pos:line="8" pos:column="43"/></argument_list></call><operator pos:line="8" pos:column="43">.<pos:position pos:line="8" pos:column="44"/></operator><call><name pos:line="8" pos:column="44">getErrorDetail<pos:position pos:line="8" pos:column="58"/></name><argument_list pos:line="8" pos:column="58">(<argument><expr><name pos:line="8" pos:column="59">error_no<pos:position pos:line="8" pos:column="67"/></name></expr></argument>, <argument><expr><call><name><name pos:line="8" pos:column="69">request<pos:position pos:line="8" pos:column="76"/></name><operator pos:line="8" pos:column="76">.<pos:position pos:line="8" pos:column="77"/></operator><name pos:line="8" pos:column="77">raw<pos:position pos:line="8" pos:column="80"/></name></name><argument_list pos:line="8" pos:column="80">()<pos:position pos:line="8" pos:column="82"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="8" pos:column="84">detailEntry<pos:position pos:line="8" pos:column="95"/></name></expr></argument>)<pos:position pos:line="8" pos:column="96"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="97"/></condition><then pos:line="8" pos:column="97">
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">s<pos:position pos:line="9" pos:column="10"/></name> <operator pos:line="9" pos:column="11">=<pos:position pos:line="9" pos:column="12"/></operator> <call><name><name pos:line="9" pos:column="13">detailEntry<pos:position pos:line="9" pos:column="24"/></name><operator pos:line="9" pos:column="24">.<pos:position pos:line="9" pos:column="25"/></operator><name pos:line="9" pos:column="25">detail<pos:position pos:line="9" pos:column="31"/></name><operator pos:line="9" pos:column="31">.<pos:position pos:line="9" pos:column="32"/></operator><name pos:line="9" pos:column="32">termedBuf<pos:position pos:line="9" pos:column="41"/></name></name><argument_list pos:line="9" pos:column="41">()<pos:position pos:line="9" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="44"/></expr_stmt></block></then></if>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><operator pos:line="11" pos:column="9">!<pos:position pos:line="11" pos:column="10"/></operator><name pos:line="11" pos:column="10">s<pos:position pos:line="11" pos:column="11"/></name></expr>)<pos:position pos:line="11" pos:column="12"/></condition><then pos:line="11" pos:column="12">
        <block type="pseudo"><expr_stmt><expr><name pos:line="12" pos:column="9">s<pos:position pos:line="12" pos:column="10"/></name> <operator pos:line="12" pos:column="11">=<pos:position pos:line="12" pos:column="12"/></operator> <name pos:line="12" pos:column="13">SslErrorDetailDefaultStr<pos:position pos:line="12" pos:column="37"/></name></expr>;<pos:position pos:line="12" pos:column="38"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name pos:line="14" pos:column="12">s<pos:position pos:line="14" pos:column="13"/></name></expr></argument>)<pos:position pos:line="14" pos:column="14"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="15"/></expr_stmt>
    <while pos:line="15" pos:column="5">while <condition pos:line="15" pos:column="11">(<expr><operator pos:line="15" pos:column="12">(<pos:position pos:line="15" pos:column="13"/></operator><name pos:line="15" pos:column="13">p<pos:position pos:line="15" pos:column="14"/></name> <operator pos:line="15" pos:column="15">=<pos:position pos:line="15" pos:column="16"/></operator> <call><name pos:line="15" pos:column="17">strchr<pos:position pos:line="15" pos:column="23"/></name><argument_list pos:line="15" pos:column="23">(<argument><expr><name pos:line="15" pos:column="24">s<pos:position pos:line="15" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="15" pos:column="27">'%'<pos:position pos:line="15" pos:column="30"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="31"/></argument_list></call><operator pos:line="15" pos:column="31">)<pos:position pos:line="15" pos:column="32"/></operator></expr>)<pos:position pos:line="15" pos:column="33"/></condition> <block pos:line="15" pos:column="34">{
        <expr_stmt><expr><call><name><name pos:line="16" pos:column="9">errDetailStr<pos:position pos:line="16" pos:column="21"/></name><operator pos:line="16" pos:column="21">.<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">append<pos:position pos:line="16" pos:column="28"/></name></name><argument_list pos:line="16" pos:column="28">(<argument><expr><name pos:line="16" pos:column="29">s<pos:position pos:line="16" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="16" pos:column="32">p<pos:position pos:line="16" pos:column="33"/></name> <operator pos:line="16" pos:column="34">-<pos:position pos:line="16" pos:column="35"/></operator> <name pos:line="16" pos:column="36">s<pos:position pos:line="16" pos:column="37"/></name></expr></argument>)<pos:position pos:line="16" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">code_len<pos:position pos:line="17" pos:column="17"/></name> <operator pos:line="17" pos:column="18">=<pos:position pos:line="17" pos:column="19"/></operator> <call><name pos:line="17" pos:column="20">convert<pos:position pos:line="17" pos:column="27"/></name><argument_list pos:line="17" pos:column="27">(<argument><expr><operator pos:line="17" pos:column="28">++<pos:position pos:line="17" pos:column="30"/></operator><name pos:line="17" pos:column="30">p<pos:position pos:line="17" pos:column="31"/></name></expr></argument>, <argument><expr><operator pos:line="17" pos:column="33">&amp;<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="34">t<pos:position pos:line="17" pos:column="35"/></name></expr></argument>)<pos:position pos:line="17" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="37"/></expr_stmt>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name pos:line="18" pos:column="13">code_len<pos:position pos:line="18" pos:column="21"/></name></expr>)<pos:position pos:line="18" pos:column="22"/></condition><then pos:line="18" pos:column="22">
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="19" pos:column="13">errDetailStr<pos:position pos:line="19" pos:column="25"/></name><operator pos:line="19" pos:column="25">.<pos:position pos:line="19" pos:column="26"/></operator><name pos:line="19" pos:column="26">append<pos:position pos:line="19" pos:column="32"/></name></name><argument_list pos:line="19" pos:column="32">(<argument><expr><name pos:line="19" pos:column="33">t<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="36"/></expr_stmt></block></then>
        <else pos:line="20" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="21" pos:column="13">errDetailStr<pos:position pos:line="21" pos:column="25"/></name><operator pos:line="21" pos:column="25">.<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="26">append<pos:position pos:line="21" pos:column="32"/></name></name><argument_list pos:line="21" pos:column="32">(<argument><expr><literal type="string" pos:line="21" pos:column="33">"%"<pos:position pos:line="21" pos:column="36"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="38"/></expr_stmt></block></else></if>
        <expr_stmt><expr><name pos:line="22" pos:column="9">s<pos:position pos:line="22" pos:column="10"/></name> <operator pos:line="22" pos:column="11">=<pos:position pos:line="22" pos:column="12"/></operator> <name pos:line="22" pos:column="13">p<pos:position pos:line="22" pos:column="14"/></name> <operator pos:line="22" pos:column="15">+<pos:position pos:line="22" pos:column="16"/></operator> <name pos:line="22" pos:column="17">code_len<pos:position pos:line="22" pos:column="25"/></name></expr>;<pos:position pos:line="22" pos:column="26"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></while>
    <expr_stmt><expr><call><name><name pos:line="24" pos:column="5">errDetailStr<pos:position pos:line="24" pos:column="17"/></name><operator pos:line="24" pos:column="17">.<pos:position pos:line="24" pos:column="18"/></operator><name pos:line="24" pos:column="18">append<pos:position pos:line="24" pos:column="24"/></name></name><argument_list pos:line="24" pos:column="24">(<argument><expr><name pos:line="24" pos:column="25">s<pos:position pos:line="24" pos:column="26"/></name></expr></argument>, <argument><expr><call><name pos:line="24" pos:column="28">strlen<pos:position pos:line="24" pos:column="34"/></name><argument_list pos:line="24" pos:column="34">(<argument><expr><name pos:line="24" pos:column="35">s<pos:position pos:line="24" pos:column="36"/></name></expr></argument>)<pos:position pos:line="24" pos:column="37"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="39"/></expr_stmt>
}<pos:position pos:line="25" pos:column="2"/></block></function></unit>

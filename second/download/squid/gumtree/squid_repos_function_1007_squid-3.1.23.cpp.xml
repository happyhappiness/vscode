<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1007_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">ctx_print<pos:position pos:line="2" pos:column="10"/></name><parameter_list pos:line="2" pos:column="10">(<parameter><decl><type><name pos:line="2" pos:column="11">void<pos:position pos:line="2" pos:column="15"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="16"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <comment type="block" pos:line="4" pos:column="5">/* lock so _db_print will not call us recursively */</comment>
    <expr_stmt><expr><name pos:line="5" pos:column="5">Ctx_Lock<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">++<pos:position pos:line="5" pos:column="15"/></operator></expr>;<pos:position pos:line="5" pos:column="16"/></expr_stmt>
    <comment type="block" pos:line="6" pos:column="5">/* ok, user saw [0,Ctx_Reported_Level] descriptions */</comment>
    <comment type="block" pos:line="7" pos:column="5">/* first inform about entries popped since user saw them */</comment>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name pos:line="9" pos:column="9">Ctx_Valid_Level<pos:position pos:line="9" pos:column="24"/></name> <operator pos:line="9" pos:column="25">&lt;<pos:position pos:line="9" pos:column="29"/></operator> <name pos:line="9" pos:column="27">Ctx_Reported_Level<pos:position pos:line="9" pos:column="45"/></name></expr>)<pos:position pos:line="9" pos:column="46"/></condition><then pos:line="9" pos:column="46"> <block pos:line="9" pos:column="47">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><name pos:line="10" pos:column="13">Ctx_Reported_Level<pos:position pos:line="10" pos:column="31"/></name> <operator pos:line="10" pos:column="32">!=<pos:position pos:line="10" pos:column="34"/></operator> <name pos:line="10" pos:column="35">Ctx_Valid_Level<pos:position pos:line="10" pos:column="50"/></name> <operator pos:line="10" pos:column="51">+<pos:position pos:line="10" pos:column="52"/></operator> <literal type="number" pos:line="10" pos:column="53">1<pos:position pos:line="10" pos:column="54"/></literal></expr>)<pos:position pos:line="10" pos:column="55"/></condition><then pos:line="10" pos:column="55">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="11" pos:column="13">_db_print<pos:position pos:line="11" pos:column="22"/></name><argument_list pos:line="11" pos:column="22">(<argument><expr><literal type="string" pos:line="11" pos:column="23">"ctx: exit levels from %2d down to %2d\n"<pos:position pos:line="11" pos:column="64"/></literal></expr></argument>,
                      <argument><expr><name pos:line="12" pos:column="23">Ctx_Reported_Level<pos:position pos:line="12" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="12" pos:column="43">Ctx_Valid_Level<pos:position pos:line="12" pos:column="58"/></name> <operator pos:line="12" pos:column="59">+<pos:position pos:line="12" pos:column="60"/></operator> <literal type="number" pos:line="12" pos:column="61">1<pos:position pos:line="12" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="64"/></expr_stmt></block></then>
        <else pos:line="13" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="13">_db_print<pos:position pos:line="14" pos:column="22"/></name><argument_list pos:line="14" pos:column="22">(<argument><expr><literal type="string" pos:line="14" pos:column="23">"ctx: exit level %2d\n"<pos:position pos:line="14" pos:column="46"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">Ctx_Reported_Level<pos:position pos:line="14" pos:column="66"/></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt></block></else></if>

        <expr_stmt><expr><name pos:line="16" pos:column="9">Ctx_Reported_Level<pos:position pos:line="16" pos:column="27"/></name> <operator pos:line="16" pos:column="28">=<pos:position pos:line="16" pos:column="29"/></operator> <name pos:line="16" pos:column="30">Ctx_Valid_Level<pos:position pos:line="16" pos:column="45"/></name></expr>;<pos:position pos:line="16" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="19" pos:column="5">/* report new contexts that were pushed since last report */</comment>
    <while pos:line="20" pos:column="5">while <condition pos:line="20" pos:column="11">(<expr><name pos:line="20" pos:column="12">Ctx_Reported_Level<pos:position pos:line="20" pos:column="30"/></name> <operator pos:line="20" pos:column="31">&lt;<pos:position pos:line="20" pos:column="35"/></operator> <name pos:line="20" pos:column="33">Ctx_Current_Level<pos:position pos:line="20" pos:column="50"/></name></expr>)<pos:position pos:line="20" pos:column="51"/></condition> <block pos:line="20" pos:column="52">{
        <expr_stmt><expr><name pos:line="21" pos:column="9">Ctx_Reported_Level<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">++<pos:position pos:line="21" pos:column="29"/></operator></expr>;<pos:position pos:line="21" pos:column="30"/></expr_stmt>
        <expr_stmt><expr><name pos:line="22" pos:column="9">Ctx_Valid_Level<pos:position pos:line="22" pos:column="24"/></name><operator pos:line="22" pos:column="24">++<pos:position pos:line="22" pos:column="26"/></operator></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">_db_print<pos:position pos:line="23" pos:column="18"/></name><argument_list pos:line="23" pos:column="18">(<argument><expr><literal type="string" pos:line="23" pos:column="19">"ctx: enter level %2d: '%s'\n"<pos:position pos:line="23" pos:column="49"/></literal></expr></argument>, <argument><expr><name pos:line="23" pos:column="51">Ctx_Reported_Level<pos:position pos:line="23" pos:column="69"/></name></expr></argument>,
                  <argument><expr><call><name pos:line="24" pos:column="19">ctx_get_descr<pos:position pos:line="24" pos:column="32"/></name><argument_list pos:line="24" pos:column="32">(<argument><expr><name pos:line="24" pos:column="33">Ctx_Reported_Level<pos:position pos:line="24" pos:column="51"/></name></expr></argument>)<pos:position pos:line="24" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="54"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></while>

    <comment type="block" pos:line="27" pos:column="5">/* unlock */</comment>
    <expr_stmt><expr><name pos:line="28" pos:column="5">Ctx_Lock<pos:position pos:line="28" pos:column="13"/></name><operator pos:line="28" pos:column="13">--<pos:position pos:line="28" pos:column="15"/></operator></expr>;<pos:position pos:line="28" pos:column="16"/></expr_stmt>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

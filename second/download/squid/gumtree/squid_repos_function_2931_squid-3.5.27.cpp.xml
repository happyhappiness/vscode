<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2931_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">ChunkedCodingParser<pos:position pos:line="1" pos:column="25"/></name><operator pos:line="1" pos:column="25">::<pos:position pos:line="1" pos:column="27"/></operator><name pos:line="1" pos:column="27">needsMoreSpace<pos:position pos:line="1" pos:column="41"/></name></name><parameter_list pos:line="1" pos:column="41">()<pos:position pos:line="1" pos:column="43"/></parameter_list> <specifier pos:line="1" pos:column="44">const<pos:position pos:line="1" pos:column="49"/></specifier>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">assert<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><name pos:line="3" pos:column="12">theOut<pos:position pos:line="3" pos:column="18"/></name></expr></argument>)<pos:position pos:line="3" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="20"/></expr_stmt>
    <return pos:line="4" pos:column="5">return <expr><name pos:line="4" pos:column="12">theStep<pos:position pos:line="4" pos:column="19"/></name> <operator pos:line="4" pos:column="20">==<pos:position pos:line="4" pos:column="22"/></operator> <name pos:line="4" pos:column="23">psChunkBody<pos:position pos:line="4" pos:column="34"/></name> <operator pos:line="4" pos:column="35">&amp;&amp;<pos:position pos:line="4" pos:column="45"/></operator> <operator pos:line="4" pos:column="38">!<pos:position pos:line="4" pos:column="39"/></operator><call><name><name pos:line="4" pos:column="39">theOut<pos:position pos:line="4" pos:column="45"/></name><operator pos:line="4" pos:column="45">-&gt;<pos:position pos:line="4" pos:column="50"/></operator><name pos:line="4" pos:column="47">hasPotentialSpace<pos:position pos:line="4" pos:column="64"/></name></name><argument_list pos:line="4" pos:column="64">()<pos:position pos:line="4" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="67"/></return>
}<pos:position pos:line="5" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3507_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">clientHttpConnectionsOpen<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">void<pos:position pos:line="2" pos:column="31"/></name></type></decl></parameter>)<pos:position pos:line="2" pos:column="32"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">http_port_list<pos:position pos:line="4" pos:column="19"/></name> <modifier pos:line="4" pos:column="20">*<pos:position pos:line="4" pos:column="21"/></modifier></type><name pos:line="4" pos:column="21">s<pos:position pos:line="4" pos:column="22"/></name> <init pos:line="4" pos:column="23">= <expr><name pos:line="4" pos:column="25">NULL<pos:position pos:line="4" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="30"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">fd<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><operator pos:line="5" pos:column="14">-<pos:position pos:line="5" pos:column="15"/></operator><literal type="number" pos:line="5" pos:column="15">1<pos:position pos:line="5" pos:column="16"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="17"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_SSL<pos:position pos:line="6" pos:column="12"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">int<pos:position pos:line="7" pos:column="8"/></name></type> <name pos:line="7" pos:column="9">bumpCount<pos:position pos:line="7" pos:column="18"/></name> <init pos:line="7" pos:column="19">= <expr><literal type="number" pos:line="7" pos:column="21">0<pos:position pos:line="7" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="23"/></decl_stmt> <comment type="line" pos:line="7" pos:column="24">// counts http_ports with sslBump option</comment>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>

    <for pos:line="10" pos:column="5">for <control pos:line="10" pos:column="9">(<init><expr><name pos:line="10" pos:column="10">s<pos:position pos:line="10" pos:column="11"/></name> <operator pos:line="10" pos:column="12">=<pos:position pos:line="10" pos:column="13"/></operator> <name><name pos:line="10" pos:column="14">Config<pos:position pos:line="10" pos:column="20"/></name><operator pos:line="10" pos:column="20">.<pos:position pos:line="10" pos:column="21"/></operator><name pos:line="10" pos:column="21">Sockaddr<pos:position pos:line="10" pos:column="29"/></name><operator pos:line="10" pos:column="29">.<pos:position pos:line="10" pos:column="30"/></operator><name pos:line="10" pos:column="30">http<pos:position pos:line="10" pos:column="34"/></name></name></expr>;<pos:position pos:line="10" pos:column="35"/></init> <condition><expr><name pos:line="10" pos:column="36">s<pos:position pos:line="10" pos:column="37"/></name></expr>;<pos:position pos:line="10" pos:column="38"/></condition> <incr><expr><name pos:line="10" pos:column="39">s<pos:position pos:line="10" pos:column="40"/></name> <operator pos:line="10" pos:column="41">=<pos:position pos:line="10" pos:column="42"/></operator> <name><name pos:line="10" pos:column="43">s<pos:position pos:line="10" pos:column="44"/></name><operator pos:line="10" pos:column="44">-&gt;<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="46">next<pos:position pos:line="10" pos:column="50"/></name></name></expr></incr>)<pos:position pos:line="10" pos:column="51"/></control> <block pos:line="10" pos:column="52">{
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">MAXHTTPPORTS<pos:position pos:line="11" pos:column="25"/></name> <operator pos:line="11" pos:column="26">==<pos:position pos:line="11" pos:column="28"/></operator> <name pos:line="11" pos:column="29">NHttpSockets<pos:position pos:line="11" pos:column="41"/></name></expr>)<pos:position pos:line="11" pos:column="42"/></condition><then pos:line="11" pos:column="42"> <block pos:line="11" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">debugs<pos:position pos:line="12" pos:column="19"/></name><argument_list pos:line="12" pos:column="19">(<argument><expr><literal type="number" pos:line="12" pos:column="20">1<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="23">1<pos:position pos:line="12" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="26">"WARNING: You have too many 'http_port' lines."<pos:position pos:line="12" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="75"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">debugs<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">1<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="23">1<pos:position pos:line="13" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="26">"         The limit is "<pos:position pos:line="13" pos:column="50"/></literal> <operator pos:line="13" pos:column="51">&lt;&lt;<pos:position pos:line="13" pos:column="59"/></operator> <name pos:line="13" pos:column="54">MAXHTTPPORTS<pos:position pos:line="13" pos:column="66"/></name></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
            <continue pos:line="14" pos:column="13">continue;<pos:position pos:line="14" pos:column="22"/></continue>
        }<pos:position pos:line="15" pos:column="10"/></block></then></if>

<cpp:if pos:line="17" pos:column="1">#<cpp:directive pos:line="17" pos:column="2">if<pos:position pos:line="17" pos:column="4"/></cpp:directive> <expr><name pos:line="17" pos:column="5">USE_SSL<pos:position pos:line="17" pos:column="12"/></name></expr></cpp:if>
        <if pos:line="18" pos:column="9">if <condition pos:line="18" pos:column="12">(<expr><name><name pos:line="18" pos:column="13">s<pos:position pos:line="18" pos:column="14"/></name><operator pos:line="18" pos:column="14">-&gt;<pos:position pos:line="18" pos:column="19"/></operator><name pos:line="18" pos:column="16">sslBump<pos:position pos:line="18" pos:column="23"/></name></name> <operator pos:line="18" pos:column="24">&amp;&amp;<pos:position pos:line="18" pos:column="34"/></operator>
                <operator pos:line="19" pos:column="17">!<pos:position pos:line="19" pos:column="18"/></operator><name><name pos:line="19" pos:column="18">s<pos:position pos:line="19" pos:column="19"/></name><operator pos:line="19" pos:column="19">-&gt;<pos:position pos:line="19" pos:column="24"/></operator><name pos:line="19" pos:column="21">staticSslContext<pos:position pos:line="19" pos:column="37"/></name></name> <operator pos:line="19" pos:column="38">&amp;&amp;<pos:position pos:line="19" pos:column="48"/></operator> <operator pos:line="19" pos:column="41">!<pos:position pos:line="19" pos:column="42"/></operator><name><name pos:line="19" pos:column="42">s<pos:position pos:line="19" pos:column="43"/></name><operator pos:line="19" pos:column="43">-&gt;<pos:position pos:line="19" pos:column="48"/></operator><name pos:line="19" pos:column="45">generateHostCertificates<pos:position pos:line="19" pos:column="69"/></name></name></expr>)<pos:position pos:line="19" pos:column="70"/></condition><then pos:line="19" pos:column="70"> <block pos:line="19" pos:column="71">{
            <expr_stmt><expr><call><name pos:line="20" pos:column="13">debugs<pos:position pos:line="20" pos:column="19"/></name><argument_list pos:line="20" pos:column="19">(<argument><expr><literal type="number" pos:line="20" pos:column="20">1<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="23">1<pos:position pos:line="20" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="26">"Will not bump SSL at http_port "<pos:position pos:line="20" pos:column="59"/></literal> <operator pos:line="20" pos:column="60">&lt;&lt;<pos:position pos:line="20" pos:column="68"/></operator>
                   <name><name pos:line="21" pos:column="20">s<pos:position pos:line="21" pos:column="21"/></name><operator pos:line="21" pos:column="21">-&gt;<pos:position pos:line="21" pos:column="26"/></operator><name pos:line="21" pos:column="23">http<pos:position pos:line="21" pos:column="27"/></name><operator pos:line="21" pos:column="27">.<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">s<pos:position pos:line="21" pos:column="29"/></name></name> <operator pos:line="21" pos:column="30">&lt;&lt;<pos:position pos:line="21" pos:column="38"/></operator> <literal type="string" pos:line="21" pos:column="33">" due to SSL initialization failure."<pos:position pos:line="21" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="72"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="22" pos:column="13">s<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">sslBump<pos:position pos:line="22" pos:column="23"/></name></name> <operator pos:line="22" pos:column="24">=<pos:position pos:line="22" pos:column="25"/></operator> <literal type="number" pos:line="22" pos:column="26">0<pos:position pos:line="22" pos:column="27"/></literal></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
        }<pos:position pos:line="23" pos:column="10"/></block></then></if>
        <if pos:line="24" pos:column="9">if <condition pos:line="24" pos:column="12">(<expr><name><name pos:line="24" pos:column="13">s<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">-&gt;<pos:position pos:line="24" pos:column="19"/></operator><name pos:line="24" pos:column="16">sslBump<pos:position pos:line="24" pos:column="23"/></name></name></expr>)<pos:position pos:line="24" pos:column="24"/></condition><then pos:line="24" pos:column="24"> <block pos:line="24" pos:column="25">{
            <expr_stmt><expr><operator pos:line="25" pos:column="13">++<pos:position pos:line="25" pos:column="15"/></operator><name pos:line="25" pos:column="15">bumpCount<pos:position pos:line="25" pos:column="24"/></name></expr>;<pos:position pos:line="25" pos:column="25"/></expr_stmt>
            <comment type="line" pos:line="26" pos:column="13">// Create ssl_ctx cache for this port.</comment>
            <expr_stmt><expr><call><name><name pos:line="27" pos:column="13">Ssl<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">::<pos:position pos:line="27" pos:column="18"/></operator><name pos:line="27" pos:column="18">TheGlobalContextStorage<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">.<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="42">addLocalStorage<pos:position pos:line="27" pos:column="57"/></name></name><argument_list pos:line="27" pos:column="57">(<argument><expr><name><name pos:line="27" pos:column="58">s<pos:position pos:line="27" pos:column="59"/></name><operator pos:line="27" pos:column="59">-&gt;<pos:position pos:line="27" pos:column="64"/></operator><name pos:line="27" pos:column="61">s<pos:position pos:line="27" pos:column="62"/></name></name></expr></argument>, <argument><expr><ternary><condition><expr><name><name pos:line="27" pos:column="64">s<pos:position pos:line="27" pos:column="65"/></name><operator pos:line="27" pos:column="65">-&gt;<pos:position pos:line="27" pos:column="70"/></operator><name pos:line="27" pos:column="67">dynamicCertMemCacheSize<pos:position pos:line="27" pos:column="90"/></name></name> <operator pos:line="27" pos:column="91">==<pos:position pos:line="27" pos:column="93"/></operator> <call><name><name pos:line="27" pos:column="94">std<pos:position pos:line="27" pos:column="97"/></name><operator pos:line="27" pos:column="97">::<pos:position pos:line="27" pos:column="99"/></operator><name><name pos:line="27" pos:column="99">numeric_limits<pos:position pos:line="27" pos:column="113"/></name><argument_list type="generic" pos:line="27" pos:column="113">&lt;<argument><expr><name pos:line="27" pos:column="114">size_t<pos:position pos:line="27" pos:column="120"/></name></expr></argument>&gt;<pos:position pos:line="27" pos:column="124"/></argument_list></name><operator pos:line="27" pos:column="121">::<pos:position pos:line="27" pos:column="123"/></operator><name pos:line="27" pos:column="123">max<pos:position pos:line="27" pos:column="126"/></name></name><argument_list pos:line="27" pos:column="126">()<pos:position pos:line="27" pos:column="128"/></argument_list></call></expr> ?<pos:position pos:line="27" pos:column="130"/></condition><then pos:line="27" pos:column="130"> <expr><literal type="number" pos:line="27" pos:column="131">4194304<pos:position pos:line="27" pos:column="138"/></literal></expr> <pos:position pos:line="27" pos:column="139"/></then><else pos:line="27" pos:column="139">: <expr><name><name pos:line="27" pos:column="141">s<pos:position pos:line="27" pos:column="142"/></name><operator pos:line="27" pos:column="142">-&gt;<pos:position pos:line="27" pos:column="147"/></operator><name pos:line="27" pos:column="144">dynamicCertMemCacheSize<pos:position pos:line="27" pos:column="167"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="27" pos:column="168"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="169"/></expr_stmt>
        }<pos:position pos:line="28" pos:column="10"/></block></then></if>
<cpp:endif pos:line="29" pos:column="1">#<cpp:directive pos:line="29" pos:column="2">endif<pos:position pos:line="29" pos:column="7"/></cpp:directive></cpp:endif>
<cpp:if pos:line="30" pos:column="1">#<cpp:directive pos:line="30" pos:column="2">if<pos:position pos:line="30" pos:column="4"/></cpp:directive> <expr><name pos:line="30" pos:column="5">USE_SSL_CRTD<pos:position pos:line="30" pos:column="17"/></name></expr></cpp:if>
        <expr_stmt><expr><call><name><name pos:line="31" pos:column="9">Ssl<pos:position pos:line="31" pos:column="12"/></name><operator pos:line="31" pos:column="12">::<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="14">Helper<pos:position pos:line="31" pos:column="20"/></name><operator pos:line="31" pos:column="20">::<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="22">GetInstance<pos:position pos:line="31" pos:column="33"/></name></name><argument_list pos:line="31" pos:column="33">()<pos:position pos:line="31" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="31" pos:column="36"/></expr_stmt>
<cpp:endif pos:line="32" pos:column="1">#<cpp:directive pos:line="32" pos:column="2">endif<pos:position pos:line="32" pos:column="7"/></cpp:directive></cpp:endif> <comment type="line" pos:line="32" pos:column="8">//USE_SSL_CRTD</comment>

        <expr_stmt><expr><call><name pos:line="34" pos:column="9">enter_suid<pos:position pos:line="34" pos:column="19"/></name><argument_list pos:line="34" pos:column="19">()<pos:position pos:line="34" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="22"/></expr_stmt>

        <if pos:line="36" pos:column="9">if <condition pos:line="36" pos:column="12">(<expr><name><name pos:line="36" pos:column="13">s<pos:position pos:line="36" pos:column="14"/></name><operator pos:line="36" pos:column="14">-&gt;<pos:position pos:line="36" pos:column="19"/></operator><name pos:line="36" pos:column="16">spoof_client_ip<pos:position pos:line="36" pos:column="31"/></name></name></expr>)<pos:position pos:line="36" pos:column="32"/></condition><then pos:line="36" pos:column="32"> <block pos:line="36" pos:column="33">{
            <expr_stmt><expr><name pos:line="37" pos:column="13">fd<pos:position pos:line="37" pos:column="15"/></name> <operator pos:line="37" pos:column="16">=<pos:position pos:line="37" pos:column="17"/></operator> <call><name pos:line="37" pos:column="18">comm_open_listener<pos:position pos:line="37" pos:column="36"/></name><argument_list pos:line="37" pos:column="36">(<argument><expr><name pos:line="37" pos:column="37">SOCK_STREAM<pos:position pos:line="37" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="50">IPPROTO_TCP<pos:position pos:line="37" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="63">s<pos:position pos:line="37" pos:column="64"/></name><operator pos:line="37" pos:column="64">-&gt;<pos:position pos:line="37" pos:column="69"/></operator><name pos:line="37" pos:column="66">s<pos:position pos:line="37" pos:column="67"/></name></name></expr></argument>, <argument><expr><operator pos:line="37" pos:column="69">(<pos:position pos:line="37" pos:column="70"/></operator><name pos:line="37" pos:column="70">COMM_NONBLOCKING<pos:position pos:line="37" pos:column="86"/></name><operator pos:line="37" pos:column="86">|<pos:position pos:line="37" pos:column="87"/></operator><name pos:line="37" pos:column="87">COMM_TRANSPARENT<pos:position pos:line="37" pos:column="103"/></name><operator pos:line="37" pos:column="103">)<pos:position pos:line="37" pos:column="104"/></operator></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="106">"HTTP Socket"<pos:position pos:line="37" pos:column="119"/></literal></expr></argument>)<pos:position pos:line="37" pos:column="120"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="121"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></then> <else pos:line="38" pos:column="11">else <block pos:line="38" pos:column="16">{
            <expr_stmt><expr><name pos:line="39" pos:column="13">fd<pos:position pos:line="39" pos:column="15"/></name> <operator pos:line="39" pos:column="16">=<pos:position pos:line="39" pos:column="17"/></operator> <call><name pos:line="39" pos:column="18">comm_open_listener<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><name pos:line="39" pos:column="37">SOCK_STREAM<pos:position pos:line="39" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="50">IPPROTO_TCP<pos:position pos:line="39" pos:column="61"/></name></expr></argument>, <argument><expr><name><name pos:line="39" pos:column="63">s<pos:position pos:line="39" pos:column="64"/></name><operator pos:line="39" pos:column="64">-&gt;<pos:position pos:line="39" pos:column="69"/></operator><name pos:line="39" pos:column="66">s<pos:position pos:line="39" pos:column="67"/></name></name></expr></argument>, <argument><expr><name pos:line="39" pos:column="69">COMM_NONBLOCKING<pos:position pos:line="39" pos:column="85"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="87">"HTTP Socket"<pos:position pos:line="39" pos:column="100"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="101"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="102"/></expr_stmt>
        }<pos:position pos:line="40" pos:column="10"/></block></else></if>

        <expr_stmt><expr><call><name pos:line="42" pos:column="9">leave_suid<pos:position pos:line="42" pos:column="19"/></name><argument_list pos:line="42" pos:column="19">()<pos:position pos:line="42" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="22"/></expr_stmt>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name pos:line="44" pos:column="13">fd<pos:position pos:line="44" pos:column="15"/></name> <operator pos:line="44" pos:column="16">&lt;<pos:position pos:line="44" pos:column="20"/></operator> <literal type="number" pos:line="44" pos:column="18">0<pos:position pos:line="44" pos:column="19"/></literal></expr>)<pos:position pos:line="44" pos:column="20"/></condition><then pos:line="44" pos:column="20">
            <block type="pseudo"><continue pos:line="45" pos:column="13">continue;<pos:position pos:line="45" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="47" pos:column="9">comm_listen<pos:position pos:line="47" pos:column="20"/></name><argument_list pos:line="47" pos:column="20">(<argument><expr><name pos:line="47" pos:column="21">fd<pos:position pos:line="47" pos:column="23"/></name></expr></argument>)<pos:position pos:line="47" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="25"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="49" pos:column="9">comm_accept<pos:position pos:line="49" pos:column="20"/></name><argument_list pos:line="49" pos:column="20">(<argument><expr><name pos:line="49" pos:column="21">fd<pos:position pos:line="49" pos:column="23"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="25">httpAccept<pos:position pos:line="49" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="49" pos:column="37">s<pos:position pos:line="49" pos:column="38"/></name></expr></argument>)<pos:position pos:line="49" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="40"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="51" pos:column="9">debugs<pos:position pos:line="51" pos:column="15"/></name><argument_list pos:line="51" pos:column="15">(<argument><expr><literal type="number" pos:line="51" pos:column="16">1<pos:position pos:line="51" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="51" pos:column="19">1<pos:position pos:line="51" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="51" pos:column="22">"Accepting "<pos:position pos:line="51" pos:column="34"/></literal> <operator pos:line="51" pos:column="35">&lt;&lt;<pos:position pos:line="51" pos:column="43"/></operator>
               <operator pos:line="52" pos:column="16">(<pos:position pos:line="52" pos:column="17"/></operator><ternary><condition><expr><name><name pos:line="52" pos:column="17">s<pos:position pos:line="52" pos:column="18"/></name><operator pos:line="52" pos:column="18">-&gt;<pos:position pos:line="52" pos:column="23"/></operator><name pos:line="52" pos:column="20">intercepted<pos:position pos:line="52" pos:column="31"/></name></name></expr> ?<pos:position pos:line="52" pos:column="33"/></condition><then pos:line="52" pos:column="33"> <expr><literal type="string" pos:line="52" pos:column="34">" intercepted"<pos:position pos:line="52" pos:column="48"/></literal></expr> <pos:position pos:line="52" pos:column="49"/></then><else pos:line="52" pos:column="49">: <expr><literal type="string" pos:line="52" pos:column="51">""<pos:position pos:line="52" pos:column="53"/></literal></expr></else></ternary><operator pos:line="52" pos:column="53">)<pos:position pos:line="52" pos:column="54"/></operator> <operator pos:line="52" pos:column="55">&lt;&lt;<pos:position pos:line="52" pos:column="63"/></operator>
               <operator pos:line="53" pos:column="16">(<pos:position pos:line="53" pos:column="17"/></operator><ternary><condition><expr><name><name pos:line="53" pos:column="17">s<pos:position pos:line="53" pos:column="18"/></name><operator pos:line="53" pos:column="18">-&gt;<pos:position pos:line="53" pos:column="23"/></operator><name pos:line="53" pos:column="20">spoof_client_ip<pos:position pos:line="53" pos:column="35"/></name></name></expr> ?<pos:position pos:line="53" pos:column="37"/></condition><then pos:line="53" pos:column="37"> <expr><literal type="string" pos:line="53" pos:column="38">" spoofing"<pos:position pos:line="53" pos:column="49"/></literal></expr> <pos:position pos:line="53" pos:column="50"/></then><else pos:line="53" pos:column="50">: <expr><literal type="string" pos:line="53" pos:column="52">""<pos:position pos:line="53" pos:column="54"/></literal></expr></else></ternary><operator pos:line="53" pos:column="54">)<pos:position pos:line="53" pos:column="55"/></operator> <operator pos:line="53" pos:column="56">&lt;&lt;<pos:position pos:line="53" pos:column="64"/></operator>
               <operator pos:line="54" pos:column="16">(<pos:position pos:line="54" pos:column="17"/></operator><ternary><condition><expr><name><name pos:line="54" pos:column="17">s<pos:position pos:line="54" pos:column="18"/></name><operator pos:line="54" pos:column="18">-&gt;<pos:position pos:line="54" pos:column="23"/></operator><name pos:line="54" pos:column="20">sslBump<pos:position pos:line="54" pos:column="27"/></name></name></expr> ?<pos:position pos:line="54" pos:column="29"/></condition><then pos:line="54" pos:column="29"> <expr><literal type="string" pos:line="54" pos:column="30">" bumpy"<pos:position pos:line="54" pos:column="38"/></literal></expr> <pos:position pos:line="54" pos:column="39"/></then><else pos:line="54" pos:column="39">: <expr><literal type="string" pos:line="54" pos:column="41">""<pos:position pos:line="54" pos:column="43"/></literal></expr></else></ternary><operator pos:line="54" pos:column="43">)<pos:position pos:line="54" pos:column="44"/></operator> <operator pos:line="54" pos:column="45">&lt;&lt;<pos:position pos:line="54" pos:column="53"/></operator>
               <operator pos:line="55" pos:column="16">(<pos:position pos:line="55" pos:column="17"/></operator><ternary><condition><expr><name><name pos:line="55" pos:column="17">s<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">accel<pos:position pos:line="55" pos:column="25"/></name></name></expr> ?<pos:position pos:line="55" pos:column="27"/></condition><then pos:line="55" pos:column="27"> <expr><literal type="string" pos:line="55" pos:column="28">" accelerated"<pos:position pos:line="55" pos:column="42"/></literal></expr> <pos:position pos:line="55" pos:column="43"/></then><else pos:line="55" pos:column="43">: <expr><literal type="string" pos:line="55" pos:column="45">""<pos:position pos:line="55" pos:column="47"/></literal></expr></else></ternary><operator pos:line="55" pos:column="47">)<pos:position pos:line="55" pos:column="48"/></operator>
               <operator pos:line="56" pos:column="16">&lt;&lt;<pos:position pos:line="56" pos:column="24"/></operator> <literal type="string" pos:line="56" pos:column="19">" HTTP connections at "<pos:position pos:line="56" pos:column="42"/></literal> <operator pos:line="56" pos:column="43">&lt;&lt;<pos:position pos:line="56" pos:column="51"/></operator> <name><name pos:line="56" pos:column="46">s<pos:position pos:line="56" pos:column="47"/></name><operator pos:line="56" pos:column="47">-&gt;<pos:position pos:line="56" pos:column="52"/></operator><name pos:line="56" pos:column="49">s<pos:position pos:line="56" pos:column="50"/></name></name>
               <operator pos:line="57" pos:column="16">&lt;&lt;<pos:position pos:line="57" pos:column="24"/></operator> <literal type="string" pos:line="57" pos:column="19">", FD "<pos:position pos:line="57" pos:column="26"/></literal> <operator pos:line="57" pos:column="27">&lt;&lt;<pos:position pos:line="57" pos:column="35"/></operator> <name pos:line="57" pos:column="30">fd<pos:position pos:line="57" pos:column="32"/></name> <operator pos:line="57" pos:column="33">&lt;&lt;<pos:position pos:line="57" pos:column="41"/></operator> <literal type="string" pos:line="57" pos:column="36">"."<pos:position pos:line="57" pos:column="39"/></literal></expr></argument> )<pos:position pos:line="57" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="42"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="59" pos:column="9">HttpSockets<pos:position pos:line="59" pos:column="20"/></name><index pos:line="59" pos:column="20">[<expr><name pos:line="59" pos:column="21">NHttpSockets<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">++<pos:position pos:line="59" pos:column="35"/></operator></expr>]<pos:position pos:line="59" pos:column="36"/></index></name> <operator pos:line="59" pos:column="37">=<pos:position pos:line="59" pos:column="38"/></operator> <name pos:line="59" pos:column="39">fd<pos:position pos:line="59" pos:column="41"/></name></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="60" pos:column="6"/></block></for>

<cpp:if pos:line="62" pos:column="1">#<cpp:directive pos:line="62" pos:column="2">if<pos:position pos:line="62" pos:column="4"/></cpp:directive> <expr><name pos:line="62" pos:column="5">USE_SSL<pos:position pos:line="62" pos:column="12"/></name></expr></cpp:if>
    <if pos:line="63" pos:column="5">if <condition pos:line="63" pos:column="8">(<expr><name pos:line="63" pos:column="9">bumpCount<pos:position pos:line="63" pos:column="18"/></name> <operator pos:line="63" pos:column="19">&amp;&amp;<pos:position pos:line="63" pos:column="29"/></operator> <operator pos:line="63" pos:column="22">!<pos:position pos:line="63" pos:column="23"/></operator><name><name pos:line="63" pos:column="23">Config<pos:position pos:line="63" pos:column="29"/></name><operator pos:line="63" pos:column="29">.<pos:position pos:line="63" pos:column="30"/></operator><name pos:line="63" pos:column="30">accessList<pos:position pos:line="63" pos:column="40"/></name><operator pos:line="63" pos:column="40">.<pos:position pos:line="63" pos:column="41"/></operator><name pos:line="63" pos:column="41">ssl_bump<pos:position pos:line="63" pos:column="49"/></name></name></expr>)<pos:position pos:line="63" pos:column="50"/></condition><then pos:line="63" pos:column="50">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="64" pos:column="9">debugs<pos:position pos:line="64" pos:column="15"/></name><argument_list pos:line="64" pos:column="15">(<argument><expr><literal type="number" pos:line="64" pos:column="16">33<pos:position pos:line="64" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="64" pos:column="20">1<pos:position pos:line="64" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="64" pos:column="23">"WARNING: http_port(s) with SslBump found, but no "<pos:position pos:line="64" pos:column="74"/></literal> <operator pos:line="64" pos:column="75">&lt;&lt;<pos:position pos:line="64" pos:column="83"/></operator>
               <name><name pos:line="65" pos:column="16">std<pos:position pos:line="65" pos:column="19"/></name><operator pos:line="65" pos:column="19">::<pos:position pos:line="65" pos:column="21"/></operator><name pos:line="65" pos:column="21">endl<pos:position pos:line="65" pos:column="25"/></name></name> <operator pos:line="65" pos:column="26">&lt;&lt;<pos:position pos:line="65" pos:column="34"/></operator> <literal type="string" pos:line="65" pos:column="29">"\tssl_bump ACL configured. No requests will be "<pos:position pos:line="65" pos:column="78"/></literal> <operator pos:line="65" pos:column="79">&lt;&lt;<pos:position pos:line="65" pos:column="87"/></operator>
               <literal type="string" pos:line="66" pos:column="16">"bumped."<pos:position pos:line="66" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="66" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="66" pos:column="27"/></expr_stmt></block></then></if>
<cpp:endif pos:line="67" pos:column="1">#<cpp:directive pos:line="67" pos:column="2">endif<pos:position pos:line="67" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="68" pos:column="2"/></block></function></unit>

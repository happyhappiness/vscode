<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2547_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">StoreEntry<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">modifiedSince<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><specifier pos:line="2" pos:column="27">const<pos:position pos:line="2" pos:column="32"/></specifier> <name pos:line="2" pos:column="33">time_t<pos:position pos:line="2" pos:column="39"/></name></type> <name pos:line="2" pos:column="40">ims<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="45">const<pos:position pos:line="2" pos:column="50"/></specifier> <name pos:line="2" pos:column="51">int<pos:position pos:line="2" pos:column="54"/></name></type> <name pos:line="2" pos:column="55">imslen<pos:position pos:line="2" pos:column="61"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="62"/></parameter_list> <specifier pos:line="2" pos:column="63">const<pos:position pos:line="2" pos:column="68"/></specifier>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">object_length<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">time_t<pos:position pos:line="5" pos:column="17"/></name></type> <name pos:line="5" pos:column="18">mod_time<pos:position pos:line="5" pos:column="26"/></name> <init pos:line="5" pos:column="27">= <expr><call><name pos:line="5" pos:column="29">lastModified<pos:position pos:line="5" pos:column="41"/></name><argument_list pos:line="5" pos:column="41">()<pos:position pos:line="5" pos:column="43"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="44"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">88<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">3<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"modifiedSince: '"<pos:position pos:line="7" pos:column="37"/></literal> <operator pos:line="7" pos:column="38">&lt;&lt;<pos:position pos:line="7" pos:column="46"/></operator> <call><name pos:line="7" pos:column="41">url<pos:position pos:line="7" pos:column="44"/></name><argument_list pos:line="7" pos:column="44">()<pos:position pos:line="7" pos:column="46"/></argument_list></call> <operator pos:line="7" pos:column="47">&lt;&lt;<pos:position pos:line="7" pos:column="55"/></operator> <literal type="string" pos:line="7" pos:column="50">"'"<pos:position pos:line="7" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="7" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="9" pos:column="5">debugs<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><literal type="number" pos:line="9" pos:column="12">88<pos:position pos:line="9" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="16">3<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="19">"modifiedSince: mod_time = "<pos:position pos:line="9" pos:column="47"/></literal> <operator pos:line="9" pos:column="48">&lt;&lt;<pos:position pos:line="9" pos:column="56"/></operator> <name pos:line="9" pos:column="51">mod_time<pos:position pos:line="9" pos:column="59"/></name></expr></argument>)<pos:position pos:line="9" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="61"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">mod_time<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&lt;<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal></expr>)<pos:position pos:line="11" pos:column="22"/></condition><then pos:line="11" pos:column="22">
        <block type="pseudo"><return pos:line="12" pos:column="9">return <expr><literal type="boolean" pos:line="12" pos:column="16">true<pos:position pos:line="12" pos:column="20"/></literal></expr>;<pos:position pos:line="12" pos:column="21"/></return></block></then></if>

    <comment type="block" pos:line="14" pos:column="5">/* Find size of the object */</comment>
    <expr_stmt><expr><name pos:line="15" pos:column="5">object_length<pos:position pos:line="15" pos:column="18"/></name> <operator pos:line="15" pos:column="19">=<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">getReply<pos:position pos:line="15" pos:column="29"/></name><argument_list pos:line="15" pos:column="29">()<pos:position pos:line="15" pos:column="31"/></argument_list></call><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">content_length<pos:position pos:line="15" pos:column="47"/></name></expr>;<pos:position pos:line="15" pos:column="48"/></expr_stmt>

    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">(<expr><name pos:line="17" pos:column="9">object_length<pos:position pos:line="17" pos:column="22"/></name> <operator pos:line="17" pos:column="23">&lt;<pos:position pos:line="17" pos:column="27"/></operator> <literal type="number" pos:line="17" pos:column="25">0<pos:position pos:line="17" pos:column="26"/></literal></expr>)<pos:position pos:line="17" pos:column="27"/></condition><then pos:line="17" pos:column="27">
        <block type="pseudo"><expr_stmt><expr><name pos:line="18" pos:column="9">object_length<pos:position pos:line="18" pos:column="22"/></name> <operator pos:line="18" pos:column="23">=<pos:position pos:line="18" pos:column="24"/></operator> <call><name pos:line="18" pos:column="25">contentLen<pos:position pos:line="18" pos:column="35"/></name><argument_list pos:line="18" pos:column="35">()<pos:position pos:line="18" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="38"/></expr_stmt></block></then></if>

    <if pos:line="20" pos:column="5">if <condition pos:line="20" pos:column="8">(<expr><name pos:line="20" pos:column="9">mod_time<pos:position pos:line="20" pos:column="17"/></name> <operator pos:line="20" pos:column="18">&gt;<pos:position pos:line="20" pos:column="22"/></operator> <name pos:line="20" pos:column="20">ims<pos:position pos:line="20" pos:column="23"/></name></expr>)<pos:position pos:line="20" pos:column="24"/></condition><then pos:line="20" pos:column="24"> <block pos:line="20" pos:column="25">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">88<pos:position pos:line="21" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="20">3<pos:position pos:line="21" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="23">"--&gt; YES: entry newer than client"<pos:position pos:line="21" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="21" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="59"/></expr_stmt>
        <return pos:line="22" pos:column="9">return <expr><literal type="boolean" pos:line="22" pos:column="16">true<pos:position pos:line="22" pos:column="20"/></literal></expr>;<pos:position pos:line="22" pos:column="21"/></return>
    }<pos:position pos:line="23" pos:column="6"/></block></then> <elseif pos:line="23" pos:column="7">else <if pos:line="23" pos:column="12">if <condition pos:line="23" pos:column="15">(<expr><name pos:line="23" pos:column="16">mod_time<pos:position pos:line="23" pos:column="24"/></name> <operator pos:line="23" pos:column="25">&lt;<pos:position pos:line="23" pos:column="29"/></operator> <name pos:line="23" pos:column="27">ims<pos:position pos:line="23" pos:column="30"/></name></expr>)<pos:position pos:line="23" pos:column="31"/></condition><then pos:line="23" pos:column="31"> <block pos:line="23" pos:column="32">{
        <expr_stmt><expr><call><name pos:line="24" pos:column="9">debugs<pos:position pos:line="24" pos:column="15"/></name><argument_list pos:line="24" pos:column="15">(<argument><expr><literal type="number" pos:line="24" pos:column="16">88<pos:position pos:line="24" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="20">3<pos:position pos:line="24" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="23">"--&gt;  NO: entry older than client"<pos:position pos:line="24" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="59"/></expr_stmt>
        <return pos:line="25" pos:column="9">return <expr><literal type="boolean" pos:line="25" pos:column="16">false<pos:position pos:line="25" pos:column="21"/></literal></expr>;<pos:position pos:line="25" pos:column="22"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if></elseif> <elseif pos:line="26" pos:column="7">else <if pos:line="26" pos:column="12">if <condition pos:line="26" pos:column="15">(<expr><name pos:line="26" pos:column="16">imslen<pos:position pos:line="26" pos:column="22"/></name> <operator pos:line="26" pos:column="23">&lt;<pos:position pos:line="26" pos:column="27"/></operator> <literal type="number" pos:line="26" pos:column="25">0<pos:position pos:line="26" pos:column="26"/></literal></expr>)<pos:position pos:line="26" pos:column="27"/></condition><then pos:line="26" pos:column="27"> <block pos:line="26" pos:column="28">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">debugs<pos:position pos:line="27" pos:column="15"/></name><argument_list pos:line="27" pos:column="15">(<argument><expr><literal type="number" pos:line="27" pos:column="16">88<pos:position pos:line="27" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="27" pos:column="20">3<pos:position pos:line="27" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="23">"--&gt;  NO: same LMT, no client length"<pos:position pos:line="27" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
        <return pos:line="28" pos:column="9">return <expr><literal type="boolean" pos:line="28" pos:column="16">false<pos:position pos:line="28" pos:column="21"/></literal></expr>;<pos:position pos:line="28" pos:column="22"/></return>
    }<pos:position pos:line="29" pos:column="6"/></block></then></if></elseif> <elseif pos:line="29" pos:column="7">else <if pos:line="29" pos:column="12">if <condition pos:line="29" pos:column="15">(<expr><name pos:line="29" pos:column="16">imslen<pos:position pos:line="29" pos:column="22"/></name> <operator pos:line="29" pos:column="23">==<pos:position pos:line="29" pos:column="25"/></operator> <name pos:line="29" pos:column="26">object_length<pos:position pos:line="29" pos:column="39"/></name></expr>)<pos:position pos:line="29" pos:column="40"/></condition><then pos:line="29" pos:column="40"> <block pos:line="29" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">debugs<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="number" pos:line="30" pos:column="16">88<pos:position pos:line="30" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="20">3<pos:position pos:line="30" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="23">"--&gt;  NO: same LMT, same length"<pos:position pos:line="30" pos:column="58"/></literal></expr></argument>)<pos:position pos:line="30" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="57"/></expr_stmt>
        <return pos:line="31" pos:column="9">return <expr><literal type="boolean" pos:line="31" pos:column="16">false<pos:position pos:line="31" pos:column="21"/></literal></expr>;<pos:position pos:line="31" pos:column="22"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if></elseif> <else pos:line="32" pos:column="7">else <block pos:line="32" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="33" pos:column="9">debugs<pos:position pos:line="33" pos:column="15"/></name><argument_list pos:line="33" pos:column="15">(<argument><expr><literal type="number" pos:line="33" pos:column="16">88<pos:position pos:line="33" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="33" pos:column="20">3<pos:position pos:line="33" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="33" pos:column="23">"--&gt; YES: same LMT, different length"<pos:position pos:line="33" pos:column="63"/></literal></expr></argument>)<pos:position pos:line="33" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="62"/></expr_stmt>
        <return pos:line="34" pos:column="9">return <expr><literal type="boolean" pos:line="34" pos:column="16">true<pos:position pos:line="34" pos:column="20"/></literal></expr>;<pos:position pos:line="34" pos:column="21"/></return>
    }<pos:position pos:line="35" pos:column="6"/></block></else></if>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

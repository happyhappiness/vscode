<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_706_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">lt_module<pos:position pos:line="1" pos:column="17"/></name></type>
<name pos:line="2" pos:column="1">vm_open<pos:position pos:line="2" pos:column="8"/></name> <parameter_list pos:line="2" pos:column="9">(<parameter><decl><type><name pos:line="2" pos:column="10">lt_user_data<pos:position pos:line="2" pos:column="22"/></name> <name pos:line="2" pos:column="23">LT__UNUSED<pos:position pos:line="2" pos:column="33"/></name></type> <name pos:line="2" pos:column="34">loader_data<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="47">const<pos:position pos:line="2" pos:column="52"/></specifier> <name pos:line="2" pos:column="53">char<pos:position pos:line="2" pos:column="57"/></name> <modifier pos:line="2" pos:column="58">*<pos:position pos:line="2" pos:column="59"/></modifier></type><name pos:line="2" pos:column="59">filename<pos:position pos:line="2" pos:column="67"/></name></decl></parameter>,
         <parameter><decl><type><name pos:line="3" pos:column="10">lt_dladvise<pos:position pos:line="3" pos:column="21"/></name> <name pos:line="3" pos:column="22">LT__UNUSED<pos:position pos:line="3" pos:column="32"/></name></type> <name pos:line="3" pos:column="33">advise<pos:position pos:line="3" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="3" pos:column="40"/></parameter_list>
<block pos:line="4" pos:column="1">{
  <decl_stmt><decl><type><name pos:line="5" pos:column="3">symlist_chain<pos:position pos:line="5" pos:column="16"/></name> <modifier pos:line="5" pos:column="17">*<pos:position pos:line="5" pos:column="18"/></modifier></type><name pos:line="5" pos:column="18">lists<pos:position pos:line="5" pos:column="23"/></name></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
  <decl_stmt><decl><type><name pos:line="6" pos:column="3">lt_module<pos:position pos:line="6" pos:column="12"/></name></type>	 <name pos:line="6" pos:column="18">module<pos:position pos:line="6" pos:column="24"/></name> <init pos:line="6" pos:column="25">= <expr><literal type="number" pos:line="6" pos:column="27">0<pos:position pos:line="6" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

  <if pos:line="8" pos:column="3">if <condition pos:line="8" pos:column="6">(<expr><operator pos:line="8" pos:column="7">!<pos:position pos:line="8" pos:column="8"/></operator><name pos:line="8" pos:column="8">preloaded_symlists<pos:position pos:line="8" pos:column="26"/></name></expr>)<pos:position pos:line="8" pos:column="27"/></condition><then pos:line="8" pos:column="27">
    <block pos:line="9" pos:column="5">{
      <expr_stmt><expr><call><name pos:line="10" pos:column="7">LT__SETERROR<pos:position pos:line="10" pos:column="19"/></name> <argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">NO_SYMBOLS<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
      <goto pos:line="11" pos:column="7">goto <name pos:line="11" pos:column="12">done<pos:position pos:line="11" pos:column="16"/></name>;<pos:position pos:line="11" pos:column="17"/></goto>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

  <comment type="block" pos:line="14" pos:column="3">/* Can't use NULL as the reflective symbol header, as NULL is
     used to mark the end of the entire symbol list.  Self-dlpreopened
     symbols follow this magic number, chosen to be an unlikely
     clash with a real module name.  */</comment>
  <if pos:line="18" pos:column="3">if <condition pos:line="18" pos:column="6">(<expr><operator pos:line="18" pos:column="7">!<pos:position pos:line="18" pos:column="8"/></operator><name pos:line="18" pos:column="8">filename<pos:position pos:line="18" pos:column="16"/></name></expr>)<pos:position pos:line="18" pos:column="17"/></condition><then pos:line="18" pos:column="17">
    <block pos:line="19" pos:column="5">{
      <expr_stmt><expr><name pos:line="20" pos:column="7">filename<pos:position pos:line="20" pos:column="15"/></name> <operator pos:line="20" pos:column="16">=<pos:position pos:line="20" pos:column="17"/></operator> <literal type="string" pos:line="20" pos:column="18">"@PROGRAM@"<pos:position pos:line="20" pos:column="29"/></literal></expr>;<pos:position pos:line="20" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

  <for pos:line="23" pos:column="3">for <control pos:line="23" pos:column="7">(<init><expr><name pos:line="23" pos:column="8">lists<pos:position pos:line="23" pos:column="13"/></name> <operator pos:line="23" pos:column="14">=<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">preloaded_symlists<pos:position pos:line="23" pos:column="34"/></name></expr>;<pos:position pos:line="23" pos:column="35"/></init> <condition><expr><name pos:line="23" pos:column="36">lists<pos:position pos:line="23" pos:column="41"/></name></expr>;<pos:position pos:line="23" pos:column="42"/></condition> <incr><expr><name pos:line="23" pos:column="43">lists<pos:position pos:line="23" pos:column="48"/></name> <operator pos:line="23" pos:column="49">=<pos:position pos:line="23" pos:column="50"/></operator> <name><name pos:line="23" pos:column="51">lists<pos:position pos:line="23" pos:column="56"/></name><operator pos:line="23" pos:column="56">-&gt;<pos:position pos:line="23" pos:column="61"/></operator><name pos:line="23" pos:column="58">next<pos:position pos:line="23" pos:column="62"/></name></name></expr></incr>)<pos:position pos:line="23" pos:column="63"/></control>
    <block pos:line="24" pos:column="5">{
      <decl_stmt><decl><type><specifier pos:line="25" pos:column="7">const<pos:position pos:line="25" pos:column="12"/></specifier> <name pos:line="25" pos:column="13">lt_dlsymlist<pos:position pos:line="25" pos:column="25"/></name> <modifier pos:line="25" pos:column="26">*<pos:position pos:line="25" pos:column="27"/></modifier></type><name pos:line="25" pos:column="27">symbol<pos:position pos:line="25" pos:column="33"/></name></decl>;<pos:position pos:line="25" pos:column="34"/></decl_stmt>
      <for pos:line="26" pos:column="7">for <control pos:line="26" pos:column="11">(<init><expr><name pos:line="26" pos:column="12">symbol<pos:position pos:line="26" pos:column="18"/></name><operator pos:line="26" pos:column="18">=<pos:position pos:line="26" pos:column="19"/></operator> <name><name pos:line="26" pos:column="20">lists<pos:position pos:line="26" pos:column="25"/></name><operator pos:line="26" pos:column="25">-&gt;<pos:position pos:line="26" pos:column="30"/></operator><name pos:line="26" pos:column="27">symlist<pos:position pos:line="26" pos:column="34"/></name></name></expr>;<pos:position pos:line="26" pos:column="35"/></init> <condition><expr><name><name pos:line="26" pos:column="36">symbol<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">name<pos:position pos:line="26" pos:column="48"/></name></name></expr>;<pos:position pos:line="26" pos:column="49"/></condition> <incr><expr><operator pos:line="26" pos:column="50">++<pos:position pos:line="26" pos:column="52"/></operator><name pos:line="26" pos:column="52">symbol<pos:position pos:line="26" pos:column="58"/></name></expr></incr>)<pos:position pos:line="26" pos:column="59"/></control>
	<block pos:line="27" pos:column="9">{
	  <if pos:line="28" pos:column="11">if <condition pos:line="28" pos:column="14">(<expr><operator pos:line="28" pos:column="15">!<pos:position pos:line="28" pos:column="16"/></operator><name><name pos:line="28" pos:column="16">symbol<pos:position pos:line="28" pos:column="22"/></name><operator pos:line="28" pos:column="22">-&gt;<pos:position pos:line="28" pos:column="27"/></operator><name pos:line="28" pos:column="24">address<pos:position pos:line="28" pos:column="31"/></name></name> <operator pos:line="28" pos:column="32">&amp;&amp;<pos:position pos:line="28" pos:column="42"/></operator> <call><name pos:line="28" pos:column="35">streq<pos:position pos:line="28" pos:column="40"/></name> <argument_list pos:line="28" pos:column="41">(<argument><expr><name><name pos:line="28" pos:column="42">symbol<pos:position pos:line="28" pos:column="48"/></name><operator pos:line="28" pos:column="48">-&gt;<pos:position pos:line="28" pos:column="53"/></operator><name pos:line="28" pos:column="50">name<pos:position pos:line="28" pos:column="54"/></name></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="56">filename<pos:position pos:line="28" pos:column="64"/></name></expr></argument>)<pos:position pos:line="28" pos:column="65"/></argument_list></call></expr>)<pos:position pos:line="28" pos:column="66"/></condition><then pos:line="28" pos:column="66">
	    <block pos:line="29" pos:column="13">{
	      <comment type="block" pos:line="30" pos:column="15">/* If the next symbol's name and address is 0, it means
		 the module just contains the originator and no symbols.
		 In this case we pretend that we never saw the module and
	         hope that some other loader will be able to load the module
	         and have access to its symbols */</comment>
	      <decl_stmt><decl><type><specifier pos:line="35" pos:column="15">const<pos:position pos:line="35" pos:column="20"/></specifier> <name pos:line="35" pos:column="21">lt_dlsymlist<pos:position pos:line="35" pos:column="33"/></name> <modifier pos:line="35" pos:column="34">*<pos:position pos:line="35" pos:column="35"/></modifier></type><name pos:line="35" pos:column="35">next_symbol<pos:position pos:line="35" pos:column="46"/></name> <init pos:line="35" pos:column="47">= <expr><name pos:line="35" pos:column="49">symbol<pos:position pos:line="35" pos:column="55"/></name> <operator pos:line="35" pos:column="56">+<pos:position pos:line="35" pos:column="57"/></operator><literal type="number" pos:line="35" pos:column="57">1<pos:position pos:line="35" pos:column="58"/></literal></expr></init></decl>;<pos:position pos:line="35" pos:column="59"/></decl_stmt>
	      <if pos:line="36" pos:column="15">if <condition pos:line="36" pos:column="18">(<expr><name><name pos:line="36" pos:column="19">next_symbol<pos:position pos:line="36" pos:column="30"/></name><operator pos:line="36" pos:column="30">-&gt;<pos:position pos:line="36" pos:column="35"/></operator><name pos:line="36" pos:column="32">address<pos:position pos:line="36" pos:column="39"/></name></name> <operator pos:line="36" pos:column="40">&amp;&amp;<pos:position pos:line="36" pos:column="50"/></operator> <name><name pos:line="36" pos:column="43">next_symbol<pos:position pos:line="36" pos:column="54"/></name><operator pos:line="36" pos:column="54">-&gt;<pos:position pos:line="36" pos:column="59"/></operator><name pos:line="36" pos:column="56">name<pos:position pos:line="36" pos:column="60"/></name></name></expr>)<pos:position pos:line="36" pos:column="61"/></condition><then pos:line="36" pos:column="61">
		<block pos:line="37" pos:column="17">{
	          <expr_stmt><expr><name pos:line="38" pos:column="19">module<pos:position pos:line="38" pos:column="25"/></name> <operator pos:line="38" pos:column="26">=<pos:position pos:line="38" pos:column="27"/></operator> <operator pos:line="38" pos:column="28">(<pos:position pos:line="38" pos:column="29"/></operator><name pos:line="38" pos:column="29">lt_module<pos:position pos:line="38" pos:column="38"/></name><operator pos:line="38" pos:column="38">)<pos:position pos:line="38" pos:column="39"/></operator> <name><name pos:line="38" pos:column="40">lists<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">-&gt;<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="47">symlist<pos:position pos:line="38" pos:column="54"/></name></name></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>
	          <goto pos:line="39" pos:column="19">goto <name pos:line="39" pos:column="24">done<pos:position pos:line="39" pos:column="28"/></name>;<pos:position pos:line="39" pos:column="29"/></goto>
		}<pos:position pos:line="40" pos:column="18"/></block></then></if>
	    }<pos:position pos:line="41" pos:column="14"/></block></then></if>
	}<pos:position pos:line="42" pos:column="10"/></block></for>
    }<pos:position pos:line="43" pos:column="6"/></block></for>

  <expr_stmt><expr><call><name pos:line="45" pos:column="3">LT__SETERROR<pos:position pos:line="45" pos:column="15"/></name> <argument_list pos:line="45" pos:column="16">(<argument><expr><name pos:line="45" pos:column="17">FILE_NOT_FOUND<pos:position pos:line="45" pos:column="31"/></name></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>

 <label><name pos:line="47" pos:column="2">done<pos:position pos:line="47" pos:column="6"/></name>:<pos:position pos:line="47" pos:column="7"/></label>
  <return pos:line="48" pos:column="3">return <expr><name pos:line="48" pos:column="10">module<pos:position pos:line="48" pos:column="16"/></name></expr>;<pos:position pos:line="48" pos:column="17"/></return>
}<pos:position pos:line="49" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3221_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">gopherToHTML<pos:position pos:line="2" pos:column="13"/></name><parameter_list pos:line="2" pos:column="13">(<parameter><decl><type><name pos:line="2" pos:column="14">GopherStateData<pos:position pos:line="2" pos:column="29"/></name> <modifier pos:line="2" pos:column="30">*<pos:position pos:line="2" pos:column="31"/></modifier></type> <name pos:line="2" pos:column="32">gopherState<pos:position pos:line="2" pos:column="43"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="45">char<pos:position pos:line="2" pos:column="49"/></name> <modifier pos:line="2" pos:column="50">*<pos:position pos:line="2" pos:column="51"/></modifier></type><name pos:line="2" pos:column="51">inbuf<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">int<pos:position pos:line="2" pos:column="61"/></name></type> <name pos:line="2" pos:column="62">len<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">char<pos:position pos:line="4" pos:column="9"/></name> <modifier pos:line="4" pos:column="10">*<pos:position pos:line="4" pos:column="11"/></modifier></type><name pos:line="4" pos:column="11">pos<pos:position pos:line="4" pos:column="14"/></name> <init pos:line="4" pos:column="15">= <expr><name pos:line="4" pos:column="17">inbuf<pos:position pos:line="4" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">lpos<pos:position pos:line="5" pos:column="15"/></name> <init pos:line="5" pos:column="16">= <expr><name pos:line="5" pos:column="18">NULL<pos:position pos:line="5" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">tline<pos:position pos:line="6" pos:column="16"/></name> <init pos:line="6" pos:column="17">= <expr><name pos:line="6" pos:column="19">NULL<pos:position pos:line="6" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">LOCAL_ARRAY<pos:position pos:line="7" pos:column="16"/></name><argument_list pos:line="7" pos:column="16">(<argument><expr><name pos:line="7" pos:column="17">char<pos:position pos:line="7" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="23">line<pos:position pos:line="7" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="29">TEMP_BUF_SIZE<pos:position pos:line="7" pos:column="42"/></name></expr></argument>)<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="8" pos:column="5">LOCAL_ARRAY<pos:position pos:line="8" pos:column="16"/></name><argument_list pos:line="8" pos:column="16">(<argument><expr><name pos:line="8" pos:column="17">char<pos:position pos:line="8" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="23">tmpbuf<pos:position pos:line="8" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="8" pos:column="31">TEMP_BUF_SIZE<pos:position pos:line="8" pos:column="44"/></name></expr></argument>)<pos:position pos:line="8" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="46"/></expr_stmt>
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">name<pos:position pos:line="9" pos:column="15"/></name> <init pos:line="9" pos:column="16">= <expr><name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="9" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="10" pos:column="5">char<pos:position pos:line="10" pos:column="9"/></name> <modifier pos:line="10" pos:column="10">*<pos:position pos:line="10" pos:column="11"/></modifier></type><name pos:line="10" pos:column="11">selector<pos:position pos:line="10" pos:column="19"/></name> <init pos:line="10" pos:column="20">= <expr><name pos:line="10" pos:column="22">NULL<pos:position pos:line="10" pos:column="26"/></name></expr></init></decl>;<pos:position pos:line="10" pos:column="27"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="11" pos:column="5">char<pos:position pos:line="11" pos:column="9"/></name> <modifier pos:line="11" pos:column="10">*<pos:position pos:line="11" pos:column="11"/></modifier></type><name pos:line="11" pos:column="11">host<pos:position pos:line="11" pos:column="15"/></name> <init pos:line="11" pos:column="16">= <expr><name pos:line="11" pos:column="18">NULL<pos:position pos:line="11" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="11" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">char<pos:position pos:line="12" pos:column="9"/></name> <modifier pos:line="12" pos:column="10">*<pos:position pos:line="12" pos:column="11"/></modifier></type><name pos:line="12" pos:column="11">port<pos:position pos:line="12" pos:column="15"/></name> <init pos:line="12" pos:column="16">= <expr><name pos:line="12" pos:column="18">NULL<pos:position pos:line="12" pos:column="22"/></name></expr></init></decl>;<pos:position pos:line="12" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="13" pos:column="5">char<pos:position pos:line="13" pos:column="9"/></name> <modifier pos:line="13" pos:column="10">*<pos:position pos:line="13" pos:column="11"/></modifier></type><name pos:line="13" pos:column="11">escaped_selector<pos:position pos:line="13" pos:column="27"/></name> <init pos:line="13" pos:column="28">= <expr><name pos:line="13" pos:column="30">NULL<pos:position pos:line="13" pos:column="34"/></name></expr></init></decl>;<pos:position pos:line="13" pos:column="35"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="14" pos:column="5">const<pos:position pos:line="14" pos:column="10"/></specifier> <name pos:line="14" pos:column="11">char<pos:position pos:line="14" pos:column="15"/></name> <modifier pos:line="14" pos:column="16">*<pos:position pos:line="14" pos:column="17"/></modifier></type><name pos:line="14" pos:column="17">icon_url<pos:position pos:line="14" pos:column="25"/></name> <init pos:line="14" pos:column="26">= <expr><name pos:line="14" pos:column="28">NULL<pos:position pos:line="14" pos:column="32"/></name></expr></init></decl>;<pos:position pos:line="14" pos:column="33"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">char<pos:position pos:line="15" pos:column="9"/></name></type> <name pos:line="15" pos:column="10">gtype<pos:position pos:line="15" pos:column="15"/></name></decl>;<pos:position pos:line="15" pos:column="16"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="16" pos:column="5">StoreEntry<pos:position pos:line="16" pos:column="15"/></name> <modifier pos:line="16" pos:column="16">*<pos:position pos:line="16" pos:column="17"/></modifier></type><name pos:line="16" pos:column="17">entry<pos:position pos:line="16" pos:column="22"/></name> <init pos:line="16" pos:column="23">= <expr><name pos:line="16" pos:column="25">NULL<pos:position pos:line="16" pos:column="29"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="30"/></decl_stmt>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">memset<pos:position pos:line="18" pos:column="11"/></name><argument_list pos:line="18" pos:column="11">(<argument><expr><name pos:line="18" pos:column="12">tmpbuf<pos:position pos:line="18" pos:column="18"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="18" pos:column="20">'\0'<pos:position pos:line="18" pos:column="24"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="26">TEMP_BUF_SIZE<pos:position pos:line="18" pos:column="39"/></name></expr></argument>)<pos:position pos:line="18" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="41"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">memset<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name pos:line="19" pos:column="12">line<pos:position pos:line="19" pos:column="16"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="19" pos:column="18">'\0'<pos:position pos:line="19" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="19" pos:column="24">TEMP_BUF_SIZE<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><name pos:line="21" pos:column="5">entry<pos:position pos:line="21" pos:column="10"/></name> <operator pos:line="21" pos:column="11">=<pos:position pos:line="21" pos:column="12"/></operator> <name><name pos:line="21" pos:column="13">gopherState<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">-&gt;<pos:position pos:line="21" pos:column="29"/></operator><name pos:line="21" pos:column="26">entry<pos:position pos:line="21" pos:column="31"/></name></name></expr>;<pos:position pos:line="21" pos:column="32"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name><name pos:line="23" pos:column="9">gopherState<pos:position pos:line="23" pos:column="20"/></name><operator pos:line="23" pos:column="20">-&gt;<pos:position pos:line="23" pos:column="25"/></operator><name pos:line="23" pos:column="22">conversion<pos:position pos:line="23" pos:column="32"/></name></name> <operator pos:line="23" pos:column="33">==<pos:position pos:line="23" pos:column="35"/></operator> <name><name pos:line="23" pos:column="36">gopher_ds<pos:position pos:line="23" pos:column="45"/></name><operator pos:line="23" pos:column="45">::<pos:position pos:line="23" pos:column="47"/></operator><name pos:line="23" pos:column="47">HTML_INDEX_PAGE<pos:position pos:line="23" pos:column="62"/></name></name></expr>)<pos:position pos:line="23" pos:column="63"/></condition><then pos:line="23" pos:column="63"> <block pos:line="23" pos:column="64">{
        <decl_stmt><decl><type><name pos:line="24" pos:column="9">char<pos:position pos:line="24" pos:column="13"/></name> <modifier pos:line="24" pos:column="14">*<pos:position pos:line="24" pos:column="15"/></modifier></type><name pos:line="24" pos:column="15">html_url<pos:position pos:line="24" pos:column="23"/></name> <init pos:line="24" pos:column="24">= <expr><call><name pos:line="24" pos:column="26">html_quote<pos:position pos:line="24" pos:column="36"/></name><argument_list pos:line="24" pos:column="36">(<argument><expr><call><name><name pos:line="24" pos:column="37">entry<pos:position pos:line="24" pos:column="42"/></name><operator pos:line="24" pos:column="42">-&gt;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="44">url<pos:position pos:line="24" pos:column="47"/></name></name><argument_list pos:line="24" pos:column="47">()<pos:position pos:line="24" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="24" pos:column="51"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">gopherHTMLHeader<pos:position pos:line="25" pos:column="25"/></name><argument_list pos:line="25" pos:column="25">(<argument><expr><name pos:line="25" pos:column="26">entry<pos:position pos:line="25" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="25" pos:column="33">"Gopher Index %s"<pos:position pos:line="25" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="25" pos:column="52">html_url<pos:position pos:line="25" pos:column="60"/></name></expr></argument>)<pos:position pos:line="25" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">storeAppendPrintf<pos:position pos:line="26" pos:column="26"/></name><argument_list pos:line="26" pos:column="26">(<argument><expr><name pos:line="26" pos:column="27">entry<pos:position pos:line="26" pos:column="32"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="27" pos:column="27">"&lt;p&gt;This is a searchable Gopher index. Use the search\n"<pos:position pos:line="27" pos:column="89"/></literal>
                          <literal type="string" pos:line="28" pos:column="27">"function of your browser to enter search terms.\n"<pos:position pos:line="28" pos:column="78"/></literal>
                          <literal type="string" pos:line="29" pos:column="27">"&lt;ISINDEX&gt;\n"<pos:position pos:line="29" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">gopherHTMLFooter<pos:position pos:line="30" pos:column="25"/></name><argument_list pos:line="30" pos:column="25">(<argument><expr><name pos:line="30" pos:column="26">entry<pos:position pos:line="30" pos:column="31"/></name></expr></argument>)<pos:position pos:line="30" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="33"/></expr_stmt>
        <comment type="block" pos:line="31" pos:column="9">/* now let start sending stuff to client */</comment>
        <expr_stmt><expr><call><name><name pos:line="32" pos:column="9">entry<pos:position pos:line="32" pos:column="14"/></name><operator pos:line="32" pos:column="14">-&gt;<pos:position pos:line="32" pos:column="19"/></operator><name pos:line="32" pos:column="16">flush<pos:position pos:line="32" pos:column="21"/></name></name><argument_list pos:line="32" pos:column="21">()<pos:position pos:line="32" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="33" pos:column="9">gopherState<pos:position pos:line="33" pos:column="20"/></name><operator pos:line="33" pos:column="20">-&gt;<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="22">HTML_header_added<pos:position pos:line="33" pos:column="39"/></name></name> <operator pos:line="33" pos:column="40">=<pos:position pos:line="33" pos:column="41"/></operator> <literal type="number" pos:line="33" pos:column="42">1<pos:position pos:line="33" pos:column="43"/></literal></expr>;<pos:position pos:line="33" pos:column="44"/></expr_stmt>

        <return pos:line="35" pos:column="9">return;<pos:position pos:line="35" pos:column="16"/></return>
    }<pos:position pos:line="36" pos:column="6"/></block></then></if>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><name><name pos:line="38" pos:column="9">gopherState<pos:position pos:line="38" pos:column="20"/></name><operator pos:line="38" pos:column="20">-&gt;<pos:position pos:line="38" pos:column="25"/></operator><name pos:line="38" pos:column="22">conversion<pos:position pos:line="38" pos:column="32"/></name></name> <operator pos:line="38" pos:column="33">==<pos:position pos:line="38" pos:column="35"/></operator> <name><name pos:line="38" pos:column="36">gopher_ds<pos:position pos:line="38" pos:column="45"/></name><operator pos:line="38" pos:column="45">::<pos:position pos:line="38" pos:column="47"/></operator><name pos:line="38" pos:column="47">HTML_CSO_PAGE<pos:position pos:line="38" pos:column="60"/></name></name></expr>)<pos:position pos:line="38" pos:column="61"/></condition><then pos:line="38" pos:column="61"> <block pos:line="38" pos:column="62">{
        <decl_stmt><decl><type><name pos:line="39" pos:column="9">char<pos:position pos:line="39" pos:column="13"/></name> <modifier pos:line="39" pos:column="14">*<pos:position pos:line="39" pos:column="15"/></modifier></type><name pos:line="39" pos:column="15">html_url<pos:position pos:line="39" pos:column="23"/></name> <init pos:line="39" pos:column="24">= <expr><call><name pos:line="39" pos:column="26">html_quote<pos:position pos:line="39" pos:column="36"/></name><argument_list pos:line="39" pos:column="36">(<argument><expr><call><name><name pos:line="39" pos:column="37">entry<pos:position pos:line="39" pos:column="42"/></name><operator pos:line="39" pos:column="42">-&gt;<pos:position pos:line="39" pos:column="47"/></operator><name pos:line="39" pos:column="44">url<pos:position pos:line="39" pos:column="47"/></name></name><argument_list pos:line="39" pos:column="47">()<pos:position pos:line="39" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="50"/></argument_list></call></expr></init></decl>;<pos:position pos:line="39" pos:column="51"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">gopherHTMLHeader<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">entry<pos:position pos:line="40" pos:column="31"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="33">"CSO Search of %s"<pos:position pos:line="40" pos:column="51"/></literal></expr></argument>, <argument><expr><name pos:line="40" pos:column="53">html_url<pos:position pos:line="40" pos:column="61"/></name></expr></argument>)<pos:position pos:line="40" pos:column="62"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="63"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="41" pos:column="9">storeAppendPrintf<pos:position pos:line="41" pos:column="26"/></name><argument_list pos:line="41" pos:column="26">(<argument><expr><name pos:line="41" pos:column="27">entry<pos:position pos:line="41" pos:column="32"/></name></expr></argument>,
                          <argument><expr><literal type="string" pos:line="42" pos:column="27">"&lt;P&gt;A CSO database usually contains a phonebook or\n"<pos:position pos:line="42" pos:column="86"/></literal>
                          <literal type="string" pos:line="43" pos:column="27">"directory.  Use the search function of your browser to enter\n"<pos:position pos:line="43" pos:column="91"/></literal>
                          <literal type="string" pos:line="44" pos:column="27">"search terms.&lt;/P&gt;&lt;ISINDEX&gt;\n"<pos:position pos:line="44" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="59"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">gopherHTMLFooter<pos:position pos:line="45" pos:column="25"/></name><argument_list pos:line="45" pos:column="25">(<argument><expr><name pos:line="45" pos:column="26">entry<pos:position pos:line="45" pos:column="31"/></name></expr></argument>)<pos:position pos:line="45" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="33"/></expr_stmt>
        <comment type="block" pos:line="46" pos:column="9">/* now let start sending stuff to client */</comment>
        <expr_stmt><expr><call><name><name pos:line="47" pos:column="9">entry<pos:position pos:line="47" pos:column="14"/></name><operator pos:line="47" pos:column="14">-&gt;<pos:position pos:line="47" pos:column="19"/></operator><name pos:line="47" pos:column="16">flush<pos:position pos:line="47" pos:column="21"/></name></name><argument_list pos:line="47" pos:column="21">()<pos:position pos:line="47" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="47" pos:column="24"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="48" pos:column="9">gopherState<pos:position pos:line="48" pos:column="20"/></name><operator pos:line="48" pos:column="20">-&gt;<pos:position pos:line="48" pos:column="25"/></operator><name pos:line="48" pos:column="22">HTML_header_added<pos:position pos:line="48" pos:column="39"/></name></name> <operator pos:line="48" pos:column="40">=<pos:position pos:line="48" pos:column="41"/></operator> <literal type="number" pos:line="48" pos:column="42">1<pos:position pos:line="48" pos:column="43"/></literal></expr>;<pos:position pos:line="48" pos:column="44"/></expr_stmt>

        <return pos:line="50" pos:column="9">return;<pos:position pos:line="50" pos:column="16"/></return>
    }<pos:position pos:line="51" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="53" pos:column="5">String<pos:position pos:line="53" pos:column="11"/></name></type> <name pos:line="53" pos:column="12">outbuf<pos:position pos:line="53" pos:column="18"/></name></decl>;<pos:position pos:line="53" pos:column="19"/></decl_stmt>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><name><name pos:line="55" pos:column="10">gopherState<pos:position pos:line="55" pos:column="21"/></name><operator pos:line="55" pos:column="21">-&gt;<pos:position pos:line="55" pos:column="26"/></operator><name pos:line="55" pos:column="23">HTML_header_added<pos:position pos:line="55" pos:column="40"/></name></name></expr>)<pos:position pos:line="55" pos:column="41"/></condition><then pos:line="55" pos:column="41"> <block pos:line="55" pos:column="42">{
        <if pos:line="56" pos:column="9">if <condition pos:line="56" pos:column="12">(<expr><name><name pos:line="56" pos:column="13">gopherState<pos:position pos:line="56" pos:column="24"/></name><operator pos:line="56" pos:column="24">-&gt;<pos:position pos:line="56" pos:column="29"/></operator><name pos:line="56" pos:column="26">conversion<pos:position pos:line="56" pos:column="36"/></name></name> <operator pos:line="56" pos:column="37">==<pos:position pos:line="56" pos:column="39"/></operator> <name><name pos:line="56" pos:column="40">gopher_ds<pos:position pos:line="56" pos:column="49"/></name><operator pos:line="56" pos:column="49">::<pos:position pos:line="56" pos:column="51"/></operator><name pos:line="56" pos:column="51">HTML_CSO_RESULT<pos:position pos:line="56" pos:column="66"/></name></name></expr>)<pos:position pos:line="56" pos:column="67"/></condition><then pos:line="56" pos:column="67">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="57" pos:column="13">gopherHTMLHeader<pos:position pos:line="57" pos:column="29"/></name><argument_list pos:line="57" pos:column="29">(<argument><expr><name pos:line="57" pos:column="30">entry<pos:position pos:line="57" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="57" pos:column="37">"CSO Search Result"<pos:position pos:line="57" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="57" pos:column="58">NULL<pos:position pos:line="57" pos:column="62"/></name></expr></argument>)<pos:position pos:line="57" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="64"/></expr_stmt></block></then>
        <else pos:line="58" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="59" pos:column="13">gopherHTMLHeader<pos:position pos:line="59" pos:column="29"/></name><argument_list pos:line="59" pos:column="29">(<argument><expr><name pos:line="59" pos:column="30">entry<pos:position pos:line="59" pos:column="35"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="59" pos:column="37">"Gopher Menu"<pos:position pos:line="59" pos:column="50"/></literal></expr></argument>, <argument><expr><name pos:line="59" pos:column="52">NULL<pos:position pos:line="59" pos:column="56"/></name></expr></argument>)<pos:position pos:line="59" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="58"/></expr_stmt></block></else></if>

        <expr_stmt><expr><call><name><name pos:line="61" pos:column="9">outbuf<pos:position pos:line="61" pos:column="15"/></name><operator pos:line="61" pos:column="15">.<pos:position pos:line="61" pos:column="16"/></operator><name pos:line="61" pos:column="16">append<pos:position pos:line="61" pos:column="22"/></name></name> <argument_list pos:line="61" pos:column="23">(<argument><expr><literal type="string" pos:line="61" pos:column="24">"&lt;PRE&gt;"<pos:position pos:line="61" pos:column="37"/></literal></expr></argument>)<pos:position pos:line="61" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="61" pos:column="33"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="63" pos:column="9">gopherState<pos:position pos:line="63" pos:column="20"/></name><operator pos:line="63" pos:column="20">-&gt;<pos:position pos:line="63" pos:column="25"/></operator><name pos:line="63" pos:column="22">HTML_header_added<pos:position pos:line="63" pos:column="39"/></name></name> <operator pos:line="63" pos:column="40">=<pos:position pos:line="63" pos:column="41"/></operator> <literal type="number" pos:line="63" pos:column="42">1<pos:position pos:line="63" pos:column="43"/></literal></expr>;<pos:position pos:line="63" pos:column="44"/></expr_stmt>

        <expr_stmt><expr><name><name pos:line="65" pos:column="9">gopherState<pos:position pos:line="65" pos:column="20"/></name><operator pos:line="65" pos:column="20">-&gt;<pos:position pos:line="65" pos:column="25"/></operator><name pos:line="65" pos:column="22">HTML_pre<pos:position pos:line="65" pos:column="30"/></name></name> <operator pos:line="65" pos:column="31">=<pos:position pos:line="65" pos:column="32"/></operator> <literal type="number" pos:line="65" pos:column="33">1<pos:position pos:line="65" pos:column="34"/></literal></expr>;<pos:position pos:line="65" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then></if>

    <while pos:line="68" pos:column="5">while <condition pos:line="68" pos:column="11">(<expr><name pos:line="68" pos:column="12">pos<pos:position pos:line="68" pos:column="15"/></name> <operator pos:line="68" pos:column="16">&lt;<pos:position pos:line="68" pos:column="20"/></operator> <name pos:line="68" pos:column="18">inbuf<pos:position pos:line="68" pos:column="23"/></name> <operator pos:line="68" pos:column="24">+<pos:position pos:line="68" pos:column="25"/></operator> <name pos:line="68" pos:column="26">len<pos:position pos:line="68" pos:column="29"/></name></expr>)<pos:position pos:line="68" pos:column="30"/></condition> <block pos:line="68" pos:column="31">{
        <decl_stmt><decl><type><name pos:line="69" pos:column="9">int<pos:position pos:line="69" pos:column="12"/></name></type> <name pos:line="69" pos:column="13">llen<pos:position pos:line="69" pos:column="17"/></name></decl>;<pos:position pos:line="69" pos:column="18"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="70" pos:column="9">int<pos:position pos:line="70" pos:column="12"/></name></type> <name pos:line="70" pos:column="13">left<pos:position pos:line="70" pos:column="17"/></name> <init pos:line="70" pos:column="18">= <expr><name pos:line="70" pos:column="20">len<pos:position pos:line="70" pos:column="23"/></name> <operator pos:line="70" pos:column="24">-<pos:position pos:line="70" pos:column="25"/></operator> <operator pos:line="70" pos:column="26">(<pos:position pos:line="70" pos:column="27"/></operator><name pos:line="70" pos:column="27">pos<pos:position pos:line="70" pos:column="30"/></name> <operator pos:line="70" pos:column="31">-<pos:position pos:line="70" pos:column="32"/></operator> <name pos:line="70" pos:column="33">inbuf<pos:position pos:line="70" pos:column="38"/></name><operator pos:line="70" pos:column="38">)<pos:position pos:line="70" pos:column="39"/></operator></expr></init></decl>;<pos:position pos:line="70" pos:column="40"/></decl_stmt>
        <expr_stmt><expr><name pos:line="71" pos:column="9">lpos<pos:position pos:line="71" pos:column="13"/></name> <operator pos:line="71" pos:column="14">=<pos:position pos:line="71" pos:column="15"/></operator> <operator pos:line="71" pos:column="16">(<pos:position pos:line="71" pos:column="17"/></operator><name pos:line="71" pos:column="17">char<pos:position pos:line="71" pos:column="21"/></name> <operator pos:line="71" pos:column="22">*<pos:position pos:line="71" pos:column="23"/></operator><operator pos:line="71" pos:column="23">)<pos:position pos:line="71" pos:column="24"/></operator><call><name pos:line="71" pos:column="24">memchr<pos:position pos:line="71" pos:column="30"/></name><argument_list pos:line="71" pos:column="30">(<argument><expr><name pos:line="71" pos:column="31">pos<pos:position pos:line="71" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="71" pos:column="36">'\n'<pos:position pos:line="71" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="71" pos:column="42">left<pos:position pos:line="71" pos:column="46"/></name></expr></argument>)<pos:position pos:line="71" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="71" pos:column="48"/></expr_stmt>
        <if pos:line="72" pos:column="9">if <condition pos:line="72" pos:column="12">(<expr><name pos:line="72" pos:column="13">lpos<pos:position pos:line="72" pos:column="17"/></name></expr>)<pos:position pos:line="72" pos:column="18"/></condition><then pos:line="72" pos:column="18"> <block pos:line="72" pos:column="19">{
            <expr_stmt><expr><operator pos:line="73" pos:column="13">++<pos:position pos:line="73" pos:column="15"/></operator><name pos:line="73" pos:column="15">lpos<pos:position pos:line="73" pos:column="19"/></name></expr>;<pos:position pos:line="73" pos:column="20"/></expr_stmt>             <comment type="block" pos:line="73" pos:column="33">/* Next line is after \n */</comment>
            <expr_stmt><expr><name pos:line="74" pos:column="13">llen<pos:position pos:line="74" pos:column="17"/></name> <operator pos:line="74" pos:column="18">=<pos:position pos:line="74" pos:column="19"/></operator> <name pos:line="74" pos:column="20">lpos<pos:position pos:line="74" pos:column="24"/></name> <operator pos:line="74" pos:column="25">-<pos:position pos:line="74" pos:column="26"/></operator> <name pos:line="74" pos:column="27">pos<pos:position pos:line="74" pos:column="30"/></name></expr>;<pos:position pos:line="74" pos:column="31"/></expr_stmt>
        }<pos:position pos:line="75" pos:column="10"/></block></then> <else pos:line="75" pos:column="11">else <block pos:line="75" pos:column="16">{
            <expr_stmt><expr><name pos:line="76" pos:column="13">llen<pos:position pos:line="76" pos:column="17"/></name> <operator pos:line="76" pos:column="18">=<pos:position pos:line="76" pos:column="19"/></operator> <name pos:line="76" pos:column="20">left<pos:position pos:line="76" pos:column="24"/></name></expr>;<pos:position pos:line="76" pos:column="25"/></expr_stmt>
        }<pos:position pos:line="77" pos:column="10"/></block></else></if>
        <if pos:line="78" pos:column="9">if <condition pos:line="78" pos:column="12">(<expr><name><name pos:line="78" pos:column="13">gopherState<pos:position pos:line="78" pos:column="24"/></name><operator pos:line="78" pos:column="24">-&gt;<pos:position pos:line="78" pos:column="29"/></operator><name pos:line="78" pos:column="26">len<pos:position pos:line="78" pos:column="29"/></name></name> <operator pos:line="78" pos:column="30">+<pos:position pos:line="78" pos:column="31"/></operator> <name pos:line="78" pos:column="32">llen<pos:position pos:line="78" pos:column="36"/></name> <operator pos:line="78" pos:column="37">&gt;=<pos:position pos:line="78" pos:column="42"/></operator> <name pos:line="78" pos:column="40">TEMP_BUF_SIZE<pos:position pos:line="78" pos:column="53"/></name></expr>)<pos:position pos:line="78" pos:column="54"/></condition><then pos:line="78" pos:column="54"> <block pos:line="78" pos:column="55">{
            <expr_stmt><expr><call><name pos:line="79" pos:column="13">debugs<pos:position pos:line="79" pos:column="19"/></name><argument_list pos:line="79" pos:column="19">(<argument><expr><literal type="number" pos:line="79" pos:column="20">10<pos:position pos:line="79" pos:column="22"/></literal></expr></argument>, <argument><expr><name pos:line="79" pos:column="24">DBG_IMPORTANT<pos:position pos:line="79" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="79" pos:column="39">"GopherHTML: Buffer overflow. Lost some data on URL: "<pos:position pos:line="79" pos:column="93"/></literal> <operator pos:line="79" pos:column="94">&lt;&lt;<pos:position pos:line="79" pos:column="102"/></operator> <call><name><name pos:line="79" pos:column="97">entry<pos:position pos:line="79" pos:column="102"/></name><operator pos:line="79" pos:column="102">-&gt;<pos:position pos:line="79" pos:column="107"/></operator><name pos:line="79" pos:column="104">url<pos:position pos:line="79" pos:column="107"/></name></name><argument_list pos:line="79" pos:column="107">()<pos:position pos:line="79" pos:column="109"/></argument_list></call></expr></argument>  )<pos:position pos:line="79" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="79" pos:column="113"/></expr_stmt>
            <expr_stmt><expr><name pos:line="80" pos:column="13">llen<pos:position pos:line="80" pos:column="17"/></name> <operator pos:line="80" pos:column="18">=<pos:position pos:line="80" pos:column="19"/></operator> <name pos:line="80" pos:column="20">TEMP_BUF_SIZE<pos:position pos:line="80" pos:column="33"/></name> <operator pos:line="80" pos:column="34">-<pos:position pos:line="80" pos:column="35"/></operator> <name><name pos:line="80" pos:column="36">gopherState<pos:position pos:line="80" pos:column="47"/></name><operator pos:line="80" pos:column="47">-&gt;<pos:position pos:line="80" pos:column="52"/></operator><name pos:line="80" pos:column="49">len<pos:position pos:line="80" pos:column="52"/></name></name> <operator pos:line="80" pos:column="53">-<pos:position pos:line="80" pos:column="54"/></operator> <literal type="number" pos:line="80" pos:column="55">1<pos:position pos:line="80" pos:column="56"/></literal></expr>;<pos:position pos:line="80" pos:column="57"/></expr_stmt>
        }<pos:position pos:line="81" pos:column="10"/></block></then></if>
        <if pos:line="82" pos:column="9">if <condition pos:line="82" pos:column="12">(<expr><operator pos:line="82" pos:column="13">!<pos:position pos:line="82" pos:column="14"/></operator><name pos:line="82" pos:column="14">lpos<pos:position pos:line="82" pos:column="18"/></name></expr>)<pos:position pos:line="82" pos:column="19"/></condition><then pos:line="82" pos:column="19"> <block pos:line="82" pos:column="20">{
            <comment type="block" pos:line="83" pos:column="13">/* there is no complete line in inbuf */</comment>
            <comment type="block" pos:line="84" pos:column="13">/* copy it to temp buffer */</comment>
            <comment type="block" pos:line="85" pos:column="13">/* note: llen is adjusted above */</comment>
            <expr_stmt><expr><call><name pos:line="86" pos:column="13">memcpy<pos:position pos:line="86" pos:column="19"/></name><argument_list pos:line="86" pos:column="19">(<argument><expr><name><name pos:line="86" pos:column="20">gopherState<pos:position pos:line="86" pos:column="31"/></name><operator pos:line="86" pos:column="31">-&gt;<pos:position pos:line="86" pos:column="36"/></operator><name pos:line="86" pos:column="33">buf<pos:position pos:line="86" pos:column="36"/></name></name> <operator pos:line="86" pos:column="37">+<pos:position pos:line="86" pos:column="38"/></operator> <name><name pos:line="86" pos:column="39">gopherState<pos:position pos:line="86" pos:column="50"/></name><operator pos:line="86" pos:column="50">-&gt;<pos:position pos:line="86" pos:column="55"/></operator><name pos:line="86" pos:column="52">len<pos:position pos:line="86" pos:column="55"/></name></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="57">pos<pos:position pos:line="86" pos:column="60"/></name></expr></argument>, <argument><expr><name pos:line="86" pos:column="62">llen<pos:position pos:line="86" pos:column="66"/></name></expr></argument>)<pos:position pos:line="86" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="86" pos:column="68"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="87" pos:column="13">gopherState<pos:position pos:line="87" pos:column="24"/></name><operator pos:line="87" pos:column="24">-&gt;<pos:position pos:line="87" pos:column="29"/></operator><name pos:line="87" pos:column="26">len<pos:position pos:line="87" pos:column="29"/></name></name> <operator pos:line="87" pos:column="30">+=<pos:position pos:line="87" pos:column="32"/></operator> <name pos:line="87" pos:column="33">llen<pos:position pos:line="87" pos:column="37"/></name></expr>;<pos:position pos:line="87" pos:column="38"/></expr_stmt>
            <break pos:line="88" pos:column="13">break;<pos:position pos:line="88" pos:column="19"/></break>
        }<pos:position pos:line="89" pos:column="10"/></block></then></if>
        <if pos:line="90" pos:column="9">if <condition pos:line="90" pos:column="12">(<expr><name><name pos:line="90" pos:column="13">gopherState<pos:position pos:line="90" pos:column="24"/></name><operator pos:line="90" pos:column="24">-&gt;<pos:position pos:line="90" pos:column="29"/></operator><name pos:line="90" pos:column="26">len<pos:position pos:line="90" pos:column="29"/></name></name> <operator pos:line="90" pos:column="30">!=<pos:position pos:line="90" pos:column="32"/></operator> <literal type="number" pos:line="90" pos:column="33">0<pos:position pos:line="90" pos:column="34"/></literal></expr>)<pos:position pos:line="90" pos:column="35"/></condition><then pos:line="90" pos:column="35"> <block pos:line="90" pos:column="36">{
            <comment type="block" pos:line="91" pos:column="13">/* there is something left from last tx. */</comment>
            <expr_stmt><expr><call><name pos:line="92" pos:column="13">memcpy<pos:position pos:line="92" pos:column="19"/></name><argument_list pos:line="92" pos:column="19">(<argument><expr><name pos:line="92" pos:column="20">line<pos:position pos:line="92" pos:column="24"/></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="26">gopherState<pos:position pos:line="92" pos:column="37"/></name><operator pos:line="92" pos:column="37">-&gt;<pos:position pos:line="92" pos:column="42"/></operator><name pos:line="92" pos:column="39">buf<pos:position pos:line="92" pos:column="42"/></name></name></expr></argument>, <argument><expr><name><name pos:line="92" pos:column="44">gopherState<pos:position pos:line="92" pos:column="55"/></name><operator pos:line="92" pos:column="55">-&gt;<pos:position pos:line="92" pos:column="60"/></operator><name pos:line="92" pos:column="57">len<pos:position pos:line="92" pos:column="60"/></name></name></expr></argument>)<pos:position pos:line="92" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="92" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="93" pos:column="13">memcpy<pos:position pos:line="93" pos:column="19"/></name><argument_list pos:line="93" pos:column="19">(<argument><expr><name pos:line="93" pos:column="20">line<pos:position pos:line="93" pos:column="24"/></name> <operator pos:line="93" pos:column="25">+<pos:position pos:line="93" pos:column="26"/></operator> <name><name pos:line="93" pos:column="27">gopherState<pos:position pos:line="93" pos:column="38"/></name><operator pos:line="93" pos:column="38">-&gt;<pos:position pos:line="93" pos:column="43"/></operator><name pos:line="93" pos:column="40">len<pos:position pos:line="93" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="45">pos<pos:position pos:line="93" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="50">llen<pos:position pos:line="93" pos:column="54"/></name></expr></argument>)<pos:position pos:line="93" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="93" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><name pos:line="94" pos:column="13">llen<pos:position pos:line="94" pos:column="17"/></name> <operator pos:line="94" pos:column="18">+=<pos:position pos:line="94" pos:column="20"/></operator> <name><name pos:line="94" pos:column="21">gopherState<pos:position pos:line="94" pos:column="32"/></name><operator pos:line="94" pos:column="32">-&gt;<pos:position pos:line="94" pos:column="37"/></operator><name pos:line="94" pos:column="34">len<pos:position pos:line="94" pos:column="37"/></name></name></expr>;<pos:position pos:line="94" pos:column="38"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="95" pos:column="13">gopherState<pos:position pos:line="95" pos:column="24"/></name><operator pos:line="95" pos:column="24">-&gt;<pos:position pos:line="95" pos:column="29"/></operator><name pos:line="95" pos:column="26">len<pos:position pos:line="95" pos:column="29"/></name></name> <operator pos:line="95" pos:column="30">=<pos:position pos:line="95" pos:column="31"/></operator> <literal type="number" pos:line="95" pos:column="32">0<pos:position pos:line="95" pos:column="33"/></literal></expr>;<pos:position pos:line="95" pos:column="34"/></expr_stmt>
        }<pos:position pos:line="96" pos:column="10"/></block></then> <else pos:line="96" pos:column="11">else <block pos:line="96" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="97" pos:column="13">memcpy<pos:position pos:line="97" pos:column="19"/></name><argument_list pos:line="97" pos:column="19">(<argument><expr><name pos:line="97" pos:column="20">line<pos:position pos:line="97" pos:column="24"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="26">pos<pos:position pos:line="97" pos:column="29"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="31">llen<pos:position pos:line="97" pos:column="35"/></name></expr></argument>)<pos:position pos:line="97" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="37"/></expr_stmt>
        }<pos:position pos:line="98" pos:column="10"/></block></else></if>
        <expr_stmt><expr><name><name pos:line="99" pos:column="9">line<pos:position pos:line="99" pos:column="13"/></name><index pos:line="99" pos:column="13">[<expr><name pos:line="99" pos:column="14">llen<pos:position pos:line="99" pos:column="18"/></name> <operator pos:line="99" pos:column="19">+<pos:position pos:line="99" pos:column="20"/></operator> <literal type="number" pos:line="99" pos:column="21">1<pos:position pos:line="99" pos:column="22"/></literal></expr>]<pos:position pos:line="99" pos:column="23"/></index></name> <operator pos:line="99" pos:column="24">=<pos:position pos:line="99" pos:column="25"/></operator> <literal type="char" pos:line="99" pos:column="26">'\0'<pos:position pos:line="99" pos:column="30"/></literal></expr>;<pos:position pos:line="99" pos:column="31"/></expr_stmt>
        <comment type="block" pos:line="100" pos:column="9">/* move input to next line */</comment>
        <expr_stmt><expr><name pos:line="101" pos:column="9">pos<pos:position pos:line="101" pos:column="12"/></name> <operator pos:line="101" pos:column="13">=<pos:position pos:line="101" pos:column="14"/></operator> <name pos:line="101" pos:column="15">lpos<pos:position pos:line="101" pos:column="19"/></name></expr>;<pos:position pos:line="101" pos:column="20"/></expr_stmt>

        <comment type="block" pos:line="103" pos:column="9">/* at this point. We should have one line in buffer to process */</comment>

        <if pos:line="105" pos:column="9">if <condition pos:line="105" pos:column="12">(<expr><operator pos:line="105" pos:column="13">*<pos:position pos:line="105" pos:column="14"/></operator><name pos:line="105" pos:column="14">line<pos:position pos:line="105" pos:column="18"/></name> <operator pos:line="105" pos:column="19">==<pos:position pos:line="105" pos:column="21"/></operator> <literal type="char" pos:line="105" pos:column="22">'.'<pos:position pos:line="105" pos:column="25"/></literal></expr>)<pos:position pos:line="105" pos:column="26"/></condition><then pos:line="105" pos:column="26"> <block pos:line="105" pos:column="27">{
            <comment type="block" pos:line="106" pos:column="13">/* skip it */</comment>
            <expr_stmt><expr><call><name pos:line="107" pos:column="13">memset<pos:position pos:line="107" pos:column="19"/></name><argument_list pos:line="107" pos:column="19">(<argument><expr><name pos:line="107" pos:column="20">line<pos:position pos:line="107" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="107" pos:column="26">'\0'<pos:position pos:line="107" pos:column="30"/></literal></expr></argument>, <argument><expr><name pos:line="107" pos:column="32">TEMP_BUF_SIZE<pos:position pos:line="107" pos:column="45"/></name></expr></argument>)<pos:position pos:line="107" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="107" pos:column="47"/></expr_stmt>
            <continue pos:line="108" pos:column="13">continue;<pos:position pos:line="108" pos:column="22"/></continue>
        }<pos:position pos:line="109" pos:column="10"/></block></then></if>

        <switch pos:line="111" pos:column="9">switch <condition pos:line="111" pos:column="16">(<expr><name><name pos:line="111" pos:column="17">gopherState<pos:position pos:line="111" pos:column="28"/></name><operator pos:line="111" pos:column="28">-&gt;<pos:position pos:line="111" pos:column="33"/></operator><name pos:line="111" pos:column="30">conversion<pos:position pos:line="111" pos:column="40"/></name></name></expr>)<pos:position pos:line="111" pos:column="41"/></condition> <block pos:line="111" pos:column="42">{

        <case pos:line="113" pos:column="9">case <expr><name><name pos:line="113" pos:column="14">gopher_ds<pos:position pos:line="113" pos:column="23"/></name><operator pos:line="113" pos:column="23">::<pos:position pos:line="113" pos:column="25"/></operator><name pos:line="113" pos:column="25">HTML_INDEX_RESULT<pos:position pos:line="113" pos:column="42"/></name></name></expr>:<pos:position pos:line="113" pos:column="43"/></case>

        <case pos:line="115" pos:column="9">case <expr><name><name pos:line="115" pos:column="14">gopher_ds<pos:position pos:line="115" pos:column="23"/></name><operator pos:line="115" pos:column="23">::<pos:position pos:line="115" pos:column="25"/></operator><name pos:line="115" pos:column="25">HTML_DIR<pos:position pos:line="115" pos:column="33"/></name></name></expr>:<pos:position pos:line="115" pos:column="34"/></case> <block pos:line="115" pos:column="35">{
            <expr_stmt><expr><name pos:line="116" pos:column="13">tline<pos:position pos:line="116" pos:column="18"/></name> <operator pos:line="116" pos:column="19">=<pos:position pos:line="116" pos:column="20"/></operator> <name pos:line="116" pos:column="21">line<pos:position pos:line="116" pos:column="25"/></name></expr>;<pos:position pos:line="116" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name pos:line="117" pos:column="13">gtype<pos:position pos:line="117" pos:column="18"/></name> <operator pos:line="117" pos:column="19">=<pos:position pos:line="117" pos:column="20"/></operator> <operator pos:line="117" pos:column="21">*<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="22">tline<pos:position pos:line="117" pos:column="27"/></name></expr>;<pos:position pos:line="117" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="118" pos:column="13">++<pos:position pos:line="118" pos:column="15"/></operator><name pos:line="118" pos:column="15">tline<pos:position pos:line="118" pos:column="20"/></name></expr>;<pos:position pos:line="118" pos:column="21"/></expr_stmt>
            <expr_stmt><expr><name pos:line="119" pos:column="13">name<pos:position pos:line="119" pos:column="17"/></name> <operator pos:line="119" pos:column="18">=<pos:position pos:line="119" pos:column="19"/></operator> <name pos:line="119" pos:column="20">tline<pos:position pos:line="119" pos:column="25"/></name></expr>;<pos:position pos:line="119" pos:column="26"/></expr_stmt>
            <expr_stmt><expr><name pos:line="120" pos:column="13">selector<pos:position pos:line="120" pos:column="21"/></name> <operator pos:line="120" pos:column="22">=<pos:position pos:line="120" pos:column="23"/></operator> <call><name pos:line="120" pos:column="24">strchr<pos:position pos:line="120" pos:column="30"/></name><argument_list pos:line="120" pos:column="30">(<argument><expr><name pos:line="120" pos:column="31">tline<pos:position pos:line="120" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="120" pos:column="38">TAB<pos:position pos:line="120" pos:column="41"/></name></expr></argument>)<pos:position pos:line="120" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="120" pos:column="43"/></expr_stmt>

            <if pos:line="122" pos:column="13">if <condition pos:line="122" pos:column="16">(<expr><name pos:line="122" pos:column="17">selector<pos:position pos:line="122" pos:column="25"/></name></expr>)<pos:position pos:line="122" pos:column="26"/></condition><then pos:line="122" pos:column="26"> <block pos:line="122" pos:column="27">{
                <expr_stmt><expr><operator pos:line="123" pos:column="17">*<pos:position pos:line="123" pos:column="18"/></operator><name pos:line="123" pos:column="18">selector<pos:position pos:line="123" pos:column="26"/></name> <operator pos:line="123" pos:column="27">=<pos:position pos:line="123" pos:column="28"/></operator> <literal type="char" pos:line="123" pos:column="29">'\0'<pos:position pos:line="123" pos:column="33"/></literal></expr>;<pos:position pos:line="123" pos:column="34"/></expr_stmt>
                <expr_stmt><expr><operator pos:line="124" pos:column="17">++<pos:position pos:line="124" pos:column="19"/></operator><name pos:line="124" pos:column="19">selector<pos:position pos:line="124" pos:column="27"/></name></expr>;<pos:position pos:line="124" pos:column="28"/></expr_stmt>
                <expr_stmt><expr><name pos:line="125" pos:column="17">host<pos:position pos:line="125" pos:column="21"/></name> <operator pos:line="125" pos:column="22">=<pos:position pos:line="125" pos:column="23"/></operator> <call><name pos:line="125" pos:column="24">strchr<pos:position pos:line="125" pos:column="30"/></name><argument_list pos:line="125" pos:column="30">(<argument><expr><name pos:line="125" pos:column="31">selector<pos:position pos:line="125" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="125" pos:column="41">TAB<pos:position pos:line="125" pos:column="44"/></name></expr></argument>)<pos:position pos:line="125" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="125" pos:column="46"/></expr_stmt>

                <if pos:line="127" pos:column="17">if <condition pos:line="127" pos:column="20">(<expr><name pos:line="127" pos:column="21">host<pos:position pos:line="127" pos:column="25"/></name></expr>)<pos:position pos:line="127" pos:column="26"/></condition><then pos:line="127" pos:column="26"> <block pos:line="127" pos:column="27">{
                    <expr_stmt><expr><operator pos:line="128" pos:column="21">*<pos:position pos:line="128" pos:column="22"/></operator><name pos:line="128" pos:column="22">host<pos:position pos:line="128" pos:column="26"/></name> <operator pos:line="128" pos:column="27">=<pos:position pos:line="128" pos:column="28"/></operator> <literal type="char" pos:line="128" pos:column="29">'\0'<pos:position pos:line="128" pos:column="33"/></literal></expr>;<pos:position pos:line="128" pos:column="34"/></expr_stmt>
                    <expr_stmt><expr><operator pos:line="129" pos:column="21">++<pos:position pos:line="129" pos:column="23"/></operator><name pos:line="129" pos:column="23">host<pos:position pos:line="129" pos:column="27"/></name></expr>;<pos:position pos:line="129" pos:column="28"/></expr_stmt>
                    <expr_stmt><expr><name pos:line="130" pos:column="21">port<pos:position pos:line="130" pos:column="25"/></name> <operator pos:line="130" pos:column="26">=<pos:position pos:line="130" pos:column="27"/></operator> <call><name pos:line="130" pos:column="28">strchr<pos:position pos:line="130" pos:column="34"/></name><argument_list pos:line="130" pos:column="34">(<argument><expr><name pos:line="130" pos:column="35">host<pos:position pos:line="130" pos:column="39"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="41">TAB<pos:position pos:line="130" pos:column="44"/></name></expr></argument>)<pos:position pos:line="130" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="46"/></expr_stmt>

                    <if pos:line="132" pos:column="21">if <condition pos:line="132" pos:column="24">(<expr><name pos:line="132" pos:column="25">port<pos:position pos:line="132" pos:column="29"/></name></expr>)<pos:position pos:line="132" pos:column="30"/></condition><then pos:line="132" pos:column="30"> <block pos:line="132" pos:column="31">{
                        <decl_stmt><decl><type><name pos:line="133" pos:column="25">char<pos:position pos:line="133" pos:column="29"/></name> <modifier pos:line="133" pos:column="30">*<pos:position pos:line="133" pos:column="31"/></modifier></type><name pos:line="133" pos:column="31">junk<pos:position pos:line="133" pos:column="35"/></name></decl>;<pos:position pos:line="133" pos:column="36"/></decl_stmt>
                        <expr_stmt><expr><name><name pos:line="134" pos:column="25">port<pos:position pos:line="134" pos:column="29"/></name><index pos:line="134" pos:column="29">[<expr><literal type="number" pos:line="134" pos:column="30">0<pos:position pos:line="134" pos:column="31"/></literal></expr>]<pos:position pos:line="134" pos:column="32"/></index></name> <operator pos:line="134" pos:column="33">=<pos:position pos:line="134" pos:column="34"/></operator> <literal type="char" pos:line="134" pos:column="35">':'<pos:position pos:line="134" pos:column="38"/></literal></expr>;<pos:position pos:line="134" pos:column="39"/></expr_stmt>
                        <expr_stmt><expr><name pos:line="135" pos:column="25">junk<pos:position pos:line="135" pos:column="29"/></name> <operator pos:line="135" pos:column="30">=<pos:position pos:line="135" pos:column="31"/></operator> <call><name pos:line="135" pos:column="32">strchr<pos:position pos:line="135" pos:column="38"/></name><argument_list pos:line="135" pos:column="38">(<argument><expr><name pos:line="135" pos:column="39">host<pos:position pos:line="135" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="135" pos:column="45">TAB<pos:position pos:line="135" pos:column="48"/></name></expr></argument>)<pos:position pos:line="135" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="135" pos:column="50"/></expr_stmt>

                        <if pos:line="137" pos:column="25">if <condition pos:line="137" pos:column="28">(<expr><name pos:line="137" pos:column="29">junk<pos:position pos:line="137" pos:column="33"/></name></expr>)<pos:position pos:line="137" pos:column="34"/></condition><then pos:line="137" pos:column="34">
                            <block type="pseudo"><expr_stmt><expr><operator pos:line="138" pos:column="29">*<pos:position pos:line="138" pos:column="30"/></operator><name pos:line="138" pos:column="30">junk<pos:position pos:line="138" pos:column="34"/></name><operator pos:line="138" pos:column="34">++<pos:position pos:line="138" pos:column="36"/></operator> <operator pos:line="138" pos:column="37">=<pos:position pos:line="138" pos:column="38"/></operator> <literal type="number" pos:line="138" pos:column="39">0<pos:position pos:line="138" pos:column="40"/></literal></expr>;<pos:position pos:line="138" pos:column="41"/></expr_stmt></block></then>	<comment type="block" pos:line="138" pos:column="49">/* Chop port */</comment>
                        <else pos:line="139" pos:column="25">else <block pos:line="139" pos:column="30">{
                            <expr_stmt><expr><name pos:line="140" pos:column="29">junk<pos:position pos:line="140" pos:column="33"/></name> <operator pos:line="140" pos:column="34">=<pos:position pos:line="140" pos:column="35"/></operator> <call><name pos:line="140" pos:column="36">strchr<pos:position pos:line="140" pos:column="42"/></name><argument_list pos:line="140" pos:column="42">(<argument><expr><name pos:line="140" pos:column="43">host<pos:position pos:line="140" pos:column="47"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="140" pos:column="49">'\r'<pos:position pos:line="140" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="140" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="140" pos:column="55"/></expr_stmt>

                            <if pos:line="142" pos:column="29">if <condition pos:line="142" pos:column="32">(<expr><name pos:line="142" pos:column="33">junk<pos:position pos:line="142" pos:column="37"/></name></expr>)<pos:position pos:line="142" pos:column="38"/></condition><then pos:line="142" pos:column="38">
                                <block type="pseudo"><expr_stmt><expr><operator pos:line="143" pos:column="33">*<pos:position pos:line="143" pos:column="34"/></operator><name pos:line="143" pos:column="34">junk<pos:position pos:line="143" pos:column="38"/></name><operator pos:line="143" pos:column="38">++<pos:position pos:line="143" pos:column="40"/></operator> <operator pos:line="143" pos:column="41">=<pos:position pos:line="143" pos:column="42"/></operator> <literal type="number" pos:line="143" pos:column="43">0<pos:position pos:line="143" pos:column="44"/></literal></expr>;<pos:position pos:line="143" pos:column="45"/></expr_stmt></block></then>	<comment type="block" pos:line="143" pos:column="49">/* Chop port */</comment>
                            <else pos:line="144" pos:column="29">else <block pos:line="144" pos:column="34">{
                                <expr_stmt><expr><name pos:line="145" pos:column="33">junk<pos:position pos:line="145" pos:column="37"/></name> <operator pos:line="145" pos:column="38">=<pos:position pos:line="145" pos:column="39"/></operator> <call><name pos:line="145" pos:column="40">strchr<pos:position pos:line="145" pos:column="46"/></name><argument_list pos:line="145" pos:column="46">(<argument><expr><name pos:line="145" pos:column="47">host<pos:position pos:line="145" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="145" pos:column="53">'\n'<pos:position pos:line="145" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="145" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="145" pos:column="59"/></expr_stmt>

                                <if pos:line="147" pos:column="33">if <condition pos:line="147" pos:column="36">(<expr><name pos:line="147" pos:column="37">junk<pos:position pos:line="147" pos:column="41"/></name></expr>)<pos:position pos:line="147" pos:column="42"/></condition><then pos:line="147" pos:column="42">
                                    <block type="pseudo"><expr_stmt><expr><operator pos:line="148" pos:column="37">*<pos:position pos:line="148" pos:column="38"/></operator><name pos:line="148" pos:column="38">junk<pos:position pos:line="148" pos:column="42"/></name><operator pos:line="148" pos:column="42">++<pos:position pos:line="148" pos:column="44"/></operator> <operator pos:line="148" pos:column="45">=<pos:position pos:line="148" pos:column="46"/></operator> <literal type="number" pos:line="148" pos:column="47">0<pos:position pos:line="148" pos:column="48"/></literal></expr>;<pos:position pos:line="148" pos:column="49"/></expr_stmt></block></then></if>	<comment type="block" pos:line="148" pos:column="57">/* Chop port */</comment>
                            }<pos:position pos:line="149" pos:column="30"/></block></else></if>
                        }<pos:position pos:line="150" pos:column="26"/></block></else></if>

                        <if pos:line="152" pos:column="25">if <condition pos:line="152" pos:column="28">(<expr><operator pos:line="152" pos:column="29">(<pos:position pos:line="152" pos:column="30"/></operator><name><name pos:line="152" pos:column="30">port<pos:position pos:line="152" pos:column="34"/></name><index pos:line="152" pos:column="34">[<expr><literal type="number" pos:line="152" pos:column="35">1<pos:position pos:line="152" pos:column="36"/></literal></expr>]<pos:position pos:line="152" pos:column="37"/></index></name> <operator pos:line="152" pos:column="38">==<pos:position pos:line="152" pos:column="40"/></operator> <literal type="char" pos:line="152" pos:column="41">'0'<pos:position pos:line="152" pos:column="44"/></literal><operator pos:line="152" pos:column="44">)<pos:position pos:line="152" pos:column="45"/></operator> <operator pos:line="152" pos:column="46">&amp;&amp;<pos:position pos:line="152" pos:column="56"/></operator> <operator pos:line="152" pos:column="49">(<pos:position pos:line="152" pos:column="50"/></operator><operator pos:line="152" pos:column="50">!<pos:position pos:line="152" pos:column="51"/></operator><name><name pos:line="152" pos:column="51">port<pos:position pos:line="152" pos:column="55"/></name><index pos:line="152" pos:column="55">[<expr><literal type="number" pos:line="152" pos:column="56">2<pos:position pos:line="152" pos:column="57"/></literal></expr>]<pos:position pos:line="152" pos:column="58"/></index></name><operator pos:line="152" pos:column="58">)<pos:position pos:line="152" pos:column="59"/></operator></expr>)<pos:position pos:line="152" pos:column="60"/></condition><then pos:line="152" pos:column="60">
                            <block type="pseudo"><expr_stmt><expr><name><name pos:line="153" pos:column="29">port<pos:position pos:line="153" pos:column="33"/></name><index pos:line="153" pos:column="33">[<expr><literal type="number" pos:line="153" pos:column="34">0<pos:position pos:line="153" pos:column="35"/></literal></expr>]<pos:position pos:line="153" pos:column="36"/></index></name> <operator pos:line="153" pos:column="37">=<pos:position pos:line="153" pos:column="38"/></operator> <literal type="number" pos:line="153" pos:column="39">0<pos:position pos:line="153" pos:column="40"/></literal></expr>;<pos:position pos:line="153" pos:column="41"/></expr_stmt></block></then></if>	<comment type="block" pos:line="153" pos:column="49">/* 0 means none */</comment>
                    }<pos:position pos:line="154" pos:column="22"/></block></then></if>

                    <comment type="block" pos:line="156" pos:column="21">/* escape a selector here */</comment>
                    <expr_stmt><expr><name pos:line="157" pos:column="21">escaped_selector<pos:position pos:line="157" pos:column="37"/></name> <operator pos:line="157" pos:column="38">=<pos:position pos:line="157" pos:column="39"/></operator> <call><name pos:line="157" pos:column="40">xstrdup<pos:position pos:line="157" pos:column="47"/></name><argument_list pos:line="157" pos:column="47">(<argument><expr><call><name pos:line="157" pos:column="48">rfc1738_escape_part<pos:position pos:line="157" pos:column="67"/></name><argument_list pos:line="157" pos:column="67">(<argument><expr><name pos:line="157" pos:column="68">selector<pos:position pos:line="157" pos:column="76"/></name></expr></argument>)<pos:position pos:line="157" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="157" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="79"/></expr_stmt>

                    <switch pos:line="159" pos:column="21">switch <condition pos:line="159" pos:column="28">(<expr><name pos:line="159" pos:column="29">gtype<pos:position pos:line="159" pos:column="34"/></name></expr>)<pos:position pos:line="159" pos:column="35"/></condition> <block pos:line="159" pos:column="36">{

                    <case pos:line="161" pos:column="21">case <expr><name pos:line="161" pos:column="26">GOPHER_DIRECTORY<pos:position pos:line="161" pos:column="42"/></name></expr>:<pos:position pos:line="161" pos:column="43"/></case>
                        <expr_stmt><expr><name pos:line="162" pos:column="25">icon_url<pos:position pos:line="162" pos:column="33"/></name> <operator pos:line="162" pos:column="34">=<pos:position pos:line="162" pos:column="35"/></operator> <call><name pos:line="162" pos:column="36">mimeGetIconURL<pos:position pos:line="162" pos:column="50"/></name><argument_list pos:line="162" pos:column="50">(<argument><expr><literal type="string" pos:line="162" pos:column="51">"internal-menu"<pos:position pos:line="162" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="162" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="162" pos:column="68"/></expr_stmt>
                        <break pos:line="163" pos:column="25">break;<pos:position pos:line="163" pos:column="31"/></break>

                    <case pos:line="165" pos:column="21">case <expr><name pos:line="165" pos:column="26">GOPHER_HTML<pos:position pos:line="165" pos:column="37"/></name></expr>:<pos:position pos:line="165" pos:column="38"/></case>

                    <case pos:line="167" pos:column="21">case <expr><name pos:line="167" pos:column="26">GOPHER_FILE<pos:position pos:line="167" pos:column="37"/></name></expr>:<pos:position pos:line="167" pos:column="38"/></case>
                        <expr_stmt><expr><name pos:line="168" pos:column="25">icon_url<pos:position pos:line="168" pos:column="33"/></name> <operator pos:line="168" pos:column="34">=<pos:position pos:line="168" pos:column="35"/></operator> <call><name pos:line="168" pos:column="36">mimeGetIconURL<pos:position pos:line="168" pos:column="50"/></name><argument_list pos:line="168" pos:column="50">(<argument><expr><literal type="string" pos:line="168" pos:column="51">"internal-text"<pos:position pos:line="168" pos:column="66"/></literal></expr></argument>)<pos:position pos:line="168" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="168" pos:column="68"/></expr_stmt>
                        <break pos:line="169" pos:column="25">break;<pos:position pos:line="169" pos:column="31"/></break>

                    <case pos:line="171" pos:column="21">case <expr><name pos:line="171" pos:column="26">GOPHER_INDEX<pos:position pos:line="171" pos:column="38"/></name></expr>:<pos:position pos:line="171" pos:column="39"/></case>

                    <case pos:line="173" pos:column="21">case <expr><name pos:line="173" pos:column="26">GOPHER_CSO<pos:position pos:line="173" pos:column="36"/></name></expr>:<pos:position pos:line="173" pos:column="37"/></case>
                        <expr_stmt><expr><name pos:line="174" pos:column="25">icon_url<pos:position pos:line="174" pos:column="33"/></name> <operator pos:line="174" pos:column="34">=<pos:position pos:line="174" pos:column="35"/></operator> <call><name pos:line="174" pos:column="36">mimeGetIconURL<pos:position pos:line="174" pos:column="50"/></name><argument_list pos:line="174" pos:column="50">(<argument><expr><literal type="string" pos:line="174" pos:column="51">"internal-index"<pos:position pos:line="174" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="174" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="174" pos:column="69"/></expr_stmt>
                        <break pos:line="175" pos:column="25">break;<pos:position pos:line="175" pos:column="31"/></break>

                    <case pos:line="177" pos:column="21">case <expr><name pos:line="177" pos:column="26">GOPHER_IMAGE<pos:position pos:line="177" pos:column="38"/></name></expr>:<pos:position pos:line="177" pos:column="39"/></case>

                    <case pos:line="179" pos:column="21">case <expr><name pos:line="179" pos:column="26">GOPHER_GIF<pos:position pos:line="179" pos:column="36"/></name></expr>:<pos:position pos:line="179" pos:column="37"/></case>

                    <case pos:line="181" pos:column="21">case <expr><name pos:line="181" pos:column="26">GOPHER_PLUS_IMAGE<pos:position pos:line="181" pos:column="43"/></name></expr>:<pos:position pos:line="181" pos:column="44"/></case>
                        <expr_stmt><expr><name pos:line="182" pos:column="25">icon_url<pos:position pos:line="182" pos:column="33"/></name> <operator pos:line="182" pos:column="34">=<pos:position pos:line="182" pos:column="35"/></operator> <call><name pos:line="182" pos:column="36">mimeGetIconURL<pos:position pos:line="182" pos:column="50"/></name><argument_list pos:line="182" pos:column="50">(<argument><expr><literal type="string" pos:line="182" pos:column="51">"internal-image"<pos:position pos:line="182" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="182" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="182" pos:column="69"/></expr_stmt>
                        <break pos:line="183" pos:column="25">break;<pos:position pos:line="183" pos:column="31"/></break>

                    <case pos:line="185" pos:column="21">case <expr><name pos:line="185" pos:column="26">GOPHER_SOUND<pos:position pos:line="185" pos:column="38"/></name></expr>:<pos:position pos:line="185" pos:column="39"/></case>

                    <case pos:line="187" pos:column="21">case <expr><name pos:line="187" pos:column="26">GOPHER_PLUS_SOUND<pos:position pos:line="187" pos:column="43"/></name></expr>:<pos:position pos:line="187" pos:column="44"/></case>
                        <expr_stmt><expr><name pos:line="188" pos:column="25">icon_url<pos:position pos:line="188" pos:column="33"/></name> <operator pos:line="188" pos:column="34">=<pos:position pos:line="188" pos:column="35"/></operator> <call><name pos:line="188" pos:column="36">mimeGetIconURL<pos:position pos:line="188" pos:column="50"/></name><argument_list pos:line="188" pos:column="50">(<argument><expr><literal type="string" pos:line="188" pos:column="51">"internal-sound"<pos:position pos:line="188" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="188" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="188" pos:column="69"/></expr_stmt>
                        <break pos:line="189" pos:column="25">break;<pos:position pos:line="189" pos:column="31"/></break>

                    <case pos:line="191" pos:column="21">case <expr><name pos:line="191" pos:column="26">GOPHER_PLUS_MOVIE<pos:position pos:line="191" pos:column="43"/></name></expr>:<pos:position pos:line="191" pos:column="44"/></case>
                        <expr_stmt><expr><name pos:line="192" pos:column="25">icon_url<pos:position pos:line="192" pos:column="33"/></name> <operator pos:line="192" pos:column="34">=<pos:position pos:line="192" pos:column="35"/></operator> <call><name pos:line="192" pos:column="36">mimeGetIconURL<pos:position pos:line="192" pos:column="50"/></name><argument_list pos:line="192" pos:column="50">(<argument><expr><literal type="string" pos:line="192" pos:column="51">"internal-movie"<pos:position pos:line="192" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="192" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="192" pos:column="69"/></expr_stmt>
                        <break pos:line="193" pos:column="25">break;<pos:position pos:line="193" pos:column="31"/></break>

                    <case pos:line="195" pos:column="21">case <expr><name pos:line="195" pos:column="26">GOPHER_TELNET<pos:position pos:line="195" pos:column="39"/></name></expr>:<pos:position pos:line="195" pos:column="40"/></case>

                    <case pos:line="197" pos:column="21">case <expr><name pos:line="197" pos:column="26">GOPHER_3270<pos:position pos:line="197" pos:column="37"/></name></expr>:<pos:position pos:line="197" pos:column="38"/></case>
                        <expr_stmt><expr><name pos:line="198" pos:column="25">icon_url<pos:position pos:line="198" pos:column="33"/></name> <operator pos:line="198" pos:column="34">=<pos:position pos:line="198" pos:column="35"/></operator> <call><name pos:line="198" pos:column="36">mimeGetIconURL<pos:position pos:line="198" pos:column="50"/></name><argument_list pos:line="198" pos:column="50">(<argument><expr><literal type="string" pos:line="198" pos:column="51">"internal-telnet"<pos:position pos:line="198" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="198" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="198" pos:column="70"/></expr_stmt>
                        <break pos:line="199" pos:column="25">break;<pos:position pos:line="199" pos:column="31"/></break>

                    <case pos:line="201" pos:column="21">case <expr><name pos:line="201" pos:column="26">GOPHER_BIN<pos:position pos:line="201" pos:column="36"/></name></expr>:<pos:position pos:line="201" pos:column="37"/></case>

                    <case pos:line="203" pos:column="21">case <expr><name pos:line="203" pos:column="26">GOPHER_MACBINHEX<pos:position pos:line="203" pos:column="42"/></name></expr>:<pos:position pos:line="203" pos:column="43"/></case>

                    <case pos:line="205" pos:column="21">case <expr><name pos:line="205" pos:column="26">GOPHER_DOSBIN<pos:position pos:line="205" pos:column="39"/></name></expr>:<pos:position pos:line="205" pos:column="40"/></case>

                    <case pos:line="207" pos:column="21">case <expr><name pos:line="207" pos:column="26">GOPHER_UUENCODED<pos:position pos:line="207" pos:column="42"/></name></expr>:<pos:position pos:line="207" pos:column="43"/></case>
                        <expr_stmt><expr><name pos:line="208" pos:column="25">icon_url<pos:position pos:line="208" pos:column="33"/></name> <operator pos:line="208" pos:column="34">=<pos:position pos:line="208" pos:column="35"/></operator> <call><name pos:line="208" pos:column="36">mimeGetIconURL<pos:position pos:line="208" pos:column="50"/></name><argument_list pos:line="208" pos:column="50">(<argument><expr><literal type="string" pos:line="208" pos:column="51">"internal-binary"<pos:position pos:line="208" pos:column="68"/></literal></expr></argument>)<pos:position pos:line="208" pos:column="69"/></argument_list></call></expr>;<pos:position pos:line="208" pos:column="70"/></expr_stmt>
                        <break pos:line="209" pos:column="25">break;<pos:position pos:line="209" pos:column="31"/></break>

                    <case pos:line="211" pos:column="21">case <expr><name pos:line="211" pos:column="26">GOPHER_INFO<pos:position pos:line="211" pos:column="37"/></name></expr>:<pos:position pos:line="211" pos:column="38"/></case>
                        <expr_stmt><expr><name pos:line="212" pos:column="25">icon_url<pos:position pos:line="212" pos:column="33"/></name> <operator pos:line="212" pos:column="34">=<pos:position pos:line="212" pos:column="35"/></operator> <name pos:line="212" pos:column="36">NULL<pos:position pos:line="212" pos:column="40"/></name></expr>;<pos:position pos:line="212" pos:column="41"/></expr_stmt>
                        <break pos:line="213" pos:column="25">break;<pos:position pos:line="213" pos:column="31"/></break>

                    <default pos:line="215" pos:column="21">default:<pos:position pos:line="215" pos:column="29"/></default>
                        <expr_stmt><expr><name pos:line="216" pos:column="25">icon_url<pos:position pos:line="216" pos:column="33"/></name> <operator pos:line="216" pos:column="34">=<pos:position pos:line="216" pos:column="35"/></operator> <call><name pos:line="216" pos:column="36">mimeGetIconURL<pos:position pos:line="216" pos:column="50"/></name><argument_list pos:line="216" pos:column="50">(<argument><expr><literal type="string" pos:line="216" pos:column="51">"internal-unknown"<pos:position pos:line="216" pos:column="69"/></literal></expr></argument>)<pos:position pos:line="216" pos:column="70"/></argument_list></call></expr>;<pos:position pos:line="216" pos:column="71"/></expr_stmt>
                        <break pos:line="217" pos:column="25">break;<pos:position pos:line="217" pos:column="31"/></break>
                    }<pos:position pos:line="218" pos:column="22"/></block></switch>

                    <expr_stmt><expr><call><name pos:line="220" pos:column="21">memset<pos:position pos:line="220" pos:column="27"/></name><argument_list pos:line="220" pos:column="27">(<argument><expr><name pos:line="220" pos:column="28">tmpbuf<pos:position pos:line="220" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="220" pos:column="36">'\0'<pos:position pos:line="220" pos:column="40"/></literal></expr></argument>, <argument><expr><name pos:line="220" pos:column="42">TEMP_BUF_SIZE<pos:position pos:line="220" pos:column="55"/></name></expr></argument>)<pos:position pos:line="220" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="220" pos:column="57"/></expr_stmt>

                    <if pos:line="222" pos:column="21">if <condition pos:line="222" pos:column="24">(<expr><operator pos:line="222" pos:column="25">(<pos:position pos:line="222" pos:column="26"/></operator><name pos:line="222" pos:column="26">gtype<pos:position pos:line="222" pos:column="31"/></name> <operator pos:line="222" pos:column="32">==<pos:position pos:line="222" pos:column="34"/></operator> <name pos:line="222" pos:column="35">GOPHER_TELNET<pos:position pos:line="222" pos:column="48"/></name><operator pos:line="222" pos:column="48">)<pos:position pos:line="222" pos:column="49"/></operator> <operator pos:line="222" pos:column="50">||<pos:position pos:line="222" pos:column="52"/></operator> <operator pos:line="222" pos:column="53">(<pos:position pos:line="222" pos:column="54"/></operator><name pos:line="222" pos:column="54">gtype<pos:position pos:line="222" pos:column="59"/></name> <operator pos:line="222" pos:column="60">==<pos:position pos:line="222" pos:column="62"/></operator> <name pos:line="222" pos:column="63">GOPHER_3270<pos:position pos:line="222" pos:column="74"/></name><operator pos:line="222" pos:column="74">)<pos:position pos:line="222" pos:column="75"/></operator></expr>)<pos:position pos:line="222" pos:column="76"/></condition><then pos:line="222" pos:column="76"> <block pos:line="222" pos:column="77">{
                        <if pos:line="223" pos:column="25">if <condition pos:line="223" pos:column="28">(<expr><call><name pos:line="223" pos:column="29">strlen<pos:position pos:line="223" pos:column="35"/></name><argument_list pos:line="223" pos:column="35">(<argument><expr><name pos:line="223" pos:column="36">escaped_selector<pos:position pos:line="223" pos:column="52"/></name></expr></argument>)<pos:position pos:line="223" pos:column="53"/></argument_list></call> <operator pos:line="223" pos:column="54">!=<pos:position pos:line="223" pos:column="56"/></operator> <literal type="number" pos:line="223" pos:column="57">0<pos:position pos:line="223" pos:column="58"/></literal></expr>)<pos:position pos:line="223" pos:column="59"/></condition><then pos:line="223" pos:column="59">
                            <block type="pseudo"><expr_stmt><expr><call><name pos:line="224" pos:column="29">snprintf<pos:position pos:line="224" pos:column="37"/></name><argument_list pos:line="224" pos:column="37">(<argument><expr><name pos:line="224" pos:column="38">tmpbuf<pos:position pos:line="224" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="224" pos:column="46">TEMP_BUF_SIZE<pos:position pos:line="224" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="224" pos:column="61">"&lt;IMG border=\"0\" SRC=\"%s\"&gt; &lt;A HREF=\"telnet://%s@%s%s%s/\"&gt;%s&lt;/A&gt;\n"<pos:position pos:line="224" pos:column="151"/></literal></expr></argument>,
                                     <argument><expr><name pos:line="225" pos:column="38">icon_url<pos:position pos:line="225" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="225" pos:column="48">escaped_selector<pos:position pos:line="225" pos:column="64"/></name></expr></argument>, <argument><expr><call><name pos:line="225" pos:column="66">rfc1738_escape_part<pos:position pos:line="225" pos:column="85"/></name><argument_list pos:line="225" pos:column="85">(<argument><expr><name pos:line="225" pos:column="86">host<pos:position pos:line="225" pos:column="90"/></name></expr></argument>)<pos:position pos:line="225" pos:column="91"/></argument_list></call></expr></argument>,
                                     <argument><expr><ternary><condition><expr><operator pos:line="226" pos:column="38">*<pos:position pos:line="226" pos:column="39"/></operator><name pos:line="226" pos:column="39">port<pos:position pos:line="226" pos:column="43"/></name></expr> ?<pos:position pos:line="226" pos:column="45"/></condition><then pos:line="226" pos:column="45"> <expr><literal type="string" pos:line="226" pos:column="46">":"<pos:position pos:line="226" pos:column="49"/></literal></expr> <pos:position pos:line="226" pos:column="50"/></then><else pos:line="226" pos:column="50">: <expr><literal type="string" pos:line="226" pos:column="52">""<pos:position pos:line="226" pos:column="54"/></literal></expr></else></ternary></expr></argument>, <argument><expr><name pos:line="226" pos:column="56">port<pos:position pos:line="226" pos:column="60"/></name></expr></argument>, <argument><expr><call><name pos:line="226" pos:column="62">html_quote<pos:position pos:line="226" pos:column="72"/></name><argument_list pos:line="226" pos:column="72">(<argument><expr><name pos:line="226" pos:column="73">name<pos:position pos:line="226" pos:column="77"/></name></expr></argument>)<pos:position pos:line="226" pos:column="78"/></argument_list></call></expr></argument>)<pos:position pos:line="226" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="226" pos:column="80"/></expr_stmt></block></then>
                        <else pos:line="227" pos:column="25">else
                            <block type="pseudo"><expr_stmt><expr><call><name pos:line="228" pos:column="29">snprintf<pos:position pos:line="228" pos:column="37"/></name><argument_list pos:line="228" pos:column="37">(<argument><expr><name pos:line="228" pos:column="38">tmpbuf<pos:position pos:line="228" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="228" pos:column="46">TEMP_BUF_SIZE<pos:position pos:line="228" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="228" pos:column="61">"&lt;IMG border=\"0\" SRC=\"%s\"&gt; &lt;A HREF=\"telnet://%s%s%s/\"&gt;%s&lt;/A&gt;\n"<pos:position pos:line="228" pos:column="148"/></literal></expr></argument>,
                                     <argument><expr><name pos:line="229" pos:column="38">icon_url<pos:position pos:line="229" pos:column="46"/></name></expr></argument>, <argument><expr><call><name pos:line="229" pos:column="48">rfc1738_escape_part<pos:position pos:line="229" pos:column="67"/></name><argument_list pos:line="229" pos:column="67">(<argument><expr><name pos:line="229" pos:column="68">host<pos:position pos:line="229" pos:column="72"/></name></expr></argument>)<pos:position pos:line="229" pos:column="73"/></argument_list></call></expr></argument>, <argument><expr><ternary><condition><expr><operator pos:line="229" pos:column="75">*<pos:position pos:line="229" pos:column="76"/></operator><name pos:line="229" pos:column="76">port<pos:position pos:line="229" pos:column="80"/></name></expr> ?<pos:position pos:line="229" pos:column="82"/></condition><then pos:line="229" pos:column="82"> <expr><literal type="string" pos:line="229" pos:column="83">":"<pos:position pos:line="229" pos:column="86"/></literal></expr> <pos:position pos:line="229" pos:column="87"/></then><else pos:line="229" pos:column="87">: <expr><literal type="string" pos:line="229" pos:column="89">""<pos:position pos:line="229" pos:column="91"/></literal></expr></else></ternary></expr></argument>,
                                     <argument><expr><name pos:line="230" pos:column="38">port<pos:position pos:line="230" pos:column="42"/></name></expr></argument>, <argument><expr><call><name pos:line="230" pos:column="44">html_quote<pos:position pos:line="230" pos:column="54"/></name><argument_list pos:line="230" pos:column="54">(<argument><expr><name pos:line="230" pos:column="55">name<pos:position pos:line="230" pos:column="59"/></name></expr></argument>)<pos:position pos:line="230" pos:column="60"/></argument_list></call></expr></argument>)<pos:position pos:line="230" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="230" pos:column="62"/></expr_stmt></block></else></if>

                    }<pos:position pos:line="232" pos:column="22"/></block></then> <elseif pos:line="232" pos:column="23">else <if pos:line="232" pos:column="28">if <condition pos:line="232" pos:column="31">(<expr><name pos:line="232" pos:column="32">gtype<pos:position pos:line="232" pos:column="37"/></name> <operator pos:line="232" pos:column="38">==<pos:position pos:line="232" pos:column="40"/></operator> <name pos:line="232" pos:column="41">GOPHER_INFO<pos:position pos:line="232" pos:column="52"/></name></expr>)<pos:position pos:line="232" pos:column="53"/></condition><then pos:line="232" pos:column="53"> <block pos:line="232" pos:column="54">{
                        <expr_stmt><expr><call><name pos:line="233" pos:column="25">snprintf<pos:position pos:line="233" pos:column="33"/></name><argument_list pos:line="233" pos:column="33">(<argument><expr><name pos:line="233" pos:column="34">tmpbuf<pos:position pos:line="233" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="233" pos:column="42">TEMP_BUF_SIZE<pos:position pos:line="233" pos:column="55"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="233" pos:column="57">"\t%s\n"<pos:position pos:line="233" pos:column="65"/></literal></expr></argument>, <argument><expr><call><name pos:line="233" pos:column="67">html_quote<pos:position pos:line="233" pos:column="77"/></name><argument_list pos:line="233" pos:column="77">(<argument><expr><name pos:line="233" pos:column="78">name<pos:position pos:line="233" pos:column="82"/></name></expr></argument>)<pos:position pos:line="233" pos:column="83"/></argument_list></call></expr></argument>)<pos:position pos:line="233" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="233" pos:column="85"/></expr_stmt>
                    }<pos:position pos:line="234" pos:column="22"/></block></then></if></elseif> <else pos:line="234" pos:column="23">else <block pos:line="234" pos:column="28">{
                        <if pos:line="235" pos:column="25">if <condition pos:line="235" pos:column="28">(<expr><call><name pos:line="235" pos:column="29">strncmp<pos:position pos:line="235" pos:column="36"/></name><argument_list pos:line="235" pos:column="36">(<argument><expr><name pos:line="235" pos:column="37">selector<pos:position pos:line="235" pos:column="45"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="235" pos:column="47">"GET /"<pos:position pos:line="235" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="235" pos:column="56">5<pos:position pos:line="235" pos:column="57"/></literal></expr></argument>)<pos:position pos:line="235" pos:column="58"/></argument_list></call> <operator pos:line="235" pos:column="59">==<pos:position pos:line="235" pos:column="61"/></operator> <literal type="number" pos:line="235" pos:column="62">0<pos:position pos:line="235" pos:column="63"/></literal></expr>)<pos:position pos:line="235" pos:column="64"/></condition><then pos:line="235" pos:column="64"> <block pos:line="235" pos:column="65">{
                            <comment type="block" pos:line="236" pos:column="29">/* WWW link */</comment>
                            <expr_stmt><expr><call><name pos:line="237" pos:column="29">snprintf<pos:position pos:line="237" pos:column="37"/></name><argument_list pos:line="237" pos:column="37">(<argument><expr><name pos:line="237" pos:column="38">tmpbuf<pos:position pos:line="237" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="237" pos:column="46">TEMP_BUF_SIZE<pos:position pos:line="237" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="237" pos:column="61">"&lt;IMG border=\"0\" SRC=\"%s\"&gt; &lt;A HREF=\"http://%s/%s\"&gt;%s&lt;/A&gt;\n"<pos:position pos:line="237" pos:column="144"/></literal></expr></argument>,
                                     <argument><expr><name pos:line="238" pos:column="38">icon_url<pos:position pos:line="238" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="238" pos:column="48">host<pos:position pos:line="238" pos:column="52"/></name></expr></argument>, <argument><expr><call><name pos:line="238" pos:column="54">rfc1738_escape_unescaped<pos:position pos:line="238" pos:column="78"/></name><argument_list pos:line="238" pos:column="78">(<argument><expr><name pos:line="238" pos:column="79">selector<pos:position pos:line="238" pos:column="87"/></name> <operator pos:line="238" pos:column="88">+<pos:position pos:line="238" pos:column="89"/></operator> <literal type="number" pos:line="238" pos:column="90">5<pos:position pos:line="238" pos:column="91"/></literal></expr></argument>)<pos:position pos:line="238" pos:column="92"/></argument_list></call></expr></argument>, <argument><expr><call><name pos:line="238" pos:column="94">html_quote<pos:position pos:line="238" pos:column="104"/></name><argument_list pos:line="238" pos:column="104">(<argument><expr><name pos:line="238" pos:column="105">name<pos:position pos:line="238" pos:column="109"/></name></expr></argument>)<pos:position pos:line="238" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="238" pos:column="111"/></argument_list></call></expr>;<pos:position pos:line="238" pos:column="112"/></expr_stmt>
                        }<pos:position pos:line="239" pos:column="26"/></block></then> <else pos:line="239" pos:column="27">else <block pos:line="239" pos:column="32">{
                            <comment type="block" pos:line="240" pos:column="29">/* Standard link */</comment>
                            <expr_stmt><expr><call><name pos:line="241" pos:column="29">snprintf<pos:position pos:line="241" pos:column="37"/></name><argument_list pos:line="241" pos:column="37">(<argument><expr><name pos:line="241" pos:column="38">tmpbuf<pos:position pos:line="241" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="241" pos:column="46">TEMP_BUF_SIZE<pos:position pos:line="241" pos:column="59"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="241" pos:column="61">"&lt;IMG border=\"0\" SRC=\"%s\"&gt; &lt;A HREF=\"gopher://%s/%c%s\"&gt;%s&lt;/A&gt;\n"<pos:position pos:line="241" pos:column="148"/></literal></expr></argument>,
                                     <argument><expr><name pos:line="242" pos:column="38">icon_url<pos:position pos:line="242" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="48">host<pos:position pos:line="242" pos:column="52"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="54">gtype<pos:position pos:line="242" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="242" pos:column="61">escaped_selector<pos:position pos:line="242" pos:column="77"/></name></expr></argument>, <argument><expr><call><name pos:line="242" pos:column="79">html_quote<pos:position pos:line="242" pos:column="89"/></name><argument_list pos:line="242" pos:column="89">(<argument><expr><name pos:line="242" pos:column="90">name<pos:position pos:line="242" pos:column="94"/></name></expr></argument>)<pos:position pos:line="242" pos:column="95"/></argument_list></call></expr></argument>)<pos:position pos:line="242" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="242" pos:column="97"/></expr_stmt>
                        }<pos:position pos:line="243" pos:column="26"/></block></else></if>
                    }<pos:position pos:line="244" pos:column="22"/></block></else></if>

                    <expr_stmt><expr><call><name pos:line="246" pos:column="21">safe_free<pos:position pos:line="246" pos:column="30"/></name><argument_list pos:line="246" pos:column="30">(<argument><expr><name pos:line="246" pos:column="31">escaped_selector<pos:position pos:line="246" pos:column="47"/></name></expr></argument>)<pos:position pos:line="246" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="246" pos:column="49"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="247" pos:column="21">outbuf<pos:position pos:line="247" pos:column="27"/></name><operator pos:line="247" pos:column="27">.<pos:position pos:line="247" pos:column="28"/></operator><name pos:line="247" pos:column="28">append<pos:position pos:line="247" pos:column="34"/></name></name><argument_list pos:line="247" pos:column="34">(<argument><expr><name pos:line="247" pos:column="35">tmpbuf<pos:position pos:line="247" pos:column="41"/></name></expr></argument>)<pos:position pos:line="247" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="247" pos:column="43"/></expr_stmt>
                }<pos:position pos:line="248" pos:column="18"/></block></then> <else pos:line="248" pos:column="19">else <block pos:line="248" pos:column="24">{
                    <expr_stmt><expr><call><name pos:line="249" pos:column="21">memset<pos:position pos:line="249" pos:column="27"/></name><argument_list pos:line="249" pos:column="27">(<argument><expr><name pos:line="249" pos:column="28">line<pos:position pos:line="249" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="249" pos:column="34">'\0'<pos:position pos:line="249" pos:column="38"/></literal></expr></argument>, <argument><expr><name pos:line="249" pos:column="40">TEMP_BUF_SIZE<pos:position pos:line="249" pos:column="53"/></name></expr></argument>)<pos:position pos:line="249" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="249" pos:column="55"/></expr_stmt>
                    <continue pos:line="250" pos:column="21">continue;<pos:position pos:line="250" pos:column="30"/></continue>
                }<pos:position pos:line="251" pos:column="18"/></block></else></if>
            }<pos:position pos:line="252" pos:column="14"/></block></then> <else pos:line="252" pos:column="15">else <block pos:line="252" pos:column="20">{
                <expr_stmt><expr><call><name pos:line="253" pos:column="17">memset<pos:position pos:line="253" pos:column="23"/></name><argument_list pos:line="253" pos:column="23">(<argument><expr><name pos:line="253" pos:column="24">line<pos:position pos:line="253" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="char" pos:line="253" pos:column="30">'\0'<pos:position pos:line="253" pos:column="34"/></literal></expr></argument>, <argument><expr><name pos:line="253" pos:column="36">TEMP_BUF_SIZE<pos:position pos:line="253" pos:column="49"/></name></expr></argument>)<pos:position pos:line="253" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="253" pos:column="51"/></expr_stmt>
                <continue pos:line="254" pos:column="17">continue;<pos:position pos:line="254" pos:column="26"/></continue>
            }<pos:position pos:line="255" pos:column="14"/></block></else></if>

            <break pos:line="257" pos:column="13">break;<pos:position pos:line="257" pos:column="19"/></break>
        }<pos:position pos:line="258" pos:column="10"/></block>			<comment type="block" pos:line="258" pos:column="33">/* HTML_DIR, HTML_INDEX_RESULT */</comment>

        <case pos:line="260" pos:column="9">case <expr><name><name pos:line="260" pos:column="14">gopher_ds<pos:position pos:line="260" pos:column="23"/></name><operator pos:line="260" pos:column="23">::<pos:position pos:line="260" pos:column="25"/></operator><name pos:line="260" pos:column="25">HTML_CSO_RESULT<pos:position pos:line="260" pos:column="40"/></name></name></expr>:<pos:position pos:line="260" pos:column="41"/></case> <block pos:line="260" pos:column="42">{
            <if pos:line="261" pos:column="13">if <condition pos:line="261" pos:column="16">(<expr><name><name pos:line="261" pos:column="17">line<pos:position pos:line="261" pos:column="21"/></name><index pos:line="261" pos:column="21">[<expr><literal type="number" pos:line="261" pos:column="22">0<pos:position pos:line="261" pos:column="23"/></literal></expr>]<pos:position pos:line="261" pos:column="24"/></index></name> <operator pos:line="261" pos:column="25">==<pos:position pos:line="261" pos:column="27"/></operator> <literal type="char" pos:line="261" pos:column="28">'-'<pos:position pos:line="261" pos:column="31"/></literal></expr>)<pos:position pos:line="261" pos:column="32"/></condition><then pos:line="261" pos:column="32"> <block pos:line="261" pos:column="33">{
                <decl_stmt><decl><type><name pos:line="262" pos:column="17">int<pos:position pos:line="262" pos:column="20"/></name></type> <name pos:line="262" pos:column="21">code<pos:position pos:line="262" pos:column="25"/></name></decl>, <decl><type ref="prev"/><name pos:line="262" pos:column="27">recno<pos:position pos:line="262" pos:column="32"/></name></decl>;<pos:position pos:line="262" pos:column="33"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="263" pos:column="17">char<pos:position pos:line="263" pos:column="21"/></name> <modifier pos:line="263" pos:column="22">*<pos:position pos:line="263" pos:column="23"/></modifier></type><name pos:line="263" pos:column="23">s_code<pos:position pos:line="263" pos:column="29"/></name></decl>, <modifier pos:line="263" pos:column="31">*<pos:position pos:line="263" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="263" pos:column="32">s_recno<pos:position pos:line="263" pos:column="39"/></name></decl>, <modifier pos:line="263" pos:column="41">*<pos:position pos:line="263" pos:column="42"/></modifier><decl><type ref="prev"/><name pos:line="263" pos:column="42">result<pos:position pos:line="263" pos:column="48"/></name></decl>;<pos:position pos:line="263" pos:column="49"/></decl_stmt>

                <expr_stmt><expr><name pos:line="265" pos:column="17">s_code<pos:position pos:line="265" pos:column="23"/></name> <operator pos:line="265" pos:column="24">=<pos:position pos:line="265" pos:column="25"/></operator> <call><name pos:line="265" pos:column="26">strtok<pos:position pos:line="265" pos:column="32"/></name><argument_list pos:line="265" pos:column="32">(<argument><expr><name pos:line="265" pos:column="33">line<pos:position pos:line="265" pos:column="37"/></name> <operator pos:line="265" pos:column="38">+<pos:position pos:line="265" pos:column="39"/></operator> <literal type="number" pos:line="265" pos:column="40">1<pos:position pos:line="265" pos:column="41"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="265" pos:column="43">":\n"<pos:position pos:line="265" pos:column="48"/></literal></expr></argument>)<pos:position pos:line="265" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="265" pos:column="50"/></expr_stmt>
                <expr_stmt><expr><name pos:line="266" pos:column="17">s_recno<pos:position pos:line="266" pos:column="24"/></name> <operator pos:line="266" pos:column="25">=<pos:position pos:line="266" pos:column="26"/></operator> <call><name pos:line="266" pos:column="27">strtok<pos:position pos:line="266" pos:column="33"/></name><argument_list pos:line="266" pos:column="33">(<argument><expr><name pos:line="266" pos:column="34">NULL<pos:position pos:line="266" pos:column="38"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="266" pos:column="40">":\n"<pos:position pos:line="266" pos:column="45"/></literal></expr></argument>)<pos:position pos:line="266" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="266" pos:column="47"/></expr_stmt>
                <expr_stmt><expr><name pos:line="267" pos:column="17">result<pos:position pos:line="267" pos:column="23"/></name> <operator pos:line="267" pos:column="24">=<pos:position pos:line="267" pos:column="25"/></operator> <call><name pos:line="267" pos:column="26">strtok<pos:position pos:line="267" pos:column="32"/></name><argument_list pos:line="267" pos:column="32">(<argument><expr><name pos:line="267" pos:column="33">NULL<pos:position pos:line="267" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="267" pos:column="39">"\n"<pos:position pos:line="267" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="267" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="267" pos:column="45"/></expr_stmt>

                <if pos:line="269" pos:column="17">if <condition pos:line="269" pos:column="20">(<expr><operator pos:line="269" pos:column="21">!<pos:position pos:line="269" pos:column="22"/></operator><name pos:line="269" pos:column="22">result<pos:position pos:line="269" pos:column="28"/></name></expr>)<pos:position pos:line="269" pos:column="29"/></condition><then pos:line="269" pos:column="29">
                    <block type="pseudo"><break pos:line="270" pos:column="21">break;<pos:position pos:line="270" pos:column="27"/></break></block></then></if>

                <expr_stmt><expr><name pos:line="272" pos:column="17">code<pos:position pos:line="272" pos:column="21"/></name> <operator pos:line="272" pos:column="22">=<pos:position pos:line="272" pos:column="23"/></operator> <call><name pos:line="272" pos:column="24">atoi<pos:position pos:line="272" pos:column="28"/></name><argument_list pos:line="272" pos:column="28">(<argument><expr><name pos:line="272" pos:column="29">s_code<pos:position pos:line="272" pos:column="35"/></name></expr></argument>)<pos:position pos:line="272" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="272" pos:column="37"/></expr_stmt>

                <expr_stmt><expr><name pos:line="274" pos:column="17">recno<pos:position pos:line="274" pos:column="22"/></name> <operator pos:line="274" pos:column="23">=<pos:position pos:line="274" pos:column="24"/></operator> <call><name pos:line="274" pos:column="25">atoi<pos:position pos:line="274" pos:column="29"/></name><argument_list pos:line="274" pos:column="29">(<argument><expr><name pos:line="274" pos:column="30">s_recno<pos:position pos:line="274" pos:column="37"/></name></expr></argument>)<pos:position pos:line="274" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="274" pos:column="39"/></expr_stmt>

                <if pos:line="276" pos:column="17">if <condition pos:line="276" pos:column="20">(<expr><name pos:line="276" pos:column="21">code<pos:position pos:line="276" pos:column="25"/></name> <operator pos:line="276" pos:column="26">!=<pos:position pos:line="276" pos:column="28"/></operator> <literal type="number" pos:line="276" pos:column="29">200<pos:position pos:line="276" pos:column="32"/></literal></expr>)<pos:position pos:line="276" pos:column="33"/></condition><then pos:line="276" pos:column="33">
                    <block type="pseudo"><break pos:line="277" pos:column="21">break;<pos:position pos:line="277" pos:column="27"/></break></block></then></if>

                <if pos:line="279" pos:column="17">if <condition pos:line="279" pos:column="20">(<expr><name><name pos:line="279" pos:column="21">gopherState<pos:position pos:line="279" pos:column="32"/></name><operator pos:line="279" pos:column="32">-&gt;<pos:position pos:line="279" pos:column="37"/></operator><name pos:line="279" pos:column="34">cso_recno<pos:position pos:line="279" pos:column="43"/></name></name> <operator pos:line="279" pos:column="44">!=<pos:position pos:line="279" pos:column="46"/></operator> <name pos:line="279" pos:column="47">recno<pos:position pos:line="279" pos:column="52"/></name></expr>)<pos:position pos:line="279" pos:column="53"/></condition><then pos:line="279" pos:column="53"> <block pos:line="279" pos:column="54">{
                    <expr_stmt><expr><call><name pos:line="280" pos:column="21">snprintf<pos:position pos:line="280" pos:column="29"/></name><argument_list pos:line="280" pos:column="29">(<argument><expr><name pos:line="280" pos:column="30">tmpbuf<pos:position pos:line="280" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="280" pos:column="38">TEMP_BUF_SIZE<pos:position pos:line="280" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="280" pos:column="53">"&lt;/PRE&gt;&lt;HR noshade size=\"1px\"&gt;&lt;H2&gt;Record# %d&lt;br&gt;&lt;i&gt;%s&lt;/i&gt;&lt;/H2&gt;\n&lt;PRE&gt;"<pos:position pos:line="280" pos:column="173"/></literal></expr></argument>, <argument><expr><name pos:line="280" pos:column="127">recno<pos:position pos:line="280" pos:column="132"/></name></expr></argument>, <argument><expr><call><name pos:line="280" pos:column="134">html_quote<pos:position pos:line="280" pos:column="144"/></name><argument_list pos:line="280" pos:column="144">(<argument><expr><name pos:line="280" pos:column="145">result<pos:position pos:line="280" pos:column="151"/></name></expr></argument>)<pos:position pos:line="280" pos:column="152"/></argument_list></call></expr></argument>)<pos:position pos:line="280" pos:column="153"/></argument_list></call></expr>;<pos:position pos:line="280" pos:column="154"/></expr_stmt>
                    <expr_stmt><expr><name><name pos:line="281" pos:column="21">gopherState<pos:position pos:line="281" pos:column="32"/></name><operator pos:line="281" pos:column="32">-&gt;<pos:position pos:line="281" pos:column="37"/></operator><name pos:line="281" pos:column="34">cso_recno<pos:position pos:line="281" pos:column="43"/></name></name> <operator pos:line="281" pos:column="44">=<pos:position pos:line="281" pos:column="45"/></operator> <name pos:line="281" pos:column="46">recno<pos:position pos:line="281" pos:column="51"/></name></expr>;<pos:position pos:line="281" pos:column="52"/></expr_stmt>
                }<pos:position pos:line="282" pos:column="18"/></block></then> <else pos:line="282" pos:column="19">else <block pos:line="282" pos:column="24">{
                    <expr_stmt><expr><call><name pos:line="283" pos:column="21">snprintf<pos:position pos:line="283" pos:column="29"/></name><argument_list pos:line="283" pos:column="29">(<argument><expr><name pos:line="283" pos:column="30">tmpbuf<pos:position pos:line="283" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="283" pos:column="38">TEMP_BUF_SIZE<pos:position pos:line="283" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="283" pos:column="53">"%s\n"<pos:position pos:line="283" pos:column="59"/></literal></expr></argument>, <argument><expr><call><name pos:line="283" pos:column="61">html_quote<pos:position pos:line="283" pos:column="71"/></name><argument_list pos:line="283" pos:column="71">(<argument><expr><name pos:line="283" pos:column="72">result<pos:position pos:line="283" pos:column="78"/></name></expr></argument>)<pos:position pos:line="283" pos:column="79"/></argument_list></call></expr></argument>)<pos:position pos:line="283" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="283" pos:column="81"/></expr_stmt>
                }<pos:position pos:line="284" pos:column="18"/></block></else></if>

                <expr_stmt><expr><call><name><name pos:line="286" pos:column="17">outbuf<pos:position pos:line="286" pos:column="23"/></name><operator pos:line="286" pos:column="23">.<pos:position pos:line="286" pos:column="24"/></operator><name pos:line="286" pos:column="24">append<pos:position pos:line="286" pos:column="30"/></name></name><argument_list pos:line="286" pos:column="30">(<argument><expr><name pos:line="286" pos:column="31">tmpbuf<pos:position pos:line="286" pos:column="37"/></name></expr></argument>)<pos:position pos:line="286" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="286" pos:column="39"/></expr_stmt>
                <break pos:line="287" pos:column="17">break;<pos:position pos:line="287" pos:column="23"/></break>
            }<pos:position pos:line="288" pos:column="14"/></block></then> <else pos:line="288" pos:column="15">else <block pos:line="288" pos:column="20">{
                <decl_stmt><decl><type><name pos:line="289" pos:column="17">int<pos:position pos:line="289" pos:column="20"/></name></type> <name pos:line="289" pos:column="21">code<pos:position pos:line="289" pos:column="25"/></name></decl>;<pos:position pos:line="289" pos:column="26"/></decl_stmt>
                <decl_stmt><decl><type><name pos:line="290" pos:column="17">char<pos:position pos:line="290" pos:column="21"/></name> <modifier pos:line="290" pos:column="22">*<pos:position pos:line="290" pos:column="23"/></modifier></type><name pos:line="290" pos:column="23">s_code<pos:position pos:line="290" pos:column="29"/></name></decl>, <modifier pos:line="290" pos:column="31">*<pos:position pos:line="290" pos:column="32"/></modifier><decl><type ref="prev"/><name pos:line="290" pos:column="32">result<pos:position pos:line="290" pos:column="38"/></name></decl>;<pos:position pos:line="290" pos:column="39"/></decl_stmt>

                <expr_stmt><expr><name pos:line="292" pos:column="17">s_code<pos:position pos:line="292" pos:column="23"/></name> <operator pos:line="292" pos:column="24">=<pos:position pos:line="292" pos:column="25"/></operator> <call><name pos:line="292" pos:column="26">strtok<pos:position pos:line="292" pos:column="32"/></name><argument_list pos:line="292" pos:column="32">(<argument><expr><name pos:line="292" pos:column="33">line<pos:position pos:line="292" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="292" pos:column="39">":"<pos:position pos:line="292" pos:column="42"/></literal></expr></argument>)<pos:position pos:line="292" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="292" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name pos:line="293" pos:column="17">result<pos:position pos:line="293" pos:column="23"/></name> <operator pos:line="293" pos:column="24">=<pos:position pos:line="293" pos:column="25"/></operator> <call><name pos:line="293" pos:column="26">strtok<pos:position pos:line="293" pos:column="32"/></name><argument_list pos:line="293" pos:column="32">(<argument><expr><name pos:line="293" pos:column="33">NULL<pos:position pos:line="293" pos:column="37"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="293" pos:column="39">"\n"<pos:position pos:line="293" pos:column="43"/></literal></expr></argument>)<pos:position pos:line="293" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="293" pos:column="45"/></expr_stmt>

                <if pos:line="295" pos:column="17">if <condition pos:line="295" pos:column="20">(<expr><operator pos:line="295" pos:column="21">!<pos:position pos:line="295" pos:column="22"/></operator><name pos:line="295" pos:column="22">result<pos:position pos:line="295" pos:column="28"/></name></expr>)<pos:position pos:line="295" pos:column="29"/></condition><then pos:line="295" pos:column="29">
                    <block type="pseudo"><break pos:line="296" pos:column="21">break;<pos:position pos:line="296" pos:column="27"/></break></block></then></if>

                <expr_stmt><expr><name pos:line="298" pos:column="17">code<pos:position pos:line="298" pos:column="21"/></name> <operator pos:line="298" pos:column="22">=<pos:position pos:line="298" pos:column="23"/></operator> <call><name pos:line="298" pos:column="24">atoi<pos:position pos:line="298" pos:column="28"/></name><argument_list pos:line="298" pos:column="28">(<argument><expr><name pos:line="298" pos:column="29">s_code<pos:position pos:line="298" pos:column="35"/></name></expr></argument>)<pos:position pos:line="298" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="298" pos:column="37"/></expr_stmt>

                <switch pos:line="300" pos:column="17">switch <condition pos:line="300" pos:column="24">(<expr><name pos:line="300" pos:column="25">code<pos:position pos:line="300" pos:column="29"/></name></expr>)<pos:position pos:line="300" pos:column="30"/></condition> <block pos:line="300" pos:column="31">{

                <case pos:line="302" pos:column="17">case <expr><literal type="number" pos:line="302" pos:column="22">200<pos:position pos:line="302" pos:column="25"/></literal></expr>:<pos:position pos:line="302" pos:column="26"/></case> <block pos:line="302" pos:column="27">{
                    <comment type="block" pos:line="303" pos:column="21">/* OK */</comment>
                    <comment type="block" pos:line="304" pos:column="21">/* Do nothing here */</comment>
                    <break pos:line="305" pos:column="21">break;<pos:position pos:line="305" pos:column="27"/></break>
                }<pos:position pos:line="306" pos:column="18"/></block>

                <case pos:line="308" pos:column="17">case <expr><literal type="number" pos:line="308" pos:column="22">102<pos:position pos:line="308" pos:column="25"/></literal></expr>:<pos:position pos:line="308" pos:column="26"/></case>	<comment type="block" pos:line="308" pos:column="33">/* Number of matches */</comment>

                <case pos:line="310" pos:column="17">case <expr><literal type="number" pos:line="310" pos:column="22">501<pos:position pos:line="310" pos:column="25"/></literal></expr>:<pos:position pos:line="310" pos:column="26"/></case>	<comment type="block" pos:line="310" pos:column="33">/* No Match */</comment>

                <case pos:line="312" pos:column="17">case <expr><literal type="number" pos:line="312" pos:column="22">502<pos:position pos:line="312" pos:column="25"/></literal></expr>:<pos:position pos:line="312" pos:column="26"/></case> <block pos:line="312" pos:column="27">{	<comment type="block" pos:line="312" pos:column="33">/* Too Many Matches */</comment>
                    <comment type="block" pos:line="313" pos:column="21">/* Print the message the server returns */</comment>
                    <expr_stmt><expr><call><name pos:line="314" pos:column="21">snprintf<pos:position pos:line="314" pos:column="29"/></name><argument_list pos:line="314" pos:column="29">(<argument><expr><name pos:line="314" pos:column="30">tmpbuf<pos:position pos:line="314" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="314" pos:column="38">TEMP_BUF_SIZE<pos:position pos:line="314" pos:column="51"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="314" pos:column="53">"&lt;/PRE&gt;&lt;HR noshade size=\"1px\"&gt;&lt;H2&gt;%s&lt;/H2&gt;\n&lt;PRE&gt;"<pos:position pos:line="314" pos:column="134"/></literal></expr></argument>, <argument><expr><call><name pos:line="314" pos:column="106">html_quote<pos:position pos:line="314" pos:column="116"/></name><argument_list pos:line="314" pos:column="116">(<argument><expr><name pos:line="314" pos:column="117">result<pos:position pos:line="314" pos:column="123"/></name></expr></argument>)<pos:position pos:line="314" pos:column="124"/></argument_list></call></expr></argument>)<pos:position pos:line="314" pos:column="125"/></argument_list></call></expr>;<pos:position pos:line="314" pos:column="126"/></expr_stmt>
                    <expr_stmt><expr><call><name><name pos:line="315" pos:column="21">outbuf<pos:position pos:line="315" pos:column="27"/></name><operator pos:line="315" pos:column="27">.<pos:position pos:line="315" pos:column="28"/></operator><name pos:line="315" pos:column="28">append<pos:position pos:line="315" pos:column="34"/></name></name><argument_list pos:line="315" pos:column="34">(<argument><expr><name pos:line="315" pos:column="35">tmpbuf<pos:position pos:line="315" pos:column="41"/></name></expr></argument>)<pos:position pos:line="315" pos:column="42"/></argument_list></call></expr>;<pos:position pos:line="315" pos:column="43"/></expr_stmt>
                    <break pos:line="316" pos:column="21">break;<pos:position pos:line="316" pos:column="27"/></break>
                }<pos:position pos:line="317" pos:column="18"/></block>

                }<pos:position pos:line="319" pos:column="18"/></block></switch>
            }<pos:position pos:line="320" pos:column="14"/></block></else></if>

        }<pos:position pos:line="322" pos:column="10"/></block>			<comment type="block" pos:line="322" pos:column="33">/* HTML_CSO_RESULT */</comment>

        <default pos:line="324" pos:column="9">default:<pos:position pos:line="324" pos:column="17"/></default>
            <break pos:line="325" pos:column="13">break;<pos:position pos:line="325" pos:column="19"/></break>		<comment type="block" pos:line="325" pos:column="33">/* do nothing */</comment>

        }<pos:position pos:line="327" pos:column="10"/></block></switch>			<comment type="block" pos:line="327" pos:column="33">/* switch */</comment>

    }<pos:position pos:line="329" pos:column="6"/></block></while>				<comment type="block" pos:line="329" pos:column="33">/* while loop */</comment>

    <if pos:line="331" pos:column="5">if <condition pos:line="331" pos:column="8">(<expr><call><name><name pos:line="331" pos:column="9">outbuf<pos:position pos:line="331" pos:column="15"/></name><operator pos:line="331" pos:column="15">.<pos:position pos:line="331" pos:column="16"/></operator><name pos:line="331" pos:column="16">size<pos:position pos:line="331" pos:column="20"/></name></name><argument_list pos:line="331" pos:column="20">()<pos:position pos:line="331" pos:column="22"/></argument_list></call> <operator pos:line="331" pos:column="23">&gt;<pos:position pos:line="331" pos:column="27"/></operator> <literal type="number" pos:line="331" pos:column="25">0<pos:position pos:line="331" pos:column="26"/></literal></expr>)<pos:position pos:line="331" pos:column="27"/></condition><then pos:line="331" pos:column="27"> <block pos:line="331" pos:column="28">{
        <expr_stmt><expr><call><name><name pos:line="332" pos:column="9">entry<pos:position pos:line="332" pos:column="14"/></name><operator pos:line="332" pos:column="14">-&gt;<pos:position pos:line="332" pos:column="19"/></operator><name pos:line="332" pos:column="16">append<pos:position pos:line="332" pos:column="22"/></name></name><argument_list pos:line="332" pos:column="22">(<argument><expr><call><name><name pos:line="332" pos:column="23">outbuf<pos:position pos:line="332" pos:column="29"/></name><operator pos:line="332" pos:column="29">.<pos:position pos:line="332" pos:column="30"/></operator><name pos:line="332" pos:column="30">rawBuf<pos:position pos:line="332" pos:column="36"/></name></name><argument_list pos:line="332" pos:column="36">()<pos:position pos:line="332" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><call><name><name pos:line="332" pos:column="40">outbuf<pos:position pos:line="332" pos:column="46"/></name><operator pos:line="332" pos:column="46">.<pos:position pos:line="332" pos:column="47"/></operator><name pos:line="332" pos:column="47">size<pos:position pos:line="332" pos:column="51"/></name></name><argument_list pos:line="332" pos:column="51">()<pos:position pos:line="332" pos:column="53"/></argument_list></call></expr></argument>)<pos:position pos:line="332" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="332" pos:column="55"/></expr_stmt>
        <comment type="block" pos:line="333" pos:column="9">/* now let start sending stuff to client */</comment>
        <expr_stmt><expr><call><name><name pos:line="334" pos:column="9">entry<pos:position pos:line="334" pos:column="14"/></name><operator pos:line="334" pos:column="14">-&gt;<pos:position pos:line="334" pos:column="19"/></operator><name pos:line="334" pos:column="16">flush<pos:position pos:line="334" pos:column="21"/></name></name><argument_list pos:line="334" pos:column="21">()<pos:position pos:line="334" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="334" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="335" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="337" pos:column="5">outbuf<pos:position pos:line="337" pos:column="11"/></name><operator pos:line="337" pos:column="11">.<pos:position pos:line="337" pos:column="12"/></operator><name pos:line="337" pos:column="12">clean<pos:position pos:line="337" pos:column="17"/></name></name><argument_list pos:line="337" pos:column="17">()<pos:position pos:line="337" pos:column="19"/></argument_list></call></expr>;<pos:position pos:line="337" pos:column="20"/></expr_stmt>
    <return pos:line="338" pos:column="5">return;<pos:position pos:line="338" pos:column="12"/></return>
}<pos:position pos:line="339" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_function_1074.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">MemStore<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">stat<pos:position pos:line="2" pos:column="15"/></name></name><parameter_list pos:line="2" pos:column="15">(<parameter><decl><type><name pos:line="2" pos:column="16">StoreEntry<pos:position pos:line="2" pos:column="26"/></name> <modifier pos:line="2" pos:column="27">&amp;<pos:position pos:line="2" pos:column="32"/></modifier></type><name pos:line="2" pos:column="28">e<pos:position pos:line="2" pos:column="29"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="30"/></parameter_list> <specifier pos:line="2" pos:column="31">const<pos:position pos:line="2" pos:column="36"/></specifier>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">storeAppendPrintf<pos:position pos:line="4" pos:column="22"/></name><argument_list pos:line="4" pos:column="22">(<argument><expr><operator pos:line="4" pos:column="23">&amp;<pos:position pos:line="4" pos:column="28"/></operator><name pos:line="4" pos:column="24">e<pos:position pos:line="4" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="4" pos:column="27">"\n\nShared Memory Cache\n"<pos:position pos:line="4" pos:column="54"/></literal></expr></argument>)<pos:position pos:line="4" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="56"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="6" pos:column="5">storeAppendPrintf<pos:position pos:line="6" pos:column="22"/></name><argument_list pos:line="6" pos:column="22">(<argument><expr><operator pos:line="6" pos:column="23">&amp;<pos:position pos:line="6" pos:column="28"/></operator><name pos:line="6" pos:column="24">e<pos:position pos:line="6" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="6" pos:column="27">"Maximum Size: %.0f KB\n"<pos:position pos:line="6" pos:column="52"/></literal></expr></argument>, <argument><expr><name><name pos:line="6" pos:column="54">Config<pos:position pos:line="6" pos:column="60"/></name><operator pos:line="6" pos:column="60">.<pos:position pos:line="6" pos:column="61"/></operator><name pos:line="6" pos:column="61">memMaxSize<pos:position pos:line="6" pos:column="71"/></name></name><operator pos:line="6" pos:column="71">/<pos:position pos:line="6" pos:column="72"/></operator><literal type="number" pos:line="6" pos:column="72">1024.0<pos:position pos:line="6" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="80"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><name pos:line="8" pos:column="9">map<pos:position pos:line="8" pos:column="12"/></name></expr>)<pos:position pos:line="8" pos:column="13"/></condition><then pos:line="8" pos:column="13"> <block pos:line="8" pos:column="14">{
        <decl_stmt><decl><type><specifier pos:line="9" pos:column="9">const<pos:position pos:line="9" pos:column="14"/></specifier> <name pos:line="9" pos:column="15">int<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">limit<pos:position pos:line="9" pos:column="24"/></name> <init pos:line="9" pos:column="25">= <expr><call><name><name pos:line="9" pos:column="27">map<pos:position pos:line="9" pos:column="30"/></name><operator pos:line="9" pos:column="30">-&gt;<pos:position pos:line="9" pos:column="35"/></operator><name pos:line="9" pos:column="32">entryLimit<pos:position pos:line="9" pos:column="42"/></name></name><argument_list pos:line="9" pos:column="42">()<pos:position pos:line="9" pos:column="44"/></argument_list></call></expr></init></decl>;<pos:position pos:line="9" pos:column="45"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">storeAppendPrintf<pos:position pos:line="10" pos:column="26"/></name><argument_list pos:line="10" pos:column="26">(<argument><expr><operator pos:line="10" pos:column="27">&amp;<pos:position pos:line="10" pos:column="32"/></operator><name pos:line="10" pos:column="28">e<pos:position pos:line="10" pos:column="29"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="31">"Maximum entries: %9d\n"<pos:position pos:line="10" pos:column="55"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="57">limit<pos:position pos:line="10" pos:column="62"/></name></expr></argument>)<pos:position pos:line="10" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="64"/></expr_stmt>
        <if pos:line="11" pos:column="9">if <condition pos:line="11" pos:column="12">(<expr><name pos:line="11" pos:column="13">limit<pos:position pos:line="11" pos:column="18"/></name> <operator pos:line="11" pos:column="19">&gt;<pos:position pos:line="11" pos:column="23"/></operator> <literal type="number" pos:line="11" pos:column="21">0<pos:position pos:line="11" pos:column="22"/></literal></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
            <expr_stmt><expr><call><name pos:line="12" pos:column="13">storeAppendPrintf<pos:position pos:line="12" pos:column="30"/></name><argument_list pos:line="12" pos:column="30">(<argument><expr><operator pos:line="12" pos:column="31">&amp;<pos:position pos:line="12" pos:column="36"/></operator><name pos:line="12" pos:column="32">e<pos:position pos:line="12" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="35">"Current entries: %"<pos:position pos:line="12" pos:column="55"/></literal> <name pos:line="12" pos:column="56">PRId64<pos:position pos:line="12" pos:column="62"/></name> <literal type="string" pos:line="12" pos:column="63">" %.2f%%\n"<pos:position pos:line="12" pos:column="74"/></literal></expr></argument>,
                              <argument><expr><call><name pos:line="13" pos:column="31">currentCount<pos:position pos:line="13" pos:column="43"/></name><argument_list pos:line="13" pos:column="43">()<pos:position pos:line="13" pos:column="45"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="13" pos:column="47">(<pos:position pos:line="13" pos:column="48"/></operator><literal type="number" pos:line="13" pos:column="48">100.0<pos:position pos:line="13" pos:column="53"/></literal> <operator pos:line="13" pos:column="54">*<pos:position pos:line="13" pos:column="55"/></operator> <call><name pos:line="13" pos:column="56">currentCount<pos:position pos:line="13" pos:column="68"/></name><argument_list pos:line="13" pos:column="68">()<pos:position pos:line="13" pos:column="70"/></argument_list></call> <operator pos:line="13" pos:column="71">/<pos:position pos:line="13" pos:column="72"/></operator> <name pos:line="13" pos:column="73">limit<pos:position pos:line="13" pos:column="78"/></name><operator pos:line="13" pos:column="78">)<pos:position pos:line="13" pos:column="79"/></operator></expr></argument>)<pos:position pos:line="13" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="81"/></expr_stmt>

            <if pos:line="15" pos:column="13">if <condition pos:line="15" pos:column="16">(<expr><name pos:line="15" pos:column="17">limit<pos:position pos:line="15" pos:column="22"/></name> <operator pos:line="15" pos:column="23">&lt;<pos:position pos:line="15" pos:column="27"/></operator> <literal type="number" pos:line="15" pos:column="25">100<pos:position pos:line="15" pos:column="28"/></literal></expr>)<pos:position pos:line="15" pos:column="29"/></condition><then pos:line="15" pos:column="29"> <block pos:line="15" pos:column="30">{ <comment type="line" pos:line="15" pos:column="32">// XXX: otherwise too expensive to count</comment>
                <decl_stmt><decl><type><name><name pos:line="16" pos:column="17">Ipc<pos:position pos:line="16" pos:column="20"/></name><operator pos:line="16" pos:column="20">::<pos:position pos:line="16" pos:column="22"/></operator><name pos:line="16" pos:column="22">ReadWriteLockStats<pos:position pos:line="16" pos:column="40"/></name></name></type> <name pos:line="16" pos:column="41">stats<pos:position pos:line="16" pos:column="46"/></name></decl>;<pos:position pos:line="16" pos:column="47"/></decl_stmt>
                <expr_stmt><expr><call><name><name pos:line="17" pos:column="17">map<pos:position pos:line="17" pos:column="20"/></name><operator pos:line="17" pos:column="20">-&gt;<pos:position pos:line="17" pos:column="25"/></operator><name pos:line="17" pos:column="22">updateStats<pos:position pos:line="17" pos:column="33"/></name></name><argument_list pos:line="17" pos:column="33">(<argument><expr><name pos:line="17" pos:column="34">stats<pos:position pos:line="17" pos:column="39"/></name></expr></argument>)<pos:position pos:line="17" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="41"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="18" pos:column="17">stats<pos:position pos:line="18" pos:column="22"/></name><operator pos:line="18" pos:column="22">.<pos:position pos:line="18" pos:column="23"/></operator><name pos:line="18" pos:column="23">dump<pos:position pos:line="18" pos:column="27"/></name></name><argument_list pos:line="18" pos:column="27">(<argument><expr><name pos:line="18" pos:column="28">e<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
            }<pos:position pos:line="19" pos:column="14"/></block></then></if>
        }<pos:position pos:line="20" pos:column="10"/></block></then></if>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>
}<pos:position pos:line="22" pos:column="2"/></block></function></unit>

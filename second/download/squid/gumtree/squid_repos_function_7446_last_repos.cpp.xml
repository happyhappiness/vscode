<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7446_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Security<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">HandshakeParser<pos:position pos:line="2" pos:column="26"/></name><operator pos:line="2" pos:column="26">::<pos:position pos:line="2" pos:column="28"/></operator><name pos:line="2" pos:column="28">parseAlertMessage<pos:position pos:line="2" pos:column="45"/></name></name><parameter_list pos:line="2" pos:column="45">()<pos:position pos:line="2" pos:column="47"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Must<pos:position pos:line="4" pos:column="9"/></name><argument_list pos:line="4" pos:column="9">(<argument><expr><name pos:line="4" pos:column="10">currentContentType<pos:position pos:line="4" pos:column="28"/></name> <operator pos:line="4" pos:column="29">==<pos:position pos:line="4" pos:column="31"/></operator> <name><name pos:line="4" pos:column="32">ContentType<pos:position pos:line="4" pos:column="43"/></name><operator pos:line="4" pos:column="43">::<pos:position pos:line="4" pos:column="45"/></operator><name pos:line="4" pos:column="45">ctAlert<pos:position pos:line="4" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="54"/></expr_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">Alert<pos:position pos:line="5" pos:column="16"/></name></type> <name pos:line="5" pos:column="17">alert<pos:position pos:line="5" pos:column="22"/></name><argument_list pos:line="5" pos:column="22">(<argument><expr><name pos:line="5" pos:column="23">tkMessages<pos:position pos:line="5" pos:column="33"/></name></expr></argument>)<pos:position pos:line="5" pos:column="34"/></argument_list></decl>;<pos:position pos:line="5" pos:column="35"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">83<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><ternary><condition><expr><call><name><name pos:line="6" pos:column="17">alert<pos:position pos:line="6" pos:column="22"/></name><operator pos:line="6" pos:column="22">.<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="23">fatal<pos:position pos:line="6" pos:column="28"/></name></name><argument_list pos:line="6" pos:column="28">()<pos:position pos:line="6" pos:column="30"/></argument_list></call></expr> ?<pos:position pos:line="6" pos:column="32"/></condition><then pos:line="6" pos:column="32"> <expr><literal type="number" pos:line="6" pos:column="33">2<pos:position pos:line="6" pos:column="34"/></literal></expr></then><else pos:line="6" pos:column="34">:<expr><literal type="number" pos:line="6" pos:column="35">3<pos:position pos:line="6" pos:column="36"/></literal></expr></else></ternary><operator pos:line="6" pos:column="36">)<pos:position pos:line="6" pos:column="37"/></operator></expr></argument>,
           <argument><expr><literal type="string" pos:line="7" pos:column="12">"level "<pos:position pos:line="7" pos:column="20"/></literal> <operator pos:line="7" pos:column="21">&lt;&lt;<pos:position pos:line="7" pos:column="29"/></operator> <cast type="static" pos:line="7" pos:column="24">static_cast<argument_list type="generic" pos:line="7" pos:column="35">&lt;<argument><expr><name pos:line="7" pos:column="36">int<pos:position pos:line="7" pos:column="39"/></name></expr></argument>&gt;<pos:position pos:line="7" pos:column="43"/></argument_list><argument_list pos:line="7" pos:column="40">(<argument><expr><name><name pos:line="7" pos:column="41">alert<pos:position pos:line="7" pos:column="46"/></name><operator pos:line="7" pos:column="46">.<pos:position pos:line="7" pos:column="47"/></operator><name pos:line="7" pos:column="47">level<pos:position pos:line="7" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></cast> <operator pos:line="7" pos:column="54">&lt;&lt;<pos:position pos:line="7" pos:column="62"/></operator>
           <literal type="string" pos:line="8" pos:column="12">" description "<pos:position pos:line="8" pos:column="27"/></literal> <operator pos:line="8" pos:column="28">&lt;&lt;<pos:position pos:line="8" pos:column="36"/></operator> <cast type="static" pos:line="8" pos:column="31">static_cast<argument_list type="generic" pos:line="8" pos:column="42">&lt;<argument><expr><name pos:line="8" pos:column="43">int<pos:position pos:line="8" pos:column="46"/></name></expr></argument>&gt;<pos:position pos:line="8" pos:column="50"/></argument_list><argument_list pos:line="8" pos:column="47">(<argument><expr><name><name pos:line="8" pos:column="48">alert<pos:position pos:line="8" pos:column="53"/></name><operator pos:line="8" pos:column="53">.<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="54">description<pos:position pos:line="8" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></cast></expr></argument>)<pos:position pos:line="8" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="68"/></expr_stmt>
    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><call><name><name pos:line="9" pos:column="9">alert<pos:position pos:line="9" pos:column="14"/></name><operator pos:line="9" pos:column="14">.<pos:position pos:line="9" pos:column="15"/></operator><name pos:line="9" pos:column="15">fatal<pos:position pos:line="9" pos:column="20"/></name></name><argument_list pos:line="9" pos:column="20">()<pos:position pos:line="9" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="23"/></condition><then pos:line="9" pos:column="23">
        <block type="pseudo"><expr_stmt><expr><name pos:line="10" pos:column="9">done<pos:position pos:line="10" pos:column="13"/></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <literal type="string" pos:line="10" pos:column="16">"fatal Alert"<pos:position pos:line="10" pos:column="29"/></literal></expr>;<pos:position pos:line="10" pos:column="30"/></expr_stmt></block></then></if>
    <comment type="line" pos:line="11" pos:column="5">// else ignore the warning (at least for now)</comment>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

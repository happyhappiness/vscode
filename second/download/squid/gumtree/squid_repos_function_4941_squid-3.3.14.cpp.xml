<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4941_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSSwapDir<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">createDirectory<pos:position pos:line="2" pos:column="37"/></name></name><parameter_list pos:line="2" pos:column="37">(<parameter><decl><type><specifier pos:line="2" pos:column="38">const<pos:position pos:line="2" pos:column="43"/></specifier> <name pos:line="2" pos:column="44">char<pos:position pos:line="2" pos:column="48"/></name> <modifier pos:line="2" pos:column="49">*<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="50">aPath<pos:position pos:line="2" pos:column="55"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="57">int<pos:position pos:line="2" pos:column="60"/></name></type> <name pos:line="2" pos:column="61">should_exist<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="74"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">created<pos:position pos:line="4" pos:column="16"/></name> <init pos:line="4" pos:column="17">= <expr><literal type="number" pos:line="4" pos:column="19">0<pos:position pos:line="4" pos:column="20"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>

    <decl_stmt><decl><type><name><name pos:line="6" pos:column="5">struct<pos:position pos:line="6" pos:column="11"/></name> <name pos:line="6" pos:column="12">stat<pos:position pos:line="6" pos:column="16"/></name></name></type> <name pos:line="6" pos:column="17">st<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">getCurrentTime<pos:position pos:line="7" pos:column="19"/></name><argument_list pos:line="7" pos:column="19">()<pos:position pos:line="7" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><literal type="number" pos:line="9" pos:column="9">0<pos:position pos:line="9" pos:column="10"/></literal> <operator pos:line="9" pos:column="11">==<pos:position pos:line="9" pos:column="13"/></operator> <call><name><operator pos:line="9" pos:column="14">::<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="16">stat<pos:position pos:line="9" pos:column="20"/></name></name><argument_list pos:line="9" pos:column="20">(<argument><expr><name pos:line="9" pos:column="21">aPath<pos:position pos:line="9" pos:column="26"/></name></expr></argument>, <argument><expr><operator pos:line="9" pos:column="28">&amp;<pos:position pos:line="9" pos:column="33"/></operator><name pos:line="9" pos:column="29">st<pos:position pos:line="9" pos:column="31"/></name></expr></argument>)<pos:position pos:line="9" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="9" pos:column="33"/></condition><then pos:line="9" pos:column="33"> <block pos:line="9" pos:column="34">{
        <if pos:line="10" pos:column="9">if <condition pos:line="10" pos:column="12">(<expr><call><name pos:line="10" pos:column="13">S_ISDIR<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name><name pos:line="10" pos:column="21">st<pos:position pos:line="10" pos:column="23"/></name><operator pos:line="10" pos:column="23">.<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="24">st_mode<pos:position pos:line="10" pos:column="31"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="33"/></condition><then pos:line="10" pos:column="33"> <block pos:line="10" pos:column="34">{
            <expr_stmt><expr><call><name pos:line="11" pos:column="13">debugs<pos:position pos:line="11" pos:column="19"/></name><argument_list pos:line="11" pos:column="19">(<argument><expr><literal type="number" pos:line="11" pos:column="20">47<pos:position pos:line="11" pos:column="22"/></literal></expr></argument>, <argument><expr><operator pos:line="11" pos:column="24">(<pos:position pos:line="11" pos:column="25"/></operator><ternary><condition><expr><name pos:line="11" pos:column="25">should_exist<pos:position pos:line="11" pos:column="37"/></name></expr> ?<pos:position pos:line="11" pos:column="39"/></condition><then pos:line="11" pos:column="39"> <expr><literal type="number" pos:line="11" pos:column="40">3<pos:position pos:line="11" pos:column="41"/></literal></expr> <pos:position pos:line="11" pos:column="42"/></then><else pos:line="11" pos:column="42">: <expr><name pos:line="11" pos:column="44">DBG_IMPORTANT<pos:position pos:line="11" pos:column="57"/></name></expr></else></ternary><operator pos:line="11" pos:column="57">)<pos:position pos:line="11" pos:column="58"/></operator></expr></argument>, <argument><expr><name pos:line="11" pos:column="60">aPath<pos:position pos:line="11" pos:column="65"/></name> <operator pos:line="11" pos:column="66">&lt;&lt;<pos:position pos:line="11" pos:column="74"/></operator> <literal type="string" pos:line="11" pos:column="69">" exists"<pos:position pos:line="11" pos:column="78"/></literal></expr></argument>)<pos:position pos:line="11" pos:column="79"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="80"/></expr_stmt>
        }<pos:position pos:line="12" pos:column="10"/></block></then> <else pos:line="12" pos:column="11">else <block pos:line="12" pos:column="16">{
            <expr_stmt><expr><call><name pos:line="13" pos:column="13">fatalf<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="string" pos:line="13" pos:column="20">"Swap directory %s is not a directory."<pos:position pos:line="13" pos:column="59"/></literal></expr></argument>, <argument><expr><name pos:line="13" pos:column="61">aPath<pos:position pos:line="13" pos:column="66"/></name></expr></argument>)<pos:position pos:line="13" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="68"/></expr_stmt>
        }<pos:position pos:line="14" pos:column="10"/></block></else></if>
    }<pos:position pos:line="15" pos:column="6"/></block></then> <elseif pos:line="15" pos:column="7">else <if pos:line="15" pos:column="12">if <condition pos:line="15" pos:column="15">(<expr><literal type="number" pos:line="15" pos:column="16">0<pos:position pos:line="15" pos:column="17"/></literal> <operator pos:line="15" pos:column="18">==<pos:position pos:line="15" pos:column="20"/></operator> <call><name pos:line="15" pos:column="21">mkdir<pos:position pos:line="15" pos:column="26"/></name><argument_list pos:line="15" pos:column="26">(<argument><expr><name pos:line="15" pos:column="27">aPath<pos:position pos:line="15" pos:column="32"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="15" pos:column="34">0755<pos:position pos:line="15" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="40"/></condition><then pos:line="15" pos:column="40"> <block pos:line="15" pos:column="41">{
        <expr_stmt><expr><call><name pos:line="16" pos:column="9">debugs<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><literal type="number" pos:line="16" pos:column="16">47<pos:position pos:line="16" pos:column="18"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="20">(<pos:position pos:line="16" pos:column="21"/></operator><ternary><condition><expr><name pos:line="16" pos:column="21">should_exist<pos:position pos:line="16" pos:column="33"/></name></expr> ?<pos:position pos:line="16" pos:column="35"/></condition><then pos:line="16" pos:column="35"> <expr><name pos:line="16" pos:column="36">DBG_IMPORTANT<pos:position pos:line="16" pos:column="49"/></name></expr> <pos:position pos:line="16" pos:column="50"/></then><else pos:line="16" pos:column="50">: <expr><literal type="number" pos:line="16" pos:column="52">3<pos:position pos:line="16" pos:column="53"/></literal></expr></else></ternary><operator pos:line="16" pos:column="53">)<pos:position pos:line="16" pos:column="54"/></operator></expr></argument>, <argument><expr><name pos:line="16" pos:column="56">aPath<pos:position pos:line="16" pos:column="61"/></name> <operator pos:line="16" pos:column="62">&lt;&lt;<pos:position pos:line="16" pos:column="70"/></operator> <literal type="string" pos:line="16" pos:column="65">" created"<pos:position pos:line="16" pos:column="75"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><name pos:line="17" pos:column="9">created<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">=<pos:position pos:line="17" pos:column="18"/></operator> <literal type="number" pos:line="17" pos:column="19">1<pos:position pos:line="17" pos:column="20"/></literal></expr>;<pos:position pos:line="17" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="18" pos:column="6"/></block></then></if></elseif> <else pos:line="18" pos:column="7">else <block pos:line="18" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="19" pos:column="9">fatalf<pos:position pos:line="19" pos:column="15"/></name><argument_list pos:line="19" pos:column="15">(<argument><expr><literal type="string" pos:line="19" pos:column="16">"Failed to make swap directory %s: %s"<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>,
               <argument><expr><name pos:line="20" pos:column="16">aPath<pos:position pos:line="20" pos:column="21"/></name></expr></argument>, <argument><expr><call><name pos:line="20" pos:column="23">xstrerror<pos:position pos:line="20" pos:column="32"/></name><argument_list pos:line="20" pos:column="32">()<pos:position pos:line="20" pos:column="34"/></argument_list></call></expr></argument>)<pos:position pos:line="20" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="21" pos:column="6"/></block></else></if>

    <return pos:line="23" pos:column="5">return <expr><name pos:line="23" pos:column="12">created<pos:position pos:line="23" pos:column="19"/></name></expr>;<pos:position pos:line="23" pos:column="20"/></return>
}<pos:position pos:line="24" pos:column="2"/></block></function></unit>

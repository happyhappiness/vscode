<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_858_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">comm_open_listener<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">int<pos:position pos:line="2" pos:column="23"/></name></type> <name pos:line="2" pos:column="24">sock_type<pos:position pos:line="2" pos:column="33"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="3" pos:column="20">int<pos:position pos:line="3" pos:column="23"/></name></type> <name pos:line="3" pos:column="24">proto<pos:position pos:line="3" pos:column="29"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="4" pos:column="20">IpAddress<pos:position pos:line="4" pos:column="29"/></name> <modifier pos:line="4" pos:column="30">&amp;<pos:position pos:line="4" pos:column="35"/></modifier></type><name pos:line="4" pos:column="31">addr<pos:position pos:line="4" pos:column="35"/></name></decl></parameter>,
                   <parameter><decl><type><name pos:line="5" pos:column="20">int<pos:position pos:line="5" pos:column="23"/></name></type> <name pos:line="5" pos:column="24">flags<pos:position pos:line="5" pos:column="29"/></name></decl></parameter>,
                   <parameter><decl><type><specifier pos:line="6" pos:column="20">const<pos:position pos:line="6" pos:column="25"/></specifier> <name pos:line="6" pos:column="26">char<pos:position pos:line="6" pos:column="30"/></name> <modifier pos:line="6" pos:column="31">*<pos:position pos:line="6" pos:column="32"/></modifier></type><name pos:line="6" pos:column="32">note<pos:position pos:line="6" pos:column="36"/></name></decl></parameter>)<pos:position pos:line="6" pos:column="37"/></parameter_list>
<block pos:line="7" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">int<pos:position pos:line="8" pos:column="8"/></name></type> <name pos:line="8" pos:column="9">sock<pos:position pos:line="8" pos:column="13"/></name> <init pos:line="8" pos:column="14">= <expr><operator pos:line="8" pos:column="16">-<pos:position pos:line="8" pos:column="17"/></operator><literal type="number" pos:line="8" pos:column="17">1<pos:position pos:line="8" pos:column="18"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="19"/></decl_stmt>

    <comment type="block" pos:line="10" pos:column="5">/* all listener sockets require bind() */</comment>
    <expr_stmt><expr><name pos:line="11" pos:column="5">flags<pos:position pos:line="11" pos:column="10"/></name> <operator pos:line="11" pos:column="11">|=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">COMM_DOBIND<pos:position pos:line="11" pos:column="25"/></name></expr>;<pos:position pos:line="11" pos:column="26"/></expr_stmt>

    <comment type="block" pos:line="13" pos:column="5">/* attempt native enabled port. */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">sock<pos:position pos:line="14" pos:column="9"/></name> <operator pos:line="14" pos:column="10">=<pos:position pos:line="14" pos:column="11"/></operator> <call><name pos:line="14" pos:column="12">comm_openex<pos:position pos:line="14" pos:column="23"/></name><argument_list pos:line="14" pos:column="23">(<argument><expr><name pos:line="14" pos:column="24">sock_type<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="35">proto<pos:position pos:line="14" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="42">addr<pos:position pos:line="14" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="14" pos:column="48">flags<pos:position pos:line="14" pos:column="53"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="55">0<pos:position pos:line="14" pos:column="56"/></literal></expr></argument>, <argument><expr><name pos:line="14" pos:column="58">note<pos:position pos:line="14" pos:column="62"/></name></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>

    <return pos:line="16" pos:column="5">return <expr><name pos:line="16" pos:column="12">sock<pos:position pos:line="16" pos:column="16"/></name></expr>;<pos:position pos:line="16" pos:column="17"/></return>
}<pos:position pos:line="17" pos:column="2"/></block></function></unit>

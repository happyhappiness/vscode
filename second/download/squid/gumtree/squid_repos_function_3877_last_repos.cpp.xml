<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3877_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ssl<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">Helper<pos:position pos:line="1" pos:column="17"/></name><operator pos:line="1" pos:column="17">::<pos:position pos:line="1" pos:column="19"/></operator><name pos:line="1" pos:column="19">Init<pos:position pos:line="1" pos:column="23"/></name></name><parameter_list pos:line="1" pos:column="23">()<pos:position pos:line="1" pos:column="25"/></parameter_list>
<block pos:line="2" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="3" pos:column="5">assert<pos:position pos:line="3" pos:column="11"/></name><argument_list pos:line="3" pos:column="11">(<argument><expr><name pos:line="3" pos:column="12">ssl_crtd<pos:position pos:line="3" pos:column="20"/></name> <operator pos:line="3" pos:column="21">==<pos:position pos:line="3" pos:column="23"/></operator> <name pos:line="3" pos:column="24">NULL<pos:position pos:line="3" pos:column="28"/></name></expr></argument>)<pos:position pos:line="3" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="3" pos:column="30"/></expr_stmt>

    <comment type="line" pos:line="5" pos:column="5">// we need to start ssl_crtd only if some port(s) need to bump SSL *and* generate certificates</comment>
    <comment type="line" pos:line="6" pos:column="5">// TODO: generate host certificates for SNI enabled accel ports</comment>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">bool<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">found<pos:position pos:line="7" pos:column="15"/></name> <init pos:line="7" pos:column="16">= <expr><literal type="boolean" pos:line="7" pos:column="18">false<pos:position pos:line="7" pos:column="23"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="24"/></decl_stmt>
    <for pos:line="8" pos:column="5">for <control pos:line="8" pos:column="9">(<init><decl><type><name><name pos:line="8" pos:column="10">AnyP<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">::<pos:position pos:line="8" pos:column="16"/></operator><name pos:line="8" pos:column="16">PortCfgPointer<pos:position pos:line="8" pos:column="30"/></name></name></type> <name pos:line="8" pos:column="31">s<pos:position pos:line="8" pos:column="32"/></name> <init pos:line="8" pos:column="33">= <expr><name pos:line="8" pos:column="35">HttpPortList<pos:position pos:line="8" pos:column="47"/></name></expr></init></decl>;<pos:position pos:line="8" pos:column="48"/></init> <condition><expr><operator pos:line="8" pos:column="49">!<pos:position pos:line="8" pos:column="50"/></operator><name pos:line="8" pos:column="50">found<pos:position pos:line="8" pos:column="55"/></name> <operator pos:line="8" pos:column="56">&amp;&amp;<pos:position pos:line="8" pos:column="66"/></operator> <name pos:line="8" pos:column="59">s<pos:position pos:line="8" pos:column="60"/></name> <operator pos:line="8" pos:column="61">!=<pos:position pos:line="8" pos:column="63"/></operator> <name pos:line="8" pos:column="64">NULL<pos:position pos:line="8" pos:column="68"/></name></expr>;<pos:position pos:line="8" pos:column="69"/></condition> <incr><expr><name pos:line="8" pos:column="70">s<pos:position pos:line="8" pos:column="71"/></name> <operator pos:line="8" pos:column="72">=<pos:position pos:line="8" pos:column="73"/></operator> <name><name pos:line="8" pos:column="74">s<pos:position pos:line="8" pos:column="75"/></name><operator pos:line="8" pos:column="75">-&gt;<pos:position pos:line="8" pos:column="80"/></operator><name pos:line="8" pos:column="77">next<pos:position pos:line="8" pos:column="81"/></name></name></expr></incr>)<pos:position pos:line="8" pos:column="82"/></control>
        <block type="pseudo"><expr_stmt><expr><name pos:line="9" pos:column="9">found<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">=<pos:position pos:line="9" pos:column="16"/></operator> <name><name pos:line="9" pos:column="17">s<pos:position pos:line="9" pos:column="18"/></name><operator pos:line="9" pos:column="18">-&gt;<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="20">flags<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">.<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="26">tunnelSslBumping<pos:position pos:line="9" pos:column="42"/></name></name> <operator pos:line="9" pos:column="43">&amp;&amp;<pos:position pos:line="9" pos:column="53"/></operator> <name><name pos:line="9" pos:column="46">s<pos:position pos:line="9" pos:column="47"/></name><operator pos:line="9" pos:column="47">-&gt;<pos:position pos:line="9" pos:column="52"/></operator><name pos:line="9" pos:column="49">generateHostCertificates<pos:position pos:line="9" pos:column="73"/></name></name></expr>;<pos:position pos:line="9" pos:column="74"/></expr_stmt></block></for>
    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><operator pos:line="10" pos:column="9">!<pos:position pos:line="10" pos:column="10"/></operator><name pos:line="10" pos:column="10">found<pos:position pos:line="10" pos:column="15"/></name></expr>)<pos:position pos:line="10" pos:column="16"/></condition><then pos:line="10" pos:column="16">
        <block type="pseudo"><return pos:line="11" pos:column="9">return;<pos:position pos:line="11" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><name pos:line="13" pos:column="5">ssl_crtd<pos:position pos:line="13" pos:column="13"/></name> <operator pos:line="13" pos:column="14">=<pos:position pos:line="13" pos:column="15"/></operator> <operator pos:line="13" pos:column="16">new<pos:position pos:line="13" pos:column="19"/></operator> <call><name pos:line="13" pos:column="20">helper<pos:position pos:line="13" pos:column="26"/></name><argument_list pos:line="13" pos:column="26">(<argument><expr><name><name pos:line="13" pos:column="27">Ssl<pos:position pos:line="13" pos:column="30"/></name><operator pos:line="13" pos:column="30">::<pos:position pos:line="13" pos:column="32"/></operator><name pos:line="13" pos:column="32">TheConfig<pos:position pos:line="13" pos:column="41"/></name><operator pos:line="13" pos:column="41">.<pos:position pos:line="13" pos:column="42"/></operator><name pos:line="13" pos:column="42">ssl_crtd<pos:position pos:line="13" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">ssl_crtd<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">childs<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">.<pos:position pos:line="14" pos:column="22"/></operator><name pos:line="14" pos:column="22">updateLimits<pos:position pos:line="14" pos:column="34"/></name></name><argument_list pos:line="14" pos:column="34">(<argument><expr><name><name pos:line="14" pos:column="35">Ssl<pos:position pos:line="14" pos:column="38"/></name><operator pos:line="14" pos:column="38">::<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">TheConfig<pos:position pos:line="14" pos:column="49"/></name><operator pos:line="14" pos:column="49">.<pos:position pos:line="14" pos:column="50"/></operator><name pos:line="14" pos:column="50">ssl_crtdChildren<pos:position pos:line="14" pos:column="66"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="15" pos:column="5">ssl_crtd<pos:position pos:line="15" pos:column="13"/></name><operator pos:line="15" pos:column="13">-&gt;<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="15">ipc_type<pos:position pos:line="15" pos:column="23"/></name></name> <operator pos:line="15" pos:column="24">=<pos:position pos:line="15" pos:column="25"/></operator> <name pos:line="15" pos:column="26">IPC_STREAM<pos:position pos:line="15" pos:column="36"/></name></expr>;<pos:position pos:line="15" pos:column="37"/></expr_stmt>
    <comment type="line" pos:line="16" pos:column="5">// The crtd messages may contain the eol ('\n') character. We are</comment>
    <comment type="line" pos:line="17" pos:column="5">// going to use the '\1' char as the end-of-message mark.</comment>
    <expr_stmt><expr><name><name pos:line="18" pos:column="5">ssl_crtd<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">-&gt;<pos:position pos:line="18" pos:column="18"/></operator><name pos:line="18" pos:column="15">eom<pos:position pos:line="18" pos:column="18"/></name></name> <operator pos:line="18" pos:column="19">=<pos:position pos:line="18" pos:column="20"/></operator> <literal type="char" pos:line="18" pos:column="21">'\1'<pos:position pos:line="18" pos:column="25"/></literal></expr>;<pos:position pos:line="18" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">assert<pos:position pos:line="19" pos:column="11"/></name><argument_list pos:line="19" pos:column="11">(<argument><expr><name><name pos:line="19" pos:column="12">ssl_crtd<pos:position pos:line="19" pos:column="20"/></name><operator pos:line="19" pos:column="20">-&gt;<pos:position pos:line="19" pos:column="25"/></operator><name pos:line="19" pos:column="22">cmdline<pos:position pos:line="19" pos:column="29"/></name></name> <operator pos:line="19" pos:column="30">==<pos:position pos:line="19" pos:column="32"/></operator> <name pos:line="19" pos:column="33">NULL<pos:position pos:line="19" pos:column="37"/></name></expr></argument>)<pos:position pos:line="19" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="39"/></expr_stmt>
    <block pos:line="20" pos:column="5">{
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">char<pos:position pos:line="21" pos:column="13"/></name> <modifier pos:line="21" pos:column="14">*<pos:position pos:line="21" pos:column="15"/></modifier></type><name pos:line="21" pos:column="15">tmp<pos:position pos:line="21" pos:column="18"/></name> <init pos:line="21" pos:column="19">= <expr><call><name pos:line="21" pos:column="21">xstrdup<pos:position pos:line="21" pos:column="28"/></name><argument_list pos:line="21" pos:column="28">(<argument><expr><name><name pos:line="21" pos:column="29">Ssl<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">::<pos:position pos:line="21" pos:column="34"/></operator><name pos:line="21" pos:column="34">TheConfig<pos:position pos:line="21" pos:column="43"/></name><operator pos:line="21" pos:column="43">.<pos:position pos:line="21" pos:column="44"/></operator><name pos:line="21" pos:column="44">ssl_crtd<pos:position pos:line="21" pos:column="52"/></name></name></expr></argument>)<pos:position pos:line="21" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="54"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="22" pos:column="9">char<pos:position pos:line="22" pos:column="13"/></name> <modifier pos:line="22" pos:column="14">*<pos:position pos:line="22" pos:column="15"/></modifier></type><name pos:line="22" pos:column="15">tmp_begin<pos:position pos:line="22" pos:column="24"/></name> <init pos:line="22" pos:column="25">= <expr><name pos:line="22" pos:column="27">tmp<pos:position pos:line="22" pos:column="30"/></name></expr></init></decl>;<pos:position pos:line="22" pos:column="31"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="23" pos:column="9">char<pos:position pos:line="23" pos:column="13"/></name> <modifier pos:line="23" pos:column="14">*<pos:position pos:line="23" pos:column="15"/></modifier></type><name pos:line="23" pos:column="15">token<pos:position pos:line="23" pos:column="20"/></name> <init pos:line="23" pos:column="21">= <expr><name pos:line="23" pos:column="23">NULL<pos:position pos:line="23" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="23" pos:column="28"/></decl_stmt>
        <while pos:line="24" pos:column="9">while <condition pos:line="24" pos:column="15">(<expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">token<pos:position pos:line="24" pos:column="22"/></name> <operator pos:line="24" pos:column="23">=<pos:position pos:line="24" pos:column="24"/></operator> <call><name pos:line="24" pos:column="25">strwordtok<pos:position pos:line="24" pos:column="35"/></name><argument_list pos:line="24" pos:column="35">(<argument><expr><name pos:line="24" pos:column="36">NULL<pos:position pos:line="24" pos:column="40"/></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="42">&amp;<pos:position pos:line="24" pos:column="47"/></operator><name pos:line="24" pos:column="43">tmp<pos:position pos:line="24" pos:column="46"/></name></expr></argument>)<pos:position pos:line="24" pos:column="47"/></argument_list></call><operator pos:line="24" pos:column="47">)<pos:position pos:line="24" pos:column="48"/></operator></expr>)<pos:position pos:line="24" pos:column="49"/></condition> <block pos:line="24" pos:column="50">{
            <expr_stmt><expr><call><name pos:line="25" pos:column="13">wordlistAdd<pos:position pos:line="25" pos:column="24"/></name><argument_list pos:line="25" pos:column="24">(<argument><expr><operator pos:line="25" pos:column="25">&amp;<pos:position pos:line="25" pos:column="30"/></operator><name><name pos:line="25" pos:column="26">ssl_crtd<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">cmdline<pos:position pos:line="25" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="45">token<pos:position pos:line="25" pos:column="50"/></name></expr></argument>)<pos:position pos:line="25" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="52"/></expr_stmt>
        }<pos:position pos:line="26" pos:column="10"/></block></while>
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">safe_free<pos:position pos:line="27" pos:column="18"/></name><argument_list pos:line="27" pos:column="18">(<argument><expr><name pos:line="27" pos:column="19">tmp_begin<pos:position pos:line="27" pos:column="28"/></name></expr></argument>)<pos:position pos:line="27" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">helperOpenServers<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">ssl_crtd<pos:position pos:line="29" pos:column="31"/></name></expr></argument>)<pos:position pos:line="29" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="33"/></expr_stmt>
}<pos:position pos:line="30" pos:column="2"/></block></function></unit>

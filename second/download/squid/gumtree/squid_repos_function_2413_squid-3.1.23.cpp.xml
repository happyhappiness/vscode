<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2413_squid-3.1.23.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">FwdState<pos:position pos:line="2" pos:column="9"/></name><operator pos:line="2" pos:column="9">::<pos:position pos:line="2" pos:column="11"/></operator><name pos:line="2" pos:column="11">initiateSSL<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">()<pos:position pos:line="2" pos:column="24"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">FwdServer<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">fs<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><name pos:line="4" pos:column="21">servers<pos:position pos:line="4" pos:column="28"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="29"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">fd<pos:position pos:line="5" pos:column="11"/></name> <init pos:line="5" pos:column="12">= <expr><name pos:line="5" pos:column="14">server_fd<pos:position pos:line="5" pos:column="23"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">SSL<pos:position pos:line="6" pos:column="8"/></name> <modifier pos:line="6" pos:column="9">*<pos:position pos:line="6" pos:column="10"/></modifier></type><name pos:line="6" pos:column="10">ssl<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">SSL_CTX<pos:position pos:line="7" pos:column="12"/></name> <modifier pos:line="7" pos:column="13">*<pos:position pos:line="7" pos:column="14"/></modifier></type><name pos:line="7" pos:column="14">sslContext<pos:position pos:line="7" pos:column="24"/></name> <init pos:line="7" pos:column="25">= <expr><name pos:line="7" pos:column="27">NULL<pos:position pos:line="7" pos:column="31"/></name></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">peer<pos:position pos:line="8" pos:column="9"/></name> <modifier pos:line="8" pos:column="10">*<pos:position pos:line="8" pos:column="11"/></modifier></type><name pos:line="8" pos:column="11">peer<pos:position pos:line="8" pos:column="15"/></name> <init pos:line="8" pos:column="16">= <expr><name><name pos:line="8" pos:column="18">fs<pos:position pos:line="8" pos:column="20"/></name><operator pos:line="8" pos:column="20">-&gt;<pos:position pos:line="8" pos:column="25"/></operator><name pos:line="8" pos:column="22">_peer<pos:position pos:line="8" pos:column="27"/></name></name></expr></init></decl>;<pos:position pos:line="8" pos:column="28"/></decl_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">peer<pos:position pos:line="10" pos:column="13"/></name></expr>)<pos:position pos:line="10" pos:column="14"/></condition><then pos:line="10" pos:column="14"> <block pos:line="10" pos:column="15">{
        <expr_stmt><expr><call><name pos:line="11" pos:column="9">assert<pos:position pos:line="11" pos:column="15"/></name><argument_list pos:line="11" pos:column="15">(<argument><expr><name><name pos:line="11" pos:column="16">peer<pos:position pos:line="11" pos:column="20"/></name><operator pos:line="11" pos:column="20">-&gt;<pos:position pos:line="11" pos:column="25"/></operator><name pos:line="11" pos:column="22">use_ssl<pos:position pos:line="11" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name pos:line="12" pos:column="9">sslContext<pos:position pos:line="12" pos:column="19"/></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <name><name pos:line="12" pos:column="22">peer<pos:position pos:line="12" pos:column="26"/></name><operator pos:line="12" pos:column="26">-&gt;<pos:position pos:line="12" pos:column="31"/></operator><name pos:line="12" pos:column="28">sslContext<pos:position pos:line="12" pos:column="38"/></name></name></expr>;<pos:position pos:line="12" pos:column="39"/></expr_stmt>
    }<pos:position pos:line="13" pos:column="6"/></block></then> <else pos:line="13" pos:column="7">else <block pos:line="13" pos:column="12">{
        <expr_stmt><expr><name pos:line="14" pos:column="9">sslContext<pos:position pos:line="14" pos:column="19"/></name> <operator pos:line="14" pos:column="20">=<pos:position pos:line="14" pos:column="21"/></operator> <name><name pos:line="14" pos:column="22">Config<pos:position pos:line="14" pos:column="28"/></name><operator pos:line="14" pos:column="28">.<pos:position pos:line="14" pos:column="29"/></operator><name pos:line="14" pos:column="29">ssl_client<pos:position pos:line="14" pos:column="39"/></name><operator pos:line="14" pos:column="39">.<pos:position pos:line="14" pos:column="40"/></operator><name pos:line="14" pos:column="40">sslContext<pos:position pos:line="14" pos:column="50"/></name></name></expr>;<pos:position pos:line="14" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></else></if>

    <expr_stmt><expr><call><name pos:line="17" pos:column="5">assert<pos:position pos:line="17" pos:column="11"/></name><argument_list pos:line="17" pos:column="11">(<argument><expr><name pos:line="17" pos:column="12">sslContext<pos:position pos:line="17" pos:column="22"/></name></expr></argument>)<pos:position pos:line="17" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="24"/></expr_stmt>

    <if pos:line="19" pos:column="5">if <condition pos:line="19" pos:column="8">(<expr><operator pos:line="19" pos:column="9">(<pos:position pos:line="19" pos:column="10"/></operator><name pos:line="19" pos:column="10">ssl<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <call><name pos:line="19" pos:column="16">SSL_new<pos:position pos:line="19" pos:column="23"/></name><argument_list pos:line="19" pos:column="23">(<argument><expr><name pos:line="19" pos:column="24">sslContext<pos:position pos:line="19" pos:column="34"/></name></expr></argument>)<pos:position pos:line="19" pos:column="35"/></argument_list></call><operator pos:line="19" pos:column="35">)<pos:position pos:line="19" pos:column="36"/></operator> <operator pos:line="19" pos:column="37">==<pos:position pos:line="19" pos:column="39"/></operator> <name pos:line="19" pos:column="40">NULL<pos:position pos:line="19" pos:column="44"/></name></expr>)<pos:position pos:line="19" pos:column="45"/></condition><then pos:line="19" pos:column="45"> <block pos:line="19" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="20" pos:column="9">debugs<pos:position pos:line="20" pos:column="15"/></name><argument_list pos:line="20" pos:column="15">(<argument><expr><literal type="number" pos:line="20" pos:column="16">83<pos:position pos:line="20" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="20" pos:column="20">1<pos:position pos:line="20" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="20" pos:column="23">"fwdInitiateSSL: Error allocating handle: "<pos:position pos:line="20" pos:column="66"/></literal> <operator pos:line="20" pos:column="67">&lt;&lt;<pos:position pos:line="20" pos:column="75"/></operator> <call><name pos:line="20" pos:column="70">ERR_error_string<pos:position pos:line="20" pos:column="86"/></name><argument_list pos:line="20" pos:column="86">(<argument><expr><call><name pos:line="20" pos:column="87">ERR_get_error<pos:position pos:line="20" pos:column="100"/></name><argument_list pos:line="20" pos:column="100">()<pos:position pos:line="20" pos:column="102"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="20" pos:column="104">NULL<pos:position pos:line="20" pos:column="108"/></name></expr></argument>)<pos:position pos:line="20" pos:column="109"/></argument_list></call></expr></argument>  )<pos:position pos:line="20" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="113"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="21" pos:column="9">ErrorState<pos:position pos:line="21" pos:column="19"/></name> <modifier pos:line="21" pos:column="20">*<pos:position pos:line="21" pos:column="21"/></modifier></type><name pos:line="21" pos:column="21">anErr<pos:position pos:line="21" pos:column="26"/></name> <init pos:line="21" pos:column="27">= <expr><call><name pos:line="21" pos:column="29">errorCon<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">ERR_SOCKET_FAILURE<pos:position pos:line="21" pos:column="56"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="58">HTTP_INTERNAL_SERVER_ERROR<pos:position pos:line="21" pos:column="84"/></name></expr></argument>, <argument><expr><name pos:line="21" pos:column="86">request<pos:position pos:line="21" pos:column="93"/></name></expr></argument>)<pos:position pos:line="21" pos:column="94"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="95"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="22" pos:column="9">anErr<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">xerrno<pos:position pos:line="22" pos:column="22"/></name></name> <operator pos:line="22" pos:column="23">=<pos:position pos:line="22" pos:column="24"/></operator> <name pos:line="22" pos:column="25">errno<pos:position pos:line="22" pos:column="30"/></name></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="23" pos:column="9">fail<pos:position pos:line="23" pos:column="13"/></name><argument_list pos:line="23" pos:column="13">(<argument><expr><name pos:line="23" pos:column="14">anErr<pos:position pos:line="23" pos:column="19"/></name></expr></argument>)<pos:position pos:line="23" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="21"/></expr_stmt>
        <expr_stmt><expr><name pos:line="24" pos:column="9">self<pos:position pos:line="24" pos:column="13"/></name> <operator pos:line="24" pos:column="14">=<pos:position pos:line="24" pos:column="15"/></operator> <name pos:line="24" pos:column="16">NULL<pos:position pos:line="24" pos:column="20"/></name></expr>;<pos:position pos:line="24" pos:column="21"/></expr_stmt>		<comment type="line" pos:line="24" pos:column="33">// refcounted</comment>
        <return pos:line="25" pos:column="9">return;<pos:position pos:line="25" pos:column="16"/></return>
    }<pos:position pos:line="26" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="28" pos:column="5">SSL_set_fd<pos:position pos:line="28" pos:column="15"/></name><argument_list pos:line="28" pos:column="15">(<argument><expr><name pos:line="28" pos:column="16">ssl<pos:position pos:line="28" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="21">fd<pos:position pos:line="28" pos:column="23"/></name></expr></argument>)<pos:position pos:line="28" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="25"/></expr_stmt>

    <if pos:line="30" pos:column="5">if <condition pos:line="30" pos:column="8">(<expr><name pos:line="30" pos:column="9">peer<pos:position pos:line="30" pos:column="13"/></name></expr>)<pos:position pos:line="30" pos:column="14"/></condition><then pos:line="30" pos:column="14"> <block pos:line="30" pos:column="15">{
        <if pos:line="31" pos:column="9">if <condition pos:line="31" pos:column="12">(<expr><name><name pos:line="31" pos:column="13">peer<pos:position pos:line="31" pos:column="17"/></name><operator pos:line="31" pos:column="17">-&gt;<pos:position pos:line="31" pos:column="22"/></operator><name pos:line="31" pos:column="19">ssldomain<pos:position pos:line="31" pos:column="28"/></name></name></expr>)<pos:position pos:line="31" pos:column="29"/></condition><then pos:line="31" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="32" pos:column="13">SSL_set_ex_data<pos:position pos:line="32" pos:column="28"/></name><argument_list pos:line="32" pos:column="28">(<argument><expr><name pos:line="32" pos:column="29">ssl<pos:position pos:line="32" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="34">ssl_ex_index_server<pos:position pos:line="32" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="55">peer<pos:position pos:line="32" pos:column="59"/></name><operator pos:line="32" pos:column="59">-&gt;<pos:position pos:line="32" pos:column="64"/></operator><name pos:line="32" pos:column="61">ssldomain<pos:position pos:line="32" pos:column="70"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="72"/></expr_stmt></block></then>

<cpp:if pos:line="34" pos:column="1">#<cpp:directive pos:line="34" pos:column="2">if<pos:position pos:line="34" pos:column="4"/></cpp:directive> <expr><name pos:line="34" pos:column="5">NOT_YET<pos:position pos:line="34" pos:column="12"/></name></expr></cpp:if>

        <elseif pos:line="36" pos:column="9">else <if pos:line="36" pos:column="14">if <condition pos:line="36" pos:column="17">(<expr><name><name pos:line="36" pos:column="18">peer<pos:position pos:line="36" pos:column="22"/></name><operator pos:line="36" pos:column="22">-&gt;<pos:position pos:line="36" pos:column="27"/></operator><name pos:line="36" pos:column="24">name<pos:position pos:line="36" pos:column="28"/></name></name></expr>)<pos:position pos:line="36" pos:column="29"/></condition><then pos:line="36" pos:column="29">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="37" pos:column="13">SSL_set_ex_data<pos:position pos:line="37" pos:column="28"/></name><argument_list pos:line="37" pos:column="28">(<argument><expr><name pos:line="37" pos:column="29">ssl<pos:position pos:line="37" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="37" pos:column="34">ssl_ex_index_server<pos:position pos:line="37" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="37" pos:column="55">peer<pos:position pos:line="37" pos:column="59"/></name><operator pos:line="37" pos:column="59">-&gt;<pos:position pos:line="37" pos:column="64"/></operator><name pos:line="37" pos:column="61">name<pos:position pos:line="37" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="37" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="67"/></expr_stmt></block></then></if></elseif>

<cpp:endif pos:line="39" pos:column="1">#<cpp:directive pos:line="39" pos:column="2">endif<pos:position pos:line="39" pos:column="7"/></cpp:directive></cpp:endif>

        <else pos:line="41" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="42" pos:column="13">SSL_set_ex_data<pos:position pos:line="42" pos:column="28"/></name><argument_list pos:line="42" pos:column="28">(<argument><expr><name pos:line="42" pos:column="29">ssl<pos:position pos:line="42" pos:column="32"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="34">ssl_ex_index_server<pos:position pos:line="42" pos:column="53"/></name></expr></argument>, <argument><expr><name><name pos:line="42" pos:column="55">peer<pos:position pos:line="42" pos:column="59"/></name><operator pos:line="42" pos:column="59">-&gt;<pos:position pos:line="42" pos:column="64"/></operator><name pos:line="42" pos:column="61">host<pos:position pos:line="42" pos:column="65"/></name></name></expr></argument>)<pos:position pos:line="42" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="42" pos:column="67"/></expr_stmt></block></else></if>

        <if pos:line="44" pos:column="9">if <condition pos:line="44" pos:column="12">(<expr><name><name pos:line="44" pos:column="13">peer<pos:position pos:line="44" pos:column="17"/></name><operator pos:line="44" pos:column="17">-&gt;<pos:position pos:line="44" pos:column="22"/></operator><name pos:line="44" pos:column="19">sslSession<pos:position pos:line="44" pos:column="29"/></name></name></expr>)<pos:position pos:line="44" pos:column="30"/></condition><then pos:line="44" pos:column="30">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="45" pos:column="13">SSL_set_session<pos:position pos:line="45" pos:column="28"/></name><argument_list pos:line="45" pos:column="28">(<argument><expr><name pos:line="45" pos:column="29">ssl<pos:position pos:line="45" pos:column="32"/></name></expr></argument>, <argument><expr><name><name pos:line="45" pos:column="34">peer<pos:position pos:line="45" pos:column="38"/></name><operator pos:line="45" pos:column="38">-&gt;<pos:position pos:line="45" pos:column="43"/></operator><name pos:line="45" pos:column="40">sslSession<pos:position pos:line="45" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="52"/></expr_stmt></block></then></if>

    }<pos:position pos:line="47" pos:column="6"/></block></then> <else pos:line="47" pos:column="7">else <block pos:line="47" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">SSL_set_ex_data<pos:position pos:line="48" pos:column="24"/></name><argument_list pos:line="48" pos:column="24">(<argument><expr><name pos:line="48" pos:column="25">ssl<pos:position pos:line="48" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="48" pos:column="30">ssl_ex_index_server<pos:position pos:line="48" pos:column="49"/></name></expr></argument>, <argument><expr><operator pos:line="48" pos:column="51">(<pos:position pos:line="48" pos:column="52"/></operator><name pos:line="48" pos:column="52">void<pos:position pos:line="48" pos:column="56"/></name><operator pos:line="48" pos:column="56">*<pos:position pos:line="48" pos:column="57"/></operator><operator pos:line="48" pos:column="57">)<pos:position pos:line="48" pos:column="58"/></operator><call><name><name pos:line="48" pos:column="58">request<pos:position pos:line="48" pos:column="65"/></name><operator pos:line="48" pos:column="65">-&gt;<pos:position pos:line="48" pos:column="70"/></operator><name pos:line="48" pos:column="67">GetHost<pos:position pos:line="48" pos:column="74"/></name></name><argument_list pos:line="48" pos:column="74">()<pos:position pos:line="48" pos:column="76"/></argument_list></call></expr></argument>)<pos:position pos:line="48" pos:column="77"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="78"/></expr_stmt>
    }<pos:position pos:line="49" pos:column="6"/></block></else></if>

    <comment type="line" pos:line="51" pos:column="5">// Create the ACL check list now, while we have access to more info.</comment>
    <comment type="line" pos:line="52" pos:column="5">// The list is used in ssl_verify_cb() and is freed in ssl_free().</comment>
    <if pos:line="53" pos:column="5">if <condition pos:line="53" pos:column="8">(<decl><type><name pos:line="53" pos:column="9">acl_access<pos:position pos:line="53" pos:column="19"/></name> <modifier pos:line="53" pos:column="20">*<pos:position pos:line="53" pos:column="21"/></modifier></type><name pos:line="53" pos:column="21">acl<pos:position pos:line="53" pos:column="24"/></name> <init pos:line="53" pos:column="25">= <expr><name><name pos:line="53" pos:column="27">Config<pos:position pos:line="53" pos:column="33"/></name><operator pos:line="53" pos:column="33">.<pos:position pos:line="53" pos:column="34"/></operator><name pos:line="53" pos:column="34">ssl_client<pos:position pos:line="53" pos:column="44"/></name><operator pos:line="53" pos:column="44">.<pos:position pos:line="53" pos:column="45"/></operator><name pos:line="53" pos:column="45">cert_error<pos:position pos:line="53" pos:column="55"/></name></name></expr></init></decl>)<pos:position pos:line="53" pos:column="56"/></condition><then pos:line="53" pos:column="56"> <block pos:line="53" pos:column="57">{
        <decl_stmt><decl><type><name pos:line="54" pos:column="9">ACLFilledChecklist<pos:position pos:line="54" pos:column="27"/></name> <modifier pos:line="54" pos:column="28">*<pos:position pos:line="54" pos:column="29"/></modifier></type><name pos:line="54" pos:column="29">check<pos:position pos:line="54" pos:column="34"/></name> <init pos:line="54" pos:column="35">= <expr><operator pos:line="54" pos:column="37">new<pos:position pos:line="54" pos:column="40"/></operator> <call><name pos:line="54" pos:column="41">ACLFilledChecklist<pos:position pos:line="54" pos:column="59"/></name><argument_list pos:line="54" pos:column="59">(<argument><expr><name pos:line="54" pos:column="60">acl<pos:position pos:line="54" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="65">request<pos:position pos:line="54" pos:column="72"/></name></expr></argument>, <argument><expr><name pos:line="54" pos:column="74">dash_str<pos:position pos:line="54" pos:column="82"/></name></expr></argument>)<pos:position pos:line="54" pos:column="83"/></argument_list></call></expr></init></decl>;<pos:position pos:line="54" pos:column="84"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="55" pos:column="9">check<pos:position pos:line="55" pos:column="14"/></name><operator pos:line="55" pos:column="14">-&gt;<pos:position pos:line="55" pos:column="19"/></operator><name pos:line="55" pos:column="16">fd<pos:position pos:line="55" pos:column="18"/></name></name><argument_list pos:line="55" pos:column="18">(<argument><expr><name pos:line="55" pos:column="19">fd<pos:position pos:line="55" pos:column="21"/></name></expr></argument>)<pos:position pos:line="55" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="23"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">SSL_set_ex_data<pos:position pos:line="56" pos:column="24"/></name><argument_list pos:line="56" pos:column="24">(<argument><expr><name pos:line="56" pos:column="25">ssl<pos:position pos:line="56" pos:column="28"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="30">ssl_ex_index_cert_error_check<pos:position pos:line="56" pos:column="59"/></name></expr></argument>, <argument><expr><name pos:line="56" pos:column="61">check<pos:position pos:line="56" pos:column="66"/></name></expr></argument>)<pos:position pos:line="56" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="68"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="59" pos:column="5">fd_table<pos:position pos:line="59" pos:column="13"/></name><index pos:line="59" pos:column="13">[<expr><name pos:line="59" pos:column="14">fd<pos:position pos:line="59" pos:column="16"/></name></expr>]<pos:position pos:line="59" pos:column="17"/></index></name><operator pos:line="59" pos:column="17">.<pos:position pos:line="59" pos:column="18"/></operator><name pos:line="59" pos:column="18">ssl<pos:position pos:line="59" pos:column="21"/></name> <operator pos:line="59" pos:column="22">=<pos:position pos:line="59" pos:column="23"/></operator> <name pos:line="59" pos:column="24">ssl<pos:position pos:line="59" pos:column="27"/></name></expr>;<pos:position pos:line="59" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="60" pos:column="5">fd_table<pos:position pos:line="60" pos:column="13"/></name><index pos:line="60" pos:column="13">[<expr><name pos:line="60" pos:column="14">fd<pos:position pos:line="60" pos:column="16"/></name></expr>]<pos:position pos:line="60" pos:column="17"/></index></name><operator pos:line="60" pos:column="17">.<pos:position pos:line="60" pos:column="18"/></operator><name pos:line="60" pos:column="18">read_method<pos:position pos:line="60" pos:column="29"/></name> <operator pos:line="60" pos:column="30">=<pos:position pos:line="60" pos:column="31"/></operator> <operator pos:line="60" pos:column="32">&amp;<pos:position pos:line="60" pos:column="37"/></operator><name pos:line="60" pos:column="33">ssl_read_method<pos:position pos:line="60" pos:column="48"/></name></expr>;<pos:position pos:line="60" pos:column="49"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="61" pos:column="5">fd_table<pos:position pos:line="61" pos:column="13"/></name><index pos:line="61" pos:column="13">[<expr><name pos:line="61" pos:column="14">fd<pos:position pos:line="61" pos:column="16"/></name></expr>]<pos:position pos:line="61" pos:column="17"/></index></name><operator pos:line="61" pos:column="17">.<pos:position pos:line="61" pos:column="18"/></operator><name pos:line="61" pos:column="18">write_method<pos:position pos:line="61" pos:column="30"/></name> <operator pos:line="61" pos:column="31">=<pos:position pos:line="61" pos:column="32"/></operator> <operator pos:line="61" pos:column="33">&amp;<pos:position pos:line="61" pos:column="38"/></operator><name pos:line="61" pos:column="34">ssl_write_method<pos:position pos:line="61" pos:column="50"/></name></expr>;<pos:position pos:line="61" pos:column="51"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="62" pos:column="5">negotiateSSL<pos:position pos:line="62" pos:column="17"/></name><argument_list pos:line="62" pos:column="17">(<argument><expr><name pos:line="62" pos:column="18">fd<pos:position pos:line="62" pos:column="20"/></name></expr></argument>)<pos:position pos:line="62" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="62" pos:column="22"/></expr_stmt>
}<pos:position pos:line="63" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3027_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">clientProcessRequest<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name pos:line="2" pos:column="22">ConnStateData<pos:position pos:line="2" pos:column="35"/></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">conn<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="43">const<pos:position pos:line="2" pos:column="48"/></specifier> <name><name pos:line="2" pos:column="49">Http1<pos:position pos:line="2" pos:column="54"/></name><operator pos:line="2" pos:column="54">::<pos:position pos:line="2" pos:column="56"/></operator><name pos:line="2" pos:column="56">RequestParserPointer<pos:position pos:line="2" pos:column="76"/></name></name> <modifier pos:line="2" pos:column="77">&amp;<pos:position pos:line="2" pos:column="82"/></modifier></type><name pos:line="2" pos:column="78">hp<pos:position pos:line="2" pos:column="80"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="82">Http<pos:position pos:line="2" pos:column="86"/></name><operator pos:line="2" pos:column="86">::<pos:position pos:line="2" pos:column="88"/></operator><name pos:line="2" pos:column="88">Stream<pos:position pos:line="2" pos:column="94"/></name></name> <modifier pos:line="2" pos:column="95">*<pos:position pos:line="2" pos:column="96"/></modifier></type><name pos:line="2" pos:column="96">context<pos:position pos:line="2" pos:column="103"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="104"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ClientHttpRequest<pos:position pos:line="4" pos:column="22"/></name> <modifier pos:line="4" pos:column="23">*<pos:position pos:line="4" pos:column="24"/></modifier></type><name pos:line="4" pos:column="24">http<pos:position pos:line="4" pos:column="28"/></name> <init pos:line="4" pos:column="29">= <expr><name><name pos:line="4" pos:column="31">context<pos:position pos:line="4" pos:column="38"/></name><operator pos:line="4" pos:column="38">-&gt;<pos:position pos:line="4" pos:column="43"/></operator><name pos:line="4" pos:column="40">http<pos:position pos:line="4" pos:column="44"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">bool<pos:position pos:line="5" pos:column="9"/></name></type> <name pos:line="5" pos:column="10">chunked<pos:position pos:line="5" pos:column="17"/></name> <init pos:line="5" pos:column="18">= <expr><literal type="boolean" pos:line="5" pos:column="20">false<pos:position pos:line="5" pos:column="25"/></literal></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">bool<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">mustReplyToOptions<pos:position pos:line="6" pos:column="28"/></name> <init pos:line="6" pos:column="29">= <expr><literal type="boolean" pos:line="6" pos:column="31">false<pos:position pos:line="6" pos:column="36"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="37"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">bool<pos:position pos:line="7" pos:column="9"/></name></type> <name pos:line="7" pos:column="10">unsupportedTe<pos:position pos:line="7" pos:column="23"/></name> <init pos:line="7" pos:column="24">= <expr><literal type="boolean" pos:line="7" pos:column="26">false<pos:position pos:line="7" pos:column="31"/></literal></expr></init></decl>;<pos:position pos:line="7" pos:column="32"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">bool<pos:position pos:line="8" pos:column="9"/></name></type> <name pos:line="8" pos:column="10">expectBody<pos:position pos:line="8" pos:column="20"/></name> <init pos:line="8" pos:column="21">= <expr><literal type="boolean" pos:line="8" pos:column="23">false<pos:position pos:line="8" pos:column="28"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="29"/></decl_stmt>

    <comment type="line" pos:line="10" pos:column="5">// We already have the request parsed and checked, so we</comment>
    <comment type="line" pos:line="11" pos:column="5">// only need to go through the final body/conn setup to doCallouts().</comment>
    <expr_stmt><expr><call><name pos:line="12" pos:column="5">assert<pos:position pos:line="12" pos:column="11"/></name><argument_list pos:line="12" pos:column="11">(<argument><expr><name><name pos:line="12" pos:column="12">http<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">-&gt;<pos:position pos:line="12" pos:column="21"/></operator><name pos:line="12" pos:column="18">request<pos:position pos:line="12" pos:column="25"/></name></name></expr></argument>)<pos:position pos:line="12" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="27"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="13" pos:column="5">HttpRequest<pos:position pos:line="13" pos:column="16"/></name><operator pos:line="13" pos:column="16">::<pos:position pos:line="13" pos:column="18"/></operator><name pos:line="13" pos:column="18">Pointer<pos:position pos:line="13" pos:column="25"/></name></name></type> <name pos:line="13" pos:column="26">request<pos:position pos:line="13" pos:column="33"/></name> <init pos:line="13" pos:column="34">= <expr><name><name pos:line="13" pos:column="36">http<pos:position pos:line="13" pos:column="40"/></name><operator pos:line="13" pos:column="40">-&gt;<pos:position pos:line="13" pos:column="45"/></operator><name pos:line="13" pos:column="42">request<pos:position pos:line="13" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="13" pos:column="50"/></decl_stmt>

    <comment type="line" pos:line="15" pos:column="5">// temporary hack to avoid splitting this huge function with sensitive code</comment>
    <decl_stmt><decl><type><specifier pos:line="16" pos:column="5">const<pos:position pos:line="16" pos:column="10"/></specifier> <name pos:line="16" pos:column="11">bool<pos:position pos:line="16" pos:column="15"/></name></type> <name pos:line="16" pos:column="16">isFtp<pos:position pos:line="16" pos:column="21"/></name> <init pos:line="16" pos:column="22">= <expr><operator pos:line="16" pos:column="24">!<pos:position pos:line="16" pos:column="25"/></operator><name pos:line="16" pos:column="25">hp<pos:position pos:line="16" pos:column="27"/></name></expr></init></decl>;<pos:position pos:line="16" pos:column="28"/></decl_stmt>

    <comment type="line" pos:line="18" pos:column="5">// Some blobs below are still HTTP-specific, but we would have to rewrite</comment>
    <comment type="line" pos:line="19" pos:column="5">// this entire function to remove them from the FTP code path. Connection</comment>
    <comment type="line" pos:line="20" pos:column="5">// setup and body_pipe preparation blobs are needed for FTP.</comment>

    <expr_stmt><expr><call><name><name pos:line="22" pos:column="5">request<pos:position pos:line="22" pos:column="12"/></name><operator pos:line="22" pos:column="12">-&gt;<pos:position pos:line="22" pos:column="17"/></operator><name pos:line="22" pos:column="14">manager<pos:position pos:line="22" pos:column="21"/></name></name><argument_list pos:line="22" pos:column="21">(<argument><expr><name pos:line="22" pos:column="22">conn<pos:position pos:line="22" pos:column="26"/></name></expr></argument>, <argument><expr><name><name pos:line="22" pos:column="28">http<pos:position pos:line="22" pos:column="32"/></name><operator pos:line="22" pos:column="32">-&gt;<pos:position pos:line="22" pos:column="37"/></operator><name pos:line="22" pos:column="34">al<pos:position pos:line="22" pos:column="36"/></name></name></expr></argument>)<pos:position pos:line="22" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="38"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="24" pos:column="5">request<pos:position pos:line="24" pos:column="12"/></name><operator pos:line="24" pos:column="12">-&gt;<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="14">flags<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">.<pos:position pos:line="24" pos:column="20"/></operator><name pos:line="24" pos:column="20">accelerated<pos:position pos:line="24" pos:column="31"/></name></name> <operator pos:line="24" pos:column="32">=<pos:position pos:line="24" pos:column="33"/></operator> <name><name pos:line="24" pos:column="34">http<pos:position pos:line="24" pos:column="38"/></name><operator pos:line="24" pos:column="38">-&gt;<pos:position pos:line="24" pos:column="43"/></operator><name pos:line="24" pos:column="40">flags<pos:position pos:line="24" pos:column="45"/></name><operator pos:line="24" pos:column="45">.<pos:position pos:line="24" pos:column="46"/></operator><name pos:line="24" pos:column="46">accel<pos:position pos:line="24" pos:column="51"/></name></name></expr>;<pos:position pos:line="24" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="25" pos:column="5">request<pos:position pos:line="25" pos:column="12"/></name><operator pos:line="25" pos:column="12">-&gt;<pos:position pos:line="25" pos:column="17"/></operator><name pos:line="25" pos:column="14">flags<pos:position pos:line="25" pos:column="19"/></name><operator pos:line="25" pos:column="19">.<pos:position pos:line="25" pos:column="20"/></operator><name pos:line="25" pos:column="20">sslBumped<pos:position pos:line="25" pos:column="29"/></name></name><operator pos:line="25" pos:column="29">=<pos:position pos:line="25" pos:column="30"/></operator><call><name><name pos:line="25" pos:column="30">conn<pos:position pos:line="25" pos:column="34"/></name><operator pos:line="25" pos:column="34">-&gt;<pos:position pos:line="25" pos:column="39"/></operator><name pos:line="25" pos:column="36">switchedToHttps<pos:position pos:line="25" pos:column="51"/></name></name><argument_list pos:line="25" pos:column="51">()<pos:position pos:line="25" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="54"/></expr_stmt>
    <comment type="line" pos:line="26" pos:column="5">// TODO: decouple http-&gt;flags.accel from request-&gt;flags.sslBumped</comment>
    <expr_stmt><expr><name><name pos:line="27" pos:column="5">request<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">flags<pos:position pos:line="27" pos:column="19"/></name><operator pos:line="27" pos:column="19">.<pos:position pos:line="27" pos:column="20"/></operator><name pos:line="27" pos:column="20">noDirect<pos:position pos:line="27" pos:column="28"/></name></name> <operator pos:line="27" pos:column="29">=<pos:position pos:line="27" pos:column="30"/></operator> <ternary><condition><expr><operator pos:line="27" pos:column="31">(<pos:position pos:line="27" pos:column="32"/></operator><name><name pos:line="27" pos:column="32">request<pos:position pos:line="27" pos:column="39"/></name><operator pos:line="27" pos:column="39">-&gt;<pos:position pos:line="27" pos:column="44"/></operator><name pos:line="27" pos:column="41">flags<pos:position pos:line="27" pos:column="46"/></name><operator pos:line="27" pos:column="46">.<pos:position pos:line="27" pos:column="47"/></operator><name pos:line="27" pos:column="47">accelerated<pos:position pos:line="27" pos:column="58"/></name></name> <operator pos:line="27" pos:column="59">&amp;&amp;<pos:position pos:line="27" pos:column="69"/></operator> <operator pos:line="27" pos:column="62">!<pos:position pos:line="27" pos:column="63"/></operator><name><name pos:line="27" pos:column="63">request<pos:position pos:line="27" pos:column="70"/></name><operator pos:line="27" pos:column="70">-&gt;<pos:position pos:line="27" pos:column="75"/></operator><name pos:line="27" pos:column="72">flags<pos:position pos:line="27" pos:column="77"/></name><operator pos:line="27" pos:column="77">.<pos:position pos:line="27" pos:column="78"/></operator><name pos:line="27" pos:column="78">sslBumped<pos:position pos:line="27" pos:column="87"/></name></name><operator pos:line="27" pos:column="87">)<pos:position pos:line="27" pos:column="88"/></operator></expr> ?<pos:position pos:line="27" pos:column="90"/></condition><then pos:line="27" pos:column="90">
                              <expr><operator pos:line="28" pos:column="31">!<pos:position pos:line="28" pos:column="32"/></operator><name><name pos:line="28" pos:column="32">conn<pos:position pos:line="28" pos:column="36"/></name><operator pos:line="28" pos:column="36">-&gt;<pos:position pos:line="28" pos:column="41"/></operator><name pos:line="28" pos:column="38">port<pos:position pos:line="28" pos:column="42"/></name><operator pos:line="28" pos:column="42">-&gt;<pos:position pos:line="28" pos:column="47"/></operator><name pos:line="28" pos:column="44">allow_direct<pos:position pos:line="28" pos:column="56"/></name></name></expr> <pos:position pos:line="28" pos:column="57"/></then><else pos:line="28" pos:column="57">: <expr><literal type="number" pos:line="28" pos:column="59">0<pos:position pos:line="28" pos:column="60"/></literal></expr></else></ternary></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="29" pos:column="5">request<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">-&gt;<pos:position pos:line="29" pos:column="17"/></operator><name pos:line="29" pos:column="14">sources<pos:position pos:line="29" pos:column="21"/></name></name> <operator pos:line="29" pos:column="22">|=<pos:position pos:line="29" pos:column="24"/></operator> <ternary><condition><expr><name pos:line="29" pos:column="25">isFtp<pos:position pos:line="29" pos:column="30"/></name></expr> ?<pos:position pos:line="29" pos:column="32"/></condition><then pos:line="29" pos:column="32"> <expr><name><name pos:line="29" pos:column="33">HttpMsg<pos:position pos:line="29" pos:column="40"/></name><operator pos:line="29" pos:column="40">::<pos:position pos:line="29" pos:column="42"/></operator><name pos:line="29" pos:column="42">srcFtp<pos:position pos:line="29" pos:column="48"/></name></name></expr> <pos:position pos:line="29" pos:column="49"/></then><else pos:line="29" pos:column="49">:
                        <expr><operator pos:line="30" pos:column="25">(<pos:position pos:line="30" pos:column="26"/></operator><ternary><condition><expr><operator pos:line="30" pos:column="26">(<pos:position pos:line="30" pos:column="27"/></operator><name><name pos:line="30" pos:column="27">request<pos:position pos:line="30" pos:column="34"/></name><operator pos:line="30" pos:column="34">-&gt;<pos:position pos:line="30" pos:column="39"/></operator><name pos:line="30" pos:column="36">flags<pos:position pos:line="30" pos:column="41"/></name><operator pos:line="30" pos:column="41">.<pos:position pos:line="30" pos:column="42"/></operator><name pos:line="30" pos:column="42">sslBumped<pos:position pos:line="30" pos:column="51"/></name></name> <operator pos:line="30" pos:column="52">||<pos:position pos:line="30" pos:column="54"/></operator> <name><name pos:line="30" pos:column="55">conn<pos:position pos:line="30" pos:column="59"/></name><operator pos:line="30" pos:column="59">-&gt;<pos:position pos:line="30" pos:column="64"/></operator><name pos:line="30" pos:column="61">port<pos:position pos:line="30" pos:column="65"/></name><operator pos:line="30" pos:column="65">-&gt;<pos:position pos:line="30" pos:column="70"/></operator><name pos:line="30" pos:column="67">transport<pos:position pos:line="30" pos:column="76"/></name><operator pos:line="30" pos:column="76">.<pos:position pos:line="30" pos:column="77"/></operator><name pos:line="30" pos:column="77">protocol<pos:position pos:line="30" pos:column="85"/></name></name> <operator pos:line="30" pos:column="86">==<pos:position pos:line="30" pos:column="88"/></operator> <name><name pos:line="30" pos:column="89">AnyP<pos:position pos:line="30" pos:column="93"/></name><operator pos:line="30" pos:column="93">::<pos:position pos:line="30" pos:column="95"/></operator><name pos:line="30" pos:column="95">PROTO_HTTPS<pos:position pos:line="30" pos:column="106"/></name></name><operator pos:line="30" pos:column="106">)<pos:position pos:line="30" pos:column="107"/></operator></expr> ?<pos:position pos:line="30" pos:column="109"/></condition><then pos:line="30" pos:column="109"> <expr><name><name pos:line="30" pos:column="110">HttpMsg<pos:position pos:line="30" pos:column="117"/></name><operator pos:line="30" pos:column="117">::<pos:position pos:line="30" pos:column="119"/></operator><name pos:line="30" pos:column="119">srcHttps<pos:position pos:line="30" pos:column="127"/></name></name></expr> <pos:position pos:line="30" pos:column="128"/></then><else pos:line="30" pos:column="128">: <expr><name><name pos:line="30" pos:column="130">HttpMsg<pos:position pos:line="30" pos:column="137"/></name><operator pos:line="30" pos:column="137">::<pos:position pos:line="30" pos:column="139"/></operator><name pos:line="30" pos:column="139">srcHttp<pos:position pos:line="30" pos:column="146"/></name></name></expr></else></ternary><operator pos:line="30" pos:column="146">)<pos:position pos:line="30" pos:column="147"/></operator></expr></else></ternary></expr>;<pos:position pos:line="30" pos:column="148"/></expr_stmt>
<cpp:if pos:line="31" pos:column="1">#<cpp:directive pos:line="31" pos:column="2">if<pos:position pos:line="31" pos:column="4"/></cpp:directive> <expr><name pos:line="31" pos:column="5">USE_AUTH<pos:position pos:line="31" pos:column="13"/></name></expr></cpp:if>
    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">request<pos:position pos:line="32" pos:column="16"/></name><operator pos:line="32" pos:column="16">-&gt;<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="18">flags<pos:position pos:line="32" pos:column="23"/></name><operator pos:line="32" pos:column="23">.<pos:position pos:line="32" pos:column="24"/></operator><name pos:line="32" pos:column="24">sslBumped<pos:position pos:line="32" pos:column="33"/></name></name></expr>)<pos:position pos:line="32" pos:column="34"/></condition><then pos:line="32" pos:column="34"> <block pos:line="32" pos:column="35">{
        <if pos:line="33" pos:column="9">if <condition pos:line="33" pos:column="12">(<expr><call><name><name pos:line="33" pos:column="13">conn<pos:position pos:line="33" pos:column="17"/></name><operator pos:line="33" pos:column="17">-&gt;<pos:position pos:line="33" pos:column="22"/></operator><name pos:line="33" pos:column="19">getAuth<pos:position pos:line="33" pos:column="26"/></name></name><argument_list pos:line="33" pos:column="26">()<pos:position pos:line="33" pos:column="28"/></argument_list></call> <operator pos:line="33" pos:column="29">!=<pos:position pos:line="33" pos:column="31"/></operator> <name pos:line="33" pos:column="32">NULL<pos:position pos:line="33" pos:column="36"/></name></expr>)<pos:position pos:line="33" pos:column="37"/></condition><then pos:line="33" pos:column="37">
            <block type="pseudo"><expr_stmt><expr><name><name pos:line="34" pos:column="13">request<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">auth_user_request<pos:position pos:line="34" pos:column="39"/></name></name> <operator pos:line="34" pos:column="40">=<pos:position pos:line="34" pos:column="41"/></operator> <call><name><name pos:line="34" pos:column="42">conn<pos:position pos:line="34" pos:column="46"/></name><operator pos:line="34" pos:column="46">-&gt;<pos:position pos:line="34" pos:column="51"/></operator><name pos:line="34" pos:column="48">getAuth<pos:position pos:line="34" pos:column="55"/></name></name><argument_list pos:line="34" pos:column="55">()<pos:position pos:line="34" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="58"/></expr_stmt></block></then></if>
    }<pos:position pos:line="35" pos:column="6"/></block></then></if>
<cpp:endif pos:line="36" pos:column="1">#<cpp:directive pos:line="36" pos:column="2">endif<pos:position pos:line="36" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="38" pos:column="5">if <condition pos:line="38" pos:column="8">(<expr><call><name pos:line="38" pos:column="9">internalCheck<pos:position pos:line="38" pos:column="22"/></name><argument_list pos:line="38" pos:column="22">(<argument><expr><call><name><name pos:line="38" pos:column="23">request<pos:position pos:line="38" pos:column="30"/></name><operator pos:line="38" pos:column="30">-&gt;<pos:position pos:line="38" pos:column="35"/></operator><name pos:line="38" pos:column="32">url<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">.<pos:position pos:line="38" pos:column="36"/></operator><name pos:line="38" pos:column="36">path<pos:position pos:line="38" pos:column="40"/></name></name><argument_list pos:line="38" pos:column="40">()<pos:position pos:line="38" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="38" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="38" pos:column="44"/></condition><then pos:line="38" pos:column="44"> <block pos:line="38" pos:column="45">{
        <if pos:line="39" pos:column="9">if <condition pos:line="39" pos:column="12">(<expr><call><name pos:line="39" pos:column="13">internalHostnameIs<pos:position pos:line="39" pos:column="31"/></name><argument_list pos:line="39" pos:column="31">(<argument><expr><call><name><name pos:line="39" pos:column="32">request<pos:position pos:line="39" pos:column="39"/></name><operator pos:line="39" pos:column="39">-&gt;<pos:position pos:line="39" pos:column="44"/></operator><name pos:line="39" pos:column="41">url<pos:position pos:line="39" pos:column="44"/></name><operator pos:line="39" pos:column="44">.<pos:position pos:line="39" pos:column="45"/></operator><name pos:line="39" pos:column="45">host<pos:position pos:line="39" pos:column="49"/></name></name><argument_list pos:line="39" pos:column="49">()<pos:position pos:line="39" pos:column="51"/></argument_list></call></expr></argument>)<pos:position pos:line="39" pos:column="52"/></argument_list></call> <operator pos:line="39" pos:column="53">&amp;&amp;<pos:position pos:line="39" pos:column="63"/></operator> <call><name><name pos:line="39" pos:column="56">request<pos:position pos:line="39" pos:column="63"/></name><operator pos:line="39" pos:column="63">-&gt;<pos:position pos:line="39" pos:column="68"/></operator><name pos:line="39" pos:column="65">url<pos:position pos:line="39" pos:column="68"/></name><operator pos:line="39" pos:column="68">.<pos:position pos:line="39" pos:column="69"/></operator><name pos:line="39" pos:column="69">port<pos:position pos:line="39" pos:column="73"/></name></name><argument_list pos:line="39" pos:column="73">()<pos:position pos:line="39" pos:column="75"/></argument_list></call> <operator pos:line="39" pos:column="76">==<pos:position pos:line="39" pos:column="78"/></operator> <call><name pos:line="39" pos:column="79">getMyPort<pos:position pos:line="39" pos:column="88"/></name><argument_list pos:line="39" pos:column="88">()<pos:position pos:line="39" pos:column="90"/></argument_list></call></expr>)<pos:position pos:line="39" pos:column="91"/></condition><then pos:line="39" pos:column="91"> <block pos:line="39" pos:column="92">{
            <expr_stmt><expr><call><name pos:line="40" pos:column="13">debugs<pos:position pos:line="40" pos:column="19"/></name><argument_list pos:line="40" pos:column="19">(<argument><expr><literal type="number" pos:line="40" pos:column="20">33<pos:position pos:line="40" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="40" pos:column="24">2<pos:position pos:line="40" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="40" pos:column="27">"internal URL found: "<pos:position pos:line="40" pos:column="49"/></literal> <operator pos:line="40" pos:column="50">&lt;&lt;<pos:position pos:line="40" pos:column="58"/></operator> <call><name><name pos:line="40" pos:column="53">request<pos:position pos:line="40" pos:column="60"/></name><operator pos:line="40" pos:column="60">-&gt;<pos:position pos:line="40" pos:column="65"/></operator><name pos:line="40" pos:column="62">url<pos:position pos:line="40" pos:column="65"/></name><operator pos:line="40" pos:column="65">.<pos:position pos:line="40" pos:column="66"/></operator><name pos:line="40" pos:column="66">getScheme<pos:position pos:line="40" pos:column="75"/></name></name><argument_list pos:line="40" pos:column="75">()<pos:position pos:line="40" pos:column="77"/></argument_list></call> <operator pos:line="40" pos:column="78">&lt;&lt;<pos:position pos:line="40" pos:column="86"/></operator> <literal type="string" pos:line="40" pos:column="81">"://"<pos:position pos:line="40" pos:column="86"/></literal> <operator pos:line="40" pos:column="87">&lt;&lt;<pos:position pos:line="40" pos:column="95"/></operator> <call><name><name pos:line="40" pos:column="90">request<pos:position pos:line="40" pos:column="97"/></name><operator pos:line="40" pos:column="97">-&gt;<pos:position pos:line="40" pos:column="102"/></operator><name pos:line="40" pos:column="99">url<pos:position pos:line="40" pos:column="102"/></name><operator pos:line="40" pos:column="102">.<pos:position pos:line="40" pos:column="103"/></operator><name pos:line="40" pos:column="103">authority<pos:position pos:line="40" pos:column="112"/></name></name><argument_list pos:line="40" pos:column="112">(<argument><expr><literal type="boolean" pos:line="40" pos:column="113">true<pos:position pos:line="40" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="40" pos:column="118"/></argument_list></call></expr></argument>)<pos:position pos:line="40" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="120"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="41" pos:column="13">http<pos:position pos:line="41" pos:column="17"/></name><operator pos:line="41" pos:column="17">-&gt;<pos:position pos:line="41" pos:column="22"/></operator><name pos:line="41" pos:column="19">flags<pos:position pos:line="41" pos:column="24"/></name><operator pos:line="41" pos:column="24">.<pos:position pos:line="41" pos:column="25"/></operator><name pos:line="41" pos:column="25">internal<pos:position pos:line="41" pos:column="33"/></name></name> <operator pos:line="41" pos:column="34">=<pos:position pos:line="41" pos:column="35"/></operator> <literal type="boolean" pos:line="41" pos:column="36">true<pos:position pos:line="41" pos:column="40"/></literal></expr>;<pos:position pos:line="41" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="42" pos:column="10"/></block></then> <elseif pos:line="42" pos:column="11">else <if pos:line="42" pos:column="16">if <condition pos:line="42" pos:column="19">(<expr><name><name pos:line="42" pos:column="20">Config<pos:position pos:line="42" pos:column="26"/></name><operator pos:line="42" pos:column="26">.<pos:position pos:line="42" pos:column="27"/></operator><name pos:line="42" pos:column="27">onoff<pos:position pos:line="42" pos:column="32"/></name><operator pos:line="42" pos:column="32">.<pos:position pos:line="42" pos:column="33"/></operator><name pos:line="42" pos:column="33">global_internal_static<pos:position pos:line="42" pos:column="55"/></name></name> <operator pos:line="42" pos:column="56">&amp;&amp;<pos:position pos:line="42" pos:column="66"/></operator> <call><name pos:line="42" pos:column="59">internalStaticCheck<pos:position pos:line="42" pos:column="78"/></name><argument_list pos:line="42" pos:column="78">(<argument><expr><call><name><name pos:line="42" pos:column="79">request<pos:position pos:line="42" pos:column="86"/></name><operator pos:line="42" pos:column="86">-&gt;<pos:position pos:line="42" pos:column="91"/></operator><name pos:line="42" pos:column="88">url<pos:position pos:line="42" pos:column="91"/></name><operator pos:line="42" pos:column="91">.<pos:position pos:line="42" pos:column="92"/></operator><name pos:line="42" pos:column="92">path<pos:position pos:line="42" pos:column="96"/></name></name><argument_list pos:line="42" pos:column="96">()<pos:position pos:line="42" pos:column="98"/></argument_list></call></expr></argument>)<pos:position pos:line="42" pos:column="99"/></argument_list></call></expr>)<pos:position pos:line="42" pos:column="100"/></condition><then pos:line="42" pos:column="100"> <block pos:line="42" pos:column="101">{
            <expr_stmt><expr><call><name pos:line="43" pos:column="13">debugs<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><literal type="number" pos:line="43" pos:column="20">33<pos:position pos:line="43" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="43" pos:column="24">2<pos:position pos:line="43" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="43" pos:column="27">"internal URL found: "<pos:position pos:line="43" pos:column="49"/></literal> <operator pos:line="43" pos:column="50">&lt;&lt;<pos:position pos:line="43" pos:column="58"/></operator> <call><name><name pos:line="43" pos:column="53">request<pos:position pos:line="43" pos:column="60"/></name><operator pos:line="43" pos:column="60">-&gt;<pos:position pos:line="43" pos:column="65"/></operator><name pos:line="43" pos:column="62">url<pos:position pos:line="43" pos:column="65"/></name><operator pos:line="43" pos:column="65">.<pos:position pos:line="43" pos:column="66"/></operator><name pos:line="43" pos:column="66">getScheme<pos:position pos:line="43" pos:column="75"/></name></name><argument_list pos:line="43" pos:column="75">()<pos:position pos:line="43" pos:column="77"/></argument_list></call> <operator pos:line="43" pos:column="78">&lt;&lt;<pos:position pos:line="43" pos:column="86"/></operator> <literal type="string" pos:line="43" pos:column="81">"://"<pos:position pos:line="43" pos:column="86"/></literal> <operator pos:line="43" pos:column="87">&lt;&lt;<pos:position pos:line="43" pos:column="95"/></operator> <call><name><name pos:line="43" pos:column="90">request<pos:position pos:line="43" pos:column="97"/></name><operator pos:line="43" pos:column="97">-&gt;<pos:position pos:line="43" pos:column="102"/></operator><name pos:line="43" pos:column="99">url<pos:position pos:line="43" pos:column="102"/></name><operator pos:line="43" pos:column="102">.<pos:position pos:line="43" pos:column="103"/></operator><name pos:line="43" pos:column="103">authority<pos:position pos:line="43" pos:column="112"/></name></name><argument_list pos:line="43" pos:column="112">(<argument><expr><literal type="boolean" pos:line="43" pos:column="113">true<pos:position pos:line="43" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="118"/></argument_list></call> <operator pos:line="43" pos:column="119">&lt;&lt;<pos:position pos:line="43" pos:column="127"/></operator> <literal type="string" pos:line="43" pos:column="122">" (global_internal_static on)"<pos:position pos:line="43" pos:column="152"/></literal></expr></argument>)<pos:position pos:line="43" pos:column="153"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="154"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="44" pos:column="13">request<pos:position pos:line="44" pos:column="20"/></name><operator pos:line="44" pos:column="20">-&gt;<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="22">url<pos:position pos:line="44" pos:column="25"/></name><operator pos:line="44" pos:column="25">.<pos:position pos:line="44" pos:column="26"/></operator><name pos:line="44" pos:column="26">setScheme<pos:position pos:line="44" pos:column="35"/></name></name><argument_list pos:line="44" pos:column="35">(<argument><expr><name><name pos:line="44" pos:column="36">AnyP<pos:position pos:line="44" pos:column="40"/></name><operator pos:line="44" pos:column="40">::<pos:position pos:line="44" pos:column="42"/></operator><name pos:line="44" pos:column="42">PROTO_HTTP<pos:position pos:line="44" pos:column="52"/></name></name></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="54">"http"<pos:position pos:line="44" pos:column="60"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="62"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="45" pos:column="13">request<pos:position pos:line="45" pos:column="20"/></name><operator pos:line="45" pos:column="20">-&gt;<pos:position pos:line="45" pos:column="25"/></operator><name pos:line="45" pos:column="22">url<pos:position pos:line="45" pos:column="25"/></name><operator pos:line="45" pos:column="25">.<pos:position pos:line="45" pos:column="26"/></operator><name pos:line="45" pos:column="26">host<pos:position pos:line="45" pos:column="30"/></name></name><argument_list pos:line="45" pos:column="30">(<argument><expr><call><name pos:line="45" pos:column="31">internalHostname<pos:position pos:line="45" pos:column="47"/></name><argument_list pos:line="45" pos:column="47">()<pos:position pos:line="45" pos:column="49"/></argument_list></call></expr></argument>)<pos:position pos:line="45" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="51"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="46" pos:column="13">request<pos:position pos:line="46" pos:column="20"/></name><operator pos:line="46" pos:column="20">-&gt;<pos:position pos:line="46" pos:column="25"/></operator><name pos:line="46" pos:column="22">url<pos:position pos:line="46" pos:column="25"/></name><operator pos:line="46" pos:column="25">.<pos:position pos:line="46" pos:column="26"/></operator><name pos:line="46" pos:column="26">port<pos:position pos:line="46" pos:column="30"/></name></name><argument_list pos:line="46" pos:column="30">(<argument><expr><call><name pos:line="46" pos:column="31">getMyPort<pos:position pos:line="46" pos:column="40"/></name><argument_list pos:line="46" pos:column="40">()<pos:position pos:line="46" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="46" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="46" pos:column="44"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="47" pos:column="13">http<pos:position pos:line="47" pos:column="17"/></name><operator pos:line="47" pos:column="17">-&gt;<pos:position pos:line="47" pos:column="22"/></operator><name pos:line="47" pos:column="19">flags<pos:position pos:line="47" pos:column="24"/></name><operator pos:line="47" pos:column="24">.<pos:position pos:line="47" pos:column="25"/></operator><name pos:line="47" pos:column="25">internal<pos:position pos:line="47" pos:column="33"/></name></name> <operator pos:line="47" pos:column="34">=<pos:position pos:line="47" pos:column="35"/></operator> <literal type="boolean" pos:line="47" pos:column="36">true<pos:position pos:line="47" pos:column="40"/></literal></expr>;<pos:position pos:line="47" pos:column="41"/></expr_stmt>
        }<pos:position pos:line="48" pos:column="10"/></block></then></if></elseif> <else pos:line="48" pos:column="11">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="49" pos:column="13">debugs<pos:position pos:line="49" pos:column="19"/></name><argument_list pos:line="49" pos:column="19">(<argument><expr><literal type="number" pos:line="49" pos:column="20">33<pos:position pos:line="49" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="49" pos:column="24">2<pos:position pos:line="49" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="49" pos:column="27">"internal URL found: "<pos:position pos:line="49" pos:column="49"/></literal> <operator pos:line="49" pos:column="50">&lt;&lt;<pos:position pos:line="49" pos:column="58"/></operator> <call><name><name pos:line="49" pos:column="53">request<pos:position pos:line="49" pos:column="60"/></name><operator pos:line="49" pos:column="60">-&gt;<pos:position pos:line="49" pos:column="65"/></operator><name pos:line="49" pos:column="62">url<pos:position pos:line="49" pos:column="65"/></name><operator pos:line="49" pos:column="65">.<pos:position pos:line="49" pos:column="66"/></operator><name pos:line="49" pos:column="66">getScheme<pos:position pos:line="49" pos:column="75"/></name></name><argument_list pos:line="49" pos:column="75">()<pos:position pos:line="49" pos:column="77"/></argument_list></call> <operator pos:line="49" pos:column="78">&lt;&lt;<pos:position pos:line="49" pos:column="86"/></operator> <literal type="string" pos:line="49" pos:column="81">"://"<pos:position pos:line="49" pos:column="86"/></literal> <operator pos:line="49" pos:column="87">&lt;&lt;<pos:position pos:line="49" pos:column="95"/></operator> <call><name><name pos:line="49" pos:column="90">request<pos:position pos:line="49" pos:column="97"/></name><operator pos:line="49" pos:column="97">-&gt;<pos:position pos:line="49" pos:column="102"/></operator><name pos:line="49" pos:column="99">url<pos:position pos:line="49" pos:column="102"/></name><operator pos:line="49" pos:column="102">.<pos:position pos:line="49" pos:column="103"/></operator><name pos:line="49" pos:column="103">authority<pos:position pos:line="49" pos:column="112"/></name></name><argument_list pos:line="49" pos:column="112">(<argument><expr><literal type="boolean" pos:line="49" pos:column="113">true<pos:position pos:line="49" pos:column="117"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="118"/></argument_list></call> <operator pos:line="49" pos:column="119">&lt;&lt;<pos:position pos:line="49" pos:column="127"/></operator> <literal type="string" pos:line="49" pos:column="122">" (not this proxy)"<pos:position pos:line="49" pos:column="141"/></literal></expr></argument>)<pos:position pos:line="49" pos:column="142"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="143"/></expr_stmt></block></else></if>
    }<pos:position pos:line="50" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="52" pos:column="5">request<pos:position pos:line="52" pos:column="12"/></name><operator pos:line="52" pos:column="12">-&gt;<pos:position pos:line="52" pos:column="17"/></operator><name pos:line="52" pos:column="14">flags<pos:position pos:line="52" pos:column="19"/></name><operator pos:line="52" pos:column="19">.<pos:position pos:line="52" pos:column="20"/></operator><name pos:line="52" pos:column="20">internal<pos:position pos:line="52" pos:column="28"/></name></name> <operator pos:line="52" pos:column="29">=<pos:position pos:line="52" pos:column="30"/></operator> <name><name pos:line="52" pos:column="31">http<pos:position pos:line="52" pos:column="35"/></name><operator pos:line="52" pos:column="35">-&gt;<pos:position pos:line="52" pos:column="40"/></operator><name pos:line="52" pos:column="37">flags<pos:position pos:line="52" pos:column="42"/></name><operator pos:line="52" pos:column="42">.<pos:position pos:line="52" pos:column="43"/></operator><name pos:line="52" pos:column="43">internal<pos:position pos:line="52" pos:column="51"/></name></name></expr>;<pos:position pos:line="52" pos:column="52"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="53" pos:column="5">setLogUri<pos:position pos:line="53" pos:column="14"/></name> <argument_list pos:line="53" pos:column="15">(<argument><expr><name pos:line="53" pos:column="16">http<pos:position pos:line="53" pos:column="20"/></name></expr></argument>, <argument><expr><call><name pos:line="53" pos:column="22">urlCanonicalClean<pos:position pos:line="53" pos:column="39"/></name><argument_list pos:line="53" pos:column="39">(<argument><expr><call><name><name pos:line="53" pos:column="40">request<pos:position pos:line="53" pos:column="47"/></name><operator pos:line="53" pos:column="47">.<pos:position pos:line="53" pos:column="48"/></operator><name pos:line="53" pos:column="48">getRaw<pos:position pos:line="53" pos:column="54"/></name></name><argument_list pos:line="53" pos:column="54">()<pos:position pos:line="53" pos:column="56"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="57"/></argument_list></call></expr></argument>)<pos:position pos:line="53" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="59"/></expr_stmt>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">!<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">isFtp<pos:position pos:line="55" pos:column="15"/></name></expr>)<pos:position pos:line="55" pos:column="16"/></condition><then pos:line="55" pos:column="16"> <block pos:line="55" pos:column="17">{
        <comment type="line" pos:line="56" pos:column="9">// XXX: for non-HTTP messages instantiate a different HttpMsg child type</comment>
        <comment type="line" pos:line="57" pos:column="9">// for now Squid only supports HTTP requests</comment>
        <decl_stmt><decl><type><specifier pos:line="58" pos:column="9">const<pos:position pos:line="58" pos:column="14"/></specifier> <name><name pos:line="58" pos:column="15">AnyP<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">::<pos:position pos:line="58" pos:column="21"/></operator><name pos:line="58" pos:column="21">ProtocolVersion<pos:position pos:line="58" pos:column="36"/></name></name> <modifier pos:line="58" pos:column="37">&amp;<pos:position pos:line="58" pos:column="42"/></modifier></type><name pos:line="58" pos:column="38">http_ver<pos:position pos:line="58" pos:column="46"/></name> <init pos:line="58" pos:column="47">= <expr><call><name><name pos:line="58" pos:column="49">hp<pos:position pos:line="58" pos:column="51"/></name><operator pos:line="58" pos:column="51">-&gt;<pos:position pos:line="58" pos:column="56"/></operator><name pos:line="58" pos:column="53">messageProtocol<pos:position pos:line="58" pos:column="68"/></name></name><argument_list pos:line="58" pos:column="68">()<pos:position pos:line="58" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="58" pos:column="71"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="59" pos:column="9">assert<pos:position pos:line="59" pos:column="15"/></name><argument_list pos:line="59" pos:column="15">(<argument><expr><name><name pos:line="59" pos:column="16">request<pos:position pos:line="59" pos:column="23"/></name><operator pos:line="59" pos:column="23">-&gt;<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="25">http_ver<pos:position pos:line="59" pos:column="33"/></name><operator pos:line="59" pos:column="33">.<pos:position pos:line="59" pos:column="34"/></operator><name pos:line="59" pos:column="34">protocol<pos:position pos:line="59" pos:column="42"/></name></name> <operator pos:line="59" pos:column="43">==<pos:position pos:line="59" pos:column="45"/></operator> <name><name pos:line="59" pos:column="46">http_ver<pos:position pos:line="59" pos:column="54"/></name><operator pos:line="59" pos:column="54">.<pos:position pos:line="59" pos:column="55"/></operator><name pos:line="59" pos:column="55">protocol<pos:position pos:line="59" pos:column="63"/></name></name></expr></argument>)<pos:position pos:line="59" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="59" pos:column="65"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="60" pos:column="9">request<pos:position pos:line="60" pos:column="16"/></name><operator pos:line="60" pos:column="16">-&gt;<pos:position pos:line="60" pos:column="21"/></operator><name pos:line="60" pos:column="18">http_ver<pos:position pos:line="60" pos:column="26"/></name><operator pos:line="60" pos:column="26">.<pos:position pos:line="60" pos:column="27"/></operator><name pos:line="60" pos:column="27">major<pos:position pos:line="60" pos:column="32"/></name></name> <operator pos:line="60" pos:column="33">=<pos:position pos:line="60" pos:column="34"/></operator> <name><name pos:line="60" pos:column="35">http_ver<pos:position pos:line="60" pos:column="43"/></name><operator pos:line="60" pos:column="43">.<pos:position pos:line="60" pos:column="44"/></operator><name pos:line="60" pos:column="44">major<pos:position pos:line="60" pos:column="49"/></name></name></expr>;<pos:position pos:line="60" pos:column="50"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="61" pos:column="9">request<pos:position pos:line="61" pos:column="16"/></name><operator pos:line="61" pos:column="16">-&gt;<pos:position pos:line="61" pos:column="21"/></operator><name pos:line="61" pos:column="18">http_ver<pos:position pos:line="61" pos:column="26"/></name><operator pos:line="61" pos:column="26">.<pos:position pos:line="61" pos:column="27"/></operator><name pos:line="61" pos:column="27">minor<pos:position pos:line="61" pos:column="32"/></name></name> <operator pos:line="61" pos:column="33">=<pos:position pos:line="61" pos:column="34"/></operator> <name><name pos:line="61" pos:column="35">http_ver<pos:position pos:line="61" pos:column="43"/></name><operator pos:line="61" pos:column="43">.<pos:position pos:line="61" pos:column="44"/></operator><name pos:line="61" pos:column="44">minor<pos:position pos:line="61" pos:column="49"/></name></name></expr>;<pos:position pos:line="61" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="62" pos:column="6"/></block></then></if>

    <if pos:line="64" pos:column="5">if <condition pos:line="64" pos:column="8">(<expr><call><name><name pos:line="64" pos:column="9">request<pos:position pos:line="64" pos:column="16"/></name><operator pos:line="64" pos:column="16">-&gt;<pos:position pos:line="64" pos:column="21"/></operator><name pos:line="64" pos:column="18">header<pos:position pos:line="64" pos:column="24"/></name><operator pos:line="64" pos:column="24">.<pos:position pos:line="64" pos:column="25"/></operator><name pos:line="64" pos:column="25">chunked<pos:position pos:line="64" pos:column="32"/></name></name><argument_list pos:line="64" pos:column="32">()<pos:position pos:line="64" pos:column="34"/></argument_list></call></expr>)<pos:position pos:line="64" pos:column="35"/></condition><then pos:line="64" pos:column="35"> <block pos:line="64" pos:column="36">{
        <expr_stmt><expr><name pos:line="65" pos:column="9">chunked<pos:position pos:line="65" pos:column="16"/></name> <operator pos:line="65" pos:column="17">=<pos:position pos:line="65" pos:column="18"/></operator> <literal type="boolean" pos:line="65" pos:column="19">true<pos:position pos:line="65" pos:column="23"/></literal></expr>;<pos:position pos:line="65" pos:column="24"/></expr_stmt>
    }<pos:position pos:line="66" pos:column="6"/></block></then> <elseif pos:line="66" pos:column="7">else <if pos:line="66" pos:column="12">if <condition pos:line="66" pos:column="15">(<expr><call><name><name pos:line="66" pos:column="16">request<pos:position pos:line="66" pos:column="23"/></name><operator pos:line="66" pos:column="23">-&gt;<pos:position pos:line="66" pos:column="28"/></operator><name pos:line="66" pos:column="25">header<pos:position pos:line="66" pos:column="31"/></name><operator pos:line="66" pos:column="31">.<pos:position pos:line="66" pos:column="32"/></operator><name pos:line="66" pos:column="32">has<pos:position pos:line="66" pos:column="35"/></name></name><argument_list pos:line="66" pos:column="35">(<argument><expr><name><name pos:line="66" pos:column="36">Http<pos:position pos:line="66" pos:column="40"/></name><operator pos:line="66" pos:column="40">::<pos:position pos:line="66" pos:column="42"/></operator><name pos:line="66" pos:column="42">HdrType<pos:position pos:line="66" pos:column="49"/></name><operator pos:line="66" pos:column="49">::<pos:position pos:line="66" pos:column="51"/></operator><name pos:line="66" pos:column="51">TRANSFER_ENCODING<pos:position pos:line="66" pos:column="68"/></name></name></expr></argument>)<pos:position pos:line="66" pos:column="69"/></argument_list></call></expr>)<pos:position pos:line="66" pos:column="70"/></condition><then pos:line="66" pos:column="70"> <block pos:line="66" pos:column="71">{
        <decl_stmt><decl><type><specifier pos:line="67" pos:column="9">const<pos:position pos:line="67" pos:column="14"/></specifier> <name pos:line="67" pos:column="15">String<pos:position pos:line="67" pos:column="21"/></name></type> <name pos:line="67" pos:column="22">te<pos:position pos:line="67" pos:column="24"/></name> <init pos:line="67" pos:column="25">= <expr><call><name><name pos:line="67" pos:column="27">request<pos:position pos:line="67" pos:column="34"/></name><operator pos:line="67" pos:column="34">-&gt;<pos:position pos:line="67" pos:column="39"/></operator><name pos:line="67" pos:column="36">header<pos:position pos:line="67" pos:column="42"/></name><operator pos:line="67" pos:column="42">.<pos:position pos:line="67" pos:column="43"/></operator><name pos:line="67" pos:column="43">getList<pos:position pos:line="67" pos:column="50"/></name></name><argument_list pos:line="67" pos:column="50">(<argument><expr><name><name pos:line="67" pos:column="51">Http<pos:position pos:line="67" pos:column="55"/></name><operator pos:line="67" pos:column="55">::<pos:position pos:line="67" pos:column="57"/></operator><name pos:line="67" pos:column="57">HdrType<pos:position pos:line="67" pos:column="64"/></name><operator pos:line="67" pos:column="64">::<pos:position pos:line="67" pos:column="66"/></operator><name pos:line="67" pos:column="66">TRANSFER_ENCODING<pos:position pos:line="67" pos:column="83"/></name></name></expr></argument>)<pos:position pos:line="67" pos:column="84"/></argument_list></call></expr></init></decl>;<pos:position pos:line="67" pos:column="85"/></decl_stmt>
        <comment type="line" pos:line="68" pos:column="9">// HTTP/1.1 requires chunking to be the last encoding if there is one</comment>
        <expr_stmt><expr><name pos:line="69" pos:column="9">unsupportedTe<pos:position pos:line="69" pos:column="22"/></name> <operator pos:line="69" pos:column="23">=<pos:position pos:line="69" pos:column="24"/></operator> <call><name><name pos:line="69" pos:column="25">te<pos:position pos:line="69" pos:column="27"/></name><operator pos:line="69" pos:column="27">.<pos:position pos:line="69" pos:column="28"/></operator><name pos:line="69" pos:column="28">size<pos:position pos:line="69" pos:column="32"/></name></name><argument_list pos:line="69" pos:column="32">()<pos:position pos:line="69" pos:column="34"/></argument_list></call> <operator pos:line="69" pos:column="35">&amp;&amp;<pos:position pos:line="69" pos:column="45"/></operator> <name pos:line="69" pos:column="38">te<pos:position pos:line="69" pos:column="40"/></name> <operator pos:line="69" pos:column="41">!=<pos:position pos:line="69" pos:column="43"/></operator> <literal type="string" pos:line="69" pos:column="44">"identity"<pos:position pos:line="69" pos:column="54"/></literal></expr>;<pos:position pos:line="69" pos:column="55"/></expr_stmt>
    }<pos:position pos:line="70" pos:column="6"/></block></then></if></elseif></if> <comment type="line" pos:line="70" pos:column="7">// else implied identity coding</comment>

    <expr_stmt><expr><name pos:line="72" pos:column="5">mustReplyToOptions<pos:position pos:line="72" pos:column="23"/></name> <operator pos:line="72" pos:column="24">=<pos:position pos:line="72" pos:column="25"/></operator> <operator pos:line="72" pos:column="26">(<pos:position pos:line="72" pos:column="27"/></operator><name><name pos:line="72" pos:column="27">request<pos:position pos:line="72" pos:column="34"/></name><operator pos:line="72" pos:column="34">-&gt;<pos:position pos:line="72" pos:column="39"/></operator><name pos:line="72" pos:column="36">method<pos:position pos:line="72" pos:column="42"/></name></name> <operator pos:line="72" pos:column="43">==<pos:position pos:line="72" pos:column="45"/></operator> <name><name pos:line="72" pos:column="46">Http<pos:position pos:line="72" pos:column="50"/></name><operator pos:line="72" pos:column="50">::<pos:position pos:line="72" pos:column="52"/></operator><name pos:line="72" pos:column="52">METHOD_OPTIONS<pos:position pos:line="72" pos:column="66"/></name></name><operator pos:line="72" pos:column="66">)<pos:position pos:line="72" pos:column="67"/></operator> <operator pos:line="72" pos:column="68">&amp;&amp;<pos:position pos:line="72" pos:column="78"/></operator>
                         <operator pos:line="73" pos:column="26">(<pos:position pos:line="73" pos:column="27"/></operator><call><name><name pos:line="73" pos:column="27">request<pos:position pos:line="73" pos:column="34"/></name><operator pos:line="73" pos:column="34">-&gt;<pos:position pos:line="73" pos:column="39"/></operator><name pos:line="73" pos:column="36">header<pos:position pos:line="73" pos:column="42"/></name><operator pos:line="73" pos:column="42">.<pos:position pos:line="73" pos:column="43"/></operator><name pos:line="73" pos:column="43">getInt64<pos:position pos:line="73" pos:column="51"/></name></name><argument_list pos:line="73" pos:column="51">(<argument><expr><name><name pos:line="73" pos:column="52">Http<pos:position pos:line="73" pos:column="56"/></name><operator pos:line="73" pos:column="56">::<pos:position pos:line="73" pos:column="58"/></operator><name pos:line="73" pos:column="58">HdrType<pos:position pos:line="73" pos:column="65"/></name><operator pos:line="73" pos:column="65">::<pos:position pos:line="73" pos:column="67"/></operator><name pos:line="73" pos:column="67">MAX_FORWARDS<pos:position pos:line="73" pos:column="79"/></name></name></expr></argument>)<pos:position pos:line="73" pos:column="80"/></argument_list></call> <operator pos:line="73" pos:column="81">==<pos:position pos:line="73" pos:column="83"/></operator> <literal type="number" pos:line="73" pos:column="84">0<pos:position pos:line="73" pos:column="85"/></literal><operator pos:line="73" pos:column="85">)<pos:position pos:line="73" pos:column="86"/></operator></expr>;<pos:position pos:line="73" pos:column="87"/></expr_stmt>
    <if pos:line="74" pos:column="5">if <condition pos:line="74" pos:column="8">(<expr><operator pos:line="74" pos:column="9">!<pos:position pos:line="74" pos:column="10"/></operator><call><name pos:line="74" pos:column="10">urlCheckRequest<pos:position pos:line="74" pos:column="25"/></name><argument_list pos:line="74" pos:column="25">(<argument><expr><call><name><name pos:line="74" pos:column="26">request<pos:position pos:line="74" pos:column="33"/></name><operator pos:line="74" pos:column="33">.<pos:position pos:line="74" pos:column="34"/></operator><name pos:line="74" pos:column="34">getRaw<pos:position pos:line="74" pos:column="40"/></name></name><argument_list pos:line="74" pos:column="40">()<pos:position pos:line="74" pos:column="42"/></argument_list></call></expr></argument>)<pos:position pos:line="74" pos:column="43"/></argument_list></call> <operator pos:line="74" pos:column="44">||<pos:position pos:line="74" pos:column="46"/></operator> <name pos:line="74" pos:column="47">mustReplyToOptions<pos:position pos:line="74" pos:column="65"/></name> <operator pos:line="74" pos:column="66">||<pos:position pos:line="74" pos:column="68"/></operator> <name pos:line="74" pos:column="69">unsupportedTe<pos:position pos:line="74" pos:column="82"/></name></expr>)<pos:position pos:line="74" pos:column="83"/></condition><then pos:line="74" pos:column="83"> <block pos:line="74" pos:column="84">{
        <decl_stmt><decl><type><name pos:line="75" pos:column="9">clientStreamNode<pos:position pos:line="75" pos:column="25"/></name> <modifier pos:line="75" pos:column="26">*<pos:position pos:line="75" pos:column="27"/></modifier></type><name pos:line="75" pos:column="27">node<pos:position pos:line="75" pos:column="31"/></name> <init pos:line="75" pos:column="32">= <expr><call><name><name pos:line="75" pos:column="34">context<pos:position pos:line="75" pos:column="41"/></name><operator pos:line="75" pos:column="41">-&gt;<pos:position pos:line="75" pos:column="46"/></operator><name pos:line="75" pos:column="43">getClientReplyContext<pos:position pos:line="75" pos:column="64"/></name></name><argument_list pos:line="75" pos:column="64">()<pos:position pos:line="75" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="75" pos:column="67"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="76" pos:column="9">conn<pos:position pos:line="76" pos:column="13"/></name><operator pos:line="76" pos:column="13">-&gt;<pos:position pos:line="76" pos:column="18"/></operator><name pos:line="76" pos:column="15">quitAfterError<pos:position pos:line="76" pos:column="29"/></name></name><argument_list pos:line="76" pos:column="29">(<argument><expr><call><name><name pos:line="76" pos:column="30">request<pos:position pos:line="76" pos:column="37"/></name><operator pos:line="76" pos:column="37">.<pos:position pos:line="76" pos:column="38"/></operator><name pos:line="76" pos:column="38">getRaw<pos:position pos:line="76" pos:column="44"/></name></name><argument_list pos:line="76" pos:column="44">()<pos:position pos:line="76" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="76" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="76" pos:column="48"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="77" pos:column="9">clientReplyContext<pos:position pos:line="77" pos:column="27"/></name> <modifier pos:line="77" pos:column="28">*<pos:position pos:line="77" pos:column="29"/></modifier></type><name pos:line="77" pos:column="29">repContext<pos:position pos:line="77" pos:column="39"/></name> <init pos:line="77" pos:column="40">= <expr><cast type="dynamic" pos:line="77" pos:column="42">dynamic_cast<argument_list type="generic" pos:line="77" pos:column="54">&lt;<argument><expr><name pos:line="77" pos:column="55">clientReplyContext<pos:position pos:line="77" pos:column="73"/></name> <operator pos:line="77" pos:column="74">*<pos:position pos:line="77" pos:column="75"/></operator></expr></argument>&gt;<pos:position pos:line="77" pos:column="79"/></argument_list><argument_list pos:line="77" pos:column="76">(<argument><expr><call><name><name pos:line="77" pos:column="77">node<pos:position pos:line="77" pos:column="81"/></name><operator pos:line="77" pos:column="81">-&gt;<pos:position pos:line="77" pos:column="86"/></operator><name pos:line="77" pos:column="83">data<pos:position pos:line="77" pos:column="87"/></name><operator pos:line="77" pos:column="87">.<pos:position pos:line="77" pos:column="88"/></operator><name pos:line="77" pos:column="88">getRaw<pos:position pos:line="77" pos:column="94"/></name></name><argument_list pos:line="77" pos:column="94">()<pos:position pos:line="77" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="77" pos:column="97"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="77" pos:column="98"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="78" pos:column="9">assert<pos:position pos:line="78" pos:column="15"/></name> <argument_list pos:line="78" pos:column="16">(<argument><expr><name pos:line="78" pos:column="17">repContext<pos:position pos:line="78" pos:column="27"/></name></expr></argument>)<pos:position pos:line="78" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="78" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="79" pos:column="9">repContext<pos:position pos:line="79" pos:column="19"/></name><operator pos:line="79" pos:column="19">-&gt;<pos:position pos:line="79" pos:column="24"/></operator><name pos:line="79" pos:column="21">setReplyToError<pos:position pos:line="79" pos:column="36"/></name></name><argument_list pos:line="79" pos:column="36">(<argument><expr><name pos:line="79" pos:column="37">ERR_UNSUP_REQ<pos:position pos:line="79" pos:column="50"/></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="52">Http<pos:position pos:line="79" pos:column="56"/></name><operator pos:line="79" pos:column="56">::<pos:position pos:line="79" pos:column="58"/></operator><name pos:line="79" pos:column="58">scNotImplemented<pos:position pos:line="79" pos:column="74"/></name></name></expr></argument>, <argument><expr><name><name pos:line="79" pos:column="76">request<pos:position pos:line="79" pos:column="83"/></name><operator pos:line="79" pos:column="83">-&gt;<pos:position pos:line="79" pos:column="88"/></operator><name pos:line="79" pos:column="85">method<pos:position pos:line="79" pos:column="91"/></name></name></expr></argument>, <argument><expr><name pos:line="79" pos:column="93">NULL<pos:position pos:line="79" pos:column="97"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="80" pos:column="37">conn<pos:position pos:line="80" pos:column="41"/></name><operator pos:line="80" pos:column="41">-&gt;<pos:position pos:line="80" pos:column="46"/></operator><name pos:line="80" pos:column="43">clientConnection<pos:position pos:line="80" pos:column="59"/></name><operator pos:line="80" pos:column="59">-&gt;<pos:position pos:line="80" pos:column="64"/></operator><name pos:line="80" pos:column="61">remote<pos:position pos:line="80" pos:column="67"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="80" pos:column="69">request<pos:position pos:line="80" pos:column="76"/></name><operator pos:line="80" pos:column="76">.<pos:position pos:line="80" pos:column="77"/></operator><name pos:line="80" pos:column="77">getRaw<pos:position pos:line="80" pos:column="83"/></name></name><argument_list pos:line="80" pos:column="83">()<pos:position pos:line="80" pos:column="85"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="80" pos:column="87">NULL<pos:position pos:line="80" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="80" pos:column="93">NULL<pos:position pos:line="80" pos:column="97"/></name></expr></argument>)<pos:position pos:line="80" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="99"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="81" pos:column="9">assert<pos:position pos:line="81" pos:column="15"/></name><argument_list pos:line="81" pos:column="15">(<argument><expr><name><name pos:line="81" pos:column="16">context<pos:position pos:line="81" pos:column="23"/></name><operator pos:line="81" pos:column="23">-&gt;<pos:position pos:line="81" pos:column="28"/></operator><name pos:line="81" pos:column="25">http<pos:position pos:line="81" pos:column="29"/></name><operator pos:line="81" pos:column="29">-&gt;<pos:position pos:line="81" pos:column="34"/></operator><name pos:line="81" pos:column="31">out<pos:position pos:line="81" pos:column="34"/></name><operator pos:line="81" pos:column="34">.<pos:position pos:line="81" pos:column="35"/></operator><name pos:line="81" pos:column="35">offset<pos:position pos:line="81" pos:column="41"/></name></name> <operator pos:line="81" pos:column="42">==<pos:position pos:line="81" pos:column="44"/></operator> <literal type="number" pos:line="81" pos:column="45">0<pos:position pos:line="81" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="81" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="81" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="82" pos:column="9">context<pos:position pos:line="82" pos:column="16"/></name><operator pos:line="82" pos:column="16">-&gt;<pos:position pos:line="82" pos:column="21"/></operator><name pos:line="82" pos:column="18">pullData<pos:position pos:line="82" pos:column="26"/></name></name><argument_list pos:line="82" pos:column="26">()<pos:position pos:line="82" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="82" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="83" pos:column="9">clientProcessRequestFinished<pos:position pos:line="83" pos:column="37"/></name><argument_list pos:line="83" pos:column="37">(<argument><expr><name pos:line="83" pos:column="38">conn<pos:position pos:line="83" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="44">request<pos:position pos:line="83" pos:column="51"/></name></expr></argument>)<pos:position pos:line="83" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="83" pos:column="53"/></expr_stmt>
        <return pos:line="84" pos:column="9">return;<pos:position pos:line="84" pos:column="16"/></return>
    }<pos:position pos:line="85" pos:column="6"/></block></then></if>

    <if pos:line="87" pos:column="5">if <condition pos:line="87" pos:column="8">(<expr><operator pos:line="87" pos:column="9">!<pos:position pos:line="87" pos:column="10"/></operator><name pos:line="87" pos:column="10">chunked<pos:position pos:line="87" pos:column="17"/></name> <operator pos:line="87" pos:column="18">&amp;&amp;<pos:position pos:line="87" pos:column="28"/></operator> <operator pos:line="87" pos:column="21">!<pos:position pos:line="87" pos:column="22"/></operator><call><name pos:line="87" pos:column="22">clientIsContentLengthValid<pos:position pos:line="87" pos:column="48"/></name><argument_list pos:line="87" pos:column="48">(<argument><expr><call><name><name pos:line="87" pos:column="49">request<pos:position pos:line="87" pos:column="56"/></name><operator pos:line="87" pos:column="56">.<pos:position pos:line="87" pos:column="57"/></operator><name pos:line="87" pos:column="57">getRaw<pos:position pos:line="87" pos:column="63"/></name></name><argument_list pos:line="87" pos:column="63">()<pos:position pos:line="87" pos:column="65"/></argument_list></call></expr></argument>)<pos:position pos:line="87" pos:column="66"/></argument_list></call></expr>)<pos:position pos:line="87" pos:column="67"/></condition><then pos:line="87" pos:column="67"> <block pos:line="87" pos:column="68">{
        <decl_stmt><decl><type><name pos:line="88" pos:column="9">clientStreamNode<pos:position pos:line="88" pos:column="25"/></name> <modifier pos:line="88" pos:column="26">*<pos:position pos:line="88" pos:column="27"/></modifier></type><name pos:line="88" pos:column="27">node<pos:position pos:line="88" pos:column="31"/></name> <init pos:line="88" pos:column="32">= <expr><call><name><name pos:line="88" pos:column="34">context<pos:position pos:line="88" pos:column="41"/></name><operator pos:line="88" pos:column="41">-&gt;<pos:position pos:line="88" pos:column="46"/></operator><name pos:line="88" pos:column="43">getClientReplyContext<pos:position pos:line="88" pos:column="64"/></name></name><argument_list pos:line="88" pos:column="64">()<pos:position pos:line="88" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="88" pos:column="67"/></decl_stmt>
        <decl_stmt><decl><type><name pos:line="89" pos:column="9">clientReplyContext<pos:position pos:line="89" pos:column="27"/></name> <modifier pos:line="89" pos:column="28">*<pos:position pos:line="89" pos:column="29"/></modifier></type><name pos:line="89" pos:column="29">repContext<pos:position pos:line="89" pos:column="39"/></name> <init pos:line="89" pos:column="40">= <expr><cast type="dynamic" pos:line="89" pos:column="42">dynamic_cast<argument_list type="generic" pos:line="89" pos:column="54">&lt;<argument><expr><name pos:line="89" pos:column="55">clientReplyContext<pos:position pos:line="89" pos:column="73"/></name> <operator pos:line="89" pos:column="74">*<pos:position pos:line="89" pos:column="75"/></operator></expr></argument>&gt;<pos:position pos:line="89" pos:column="79"/></argument_list><argument_list pos:line="89" pos:column="76">(<argument><expr><call><name><name pos:line="89" pos:column="77">node<pos:position pos:line="89" pos:column="81"/></name><operator pos:line="89" pos:column="81">-&gt;<pos:position pos:line="89" pos:column="86"/></operator><name pos:line="89" pos:column="83">data<pos:position pos:line="89" pos:column="87"/></name><operator pos:line="89" pos:column="87">.<pos:position pos:line="89" pos:column="88"/></operator><name pos:line="89" pos:column="88">getRaw<pos:position pos:line="89" pos:column="94"/></name></name><argument_list pos:line="89" pos:column="94">()<pos:position pos:line="89" pos:column="96"/></argument_list></call></expr></argument>)<pos:position pos:line="89" pos:column="97"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="89" pos:column="98"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="90" pos:column="9">assert<pos:position pos:line="90" pos:column="15"/></name> <argument_list pos:line="90" pos:column="16">(<argument><expr><name pos:line="90" pos:column="17">repContext<pos:position pos:line="90" pos:column="27"/></name></expr></argument>)<pos:position pos:line="90" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="90" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="91" pos:column="9">conn<pos:position pos:line="91" pos:column="13"/></name><operator pos:line="91" pos:column="13">-&gt;<pos:position pos:line="91" pos:column="18"/></operator><name pos:line="91" pos:column="15">quitAfterError<pos:position pos:line="91" pos:column="29"/></name></name><argument_list pos:line="91" pos:column="29">(<argument><expr><call><name><name pos:line="91" pos:column="30">request<pos:position pos:line="91" pos:column="37"/></name><operator pos:line="91" pos:column="37">.<pos:position pos:line="91" pos:column="38"/></operator><name pos:line="91" pos:column="38">getRaw<pos:position pos:line="91" pos:column="44"/></name></name><argument_list pos:line="91" pos:column="44">()<pos:position pos:line="91" pos:column="46"/></argument_list></call></expr></argument>)<pos:position pos:line="91" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="91" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="92" pos:column="9">repContext<pos:position pos:line="92" pos:column="19"/></name><operator pos:line="92" pos:column="19">-&gt;<pos:position pos:line="92" pos:column="24"/></operator><name pos:line="92" pos:column="21">setReplyToError<pos:position pos:line="92" pos:column="36"/></name></name><argument_list pos:line="92" pos:column="36">(<argument><expr><name pos:line="92" pos:column="37">ERR_INVALID_REQ<pos:position pos:line="92" pos:column="52"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="93" pos:column="37">Http<pos:position pos:line="93" pos:column="41"/></name><operator pos:line="93" pos:column="41">::<pos:position pos:line="93" pos:column="43"/></operator><name pos:line="93" pos:column="43">scLengthRequired<pos:position pos:line="93" pos:column="59"/></name></name></expr></argument>, <argument><expr><name><name pos:line="93" pos:column="61">request<pos:position pos:line="93" pos:column="68"/></name><operator pos:line="93" pos:column="68">-&gt;<pos:position pos:line="93" pos:column="73"/></operator><name pos:line="93" pos:column="70">method<pos:position pos:line="93" pos:column="76"/></name></name></expr></argument>, <argument><expr><name pos:line="93" pos:column="78">NULL<pos:position pos:line="93" pos:column="82"/></name></expr></argument>,
                                    <argument><expr><name><name pos:line="94" pos:column="37">conn<pos:position pos:line="94" pos:column="41"/></name><operator pos:line="94" pos:column="41">-&gt;<pos:position pos:line="94" pos:column="46"/></operator><name pos:line="94" pos:column="43">clientConnection<pos:position pos:line="94" pos:column="59"/></name><operator pos:line="94" pos:column="59">-&gt;<pos:position pos:line="94" pos:column="64"/></operator><name pos:line="94" pos:column="61">remote<pos:position pos:line="94" pos:column="67"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="94" pos:column="69">request<pos:position pos:line="94" pos:column="76"/></name><operator pos:line="94" pos:column="76">.<pos:position pos:line="94" pos:column="77"/></operator><name pos:line="94" pos:column="77">getRaw<pos:position pos:line="94" pos:column="83"/></name></name><argument_list pos:line="94" pos:column="83">()<pos:position pos:line="94" pos:column="85"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="94" pos:column="87">NULL<pos:position pos:line="94" pos:column="91"/></name></expr></argument>, <argument><expr><name pos:line="94" pos:column="93">NULL<pos:position pos:line="94" pos:column="97"/></name></expr></argument>)<pos:position pos:line="94" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="94" pos:column="99"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="95" pos:column="9">assert<pos:position pos:line="95" pos:column="15"/></name><argument_list pos:line="95" pos:column="15">(<argument><expr><name><name pos:line="95" pos:column="16">context<pos:position pos:line="95" pos:column="23"/></name><operator pos:line="95" pos:column="23">-&gt;<pos:position pos:line="95" pos:column="28"/></operator><name pos:line="95" pos:column="25">http<pos:position pos:line="95" pos:column="29"/></name><operator pos:line="95" pos:column="29">-&gt;<pos:position pos:line="95" pos:column="34"/></operator><name pos:line="95" pos:column="31">out<pos:position pos:line="95" pos:column="34"/></name><operator pos:line="95" pos:column="34">.<pos:position pos:line="95" pos:column="35"/></operator><name pos:line="95" pos:column="35">offset<pos:position pos:line="95" pos:column="41"/></name></name> <operator pos:line="95" pos:column="42">==<pos:position pos:line="95" pos:column="44"/></operator> <literal type="number" pos:line="95" pos:column="45">0<pos:position pos:line="95" pos:column="46"/></literal></expr></argument>)<pos:position pos:line="95" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="95" pos:column="48"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="96" pos:column="9">context<pos:position pos:line="96" pos:column="16"/></name><operator pos:line="96" pos:column="16">-&gt;<pos:position pos:line="96" pos:column="21"/></operator><name pos:line="96" pos:column="18">pullData<pos:position pos:line="96" pos:column="26"/></name></name><argument_list pos:line="96" pos:column="26">()<pos:position pos:line="96" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="96" pos:column="29"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="97" pos:column="9">clientProcessRequestFinished<pos:position pos:line="97" pos:column="37"/></name><argument_list pos:line="97" pos:column="37">(<argument><expr><name pos:line="97" pos:column="38">conn<pos:position pos:line="97" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="97" pos:column="44">request<pos:position pos:line="97" pos:column="51"/></name></expr></argument>)<pos:position pos:line="97" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="97" pos:column="53"/></expr_stmt>
        <return pos:line="98" pos:column="9">return;<pos:position pos:line="98" pos:column="16"/></return>
    }<pos:position pos:line="99" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="101" pos:column="5">clientSetKeepaliveFlag<pos:position pos:line="101" pos:column="27"/></name><argument_list pos:line="101" pos:column="27">(<argument><expr><name pos:line="101" pos:column="28">http<pos:position pos:line="101" pos:column="32"/></name></expr></argument>)<pos:position pos:line="101" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="101" pos:column="34"/></expr_stmt>
    <comment type="line" pos:line="102" pos:column="5">// Let tunneling code be fully responsible for CONNECT requests</comment>
    <if pos:line="103" pos:column="5">if <condition pos:line="103" pos:column="8">(<expr><name><name pos:line="103" pos:column="9">http<pos:position pos:line="103" pos:column="13"/></name><operator pos:line="103" pos:column="13">-&gt;<pos:position pos:line="103" pos:column="18"/></operator><name pos:line="103" pos:column="15">request<pos:position pos:line="103" pos:column="22"/></name><operator pos:line="103" pos:column="22">-&gt;<pos:position pos:line="103" pos:column="27"/></operator><name pos:line="103" pos:column="24">method<pos:position pos:line="103" pos:column="30"/></name></name> <operator pos:line="103" pos:column="31">==<pos:position pos:line="103" pos:column="33"/></operator> <name><name pos:line="103" pos:column="34">Http<pos:position pos:line="103" pos:column="38"/></name><operator pos:line="103" pos:column="38">::<pos:position pos:line="103" pos:column="40"/></operator><name pos:line="103" pos:column="40">METHOD_CONNECT<pos:position pos:line="103" pos:column="54"/></name></name></expr>)<pos:position pos:line="103" pos:column="55"/></condition><then pos:line="103" pos:column="55"> <block pos:line="103" pos:column="56">{
        <expr_stmt><expr><call><name><name pos:line="104" pos:column="9">context<pos:position pos:line="104" pos:column="16"/></name><operator pos:line="104" pos:column="16">-&gt;<pos:position pos:line="104" pos:column="21"/></operator><name pos:line="104" pos:column="18">mayUseConnection<pos:position pos:line="104" pos:column="34"/></name></name><argument_list pos:line="104" pos:column="34">(<argument><expr><literal type="boolean" pos:line="104" pos:column="35">true<pos:position pos:line="104" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="104" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="104" pos:column="41"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="105" pos:column="9">conn<pos:position pos:line="105" pos:column="13"/></name><operator pos:line="105" pos:column="13">-&gt;<pos:position pos:line="105" pos:column="18"/></operator><name pos:line="105" pos:column="15">flags<pos:position pos:line="105" pos:column="20"/></name><operator pos:line="105" pos:column="20">.<pos:position pos:line="105" pos:column="21"/></operator><name pos:line="105" pos:column="21">readMore<pos:position pos:line="105" pos:column="29"/></name></name> <operator pos:line="105" pos:column="30">=<pos:position pos:line="105" pos:column="31"/></operator> <literal type="boolean" pos:line="105" pos:column="32">false<pos:position pos:line="105" pos:column="37"/></literal></expr>;<pos:position pos:line="105" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="106" pos:column="6"/></block></then></if>

<cpp:if pos:line="108" pos:column="1">#<cpp:directive pos:line="108" pos:column="2">if<pos:position pos:line="108" pos:column="4"/></cpp:directive> <expr><name pos:line="108" pos:column="5">USE_OPENSSL<pos:position pos:line="108" pos:column="16"/></name></expr></cpp:if>
    <if pos:line="109" pos:column="5">if <condition pos:line="109" pos:column="8">(<expr><call><name><name pos:line="109" pos:column="9">conn<pos:position pos:line="109" pos:column="13"/></name><operator pos:line="109" pos:column="13">-&gt;<pos:position pos:line="109" pos:column="18"/></operator><name pos:line="109" pos:column="15">switchedToHttps<pos:position pos:line="109" pos:column="30"/></name></name><argument_list pos:line="109" pos:column="30">()<pos:position pos:line="109" pos:column="32"/></argument_list></call> <operator pos:line="109" pos:column="33">&amp;&amp;<pos:position pos:line="109" pos:column="43"/></operator> <call><name><name pos:line="109" pos:column="36">conn<pos:position pos:line="109" pos:column="40"/></name><operator pos:line="109" pos:column="40">-&gt;<pos:position pos:line="109" pos:column="45"/></operator><name pos:line="109" pos:column="42">serveDelayedError<pos:position pos:line="109" pos:column="59"/></name></name><argument_list pos:line="109" pos:column="59">(<argument><expr><name pos:line="109" pos:column="60">context<pos:position pos:line="109" pos:column="67"/></name></expr></argument>)<pos:position pos:line="109" pos:column="68"/></argument_list></call></expr>)<pos:position pos:line="109" pos:column="69"/></condition><then pos:line="109" pos:column="69"> <block pos:line="109" pos:column="70">{
        <expr_stmt><expr><call><name pos:line="110" pos:column="9">clientProcessRequestFinished<pos:position pos:line="110" pos:column="37"/></name><argument_list pos:line="110" pos:column="37">(<argument><expr><name pos:line="110" pos:column="38">conn<pos:position pos:line="110" pos:column="42"/></name></expr></argument>, <argument><expr><name pos:line="110" pos:column="44">request<pos:position pos:line="110" pos:column="51"/></name></expr></argument>)<pos:position pos:line="110" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="53"/></expr_stmt>
        <return pos:line="111" pos:column="9">return;<pos:position pos:line="111" pos:column="16"/></return>
    }<pos:position pos:line="112" pos:column="6"/></block></then></if>
<cpp:endif pos:line="113" pos:column="1">#<cpp:directive pos:line="113" pos:column="2">endif<pos:position pos:line="113" pos:column="7"/></cpp:directive></cpp:endif>

    <comment type="block" pos:line="115" pos:column="5">/* Do we expect a request-body? */</comment>
    <expr_stmt><expr><name pos:line="116" pos:column="5">expectBody<pos:position pos:line="116" pos:column="15"/></name> <operator pos:line="116" pos:column="16">=<pos:position pos:line="116" pos:column="17"/></operator> <name pos:line="116" pos:column="18">chunked<pos:position pos:line="116" pos:column="25"/></name> <operator pos:line="116" pos:column="26">||<pos:position pos:line="116" pos:column="28"/></operator> <name><name pos:line="116" pos:column="29">request<pos:position pos:line="116" pos:column="36"/></name><operator pos:line="116" pos:column="36">-&gt;<pos:position pos:line="116" pos:column="41"/></operator><name pos:line="116" pos:column="38">content_length<pos:position pos:line="116" pos:column="52"/></name></name> <operator pos:line="116" pos:column="53">&gt;<pos:position pos:line="116" pos:column="57"/></operator> <literal type="number" pos:line="116" pos:column="55">0<pos:position pos:line="116" pos:column="56"/></literal></expr>;<pos:position pos:line="116" pos:column="57"/></expr_stmt>
    <if pos:line="117" pos:column="5">if <condition pos:line="117" pos:column="8">(<expr><operator pos:line="117" pos:column="9">!<pos:position pos:line="117" pos:column="10"/></operator><call><name><name pos:line="117" pos:column="10">context<pos:position pos:line="117" pos:column="17"/></name><operator pos:line="117" pos:column="17">-&gt;<pos:position pos:line="117" pos:column="22"/></operator><name pos:line="117" pos:column="19">mayUseConnection<pos:position pos:line="117" pos:column="35"/></name></name><argument_list pos:line="117" pos:column="35">()<pos:position pos:line="117" pos:column="37"/></argument_list></call> <operator pos:line="117" pos:column="38">&amp;&amp;<pos:position pos:line="117" pos:column="48"/></operator> <name pos:line="117" pos:column="41">expectBody<pos:position pos:line="117" pos:column="51"/></name></expr>)<pos:position pos:line="117" pos:column="52"/></condition><then pos:line="117" pos:column="52"> <block pos:line="117" pos:column="53">{
        <expr_stmt><expr><name><name pos:line="118" pos:column="9">request<pos:position pos:line="118" pos:column="16"/></name><operator pos:line="118" pos:column="16">-&gt;<pos:position pos:line="118" pos:column="21"/></operator><name pos:line="118" pos:column="18">body_pipe<pos:position pos:line="118" pos:column="27"/></name></name> <operator pos:line="118" pos:column="28">=<pos:position pos:line="118" pos:column="29"/></operator> <call><name><name pos:line="118" pos:column="30">conn<pos:position pos:line="118" pos:column="34"/></name><operator pos:line="118" pos:column="34">-&gt;<pos:position pos:line="118" pos:column="39"/></operator><name pos:line="118" pos:column="36">expectRequestBody<pos:position pos:line="118" pos:column="53"/></name></name><argument_list pos:line="118" pos:column="53">(
                                 <argument><expr><ternary><condition><expr><name pos:line="119" pos:column="34">chunked<pos:position pos:line="119" pos:column="41"/></name></expr> ?<pos:position pos:line="119" pos:column="43"/></condition><then pos:line="119" pos:column="43"> <expr><operator pos:line="119" pos:column="44">-<pos:position pos:line="119" pos:column="45"/></operator><literal type="number" pos:line="119" pos:column="45">1<pos:position pos:line="119" pos:column="46"/></literal></expr> <pos:position pos:line="119" pos:column="47"/></then><else pos:line="119" pos:column="47">: <expr><name><name pos:line="119" pos:column="49">request<pos:position pos:line="119" pos:column="56"/></name><operator pos:line="119" pos:column="56">-&gt;<pos:position pos:line="119" pos:column="61"/></operator><name pos:line="119" pos:column="58">content_length<pos:position pos:line="119" pos:column="72"/></name></name></expr></else></ternary></expr></argument>)<pos:position pos:line="119" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="119" pos:column="74"/></expr_stmt>

        <comment type="block" pos:line="121" pos:column="9">/* Is it too large? */</comment>
        <if pos:line="122" pos:column="9">if <condition pos:line="122" pos:column="12">(<expr><operator pos:line="122" pos:column="13">!<pos:position pos:line="122" pos:column="14"/></operator><name pos:line="122" pos:column="14">chunked<pos:position pos:line="122" pos:column="21"/></name> <operator pos:line="122" pos:column="22">&amp;&amp;<pos:position pos:line="122" pos:column="32"/></operator> <comment type="line" pos:line="122" pos:column="25">// if chunked, we will check as we accumulate</comment>
                <call><name pos:line="123" pos:column="17">clientIsRequestBodyTooLargeForPolicy<pos:position pos:line="123" pos:column="53"/></name><argument_list pos:line="123" pos:column="53">(<argument><expr><name><name pos:line="123" pos:column="54">request<pos:position pos:line="123" pos:column="61"/></name><operator pos:line="123" pos:column="61">-&gt;<pos:position pos:line="123" pos:column="66"/></operator><name pos:line="123" pos:column="63">content_length<pos:position pos:line="123" pos:column="77"/></name></name></expr></argument>)<pos:position pos:line="123" pos:column="78"/></argument_list></call></expr>)<pos:position pos:line="123" pos:column="79"/></condition><then pos:line="123" pos:column="79"> <block pos:line="123" pos:column="80">{
            <decl_stmt><decl><type><name pos:line="124" pos:column="13">clientStreamNode<pos:position pos:line="124" pos:column="29"/></name> <modifier pos:line="124" pos:column="30">*<pos:position pos:line="124" pos:column="31"/></modifier></type><name pos:line="124" pos:column="31">node<pos:position pos:line="124" pos:column="35"/></name> <init pos:line="124" pos:column="36">= <expr><call><name><name pos:line="124" pos:column="38">context<pos:position pos:line="124" pos:column="45"/></name><operator pos:line="124" pos:column="45">-&gt;<pos:position pos:line="124" pos:column="50"/></operator><name pos:line="124" pos:column="47">getClientReplyContext<pos:position pos:line="124" pos:column="68"/></name></name><argument_list pos:line="124" pos:column="68">()<pos:position pos:line="124" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="124" pos:column="71"/></decl_stmt>
            <decl_stmt><decl><type><name pos:line="125" pos:column="13">clientReplyContext<pos:position pos:line="125" pos:column="31"/></name> <modifier pos:line="125" pos:column="32">*<pos:position pos:line="125" pos:column="33"/></modifier></type><name pos:line="125" pos:column="33">repContext<pos:position pos:line="125" pos:column="43"/></name> <init pos:line="125" pos:column="44">= <expr><cast type="dynamic" pos:line="125" pos:column="46">dynamic_cast<argument_list type="generic" pos:line="125" pos:column="58">&lt;<argument><expr><name pos:line="125" pos:column="59">clientReplyContext<pos:position pos:line="125" pos:column="77"/></name> <operator pos:line="125" pos:column="78">*<pos:position pos:line="125" pos:column="79"/></operator></expr></argument>&gt;<pos:position pos:line="125" pos:column="83"/></argument_list><argument_list pos:line="125" pos:column="80">(<argument><expr><call><name><name pos:line="125" pos:column="81">node<pos:position pos:line="125" pos:column="85"/></name><operator pos:line="125" pos:column="85">-&gt;<pos:position pos:line="125" pos:column="90"/></operator><name pos:line="125" pos:column="87">data<pos:position pos:line="125" pos:column="91"/></name><operator pos:line="125" pos:column="91">.<pos:position pos:line="125" pos:column="92"/></operator><name pos:line="125" pos:column="92">getRaw<pos:position pos:line="125" pos:column="98"/></name></name><argument_list pos:line="125" pos:column="98">()<pos:position pos:line="125" pos:column="100"/></argument_list></call></expr></argument>)<pos:position pos:line="125" pos:column="101"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="125" pos:column="102"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="126" pos:column="13">assert<pos:position pos:line="126" pos:column="19"/></name> <argument_list pos:line="126" pos:column="20">(<argument><expr><name pos:line="126" pos:column="21">repContext<pos:position pos:line="126" pos:column="31"/></name></expr></argument>)<pos:position pos:line="126" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="126" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="127" pos:column="13">conn<pos:position pos:line="127" pos:column="17"/></name><operator pos:line="127" pos:column="17">-&gt;<pos:position pos:line="127" pos:column="22"/></operator><name pos:line="127" pos:column="19">quitAfterError<pos:position pos:line="127" pos:column="33"/></name></name><argument_list pos:line="127" pos:column="33">(<argument><expr><call><name><name pos:line="127" pos:column="34">request<pos:position pos:line="127" pos:column="41"/></name><operator pos:line="127" pos:column="41">.<pos:position pos:line="127" pos:column="42"/></operator><name pos:line="127" pos:column="42">getRaw<pos:position pos:line="127" pos:column="48"/></name></name><argument_list pos:line="127" pos:column="48">()<pos:position pos:line="127" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="127" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="127" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="128" pos:column="13">repContext<pos:position pos:line="128" pos:column="23"/></name><operator pos:line="128" pos:column="23">-&gt;<pos:position pos:line="128" pos:column="28"/></operator><name pos:line="128" pos:column="25">setReplyToError<pos:position pos:line="128" pos:column="40"/></name></name><argument_list pos:line="128" pos:column="40">(<argument><expr><name pos:line="128" pos:column="41">ERR_TOO_BIG<pos:position pos:line="128" pos:column="52"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="129" pos:column="41">Http<pos:position pos:line="129" pos:column="45"/></name><operator pos:line="129" pos:column="45">::<pos:position pos:line="129" pos:column="47"/></operator><name pos:line="129" pos:column="47">scPayloadTooLarge<pos:position pos:line="129" pos:column="64"/></name></name></expr></argument>, <argument><expr><name><name pos:line="129" pos:column="66">Http<pos:position pos:line="129" pos:column="70"/></name><operator pos:line="129" pos:column="70">::<pos:position pos:line="129" pos:column="72"/></operator><name pos:line="129" pos:column="72">METHOD_NONE<pos:position pos:line="129" pos:column="83"/></name></name></expr></argument>, <argument><expr><name pos:line="129" pos:column="85">NULL<pos:position pos:line="129" pos:column="89"/></name></expr></argument>,
                                        <argument><expr><name><name pos:line="130" pos:column="41">conn<pos:position pos:line="130" pos:column="45"/></name><operator pos:line="130" pos:column="45">-&gt;<pos:position pos:line="130" pos:column="50"/></operator><name pos:line="130" pos:column="47">clientConnection<pos:position pos:line="130" pos:column="63"/></name><operator pos:line="130" pos:column="63">-&gt;<pos:position pos:line="130" pos:column="68"/></operator><name pos:line="130" pos:column="65">remote<pos:position pos:line="130" pos:column="71"/></name></name></expr></argument>, <argument><expr><name><name pos:line="130" pos:column="73">http<pos:position pos:line="130" pos:column="77"/></name><operator pos:line="130" pos:column="77">-&gt;<pos:position pos:line="130" pos:column="82"/></operator><name pos:line="130" pos:column="79">request<pos:position pos:line="130" pos:column="86"/></name></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="88">NULL<pos:position pos:line="130" pos:column="92"/></name></expr></argument>, <argument><expr><name pos:line="130" pos:column="94">NULL<pos:position pos:line="130" pos:column="98"/></name></expr></argument>)<pos:position pos:line="130" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="130" pos:column="100"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="131" pos:column="13">assert<pos:position pos:line="131" pos:column="19"/></name><argument_list pos:line="131" pos:column="19">(<argument><expr><name><name pos:line="131" pos:column="20">context<pos:position pos:line="131" pos:column="27"/></name><operator pos:line="131" pos:column="27">-&gt;<pos:position pos:line="131" pos:column="32"/></operator><name pos:line="131" pos:column="29">http<pos:position pos:line="131" pos:column="33"/></name><operator pos:line="131" pos:column="33">-&gt;<pos:position pos:line="131" pos:column="38"/></operator><name pos:line="131" pos:column="35">out<pos:position pos:line="131" pos:column="38"/></name><operator pos:line="131" pos:column="38">.<pos:position pos:line="131" pos:column="39"/></operator><name pos:line="131" pos:column="39">offset<pos:position pos:line="131" pos:column="45"/></name></name> <operator pos:line="131" pos:column="46">==<pos:position pos:line="131" pos:column="48"/></operator> <literal type="number" pos:line="131" pos:column="49">0<pos:position pos:line="131" pos:column="50"/></literal></expr></argument>)<pos:position pos:line="131" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="131" pos:column="52"/></expr_stmt>
            <expr_stmt><expr><call><name><name pos:line="132" pos:column="13">context<pos:position pos:line="132" pos:column="20"/></name><operator pos:line="132" pos:column="20">-&gt;<pos:position pos:line="132" pos:column="25"/></operator><name pos:line="132" pos:column="22">pullData<pos:position pos:line="132" pos:column="30"/></name></name><argument_list pos:line="132" pos:column="30">()<pos:position pos:line="132" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="132" pos:column="33"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="133" pos:column="13">clientProcessRequestFinished<pos:position pos:line="133" pos:column="41"/></name><argument_list pos:line="133" pos:column="41">(<argument><expr><name pos:line="133" pos:column="42">conn<pos:position pos:line="133" pos:column="46"/></name></expr></argument>, <argument><expr><name pos:line="133" pos:column="48">request<pos:position pos:line="133" pos:column="55"/></name></expr></argument>)<pos:position pos:line="133" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="133" pos:column="57"/></expr_stmt>
            <return pos:line="134" pos:column="13">return;<pos:position pos:line="134" pos:column="20"/></return>
        }<pos:position pos:line="135" pos:column="10"/></block></then></if>

        <if pos:line="137" pos:column="9">if <condition pos:line="137" pos:column="12">(<expr><operator pos:line="137" pos:column="13">!<pos:position pos:line="137" pos:column="14"/></operator><name pos:line="137" pos:column="14">isFtp<pos:position pos:line="137" pos:column="19"/></name></expr>)<pos:position pos:line="137" pos:column="20"/></condition><then pos:line="137" pos:column="20"> <block pos:line="137" pos:column="21">{
            <comment type="line" pos:line="138" pos:column="13">// We may stop producing, comm_close, and/or call setReplyToError()</comment>
            <comment type="line" pos:line="139" pos:column="13">// below, so quit on errors to avoid http-&gt;doCallouts()</comment>
            <if pos:line="140" pos:column="13">if <condition pos:line="140" pos:column="16">(<expr><operator pos:line="140" pos:column="17">!<pos:position pos:line="140" pos:column="18"/></operator><call><name><name pos:line="140" pos:column="18">conn<pos:position pos:line="140" pos:column="22"/></name><operator pos:line="140" pos:column="22">-&gt;<pos:position pos:line="140" pos:column="27"/></operator><name pos:line="140" pos:column="24">handleRequestBodyData<pos:position pos:line="140" pos:column="45"/></name></name><argument_list pos:line="140" pos:column="45">()<pos:position pos:line="140" pos:column="47"/></argument_list></call></expr>)<pos:position pos:line="140" pos:column="48"/></condition><then pos:line="140" pos:column="48"> <block pos:line="140" pos:column="49">{
                <expr_stmt><expr><call><name pos:line="141" pos:column="17">clientProcessRequestFinished<pos:position pos:line="141" pos:column="45"/></name><argument_list pos:line="141" pos:column="45">(<argument><expr><name pos:line="141" pos:column="46">conn<pos:position pos:line="141" pos:column="50"/></name></expr></argument>, <argument><expr><name pos:line="141" pos:column="52">request<pos:position pos:line="141" pos:column="59"/></name></expr></argument>)<pos:position pos:line="141" pos:column="60"/></argument_list></call></expr>;<pos:position pos:line="141" pos:column="61"/></expr_stmt>
                <return pos:line="142" pos:column="17">return;<pos:position pos:line="142" pos:column="24"/></return>
            }<pos:position pos:line="143" pos:column="14"/></block></then></if>

            <if pos:line="145" pos:column="13">if <condition pos:line="145" pos:column="16">(<expr><operator pos:line="145" pos:column="17">!<pos:position pos:line="145" pos:column="18"/></operator><call><name><name pos:line="145" pos:column="18">request<pos:position pos:line="145" pos:column="25"/></name><operator pos:line="145" pos:column="25">-&gt;<pos:position pos:line="145" pos:column="30"/></operator><name pos:line="145" pos:column="27">body_pipe<pos:position pos:line="145" pos:column="36"/></name><operator pos:line="145" pos:column="36">-&gt;<pos:position pos:line="145" pos:column="41"/></operator><name pos:line="145" pos:column="38">productionEnded<pos:position pos:line="145" pos:column="53"/></name></name><argument_list pos:line="145" pos:column="53">()<pos:position pos:line="145" pos:column="55"/></argument_list></call></expr>)<pos:position pos:line="145" pos:column="56"/></condition><then pos:line="145" pos:column="56"> <block pos:line="145" pos:column="57">{
                <expr_stmt><expr><call><name pos:line="146" pos:column="17">debugs<pos:position pos:line="146" pos:column="23"/></name><argument_list pos:line="146" pos:column="23">(<argument><expr><literal type="number" pos:line="146" pos:column="24">33<pos:position pos:line="146" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="146" pos:column="28">5<pos:position pos:line="146" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="146" pos:column="31">"need more request body"<pos:position pos:line="146" pos:column="55"/></literal></expr></argument>)<pos:position pos:line="146" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="146" pos:column="57"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="147" pos:column="17">context<pos:position pos:line="147" pos:column="24"/></name><operator pos:line="147" pos:column="24">-&gt;<pos:position pos:line="147" pos:column="29"/></operator><name pos:line="147" pos:column="26">mayUseConnection<pos:position pos:line="147" pos:column="42"/></name></name><argument_list pos:line="147" pos:column="42">(<argument><expr><literal type="boolean" pos:line="147" pos:column="43">true<pos:position pos:line="147" pos:column="47"/></literal></expr></argument>)<pos:position pos:line="147" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="147" pos:column="49"/></expr_stmt>
                <expr_stmt><expr><call><name pos:line="148" pos:column="17">assert<pos:position pos:line="148" pos:column="23"/></name><argument_list pos:line="148" pos:column="23">(<argument><expr><name><name pos:line="148" pos:column="24">conn<pos:position pos:line="148" pos:column="28"/></name><operator pos:line="148" pos:column="28">-&gt;<pos:position pos:line="148" pos:column="33"/></operator><name pos:line="148" pos:column="30">flags<pos:position pos:line="148" pos:column="35"/></name><operator pos:line="148" pos:column="35">.<pos:position pos:line="148" pos:column="36"/></operator><name pos:line="148" pos:column="36">readMore<pos:position pos:line="148" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="148" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="148" pos:column="46"/></expr_stmt>
            }<pos:position pos:line="149" pos:column="14"/></block></then></if>
        }<pos:position pos:line="150" pos:column="10"/></block></then></if>
    }<pos:position pos:line="151" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="153" pos:column="5">http<pos:position pos:line="153" pos:column="9"/></name><operator pos:line="153" pos:column="9">-&gt;<pos:position pos:line="153" pos:column="14"/></operator><name pos:line="153" pos:column="11">calloutContext<pos:position pos:line="153" pos:column="25"/></name></name> <operator pos:line="153" pos:column="26">=<pos:position pos:line="153" pos:column="27"/></operator> <operator pos:line="153" pos:column="28">new<pos:position pos:line="153" pos:column="31"/></operator> <call><name pos:line="153" pos:column="32">ClientRequestContext<pos:position pos:line="153" pos:column="52"/></name><argument_list pos:line="153" pos:column="52">(<argument><expr><name pos:line="153" pos:column="53">http<pos:position pos:line="153" pos:column="57"/></name></expr></argument>)<pos:position pos:line="153" pos:column="58"/></argument_list></call></expr>;<pos:position pos:line="153" pos:column="59"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="155" pos:column="5">http<pos:position pos:line="155" pos:column="9"/></name><operator pos:line="155" pos:column="9">-&gt;<pos:position pos:line="155" pos:column="14"/></operator><name pos:line="155" pos:column="11">doCallouts<pos:position pos:line="155" pos:column="21"/></name></name><argument_list pos:line="155" pos:column="21">()<pos:position pos:line="155" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="155" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="157" pos:column="5">clientProcessRequestFinished<pos:position pos:line="157" pos:column="33"/></name><argument_list pos:line="157" pos:column="33">(<argument><expr><name pos:line="157" pos:column="34">conn<pos:position pos:line="157" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="157" pos:column="40">request<pos:position pos:line="157" pos:column="47"/></name></expr></argument>)<pos:position pos:line="157" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="157" pos:column="49"/></expr_stmt>
}<pos:position pos:line="158" pos:column="2"/></block></function></unit>

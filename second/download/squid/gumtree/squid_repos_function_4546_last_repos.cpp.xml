<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4546_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">allocate_new_swapdir<pos:position pos:line="2" pos:column="21"/></name><parameter_list pos:line="2" pos:column="21">(<parameter><decl><type><name><name pos:line="2" pos:column="22">Store<pos:position pos:line="2" pos:column="27"/></name><operator pos:line="2" pos:column="27">::<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="29">DiskConfig<pos:position pos:line="2" pos:column="39"/></name></name> <modifier pos:line="2" pos:column="40">*<pos:position pos:line="2" pos:column="41"/></modifier></type><name pos:line="2" pos:column="41">swap<pos:position pos:line="2" pos:column="45"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="46"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name><name pos:line="4" pos:column="9">swap<pos:position pos:line="4" pos:column="13"/></name><operator pos:line="4" pos:column="13">-&gt;<pos:position pos:line="4" pos:column="18"/></operator><name pos:line="4" pos:column="15">swapDirs<pos:position pos:line="4" pos:column="23"/></name></name> <operator pos:line="4" pos:column="24">==<pos:position pos:line="4" pos:column="26"/></operator> <name pos:line="4" pos:column="27">NULL<pos:position pos:line="4" pos:column="31"/></name></expr>)<pos:position pos:line="4" pos:column="32"/></condition><then pos:line="4" pos:column="32"> <block pos:line="4" pos:column="33">{
        <expr_stmt><expr><name><name pos:line="5" pos:column="9">swap<pos:position pos:line="5" pos:column="13"/></name><operator pos:line="5" pos:column="13">-&gt;<pos:position pos:line="5" pos:column="18"/></operator><name pos:line="5" pos:column="15">n_allocated<pos:position pos:line="5" pos:column="26"/></name></name> <operator pos:line="5" pos:column="27">=<pos:position pos:line="5" pos:column="28"/></operator> <literal type="number" pos:line="5" pos:column="29">4<pos:position pos:line="5" pos:column="30"/></literal></expr>;<pos:position pos:line="5" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="6" pos:column="9">swap<pos:position pos:line="6" pos:column="13"/></name><operator pos:line="6" pos:column="13">-&gt;<pos:position pos:line="6" pos:column="18"/></operator><name pos:line="6" pos:column="15">swapDirs<pos:position pos:line="6" pos:column="23"/></name></name> <operator pos:line="6" pos:column="24">=<pos:position pos:line="6" pos:column="25"/></operator> <cast type="static" pos:line="6" pos:column="26">static_cast<argument_list type="generic" pos:line="6" pos:column="37">&lt;<argument><expr><name><name pos:line="6" pos:column="38">SwapDir<pos:position pos:line="6" pos:column="45"/></name><operator pos:line="6" pos:column="45">::<pos:position pos:line="6" pos:column="47"/></operator><name pos:line="6" pos:column="47">Pointer<pos:position pos:line="6" pos:column="54"/></name></name> <operator pos:line="6" pos:column="55">*<pos:position pos:line="6" pos:column="56"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="60"/></argument_list><argument_list pos:line="6" pos:column="57">(<argument><expr><call><name pos:line="6" pos:column="58">xcalloc<pos:position pos:line="6" pos:column="65"/></name><argument_list pos:line="6" pos:column="65">(<argument><expr><name><name pos:line="6" pos:column="66">swap<pos:position pos:line="6" pos:column="70"/></name><operator pos:line="6" pos:column="70">-&gt;<pos:position pos:line="6" pos:column="75"/></operator><name pos:line="6" pos:column="72">n_allocated<pos:position pos:line="6" pos:column="83"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="6" pos:column="85">sizeof<argument_list pos:line="6" pos:column="91">(<argument><expr><name><name pos:line="6" pos:column="92">SwapDir<pos:position pos:line="6" pos:column="99"/></name><operator pos:line="6" pos:column="99">::<pos:position pos:line="6" pos:column="101"/></operator><name pos:line="6" pos:column="101">Pointer<pos:position pos:line="6" pos:column="108"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="109"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="6" pos:column="110"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="111"/></argument_list></cast></expr>;<pos:position pos:line="6" pos:column="112"/></expr_stmt>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">swap<pos:position pos:line="9" pos:column="13"/></name><operator pos:line="9" pos:column="13">-&gt;<pos:position pos:line="9" pos:column="18"/></operator><name pos:line="9" pos:column="15">n_allocated<pos:position pos:line="9" pos:column="26"/></name></name> <operator pos:line="9" pos:column="27">==<pos:position pos:line="9" pos:column="29"/></operator> <name><name pos:line="9" pos:column="30">swap<pos:position pos:line="9" pos:column="34"/></name><operator pos:line="9" pos:column="34">-&gt;<pos:position pos:line="9" pos:column="39"/></operator><name pos:line="9" pos:column="36">n_configured<pos:position pos:line="9" pos:column="48"/></name></name></expr>)<pos:position pos:line="9" pos:column="49"/></condition><then pos:line="9" pos:column="49"> <block pos:line="9" pos:column="50">{
        <expr_stmt><expr><name><name pos:line="10" pos:column="9">swap<pos:position pos:line="10" pos:column="13"/></name><operator pos:line="10" pos:column="13">-&gt;<pos:position pos:line="10" pos:column="18"/></operator><name pos:line="10" pos:column="15">n_allocated<pos:position pos:line="10" pos:column="26"/></name></name> <operator pos:line="10" pos:column="27">&lt;&lt;=<pos:position pos:line="10" pos:column="36"/></operator> <literal type="number" pos:line="10" pos:column="31">1<pos:position pos:line="10" pos:column="32"/></literal></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
        <decl_stmt><decl><type><name><name pos:line="11" pos:column="9">SwapDir<pos:position pos:line="11" pos:column="16"/></name><operator pos:line="11" pos:column="16">::<pos:position pos:line="11" pos:column="18"/></operator><name pos:line="11" pos:column="18">Pointer<pos:position pos:line="11" pos:column="25"/></name></name> <modifier pos:line="11" pos:column="26">*<pos:position pos:line="11" pos:column="27"/></modifier><specifier pos:line="11" pos:column="27">const<pos:position pos:line="11" pos:column="32"/></specifier></type> <name pos:line="11" pos:column="33">tmp<pos:position pos:line="11" pos:column="36"/></name> <init pos:line="11" pos:column="37">= <expr><cast type="static" pos:line="11" pos:column="39">static_cast<argument_list type="generic" pos:line="11" pos:column="50">&lt;<argument><expr><name><name pos:line="11" pos:column="51">SwapDir<pos:position pos:line="11" pos:column="58"/></name><operator pos:line="11" pos:column="58">::<pos:position pos:line="11" pos:column="60"/></operator><name pos:line="11" pos:column="60">Pointer<pos:position pos:line="11" pos:column="67"/></name></name> <operator pos:line="11" pos:column="68">*<pos:position pos:line="11" pos:column="69"/></operator></expr></argument>&gt;<pos:position pos:line="11" pos:column="73"/></argument_list><argument_list pos:line="11" pos:column="70">(<argument><expr><call><name pos:line="11" pos:column="71">xcalloc<pos:position pos:line="11" pos:column="78"/></name><argument_list pos:line="11" pos:column="78">(<argument><expr><name><name pos:line="11" pos:column="79">swap<pos:position pos:line="11" pos:column="83"/></name><operator pos:line="11" pos:column="83">-&gt;<pos:position pos:line="11" pos:column="88"/></operator><name pos:line="11" pos:column="85">n_allocated<pos:position pos:line="11" pos:column="96"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="11" pos:column="98">sizeof<argument_list pos:line="11" pos:column="104">(<argument><expr><name><name pos:line="11" pos:column="105">SwapDir<pos:position pos:line="11" pos:column="112"/></name><operator pos:line="11" pos:column="112">::<pos:position pos:line="11" pos:column="114"/></operator><name pos:line="11" pos:column="114">Pointer<pos:position pos:line="11" pos:column="121"/></name></name></expr></argument>)<pos:position pos:line="11" pos:column="122"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="11" pos:column="123"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="124"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="11" pos:column="125"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">memcpy<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><name pos:line="12" pos:column="16">tmp<pos:position pos:line="12" pos:column="19"/></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="21">swap<pos:position pos:line="12" pos:column="25"/></name><operator pos:line="12" pos:column="25">-&gt;<pos:position pos:line="12" pos:column="30"/></operator><name pos:line="12" pos:column="27">swapDirs<pos:position pos:line="12" pos:column="35"/></name></name></expr></argument>, <argument><expr><name><name pos:line="12" pos:column="37">swap<pos:position pos:line="12" pos:column="41"/></name><operator pos:line="12" pos:column="41">-&gt;<pos:position pos:line="12" pos:column="46"/></operator><name pos:line="12" pos:column="43">n_configured<pos:position pos:line="12" pos:column="55"/></name></name> <operator pos:line="12" pos:column="56">*<pos:position pos:line="12" pos:column="57"/></operator> <sizeof pos:line="12" pos:column="58">sizeof<argument_list pos:line="12" pos:column="64">(<argument><expr><name pos:line="12" pos:column="65">SwapDir<pos:position pos:line="12" pos:column="72"/></name> <operator pos:line="12" pos:column="73">*<pos:position pos:line="12" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="12" pos:column="75"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="12" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="77"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="13" pos:column="9">xfree<pos:position pos:line="13" pos:column="14"/></name><argument_list pos:line="13" pos:column="14">(<argument><expr><name><name pos:line="13" pos:column="15">swap<pos:position pos:line="13" pos:column="19"/></name><operator pos:line="13" pos:column="19">-&gt;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="21">swapDirs<pos:position pos:line="13" pos:column="29"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="14" pos:column="9">swap<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">swapDirs<pos:position pos:line="14" pos:column="23"/></name></name> <operator pos:line="14" pos:column="24">=<pos:position pos:line="14" pos:column="25"/></operator> <name pos:line="14" pos:column="26">tmp<pos:position pos:line="14" pos:column="29"/></name></expr>;<pos:position pos:line="14" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="15" pos:column="6"/></block></then></if>
}<pos:position pos:line="16" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1134_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Downloader<pos:position pos:line="2" pos:column="11"/></name><operator pos:line="2" pos:column="11">::<pos:position pos:line="2" pos:column="13"/></operator><name pos:line="2" pos:column="13">handleReply<pos:position pos:line="2" pos:column="24"/></name></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">clientStreamNode<pos:position pos:line="2" pos:column="41"/></name> <modifier pos:line="2" pos:column="42">*<pos:position pos:line="2" pos:column="43"/></modifier></type> <name pos:line="2" pos:column="44">node<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">ClientHttpRequest<pos:position pos:line="2" pos:column="67"/></name> <modifier pos:line="2" pos:column="68">*<pos:position pos:line="2" pos:column="69"/></modifier></type><name pos:line="2" pos:column="69">http<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="75">HttpReply<pos:position pos:line="2" pos:column="84"/></name> <modifier pos:line="2" pos:column="85">*<pos:position pos:line="2" pos:column="86"/></modifier></type><name pos:line="2" pos:column="86">reply<pos:position pos:line="2" pos:column="91"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="93">StoreIOBuffer<pos:position pos:line="2" pos:column="106"/></name></type> <name pos:line="2" pos:column="107">receivedData<pos:position pos:line="2" pos:column="119"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="120"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name><name pos:line="4" pos:column="5">DownloaderContext<pos:position pos:line="4" pos:column="22"/></name><operator pos:line="4" pos:column="22">::<pos:position pos:line="4" pos:column="24"/></operator><name pos:line="4" pos:column="24">Pointer<pos:position pos:line="4" pos:column="31"/></name></name></type> <name pos:line="4" pos:column="32">callerContext<pos:position pos:line="4" pos:column="45"/></name> <init pos:line="4" pos:column="46">= <expr><cast type="dynamic" pos:line="4" pos:column="48">dynamic_cast<argument_list type="generic" pos:line="4" pos:column="60">&lt;<argument><expr><name pos:line="4" pos:column="61">DownloaderContext<pos:position pos:line="4" pos:column="78"/></name> <operator pos:line="4" pos:column="79">*<pos:position pos:line="4" pos:column="80"/></operator></expr></argument>&gt;<pos:position pos:line="4" pos:column="84"/></argument_list><argument_list pos:line="4" pos:column="81">(<argument><expr><call><name><name pos:line="4" pos:column="82">node<pos:position pos:line="4" pos:column="86"/></name><operator pos:line="4" pos:column="86">-&gt;<pos:position pos:line="4" pos:column="91"/></operator><name pos:line="4" pos:column="88">data<pos:position pos:line="4" pos:column="92"/></name><operator pos:line="4" pos:column="92">.<pos:position pos:line="4" pos:column="93"/></operator><name pos:line="4" pos:column="93">getRaw<pos:position pos:line="4" pos:column="99"/></name></name><argument_list pos:line="4" pos:column="99">()<pos:position pos:line="4" pos:column="101"/></argument_list></call></expr></argument>)<pos:position pos:line="4" pos:column="102"/></argument_list></cast></expr></init></decl>;<pos:position pos:line="4" pos:column="103"/></decl_stmt>
    <comment type="line" pos:line="5" pos:column="5">// TODO: remove the following check:</comment>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">assert<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><name pos:line="6" pos:column="12">callerContext<pos:position pos:line="6" pos:column="25"/></name> <operator pos:line="6" pos:column="26">==<pos:position pos:line="6" pos:column="28"/></operator> <name pos:line="6" pos:column="29">context_<pos:position pos:line="6" pos:column="37"/></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="8" pos:column="5">debugs<pos:position pos:line="8" pos:column="11"/></name><argument_list pos:line="8" pos:column="11">(<argument><expr><literal type="number" pos:line="8" pos:column="12">33<pos:position pos:line="8" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="16">4<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="19">"Received "<pos:position pos:line="8" pos:column="30"/></literal> <operator pos:line="8" pos:column="31">&lt;&lt;<pos:position pos:line="8" pos:column="39"/></operator> <name><name pos:line="8" pos:column="34">receivedData<pos:position pos:line="8" pos:column="46"/></name><operator pos:line="8" pos:column="46">.<pos:position pos:line="8" pos:column="47"/></operator><name pos:line="8" pos:column="47">length<pos:position pos:line="8" pos:column="53"/></name></name> <operator pos:line="8" pos:column="54">&lt;&lt;<pos:position pos:line="8" pos:column="62"/></operator>
           <literal type="string" pos:line="9" pos:column="12">" object data, offset: "<pos:position pos:line="9" pos:column="36"/></literal> <operator pos:line="9" pos:column="37">&lt;&lt;<pos:position pos:line="9" pos:column="45"/></operator> <name><name pos:line="9" pos:column="40">receivedData<pos:position pos:line="9" pos:column="52"/></name><operator pos:line="9" pos:column="52">.<pos:position pos:line="9" pos:column="53"/></operator><name pos:line="9" pos:column="53">offset<pos:position pos:line="9" pos:column="59"/></name></name> <operator pos:line="9" pos:column="60">&lt;&lt;<pos:position pos:line="9" pos:column="68"/></operator>
           <literal type="string" pos:line="10" pos:column="12">" error flag:"<pos:position pos:line="10" pos:column="26"/></literal> <operator pos:line="10" pos:column="27">&lt;&lt;<pos:position pos:line="10" pos:column="35"/></operator> <name><name pos:line="10" pos:column="30">receivedData<pos:position pos:line="10" pos:column="42"/></name><operator pos:line="10" pos:column="42">.<pos:position pos:line="10" pos:column="43"/></operator><name pos:line="10" pos:column="43">flags<pos:position pos:line="10" pos:column="48"/></name><operator pos:line="10" pos:column="48">.<pos:position pos:line="10" pos:column="49"/></operator><name pos:line="10" pos:column="49">error<pos:position pos:line="10" pos:column="54"/></name></name></expr></argument>)<pos:position pos:line="10" pos:column="55"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="56"/></expr_stmt>

    <decl_stmt><decl><type><specifier pos:line="12" pos:column="5">const<pos:position pos:line="12" pos:column="10"/></specifier> <name pos:line="12" pos:column="11">bool<pos:position pos:line="12" pos:column="15"/></name></type> <name pos:line="12" pos:column="16">failed<pos:position pos:line="12" pos:column="22"/></name> <init pos:line="12" pos:column="23">= <expr><name><name pos:line="12" pos:column="25">receivedData<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">.<pos:position pos:line="12" pos:column="38"/></operator><name pos:line="12" pos:column="38">flags<pos:position pos:line="12" pos:column="43"/></name><operator pos:line="12" pos:column="43">.<pos:position pos:line="12" pos:column="44"/></operator><name pos:line="12" pos:column="44">error<pos:position pos:line="12" pos:column="49"/></name></name></expr></init></decl>;<pos:position pos:line="12" pos:column="50"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">(<expr><name pos:line="13" pos:column="9">failed<pos:position pos:line="13" pos:column="15"/></name></expr>)<pos:position pos:line="13" pos:column="16"/></condition><then pos:line="13" pos:column="16"> <block pos:line="13" pos:column="17">{
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">callBack<pos:position pos:line="14" pos:column="17"/></name><argument_list pos:line="14" pos:column="17">(<argument><expr><name><name pos:line="14" pos:column="18">Http<pos:position pos:line="14" pos:column="22"/></name><operator pos:line="14" pos:column="22">::<pos:position pos:line="14" pos:column="24"/></operator><name pos:line="14" pos:column="24">scInternalServerError<pos:position pos:line="14" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="14" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="47"/></expr_stmt>
        <return pos:line="15" pos:column="9">return;<pos:position pos:line="15" pos:column="16"/></return>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="18" pos:column="5">const<pos:position pos:line="18" pos:column="10"/></specifier> <name pos:line="18" pos:column="11">int64_t<pos:position pos:line="18" pos:column="18"/></name></type> <name pos:line="18" pos:column="19">existingContent<pos:position pos:line="18" pos:column="34"/></name> <init pos:line="18" pos:column="35">= <expr><ternary><condition><expr><name pos:line="18" pos:column="37">reply<pos:position pos:line="18" pos:column="42"/></name></expr> ?<pos:position pos:line="18" pos:column="44"/></condition><then pos:line="18" pos:column="44"> <expr><name><name pos:line="18" pos:column="45">reply<pos:position pos:line="18" pos:column="50"/></name><operator pos:line="18" pos:column="50">-&gt;<pos:position pos:line="18" pos:column="55"/></operator><name pos:line="18" pos:column="52">content_length<pos:position pos:line="18" pos:column="66"/></name></name></expr> <pos:position pos:line="18" pos:column="67"/></then><else pos:line="18" pos:column="67">: <expr><literal type="number" pos:line="18" pos:column="69">0<pos:position pos:line="18" pos:column="70"/></literal></expr></else></ternary></expr></init></decl>;<pos:position pos:line="18" pos:column="71"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="19" pos:column="5">const<pos:position pos:line="19" pos:column="10"/></specifier> <name pos:line="19" pos:column="11">size_t<pos:position pos:line="19" pos:column="17"/></name></type> <name pos:line="19" pos:column="18">maxSize<pos:position pos:line="19" pos:column="25"/></name> <init pos:line="19" pos:column="26">= <expr><ternary><condition><expr><name pos:line="19" pos:column="28">MaxObjectSize<pos:position pos:line="19" pos:column="41"/></name> <operator pos:line="19" pos:column="42">&gt;<pos:position pos:line="19" pos:column="46"/></operator> <name><name pos:line="19" pos:column="44">SBuf<pos:position pos:line="19" pos:column="48"/></name><operator pos:line="19" pos:column="48">::<pos:position pos:line="19" pos:column="50"/></operator><name pos:line="19" pos:column="50">maxSize<pos:position pos:line="19" pos:column="57"/></name></name></expr> ?<pos:position pos:line="19" pos:column="59"/></condition><then pos:line="19" pos:column="59"> <expr><name><name pos:line="19" pos:column="60">SBuf<pos:position pos:line="19" pos:column="64"/></name><operator pos:line="19" pos:column="64">::<pos:position pos:line="19" pos:column="66"/></operator><name pos:line="19" pos:column="66">maxSize<pos:position pos:line="19" pos:column="73"/></name></name></expr> <pos:position pos:line="19" pos:column="74"/></then><else pos:line="19" pos:column="74">: <expr><name pos:line="19" pos:column="76">MaxObjectSize<pos:position pos:line="19" pos:column="89"/></name></expr></else></ternary></expr></init></decl>;<pos:position pos:line="19" pos:column="90"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="20" pos:column="5">const<pos:position pos:line="20" pos:column="10"/></specifier> <name pos:line="20" pos:column="11">bool<pos:position pos:line="20" pos:column="15"/></name></type> <name pos:line="20" pos:column="16">tooLarge<pos:position pos:line="20" pos:column="24"/></name> <init pos:line="20" pos:column="25">= <expr><operator pos:line="20" pos:column="27">(<pos:position pos:line="20" pos:column="28"/></operator><name pos:line="20" pos:column="28">existingContent<pos:position pos:line="20" pos:column="43"/></name> <operator pos:line="20" pos:column="44">&gt;<pos:position pos:line="20" pos:column="48"/></operator> <operator pos:line="20" pos:column="46">-<pos:position pos:line="20" pos:column="47"/></operator><literal type="number" pos:line="20" pos:column="47">1<pos:position pos:line="20" pos:column="48"/></literal> <operator pos:line="20" pos:column="49">&amp;&amp;<pos:position pos:line="20" pos:column="59"/></operator> <name pos:line="20" pos:column="52">existingContent<pos:position pos:line="20" pos:column="67"/></name> <operator pos:line="20" pos:column="68">&gt;<pos:position pos:line="20" pos:column="72"/></operator> <cast type="static" pos:line="20" pos:column="70">static_cast<argument_list type="generic" pos:line="20" pos:column="81">&lt;<argument><expr><name pos:line="20" pos:column="82">int64_t<pos:position pos:line="20" pos:column="89"/></name></expr></argument>&gt;<pos:position pos:line="20" pos:column="93"/></argument_list><argument_list pos:line="20" pos:column="90">(<argument><expr><name pos:line="20" pos:column="91">maxSize<pos:position pos:line="20" pos:column="98"/></name></expr></argument>)<pos:position pos:line="20" pos:column="99"/></argument_list></cast><operator pos:line="20" pos:column="99">)<pos:position pos:line="20" pos:column="100"/></operator> <operator pos:line="20" pos:column="101">||<pos:position pos:line="20" pos:column="103"/></operator>
                          <operator pos:line="21" pos:column="27">(<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="28">maxSize<pos:position pos:line="21" pos:column="35"/></name> <operator pos:line="21" pos:column="36">&lt;<pos:position pos:line="21" pos:column="40"/></operator> <call><name><name pos:line="21" pos:column="38">object_<pos:position pos:line="21" pos:column="45"/></name><operator pos:line="21" pos:column="45">.<pos:position pos:line="21" pos:column="46"/></operator><name pos:line="21" pos:column="46">length<pos:position pos:line="21" pos:column="52"/></name></name><argument_list pos:line="21" pos:column="52">()<pos:position pos:line="21" pos:column="54"/></argument_list></call><operator pos:line="21" pos:column="54">)<pos:position pos:line="21" pos:column="55"/></operator> <operator pos:line="21" pos:column="56">||<pos:position pos:line="21" pos:column="58"/></operator>
                          <operator pos:line="22" pos:column="27">(<pos:position pos:line="22" pos:column="28"/></operator><operator pos:line="22" pos:column="28">(<pos:position pos:line="22" pos:column="29"/></operator><name pos:line="22" pos:column="29">maxSize<pos:position pos:line="22" pos:column="36"/></name> <operator pos:line="22" pos:column="37">-<pos:position pos:line="22" pos:column="38"/></operator> <call><name><name pos:line="22" pos:column="39">object_<pos:position pos:line="22" pos:column="46"/></name><operator pos:line="22" pos:column="46">.<pos:position pos:line="22" pos:column="47"/></operator><name pos:line="22" pos:column="47">length<pos:position pos:line="22" pos:column="53"/></name></name><argument_list pos:line="22" pos:column="53">()<pos:position pos:line="22" pos:column="55"/></argument_list></call><operator pos:line="22" pos:column="55">)<pos:position pos:line="22" pos:column="56"/></operator> <operator pos:line="22" pos:column="57">&lt;<pos:position pos:line="22" pos:column="61"/></operator> <name><name pos:line="22" pos:column="59">receivedData<pos:position pos:line="22" pos:column="71"/></name><operator pos:line="22" pos:column="71">.<pos:position pos:line="22" pos:column="72"/></operator><name pos:line="22" pos:column="72">length<pos:position pos:line="22" pos:column="78"/></name></name><operator pos:line="22" pos:column="78">)<pos:position pos:line="22" pos:column="79"/></operator></expr></init></decl>;<pos:position pos:line="22" pos:column="80"/></decl_stmt>

    <if pos:line="24" pos:column="5">if <condition pos:line="24" pos:column="8">(<expr><name pos:line="24" pos:column="9">tooLarge<pos:position pos:line="24" pos:column="17"/></name></expr>)<pos:position pos:line="24" pos:column="18"/></condition><then pos:line="24" pos:column="18"> <block pos:line="24" pos:column="19">{
        <expr_stmt><expr><call><name pos:line="25" pos:column="9">callBack<pos:position pos:line="25" pos:column="17"/></name><argument_list pos:line="25" pos:column="17">(<argument><expr><name><name pos:line="25" pos:column="18">Http<pos:position pos:line="25" pos:column="22"/></name><operator pos:line="25" pos:column="22">::<pos:position pos:line="25" pos:column="24"/></operator><name pos:line="25" pos:column="24">scInternalServerError<pos:position pos:line="25" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="47"/></expr_stmt>
        <return pos:line="26" pos:column="9">return;<pos:position pos:line="26" pos:column="16"/></return>
    }<pos:position pos:line="27" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="29" pos:column="5">object_<pos:position pos:line="29" pos:column="12"/></name><operator pos:line="29" pos:column="12">.<pos:position pos:line="29" pos:column="13"/></operator><name pos:line="29" pos:column="13">append<pos:position pos:line="29" pos:column="19"/></name></name><argument_list pos:line="29" pos:column="19">(<argument><expr><name><name pos:line="29" pos:column="20">receivedData<pos:position pos:line="29" pos:column="32"/></name><operator pos:line="29" pos:column="32">.<pos:position pos:line="29" pos:column="33"/></operator><name pos:line="29" pos:column="33">data<pos:position pos:line="29" pos:column="37"/></name></name></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="39">receivedData<pos:position pos:line="29" pos:column="51"/></name><operator pos:line="29" pos:column="51">.<pos:position pos:line="29" pos:column="52"/></operator><name pos:line="29" pos:column="52">length<pos:position pos:line="29" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="29" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="60"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">http<pos:position pos:line="30" pos:column="9"/></name><operator pos:line="30" pos:column="9">-&gt;<pos:position pos:line="30" pos:column="14"/></operator><name pos:line="30" pos:column="11">out<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">.<pos:position pos:line="30" pos:column="15"/></operator><name pos:line="30" pos:column="15">size<pos:position pos:line="30" pos:column="19"/></name></name> <operator pos:line="30" pos:column="20">+=<pos:position pos:line="30" pos:column="22"/></operator> <name><name pos:line="30" pos:column="23">receivedData<pos:position pos:line="30" pos:column="35"/></name><operator pos:line="30" pos:column="35">.<pos:position pos:line="30" pos:column="36"/></operator><name pos:line="30" pos:column="36">length<pos:position pos:line="30" pos:column="42"/></name></name></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">http<pos:position pos:line="31" pos:column="9"/></name><operator pos:line="31" pos:column="9">-&gt;<pos:position pos:line="31" pos:column="14"/></operator><name pos:line="31" pos:column="11">out<pos:position pos:line="31" pos:column="14"/></name><operator pos:line="31" pos:column="14">.<pos:position pos:line="31" pos:column="15"/></operator><name pos:line="31" pos:column="15">offset<pos:position pos:line="31" pos:column="21"/></name></name> <operator pos:line="31" pos:column="22">+=<pos:position pos:line="31" pos:column="24"/></operator> <name><name pos:line="31" pos:column="25">receivedData<pos:position pos:line="31" pos:column="37"/></name><operator pos:line="31" pos:column="37">.<pos:position pos:line="31" pos:column="38"/></operator><name pos:line="31" pos:column="38">length<pos:position pos:line="31" pos:column="44"/></name></name></expr>;<pos:position pos:line="31" pos:column="45"/></expr_stmt>

    <switch pos:line="33" pos:column="5">switch <condition pos:line="33" pos:column="12">(<expr><call><name pos:line="33" pos:column="13">clientStreamStatus<pos:position pos:line="33" pos:column="31"/></name><argument_list pos:line="33" pos:column="31">(<argument><expr><name pos:line="33" pos:column="32">node<pos:position pos:line="33" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="33" pos:column="38">http<pos:position pos:line="33" pos:column="42"/></name></expr></argument>)<pos:position pos:line="33" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="33" pos:column="44"/></condition> <block pos:line="33" pos:column="45">{
    <case pos:line="34" pos:column="5">case <expr><name pos:line="34" pos:column="10">STREAM_NONE<pos:position pos:line="34" pos:column="21"/></name></expr>:<pos:position pos:line="34" pos:column="22"/></case> <block pos:line="34" pos:column="23">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">debugs<pos:position pos:line="35" pos:column="15"/></name><argument_list pos:line="35" pos:column="15">(<argument><expr><literal type="number" pos:line="35" pos:column="16">33<pos:position pos:line="35" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="35" pos:column="20">3<pos:position pos:line="35" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="35" pos:column="23">"Get more data"<pos:position pos:line="35" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="35" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="40"/></expr_stmt>
        <decl_stmt><decl><type><name pos:line="36" pos:column="9">StoreIOBuffer<pos:position pos:line="36" pos:column="22"/></name></type> <name pos:line="36" pos:column="23">tempBuffer<pos:position pos:line="36" pos:column="33"/></name></decl>;<pos:position pos:line="36" pos:column="34"/></decl_stmt>
        <expr_stmt><expr><name><name pos:line="37" pos:column="9">tempBuffer<pos:position pos:line="37" pos:column="19"/></name><operator pos:line="37" pos:column="19">.<pos:position pos:line="37" pos:column="20"/></operator><name pos:line="37" pos:column="20">offset<pos:position pos:line="37" pos:column="26"/></name></name> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <name><name pos:line="37" pos:column="29">http<pos:position pos:line="37" pos:column="33"/></name><operator pos:line="37" pos:column="33">-&gt;<pos:position pos:line="37" pos:column="38"/></operator><name pos:line="37" pos:column="35">out<pos:position pos:line="37" pos:column="38"/></name><operator pos:line="37" pos:column="38">.<pos:position pos:line="37" pos:column="39"/></operator><name pos:line="37" pos:column="39">offset<pos:position pos:line="37" pos:column="45"/></name></name></expr>;<pos:position pos:line="37" pos:column="46"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="38" pos:column="9">tempBuffer<pos:position pos:line="38" pos:column="19"/></name><operator pos:line="38" pos:column="19">.<pos:position pos:line="38" pos:column="20"/></operator><name pos:line="38" pos:column="20">data<pos:position pos:line="38" pos:column="24"/></name></name> <operator pos:line="38" pos:column="25">=<pos:position pos:line="38" pos:column="26"/></operator> <name><name pos:line="38" pos:column="27">context_<pos:position pos:line="38" pos:column="35"/></name><operator pos:line="38" pos:column="35">-&gt;<pos:position pos:line="38" pos:column="40"/></operator><name pos:line="38" pos:column="37">requestBuffer<pos:position pos:line="38" pos:column="50"/></name></name></expr>;<pos:position pos:line="38" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="39" pos:column="9">tempBuffer<pos:position pos:line="39" pos:column="19"/></name><operator pos:line="39" pos:column="19">.<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="20">length<pos:position pos:line="39" pos:column="26"/></name></name> <operator pos:line="39" pos:column="27">=<pos:position pos:line="39" pos:column="28"/></operator> <name pos:line="39" pos:column="29">HTTP_REQBUF_SZ<pos:position pos:line="39" pos:column="43"/></name></expr>;<pos:position pos:line="39" pos:column="44"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="40" pos:column="9">clientStreamRead<pos:position pos:line="40" pos:column="25"/></name><argument_list pos:line="40" pos:column="25">(<argument><expr><name pos:line="40" pos:column="26">node<pos:position pos:line="40" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="32">http<pos:position pos:line="40" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="40" pos:column="38">tempBuffer<pos:position pos:line="40" pos:column="48"/></name></expr></argument>)<pos:position pos:line="40" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="50"/></expr_stmt>
    }<pos:position pos:line="41" pos:column="6"/></block>
    <break pos:line="42" pos:column="5">break;<pos:position pos:line="42" pos:column="11"/></break>
    <case pos:line="43" pos:column="5">case <expr><name pos:line="43" pos:column="10">STREAM_COMPLETE<pos:position pos:line="43" pos:column="25"/></name></expr>:<pos:position pos:line="43" pos:column="26"/></case>
        <expr_stmt><expr><call><name pos:line="44" pos:column="9">debugs<pos:position pos:line="44" pos:column="15"/></name><argument_list pos:line="44" pos:column="15">(<argument><expr><literal type="number" pos:line="44" pos:column="16">33<pos:position pos:line="44" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="44" pos:column="20">3<pos:position pos:line="44" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="44" pos:column="23">"Object data transfer successfully complete"<pos:position pos:line="44" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="44" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="45" pos:column="9">callBack<pos:position pos:line="45" pos:column="17"/></name><argument_list pos:line="45" pos:column="17">(<argument><expr><name><name pos:line="45" pos:column="18">Http<pos:position pos:line="45" pos:column="22"/></name><operator pos:line="45" pos:column="22">::<pos:position pos:line="45" pos:column="24"/></operator><name pos:line="45" pos:column="24">scOkay<pos:position pos:line="45" pos:column="30"/></name></name></expr></argument>)<pos:position pos:line="45" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="32"/></expr_stmt>
        <break pos:line="46" pos:column="9">break;<pos:position pos:line="46" pos:column="15"/></break>
    <case pos:line="47" pos:column="5">case <expr><name pos:line="47" pos:column="10">STREAM_UNPLANNED_COMPLETE<pos:position pos:line="47" pos:column="35"/></name></expr>:<pos:position pos:line="47" pos:column="36"/></case>
        <expr_stmt><expr><call><name pos:line="48" pos:column="9">debugs<pos:position pos:line="48" pos:column="15"/></name><argument_list pos:line="48" pos:column="15">(<argument><expr><literal type="number" pos:line="48" pos:column="16">33<pos:position pos:line="48" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="48" pos:column="20">3<pos:position pos:line="48" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="23">"Object data transfer failed: STREAM_UNPLANNED_COMPLETE"<pos:position pos:line="48" pos:column="79"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="80"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="81"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="49" pos:column="9">callBack<pos:position pos:line="49" pos:column="17"/></name><argument_list pos:line="49" pos:column="17">(<argument><expr><name><name pos:line="49" pos:column="18">Http<pos:position pos:line="49" pos:column="22"/></name><operator pos:line="49" pos:column="22">::<pos:position pos:line="49" pos:column="24"/></operator><name pos:line="49" pos:column="24">scInternalServerError<pos:position pos:line="49" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="49" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="47"/></expr_stmt>
        <break pos:line="50" pos:column="9">break;<pos:position pos:line="50" pos:column="15"/></break>
    <case pos:line="51" pos:column="5">case <expr><name pos:line="51" pos:column="10">STREAM_FAILED<pos:position pos:line="51" pos:column="23"/></name></expr>:<pos:position pos:line="51" pos:column="24"/></case>
        <expr_stmt><expr><call><name pos:line="52" pos:column="9">debugs<pos:position pos:line="52" pos:column="15"/></name><argument_list pos:line="52" pos:column="15">(<argument><expr><literal type="number" pos:line="52" pos:column="16">33<pos:position pos:line="52" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="52" pos:column="20">3<pos:position pos:line="52" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="52" pos:column="23">"Object data transfer failed: STREAM_FAILED"<pos:position pos:line="52" pos:column="67"/></literal></expr></argument>)<pos:position pos:line="52" pos:column="68"/></argument_list></call></expr>;<pos:position pos:line="52" pos:column="69"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="53" pos:column="9">callBack<pos:position pos:line="53" pos:column="17"/></name><argument_list pos:line="53" pos:column="17">(<argument><expr><name><name pos:line="53" pos:column="18">Http<pos:position pos:line="53" pos:column="22"/></name><operator pos:line="53" pos:column="22">::<pos:position pos:line="53" pos:column="24"/></operator><name pos:line="53" pos:column="24">scInternalServerError<pos:position pos:line="53" pos:column="45"/></name></name></expr></argument>)<pos:position pos:line="53" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="53" pos:column="47"/></expr_stmt>
        <break pos:line="54" pos:column="9">break;<pos:position pos:line="54" pos:column="15"/></break>
    <default pos:line="55" pos:column="5">default:<pos:position pos:line="55" pos:column="13"/></default>
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">fatal<pos:position pos:line="56" pos:column="14"/></name><argument_list pos:line="56" pos:column="14">(<argument><expr><literal type="string" pos:line="56" pos:column="15">"unreachable code"<pos:position pos:line="56" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="56" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="57" pos:column="6"/></block></switch>
}<pos:position pos:line="58" pos:column="2"/></block></function></unit>

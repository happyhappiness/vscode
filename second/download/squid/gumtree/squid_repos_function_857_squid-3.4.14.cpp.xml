<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_857_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">whoisStart<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">(<parameter><decl><type><name pos:line="2" pos:column="12">FwdState<pos:position pos:line="2" pos:column="20"/></name> <modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type> <name pos:line="2" pos:column="23">fwd<pos:position pos:line="2" pos:column="26"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="27"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">WhoisState<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">p<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">buf<pos:position pos:line="5" pos:column="14"/></name></decl>;<pos:position pos:line="5" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">size_t<pos:position pos:line="6" pos:column="11"/></name></type> <name pos:line="6" pos:column="12">l<pos:position pos:line="6" pos:column="13"/></name></decl>;<pos:position pos:line="6" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">CBDATA_INIT_TYPE<pos:position pos:line="7" pos:column="21"/></name><argument_list pos:line="7" pos:column="21">(<argument><expr><name pos:line="7" pos:column="22">WhoisState<pos:position pos:line="7" pos:column="32"/></name></expr></argument>)<pos:position pos:line="7" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="34"/></expr_stmt>
    <expr_stmt><expr><name pos:line="8" pos:column="5">p<pos:position pos:line="8" pos:column="6"/></name> <operator pos:line="8" pos:column="7">=<pos:position pos:line="8" pos:column="8"/></operator> <call><name pos:line="8" pos:column="9">cbdataAlloc<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">WhoisState<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="9" pos:column="5">p<pos:position pos:line="9" pos:column="6"/></name><operator pos:line="9" pos:column="6">-&gt;<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="8">request<pos:position pos:line="9" pos:column="15"/></name></name> <operator pos:line="9" pos:column="16">=<pos:position pos:line="9" pos:column="17"/></operator> <name><name pos:line="9" pos:column="18">fwd<pos:position pos:line="9" pos:column="21"/></name><operator pos:line="9" pos:column="21">-&gt;<pos:position pos:line="9" pos:column="26"/></operator><name pos:line="9" pos:column="23">request<pos:position pos:line="9" pos:column="30"/></name></name></expr>;<pos:position pos:line="9" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="10" pos:column="5">p<pos:position pos:line="10" pos:column="6"/></name><operator pos:line="10" pos:column="6">-&gt;<pos:position pos:line="10" pos:column="11"/></operator><name pos:line="10" pos:column="8">entry<pos:position pos:line="10" pos:column="13"/></name></name> <operator pos:line="10" pos:column="14">=<pos:position pos:line="10" pos:column="15"/></operator> <name><name pos:line="10" pos:column="16">fwd<pos:position pos:line="10" pos:column="19"/></name><operator pos:line="10" pos:column="19">-&gt;<pos:position pos:line="10" pos:column="24"/></operator><name pos:line="10" pos:column="21">entry<pos:position pos:line="10" pos:column="26"/></name></name></expr>;<pos:position pos:line="10" pos:column="27"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="11" pos:column="5">p<pos:position pos:line="11" pos:column="6"/></name><operator pos:line="11" pos:column="6">-&gt;<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="8">fwd<pos:position pos:line="11" pos:column="11"/></name></name> <operator pos:line="11" pos:column="12">=<pos:position pos:line="11" pos:column="13"/></operator> <name pos:line="11" pos:column="14">fwd<pos:position pos:line="11" pos:column="17"/></name></expr>;<pos:position pos:line="11" pos:column="18"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="12" pos:column="5">p<pos:position pos:line="12" pos:column="6"/></name><operator pos:line="12" pos:column="6">-&gt;<pos:position pos:line="12" pos:column="11"/></operator><name pos:line="12" pos:column="8">dataWritten<pos:position pos:line="12" pos:column="19"/></name></name> <operator pos:line="12" pos:column="20">=<pos:position pos:line="12" pos:column="21"/></operator> <literal type="boolean" pos:line="12" pos:column="22">false<pos:position pos:line="12" pos:column="27"/></literal></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="14" pos:column="5">p<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">entry<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">-&gt;<pos:position pos:line="14" pos:column="18"/></operator><name pos:line="14" pos:column="15">lock<pos:position pos:line="14" pos:column="19"/></name></name><argument_list pos:line="14" pos:column="19">()<pos:position pos:line="14" pos:column="21"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="15" pos:column="5">comm_add_close_handler<pos:position pos:line="15" pos:column="27"/></name><argument_list pos:line="15" pos:column="27">(<argument><expr><call><name><name pos:line="15" pos:column="28">fwd<pos:position pos:line="15" pos:column="31"/></name><operator pos:line="15" pos:column="31">-&gt;<pos:position pos:line="15" pos:column="36"/></operator><name pos:line="15" pos:column="33">serverConnection<pos:position pos:line="15" pos:column="49"/></name></name><argument_list pos:line="15" pos:column="49">()<pos:position pos:line="15" pos:column="51"/></argument_list></call><operator pos:line="15" pos:column="51">-&gt;<pos:position pos:line="15" pos:column="56"/></operator><name pos:line="15" pos:column="53">fd<pos:position pos:line="15" pos:column="55"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="57">whoisClose<pos:position pos:line="15" pos:column="67"/></name></expr></argument>, <argument><expr><name pos:line="15" pos:column="69">p<pos:position pos:line="15" pos:column="70"/></name></expr></argument>)<pos:position pos:line="15" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="72"/></expr_stmt>

    <expr_stmt><expr><name pos:line="17" pos:column="5">l<pos:position pos:line="17" pos:column="6"/></name> <operator pos:line="17" pos:column="7">=<pos:position pos:line="17" pos:column="8"/></operator> <call><name><name pos:line="17" pos:column="9">p<pos:position pos:line="17" pos:column="10"/></name><operator pos:line="17" pos:column="10">-&gt;<pos:position pos:line="17" pos:column="15"/></operator><name pos:line="17" pos:column="12">request<pos:position pos:line="17" pos:column="19"/></name><operator pos:line="17" pos:column="19">-&gt;<pos:position pos:line="17" pos:column="24"/></operator><name pos:line="17" pos:column="21">urlpath<pos:position pos:line="17" pos:column="28"/></name><operator pos:line="17" pos:column="28">.<pos:position pos:line="17" pos:column="29"/></operator><name pos:line="17" pos:column="29">size<pos:position pos:line="17" pos:column="33"/></name></name><argument_list pos:line="17" pos:column="33">()<pos:position pos:line="17" pos:column="35"/></argument_list></call> <operator pos:line="17" pos:column="36">+<pos:position pos:line="17" pos:column="37"/></operator> <literal type="number" pos:line="17" pos:column="38">3<pos:position pos:line="17" pos:column="39"/></literal></expr>;<pos:position pos:line="17" pos:column="40"/></expr_stmt>

    <expr_stmt><expr><name pos:line="19" pos:column="5">buf<pos:position pos:line="19" pos:column="8"/></name> <operator pos:line="19" pos:column="9">=<pos:position pos:line="19" pos:column="10"/></operator> <operator pos:line="19" pos:column="11">(<pos:position pos:line="19" pos:column="12"/></operator><name pos:line="19" pos:column="12">char<pos:position pos:line="19" pos:column="16"/></name> <operator pos:line="19" pos:column="17">*<pos:position pos:line="19" pos:column="18"/></operator><operator pos:line="19" pos:column="18">)<pos:position pos:line="19" pos:column="19"/></operator><call><name pos:line="19" pos:column="19">xmalloc<pos:position pos:line="19" pos:column="26"/></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">l<pos:position pos:line="19" pos:column="28"/></name></expr></argument>)<pos:position pos:line="19" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="30"/></expr_stmt>

    <decl_stmt><decl><type><name pos:line="21" pos:column="5">String<pos:position pos:line="21" pos:column="11"/></name></type> <name pos:line="21" pos:column="12">str_print<pos:position pos:line="21" pos:column="21"/></name><init pos:line="21" pos:column="21">=<expr><call><name><name pos:line="21" pos:column="22">p<pos:position pos:line="21" pos:column="23"/></name><operator pos:line="21" pos:column="23">-&gt;<pos:position pos:line="21" pos:column="28"/></operator><name pos:line="21" pos:column="25">request<pos:position pos:line="21" pos:column="32"/></name><operator pos:line="21" pos:column="32">-&gt;<pos:position pos:line="21" pos:column="37"/></operator><name pos:line="21" pos:column="34">urlpath<pos:position pos:line="21" pos:column="41"/></name><operator pos:line="21" pos:column="41">.<pos:position pos:line="21" pos:column="42"/></operator><name pos:line="21" pos:column="42">substr<pos:position pos:line="21" pos:column="48"/></name></name><argument_list pos:line="21" pos:column="48">(<argument><expr><literal type="number" pos:line="21" pos:column="49">1<pos:position pos:line="21" pos:column="50"/></literal></expr></argument>,<argument><expr><call><name><name pos:line="21" pos:column="51">p<pos:position pos:line="21" pos:column="52"/></name><operator pos:line="21" pos:column="52">-&gt;<pos:position pos:line="21" pos:column="57"/></operator><name pos:line="21" pos:column="54">request<pos:position pos:line="21" pos:column="61"/></name><operator pos:line="21" pos:column="61">-&gt;<pos:position pos:line="21" pos:column="66"/></operator><name pos:line="21" pos:column="63">urlpath<pos:position pos:line="21" pos:column="70"/></name><operator pos:line="21" pos:column="70">.<pos:position pos:line="21" pos:column="71"/></operator><name pos:line="21" pos:column="71">size<pos:position pos:line="21" pos:column="75"/></name></name><argument_list pos:line="21" pos:column="75">()<pos:position pos:line="21" pos:column="77"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="78"/></argument_list></call></expr></init></decl>;<pos:position pos:line="21" pos:column="79"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="22" pos:column="5">snprintf<pos:position pos:line="22" pos:column="13"/></name><argument_list pos:line="22" pos:column="13">(<argument><expr><name pos:line="22" pos:column="14">buf<pos:position pos:line="22" pos:column="17"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="19">l<pos:position pos:line="22" pos:column="20"/></name></expr></argument>, <argument><expr><name pos:line="22" pos:column="22">SQUIDSTRINGPH<pos:position pos:line="22" pos:column="35"/></name><literal type="string" pos:line="22" pos:column="35">"\r\n"<pos:position pos:line="22" pos:column="41"/></literal></expr></argument>, <argument><expr><call><name pos:line="22" pos:column="43">SQUIDSTRINGPRINT<pos:position pos:line="22" pos:column="59"/></name><argument_list pos:line="22" pos:column="59">(<argument><expr><name pos:line="22" pos:column="60">str_print<pos:position pos:line="22" pos:column="69"/></name></expr></argument>)<pos:position pos:line="22" pos:column="70"/></argument_list></call></expr></argument>)<pos:position pos:line="22" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="72"/></expr_stmt>

    <decl_stmt><decl><type><name><name pos:line="24" pos:column="5">AsyncCall<pos:position pos:line="24" pos:column="14"/></name><operator pos:line="24" pos:column="14">::<pos:position pos:line="24" pos:column="16"/></operator><name pos:line="24" pos:column="16">Pointer<pos:position pos:line="24" pos:column="23"/></name></name></type> <name pos:line="24" pos:column="24">writeCall<pos:position pos:line="24" pos:column="33"/></name> <init pos:line="24" pos:column="34">= <expr><call><name pos:line="24" pos:column="36">commCbCall<pos:position pos:line="24" pos:column="46"/></name><argument_list pos:line="24" pos:column="46">(<argument><expr><literal type="number" pos:line="24" pos:column="47">5<pos:position pos:line="24" pos:column="48"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="24" pos:column="49">5<pos:position pos:line="24" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="52">"whoisWriteComplete"<pos:position pos:line="24" pos:column="72"/></literal></expr></argument>,
                                   <argument><expr><call><name pos:line="25" pos:column="36">CommIoCbPtrFun<pos:position pos:line="25" pos:column="50"/></name><argument_list pos:line="25" pos:column="50">(<argument><expr><name pos:line="25" pos:column="51">whoisWriteComplete<pos:position pos:line="25" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="25" pos:column="71">p<pos:position pos:line="25" pos:column="72"/></name></expr></argument>)<pos:position pos:line="25" pos:column="73"/></argument_list></call></expr></argument>)<pos:position pos:line="25" pos:column="74"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="75"/></decl_stmt>
    <expr_stmt><expr><call><name><name pos:line="26" pos:column="5">Comm<pos:position pos:line="26" pos:column="9"/></name><operator pos:line="26" pos:column="9">::<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="11">Write<pos:position pos:line="26" pos:column="16"/></name></name><argument_list pos:line="26" pos:column="16">(<argument><expr><call><name><name pos:line="26" pos:column="17">fwd<pos:position pos:line="26" pos:column="20"/></name><operator pos:line="26" pos:column="20">-&gt;<pos:position pos:line="26" pos:column="25"/></operator><name pos:line="26" pos:column="22">serverConnection<pos:position pos:line="26" pos:column="38"/></name></name><argument_list pos:line="26" pos:column="38">()<pos:position pos:line="26" pos:column="40"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="42">buf<pos:position pos:line="26" pos:column="45"/></name></expr></argument>, <argument><expr><call><name pos:line="26" pos:column="47">strlen<pos:position pos:line="26" pos:column="53"/></name><argument_list pos:line="26" pos:column="53">(<argument><expr><name pos:line="26" pos:column="54">buf<pos:position pos:line="26" pos:column="57"/></name></expr></argument>)<pos:position pos:line="26" pos:column="58"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="26" pos:column="60">writeCall<pos:position pos:line="26" pos:column="69"/></name></expr></argument>, <argument><expr><name pos:line="26" pos:column="71">NULL<pos:position pos:line="26" pos:column="75"/></name></expr></argument>)<pos:position pos:line="26" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="77"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="27" pos:column="5">AsyncCall<pos:position pos:line="27" pos:column="14"/></name><operator pos:line="27" pos:column="14">::<pos:position pos:line="27" pos:column="16"/></operator><name pos:line="27" pos:column="16">Pointer<pos:position pos:line="27" pos:column="23"/></name></name></type> <name pos:line="27" pos:column="24">readCall<pos:position pos:line="27" pos:column="32"/></name> <init pos:line="27" pos:column="33">= <expr><call><name pos:line="27" pos:column="35">commCbCall<pos:position pos:line="27" pos:column="45"/></name><argument_list pos:line="27" pos:column="45">(<argument><expr><literal type="number" pos:line="27" pos:column="46">5<pos:position pos:line="27" pos:column="47"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="27" pos:column="48">4<pos:position pos:line="27" pos:column="49"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="27" pos:column="51">"whoisReadReply"<pos:position pos:line="27" pos:column="67"/></literal></expr></argument>,
                                  <argument><expr><call><name pos:line="28" pos:column="35">CommIoCbPtrFun<pos:position pos:line="28" pos:column="49"/></name><argument_list pos:line="28" pos:column="49">(<argument><expr><name pos:line="28" pos:column="50">whoisReadReply<pos:position pos:line="28" pos:column="64"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="66">p<pos:position pos:line="28" pos:column="67"/></name></expr></argument>)<pos:position pos:line="28" pos:column="68"/></argument_list></call></expr></argument>)<pos:position pos:line="28" pos:column="69"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="70"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">comm_read<pos:position pos:line="29" pos:column="14"/></name><argument_list pos:line="29" pos:column="14">(<argument><expr><call><name><name pos:line="29" pos:column="15">fwd<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">-&gt;<pos:position pos:line="29" pos:column="23"/></operator><name pos:line="29" pos:column="20">serverConnection<pos:position pos:line="29" pos:column="36"/></name></name><argument_list pos:line="29" pos:column="36">()<pos:position pos:line="29" pos:column="38"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="29" pos:column="40">p<pos:position pos:line="29" pos:column="41"/></name><operator pos:line="29" pos:column="41">-&gt;<pos:position pos:line="29" pos:column="46"/></operator><name pos:line="29" pos:column="43">buf<pos:position pos:line="29" pos:column="46"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="48">BUFSIZ<pos:position pos:line="29" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="56">readCall<pos:position pos:line="29" pos:column="64"/></name></expr></argument>)<pos:position pos:line="29" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="66"/></expr_stmt>
    <decl_stmt><decl><type><name><name pos:line="30" pos:column="5">AsyncCall<pos:position pos:line="30" pos:column="14"/></name><operator pos:line="30" pos:column="14">::<pos:position pos:line="30" pos:column="16"/></operator><name pos:line="30" pos:column="16">Pointer<pos:position pos:line="30" pos:column="23"/></name></name></type> <name pos:line="30" pos:column="24">timeoutCall<pos:position pos:line="30" pos:column="35"/></name> <init pos:line="30" pos:column="36">= <expr><call><name pos:line="30" pos:column="38">commCbCall<pos:position pos:line="30" pos:column="48"/></name><argument_list pos:line="30" pos:column="48">(<argument><expr><literal type="number" pos:line="30" pos:column="49">5<pos:position pos:line="30" pos:column="50"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="30" pos:column="52">4<pos:position pos:line="30" pos:column="53"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="30" pos:column="55">"whoisTimeout"<pos:position pos:line="30" pos:column="69"/></literal></expr></argument>,
                                     <argument><expr><call><name pos:line="31" pos:column="38">CommTimeoutCbPtrFun<pos:position pos:line="31" pos:column="57"/></name><argument_list pos:line="31" pos:column="57">(<argument><expr><name pos:line="31" pos:column="58">whoisTimeout<pos:position pos:line="31" pos:column="70"/></name></expr></argument>, <argument><expr><name pos:line="31" pos:column="72">p<pos:position pos:line="31" pos:column="73"/></name></expr></argument>)<pos:position pos:line="31" pos:column="74"/></argument_list></call></expr></argument>)<pos:position pos:line="31" pos:column="75"/></argument_list></call></expr></init></decl>;<pos:position pos:line="31" pos:column="76"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="32" pos:column="5">commSetConnTimeout<pos:position pos:line="32" pos:column="23"/></name><argument_list pos:line="32" pos:column="23">(<argument><expr><call><name><name pos:line="32" pos:column="24">fwd<pos:position pos:line="32" pos:column="27"/></name><operator pos:line="32" pos:column="27">-&gt;<pos:position pos:line="32" pos:column="32"/></operator><name pos:line="32" pos:column="29">serverConnection<pos:position pos:line="32" pos:column="45"/></name></name><argument_list pos:line="32" pos:column="45">()<pos:position pos:line="32" pos:column="47"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="32" pos:column="49">Config<pos:position pos:line="32" pos:column="55"/></name><operator pos:line="32" pos:column="55">.<pos:position pos:line="32" pos:column="56"/></operator><name pos:line="32" pos:column="56">Timeout<pos:position pos:line="32" pos:column="63"/></name><operator pos:line="32" pos:column="63">.<pos:position pos:line="32" pos:column="64"/></operator><name pos:line="32" pos:column="64">read<pos:position pos:line="32" pos:column="68"/></name></name></expr></argument>, <argument><expr><name pos:line="32" pos:column="70">timeoutCall<pos:position pos:line="32" pos:column="81"/></name></expr></argument>)<pos:position pos:line="32" pos:column="82"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="83"/></expr_stmt>
}<pos:position pos:line="33" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7435_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">SharedSessionCacheRr<pos:position pos:line="2" pos:column="21"/></name><operator pos:line="2" pos:column="21">::<pos:position pos:line="2" pos:column="23"/></operator><name pos:line="2" pos:column="23">useConfig<pos:position pos:line="2" pos:column="32"/></name></name><parameter_list pos:line="2" pos:column="32">()<pos:position pos:line="2" pos:column="34"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_OPENSSL<pos:position pos:line="4" pos:column="16"/></name></expr></cpp:if>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">SessionCache<pos:position pos:line="5" pos:column="21"/></name> <operator pos:line="5" pos:column="22">||<pos:position pos:line="5" pos:column="24"/></operator> <operator pos:line="5" pos:column="25">!<pos:position pos:line="5" pos:column="26"/></operator><call><name pos:line="5" pos:column="26">isTlsServer<pos:position pos:line="5" pos:column="37"/></name><argument_list pos:line="5" pos:column="37">()<pos:position pos:line="5" pos:column="39"/></argument_list></call></expr>)<pos:position pos:line="5" pos:column="40"/></condition><then pos:line="5" pos:column="40"> <comment type="line" pos:line="5" pos:column="41">// no need to configure SSL_SESSION* cache.</comment>
        <block type="pseudo"><return pos:line="6" pos:column="9">return;<pos:position pos:line="6" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">Ipc<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">::<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">Mem<pos:position pos:line="8" pos:column="13"/></name><operator pos:line="8" pos:column="13">::<pos:position pos:line="8" pos:column="15"/></operator><name pos:line="8" pos:column="15">RegisteredRunner<pos:position pos:line="8" pos:column="31"/></name><operator pos:line="8" pos:column="31">::<pos:position pos:line="8" pos:column="33"/></operator><name pos:line="8" pos:column="33">useConfig<pos:position pos:line="8" pos:column="42"/></name></name><argument_list pos:line="8" pos:column="42">()<pos:position pos:line="8" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="45"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">initializeSessionCache<pos:position pos:line="9" pos:column="27"/></name><argument_list pos:line="9" pos:column="27">()<pos:position pos:line="9" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="30"/></expr_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

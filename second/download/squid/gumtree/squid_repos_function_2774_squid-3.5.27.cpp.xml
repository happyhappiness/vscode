<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2774_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">TunnelStateData<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">connectToPeer<pos:position pos:line="2" pos:column="31"/></name></name><parameter_list pos:line="2" pos:column="31">()<pos:position pos:line="2" pos:column="33"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><specifier pos:line="4" pos:column="5">const<pos:position pos:line="4" pos:column="10"/></specifier> <name><name pos:line="4" pos:column="11">Comm<pos:position pos:line="4" pos:column="15"/></name><operator pos:line="4" pos:column="15">::<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="17">ConnectionPointer<pos:position pos:line="4" pos:column="34"/></name></name> <modifier pos:line="4" pos:column="35">&amp;<pos:position pos:line="4" pos:column="40"/></modifier></type><name pos:line="4" pos:column="36">srv<pos:position pos:line="4" pos:column="39"/></name> <init pos:line="4" pos:column="40">= <expr><name><name pos:line="4" pos:column="42">server<pos:position pos:line="4" pos:column="48"/></name><operator pos:line="4" pos:column="48">.<pos:position pos:line="4" pos:column="49"/></operator><name pos:line="4" pos:column="49">conn<pos:position pos:line="4" pos:column="53"/></name></name></expr></init></decl>;<pos:position pos:line="4" pos:column="54"/></decl_stmt>

<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">USE_OPENSSL<pos:position pos:line="6" pos:column="16"/></name></expr></cpp:if>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<decl><type><name pos:line="7" pos:column="9">CachePeer<pos:position pos:line="7" pos:column="18"/></name> <modifier pos:line="7" pos:column="19">*<pos:position pos:line="7" pos:column="20"/></modifier></type><name pos:line="7" pos:column="20">p<pos:position pos:line="7" pos:column="21"/></name> <init pos:line="7" pos:column="22">= <expr><call><name><name pos:line="7" pos:column="24">srv<pos:position pos:line="7" pos:column="27"/></name><operator pos:line="7" pos:column="27">-&gt;<pos:position pos:line="7" pos:column="32"/></operator><name pos:line="7" pos:column="29">getPeer<pos:position pos:line="7" pos:column="36"/></name></name><argument_list pos:line="7" pos:column="36">()<pos:position pos:line="7" pos:column="38"/></argument_list></call></expr></init></decl>)<pos:position pos:line="7" pos:column="39"/></condition><then pos:line="7" pos:column="39"> <block pos:line="7" pos:column="40">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><name><name pos:line="8" pos:column="13">p<pos:position pos:line="8" pos:column="14"/></name><operator pos:line="8" pos:column="14">-&gt;<pos:position pos:line="8" pos:column="19"/></operator><name pos:line="8" pos:column="16">use_ssl<pos:position pos:line="8" pos:column="23"/></name></name></expr>)<pos:position pos:line="8" pos:column="24"/></condition><then pos:line="8" pos:column="24"> <block pos:line="8" pos:column="25">{
            <decl_stmt><decl><type><name><name pos:line="9" pos:column="13">AsyncCall<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">::<pos:position pos:line="9" pos:column="24"/></operator><name pos:line="9" pos:column="24">Pointer<pos:position pos:line="9" pos:column="31"/></name></name></type> <name pos:line="9" pos:column="32">callback<pos:position pos:line="9" pos:column="40"/></name> <init pos:line="9" pos:column="41">= <expr><call><name pos:line="9" pos:column="43">asyncCall<pos:position pos:line="9" pos:column="52"/></name><argument_list pos:line="9" pos:column="52">(<argument><expr><literal type="number" pos:line="9" pos:column="53">5<pos:position pos:line="9" pos:column="54"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="9" pos:column="55">4<pos:position pos:line="9" pos:column="56"/></literal></expr></argument>,
                                                    <argument><expr><literal type="string" pos:line="10" pos:column="53">"TunnelStateData::ConnectedToPeer"<pos:position pos:line="10" pos:column="87"/></literal></expr></argument>,
                                                    <argument><expr><call><name pos:line="11" pos:column="53">MyAnswerDialer<pos:position pos:line="11" pos:column="67"/></name><argument_list pos:line="11" pos:column="67">(<argument><expr><operator pos:line="11" pos:column="68">&amp;<pos:position pos:line="11" pos:column="73"/></operator><name><name pos:line="11" pos:column="69">TunnelStateData<pos:position pos:line="11" pos:column="84"/></name><operator pos:line="11" pos:column="84">::<pos:position pos:line="11" pos:column="86"/></operator><name pos:line="11" pos:column="86">connectedToPeer<pos:position pos:line="11" pos:column="101"/></name></name></expr></argument>, <argument><expr><name pos:line="11" pos:column="103">this<pos:position pos:line="11" pos:column="107"/></name></expr></argument>)<pos:position pos:line="11" pos:column="108"/></argument_list></call></expr></argument>)<pos:position pos:line="11" pos:column="109"/></argument_list></call></expr></init></decl>;<pos:position pos:line="11" pos:column="110"/></decl_stmt>
            <decl_stmt><decl><type><name><name pos:line="12" pos:column="13">Ssl<pos:position pos:line="12" pos:column="16"/></name><operator pos:line="12" pos:column="16">::<pos:position pos:line="12" pos:column="18"/></operator><name pos:line="12" pos:column="18">PeerConnector<pos:position pos:line="12" pos:column="31"/></name></name> <modifier pos:line="12" pos:column="32">*<pos:position pos:line="12" pos:column="33"/></modifier></type><name pos:line="12" pos:column="33">connector<pos:position pos:line="12" pos:column="42"/></name> <init pos:line="12" pos:column="43">=
                <expr><operator pos:line="13" pos:column="17">new<pos:position pos:line="13" pos:column="20"/></operator> <call><name><name pos:line="13" pos:column="21">Ssl<pos:position pos:line="13" pos:column="24"/></name><operator pos:line="13" pos:column="24">::<pos:position pos:line="13" pos:column="26"/></operator><name pos:line="13" pos:column="26">PeerConnector<pos:position pos:line="13" pos:column="39"/></name></name><argument_list pos:line="13" pos:column="39">(<argument><expr><name pos:line="13" pos:column="40">request<pos:position pos:line="13" pos:column="47"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="49">srv<pos:position pos:line="13" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="54">client<pos:position pos:line="13" pos:column="60"/></name><operator pos:line="13" pos:column="60">.<pos:position pos:line="13" pos:column="61"/></operator><name pos:line="13" pos:column="61">conn<pos:position pos:line="13" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="67">callback<pos:position pos:line="13" pos:column="75"/></name></expr></argument>)<pos:position pos:line="13" pos:column="76"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="77"/></decl_stmt>
            <expr_stmt><expr><call><name><name pos:line="14" pos:column="13">AsyncJob<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">::<pos:position pos:line="14" pos:column="23"/></operator><name pos:line="14" pos:column="23">Start<pos:position pos:line="14" pos:column="28"/></name></name><argument_list pos:line="14" pos:column="28">(<argument><expr><name pos:line="14" pos:column="29">connector<pos:position pos:line="14" pos:column="38"/></name></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt> <comment type="line" pos:line="14" pos:column="41">// will call our callback</comment>
            <return pos:line="15" pos:column="13">return;<pos:position pos:line="15" pos:column="20"/></return>
        }<pos:position pos:line="16" pos:column="10"/></block></then></if>
    }<pos:position pos:line="17" pos:column="6"/></block></then></if>
<cpp:endif pos:line="18" pos:column="1">#<cpp:directive pos:line="18" pos:column="2">endif<pos:position pos:line="18" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><call><name pos:line="20" pos:column="5">tunnelRelayConnectRequest<pos:position pos:line="20" pos:column="30"/></name><argument_list pos:line="20" pos:column="30">(<argument><expr><name pos:line="20" pos:column="31">srv<pos:position pos:line="20" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="20" pos:column="36">this<pos:position pos:line="20" pos:column="40"/></name></expr></argument>)<pos:position pos:line="20" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="42"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>

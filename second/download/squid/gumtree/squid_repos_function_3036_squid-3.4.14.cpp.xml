<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3036_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">StoreEntry<pos:position pos:line="1" pos:column="11"/></name> <modifier pos:line="1" pos:column="12">*<pos:position pos:line="1" pos:column="13"/></modifier></type>
<name pos:line="2" pos:column="1">storeGetPublicByRequest<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name pos:line="2" pos:column="25">HttpRequest<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">req<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="43"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">StoreEntry<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">e<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><call><name pos:line="4" pos:column="21">storeGetPublicByRequestMethod<pos:position pos:line="4" pos:column="50"/></name><argument_list pos:line="4" pos:column="50">(<argument><expr><name pos:line="4" pos:column="51">req<pos:position pos:line="4" pos:column="54"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="56">req<pos:position pos:line="4" pos:column="59"/></name><operator pos:line="4" pos:column="59">-&gt;<pos:position pos:line="4" pos:column="64"/></operator><name pos:line="4" pos:column="61">method<pos:position pos:line="4" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="4" pos:column="68"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="69"/></decl_stmt>

    <if pos:line="6" pos:column="5">if <condition pos:line="6" pos:column="8">(<expr><name pos:line="6" pos:column="9">e<pos:position pos:line="6" pos:column="10"/></name> <operator pos:line="6" pos:column="11">==<pos:position pos:line="6" pos:column="13"/></operator> <name pos:line="6" pos:column="14">NULL<pos:position pos:line="6" pos:column="18"/></name> <operator pos:line="6" pos:column="19">&amp;&amp;<pos:position pos:line="6" pos:column="29"/></operator> <name><name pos:line="6" pos:column="22">req<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">-&gt;<pos:position pos:line="6" pos:column="30"/></operator><name pos:line="6" pos:column="27">method<pos:position pos:line="6" pos:column="33"/></name></name> <operator pos:line="6" pos:column="34">==<pos:position pos:line="6" pos:column="36"/></operator> <name><name pos:line="6" pos:column="37">Http<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">::<pos:position pos:line="6" pos:column="43"/></operator><name pos:line="6" pos:column="43">METHOD_HEAD<pos:position pos:line="6" pos:column="54"/></name></name></expr>)<pos:position pos:line="6" pos:column="55"/></condition><then pos:line="6" pos:column="55">
        <comment type="block" pos:line="7" pos:column="9">/* We can generate a HEAD reply from a cached GET object */</comment>
        <block type="pseudo"><expr_stmt><expr><name pos:line="8" pos:column="9">e<pos:position pos:line="8" pos:column="10"/></name> <operator pos:line="8" pos:column="11">=<pos:position pos:line="8" pos:column="12"/></operator> <call><name pos:line="8" pos:column="13">storeGetPublicByRequestMethod<pos:position pos:line="8" pos:column="42"/></name><argument_list pos:line="8" pos:column="42">(<argument><expr><name pos:line="8" pos:column="43">req<pos:position pos:line="8" pos:column="46"/></name></expr></argument>, <argument><expr><name><name pos:line="8" pos:column="48">Http<pos:position pos:line="8" pos:column="52"/></name><operator pos:line="8" pos:column="52">::<pos:position pos:line="8" pos:column="54"/></operator><name pos:line="8" pos:column="54">METHOD_GET<pos:position pos:line="8" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="8" pos:column="65"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="66"/></expr_stmt></block></then></if>

    <return pos:line="10" pos:column="5">return <expr><name pos:line="10" pos:column="12">e<pos:position pos:line="10" pos:column="13"/></name></expr>;<pos:position pos:line="10" pos:column="14"/></return>
}<pos:position pos:line="11" pos:column="2"/></block></function></unit>

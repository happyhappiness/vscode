<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5157_squid-3.5.27.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">StoreIOState<pos:position pos:line="1" pos:column="13"/></name><operator pos:line="1" pos:column="13">::<pos:position pos:line="1" pos:column="15"/></operator><name pos:line="1" pos:column="15">Pointer<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name><name pos:line="2" pos:column="1">Rock<pos:position pos:line="2" pos:column="5"/></name><operator pos:line="2" pos:column="5">::<pos:position pos:line="2" pos:column="7"/></operator><name pos:line="2" pos:column="7">SwapDir<pos:position pos:line="2" pos:column="14"/></name><operator pos:line="2" pos:column="14">::<pos:position pos:line="2" pos:column="16"/></operator><name pos:line="2" pos:column="16">openStoreIO<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">StoreEntry<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">&amp;<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="40">e<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="43">StoreIOState<pos:position pos:line="2" pos:column="55"/></name><operator pos:line="2" pos:column="55">::<pos:position pos:line="2" pos:column="57"/></operator><name pos:line="2" pos:column="57">STFNCB<pos:position pos:line="2" pos:column="63"/></name></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">cbFile<pos:position pos:line="2" pos:column="71"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="73">StoreIOState<pos:position pos:line="2" pos:column="85"/></name><operator pos:line="2" pos:column="85">::<pos:position pos:line="2" pos:column="87"/></operator><name pos:line="2" pos:column="87">STIOCB<pos:position pos:line="2" pos:column="93"/></name></name> <modifier pos:line="2" pos:column="94">*<pos:position pos:line="2" pos:column="95"/></modifier></type><name pos:line="2" pos:column="95">cbIo<pos:position pos:line="2" pos:column="99"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="101">void<pos:position pos:line="2" pos:column="105"/></name> <modifier pos:line="2" pos:column="106">*<pos:position pos:line="2" pos:column="107"/></modifier></type><name pos:line="2" pos:column="107">data<pos:position pos:line="2" pos:column="111"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="112"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><operator pos:line="4" pos:column="9">!<pos:position pos:line="4" pos:column="10"/></operator><name pos:line="4" pos:column="10">theFile<pos:position pos:line="4" pos:column="17"/></name> <operator pos:line="4" pos:column="18">||<pos:position pos:line="4" pos:column="20"/></operator> <call><name><name pos:line="4" pos:column="21">theFile<pos:position pos:line="4" pos:column="28"/></name><operator pos:line="4" pos:column="28">-&gt;<pos:position pos:line="4" pos:column="33"/></operator><name pos:line="4" pos:column="30">error<pos:position pos:line="4" pos:column="35"/></name></name><argument_list pos:line="4" pos:column="35">()<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr>)<pos:position pos:line="4" pos:column="38"/></condition><then pos:line="4" pos:column="38"> <block pos:line="4" pos:column="39">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">47<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="5" pos:column="19">4<pos:position pos:line="5" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="22">HERE<pos:position pos:line="5" pos:column="26"/></name> <operator pos:line="5" pos:column="27">&lt;&lt;<pos:position pos:line="5" pos:column="35"/></operator> <name pos:line="5" pos:column="30">theFile<pos:position pos:line="5" pos:column="37"/></name></expr></argument>)<pos:position pos:line="5" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="39"/></expr_stmt>
        <return pos:line="6" pos:column="9">return <expr><name pos:line="6" pos:column="16">NULL<pos:position pos:line="6" pos:column="20"/></name></expr>;<pos:position pos:line="6" pos:column="21"/></return>
    }<pos:position pos:line="7" pos:column="6"/></block></then></if>

    <if pos:line="9" pos:column="5">if <condition pos:line="9" pos:column="8">(<expr><name><name pos:line="9" pos:column="9">e<pos:position pos:line="9" pos:column="10"/></name><operator pos:line="9" pos:column="10">.<pos:position pos:line="9" pos:column="11"/></operator><name pos:line="9" pos:column="11">swap_filen<pos:position pos:line="9" pos:column="21"/></name></name> <operator pos:line="9" pos:column="22">&lt;<pos:position pos:line="9" pos:column="26"/></operator> <literal type="number" pos:line="9" pos:column="24">0<pos:position pos:line="9" pos:column="25"/></literal></expr>)<pos:position pos:line="9" pos:column="26"/></condition><then pos:line="9" pos:column="26"> <block pos:line="9" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="10" pos:column="9">debugs<pos:position pos:line="10" pos:column="15"/></name><argument_list pos:line="10" pos:column="15">(<argument><expr><literal type="number" pos:line="10" pos:column="16">47<pos:position pos:line="10" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="10" pos:column="19">4<pos:position pos:line="10" pos:column="20"/></literal></expr></argument>, <argument><expr><name pos:line="10" pos:column="22">HERE<pos:position pos:line="10" pos:column="26"/></name> <operator pos:line="10" pos:column="27">&lt;&lt;<pos:position pos:line="10" pos:column="35"/></operator> <name pos:line="10" pos:column="30">e<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>
        <return pos:line="11" pos:column="9">return <expr><name pos:line="11" pos:column="16">NULL<pos:position pos:line="11" pos:column="20"/></name></expr>;<pos:position pos:line="11" pos:column="21"/></return>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="14" pos:column="5">// Do not start I/O transaction if there are less than 10% free pages left.</comment>
    <comment type="line" pos:line="15" pos:column="5">// TODO: reserve page instead</comment>
    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">needsDiskStrand<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">()<pos:position pos:line="16" pos:column="26"/></argument_list></call> <operator pos:line="16" pos:column="27">&amp;&amp;<pos:position pos:line="16" pos:column="37"/></operator>
            <call><name><name pos:line="17" pos:column="13">Ipc<pos:position pos:line="17" pos:column="16"/></name><operator pos:line="17" pos:column="16">::<pos:position pos:line="17" pos:column="18"/></operator><name pos:line="17" pos:column="18">Mem<pos:position pos:line="17" pos:column="21"/></name><operator pos:line="17" pos:column="21">::<pos:position pos:line="17" pos:column="23"/></operator><name pos:line="17" pos:column="23">PageLevel<pos:position pos:line="17" pos:column="32"/></name></name><argument_list pos:line="17" pos:column="32">(<argument><expr><name><name pos:line="17" pos:column="33">Ipc<pos:position pos:line="17" pos:column="36"/></name><operator pos:line="17" pos:column="36">::<pos:position pos:line="17" pos:column="38"/></operator><name pos:line="17" pos:column="38">Mem<pos:position pos:line="17" pos:column="41"/></name><operator pos:line="17" pos:column="41">::<pos:position pos:line="17" pos:column="43"/></operator><name pos:line="17" pos:column="43">PageId<pos:position pos:line="17" pos:column="49"/></name><operator pos:line="17" pos:column="49">::<pos:position pos:line="17" pos:column="51"/></operator><name pos:line="17" pos:column="51">ioPage<pos:position pos:line="17" pos:column="57"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="58"/></argument_list></call> <operator pos:line="17" pos:column="59">&gt;=<pos:position pos:line="17" pos:column="64"/></operator> <literal type="number" pos:line="17" pos:column="62">0.9<pos:position pos:line="17" pos:column="65"/></literal> <operator pos:line="17" pos:column="66">*<pos:position pos:line="17" pos:column="67"/></operator> <call><name><name pos:line="17" pos:column="68">Ipc<pos:position pos:line="17" pos:column="71"/></name><operator pos:line="17" pos:column="71">::<pos:position pos:line="17" pos:column="73"/></operator><name pos:line="17" pos:column="73">Mem<pos:position pos:line="17" pos:column="76"/></name><operator pos:line="17" pos:column="76">::<pos:position pos:line="17" pos:column="78"/></operator><name pos:line="17" pos:column="78">PageLimit<pos:position pos:line="17" pos:column="87"/></name></name><argument_list pos:line="17" pos:column="87">(<argument><expr><name><name pos:line="17" pos:column="88">Ipc<pos:position pos:line="17" pos:column="91"/></name><operator pos:line="17" pos:column="91">::<pos:position pos:line="17" pos:column="93"/></operator><name pos:line="17" pos:column="93">Mem<pos:position pos:line="17" pos:column="96"/></name><operator pos:line="17" pos:column="96">::<pos:position pos:line="17" pos:column="98"/></operator><name pos:line="17" pos:column="98">PageId<pos:position pos:line="17" pos:column="104"/></name><operator pos:line="17" pos:column="104">::<pos:position pos:line="17" pos:column="106"/></operator><name pos:line="17" pos:column="106">ioPage<pos:position pos:line="17" pos:column="112"/></name></name></expr></argument>)<pos:position pos:line="17" pos:column="113"/></argument_list></call></expr>)<pos:position pos:line="17" pos:column="114"/></condition><then pos:line="17" pos:column="114"> <block pos:line="17" pos:column="115">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">debugs<pos:position pos:line="18" pos:column="15"/></name><argument_list pos:line="18" pos:column="15">(<argument><expr><literal type="number" pos:line="18" pos:column="16">47<pos:position pos:line="18" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="18" pos:column="20">5<pos:position pos:line="18" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="18" pos:column="23">HERE<pos:position pos:line="18" pos:column="27"/></name> <operator pos:line="18" pos:column="28">&lt;&lt;<pos:position pos:line="18" pos:column="36"/></operator> <literal type="string" pos:line="18" pos:column="31">"too few shared pages for IPC I/O left"<pos:position pos:line="18" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="72"/></expr_stmt>
        <return pos:line="19" pos:column="9">return <expr><name pos:line="19" pos:column="16">NULL<pos:position pos:line="19" pos:column="20"/></name></expr>;<pos:position pos:line="19" pos:column="21"/></return>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <comment type="line" pos:line="22" pos:column="5">// The are two ways an entry can get swap_filen: our get() locked it for</comment>
    <comment type="line" pos:line="23" pos:column="5">// reading or our storeSwapOutStart() locked it for writing. Peeking at our</comment>
    <comment type="line" pos:line="24" pos:column="5">// locked entry is safe, but no support for reading the entry we swap out.</comment>
    <decl_stmt><decl><type><specifier pos:line="25" pos:column="5">const<pos:position pos:line="25" pos:column="10"/></specifier> <name><name pos:line="25" pos:column="11">Ipc<pos:position pos:line="25" pos:column="14"/></name><operator pos:line="25" pos:column="14">::<pos:position pos:line="25" pos:column="16"/></operator><name pos:line="25" pos:column="16">StoreMapAnchor<pos:position pos:line="25" pos:column="30"/></name></name> <modifier pos:line="25" pos:column="31">*<pos:position pos:line="25" pos:column="32"/></modifier></type><name pos:line="25" pos:column="32">slot<pos:position pos:line="25" pos:column="36"/></name> <init pos:line="25" pos:column="37">= <expr><call><name><name pos:line="25" pos:column="39">map<pos:position pos:line="25" pos:column="42"/></name><operator pos:line="25" pos:column="42">-&gt;<pos:position pos:line="25" pos:column="47"/></operator><name pos:line="25" pos:column="44">peekAtReader<pos:position pos:line="25" pos:column="56"/></name></name><argument_list pos:line="25" pos:column="56">(<argument><expr><name><name pos:line="25" pos:column="57">e<pos:position pos:line="25" pos:column="58"/></name><operator pos:line="25" pos:column="58">.<pos:position pos:line="25" pos:column="59"/></operator><name pos:line="25" pos:column="59">swap_filen<pos:position pos:line="25" pos:column="69"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="70"/></argument_list></call></expr></init></decl>;<pos:position pos:line="25" pos:column="71"/></decl_stmt>
    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><operator pos:line="26" pos:column="9">!<pos:position pos:line="26" pos:column="10"/></operator><name pos:line="26" pos:column="10">slot<pos:position pos:line="26" pos:column="14"/></name></expr>)<pos:position pos:line="26" pos:column="15"/></condition><then pos:line="26" pos:column="15">
        <block type="pseudo"><return pos:line="27" pos:column="9">return <expr><name pos:line="27" pos:column="16">NULL<pos:position pos:line="27" pos:column="20"/></name></expr>;<pos:position pos:line="27" pos:column="21"/></return></block></then></if> <comment type="line" pos:line="27" pos:column="22">// we were writing afterall</comment>

    <decl_stmt><decl><type><name><name pos:line="29" pos:column="5">Rock<pos:position pos:line="29" pos:column="9"/></name><operator pos:line="29" pos:column="9">::<pos:position pos:line="29" pos:column="11"/></operator><name pos:line="29" pos:column="11">SwapDir<pos:position pos:line="29" pos:column="18"/></name><operator pos:line="29" pos:column="18">::<pos:position pos:line="29" pos:column="20"/></operator><name pos:line="29" pos:column="20">Pointer<pos:position pos:line="29" pos:column="27"/></name></name></type> <name pos:line="29" pos:column="28">self<pos:position pos:line="29" pos:column="32"/></name><argument_list pos:line="29" pos:column="32">(<argument><expr><name pos:line="29" pos:column="33">this<pos:position pos:line="29" pos:column="37"/></name></expr></argument>)<pos:position pos:line="29" pos:column="38"/></argument_list></decl>;<pos:position pos:line="29" pos:column="39"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="30" pos:column="5">IoState<pos:position pos:line="30" pos:column="12"/></name> <modifier pos:line="30" pos:column="13">*<pos:position pos:line="30" pos:column="14"/></modifier></type><name pos:line="30" pos:column="14">sio<pos:position pos:line="30" pos:column="17"/></name> <init pos:line="30" pos:column="18">= <expr><operator pos:line="30" pos:column="20">new<pos:position pos:line="30" pos:column="23"/></operator> <call><name pos:line="30" pos:column="24">IoState<pos:position pos:line="30" pos:column="31"/></name><argument_list pos:line="30" pos:column="31">(<argument><expr><name pos:line="30" pos:column="32">self<pos:position pos:line="30" pos:column="36"/></name></expr></argument>, <argument><expr><operator pos:line="30" pos:column="38">&amp;<pos:position pos:line="30" pos:column="43"/></operator><name pos:line="30" pos:column="39">e<pos:position pos:line="30" pos:column="40"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="42">cbFile<pos:position pos:line="30" pos:column="48"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="50">cbIo<pos:position pos:line="30" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="30" pos:column="56">data<pos:position pos:line="30" pos:column="60"/></name></expr></argument>)<pos:position pos:line="30" pos:column="61"/></argument_list></call></expr></init></decl>;<pos:position pos:line="30" pos:column="62"/></decl_stmt>

    <expr_stmt><expr><name><name pos:line="32" pos:column="5">sio<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">swap_dirn<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">=<pos:position pos:line="32" pos:column="21"/></operator> <name pos:line="32" pos:column="22">index<pos:position pos:line="32" pos:column="27"/></name></expr>;<pos:position pos:line="32" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">sio<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="10">swap_filen<pos:position pos:line="33" pos:column="20"/></name></name> <operator pos:line="33" pos:column="21">=<pos:position pos:line="33" pos:column="22"/></operator> <name><name pos:line="33" pos:column="23">e<pos:position pos:line="33" pos:column="24"/></name><operator pos:line="33" pos:column="24">.<pos:position pos:line="33" pos:column="25"/></operator><name pos:line="33" pos:column="25">swap_filen<pos:position pos:line="33" pos:column="35"/></name></name></expr>;<pos:position pos:line="33" pos:column="36"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">sio<pos:position pos:line="34" pos:column="8"/></name><operator pos:line="34" pos:column="8">-&gt;<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="10">readableAnchor_<pos:position pos:line="34" pos:column="25"/></name></name> <operator pos:line="34" pos:column="26">=<pos:position pos:line="34" pos:column="27"/></operator> <name pos:line="34" pos:column="28">slot<pos:position pos:line="34" pos:column="32"/></name></expr>;<pos:position pos:line="34" pos:column="33"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="35" pos:column="5">sio<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">-&gt;<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="10">file<pos:position pos:line="35" pos:column="14"/></name></name><argument_list pos:line="35" pos:column="14">(<argument><expr><name pos:line="35" pos:column="15">theFile<pos:position pos:line="35" pos:column="22"/></name></expr></argument>)<pos:position pos:line="35" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="24"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">debugs<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="number" pos:line="37" pos:column="12">47<pos:position pos:line="37" pos:column="14"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="37" pos:column="15">5<pos:position pos:line="37" pos:column="16"/></literal></expr></argument>, <argument><expr><name pos:line="37" pos:column="18">HERE<pos:position pos:line="37" pos:column="22"/></name> <operator pos:line="37" pos:column="23">&lt;&lt;<pos:position pos:line="37" pos:column="31"/></operator> <literal type="string" pos:line="37" pos:column="26">"dir "<pos:position pos:line="37" pos:column="32"/></literal> <operator pos:line="37" pos:column="33">&lt;&lt;<pos:position pos:line="37" pos:column="41"/></operator> <name pos:line="37" pos:column="36">index<pos:position pos:line="37" pos:column="41"/></name> <operator pos:line="37" pos:column="42">&lt;&lt;<pos:position pos:line="37" pos:column="50"/></operator> <literal type="string" pos:line="37" pos:column="45">" has old filen: "<pos:position pos:line="37" pos:column="63"/></literal> <operator pos:line="37" pos:column="64">&lt;&lt;<pos:position pos:line="37" pos:column="72"/></operator>
           <call><name><name pos:line="38" pos:column="12">std<pos:position pos:line="38" pos:column="15"/></name><operator pos:line="38" pos:column="15">::<pos:position pos:line="38" pos:column="17"/></operator><name pos:line="38" pos:column="17">setfill<pos:position pos:line="38" pos:column="24"/></name></name><argument_list pos:line="38" pos:column="24">(<argument><expr><literal type="char" pos:line="38" pos:column="25">'0'<pos:position pos:line="38" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="29"/></argument_list></call> <operator pos:line="38" pos:column="30">&lt;&lt;<pos:position pos:line="38" pos:column="38"/></operator> <name><name pos:line="38" pos:column="33">std<pos:position pos:line="38" pos:column="36"/></name><operator pos:line="38" pos:column="36">::<pos:position pos:line="38" pos:column="38"/></operator><name pos:line="38" pos:column="38">hex<pos:position pos:line="38" pos:column="41"/></name></name> <operator pos:line="38" pos:column="42">&lt;&lt;<pos:position pos:line="38" pos:column="50"/></operator> <name><name pos:line="38" pos:column="45">std<pos:position pos:line="38" pos:column="48"/></name><operator pos:line="38" pos:column="48">::<pos:position pos:line="38" pos:column="50"/></operator><name pos:line="38" pos:column="50">uppercase<pos:position pos:line="38" pos:column="59"/></name></name> <operator pos:line="38" pos:column="60">&lt;&lt;<pos:position pos:line="38" pos:column="68"/></operator> <call><name><name pos:line="38" pos:column="63">std<pos:position pos:line="38" pos:column="66"/></name><operator pos:line="38" pos:column="66">::<pos:position pos:line="38" pos:column="68"/></operator><name pos:line="38" pos:column="68">setw<pos:position pos:line="38" pos:column="72"/></name></name><argument_list pos:line="38" pos:column="72">(<argument><expr><literal type="number" pos:line="38" pos:column="73">8<pos:position pos:line="38" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="75"/></argument_list></call> <operator pos:line="38" pos:column="76">&lt;&lt;<pos:position pos:line="38" pos:column="84"/></operator>
           <name><name pos:line="39" pos:column="12">sio<pos:position pos:line="39" pos:column="15"/></name><operator pos:line="39" pos:column="15">-&gt;<pos:position pos:line="39" pos:column="20"/></operator><name pos:line="39" pos:column="17">swap_filen<pos:position pos:line="39" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="39" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="29"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="41" pos:column="5">assert<pos:position pos:line="41" pos:column="11"/></name><argument_list pos:line="41" pos:column="11">(<argument><expr><call><name><name pos:line="41" pos:column="12">slot<pos:position pos:line="41" pos:column="16"/></name><operator pos:line="41" pos:column="16">-&gt;<pos:position pos:line="41" pos:column="21"/></operator><name pos:line="41" pos:column="18">sameKey<pos:position pos:line="41" pos:column="25"/></name></name><argument_list pos:line="41" pos:column="25">(<argument><expr><cast type="static" pos:line="41" pos:column="26">static_cast<argument_list type="generic" pos:line="41" pos:column="37">&lt;<argument><expr><specifier pos:line="41" pos:column="38">const<pos:position pos:line="41" pos:column="43"/></specifier> <name pos:line="41" pos:column="44">cache_key<pos:position pos:line="41" pos:column="53"/></name><operator pos:line="41" pos:column="53">*<pos:position pos:line="41" pos:column="54"/></operator></expr></argument>&gt;<pos:position pos:line="41" pos:column="58"/></argument_list><argument_list pos:line="41" pos:column="55">(<argument><expr><name><name pos:line="41" pos:column="56">e<pos:position pos:line="41" pos:column="57"/></name><operator pos:line="41" pos:column="57">.<pos:position pos:line="41" pos:column="58"/></operator><name pos:line="41" pos:column="58">key<pos:position pos:line="41" pos:column="61"/></name></name></expr></argument>)<pos:position pos:line="41" pos:column="62"/></argument_list></cast></expr></argument>)<pos:position pos:line="41" pos:column="63"/></argument_list></call></expr></argument>)<pos:position pos:line="41" pos:column="64"/></argument_list></call></expr>;<pos:position pos:line="41" pos:column="65"/></expr_stmt>
    <comment type="line" pos:line="42" pos:column="5">// For collapsed disk hits: e.swap_file_sz and slot-&gt;basics.swap_file_sz</comment>
    <comment type="line" pos:line="43" pos:column="5">// may still be zero and basics.swap_file_sz may grow.</comment>
    <expr_stmt><expr><call><name pos:line="44" pos:column="5">assert<pos:position pos:line="44" pos:column="11"/></name><argument_list pos:line="44" pos:column="11">(<argument><expr><name><name pos:line="44" pos:column="12">slot<pos:position pos:line="44" pos:column="16"/></name><operator pos:line="44" pos:column="16">-&gt;<pos:position pos:line="44" pos:column="21"/></operator><name pos:line="44" pos:column="18">basics<pos:position pos:line="44" pos:column="24"/></name><operator pos:line="44" pos:column="24">.<pos:position pos:line="44" pos:column="25"/></operator><name pos:line="44" pos:column="25">swap_file_sz<pos:position pos:line="44" pos:column="37"/></name></name> <operator pos:line="44" pos:column="38">&gt;=<pos:position pos:line="44" pos:column="43"/></operator> <name><name pos:line="44" pos:column="41">e<pos:position pos:line="44" pos:column="42"/></name><operator pos:line="44" pos:column="42">.<pos:position pos:line="44" pos:column="43"/></operator><name pos:line="44" pos:column="43">swap_file_sz<pos:position pos:line="44" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="44" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="44" pos:column="57"/></expr_stmt>

    <return pos:line="46" pos:column="5">return <expr><name pos:line="46" pos:column="12">sio<pos:position pos:line="46" pos:column="15"/></name></expr>;<pos:position pos:line="46" pos:column="16"/></return>
}<pos:position pos:line="47" pos:column="2"/></block></function></unit>

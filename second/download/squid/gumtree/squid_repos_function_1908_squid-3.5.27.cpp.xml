<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1908_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">statHistEnumDumper<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><name pos:line="2" pos:column="20">StoreEntry<pos:position pos:line="2" pos:column="30"/></name> <modifier pos:line="2" pos:column="31">*<pos:position pos:line="2" pos:column="32"/></modifier></type> <name pos:line="2" pos:column="33">sentry<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="41">int<pos:position pos:line="2" pos:column="44"/></name></type> <name pos:line="2" pos:column="45">idx<pos:position pos:line="2" pos:column="48"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="50">double<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">val<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">double<pos:position pos:line="2" pos:column="68"/></name></type> <name pos:line="2" pos:column="69">size<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="75">int<pos:position pos:line="2" pos:column="78"/></name></type> <name pos:line="2" pos:column="79">count<pos:position pos:line="2" pos:column="84"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="85"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">count<pos:position pos:line="4" pos:column="14"/></name></expr>)<pos:position pos:line="4" pos:column="15"/></condition><then pos:line="4" pos:column="15">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="5" pos:column="9">storeAppendPrintf<pos:position pos:line="5" pos:column="26"/></name><argument_list pos:line="5" pos:column="26">(<argument><expr><name pos:line="5" pos:column="27">sentry<pos:position pos:line="5" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="35">"%2d\t %5d\t %5d\n"<pos:position pos:line="5" pos:column="54"/></literal></expr></argument>,
                          <argument><expr><name pos:line="6" pos:column="27">idx<pos:position pos:line="6" pos:column="30"/></name></expr></argument>, <argument><expr><operator pos:line="6" pos:column="32">(<pos:position pos:line="6" pos:column="33"/></operator><name pos:line="6" pos:column="33">int<pos:position pos:line="6" pos:column="36"/></name><operator pos:line="6" pos:column="36">)<pos:position pos:line="6" pos:column="37"/></operator> <name pos:line="6" pos:column="38">val<pos:position pos:line="6" pos:column="41"/></name></expr></argument>, <argument><expr><name pos:line="6" pos:column="43">count<pos:position pos:line="6" pos:column="48"/></name></expr></argument>)<pos:position pos:line="6" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="50"/></expr_stmt></block></then></if>
}<pos:position pos:line="7" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6970_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Ipc<pos:position pos:line="1" pos:column="9"/></name><operator pos:line="1" pos:column="9">::<pos:position pos:line="1" pos:column="11"/></operator><name pos:line="1" pos:column="11">Coordinator<pos:position pos:line="1" pos:column="22"/></name><operator pos:line="1" pos:column="22">::<pos:position pos:line="1" pos:column="24"/></operator><name pos:line="1" pos:column="24">broadcastSignal<pos:position pos:line="1" pos:column="39"/></name></name><parameter_list pos:line="1" pos:column="39">(<parameter><decl><type><name pos:line="1" pos:column="40">int<pos:position pos:line="1" pos:column="43"/></name></type> <name pos:line="1" pos:column="44">sig<pos:position pos:line="1" pos:column="47"/></name></decl></parameter>)<pos:position pos:line="1" pos:column="48"/></parameter_list> <specifier pos:line="1" pos:column="49">const<pos:position pos:line="1" pos:column="54"/></specifier>
<block pos:line="2" pos:column="1">{
    <typedef pos:line="3" pos:column="5">typedef <type><name><name pos:line="3" pos:column="13">StrandCoords<pos:position pos:line="3" pos:column="25"/></name><operator pos:line="3" pos:column="25">::<pos:position pos:line="3" pos:column="27"/></operator><name pos:line="3" pos:column="27">const_iterator<pos:position pos:line="3" pos:column="41"/></name></name></type> <name pos:line="3" pos:column="42">SCI<pos:position pos:line="3" pos:column="45"/></name>;<pos:position pos:line="3" pos:column="46"/></typedef>
    <for pos:line="4" pos:column="5">for <control pos:line="4" pos:column="9">(<init><decl><type><name pos:line="4" pos:column="10">SCI<pos:position pos:line="4" pos:column="13"/></name></type> <name pos:line="4" pos:column="14">iter<pos:position pos:line="4" pos:column="18"/></name> <init pos:line="4" pos:column="19">= <expr><call><name><name pos:line="4" pos:column="21">strands_<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">.<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="30">begin<pos:position pos:line="4" pos:column="35"/></name></name><argument_list pos:line="4" pos:column="35">()<pos:position pos:line="4" pos:column="37"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="38"/></init> <condition><expr><name pos:line="4" pos:column="39">iter<pos:position pos:line="4" pos:column="43"/></name> <operator pos:line="4" pos:column="44">!=<pos:position pos:line="4" pos:column="46"/></operator> <call><name><name pos:line="4" pos:column="47">strands_<pos:position pos:line="4" pos:column="55"/></name><operator pos:line="4" pos:column="55">.<pos:position pos:line="4" pos:column="56"/></operator><name pos:line="4" pos:column="56">end<pos:position pos:line="4" pos:column="59"/></name></name><argument_list pos:line="4" pos:column="59">()<pos:position pos:line="4" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="62"/></condition> <incr><expr><operator pos:line="4" pos:column="63">++<pos:position pos:line="4" pos:column="65"/></operator><name pos:line="4" pos:column="65">iter<pos:position pos:line="4" pos:column="69"/></name></expr></incr>)<pos:position pos:line="4" pos:column="70"/></control> <block pos:line="4" pos:column="71">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">54<pos:position pos:line="5" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="20">5<pos:position pos:line="5" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="5" pos:column="23">HERE<pos:position pos:line="5" pos:column="27"/></name> <operator pos:line="5" pos:column="28">&lt;&lt;<pos:position pos:line="5" pos:column="36"/></operator> <literal type="string" pos:line="5" pos:column="31">"signal "<pos:position pos:line="5" pos:column="40"/></literal> <operator pos:line="5" pos:column="41">&lt;&lt;<pos:position pos:line="5" pos:column="49"/></operator> <name pos:line="5" pos:column="44">sig<pos:position pos:line="5" pos:column="47"/></name> <operator pos:line="5" pos:column="48">&lt;&lt;<pos:position pos:line="5" pos:column="56"/></operator> <literal type="string" pos:line="5" pos:column="51">" to kid"<pos:position pos:line="5" pos:column="60"/></literal> <operator pos:line="5" pos:column="61">&lt;&lt;<pos:position pos:line="5" pos:column="69"/></operator> <name><name pos:line="5" pos:column="64">iter<pos:position pos:line="5" pos:column="68"/></name><operator pos:line="5" pos:column="68">-&gt;<pos:position pos:line="5" pos:column="73"/></operator><name pos:line="5" pos:column="70">kidId<pos:position pos:line="5" pos:column="75"/></name></name> <operator pos:line="5" pos:column="76">&lt;&lt;<pos:position pos:line="5" pos:column="84"/></operator>
               <literal type="string" pos:line="6" pos:column="16">", PID="<pos:position pos:line="6" pos:column="24"/></literal> <operator pos:line="6" pos:column="25">&lt;&lt;<pos:position pos:line="6" pos:column="33"/></operator> <name><name pos:line="6" pos:column="28">iter<pos:position pos:line="6" pos:column="32"/></name><operator pos:line="6" pos:column="32">-&gt;<pos:position pos:line="6" pos:column="37"/></operator><name pos:line="6" pos:column="34">pid<pos:position pos:line="6" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="6" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="39"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="7" pos:column="9">kill<pos:position pos:line="7" pos:column="13"/></name><argument_list pos:line="7" pos:column="13">(<argument><expr><name><name pos:line="7" pos:column="14">iter<pos:position pos:line="7" pos:column="18"/></name><operator pos:line="7" pos:column="18">-&gt;<pos:position pos:line="7" pos:column="23"/></operator><name pos:line="7" pos:column="20">pid<pos:position pos:line="7" pos:column="23"/></name></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="25">sig<pos:position pos:line="7" pos:column="28"/></name></expr></argument>)<pos:position pos:line="7" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="30"/></expr_stmt>
    }<pos:position pos:line="8" pos:column="6"/></block></for>
}<pos:position pos:line="9" pos:column="2"/></block></function></unit>

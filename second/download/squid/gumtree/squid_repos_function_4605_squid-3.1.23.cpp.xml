<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4605_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">storeCossRebuildFromSwapLog<pos:position pos:line="2" pos:column="28"/></name><parameter_list pos:line="2" pos:column="28">(<parameter><decl><type><name pos:line="2" pos:column="29">void<pos:position pos:line="2" pos:column="33"/></name> <modifier pos:line="2" pos:column="34">*<pos:position pos:line="2" pos:column="35"/></modifier></type><name pos:line="2" pos:column="35">data<pos:position pos:line="2" pos:column="39"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="40"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">RebuildState<pos:position pos:line="4" pos:column="17"/></name> <modifier pos:line="4" pos:column="18">*<pos:position pos:line="4" pos:column="19"/></modifier></type><name pos:line="4" pos:column="19">rb<pos:position pos:line="4" pos:column="21"/></name> <init pos:line="4" pos:column="22">= <expr><operator pos:line="4" pos:column="24">(<pos:position pos:line="4" pos:column="25"/></operator><name pos:line="4" pos:column="25">RebuildState<pos:position pos:line="4" pos:column="37"/></name> <operator pos:line="4" pos:column="38">*<pos:position pos:line="4" pos:column="39"/></operator><operator pos:line="4" pos:column="39">)<pos:position pos:line="4" pos:column="40"/></operator><name pos:line="4" pos:column="40">data<pos:position pos:line="4" pos:column="44"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="45"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">StoreEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">e<pos:position pos:line="5" pos:column="18"/></name> <init pos:line="5" pos:column="19">= <expr><name pos:line="5" pos:column="21">NULL<pos:position pos:line="5" pos:column="25"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="26"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">StoreSwapLogData<pos:position pos:line="6" pos:column="21"/></name></type> <name pos:line="6" pos:column="22">s<pos:position pos:line="6" pos:column="23"/></name></decl>;<pos:position pos:line="6" pos:column="24"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">size_t<pos:position pos:line="7" pos:column="11"/></name></type> <name pos:line="7" pos:column="12">ss<pos:position pos:line="7" pos:column="14"/></name> <init pos:line="7" pos:column="15">= <expr><sizeof pos:line="7" pos:column="17">sizeof<argument_list pos:line="7" pos:column="23">(<argument><expr><name pos:line="7" pos:column="24">StoreSwapLogData<pos:position pos:line="7" pos:column="40"/></name></expr></argument>)<pos:position pos:line="7" pos:column="41"/></argument_list></sizeof></expr></init></decl>;<pos:position pos:line="7" pos:column="42"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="8" pos:column="5">double<pos:position pos:line="8" pos:column="11"/></name></type> <name pos:line="8" pos:column="12">x<pos:position pos:line="8" pos:column="13"/></name></decl>;<pos:position pos:line="8" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="9" pos:column="5">assert<pos:position pos:line="9" pos:column="11"/></name><argument_list pos:line="9" pos:column="11">(<argument><expr><name pos:line="9" pos:column="12">rb<pos:position pos:line="9" pos:column="14"/></name> <operator pos:line="9" pos:column="15">!=<pos:position pos:line="9" pos:column="17"/></operator> <name pos:line="9" pos:column="18">NULL<pos:position pos:line="9" pos:column="22"/></name></expr></argument>)<pos:position pos:line="9" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="24"/></expr_stmt>
    <comment type="block" pos:line="10" pos:column="5">/* load a number of objects per invocation */</comment>

    <for pos:line="12" pos:column="5">for <control pos:line="12" pos:column="9">(<init><decl><type><name pos:line="12" pos:column="10">int<pos:position pos:line="12" pos:column="13"/></name></type> <name pos:line="12" pos:column="14">aCount<pos:position pos:line="12" pos:column="20"/></name> <init pos:line="12" pos:column="21">= <expr><literal type="number" pos:line="12" pos:column="23">0<pos:position pos:line="12" pos:column="24"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="25"/></init> <condition><expr><name pos:line="12" pos:column="26">aCount<pos:position pos:line="12" pos:column="32"/></name> <operator pos:line="12" pos:column="33">&lt;<pos:position pos:line="12" pos:column="37"/></operator> <name><name pos:line="12" pos:column="35">rb<pos:position pos:line="12" pos:column="37"/></name><operator pos:line="12" pos:column="37">-&gt;<pos:position pos:line="12" pos:column="42"/></operator><name pos:line="12" pos:column="39">speed<pos:position pos:line="12" pos:column="44"/></name></name></expr>;<pos:position pos:line="12" pos:column="45"/></condition> <incr><expr><name pos:line="12" pos:column="46">aCount<pos:position pos:line="12" pos:column="52"/></name><operator pos:line="12" pos:column="52">++<pos:position pos:line="12" pos:column="54"/></operator></expr></incr>)<pos:position pos:line="12" pos:column="55"/></control> <block pos:line="12" pos:column="56">{
        <if pos:line="13" pos:column="9">if <condition pos:line="13" pos:column="12">(<expr><call><name pos:line="13" pos:column="13">fread<pos:position pos:line="13" pos:column="18"/></name><argument_list pos:line="13" pos:column="18">(<argument><expr><operator pos:line="13" pos:column="19">&amp;<pos:position pos:line="13" pos:column="24"/></operator><name pos:line="13" pos:column="20">s<pos:position pos:line="13" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="23">ss<pos:position pos:line="13" pos:column="25"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="27">1<pos:position pos:line="13" pos:column="28"/></literal></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="30">rb<pos:position pos:line="13" pos:column="32"/></name><operator pos:line="13" pos:column="32">-&gt;<pos:position pos:line="13" pos:column="37"/></operator><name pos:line="13" pos:column="34">log<pos:position pos:line="13" pos:column="37"/></name></name></expr></argument>)<pos:position pos:line="13" pos:column="38"/></argument_list></call> <operator pos:line="13" pos:column="39">!=<pos:position pos:line="13" pos:column="41"/></operator> <literal type="number" pos:line="13" pos:column="42">1<pos:position pos:line="13" pos:column="43"/></literal></expr>)<pos:position pos:line="13" pos:column="44"/></condition><then pos:line="13" pos:column="44"> <block pos:line="13" pos:column="45">{
            <expr_stmt><expr><call><name pos:line="14" pos:column="13">debugs<pos:position pos:line="14" pos:column="19"/></name><argument_list pos:line="14" pos:column="19">(<argument><expr><literal type="number" pos:line="14" pos:column="20">47<pos:position pos:line="14" pos:column="22"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="14" pos:column="24">1<pos:position pos:line="14" pos:column="25"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="27">"Done reading "<pos:position pos:line="14" pos:column="42"/></literal> <operator pos:line="14" pos:column="43">&lt;&lt;<pos:position pos:line="14" pos:column="51"/></operator> <name><name pos:line="14" pos:column="46">rb<pos:position pos:line="14" pos:column="48"/></name><operator pos:line="14" pos:column="48">-&gt;<pos:position pos:line="14" pos:column="53"/></operator><name pos:line="14" pos:column="50">sd<pos:position pos:line="14" pos:column="52"/></name><operator pos:line="14" pos:column="52">-&gt;<pos:position pos:line="14" pos:column="57"/></operator><name pos:line="14" pos:column="54">path<pos:position pos:line="14" pos:column="58"/></name></name> <operator pos:line="14" pos:column="59">&lt;&lt;<pos:position pos:line="14" pos:column="67"/></operator> <literal type="string" pos:line="14" pos:column="62">" swaplog ("<pos:position pos:line="14" pos:column="74"/></literal> <operator pos:line="14" pos:column="75">&lt;&lt;<pos:position pos:line="14" pos:column="83"/></operator> <name><name pos:line="14" pos:column="78">rb<pos:position pos:line="14" pos:column="80"/></name><operator pos:line="14" pos:column="80">-&gt;<pos:position pos:line="14" pos:column="85"/></operator><name pos:line="14" pos:column="82">n_read<pos:position pos:line="14" pos:column="88"/></name></name> <operator pos:line="14" pos:column="89">&lt;&lt;<pos:position pos:line="14" pos:column="97"/></operator> <literal type="string" pos:line="14" pos:column="92">" entries)"<pos:position pos:line="14" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="105"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="15" pos:column="13">fclose<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><name><name pos:line="15" pos:column="20">rb<pos:position pos:line="15" pos:column="22"/></name><operator pos:line="15" pos:column="22">-&gt;<pos:position pos:line="15" pos:column="27"/></operator><name pos:line="15" pos:column="24">log<pos:position pos:line="15" pos:column="27"/></name></name></expr></argument>)<pos:position pos:line="15" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="29"/></expr_stmt>
            <expr_stmt><expr><name><name pos:line="16" pos:column="13">rb<pos:position pos:line="16" pos:column="15"/></name><operator pos:line="16" pos:column="15">-&gt;<pos:position pos:line="16" pos:column="20"/></operator><name pos:line="16" pos:column="17">log<pos:position pos:line="16" pos:column="20"/></name></name> <operator pos:line="16" pos:column="21">=<pos:position pos:line="16" pos:column="22"/></operator> <name pos:line="16" pos:column="23">NULL<pos:position pos:line="16" pos:column="27"/></name></expr>;<pos:position pos:line="16" pos:column="28"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="17" pos:column="13">storeCossRebuildComplete<pos:position pos:line="17" pos:column="37"/></name><argument_list pos:line="17" pos:column="37">(<argument><expr><name pos:line="17" pos:column="38">rb<pos:position pos:line="17" pos:column="40"/></name></expr></argument>)<pos:position pos:line="17" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="17" pos:column="42"/></expr_stmt>
            <return pos:line="18" pos:column="13">return;<pos:position pos:line="18" pos:column="20"/></return>
        }<pos:position pos:line="19" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="21" pos:column="9">rb<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">n_read<pos:position pos:line="21" pos:column="19"/></name></name><operator pos:line="21" pos:column="19">++<pos:position pos:line="21" pos:column="21"/></operator></expr>;<pos:position pos:line="21" pos:column="22"/></expr_stmt>

        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><name><name pos:line="23" pos:column="13">s<pos:position pos:line="23" pos:column="14"/></name><operator pos:line="23" pos:column="14">.<pos:position pos:line="23" pos:column="15"/></operator><name pos:line="23" pos:column="15">op<pos:position pos:line="23" pos:column="17"/></name></name> <operator pos:line="23" pos:column="18">&lt;=<pos:position pos:line="23" pos:column="23"/></operator> <name pos:line="23" pos:column="21">SWAP_LOG_NOP<pos:position pos:line="23" pos:column="33"/></name></expr>)<pos:position pos:line="23" pos:column="34"/></condition><then pos:line="23" pos:column="34">
            <block type="pseudo"><continue pos:line="24" pos:column="13">continue;<pos:position pos:line="24" pos:column="22"/></continue></block></then></if>

        <if pos:line="26" pos:column="9">if <condition pos:line="26" pos:column="12">(<expr><name><name pos:line="26" pos:column="13">s<pos:position pos:line="26" pos:column="14"/></name><operator pos:line="26" pos:column="14">.<pos:position pos:line="26" pos:column="15"/></operator><name pos:line="26" pos:column="15">op<pos:position pos:line="26" pos:column="17"/></name></name> <operator pos:line="26" pos:column="18">&gt;=<pos:position pos:line="26" pos:column="23"/></operator> <name pos:line="26" pos:column="21">SWAP_LOG_MAX<pos:position pos:line="26" pos:column="33"/></name></expr>)<pos:position pos:line="26" pos:column="34"/></condition><then pos:line="26" pos:column="34">
            <block type="pseudo"><continue pos:line="27" pos:column="13">continue;<pos:position pos:line="27" pos:column="22"/></continue></block></then></if>

        <expr_stmt><expr><call><name pos:line="29" pos:column="9">debugs<pos:position pos:line="29" pos:column="15"/></name><argument_list pos:line="29" pos:column="15">(<argument><expr><literal type="number" pos:line="29" pos:column="16">47<pos:position pos:line="29" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="20">3<pos:position pos:line="29" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="23">"storeCossRebuildFromSwapLog: "<pos:position pos:line="29" pos:column="54"/></literal> <operator pos:line="29" pos:column="55">&lt;&lt;<pos:position pos:line="29" pos:column="63"/></operator>
               <name><name pos:line="30" pos:column="16">swap_log_op_str<pos:position pos:line="30" pos:column="31"/></name><index pos:line="30" pos:column="31">[<expr><operator pos:line="30" pos:column="32">(<pos:position pos:line="30" pos:column="33"/></operator><name pos:line="30" pos:column="33">int<pos:position pos:line="30" pos:column="36"/></name><operator pos:line="30" pos:column="36">)<pos:position pos:line="30" pos:column="37"/></operator> <name><name pos:line="30" pos:column="38">s<pos:position pos:line="30" pos:column="39"/></name><operator pos:line="30" pos:column="39">.<pos:position pos:line="30" pos:column="40"/></operator><name pos:line="30" pos:column="40">op<pos:position pos:line="30" pos:column="42"/></name></name></expr>]<pos:position pos:line="30" pos:column="43"/></index></name>  <operator pos:line="30" pos:column="45">&lt;&lt;<pos:position pos:line="30" pos:column="53"/></operator> <literal type="string" pos:line="30" pos:column="48">" "<pos:position pos:line="30" pos:column="51"/></literal> <operator pos:line="30" pos:column="52">&lt;&lt;<pos:position pos:line="30" pos:column="60"/></operator> <call><name pos:line="30" pos:column="55">storeKeyText<pos:position pos:line="30" pos:column="67"/></name><argument_list pos:line="30" pos:column="67">(<argument><expr><name><name pos:line="30" pos:column="68">s<pos:position pos:line="30" pos:column="69"/></name><operator pos:line="30" pos:column="69">.<pos:position pos:line="30" pos:column="70"/></operator><name pos:line="30" pos:column="70">key<pos:position pos:line="30" pos:column="73"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="74"/></argument_list></call>  <operator pos:line="30" pos:column="76">&lt;&lt;<pos:position pos:line="30" pos:column="84"/></operator>
               <literal type="string" pos:line="31" pos:column="16">" "<pos:position pos:line="31" pos:column="19"/></literal><operator pos:line="31" pos:column="19">&lt;&lt;<pos:position pos:line="31" pos:column="27"/></operator> <call><name><name pos:line="31" pos:column="22">std<pos:position pos:line="31" pos:column="25"/></name><operator pos:line="31" pos:column="25">::<pos:position pos:line="31" pos:column="27"/></operator><name pos:line="31" pos:column="27">setfill<pos:position pos:line="31" pos:column="34"/></name></name><argument_list pos:line="31" pos:column="34">(<argument><expr><literal type="char" pos:line="31" pos:column="35">'0'<pos:position pos:line="31" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="31" pos:column="39"/></argument_list></call> <operator pos:line="31" pos:column="40">&lt;&lt;<pos:position pos:line="31" pos:column="48"/></operator> <name><name pos:line="31" pos:column="43">std<pos:position pos:line="31" pos:column="46"/></name><operator pos:line="31" pos:column="46">::<pos:position pos:line="31" pos:column="48"/></operator><name pos:line="31" pos:column="48">hex<pos:position pos:line="31" pos:column="51"/></name></name> <operator pos:line="31" pos:column="52">&lt;&lt;<pos:position pos:line="31" pos:column="60"/></operator> <name><name pos:line="31" pos:column="55">std<pos:position pos:line="31" pos:column="58"/></name><operator pos:line="31" pos:column="58">::<pos:position pos:line="31" pos:column="60"/></operator><name pos:line="31" pos:column="60">uppercase<pos:position pos:line="31" pos:column="69"/></name></name> <operator pos:line="31" pos:column="70">&lt;&lt;<pos:position pos:line="31" pos:column="78"/></operator>
               <call><name><name pos:line="32" pos:column="16">std<pos:position pos:line="32" pos:column="19"/></name><operator pos:line="32" pos:column="19">::<pos:position pos:line="32" pos:column="21"/></operator><name pos:line="32" pos:column="21">setw<pos:position pos:line="32" pos:column="25"/></name></name><argument_list pos:line="32" pos:column="25">(<argument><expr><literal type="number" pos:line="32" pos:column="26">8<pos:position pos:line="32" pos:column="27"/></literal></expr></argument>)<pos:position pos:line="32" pos:column="28"/></argument_list></call> <operator pos:line="32" pos:column="29">&lt;&lt;<pos:position pos:line="32" pos:column="37"/></operator> <name><name pos:line="32" pos:column="32">s<pos:position pos:line="32" pos:column="33"/></name><operator pos:line="32" pos:column="33">.<pos:position pos:line="32" pos:column="34"/></operator><name pos:line="32" pos:column="34">swap_filen<pos:position pos:line="32" pos:column="44"/></name></name></expr></argument>)<pos:position pos:line="32" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="32" pos:column="46"/></expr_stmt>

        <if pos:line="34" pos:column="9">if <condition pos:line="34" pos:column="12">(<expr><name><name pos:line="34" pos:column="13">s<pos:position pos:line="34" pos:column="14"/></name><operator pos:line="34" pos:column="14">.<pos:position pos:line="34" pos:column="15"/></operator><name pos:line="34" pos:column="15">op<pos:position pos:line="34" pos:column="17"/></name></name> <operator pos:line="34" pos:column="18">==<pos:position pos:line="34" pos:column="20"/></operator> <name pos:line="34" pos:column="21">SWAP_LOG_ADD<pos:position pos:line="34" pos:column="33"/></name></expr>)<pos:position pos:line="34" pos:column="34"/></condition><then pos:line="34" pos:column="34"> <block pos:line="34" pos:column="35">{
            <expr_stmt><expr><operator pos:line="35" pos:column="13">(<pos:position pos:line="35" pos:column="14"/></operator><name pos:line="35" pos:column="14">void<pos:position pos:line="35" pos:column="18"/></name><operator pos:line="35" pos:column="18">)<pos:position pos:line="35" pos:column="19"/></operator> <literal type="number" pos:line="35" pos:column="20">0<pos:position pos:line="35" pos:column="21"/></literal></expr>;<pos:position pos:line="35" pos:column="22"/></expr_stmt>
        }<pos:position pos:line="36" pos:column="10"/></block></then> <elseif pos:line="36" pos:column="11">else <if pos:line="36" pos:column="16">if <condition pos:line="36" pos:column="19">(<expr><name><name pos:line="36" pos:column="20">s<pos:position pos:line="36" pos:column="21"/></name><operator pos:line="36" pos:column="21">.<pos:position pos:line="36" pos:column="22"/></operator><name pos:line="36" pos:column="22">op<pos:position pos:line="36" pos:column="24"/></name></name> <operator pos:line="36" pos:column="25">==<pos:position pos:line="36" pos:column="27"/></operator> <name pos:line="36" pos:column="28">SWAP_LOG_DEL<pos:position pos:line="36" pos:column="40"/></name></expr>)<pos:position pos:line="36" pos:column="41"/></condition><then pos:line="36" pos:column="41"> <block pos:line="36" pos:column="42">{
            <comment type="block" pos:line="37" pos:column="13">/* Delete unless we already have a newer copy */</comment>

            <if pos:line="39" pos:column="13">if <condition pos:line="39" pos:column="16">(<expr><operator pos:line="39" pos:column="17">(<pos:position pos:line="39" pos:column="18"/></operator><name pos:line="39" pos:column="18">e<pos:position pos:line="39" pos:column="19"/></name> <operator pos:line="39" pos:column="20">=<pos:position pos:line="39" pos:column="21"/></operator> <call><name><name pos:line="39" pos:column="22">rb<pos:position pos:line="39" pos:column="24"/></name><operator pos:line="39" pos:column="24">-&gt;<pos:position pos:line="39" pos:column="29"/></operator><name pos:line="39" pos:column="26">sd<pos:position pos:line="39" pos:column="28"/></name><operator pos:line="39" pos:column="28">-&gt;<pos:position pos:line="39" pos:column="33"/></operator><name pos:line="39" pos:column="30">get<pos:position pos:line="39" pos:column="33"/></name></name>
                     <argument_list pos:line="40" pos:column="22">(<argument><expr><name><name pos:line="40" pos:column="23">s<pos:position pos:line="40" pos:column="24"/></name><operator pos:line="40" pos:column="24">.<pos:position pos:line="40" pos:column="25"/></operator><name pos:line="40" pos:column="25">key<pos:position pos:line="40" pos:column="28"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="29"/></argument_list></call><operator pos:line="40" pos:column="29">)<pos:position pos:line="40" pos:column="30"/></operator> <operator pos:line="40" pos:column="31">!=<pos:position pos:line="40" pos:column="33"/></operator> <name pos:line="40" pos:column="34">NULL<pos:position pos:line="40" pos:column="38"/></name> <operator pos:line="40" pos:column="39">&amp;&amp;<pos:position pos:line="40" pos:column="49"/></operator> <name><name pos:line="40" pos:column="42">s<pos:position pos:line="40" pos:column="43"/></name><operator pos:line="40" pos:column="43">.<pos:position pos:line="40" pos:column="44"/></operator><name pos:line="40" pos:column="44">lastref<pos:position pos:line="40" pos:column="51"/></name></name> <operator pos:line="40" pos:column="52">&gt;<pos:position pos:line="40" pos:column="56"/></operator> <name><name pos:line="40" pos:column="54">e<pos:position pos:line="40" pos:column="55"/></name><operator pos:line="40" pos:column="55">-&gt;<pos:position pos:line="40" pos:column="60"/></operator><name pos:line="40" pos:column="57">lastref<pos:position pos:line="40" pos:column="64"/></name></name></expr>)<pos:position pos:line="40" pos:column="65"/></condition><then pos:line="40" pos:column="65"> <block pos:line="40" pos:column="66">{
                <comment type="block" pos:line="41" pos:column="17">/*
                 * Make sure we don't unlink the file, it might be
                 * in use by a subsequent entry.  Also note that
                 * we don't have to subtract from store_swap_size
                 * because adding to store_swap_size happens in
                 * the cleanup procedure.
                 */</comment>
                <expr_stmt><expr><call><name><name pos:line="48" pos:column="17">e<pos:position pos:line="48" pos:column="18"/></name><operator pos:line="48" pos:column="18">-&gt;<pos:position pos:line="48" pos:column="23"/></operator><name pos:line="48" pos:column="20">expireNow<pos:position pos:line="48" pos:column="29"/></name></name><argument_list pos:line="48" pos:column="29">()<pos:position pos:line="48" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="32"/></expr_stmt>
                <expr_stmt><expr><call><name><name pos:line="49" pos:column="17">e<pos:position pos:line="49" pos:column="18"/></name><operator pos:line="49" pos:column="18">-&gt;<pos:position pos:line="49" pos:column="23"/></operator><name pos:line="49" pos:column="20">releaseRequest<pos:position pos:line="49" pos:column="34"/></name></name><argument_list pos:line="49" pos:column="34">()<pos:position pos:line="49" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="49" pos:column="37"/></expr_stmt>

                <if pos:line="51" pos:column="17">if <condition pos:line="51" pos:column="20">(<expr><name><name pos:line="51" pos:column="21">e<pos:position pos:line="51" pos:column="22"/></name><operator pos:line="51" pos:column="22">-&gt;<pos:position pos:line="51" pos:column="27"/></operator><name pos:line="51" pos:column="24">swap_filen<pos:position pos:line="51" pos:column="34"/></name></name> <operator pos:line="51" pos:column="35">&gt;<pos:position pos:line="51" pos:column="39"/></operator> <operator pos:line="51" pos:column="37">-<pos:position pos:line="51" pos:column="38"/></operator><literal type="number" pos:line="51" pos:column="38">1<pos:position pos:line="51" pos:column="39"/></literal></expr>)<pos:position pos:line="51" pos:column="40"/></condition><then pos:line="51" pos:column="40"> <block pos:line="51" pos:column="41">{
                    <expr_stmt><expr><name><name pos:line="52" pos:column="21">e<pos:position pos:line="52" pos:column="22"/></name><operator pos:line="52" pos:column="22">-&gt;<pos:position pos:line="52" pos:column="27"/></operator><name pos:line="52" pos:column="24">swap_filen<pos:position pos:line="52" pos:column="34"/></name></name> <operator pos:line="52" pos:column="35">=<pos:position pos:line="52" pos:column="36"/></operator> <operator pos:line="52" pos:column="37">-<pos:position pos:line="52" pos:column="38"/></operator><literal type="number" pos:line="52" pos:column="38">1<pos:position pos:line="52" pos:column="39"/></literal></expr>;<pos:position pos:line="52" pos:column="40"/></expr_stmt>
                }<pos:position pos:line="53" pos:column="18"/></block></then></if>

                <expr_stmt><expr><call><name><name pos:line="55" pos:column="17">e<pos:position pos:line="55" pos:column="18"/></name><operator pos:line="55" pos:column="18">-&gt;<pos:position pos:line="55" pos:column="23"/></operator><name pos:line="55" pos:column="20">release<pos:position pos:line="55" pos:column="27"/></name></name><argument_list pos:line="55" pos:column="27">()<pos:position pos:line="55" pos:column="29"/></argument_list></call></expr>;<pos:position pos:line="55" pos:column="30"/></expr_stmt>
                <comment type="block" pos:line="56" pos:column="17">/* Fake an unlink here, this is a bad hack :( */</comment>
                <expr_stmt><expr><call><name pos:line="57" pos:column="17">storeCossRemove<pos:position pos:line="57" pos:column="32"/></name><argument_list pos:line="57" pos:column="32">(<argument><expr><name><name pos:line="57" pos:column="33">rb<pos:position pos:line="57" pos:column="35"/></name><operator pos:line="57" pos:column="35">-&gt;<pos:position pos:line="57" pos:column="40"/></operator><name pos:line="57" pos:column="37">sd<pos:position pos:line="57" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="57" pos:column="41">e<pos:position pos:line="57" pos:column="42"/></name></expr></argument>)<pos:position pos:line="57" pos:column="43"/></argument_list></call></expr>;<pos:position pos:line="57" pos:column="44"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="58" pos:column="17">rb<pos:position pos:line="58" pos:column="19"/></name><operator pos:line="58" pos:column="19">-&gt;<pos:position pos:line="58" pos:column="24"/></operator><name pos:line="58" pos:column="21">counts<pos:position pos:line="58" pos:column="27"/></name><operator pos:line="58" pos:column="27">.<pos:position pos:line="58" pos:column="28"/></operator><name pos:line="58" pos:column="28">objcount<pos:position pos:line="58" pos:column="36"/></name></name><operator pos:line="58" pos:column="36">--<pos:position pos:line="58" pos:column="38"/></operator></expr>;<pos:position pos:line="58" pos:column="39"/></expr_stmt>
                <expr_stmt><expr><name><name pos:line="59" pos:column="17">rb<pos:position pos:line="59" pos:column="19"/></name><operator pos:line="59" pos:column="19">-&gt;<pos:position pos:line="59" pos:column="24"/></operator><name pos:line="59" pos:column="21">counts<pos:position pos:line="59" pos:column="27"/></name><operator pos:line="59" pos:column="27">.<pos:position pos:line="59" pos:column="28"/></operator><name pos:line="59" pos:column="28">cancelcount<pos:position pos:line="59" pos:column="39"/></name></name><operator pos:line="59" pos:column="39">++<pos:position pos:line="59" pos:column="41"/></operator></expr>;<pos:position pos:line="59" pos:column="42"/></expr_stmt>
            }<pos:position pos:line="60" pos:column="14"/></block></then></if>
            <continue pos:line="61" pos:column="13">continue;<pos:position pos:line="61" pos:column="22"/></continue>
        }<pos:position pos:line="62" pos:column="10"/></block></then></if></elseif> <else pos:line="62" pos:column="11">else <block pos:line="62" pos:column="16">{
            <expr_stmt><expr><name pos:line="63" pos:column="13">x<pos:position pos:line="63" pos:column="14"/></name> <operator pos:line="63" pos:column="15">=<pos:position pos:line="63" pos:column="16"/></operator> <call><name pos:line="63" pos:column="17">log<pos:position pos:line="63" pos:column="20"/></name><argument_list pos:line="63" pos:column="20">(<argument><expr><cast type="static" pos:line="63" pos:column="21">static_cast<argument_list type="generic" pos:line="63" pos:column="32">&lt;<argument><expr><name pos:line="63" pos:column="33">double<pos:position pos:line="63" pos:column="39"/></name></expr></argument>&gt;<pos:position pos:line="63" pos:column="43"/></argument_list><argument_list pos:line="63" pos:column="40">(<argument><expr><operator pos:line="63" pos:column="41">++<pos:position pos:line="63" pos:column="43"/></operator><name><name pos:line="63" pos:column="43">rb<pos:position pos:line="63" pos:column="45"/></name><operator pos:line="63" pos:column="45">-&gt;<pos:position pos:line="63" pos:column="50"/></operator><name pos:line="63" pos:column="47">counts<pos:position pos:line="63" pos:column="53"/></name><operator pos:line="63" pos:column="53">.<pos:position pos:line="63" pos:column="54"/></operator><name pos:line="63" pos:column="54">bad_log_op<pos:position pos:line="63" pos:column="64"/></name></name></expr></argument>)<pos:position pos:line="63" pos:column="65"/></argument_list></cast></expr></argument>)<pos:position pos:line="63" pos:column="66"/></argument_list></call> <operator pos:line="63" pos:column="67">/<pos:position pos:line="63" pos:column="68"/></operator> <call><name pos:line="63" pos:column="69">log<pos:position pos:line="63" pos:column="72"/></name><argument_list pos:line="63" pos:column="72">(<argument><expr><literal type="number" pos:line="63" pos:column="73">10.0<pos:position pos:line="63" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="63" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="63" pos:column="79"/></expr_stmt>

            <if pos:line="65" pos:column="13">if <condition pos:line="65" pos:column="16">(<expr><literal type="number" pos:line="65" pos:column="17">0.0<pos:position pos:line="65" pos:column="20"/></literal> <operator pos:line="65" pos:column="21">==<pos:position pos:line="65" pos:column="23"/></operator> <name pos:line="65" pos:column="24">x<pos:position pos:line="65" pos:column="25"/></name> <operator pos:line="65" pos:column="26">-<pos:position pos:line="65" pos:column="27"/></operator> <operator pos:line="65" pos:column="28">(<pos:position pos:line="65" pos:column="29"/></operator><name pos:line="65" pos:column="29">double<pos:position pos:line="65" pos:column="35"/></name><operator pos:line="65" pos:column="35">)<pos:position pos:line="65" pos:column="36"/></operator>
                    <operator pos:line="66" pos:column="21">(<pos:position pos:line="66" pos:column="22"/></operator><name pos:line="66" pos:column="22">int<pos:position pos:line="66" pos:column="25"/></name><operator pos:line="66" pos:column="25">)<pos:position pos:line="66" pos:column="26"/></operator> <name pos:line="66" pos:column="27">x<pos:position pos:line="66" pos:column="28"/></name></expr>)<pos:position pos:line="66" pos:column="29"/></condition><then pos:line="66" pos:column="29">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="67" pos:column="17">debugs<pos:position pos:line="67" pos:column="23"/></name><argument_list pos:line="67" pos:column="23">(<argument><expr><literal type="number" pos:line="67" pos:column="24">47<pos:position pos:line="67" pos:column="26"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="67" pos:column="28">1<pos:position pos:line="67" pos:column="29"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="67" pos:column="31">"WARNING: "<pos:position pos:line="67" pos:column="42"/></literal> <operator pos:line="67" pos:column="43">&lt;&lt;<pos:position pos:line="67" pos:column="51"/></operator> <name><name pos:line="67" pos:column="46">rb<pos:position pos:line="67" pos:column="48"/></name><operator pos:line="67" pos:column="48">-&gt;<pos:position pos:line="67" pos:column="53"/></operator><name pos:line="67" pos:column="50">counts<pos:position pos:line="67" pos:column="56"/></name><operator pos:line="67" pos:column="56">.<pos:position pos:line="67" pos:column="57"/></operator><name pos:line="67" pos:column="57">bad_log_op<pos:position pos:line="67" pos:column="67"/></name></name> <operator pos:line="67" pos:column="68">&lt;&lt;<pos:position pos:line="67" pos:column="76"/></operator> <literal type="string" pos:line="67" pos:column="71">" invalid swap log entries found"<pos:position pos:line="67" pos:column="104"/></literal></expr></argument>)<pos:position pos:line="67" pos:column="105"/></argument_list></call></expr>;<pos:position pos:line="67" pos:column="106"/></expr_stmt></block></then></if>

            <expr_stmt><expr><name><name pos:line="69" pos:column="13">rb<pos:position pos:line="69" pos:column="15"/></name><operator pos:line="69" pos:column="15">-&gt;<pos:position pos:line="69" pos:column="20"/></operator><name pos:line="69" pos:column="17">counts<pos:position pos:line="69" pos:column="23"/></name><operator pos:line="69" pos:column="23">.<pos:position pos:line="69" pos:column="24"/></operator><name pos:line="69" pos:column="24">invalid<pos:position pos:line="69" pos:column="31"/></name></name><operator pos:line="69" pos:column="31">++<pos:position pos:line="69" pos:column="33"/></operator></expr>;<pos:position pos:line="69" pos:column="34"/></expr_stmt>

            <continue pos:line="71" pos:column="13">continue;<pos:position pos:line="71" pos:column="22"/></continue>
        }<pos:position pos:line="72" pos:column="10"/></block></else></if>

        <if pos:line="74" pos:column="9">if <condition pos:line="74" pos:column="12">(<expr><operator pos:line="74" pos:column="13">(<pos:position pos:line="74" pos:column="14"/></operator><operator pos:line="74" pos:column="14">++<pos:position pos:line="74" pos:column="16"/></operator><name><name pos:line="74" pos:column="16">rb<pos:position pos:line="74" pos:column="18"/></name><operator pos:line="74" pos:column="18">-&gt;<pos:position pos:line="74" pos:column="23"/></operator><name pos:line="74" pos:column="20">counts<pos:position pos:line="74" pos:column="26"/></name><operator pos:line="74" pos:column="26">.<pos:position pos:line="74" pos:column="27"/></operator><name pos:line="74" pos:column="27">scancount<pos:position pos:line="74" pos:column="36"/></name></name> <operator pos:line="74" pos:column="37">&amp;<pos:position pos:line="74" pos:column="42"/></operator> <literal type="number" pos:line="74" pos:column="39">0xFFF<pos:position pos:line="74" pos:column="44"/></literal><operator pos:line="74" pos:column="44">)<pos:position pos:line="74" pos:column="45"/></operator> <operator pos:line="74" pos:column="46">==<pos:position pos:line="74" pos:column="48"/></operator> <literal type="number" pos:line="74" pos:column="49">0<pos:position pos:line="74" pos:column="50"/></literal></expr>)<pos:position pos:line="74" pos:column="51"/></condition><then pos:line="74" pos:column="51"> <block pos:line="74" pos:column="52">{

            <decl_stmt><decl><type><name><name pos:line="76" pos:column="13">struct<pos:position pos:line="76" pos:column="19"/></name> <name pos:line="76" pos:column="20">stat<pos:position pos:line="76" pos:column="24"/></name></name></type> <name pos:line="76" pos:column="25">sb<pos:position pos:line="76" pos:column="27"/></name></decl>;<pos:position pos:line="76" pos:column="28"/></decl_stmt>

            <if pos:line="78" pos:column="13">if <condition pos:line="78" pos:column="16">(<expr><literal type="number" pos:line="78" pos:column="17">0<pos:position pos:line="78" pos:column="18"/></literal> <operator pos:line="78" pos:column="19">==<pos:position pos:line="78" pos:column="21"/></operator> <call><name pos:line="78" pos:column="22">fstat<pos:position pos:line="78" pos:column="27"/></name><argument_list pos:line="78" pos:column="27">(<argument><expr><call><name pos:line="78" pos:column="28">fileno<pos:position pos:line="78" pos:column="34"/></name><argument_list pos:line="78" pos:column="34">(<argument><expr><name><name pos:line="78" pos:column="35">rb<pos:position pos:line="78" pos:column="37"/></name><operator pos:line="78" pos:column="37">-&gt;<pos:position pos:line="78" pos:column="42"/></operator><name pos:line="78" pos:column="39">log<pos:position pos:line="78" pos:column="42"/></name></name></expr></argument>)<pos:position pos:line="78" pos:column="43"/></argument_list></call></expr></argument>, <argument><expr><operator pos:line="78" pos:column="45">&amp;<pos:position pos:line="78" pos:column="50"/></operator><name pos:line="78" pos:column="46">sb<pos:position pos:line="78" pos:column="48"/></name></expr></argument>)<pos:position pos:line="78" pos:column="49"/></argument_list></call></expr>)<pos:position pos:line="78" pos:column="50"/></condition><then pos:line="78" pos:column="50">
                <block type="pseudo"><expr_stmt><expr><call><name pos:line="79" pos:column="17">storeRebuildProgress<pos:position pos:line="79" pos:column="37"/></name><argument_list pos:line="79" pos:column="37">(<argument><expr><name><name pos:line="79" pos:column="38">rb<pos:position pos:line="79" pos:column="40"/></name><operator pos:line="79" pos:column="40">-&gt;<pos:position pos:line="79" pos:column="45"/></operator><name pos:line="79" pos:column="42">sd<pos:position pos:line="79" pos:column="44"/></name><operator pos:line="79" pos:column="44">-&gt;<pos:position pos:line="79" pos:column="49"/></operator><name pos:line="79" pos:column="46">index<pos:position pos:line="79" pos:column="51"/></name></name></expr></argument>,
                                     <argument><expr><operator pos:line="80" pos:column="38">(<pos:position pos:line="80" pos:column="39"/></operator><name pos:line="80" pos:column="39">int<pos:position pos:line="80" pos:column="42"/></name><operator pos:line="80" pos:column="42">)<pos:position pos:line="80" pos:column="43"/></operator> <name><name pos:line="80" pos:column="44">sb<pos:position pos:line="80" pos:column="46"/></name><operator pos:line="80" pos:column="46">.<pos:position pos:line="80" pos:column="47"/></operator><name pos:line="80" pos:column="47">st_size<pos:position pos:line="80" pos:column="54"/></name></name> <operator pos:line="80" pos:column="55">/<pos:position pos:line="80" pos:column="56"/></operator> <name pos:line="80" pos:column="57">ss<pos:position pos:line="80" pos:column="59"/></name></expr></argument>, <argument><expr><name><name pos:line="80" pos:column="61">rb<pos:position pos:line="80" pos:column="63"/></name><operator pos:line="80" pos:column="63">-&gt;<pos:position pos:line="80" pos:column="68"/></operator><name pos:line="80" pos:column="65">n_read<pos:position pos:line="80" pos:column="71"/></name></name></expr></argument>)<pos:position pos:line="80" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="80" pos:column="73"/></expr_stmt></block></then></if>
        }<pos:position pos:line="81" pos:column="10"/></block></then></if>

        <if pos:line="83" pos:column="9">if <condition pos:line="83" pos:column="12">(<expr><call><name pos:line="83" pos:column="13">EBIT_TEST<pos:position pos:line="83" pos:column="22"/></name><argument_list pos:line="83" pos:column="22">(<argument><expr><name><name pos:line="83" pos:column="23">s<pos:position pos:line="83" pos:column="24"/></name><operator pos:line="83" pos:column="24">.<pos:position pos:line="83" pos:column="25"/></operator><name pos:line="83" pos:column="25">flags<pos:position pos:line="83" pos:column="30"/></name></name></expr></argument>, <argument><expr><name pos:line="83" pos:column="32">KEY_PRIVATE<pos:position pos:line="83" pos:column="43"/></name></expr></argument>)<pos:position pos:line="83" pos:column="44"/></argument_list></call></expr>)<pos:position pos:line="83" pos:column="45"/></condition><then pos:line="83" pos:column="45"> <block pos:line="83" pos:column="46">{
            <expr_stmt><expr><name><name pos:line="84" pos:column="13">rb<pos:position pos:line="84" pos:column="15"/></name><operator pos:line="84" pos:column="15">-&gt;<pos:position pos:line="84" pos:column="20"/></operator><name pos:line="84" pos:column="17">counts<pos:position pos:line="84" pos:column="23"/></name><operator pos:line="84" pos:column="23">.<pos:position pos:line="84" pos:column="24"/></operator><name pos:line="84" pos:column="24">badflags<pos:position pos:line="84" pos:column="32"/></name></name><operator pos:line="84" pos:column="32">++<pos:position pos:line="84" pos:column="34"/></operator></expr>;<pos:position pos:line="84" pos:column="35"/></expr_stmt>
            <continue pos:line="85" pos:column="13">continue;<pos:position pos:line="85" pos:column="22"/></continue>
        }<pos:position pos:line="86" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name pos:line="88" pos:column="9">e<pos:position pos:line="88" pos:column="10"/></name> <operator pos:line="88" pos:column="11">=<pos:position pos:line="88" pos:column="12"/></operator> <call><name><name pos:line="88" pos:column="13">rb<pos:position pos:line="88" pos:column="15"/></name><operator pos:line="88" pos:column="15">-&gt;<pos:position pos:line="88" pos:column="20"/></operator><name pos:line="88" pos:column="17">sd<pos:position pos:line="88" pos:column="19"/></name><operator pos:line="88" pos:column="19">-&gt;<pos:position pos:line="88" pos:column="24"/></operator><name pos:line="88" pos:column="21">get<pos:position pos:line="88" pos:column="24"/></name></name>
            <argument_list pos:line="89" pos:column="13">(<argument><expr><name><name pos:line="89" pos:column="14">s<pos:position pos:line="89" pos:column="15"/></name><operator pos:line="89" pos:column="15">.<pos:position pos:line="89" pos:column="16"/></operator><name pos:line="89" pos:column="16">key<pos:position pos:line="89" pos:column="19"/></name></name></expr></argument>)<pos:position pos:line="89" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="89" pos:column="21"/></expr_stmt>

        <if pos:line="91" pos:column="9">if <condition pos:line="91" pos:column="12">(<expr><name pos:line="91" pos:column="13">e<pos:position pos:line="91" pos:column="14"/></name></expr>)<pos:position pos:line="91" pos:column="15"/></condition><then pos:line="91" pos:column="15"> <block pos:line="91" pos:column="16">{
            <comment type="block" pos:line="92" pos:column="13">/* key already exists, current entry is newer */</comment>
            <comment type="block" pos:line="93" pos:column="13">/* keep old, ignore new */</comment>
            <expr_stmt><expr><name><name pos:line="94" pos:column="13">rb<pos:position pos:line="94" pos:column="15"/></name><operator pos:line="94" pos:column="15">-&gt;<pos:position pos:line="94" pos:column="20"/></operator><name pos:line="94" pos:column="17">counts<pos:position pos:line="94" pos:column="23"/></name><operator pos:line="94" pos:column="23">.<pos:position pos:line="94" pos:column="24"/></operator><name pos:line="94" pos:column="24">dupcount<pos:position pos:line="94" pos:column="32"/></name></name><operator pos:line="94" pos:column="32">++<pos:position pos:line="94" pos:column="34"/></operator></expr>;<pos:position pos:line="94" pos:column="35"/></expr_stmt>
            <continue pos:line="95" pos:column="13">continue;<pos:position pos:line="95" pos:column="22"/></continue>
        }<pos:position pos:line="96" pos:column="10"/></block></then></if>

        <comment type="block" pos:line="98" pos:column="9">/* update store_swap_size */</comment>
        <expr_stmt><expr><name><name pos:line="99" pos:column="9">rb<pos:position pos:line="99" pos:column="11"/></name><operator pos:line="99" pos:column="11">-&gt;<pos:position pos:line="99" pos:column="16"/></operator><name pos:line="99" pos:column="13">counts<pos:position pos:line="99" pos:column="19"/></name><operator pos:line="99" pos:column="19">.<pos:position pos:line="99" pos:column="20"/></operator><name pos:line="99" pos:column="20">objcount<pos:position pos:line="99" pos:column="28"/></name></name><operator pos:line="99" pos:column="28">++<pos:position pos:line="99" pos:column="30"/></operator></expr>;<pos:position pos:line="99" pos:column="31"/></expr_stmt>

        <expr_stmt><expr><name pos:line="101" pos:column="9">e<pos:position pos:line="101" pos:column="10"/></name> <operator pos:line="101" pos:column="11">=<pos:position pos:line="101" pos:column="12"/></operator> <call><name pos:line="101" pos:column="13">storeCossAddDiskRestore<pos:position pos:line="101" pos:column="36"/></name><argument_list pos:line="101" pos:column="36">(<argument><expr><name><name pos:line="101" pos:column="37">rb<pos:position pos:line="101" pos:column="39"/></name><operator pos:line="101" pos:column="39">-&gt;<pos:position pos:line="101" pos:column="44"/></operator><name pos:line="101" pos:column="41">sd<pos:position pos:line="101" pos:column="43"/></name></name></expr></argument>, <argument><expr><name><name pos:line="101" pos:column="45">s<pos:position pos:line="101" pos:column="46"/></name><operator pos:line="101" pos:column="46">.<pos:position pos:line="101" pos:column="47"/></operator><name pos:line="101" pos:column="47">key<pos:position pos:line="101" pos:column="50"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="102" pos:column="37">s<pos:position pos:line="102" pos:column="38"/></name><operator pos:line="102" pos:column="38">.<pos:position pos:line="102" pos:column="39"/></operator><name pos:line="102" pos:column="39">swap_filen<pos:position pos:line="102" pos:column="49"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="103" pos:column="37">s<pos:position pos:line="103" pos:column="38"/></name><operator pos:line="103" pos:column="38">.<pos:position pos:line="103" pos:column="39"/></operator><name pos:line="103" pos:column="39">swap_file_sz<pos:position pos:line="103" pos:column="51"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="104" pos:column="37">s<pos:position pos:line="104" pos:column="38"/></name><operator pos:line="104" pos:column="38">.<pos:position pos:line="104" pos:column="39"/></operator><name pos:line="104" pos:column="39">expires<pos:position pos:line="104" pos:column="46"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="105" pos:column="37">s<pos:position pos:line="105" pos:column="38"/></name><operator pos:line="105" pos:column="38">.<pos:position pos:line="105" pos:column="39"/></operator><name pos:line="105" pos:column="39">timestamp<pos:position pos:line="105" pos:column="48"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="106" pos:column="37">s<pos:position pos:line="106" pos:column="38"/></name><operator pos:line="106" pos:column="38">.<pos:position pos:line="106" pos:column="39"/></operator><name pos:line="106" pos:column="39">lastref<pos:position pos:line="106" pos:column="46"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="107" pos:column="37">s<pos:position pos:line="107" pos:column="38"/></name><operator pos:line="107" pos:column="38">.<pos:position pos:line="107" pos:column="39"/></operator><name pos:line="107" pos:column="39">lastmod<pos:position pos:line="107" pos:column="46"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="108" pos:column="37">s<pos:position pos:line="108" pos:column="38"/></name><operator pos:line="108" pos:column="38">.<pos:position pos:line="108" pos:column="39"/></operator><name pos:line="108" pos:column="39">refcount<pos:position pos:line="108" pos:column="47"/></name></name></expr></argument>,
                                    <argument><expr><name><name pos:line="109" pos:column="37">s<pos:position pos:line="109" pos:column="38"/></name><operator pos:line="109" pos:column="38">.<pos:position pos:line="109" pos:column="39"/></operator><name pos:line="109" pos:column="39">flags<pos:position pos:line="109" pos:column="44"/></name></name></expr></argument>,
                                    <argument><expr><operator pos:line="110" pos:column="37">(<pos:position pos:line="110" pos:column="38"/></operator><name pos:line="110" pos:column="38">int<pos:position pos:line="110" pos:column="41"/></name><operator pos:line="110" pos:column="41">)<pos:position pos:line="110" pos:column="42"/></operator> <name><name pos:line="110" pos:column="43">rb<pos:position pos:line="110" pos:column="45"/></name><operator pos:line="110" pos:column="45">-&gt;<pos:position pos:line="110" pos:column="50"/></operator><name pos:line="110" pos:column="47">flags<pos:position pos:line="110" pos:column="52"/></name><operator pos:line="110" pos:column="52">.<pos:position pos:line="110" pos:column="53"/></operator><name pos:line="110" pos:column="53">clean<pos:position pos:line="110" pos:column="58"/></name></name></expr></argument>)<pos:position pos:line="110" pos:column="59"/></argument_list></call></expr>;<pos:position pos:line="110" pos:column="60"/></expr_stmt>

        <expr_stmt><expr><call><name pos:line="112" pos:column="9">storeDirSwapLog<pos:position pos:line="112" pos:column="24"/></name><argument_list pos:line="112" pos:column="24">(<argument><expr><name pos:line="112" pos:column="25">e<pos:position pos:line="112" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="112" pos:column="28">SWAP_LOG_ADD<pos:position pos:line="112" pos:column="40"/></name></expr></argument>)<pos:position pos:line="112" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="112" pos:column="42"/></expr_stmt>
    }<pos:position pos:line="113" pos:column="6"/></block></for>

    <expr_stmt><expr><call><name pos:line="115" pos:column="5">eventAdd<pos:position pos:line="115" pos:column="13"/></name><argument_list pos:line="115" pos:column="13">(<argument><expr><literal type="string" pos:line="115" pos:column="14">"storeCossRebuild"<pos:position pos:line="115" pos:column="32"/></literal></expr></argument>, <argument><expr><name pos:line="115" pos:column="34">storeCossRebuildFromSwapLog<pos:position pos:line="115" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="115" pos:column="63">rb<pos:position pos:line="115" pos:column="65"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="115" pos:column="67">0.0<pos:position pos:line="115" pos:column="70"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="115" pos:column="72">1<pos:position pos:line="115" pos:column="73"/></literal></expr></argument>)<pos:position pos:line="115" pos:column="74"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="75"/></expr_stmt>
}<pos:position pos:line="116" pos:column="2"/></block></function></unit>

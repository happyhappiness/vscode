<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2239_last_repos.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">tunnelPeerSelectComplete<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name><name pos:line="2" pos:column="26">Comm<pos:position pos:line="2" pos:column="30"/></name><operator pos:line="2" pos:column="30">::<pos:position pos:line="2" pos:column="32"/></operator><name pos:line="2" pos:column="32">ConnectionList<pos:position pos:line="2" pos:column="46"/></name></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type><name pos:line="2" pos:column="48">peer_paths<pos:position pos:line="2" pos:column="58"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="60">ErrorState<pos:position pos:line="2" pos:column="70"/></name> <modifier pos:line="2" pos:column="71">*<pos:position pos:line="2" pos:column="72"/></modifier></type><name pos:line="2" pos:column="72">err<pos:position pos:line="2" pos:column="75"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="77">void<pos:position pos:line="2" pos:column="81"/></name> <modifier pos:line="2" pos:column="82">*<pos:position pos:line="2" pos:column="83"/></modifier></type><name pos:line="2" pos:column="83">data<pos:position pos:line="2" pos:column="87"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="88"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">TunnelStateData<pos:position pos:line="4" pos:column="20"/></name> <modifier pos:line="4" pos:column="21">*<pos:position pos:line="4" pos:column="22"/></modifier></type><name pos:line="4" pos:column="22">tunnelState<pos:position pos:line="4" pos:column="33"/></name> <init pos:line="4" pos:column="34">= <expr><operator pos:line="4" pos:column="36">(<pos:position pos:line="4" pos:column="37"/></operator><name pos:line="4" pos:column="37">TunnelStateData<pos:position pos:line="4" pos:column="52"/></name> <operator pos:line="4" pos:column="53">*<pos:position pos:line="4" pos:column="54"/></operator><operator pos:line="4" pos:column="54">)<pos:position pos:line="4" pos:column="55"/></operator><name pos:line="4" pos:column="55">data<pos:position pos:line="4" pos:column="59"/></name></expr></init></decl>;<pos:position pos:line="4" pos:column="60"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">bool<pos:position pos:line="6" pos:column="9"/></name></type> <name pos:line="6" pos:column="10">bail<pos:position pos:line="6" pos:column="14"/></name> <init pos:line="6" pos:column="15">= <expr><literal type="boolean" pos:line="6" pos:column="17">false<pos:position pos:line="6" pos:column="22"/></literal></expr></init></decl>;<pos:position pos:line="6" pos:column="23"/></decl_stmt>
    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">!<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">peer_paths<pos:position pos:line="7" pos:column="20"/></name> <operator pos:line="7" pos:column="21">||<pos:position pos:line="7" pos:column="23"/></operator> <call><name><name pos:line="7" pos:column="24">peer_paths<pos:position pos:line="7" pos:column="34"/></name><operator pos:line="7" pos:column="34">-&gt;<pos:position pos:line="7" pos:column="39"/></operator><name pos:line="7" pos:column="36">empty<pos:position pos:line="7" pos:column="41"/></name></name><argument_list pos:line="7" pos:column="41">()<pos:position pos:line="7" pos:column="43"/></argument_list></call></expr>)<pos:position pos:line="7" pos:column="44"/></condition><then pos:line="7" pos:column="44"> <block pos:line="7" pos:column="45">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">26<pos:position pos:line="8" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="20">3<pos:position pos:line="8" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="8" pos:column="23">HERE<pos:position pos:line="8" pos:column="27"/></name> <operator pos:line="8" pos:column="28">&lt;&lt;<pos:position pos:line="8" pos:column="36"/></operator> <literal type="string" pos:line="8" pos:column="31">"No paths found. Aborting CONNECT"<pos:position pos:line="8" pos:column="65"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="66"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="67"/></expr_stmt>
        <expr_stmt><expr><name pos:line="9" pos:column="9">bail<pos:position pos:line="9" pos:column="13"/></name> <operator pos:line="9" pos:column="14">=<pos:position pos:line="9" pos:column="15"/></operator> <literal type="boolean" pos:line="9" pos:column="16">true<pos:position pos:line="9" pos:column="20"/></literal></expr>;<pos:position pos:line="9" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <if pos:line="12" pos:column="5">if <condition pos:line="12" pos:column="8">(<expr><operator pos:line="12" pos:column="9">!<pos:position pos:line="12" pos:column="10"/></operator><name pos:line="12" pos:column="10">bail<pos:position pos:line="12" pos:column="14"/></name> <operator pos:line="12" pos:column="15">&amp;&amp;<pos:position pos:line="12" pos:column="25"/></operator> <name><name pos:line="12" pos:column="18">tunnelState<pos:position pos:line="12" pos:column="29"/></name><operator pos:line="12" pos:column="29">-&gt;<pos:position pos:line="12" pos:column="34"/></operator><name pos:line="12" pos:column="31">serverDestinations<pos:position pos:line="12" pos:column="49"/></name><index pos:line="12" pos:column="49">[<expr><literal type="number" pos:line="12" pos:column="50">0<pos:position pos:line="12" pos:column="51"/></literal></expr>]<pos:position pos:line="12" pos:column="52"/></index></name><operator pos:line="12" pos:column="52">-&gt;<pos:position pos:line="12" pos:column="57"/></operator><name pos:line="12" pos:column="54">peerType<pos:position pos:line="12" pos:column="62"/></name> <operator pos:line="12" pos:column="63">==<pos:position pos:line="12" pos:column="65"/></operator> <name pos:line="12" pos:column="66">PINNED<pos:position pos:line="12" pos:column="72"/></name></expr>)<pos:position pos:line="12" pos:column="73"/></condition><then pos:line="12" pos:column="73"> <block pos:line="12" pos:column="74">{
        <decl_stmt><decl><type><name><name pos:line="13" pos:column="9">Comm<pos:position pos:line="13" pos:column="13"/></name><operator pos:line="13" pos:column="13">::<pos:position pos:line="13" pos:column="15"/></operator><name pos:line="13" pos:column="15">ConnectionPointer<pos:position pos:line="13" pos:column="32"/></name></name></type> <name pos:line="13" pos:column="33">serverConn<pos:position pos:line="13" pos:column="43"/></name> <init pos:line="13" pos:column="44">= <expr><call><name pos:line="13" pos:column="46">borrowPinnedConnection<pos:position pos:line="13" pos:column="68"/></name><argument_list pos:line="13" pos:column="68">(<argument><expr><call><name><name pos:line="13" pos:column="69">tunnelState<pos:position pos:line="13" pos:column="80"/></name><operator pos:line="13" pos:column="80">-&gt;<pos:position pos:line="13" pos:column="85"/></operator><name pos:line="13" pos:column="82">request<pos:position pos:line="13" pos:column="89"/></name><operator pos:line="13" pos:column="89">.<pos:position pos:line="13" pos:column="90"/></operator><name pos:line="13" pos:column="90">getRaw<pos:position pos:line="13" pos:column="96"/></name></name><argument_list pos:line="13" pos:column="96">()<pos:position pos:line="13" pos:column="98"/></argument_list></call></expr></argument>, <argument><expr><name><name pos:line="13" pos:column="100">tunnelState<pos:position pos:line="13" pos:column="111"/></name><operator pos:line="13" pos:column="111">-&gt;<pos:position pos:line="13" pos:column="116"/></operator><name pos:line="13" pos:column="113">serverDestinations<pos:position pos:line="13" pos:column="131"/></name><index pos:line="13" pos:column="131">[<expr><literal type="number" pos:line="13" pos:column="132">0<pos:position pos:line="13" pos:column="133"/></literal></expr>]<pos:position pos:line="13" pos:column="134"/></index></name></expr></argument>)<pos:position pos:line="13" pos:column="135"/></argument_list></call></expr></init></decl>;<pos:position pos:line="13" pos:column="136"/></decl_stmt>
        <expr_stmt><expr><call><name pos:line="14" pos:column="9">debugs<pos:position pos:line="14" pos:column="15"/></name><argument_list pos:line="14" pos:column="15">(<argument><expr><literal type="number" pos:line="14" pos:column="16">26<pos:position pos:line="14" pos:column="18"/></literal></expr></argument>,<argument><expr><literal type="number" pos:line="14" pos:column="19">7<pos:position pos:line="14" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="22">"pinned peer connection: "<pos:position pos:line="14" pos:column="48"/></literal> <operator pos:line="14" pos:column="49">&lt;&lt;<pos:position pos:line="14" pos:column="57"/></operator> <name pos:line="14" pos:column="52">serverConn<pos:position pos:line="14" pos:column="62"/></name></expr></argument>)<pos:position pos:line="14" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="64"/></expr_stmt>
        <if pos:line="15" pos:column="9">if <condition pos:line="15" pos:column="12">(<expr><call><name><name pos:line="15" pos:column="13">Comm<pos:position pos:line="15" pos:column="17"/></name><operator pos:line="15" pos:column="17">::<pos:position pos:line="15" pos:column="19"/></operator><name pos:line="15" pos:column="19">IsConnOpen<pos:position pos:line="15" pos:column="29"/></name></name><argument_list pos:line="15" pos:column="29">(<argument><expr><name pos:line="15" pos:column="30">serverConn<pos:position pos:line="15" pos:column="40"/></name></expr></argument>)<pos:position pos:line="15" pos:column="41"/></argument_list></call></expr>)<pos:position pos:line="15" pos:column="42"/></condition><then pos:line="15" pos:column="42"> <block pos:line="15" pos:column="43">{
            <expr_stmt><expr><call><name pos:line="16" pos:column="13">tunnelConnectDone<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">serverConn<pos:position pos:line="16" pos:column="41"/></name></expr></argument>, <argument><expr><name><name pos:line="16" pos:column="43">Comm<pos:position pos:line="16" pos:column="47"/></name><operator pos:line="16" pos:column="47">::<pos:position pos:line="16" pos:column="49"/></operator><name pos:line="16" pos:column="49">OK<pos:position pos:line="16" pos:column="51"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="16" pos:column="53">0<pos:position pos:line="16" pos:column="54"/></literal></expr></argument>, <argument><expr><operator pos:line="16" pos:column="56">(<pos:position pos:line="16" pos:column="57"/></operator><name pos:line="16" pos:column="57">void<pos:position pos:line="16" pos:column="61"/></name> <operator pos:line="16" pos:column="62">*<pos:position pos:line="16" pos:column="63"/></operator><operator pos:line="16" pos:column="63">)<pos:position pos:line="16" pos:column="64"/></operator><name pos:line="16" pos:column="64">tunnelState<pos:position pos:line="16" pos:column="75"/></name></expr></argument>)<pos:position pos:line="16" pos:column="76"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="77"/></expr_stmt>
            <return pos:line="17" pos:column="13">return;<pos:position pos:line="17" pos:column="20"/></return>
        }<pos:position pos:line="18" pos:column="10"/></block></then></if>
        <expr_stmt><expr><name pos:line="19" pos:column="9">bail<pos:position pos:line="19" pos:column="13"/></name> <operator pos:line="19" pos:column="14">=<pos:position pos:line="19" pos:column="15"/></operator> <literal type="boolean" pos:line="19" pos:column="16">true<pos:position pos:line="19" pos:column="20"/></literal></expr>;<pos:position pos:line="19" pos:column="21"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then></if>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">bail<pos:position pos:line="22" pos:column="13"/></name></expr>)<pos:position pos:line="22" pos:column="14"/></condition><then pos:line="22" pos:column="14"> <block pos:line="22" pos:column="15">{
        <if pos:line="23" pos:column="9">if <condition pos:line="23" pos:column="12">(<expr><operator pos:line="23" pos:column="13">!<pos:position pos:line="23" pos:column="14"/></operator><name pos:line="23" pos:column="14">err<pos:position pos:line="23" pos:column="17"/></name></expr>)<pos:position pos:line="23" pos:column="18"/></condition><then pos:line="23" pos:column="18"> <block pos:line="23" pos:column="19">{
            <expr_stmt><expr><name pos:line="24" pos:column="13">err<pos:position pos:line="24" pos:column="16"/></name> <operator pos:line="24" pos:column="17">=<pos:position pos:line="24" pos:column="18"/></operator> <operator pos:line="24" pos:column="19">new<pos:position pos:line="24" pos:column="22"/></operator> <call><name pos:line="24" pos:column="23">ErrorState<pos:position pos:line="24" pos:column="33"/></name><argument_list pos:line="24" pos:column="33">(<argument><expr><name pos:line="24" pos:column="34">ERR_CANNOT_FORWARD<pos:position pos:line="24" pos:column="52"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="54">Http<pos:position pos:line="24" pos:column="58"/></name><operator pos:line="24" pos:column="58">::<pos:position pos:line="24" pos:column="60"/></operator><name pos:line="24" pos:column="60">scServiceUnavailable<pos:position pos:line="24" pos:column="80"/></name></name></expr></argument>, <argument><expr><call><name><name pos:line="24" pos:column="82">tunnelState<pos:position pos:line="24" pos:column="93"/></name><operator pos:line="24" pos:column="93">-&gt;<pos:position pos:line="24" pos:column="98"/></operator><name pos:line="24" pos:column="95">request<pos:position pos:line="24" pos:column="102"/></name><operator pos:line="24" pos:column="102">.<pos:position pos:line="24" pos:column="103"/></operator><name pos:line="24" pos:column="103">getRaw<pos:position pos:line="24" pos:column="109"/></name></name><argument_list pos:line="24" pos:column="109">()<pos:position pos:line="24" pos:column="111"/></argument_list></call></expr></argument>)<pos:position pos:line="24" pos:column="112"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="113"/></expr_stmt>
        }<pos:position pos:line="25" pos:column="10"/></block></then></if>
        <expr_stmt><expr><operator pos:line="26" pos:column="9">*<pos:position pos:line="26" pos:column="10"/></operator><name><name pos:line="26" pos:column="10">tunnelState<pos:position pos:line="26" pos:column="21"/></name><operator pos:line="26" pos:column="21">-&gt;<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="23">status_ptr<pos:position pos:line="26" pos:column="33"/></name></name> <operator pos:line="26" pos:column="34">=<pos:position pos:line="26" pos:column="35"/></operator> <name><name pos:line="26" pos:column="36">err<pos:position pos:line="26" pos:column="39"/></name><operator pos:line="26" pos:column="39">-&gt;<pos:position pos:line="26" pos:column="44"/></operator><name pos:line="26" pos:column="41">httpStatus<pos:position pos:line="26" pos:column="51"/></name></name></expr>;<pos:position pos:line="26" pos:column="52"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="27" pos:column="9">err<pos:position pos:line="27" pos:column="12"/></name><operator pos:line="27" pos:column="12">-&gt;<pos:position pos:line="27" pos:column="17"/></operator><name pos:line="27" pos:column="14">callback<pos:position pos:line="27" pos:column="22"/></name></name> <operator pos:line="27" pos:column="23">=<pos:position pos:line="27" pos:column="24"/></operator> <name pos:line="27" pos:column="25">tunnelErrorComplete<pos:position pos:line="27" pos:column="44"/></name></expr>;<pos:position pos:line="27" pos:column="45"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="28" pos:column="9">err<pos:position pos:line="28" pos:column="12"/></name><operator pos:line="28" pos:column="12">-&gt;<pos:position pos:line="28" pos:column="17"/></operator><name pos:line="28" pos:column="14">callback_data<pos:position pos:line="28" pos:column="27"/></name></name> <operator pos:line="28" pos:column="28">=<pos:position pos:line="28" pos:column="29"/></operator> <name pos:line="28" pos:column="30">tunnelState<pos:position pos:line="28" pos:column="41"/></name></expr>;<pos:position pos:line="28" pos:column="42"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">errorSend<pos:position pos:line="29" pos:column="18"/></name><argument_list pos:line="29" pos:column="18">(<argument><expr><name><name pos:line="29" pos:column="19">tunnelState<pos:position pos:line="29" pos:column="30"/></name><operator pos:line="29" pos:column="30">-&gt;<pos:position pos:line="29" pos:column="35"/></operator><name pos:line="29" pos:column="32">client<pos:position pos:line="29" pos:column="38"/></name><operator pos:line="29" pos:column="38">.<pos:position pos:line="29" pos:column="39"/></operator><name pos:line="29" pos:column="39">conn<pos:position pos:line="29" pos:column="43"/></name></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="45">err<pos:position pos:line="29" pos:column="48"/></name></expr></argument>)<pos:position pos:line="29" pos:column="49"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="50"/></expr_stmt>
        <return pos:line="30" pos:column="9">return;<pos:position pos:line="30" pos:column="16"/></return>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>
    <expr_stmt><expr><operator pos:line="32" pos:column="5">delete<pos:position pos:line="32" pos:column="11"/></operator> <name pos:line="32" pos:column="12">err<pos:position pos:line="32" pos:column="15"/></name></expr>;<pos:position pos:line="32" pos:column="16"/></expr_stmt>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><name><name pos:line="34" pos:column="9">tunnelState<pos:position pos:line="34" pos:column="20"/></name><operator pos:line="34" pos:column="20">-&gt;<pos:position pos:line="34" pos:column="25"/></operator><name pos:line="34" pos:column="22">request<pos:position pos:line="34" pos:column="29"/></name></name> <operator pos:line="34" pos:column="30">!=<pos:position pos:line="34" pos:column="32"/></operator> <name pos:line="34" pos:column="33">NULL<pos:position pos:line="34" pos:column="37"/></name></expr>)<pos:position pos:line="34" pos:column="38"/></condition><then pos:line="34" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="35" pos:column="9">tunnelState<pos:position pos:line="35" pos:column="20"/></name><operator pos:line="35" pos:column="20">-&gt;<pos:position pos:line="35" pos:column="25"/></operator><name pos:line="35" pos:column="22">request<pos:position pos:line="35" pos:column="29"/></name><operator pos:line="35" pos:column="29">-&gt;<pos:position pos:line="35" pos:column="34"/></operator><name pos:line="35" pos:column="31">hier<pos:position pos:line="35" pos:column="35"/></name><operator pos:line="35" pos:column="35">.<pos:position pos:line="35" pos:column="36"/></operator><name pos:line="35" pos:column="36">startPeerClock<pos:position pos:line="35" pos:column="50"/></name></name><argument_list pos:line="35" pos:column="50">()<pos:position pos:line="35" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="53"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="37" pos:column="5">debugs<pos:position pos:line="37" pos:column="11"/></name><argument_list pos:line="37" pos:column="11">(<argument><expr><literal type="number" pos:line="37" pos:column="12">26<pos:position pos:line="37" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="37" pos:column="16">3<pos:position pos:line="37" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="37" pos:column="19">"paths="<pos:position pos:line="37" pos:column="27"/></literal> <operator pos:line="37" pos:column="28">&lt;&lt;<pos:position pos:line="37" pos:column="36"/></operator> <call><name><name pos:line="37" pos:column="31">peer_paths<pos:position pos:line="37" pos:column="41"/></name><operator pos:line="37" pos:column="41">-&gt;<pos:position pos:line="37" pos:column="46"/></operator><name pos:line="37" pos:column="43">size<pos:position pos:line="37" pos:column="47"/></name></name><argument_list pos:line="37" pos:column="47">()<pos:position pos:line="37" pos:column="49"/></argument_list></call> <operator pos:line="37" pos:column="50">&lt;&lt;<pos:position pos:line="37" pos:column="58"/></operator> <literal type="string" pos:line="37" pos:column="53">", p[0]={"<pos:position pos:line="37" pos:column="63"/></literal> <operator pos:line="37" pos:column="64">&lt;&lt;<pos:position pos:line="37" pos:column="72"/></operator> <operator pos:line="37" pos:column="67">(<pos:position pos:line="37" pos:column="68"/></operator><operator pos:line="37" pos:column="68">*<pos:position pos:line="37" pos:column="69"/></operator><name pos:line="37" pos:column="69">peer_paths<pos:position pos:line="37" pos:column="79"/></name><operator pos:line="37" pos:column="79">)<pos:position pos:line="37" pos:column="80"/></operator><index pos:line="37" pos:column="80">[<expr><literal type="number" pos:line="37" pos:column="81">0<pos:position pos:line="37" pos:column="82"/></literal></expr>]<pos:position pos:line="37" pos:column="83"/></index> <operator pos:line="37" pos:column="84">&lt;&lt;<pos:position pos:line="37" pos:column="92"/></operator> <literal type="string" pos:line="37" pos:column="87">"}, serverDest[0]={"<pos:position pos:line="37" pos:column="107"/></literal> <operator pos:line="37" pos:column="108">&lt;&lt;<pos:position pos:line="37" pos:column="116"/></operator>
           <name><name pos:line="38" pos:column="12">tunnelState<pos:position pos:line="38" pos:column="23"/></name><operator pos:line="38" pos:column="23">-&gt;<pos:position pos:line="38" pos:column="28"/></operator><name pos:line="38" pos:column="25">serverDestinations<pos:position pos:line="38" pos:column="43"/></name><index pos:line="38" pos:column="43">[<expr><literal type="number" pos:line="38" pos:column="44">0<pos:position pos:line="38" pos:column="45"/></literal></expr>]<pos:position pos:line="38" pos:column="46"/></index></name> <operator pos:line="38" pos:column="47">&lt;&lt;<pos:position pos:line="38" pos:column="55"/></operator> <literal type="string" pos:line="38" pos:column="50">"}"<pos:position pos:line="38" pos:column="53"/></literal></expr></argument>)<pos:position pos:line="38" pos:column="54"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="55"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="40" pos:column="5">tunnelState<pos:position pos:line="40" pos:column="16"/></name><operator pos:line="40" pos:column="16">-&gt;<pos:position pos:line="40" pos:column="21"/></operator><name pos:line="40" pos:column="18">startConnecting<pos:position pos:line="40" pos:column="33"/></name></name><argument_list pos:line="40" pos:column="33">()<pos:position pos:line="40" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="36"/></expr_stmt>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

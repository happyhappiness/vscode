<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1750_squid-3.4.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">time_t<pos:position pos:line="1" pos:column="14"/></name></type>
<name pos:line="2" pos:column="1">peerDigestIncDelay<pos:position pos:line="2" pos:column="19"/></name><parameter_list pos:line="2" pos:column="19">(<parameter><decl><type><specifier pos:line="2" pos:column="20">const<pos:position pos:line="2" pos:column="25"/></specifier> <name pos:line="2" pos:column="26">PeerDigest<pos:position pos:line="2" pos:column="36"/></name> <modifier pos:line="2" pos:column="37">*<pos:position pos:line="2" pos:column="38"/></modifier></type> <name pos:line="2" pos:column="39">pd<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="42"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">assert<pos:position pos:line="4" pos:column="11"/></name><argument_list pos:line="4" pos:column="11">(<argument><expr><name pos:line="4" pos:column="12">pd<pos:position pos:line="4" pos:column="14"/></name></expr></argument>)<pos:position pos:line="4" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="16"/></expr_stmt>
    <return pos:line="5" pos:column="5">return <expr><ternary><condition><expr><name><name pos:line="5" pos:column="12">pd<pos:position pos:line="5" pos:column="14"/></name><operator pos:line="5" pos:column="14">-&gt;<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="16">times<pos:position pos:line="5" pos:column="21"/></name><operator pos:line="5" pos:column="21">.<pos:position pos:line="5" pos:column="22"/></operator><name pos:line="5" pos:column="22">retry_delay<pos:position pos:line="5" pos:column="33"/></name></name> <operator pos:line="5" pos:column="34">&gt;<pos:position pos:line="5" pos:column="38"/></operator> <literal type="number" pos:line="5" pos:column="36">0<pos:position pos:line="5" pos:column="37"/></literal></expr> ?<pos:position pos:line="5" pos:column="39"/></condition><then pos:line="5" pos:column="39">
           <expr><literal type="number" pos:line="6" pos:column="12">2<pos:position pos:line="6" pos:column="13"/></literal> <operator pos:line="6" pos:column="14">*<pos:position pos:line="6" pos:column="15"/></operator> <name><name pos:line="6" pos:column="16">pd<pos:position pos:line="6" pos:column="18"/></name><operator pos:line="6" pos:column="18">-&gt;<pos:position pos:line="6" pos:column="23"/></operator><name pos:line="6" pos:column="20">times<pos:position pos:line="6" pos:column="25"/></name><operator pos:line="6" pos:column="25">.<pos:position pos:line="6" pos:column="26"/></operator><name pos:line="6" pos:column="26">retry_delay<pos:position pos:line="6" pos:column="37"/></name></name></expr> <pos:position pos:line="6" pos:column="38"/></then><else pos:line="6" pos:column="38">:	<comment type="block" pos:line="6" pos:column="41">/* exponential backoff */</comment>
           <expr><name pos:line="7" pos:column="12">PeerDigestReqMinGap<pos:position pos:line="7" pos:column="31"/></name></expr></else></ternary></expr>;<pos:position pos:line="7" pos:column="32"/></return>	<comment type="block" pos:line="7" pos:column="33">/* minimal delay */</comment>
}<pos:position pos:line="8" pos:column="2"/></block></function></unit>

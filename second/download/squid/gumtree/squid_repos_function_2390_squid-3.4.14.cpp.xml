<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2390_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">idnsPTRLookup<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name><name pos:line="2" pos:column="21">Ip<pos:position pos:line="2" pos:column="23"/></name><operator pos:line="2" pos:column="23">::<pos:position pos:line="2" pos:column="25"/></operator><name pos:line="2" pos:column="25">Address<pos:position pos:line="2" pos:column="32"/></name></name> <modifier pos:line="2" pos:column="33">&amp;<pos:position pos:line="2" pos:column="38"/></modifier></type><name pos:line="2" pos:column="34">addr<pos:position pos:line="2" pos:column="38"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="40">IDNSCB<pos:position pos:line="2" pos:column="46"/></name> <modifier pos:line="2" pos:column="47">*<pos:position pos:line="2" pos:column="48"/></modifier></type> <name pos:line="2" pos:column="49">callback<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">void<pos:position pos:line="2" pos:column="63"/></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type><name pos:line="2" pos:column="65">data<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="70"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">idns_query<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">q<pos:position pos:line="4" pos:column="18"/></name></decl>;<pos:position pos:line="4" pos:column="19"/></decl_stmt>

    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name></type> <name><name pos:line="6" pos:column="10">ip<pos:position pos:line="6" pos:column="12"/></name><index pos:line="6" pos:column="12">[<expr><name pos:line="6" pos:column="13">MAX_IPSTRLEN<pos:position pos:line="6" pos:column="25"/></name></expr>]<pos:position pos:line="6" pos:column="26"/></index></name></decl>;<pos:position pos:line="6" pos:column="27"/></decl_stmt>

    <expr_stmt><expr><call><name><name pos:line="8" pos:column="5">addr<pos:position pos:line="8" pos:column="9"/></name><operator pos:line="8" pos:column="9">.<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">toStr<pos:position pos:line="8" pos:column="15"/></name></name><argument_list pos:line="8" pos:column="15">(<argument><expr><name pos:line="8" pos:column="16">ip<pos:position pos:line="8" pos:column="18"/></name></expr></argument>,<argument><expr><name pos:line="8" pos:column="19">MAX_IPSTRLEN<pos:position pos:line="8" pos:column="31"/></name></expr></argument>)<pos:position pos:line="8" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="33"/></expr_stmt>

    <expr_stmt><expr><name pos:line="10" pos:column="5">q<pos:position pos:line="10" pos:column="6"/></name> <operator pos:line="10" pos:column="7">=<pos:position pos:line="10" pos:column="8"/></operator> <call><name pos:line="10" pos:column="9">cbdataAlloc<pos:position pos:line="10" pos:column="20"/></name><argument_list pos:line="10" pos:column="20">(<argument><expr><name pos:line="10" pos:column="21">idns_query<pos:position pos:line="10" pos:column="31"/></name></expr></argument>)<pos:position pos:line="10" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="33"/></expr_stmt>

    <comment type="line" pos:line="12" pos:column="5">// idns_query is POD so no constructors are called after allocation</comment>
    <expr_stmt><expr><call><name><name pos:line="13" pos:column="5">q<pos:position pos:line="13" pos:column="6"/></name><operator pos:line="13" pos:column="6">-&gt;<pos:position pos:line="13" pos:column="11"/></operator><name pos:line="13" pos:column="8">xact_id<pos:position pos:line="13" pos:column="15"/></name><operator pos:line="13" pos:column="15">.<pos:position pos:line="13" pos:column="16"/></operator><name pos:line="13" pos:column="16">change<pos:position pos:line="13" pos:column="22"/></name></name><argument_list pos:line="13" pos:column="22">()<pos:position pos:line="13" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="14" pos:column="5">q<pos:position pos:line="14" pos:column="6"/></name><operator pos:line="14" pos:column="6">-&gt;<pos:position pos:line="14" pos:column="11"/></operator><name pos:line="14" pos:column="8">query_id<pos:position pos:line="14" pos:column="16"/></name></name> <operator pos:line="14" pos:column="17">=<pos:position pos:line="14" pos:column="18"/></operator> <call><name pos:line="14" pos:column="19">idnsQueryID<pos:position pos:line="14" pos:column="30"/></name><argument_list pos:line="14" pos:column="30">()<pos:position pos:line="14" pos:column="32"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="33"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name><name pos:line="16" pos:column="9">addr<pos:position pos:line="16" pos:column="13"/></name><operator pos:line="16" pos:column="13">.<pos:position pos:line="16" pos:column="14"/></operator><name pos:line="16" pos:column="14">isIPv6<pos:position pos:line="16" pos:column="20"/></name></name><argument_list pos:line="16" pos:column="20">()<pos:position pos:line="16" pos:column="22"/></argument_list></call></expr>)<pos:position pos:line="16" pos:column="23"/></condition><then pos:line="16" pos:column="23"> <block pos:line="16" pos:column="24">{
        <decl_stmt><decl><type><name><name pos:line="17" pos:column="9">struct<pos:position pos:line="17" pos:column="15"/></name> <name pos:line="17" pos:column="16">in6_addr<pos:position pos:line="17" pos:column="24"/></name></name></type> <name pos:line="17" pos:column="25">addr6<pos:position pos:line="17" pos:column="30"/></name></decl>;<pos:position pos:line="17" pos:column="31"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="18" pos:column="9">addr<pos:position pos:line="18" pos:column="13"/></name><operator pos:line="18" pos:column="13">.<pos:position pos:line="18" pos:column="14"/></operator><name pos:line="18" pos:column="14">getInAddr<pos:position pos:line="18" pos:column="23"/></name></name><argument_list pos:line="18" pos:column="23">(<argument><expr><name pos:line="18" pos:column="24">addr6<pos:position pos:line="18" pos:column="29"/></name></expr></argument>)<pos:position pos:line="18" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="31"/></expr_stmt>
        <expr_stmt><expr><name><name pos:line="19" pos:column="9">q<pos:position pos:line="19" pos:column="10"/></name><operator pos:line="19" pos:column="10">-&gt;<pos:position pos:line="19" pos:column="15"/></operator><name pos:line="19" pos:column="12">sz<pos:position pos:line="19" pos:column="14"/></name></name> <operator pos:line="19" pos:column="15">=<pos:position pos:line="19" pos:column="16"/></operator> <call><name pos:line="19" pos:column="17">rfc3596BuildPTRQuery6<pos:position pos:line="19" pos:column="38"/></name><argument_list pos:line="19" pos:column="38">(<argument><expr><name pos:line="19" pos:column="39">addr6<pos:position pos:line="19" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="46">q<pos:position pos:line="19" pos:column="47"/></name><operator pos:line="19" pos:column="47">-&gt;<pos:position pos:line="19" pos:column="52"/></operator><name pos:line="19" pos:column="49">buf<pos:position pos:line="19" pos:column="52"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="19" pos:column="54">sizeof<argument_list pos:line="19" pos:column="60">(<argument><expr><name><name pos:line="19" pos:column="61">q<pos:position pos:line="19" pos:column="62"/></name><operator pos:line="19" pos:column="62">-&gt;<pos:position pos:line="19" pos:column="67"/></operator><name pos:line="19" pos:column="64">buf<pos:position pos:line="19" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="68"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="70">q<pos:position pos:line="19" pos:column="71"/></name><operator pos:line="19" pos:column="71">-&gt;<pos:position pos:line="19" pos:column="76"/></operator><name pos:line="19" pos:column="73">query_id<pos:position pos:line="19" pos:column="81"/></name></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="83">&amp;<pos:position pos:line="19" pos:column="88"/></operator><name><name pos:line="19" pos:column="84">q<pos:position pos:line="19" pos:column="85"/></name><operator pos:line="19" pos:column="85">-&gt;<pos:position pos:line="19" pos:column="90"/></operator><name pos:line="19" pos:column="87">query<pos:position pos:line="19" pos:column="92"/></name></name></expr></argument>, <argument><expr><name><name pos:line="19" pos:column="94">Config<pos:position pos:line="19" pos:column="100"/></name><operator pos:line="19" pos:column="100">.<pos:position pos:line="19" pos:column="101"/></operator><name pos:line="19" pos:column="101">dns<pos:position pos:line="19" pos:column="104"/></name><operator pos:line="19" pos:column="104">.<pos:position pos:line="19" pos:column="105"/></operator><name pos:line="19" pos:column="105">packet_max<pos:position pos:line="19" pos:column="115"/></name></name></expr></argument>)<pos:position pos:line="19" pos:column="116"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="117"/></expr_stmt>
    }<pos:position pos:line="20" pos:column="6"/></block></then> <else pos:line="20" pos:column="7">else <block pos:line="20" pos:column="12">{
        <decl_stmt><decl><type><name><name pos:line="21" pos:column="9">struct<pos:position pos:line="21" pos:column="15"/></name> <name pos:line="21" pos:column="16">in_addr<pos:position pos:line="21" pos:column="23"/></name></name></type> <name pos:line="21" pos:column="24">addr4<pos:position pos:line="21" pos:column="29"/></name></decl>;<pos:position pos:line="21" pos:column="30"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">addr<pos:position pos:line="22" pos:column="13"/></name><operator pos:line="22" pos:column="13">.<pos:position pos:line="22" pos:column="14"/></operator><name pos:line="22" pos:column="14">getInAddr<pos:position pos:line="22" pos:column="23"/></name></name><argument_list pos:line="22" pos:column="23">(<argument><expr><name pos:line="22" pos:column="24">addr4<pos:position pos:line="22" pos:column="29"/></name></expr></argument>)<pos:position pos:line="22" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="31"/></expr_stmt>
        <comment type="line" pos:line="23" pos:column="9">// see EDNS notes at top of file why this sends 0</comment>
        <expr_stmt><expr><name><name pos:line="24" pos:column="9">q<pos:position pos:line="24" pos:column="10"/></name><operator pos:line="24" pos:column="10">-&gt;<pos:position pos:line="24" pos:column="15"/></operator><name pos:line="24" pos:column="12">sz<pos:position pos:line="24" pos:column="14"/></name></name> <operator pos:line="24" pos:column="15">=<pos:position pos:line="24" pos:column="16"/></operator> <call><name pos:line="24" pos:column="17">rfc3596BuildPTRQuery4<pos:position pos:line="24" pos:column="38"/></name><argument_list pos:line="24" pos:column="38">(<argument><expr><name pos:line="24" pos:column="39">addr4<pos:position pos:line="24" pos:column="44"/></name></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="46">q<pos:position pos:line="24" pos:column="47"/></name><operator pos:line="24" pos:column="47">-&gt;<pos:position pos:line="24" pos:column="52"/></operator><name pos:line="24" pos:column="49">buf<pos:position pos:line="24" pos:column="52"/></name></name></expr></argument>, <argument><expr><sizeof pos:line="24" pos:column="54">sizeof<argument_list pos:line="24" pos:column="60">(<argument><expr><name><name pos:line="24" pos:column="61">q<pos:position pos:line="24" pos:column="62"/></name><operator pos:line="24" pos:column="62">-&gt;<pos:position pos:line="24" pos:column="67"/></operator><name pos:line="24" pos:column="64">buf<pos:position pos:line="24" pos:column="67"/></name></name></expr></argument>)<pos:position pos:line="24" pos:column="68"/></argument_list></sizeof></expr></argument>, <argument><expr><name><name pos:line="24" pos:column="70">q<pos:position pos:line="24" pos:column="71"/></name><operator pos:line="24" pos:column="71">-&gt;<pos:position pos:line="24" pos:column="76"/></operator><name pos:line="24" pos:column="73">query_id<pos:position pos:line="24" pos:column="81"/></name></name></expr></argument>, <argument><expr><operator pos:line="24" pos:column="83">&amp;<pos:position pos:line="24" pos:column="88"/></operator><name><name pos:line="24" pos:column="84">q<pos:position pos:line="24" pos:column="85"/></name><operator pos:line="24" pos:column="85">-&gt;<pos:position pos:line="24" pos:column="90"/></operator><name pos:line="24" pos:column="87">query<pos:position pos:line="24" pos:column="92"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="94">0<pos:position pos:line="24" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="24" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="97"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></else></if>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name><name pos:line="27" pos:column="9">q<pos:position pos:line="27" pos:column="10"/></name><operator pos:line="27" pos:column="10">-&gt;<pos:position pos:line="27" pos:column="15"/></operator><name pos:line="27" pos:column="12">sz<pos:position pos:line="27" pos:column="14"/></name></name> <operator pos:line="27" pos:column="15">&lt;<pos:position pos:line="27" pos:column="19"/></operator> <literal type="number" pos:line="27" pos:column="17">0<pos:position pos:line="27" pos:column="18"/></literal></expr>)<pos:position pos:line="27" pos:column="19"/></condition><then pos:line="27" pos:column="19"> <block pos:line="27" pos:column="20">{
        <comment type="block" pos:line="28" pos:column="9">/* problem with query data -- query not sent */</comment>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">callback<pos:position pos:line="29" pos:column="17"/></name><argument_list pos:line="29" pos:column="17">(<argument><expr><name pos:line="29" pos:column="18">data<pos:position pos:line="29" pos:column="22"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="24">NULL<pos:position pos:line="29" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="number" pos:line="29" pos:column="30">0<pos:position pos:line="29" pos:column="31"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="29" pos:column="33">"Internal error"<pos:position pos:line="29" pos:column="49"/></literal></expr></argument>)<pos:position pos:line="29" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="51"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">cbdataFree<pos:position pos:line="30" pos:column="19"/></name><argument_list pos:line="30" pos:column="19">(<argument><expr><name pos:line="30" pos:column="20">q<pos:position pos:line="30" pos:column="21"/></name></expr></argument>)<pos:position pos:line="30" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="23"/></expr_stmt>
        <return pos:line="31" pos:column="9">return;<pos:position pos:line="31" pos:column="16"/></return>
    }<pos:position pos:line="32" pos:column="6"/></block></then></if>

    <if pos:line="34" pos:column="5">if <condition pos:line="34" pos:column="8">(<expr><call><name pos:line="34" pos:column="9">idnsCachedLookup<pos:position pos:line="34" pos:column="25"/></name><argument_list pos:line="34" pos:column="25">(<argument><expr><name><name pos:line="34" pos:column="26">q<pos:position pos:line="34" pos:column="27"/></name><operator pos:line="34" pos:column="27">-&gt;<pos:position pos:line="34" pos:column="32"/></operator><name pos:line="34" pos:column="29">query<pos:position pos:line="34" pos:column="34"/></name><operator pos:line="34" pos:column="34">.<pos:position pos:line="34" pos:column="35"/></operator><name pos:line="34" pos:column="35">name<pos:position pos:line="34" pos:column="39"/></name></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="41">callback<pos:position pos:line="34" pos:column="49"/></name></expr></argument>, <argument><expr><name pos:line="34" pos:column="51">data<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>)<pos:position pos:line="34" pos:column="57"/></condition><then pos:line="34" pos:column="57"> <block pos:line="34" pos:column="58">{
        <expr_stmt><expr><call><name pos:line="35" pos:column="9">cbdataFree<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><name pos:line="35" pos:column="20">q<pos:position pos:line="35" pos:column="21"/></name></expr></argument>)<pos:position pos:line="35" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="23"/></expr_stmt>
        <return pos:line="36" pos:column="9">return;<pos:position pos:line="36" pos:column="16"/></return>
    }<pos:position pos:line="37" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="39" pos:column="5">debugs<pos:position pos:line="39" pos:column="11"/></name><argument_list pos:line="39" pos:column="11">(<argument><expr><literal type="number" pos:line="39" pos:column="12">78<pos:position pos:line="39" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="39" pos:column="16">3<pos:position pos:line="39" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="19">"idnsPTRLookup: buf is "<pos:position pos:line="39" pos:column="43"/></literal> <operator pos:line="39" pos:column="44">&lt;&lt;<pos:position pos:line="39" pos:column="52"/></operator> <name><name pos:line="39" pos:column="47">q<pos:position pos:line="39" pos:column="48"/></name><operator pos:line="39" pos:column="48">-&gt;<pos:position pos:line="39" pos:column="53"/></operator><name pos:line="39" pos:column="50">sz<pos:position pos:line="39" pos:column="52"/></name></name> <operator pos:line="39" pos:column="53">&lt;&lt;<pos:position pos:line="39" pos:column="61"/></operator> <literal type="string" pos:line="39" pos:column="56">" bytes for "<pos:position pos:line="39" pos:column="69"/></literal> <operator pos:line="39" pos:column="70">&lt;&lt;<pos:position pos:line="39" pos:column="78"/></operator> <name pos:line="39" pos:column="73">ip<pos:position pos:line="39" pos:column="75"/></name> <operator pos:line="39" pos:column="76">&lt;&lt;<pos:position pos:line="39" pos:column="84"/></operator>
           <literal type="string" pos:line="40" pos:column="12">", id = 0x"<pos:position pos:line="40" pos:column="23"/></literal> <operator pos:line="40" pos:column="24">&lt;&lt;<pos:position pos:line="40" pos:column="32"/></operator> <name><name pos:line="40" pos:column="27">std<pos:position pos:line="40" pos:column="30"/></name><operator pos:line="40" pos:column="30">::<pos:position pos:line="40" pos:column="32"/></operator><name pos:line="40" pos:column="32">hex<pos:position pos:line="40" pos:column="35"/></name></name> <operator pos:line="40" pos:column="36">&lt;&lt;<pos:position pos:line="40" pos:column="44"/></operator> <name><name pos:line="40" pos:column="39">q<pos:position pos:line="40" pos:column="40"/></name><operator pos:line="40" pos:column="40">-&gt;<pos:position pos:line="40" pos:column="45"/></operator><name pos:line="40" pos:column="42">query_id<pos:position pos:line="40" pos:column="50"/></name></name></expr></argument>)<pos:position pos:line="40" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="40" pos:column="52"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="42" pos:column="5">q<pos:position pos:line="42" pos:column="6"/></name><operator pos:line="42" pos:column="6">-&gt;<pos:position pos:line="42" pos:column="11"/></operator><name pos:line="42" pos:column="8">permit_mdns<pos:position pos:line="42" pos:column="19"/></name></name> <operator pos:line="42" pos:column="20">=<pos:position pos:line="42" pos:column="21"/></operator> <name><name pos:line="42" pos:column="22">Config<pos:position pos:line="42" pos:column="28"/></name><operator pos:line="42" pos:column="28">.<pos:position pos:line="42" pos:column="29"/></operator><name pos:line="42" pos:column="29">onoff<pos:position pos:line="42" pos:column="34"/></name><operator pos:line="42" pos:column="34">.<pos:position pos:line="42" pos:column="35"/></operator><name pos:line="42" pos:column="35">dns_mdns<pos:position pos:line="42" pos:column="43"/></name></name></expr>;<pos:position pos:line="42" pos:column="44"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">idnsStartQuery<pos:position pos:line="43" pos:column="19"/></name><argument_list pos:line="43" pos:column="19">(<argument><expr><name pos:line="43" pos:column="20">q<pos:position pos:line="43" pos:column="21"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="23">callback<pos:position pos:line="43" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="43" pos:column="33">data<pos:position pos:line="43" pos:column="37"/></name></expr></argument>)<pos:position pos:line="43" pos:column="38"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="39"/></expr_stmt>
}<pos:position pos:line="44" pos:column="2"/></block></function></unit>

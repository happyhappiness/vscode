<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4919_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Fs<pos:position pos:line="2" pos:column="3"/></name><operator pos:line="2" pos:column="3">::<pos:position pos:line="2" pos:column="5"/></operator><name pos:line="2" pos:column="5">Ufs<pos:position pos:line="2" pos:column="8"/></name><operator pos:line="2" pos:column="8">::<pos:position pos:line="2" pos:column="10"/></operator><name pos:line="2" pos:column="10">UFSSwapDir<pos:position pos:line="2" pos:column="20"/></name><operator pos:line="2" pos:column="20">::<pos:position pos:line="2" pos:column="22"/></operator><name pos:line="2" pos:column="22">parseSizeL1L2<pos:position pos:line="2" pos:column="35"/></name></name><parameter_list pos:line="2" pos:column="35">()<pos:position pos:line="2" pos:column="37"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><call><name pos:line="4" pos:column="13">GetInteger<pos:position pos:line="4" pos:column="23"/></name><argument_list pos:line="4" pos:column="23">()<pos:position pos:line="4" pos:column="25"/></argument_list></call></expr></init></decl>;<pos:position pos:line="4" pos:column="26"/></decl_stmt>
    <if pos:line="5" pos:column="5">if <condition pos:line="5" pos:column="8">(<expr><name pos:line="5" pos:column="9">i<pos:position pos:line="5" pos:column="10"/></name> <operator pos:line="5" pos:column="11">&lt;=<pos:position pos:line="5" pos:column="16"/></operator> <literal type="number" pos:line="5" pos:column="14">0<pos:position pos:line="5" pos:column="15"/></literal></expr>)<pos:position pos:line="5" pos:column="16"/></condition><then pos:line="5" pos:column="16">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="6" pos:column="9">fatal<pos:position pos:line="6" pos:column="14"/></name><argument_list pos:line="6" pos:column="14">(<argument><expr><literal type="string" pos:line="6" pos:column="15">"UFSSwapDir::parseSizeL1L2: invalid size value"<pos:position pos:line="6" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="63"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="64"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><specifier pos:line="8" pos:column="5">const<pos:position pos:line="8" pos:column="10"/></specifier> <name pos:line="8" pos:column="11">uint64_t<pos:position pos:line="8" pos:column="19"/></name></type> <name pos:line="8" pos:column="20">size<pos:position pos:line="8" pos:column="24"/></name> <init pos:line="8" pos:column="25">= <expr><cast type="static" pos:line="8" pos:column="27">static_cast<argument_list type="generic" pos:line="8" pos:column="38">&lt;<argument><expr><name pos:line="8" pos:column="39">uint64_t<pos:position pos:line="8" pos:column="47"/></name></expr></argument>&gt;<pos:position pos:line="8" pos:column="51"/></argument_list><argument_list pos:line="8" pos:column="48">(<argument><expr><name pos:line="8" pos:column="49">i<pos:position pos:line="8" pos:column="50"/></name></expr></argument>)<pos:position pos:line="8" pos:column="51"/></argument_list></cast> <operator pos:line="8" pos:column="52">&lt;&lt;<pos:position pos:line="8" pos:column="60"/></operator> <literal type="number" pos:line="8" pos:column="55">20<pos:position pos:line="8" pos:column="57"/></literal></expr></init></decl>;<pos:position pos:line="8" pos:column="58"/></decl_stmt> <comment type="line" pos:line="8" pos:column="59">// MBytes to Bytes</comment>

    <comment type="block" pos:line="10" pos:column="5">/* just reconfigure it */</comment>
    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">(<expr><name pos:line="11" pos:column="9">reconfiguring<pos:position pos:line="11" pos:column="22"/></name></expr>)<pos:position pos:line="11" pos:column="23"/></condition><then pos:line="11" pos:column="23"> <block pos:line="11" pos:column="24">{
        <if pos:line="12" pos:column="9">if <condition pos:line="12" pos:column="12">(<expr><name pos:line="12" pos:column="13">size<pos:position pos:line="12" pos:column="17"/></name> <operator pos:line="12" pos:column="18">==<pos:position pos:line="12" pos:column="20"/></operator> <call><name pos:line="12" pos:column="21">maxSize<pos:position pos:line="12" pos:column="28"/></name><argument_list pos:line="12" pos:column="28">()<pos:position pos:line="12" pos:column="30"/></argument_list></call></expr>)<pos:position pos:line="12" pos:column="31"/></condition><then pos:line="12" pos:column="31">
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="13" pos:column="13">debugs<pos:position pos:line="13" pos:column="19"/></name><argument_list pos:line="13" pos:column="19">(<argument><expr><literal type="number" pos:line="13" pos:column="20">3<pos:position pos:line="13" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="13" pos:column="23">2<pos:position pos:line="13" pos:column="24"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="13" pos:column="26">"Cache dir '"<pos:position pos:line="13" pos:column="39"/></literal> <operator pos:line="13" pos:column="40">&lt;&lt;<pos:position pos:line="13" pos:column="48"/></operator> <name pos:line="13" pos:column="43">path<pos:position pos:line="13" pos:column="47"/></name> <operator pos:line="13" pos:column="48">&lt;&lt;<pos:position pos:line="13" pos:column="56"/></operator> <literal type="string" pos:line="13" pos:column="51">"' size remains unchanged at "<pos:position pos:line="13" pos:column="81"/></literal> <operator pos:line="13" pos:column="82">&lt;&lt;<pos:position pos:line="13" pos:column="90"/></operator> <name pos:line="13" pos:column="85">i<pos:position pos:line="13" pos:column="86"/></name> <operator pos:line="13" pos:column="87">&lt;&lt;<pos:position pos:line="13" pos:column="95"/></operator> <literal type="string" pos:line="13" pos:column="90">" MB"<pos:position pos:line="13" pos:column="95"/></literal></expr></argument>)<pos:position pos:line="13" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="97"/></expr_stmt></block></then>
        <else pos:line="14" pos:column="9">else
            <block type="pseudo"><expr_stmt><expr><call><name pos:line="15" pos:column="13">debugs<pos:position pos:line="15" pos:column="19"/></name><argument_list pos:line="15" pos:column="19">(<argument><expr><literal type="number" pos:line="15" pos:column="20">3<pos:position pos:line="15" pos:column="21"/></literal></expr></argument>, <argument><expr><name pos:line="15" pos:column="23">DBG_IMPORTANT<pos:position pos:line="15" pos:column="36"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="38">"Cache dir '"<pos:position pos:line="15" pos:column="51"/></literal> <operator pos:line="15" pos:column="52">&lt;&lt;<pos:position pos:line="15" pos:column="60"/></operator> <name pos:line="15" pos:column="55">path<pos:position pos:line="15" pos:column="59"/></name> <operator pos:line="15" pos:column="60">&lt;&lt;<pos:position pos:line="15" pos:column="68"/></operator> <literal type="string" pos:line="15" pos:column="63">"' size changed to "<pos:position pos:line="15" pos:column="83"/></literal> <operator pos:line="15" pos:column="84">&lt;&lt;<pos:position pos:line="15" pos:column="92"/></operator> <name pos:line="15" pos:column="87">i<pos:position pos:line="15" pos:column="88"/></name> <operator pos:line="15" pos:column="89">&lt;&lt;<pos:position pos:line="15" pos:column="97"/></operator> <literal type="string" pos:line="15" pos:column="92">" MB"<pos:position pos:line="15" pos:column="97"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="98"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="99"/></expr_stmt></block></else></if>
    }<pos:position pos:line="16" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="18" pos:column="5">max_size<pos:position pos:line="18" pos:column="13"/></name> <operator pos:line="18" pos:column="14">=<pos:position pos:line="18" pos:column="15"/></operator> <name pos:line="18" pos:column="16">size<pos:position pos:line="18" pos:column="20"/></name></expr>;<pos:position pos:line="18" pos:column="21"/></expr_stmt>

    <expr_stmt><expr><name pos:line="20" pos:column="5">l1<pos:position pos:line="20" pos:column="7"/></name> <operator pos:line="20" pos:column="8">=<pos:position pos:line="20" pos:column="9"/></operator> <call><name pos:line="20" pos:column="10">GetInteger<pos:position pos:line="20" pos:column="20"/></name><argument_list pos:line="20" pos:column="20">()<pos:position pos:line="20" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="23"/></expr_stmt>

    <if pos:line="22" pos:column="5">if <condition pos:line="22" pos:column="8">(<expr><name pos:line="22" pos:column="9">l1<pos:position pos:line="22" pos:column="11"/></name> <operator pos:line="22" pos:column="12">&lt;=<pos:position pos:line="22" pos:column="17"/></operator> <literal type="number" pos:line="22" pos:column="15">0<pos:position pos:line="22" pos:column="16"/></literal></expr>)<pos:position pos:line="22" pos:column="17"/></condition><then pos:line="22" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="23" pos:column="9">fatal<pos:position pos:line="23" pos:column="14"/></name><argument_list pos:line="23" pos:column="14">(<argument><expr><literal type="string" pos:line="23" pos:column="15">"UFSSwapDir::parseSizeL1L2: invalid level 1 directories value"<pos:position pos:line="23" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="79"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name pos:line="25" pos:column="5">l2<pos:position pos:line="25" pos:column="7"/></name> <operator pos:line="25" pos:column="8">=<pos:position pos:line="25" pos:column="9"/></operator> <call><name pos:line="25" pos:column="10">GetInteger<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">()<pos:position pos:line="25" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="25" pos:column="23"/></expr_stmt>

    <if pos:line="27" pos:column="5">if <condition pos:line="27" pos:column="8">(<expr><name pos:line="27" pos:column="9">l2<pos:position pos:line="27" pos:column="11"/></name> <operator pos:line="27" pos:column="12">&lt;=<pos:position pos:line="27" pos:column="17"/></operator> <literal type="number" pos:line="27" pos:column="15">0<pos:position pos:line="27" pos:column="16"/></literal></expr>)<pos:position pos:line="27" pos:column="17"/></condition><then pos:line="27" pos:column="17">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="28" pos:column="9">fatal<pos:position pos:line="28" pos:column="14"/></name><argument_list pos:line="28" pos:column="14">(<argument><expr><literal type="string" pos:line="28" pos:column="15">"UFSSwapDir::parseSizeL1L2: invalid level 2 directories value"<pos:position pos:line="28" pos:column="77"/></literal></expr></argument>)<pos:position pos:line="28" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="79"/></expr_stmt></block></then></if>
}<pos:position pos:line="29" pos:column="2"/></block></function></unit>

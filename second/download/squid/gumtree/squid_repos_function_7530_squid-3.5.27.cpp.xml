<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_7530_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name pos:line="2" pos:column="1">RFCNB_Session_Req<pos:position pos:line="2" pos:column="18"/></name><parameter_list pos:line="2" pos:column="18">(<parameter><decl><type><name><name pos:line="2" pos:column="19">struct<pos:position pos:line="2" pos:column="25"/></name> <name pos:line="2" pos:column="26">RFCNB_Con<pos:position pos:line="2" pos:column="35"/></name></name> <modifier pos:line="2" pos:column="36">*<pos:position pos:line="2" pos:column="37"/></modifier></type><name pos:line="2" pos:column="37">con<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>,
                  <parameter><decl><type><name pos:line="3" pos:column="19">char<pos:position pos:line="3" pos:column="23"/></name> <modifier pos:line="3" pos:column="24">*<pos:position pos:line="3" pos:column="25"/></modifier></type><name pos:line="3" pos:column="25">Called_Name<pos:position pos:line="3" pos:column="36"/></name></decl></parameter>,
                  <parameter><decl><type><name pos:line="4" pos:column="19">char<pos:position pos:line="4" pos:column="23"/></name> <modifier pos:line="4" pos:column="24">*<pos:position pos:line="4" pos:column="25"/></modifier></type><name pos:line="4" pos:column="25">Calling_Name<pos:position pos:line="4" pos:column="37"/></name></decl></parameter>,
                  <parameter><decl><type><name pos:line="5" pos:column="19">BOOL<pos:position pos:line="5" pos:column="23"/></name> <modifier pos:line="5" pos:column="24">*<pos:position pos:line="5" pos:column="25"/></modifier></type> <name pos:line="5" pos:column="26">redirect<pos:position pos:line="5" pos:column="34"/></name></decl></parameter>,
                  <parameter><decl><type><name><name pos:line="6" pos:column="19">struct<pos:position pos:line="6" pos:column="25"/></name> <name pos:line="6" pos:column="26">in_addr<pos:position pos:line="6" pos:column="33"/></name></name> <modifier pos:line="6" pos:column="34">*<pos:position pos:line="6" pos:column="35"/></modifier></type><name pos:line="6" pos:column="35">Dest_IP<pos:position pos:line="6" pos:column="42"/></name></decl></parameter>,
                  <parameter><decl><type><name pos:line="7" pos:column="19">int<pos:position pos:line="7" pos:column="22"/></name> <modifier pos:line="7" pos:column="23">*<pos:position pos:line="7" pos:column="24"/></modifier></type><name pos:line="7" pos:column="24">port<pos:position pos:line="7" pos:column="28"/></name></decl></parameter>)<pos:position pos:line="7" pos:column="29"/></parameter_list>
<block pos:line="8" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="9" pos:column="5">char<pos:position pos:line="9" pos:column="9"/></name> <modifier pos:line="9" pos:column="10">*<pos:position pos:line="9" pos:column="11"/></modifier></type><name pos:line="9" pos:column="11">sess_pkt<pos:position pos:line="9" pos:column="19"/></name></decl>;<pos:position pos:line="9" pos:column="20"/></decl_stmt>

    <comment type="block" pos:line="11" pos:column="5">/* Response packet should be no more than 9 bytes, make 16 jic */</comment>

<comment type="line" pos:line="13" pos:column="1">//    char ln1[16], ln2[16], n1[32], n2[32];</comment>
    <decl_stmt><decl><type><name pos:line="14" pos:column="5">char<pos:position pos:line="14" pos:column="9"/></name></type> <name><name pos:line="14" pos:column="10">resp<pos:position pos:line="14" pos:column="14"/></name><index pos:line="14" pos:column="14">[<expr><literal type="number" pos:line="14" pos:column="15">16<pos:position pos:line="14" pos:column="17"/></literal></expr>]<pos:position pos:line="14" pos:column="18"/></index></name></decl>;<pos:position pos:line="14" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="15" pos:column="5">int<pos:position pos:line="15" pos:column="8"/></name></type> <name pos:line="15" pos:column="9">len<pos:position pos:line="15" pos:column="12"/></name></decl>;<pos:position pos:line="15" pos:column="13"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="16" pos:column="5">struct<pos:position pos:line="16" pos:column="11"/></name> <name pos:line="16" pos:column="12">RFCNB_Pkt<pos:position pos:line="16" pos:column="21"/></name></name> <modifier pos:line="16" pos:column="22">*<pos:position pos:line="16" pos:column="23"/></modifier></type><name pos:line="16" pos:column="23">pkt<pos:position pos:line="16" pos:column="26"/></name></decl>, <decl><type ref="prev"/><name pos:line="16" pos:column="28">res_pkt<pos:position pos:line="16" pos:column="35"/></name></decl>;<pos:position pos:line="16" pos:column="36"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="17" pos:column="5">int<pos:position pos:line="17" pos:column="8"/></name></type> <name pos:line="17" pos:column="9">result<pos:position pos:line="17" pos:column="15"/></name> <init pos:line="17" pos:column="16">= <expr><literal type="number" pos:line="17" pos:column="18">0<pos:position pos:line="17" pos:column="19"/></literal></expr></init></decl>;<pos:position pos:line="17" pos:column="20"/></decl_stmt>

    <comment type="block" pos:line="19" pos:column="5">/* We build and send the session request, then read the response */</comment>

    <expr_stmt><expr><name pos:line="21" pos:column="5">pkt<pos:position pos:line="21" pos:column="8"/></name> <operator pos:line="21" pos:column="9">=<pos:position pos:line="21" pos:column="10"/></operator> <call><name pos:line="21" pos:column="11">RFCNB_Alloc_Pkt<pos:position pos:line="21" pos:column="26"/></name><argument_list pos:line="21" pos:column="26">(<argument><expr><name pos:line="21" pos:column="27">RFCNB_Pkt_Sess_Len<pos:position pos:line="21" pos:column="45"/></name></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><name pos:line="23" pos:column="9">pkt<pos:position pos:line="23" pos:column="12"/></name> <operator pos:line="23" pos:column="13">==<pos:position pos:line="23" pos:column="15"/></operator> <name pos:line="23" pos:column="16">NULL<pos:position pos:line="23" pos:column="20"/></name></expr>)<pos:position pos:line="23" pos:column="21"/></condition><then pos:line="23" pos:column="21"> <block pos:line="23" pos:column="22">{
        <return pos:line="24" pos:column="9">return <expr><operator pos:line="24" pos:column="16">(<pos:position pos:line="24" pos:column="17"/></operator><name pos:line="24" pos:column="17">RFCNBE_Bad<pos:position pos:line="24" pos:column="27"/></name><operator pos:line="24" pos:column="27">)<pos:position pos:line="24" pos:column="28"/></operator></expr>;<pos:position pos:line="24" pos:column="29"/></return>    <comment type="block" pos:line="24" pos:column="33">/* Leave the error that RFCNB_Alloc_Pkt gives) */</comment>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if>
    <expr_stmt><expr><name pos:line="26" pos:column="5">sess_pkt<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <name><name pos:line="26" pos:column="16">pkt<pos:position pos:line="26" pos:column="19"/></name><operator pos:line="26" pos:column="19">-&gt;<pos:position pos:line="26" pos:column="24"/></operator><name pos:line="26" pos:column="21">data<pos:position pos:line="26" pos:column="25"/></name></name></expr>;<pos:position pos:line="26" pos:column="26"/></expr_stmt>       <comment type="block" pos:line="26" pos:column="33">/* Get pointer to packet proper */</comment>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">sess_pkt<pos:position pos:line="28" pos:column="13"/></name><index pos:line="28" pos:column="13">[<expr><name pos:line="28" pos:column="14">RFCNB_Pkt_Type_Offset<pos:position pos:line="28" pos:column="35"/></name></expr>]<pos:position pos:line="28" pos:column="36"/></index></name> <operator pos:line="28" pos:column="37">=<pos:position pos:line="28" pos:column="38"/></operator> <name pos:line="28" pos:column="39">RFCNB_SESSION_REQUEST<pos:position pos:line="28" pos:column="60"/></name></expr>;<pos:position pos:line="28" pos:column="61"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="29" pos:column="5">RFCNB_Put_Pkt_Len<pos:position pos:line="29" pos:column="22"/></name><argument_list pos:line="29" pos:column="22">(<argument><expr><name pos:line="29" pos:column="23">sess_pkt<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">RFCNB_Pkt_Sess_Len<pos:position pos:line="29" pos:column="51"/></name> <operator pos:line="29" pos:column="52">-<pos:position pos:line="29" pos:column="53"/></operator> <name pos:line="29" pos:column="54">RFCNB_Pkt_Hdr_Len<pos:position pos:line="29" pos:column="71"/></name></expr></argument>)<pos:position pos:line="29" pos:column="72"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="73"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="30" pos:column="5">sess_pkt<pos:position pos:line="30" pos:column="13"/></name><index pos:line="30" pos:column="13">[<expr><name pos:line="30" pos:column="14">RFCNB_Pkt_N1Len_Offset<pos:position pos:line="30" pos:column="36"/></name></expr>]<pos:position pos:line="30" pos:column="37"/></index></name> <operator pos:line="30" pos:column="38">=<pos:position pos:line="30" pos:column="39"/></operator> <literal type="number" pos:line="30" pos:column="40">32<pos:position pos:line="30" pos:column="42"/></literal></expr>;<pos:position pos:line="30" pos:column="43"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="31" pos:column="5">sess_pkt<pos:position pos:line="31" pos:column="13"/></name><index pos:line="31" pos:column="13">[<expr><name pos:line="31" pos:column="14">RFCNB_Pkt_N2Len_Offset<pos:position pos:line="31" pos:column="36"/></name></expr>]<pos:position pos:line="31" pos:column="37"/></index></name> <operator pos:line="31" pos:column="38">=<pos:position pos:line="31" pos:column="39"/></operator> <literal type="number" pos:line="31" pos:column="40">32<pos:position pos:line="31" pos:column="42"/></literal></expr>;<pos:position pos:line="31" pos:column="43"/></expr_stmt>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">RFCNB_CvtPad_Name<pos:position pos:line="33" pos:column="22"/></name><argument_list pos:line="33" pos:column="22">(<argument><expr><name pos:line="33" pos:column="23">Called_Name<pos:position pos:line="33" pos:column="34"/></name></expr></argument>, <argument><expr><operator pos:line="33" pos:column="36">(<pos:position pos:line="33" pos:column="37"/></operator><name pos:line="33" pos:column="37">sess_pkt<pos:position pos:line="33" pos:column="45"/></name> <operator pos:line="33" pos:column="46">+<pos:position pos:line="33" pos:column="47"/></operator> <name pos:line="33" pos:column="48">RFCNB_Pkt_Called_Offset<pos:position pos:line="33" pos:column="71"/></name><operator pos:line="33" pos:column="71">)<pos:position pos:line="33" pos:column="72"/></operator></expr></argument>)<pos:position pos:line="33" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="74"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="34" pos:column="5">RFCNB_CvtPad_Name<pos:position pos:line="34" pos:column="22"/></name><argument_list pos:line="34" pos:column="22">(<argument><expr><name pos:line="34" pos:column="23">Calling_Name<pos:position pos:line="34" pos:column="35"/></name></expr></argument>, <argument><expr><operator pos:line="34" pos:column="37">(<pos:position pos:line="34" pos:column="38"/></operator><name pos:line="34" pos:column="38">sess_pkt<pos:position pos:line="34" pos:column="46"/></name> <operator pos:line="34" pos:column="47">+<pos:position pos:line="34" pos:column="48"/></operator> <name pos:line="34" pos:column="49">RFCNB_Pkt_Calling_Offset<pos:position pos:line="34" pos:column="73"/></name><operator pos:line="34" pos:column="73">)<pos:position pos:line="34" pos:column="74"/></operator></expr></argument>)<pos:position pos:line="34" pos:column="75"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="76"/></expr_stmt>

    <comment type="block" pos:line="36" pos:column="5">/* Now send the packet */</comment>

<cpp:ifdef pos:line="38" pos:column="1">#<cpp:directive pos:line="38" pos:column="2">ifdef<pos:position pos:line="38" pos:column="7"/></cpp:directive> <name pos:line="38" pos:column="8">RFCNB_DEBUG<pos:position pos:line="38" pos:column="19"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="39" pos:column="5">fprintf<pos:position pos:line="39" pos:column="12"/></name><argument_list pos:line="39" pos:column="12">(<argument><expr><name pos:line="39" pos:column="13">stderr<pos:position pos:line="39" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="39" pos:column="21">"Sending packet: "<pos:position pos:line="39" pos:column="39"/></literal></expr></argument>)<pos:position pos:line="39" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="39" pos:column="41"/></expr_stmt>
<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>

    <if pos:line="42" pos:column="5">if <condition pos:line="42" pos:column="8">(<expr><operator pos:line="42" pos:column="9">(<pos:position pos:line="42" pos:column="10"/></operator><name pos:line="42" pos:column="10">len<pos:position pos:line="42" pos:column="13"/></name> <operator pos:line="42" pos:column="14">=<pos:position pos:line="42" pos:column="15"/></operator> <call><name pos:line="42" pos:column="16">RFCNB_Put_Pkt<pos:position pos:line="42" pos:column="29"/></name><argument_list pos:line="42" pos:column="29">(<argument><expr><name pos:line="42" pos:column="30">con<pos:position pos:line="42" pos:column="33"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="35">pkt<pos:position pos:line="42" pos:column="38"/></name></expr></argument>, <argument><expr><name pos:line="42" pos:column="40">RFCNB_Pkt_Sess_Len<pos:position pos:line="42" pos:column="58"/></name></expr></argument>)<pos:position pos:line="42" pos:column="59"/></argument_list></call><operator pos:line="42" pos:column="59">)<pos:position pos:line="42" pos:column="60"/></operator> <operator pos:line="42" pos:column="61">&lt;<pos:position pos:line="42" pos:column="65"/></operator> <literal type="number" pos:line="42" pos:column="63">0<pos:position pos:line="42" pos:column="64"/></literal></expr>)<pos:position pos:line="42" pos:column="65"/></condition><then pos:line="42" pos:column="65"> <block pos:line="42" pos:column="66">{
        <expr_stmt><expr><call><name pos:line="43" pos:column="9">RFCNB_Free_Pkt<pos:position pos:line="43" pos:column="23"/></name><argument_list pos:line="43" pos:column="23">(<argument><expr><name pos:line="43" pos:column="24">pkt<pos:position pos:line="43" pos:column="27"/></name></expr></argument>)<pos:position pos:line="43" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="29"/></expr_stmt>
        <return pos:line="44" pos:column="9">return <expr><operator pos:line="44" pos:column="16">(<pos:position pos:line="44" pos:column="17"/></operator><name pos:line="44" pos:column="17">RFCNBE_Bad<pos:position pos:line="44" pos:column="27"/></name><operator pos:line="44" pos:column="27">)<pos:position pos:line="44" pos:column="28"/></operator></expr>;<pos:position pos:line="44" pos:column="29"/></return>    <comment type="block" pos:line="44" pos:column="33">/* Should be able to write that lot ... */</comment>

    }<pos:position pos:line="46" pos:column="6"/></block></then></if>
<cpp:ifdef pos:line="47" pos:column="1">#<cpp:directive pos:line="47" pos:column="2">ifdef<pos:position pos:line="47" pos:column="7"/></cpp:directive> <name pos:line="47" pos:column="8">RFCNB_DEBUG<pos:position pos:line="47" pos:column="19"/></name></cpp:ifdef>
    <expr_stmt><expr><call><name pos:line="48" pos:column="5">fprintf<pos:position pos:line="48" pos:column="12"/></name><argument_list pos:line="48" pos:column="12">(<argument><expr><name pos:line="48" pos:column="13">stderr<pos:position pos:line="48" pos:column="19"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="48" pos:column="21">"Getting packet.\n"<pos:position pos:line="48" pos:column="40"/></literal></expr></argument>)<pos:position pos:line="48" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="48" pos:column="42"/></expr_stmt>
<cpp:endif pos:line="49" pos:column="1">#<cpp:directive pos:line="49" pos:column="2">endif<pos:position pos:line="49" pos:column="7"/></cpp:directive></cpp:endif>

    <expr_stmt><expr><name><name pos:line="51" pos:column="5">res_pkt<pos:position pos:line="51" pos:column="12"/></name><operator pos:line="51" pos:column="12">.<pos:position pos:line="51" pos:column="13"/></operator><name pos:line="51" pos:column="13">data<pos:position pos:line="51" pos:column="17"/></name></name> <operator pos:line="51" pos:column="18">=<pos:position pos:line="51" pos:column="19"/></operator> <name pos:line="51" pos:column="20">resp<pos:position pos:line="51" pos:column="24"/></name></expr>;<pos:position pos:line="51" pos:column="25"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="52" pos:column="5">res_pkt<pos:position pos:line="52" pos:column="12"/></name><operator pos:line="52" pos:column="12">.<pos:position pos:line="52" pos:column="13"/></operator><name pos:line="52" pos:column="13">len<pos:position pos:line="52" pos:column="16"/></name></name> <operator pos:line="52" pos:column="17">=<pos:position pos:line="52" pos:column="18"/></operator> <sizeof pos:line="52" pos:column="19">sizeof<argument_list pos:line="52" pos:column="25">(<argument><expr><name pos:line="52" pos:column="26">resp<pos:position pos:line="52" pos:column="30"/></name></expr></argument>)<pos:position pos:line="52" pos:column="31"/></argument_list></sizeof></expr>;<pos:position pos:line="52" pos:column="32"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="53" pos:column="5">res_pkt<pos:position pos:line="53" pos:column="12"/></name><operator pos:line="53" pos:column="12">.<pos:position pos:line="53" pos:column="13"/></operator><name pos:line="53" pos:column="13">next<pos:position pos:line="53" pos:column="17"/></name></name> <operator pos:line="53" pos:column="18">=<pos:position pos:line="53" pos:column="19"/></operator> <name pos:line="53" pos:column="20">NULL<pos:position pos:line="53" pos:column="24"/></name></expr>;<pos:position pos:line="53" pos:column="25"/></expr_stmt>

    <if pos:line="55" pos:column="5">if <condition pos:line="55" pos:column="8">(<expr><operator pos:line="55" pos:column="9">(<pos:position pos:line="55" pos:column="10"/></operator><name pos:line="55" pos:column="10">len<pos:position pos:line="55" pos:column="13"/></name> <operator pos:line="55" pos:column="14">=<pos:position pos:line="55" pos:column="15"/></operator> <call><name pos:line="55" pos:column="16">RFCNB_Get_Pkt<pos:position pos:line="55" pos:column="29"/></name><argument_list pos:line="55" pos:column="29">(<argument><expr><name pos:line="55" pos:column="30">con<pos:position pos:line="55" pos:column="33"/></name></expr></argument>, <argument><expr><operator pos:line="55" pos:column="35">&amp;<pos:position pos:line="55" pos:column="40"/></operator><name pos:line="55" pos:column="36">res_pkt<pos:position pos:line="55" pos:column="43"/></name></expr></argument>, <argument><expr><sizeof pos:line="55" pos:column="45">sizeof<argument_list pos:line="55" pos:column="51">(<argument><expr><name pos:line="55" pos:column="52">resp<pos:position pos:line="55" pos:column="56"/></name></expr></argument>)<pos:position pos:line="55" pos:column="57"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="55" pos:column="58"/></argument_list></call><operator pos:line="55" pos:column="58">)<pos:position pos:line="55" pos:column="59"/></operator> <operator pos:line="55" pos:column="60">&lt;<pos:position pos:line="55" pos:column="64"/></operator> <literal type="number" pos:line="55" pos:column="62">0<pos:position pos:line="55" pos:column="63"/></literal></expr>)<pos:position pos:line="55" pos:column="64"/></condition><then pos:line="55" pos:column="64"> <block pos:line="55" pos:column="65">{
        <expr_stmt><expr><call><name pos:line="56" pos:column="9">RFCNB_Free_Pkt<pos:position pos:line="56" pos:column="23"/></name><argument_list pos:line="56" pos:column="23">(<argument><expr><name pos:line="56" pos:column="24">pkt<pos:position pos:line="56" pos:column="27"/></name></expr></argument>)<pos:position pos:line="56" pos:column="28"/></argument_list></call></expr>;<pos:position pos:line="56" pos:column="29"/></expr_stmt>
        <return pos:line="57" pos:column="9">return <expr><operator pos:line="57" pos:column="16">(<pos:position pos:line="57" pos:column="17"/></operator><name pos:line="57" pos:column="17">RFCNBE_Bad<pos:position pos:line="57" pos:column="27"/></name><operator pos:line="57" pos:column="27">)<pos:position pos:line="57" pos:column="28"/></operator></expr>;<pos:position pos:line="57" pos:column="29"/></return>

    }<pos:position pos:line="59" pos:column="6"/></block></then></if>
    <comment type="block" pos:line="60" pos:column="5">/* Now analyze the packet ... */</comment>

    <switch pos:line="62" pos:column="5">switch <condition pos:line="62" pos:column="12">(<expr><call><name pos:line="62" pos:column="13">RFCNB_Pkt_Type<pos:position pos:line="62" pos:column="27"/></name><argument_list pos:line="62" pos:column="27">(<argument><expr><name pos:line="62" pos:column="28">resp<pos:position pos:line="62" pos:column="32"/></name></expr></argument>)<pos:position pos:line="62" pos:column="33"/></argument_list></call></expr>)<pos:position pos:line="62" pos:column="34"/></condition> <block pos:line="62" pos:column="35">{

    <case pos:line="64" pos:column="5">case <expr><name pos:line="64" pos:column="10">RFCNB_SESSION_REJ<pos:position pos:line="64" pos:column="27"/></name></expr>:<pos:position pos:line="64" pos:column="28"/></case>     <comment type="block" pos:line="64" pos:column="33">/* Didnt like us ... too bad */</comment>

        <comment type="block" pos:line="66" pos:column="9">/* Why did we get rejected ? */</comment>

        <switch pos:line="68" pos:column="9">switch <condition pos:line="68" pos:column="16">(<expr><call><name pos:line="68" pos:column="17">CVAL<pos:position pos:line="68" pos:column="21"/></name><argument_list pos:line="68" pos:column="21">(<argument><expr><name pos:line="68" pos:column="22">resp<pos:position pos:line="68" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="68" pos:column="28">RFCNB_Pkt_Error_Offset<pos:position pos:line="68" pos:column="50"/></name></expr></argument>)<pos:position pos:line="68" pos:column="51"/></argument_list></call></expr>)<pos:position pos:line="68" pos:column="52"/></condition> <block pos:line="68" pos:column="53">{

        <case pos:line="70" pos:column="9">case <expr><literal type="number" pos:line="70" pos:column="14">0x80<pos:position pos:line="70" pos:column="18"/></literal></expr>:<pos:position pos:line="70" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="71" pos:column="13">RFCNB_errno<pos:position pos:line="71" pos:column="24"/></name> <operator pos:line="71" pos:column="25">=<pos:position pos:line="71" pos:column="26"/></operator> <name pos:line="71" pos:column="27">RFCNBE_CallRejNLOCN<pos:position pos:line="71" pos:column="46"/></name></expr>;<pos:position pos:line="71" pos:column="47"/></expr_stmt>
            <break pos:line="72" pos:column="13">break;<pos:position pos:line="72" pos:column="19"/></break>
        <case pos:line="73" pos:column="9">case <expr><literal type="number" pos:line="73" pos:column="14">0x81<pos:position pos:line="73" pos:column="18"/></literal></expr>:<pos:position pos:line="73" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="74" pos:column="13">RFCNB_errno<pos:position pos:line="74" pos:column="24"/></name> <operator pos:line="74" pos:column="25">=<pos:position pos:line="74" pos:column="26"/></operator> <name pos:line="74" pos:column="27">RFCNBE_CallRejNLFCN<pos:position pos:line="74" pos:column="46"/></name></expr>;<pos:position pos:line="74" pos:column="47"/></expr_stmt>
            <break pos:line="75" pos:column="13">break;<pos:position pos:line="75" pos:column="19"/></break>
        <case pos:line="76" pos:column="9">case <expr><literal type="number" pos:line="76" pos:column="14">0x82<pos:position pos:line="76" pos:column="18"/></literal></expr>:<pos:position pos:line="76" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="77" pos:column="13">RFCNB_errno<pos:position pos:line="77" pos:column="24"/></name> <operator pos:line="77" pos:column="25">=<pos:position pos:line="77" pos:column="26"/></operator> <name pos:line="77" pos:column="27">RFCNBE_CallRejCNNP<pos:position pos:line="77" pos:column="45"/></name></expr>;<pos:position pos:line="77" pos:column="46"/></expr_stmt>
            <break pos:line="78" pos:column="13">break;<pos:position pos:line="78" pos:column="19"/></break>
        <case pos:line="79" pos:column="9">case <expr><literal type="number" pos:line="79" pos:column="14">0x83<pos:position pos:line="79" pos:column="18"/></literal></expr>:<pos:position pos:line="79" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="80" pos:column="13">RFCNB_errno<pos:position pos:line="80" pos:column="24"/></name> <operator pos:line="80" pos:column="25">=<pos:position pos:line="80" pos:column="26"/></operator> <name pos:line="80" pos:column="27">RFCNBE_CallRejInfRes<pos:position pos:line="80" pos:column="47"/></name></expr>;<pos:position pos:line="80" pos:column="48"/></expr_stmt>
            <break pos:line="81" pos:column="13">break;<pos:position pos:line="81" pos:column="19"/></break>
        <case pos:line="82" pos:column="9">case <expr><literal type="number" pos:line="82" pos:column="14">0x8F<pos:position pos:line="82" pos:column="18"/></literal></expr>:<pos:position pos:line="82" pos:column="19"/></case>
            <expr_stmt><expr><name pos:line="83" pos:column="13">RFCNB_errno<pos:position pos:line="83" pos:column="24"/></name> <operator pos:line="83" pos:column="25">=<pos:position pos:line="83" pos:column="26"/></operator> <name pos:line="83" pos:column="27">RFCNBE_CallRejUnSpec<pos:position pos:line="83" pos:column="47"/></name></expr>;<pos:position pos:line="83" pos:column="48"/></expr_stmt>
            <break pos:line="84" pos:column="13">break;<pos:position pos:line="84" pos:column="19"/></break>
        <default pos:line="85" pos:column="9">default:<pos:position pos:line="85" pos:column="17"/></default>
            <expr_stmt><expr><name pos:line="86" pos:column="13">RFCNB_errno<pos:position pos:line="86" pos:column="24"/></name> <operator pos:line="86" pos:column="25">=<pos:position pos:line="86" pos:column="26"/></operator> <name pos:line="86" pos:column="27">RFCNBE_ProtErr<pos:position pos:line="86" pos:column="41"/></name></expr>;<pos:position pos:line="86" pos:column="42"/></expr_stmt>
            <break pos:line="87" pos:column="13">break;<pos:position pos:line="87" pos:column="19"/></break>
        }<pos:position pos:line="88" pos:column="10"/></block></switch>

        <expr_stmt><expr><name pos:line="90" pos:column="9">result<pos:position pos:line="90" pos:column="15"/></name> <operator pos:line="90" pos:column="16">=<pos:position pos:line="90" pos:column="17"/></operator> <operator pos:line="90" pos:column="18">(<pos:position pos:line="90" pos:column="19"/></operator><name pos:line="90" pos:column="19">RFCNBE_Bad<pos:position pos:line="90" pos:column="29"/></name><operator pos:line="90" pos:column="29">)<pos:position pos:line="90" pos:column="30"/></operator></expr>;<pos:position pos:line="90" pos:column="31"/></expr_stmt>
        <break pos:line="91" pos:column="9">break;<pos:position pos:line="91" pos:column="15"/></break>

    <case pos:line="93" pos:column="5">case <expr><name pos:line="93" pos:column="10">RFCNB_SESSION_ACK<pos:position pos:line="93" pos:column="27"/></name></expr>:<pos:position pos:line="93" pos:column="28"/></case>     <comment type="block" pos:line="93" pos:column="33">/* Got what we wanted ...      */</comment>

        <expr_stmt><expr><name pos:line="95" pos:column="9">result<pos:position pos:line="95" pos:column="15"/></name> <operator pos:line="95" pos:column="16">=<pos:position pos:line="95" pos:column="17"/></operator> <operator pos:line="95" pos:column="18">(<pos:position pos:line="95" pos:column="19"/></operator><literal type="number" pos:line="95" pos:column="19">0<pos:position pos:line="95" pos:column="20"/></literal><operator pos:line="95" pos:column="20">)<pos:position pos:line="95" pos:column="21"/></operator></expr>;<pos:position pos:line="95" pos:column="22"/></expr_stmt>
        <break pos:line="96" pos:column="9">break;<pos:position pos:line="96" pos:column="15"/></break>

    <case pos:line="98" pos:column="5">case <expr><name pos:line="98" pos:column="10">RFCNB_SESSION_RETARGET<pos:position pos:line="98" pos:column="32"/></name></expr>:<pos:position pos:line="98" pos:column="33"/></case>        <comment type="block" pos:line="98" pos:column="41">/* Go elsewhere                */</comment>

        <expr_stmt><expr><operator pos:line="100" pos:column="9">*<pos:position pos:line="100" pos:column="10"/></operator><name pos:line="100" pos:column="10">redirect<pos:position pos:line="100" pos:column="18"/></name> <operator pos:line="100" pos:column="19">=<pos:position pos:line="100" pos:column="20"/></operator> <name pos:line="100" pos:column="21">TRUE<pos:position pos:line="100" pos:column="25"/></name></expr>;<pos:position pos:line="100" pos:column="26"/></expr_stmt>       <comment type="block" pos:line="100" pos:column="33">/* Copy port and ip addr       */</comment>

        <expr_stmt><expr><call><name pos:line="102" pos:column="9">memcpy<pos:position pos:line="102" pos:column="15"/></name><argument_list pos:line="102" pos:column="15">(<argument><expr><name pos:line="102" pos:column="16">Dest_IP<pos:position pos:line="102" pos:column="23"/></name></expr></argument>, <argument><expr><operator pos:line="102" pos:column="25">(<pos:position pos:line="102" pos:column="26"/></operator><name pos:line="102" pos:column="26">resp<pos:position pos:line="102" pos:column="30"/></name> <operator pos:line="102" pos:column="31">+<pos:position pos:line="102" pos:column="32"/></operator> <name pos:line="102" pos:column="33">RFCNB_Pkt_IP_Offset<pos:position pos:line="102" pos:column="52"/></name><operator pos:line="102" pos:column="52">)<pos:position pos:line="102" pos:column="53"/></operator></expr></argument>, <argument><expr><sizeof pos:line="102" pos:column="55">sizeof<argument_list pos:line="102" pos:column="61">(<argument><expr pos:line="102" pos:column="62">struct <name pos:line="102" pos:column="69">in_addr<pos:position pos:line="102" pos:column="76"/></name></expr></argument>)<pos:position pos:line="102" pos:column="77"/></argument_list></sizeof></expr></argument>)<pos:position pos:line="102" pos:column="78"/></argument_list></call></expr>;<pos:position pos:line="102" pos:column="79"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="103" pos:column="9">*<pos:position pos:line="103" pos:column="10"/></operator><name pos:line="103" pos:column="10">port<pos:position pos:line="103" pos:column="14"/></name> <operator pos:line="103" pos:column="15">=<pos:position pos:line="103" pos:column="16"/></operator> <call><name pos:line="103" pos:column="17">SVAL<pos:position pos:line="103" pos:column="21"/></name><argument_list pos:line="103" pos:column="21">(<argument><expr><name pos:line="103" pos:column="22">resp<pos:position pos:line="103" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="103" pos:column="28">RFCNB_Pkt_Port_Offset<pos:position pos:line="103" pos:column="49"/></name></expr></argument>)<pos:position pos:line="103" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="103" pos:column="51"/></expr_stmt>

        <expr_stmt><expr><name pos:line="105" pos:column="9">result<pos:position pos:line="105" pos:column="15"/></name> <operator pos:line="105" pos:column="16">=<pos:position pos:line="105" pos:column="17"/></operator> <operator pos:line="105" pos:column="18">(<pos:position pos:line="105" pos:column="19"/></operator><literal type="number" pos:line="105" pos:column="19">0<pos:position pos:line="105" pos:column="20"/></literal><operator pos:line="105" pos:column="20">)<pos:position pos:line="105" pos:column="21"/></operator></expr>;<pos:position pos:line="105" pos:column="22"/></expr_stmt>
        <break pos:line="106" pos:column="9">break;<pos:position pos:line="106" pos:column="15"/></break>

    <default pos:line="108" pos:column="5">default:<pos:position pos:line="108" pos:column="13"/></default>                    <comment type="block" pos:line="108" pos:column="33">/* A protocol error */</comment>

        <expr_stmt><expr><name pos:line="110" pos:column="9">RFCNB_errno<pos:position pos:line="110" pos:column="20"/></name> <operator pos:line="110" pos:column="21">=<pos:position pos:line="110" pos:column="22"/></operator> <name pos:line="110" pos:column="23">RFCNBE_ProtErr<pos:position pos:line="110" pos:column="37"/></name></expr>;<pos:position pos:line="110" pos:column="38"/></expr_stmt>
        <expr_stmt><expr><name pos:line="111" pos:column="9">result<pos:position pos:line="111" pos:column="15"/></name> <operator pos:line="111" pos:column="16">=<pos:position pos:line="111" pos:column="17"/></operator> <operator pos:line="111" pos:column="18">(<pos:position pos:line="111" pos:column="19"/></operator><name pos:line="111" pos:column="19">RFCNBE_Bad<pos:position pos:line="111" pos:column="29"/></name><operator pos:line="111" pos:column="29">)<pos:position pos:line="111" pos:column="30"/></operator></expr>;<pos:position pos:line="111" pos:column="31"/></expr_stmt>
        <break pos:line="112" pos:column="9">break;<pos:position pos:line="112" pos:column="15"/></break>
    }<pos:position pos:line="113" pos:column="6"/></block></switch>

    <expr_stmt><expr><call><name pos:line="115" pos:column="5">RFCNB_Free_Pkt<pos:position pos:line="115" pos:column="19"/></name><argument_list pos:line="115" pos:column="19">(<argument><expr><name pos:line="115" pos:column="20">pkt<pos:position pos:line="115" pos:column="23"/></name></expr></argument>)<pos:position pos:line="115" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="115" pos:column="25"/></expr_stmt>
    <return pos:line="116" pos:column="5">return <expr><name pos:line="116" pos:column="12">result<pos:position pos:line="116" pos:column="18"/></name></expr>;<pos:position pos:line="116" pos:column="19"/></return>
}<pos:position pos:line="117" pos:column="2"/></block></function></unit>

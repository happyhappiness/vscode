<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4557_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Store<pos:position pos:line="2" pos:column="6"/></name><operator pos:line="2" pos:column="6">::<pos:position pos:line="2" pos:column="8"/></operator><name pos:line="2" pos:column="8">Controller<pos:position pos:line="2" pos:column="18"/></name><operator pos:line="2" pos:column="18">::<pos:position pos:line="2" pos:column="20"/></operator><name pos:line="2" pos:column="20">create<pos:position pos:line="2" pos:column="26"/></name></name><parameter_list pos:line="2" pos:column="26">()<pos:position pos:line="2" pos:column="28"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name><name pos:line="4" pos:column="5">swapDir<pos:position pos:line="4" pos:column="12"/></name><operator pos:line="4" pos:column="12">-&gt;<pos:position pos:line="4" pos:column="17"/></operator><name pos:line="4" pos:column="14">create<pos:position pos:line="4" pos:column="20"/></name></name><argument_list pos:line="4" pos:column="20">()<pos:position pos:line="4" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="23"/></expr_stmt>

<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><operator pos:line="6" pos:column="5">!<pos:position pos:line="6" pos:column="6"/></operator><name pos:line="6" pos:column="6">_SQUID_WINDOWS_<pos:position pos:line="6" pos:column="21"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="7" pos:column="5">pid_t<pos:position pos:line="7" pos:column="10"/></name></type> <name pos:line="7" pos:column="11">pid<pos:position pos:line="7" pos:column="14"/></name></decl>;<pos:position pos:line="7" pos:column="15"/></decl_stmt>
    <do pos:line="8" pos:column="5">do <block pos:line="8" pos:column="8">{
        <decl_stmt><decl><type><name pos:line="9" pos:column="9">PidStatus<pos:position pos:line="9" pos:column="18"/></name></type> <name pos:line="9" pos:column="19">status<pos:position pos:line="9" pos:column="25"/></name></decl>;<pos:position pos:line="9" pos:column="26"/></decl_stmt>
        <expr_stmt><expr><name pos:line="10" pos:column="9">pid<pos:position pos:line="10" pos:column="12"/></name> <operator pos:line="10" pos:column="13">=<pos:position pos:line="10" pos:column="14"/></operator> <call><name pos:line="10" pos:column="15">WaitForAnyPid<pos:position pos:line="10" pos:column="28"/></name><argument_list pos:line="10" pos:column="28">(<argument><expr><name pos:line="10" pos:column="29">status<pos:position pos:line="10" pos:column="35"/></name></expr></argument>, <argument><expr><name pos:line="10" pos:column="37">WNOHANG<pos:position pos:line="10" pos:column="44"/></name></expr></argument>)<pos:position pos:line="10" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="46"/></expr_stmt>
    }<pos:position pos:line="11" pos:column="6"/></block> while <condition pos:line="11" pos:column="13">(<expr><name pos:line="11" pos:column="14">pid<pos:position pos:line="11" pos:column="17"/></name> <operator pos:line="11" pos:column="18">&gt;<pos:position pos:line="11" pos:column="22"/></operator> <literal type="number" pos:line="11" pos:column="20">0<pos:position pos:line="11" pos:column="21"/></literal> <operator pos:line="11" pos:column="22">||<pos:position pos:line="11" pos:column="24"/></operator> <operator pos:line="11" pos:column="25">(<pos:position pos:line="11" pos:column="26"/></operator><name pos:line="11" pos:column="26">pid<pos:position pos:line="11" pos:column="29"/></name> <operator pos:line="11" pos:column="30">&lt;<pos:position pos:line="11" pos:column="34"/></operator> <literal type="number" pos:line="11" pos:column="32">0<pos:position pos:line="11" pos:column="33"/></literal> <operator pos:line="11" pos:column="34">&amp;&amp;<pos:position pos:line="11" pos:column="44"/></operator> <name pos:line="11" pos:column="37">errno<pos:position pos:line="11" pos:column="42"/></name> <operator pos:line="11" pos:column="43">==<pos:position pos:line="11" pos:column="45"/></operator> <name pos:line="11" pos:column="46">EINTR<pos:position pos:line="11" pos:column="51"/></name><operator pos:line="11" pos:column="51">)<pos:position pos:line="11" pos:column="52"/></operator></expr>)<pos:position pos:line="11" pos:column="53"/></condition>;<pos:position pos:line="11" pos:column="54"/></do>
<cpp:endif pos:line="12" pos:column="1">#<cpp:directive pos:line="12" pos:column="2">endif<pos:position pos:line="12" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

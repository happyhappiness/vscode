<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_1056_squid-3.1.23.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_http_header_access<pos:position pos:line="2" pos:column="25"/></name><parameter_list pos:line="2" pos:column="25">(<parameter><decl><type><name pos:line="2" pos:column="26">header_mangler<pos:position pos:line="2" pos:column="40"/></name></type> <name><name pos:line="2" pos:column="41">header<pos:position pos:line="2" pos:column="47"/></name><index pos:line="2" pos:column="47">[]<pos:position pos:line="2" pos:column="49"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="50"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">id<pos:position pos:line="4" pos:column="11"/></name></decl>, <decl><type ref="prev"/><name pos:line="4" pos:column="13">i<pos:position pos:line="4" pos:column="14"/></name></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">char<pos:position pos:line="5" pos:column="9"/></name> <modifier pos:line="5" pos:column="10">*<pos:position pos:line="5" pos:column="11"/></modifier></type><name pos:line="5" pos:column="11">t<pos:position pos:line="5" pos:column="12"/></name> <init pos:line="5" pos:column="13">= <expr><name pos:line="5" pos:column="15">NULL<pos:position pos:line="5" pos:column="19"/></name></expr></init></decl>;<pos:position pos:line="5" pos:column="20"/></decl_stmt>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><operator pos:line="7" pos:column="9">(<pos:position pos:line="7" pos:column="10"/></operator><name pos:line="7" pos:column="10">t<pos:position pos:line="7" pos:column="11"/></name> <operator pos:line="7" pos:column="12">=<pos:position pos:line="7" pos:column="13"/></operator> <call><name pos:line="7" pos:column="14">strtok<pos:position pos:line="7" pos:column="20"/></name><argument_list pos:line="7" pos:column="20">(<argument><expr><name pos:line="7" pos:column="21">NULL<pos:position pos:line="7" pos:column="25"/></name></expr></argument>, <argument><expr><name pos:line="7" pos:column="27">w_space<pos:position pos:line="7" pos:column="34"/></name></expr></argument>)<pos:position pos:line="7" pos:column="35"/></argument_list></call><operator pos:line="7" pos:column="35">)<pos:position pos:line="7" pos:column="36"/></operator> <operator pos:line="7" pos:column="37">==<pos:position pos:line="7" pos:column="39"/></operator> <name pos:line="7" pos:column="40">NULL<pos:position pos:line="7" pos:column="44"/></name></expr>)<pos:position pos:line="7" pos:column="45"/></condition><then pos:line="7" pos:column="45"> <block pos:line="7" pos:column="46">{
        <expr_stmt><expr><call><name pos:line="8" pos:column="9">debugs<pos:position pos:line="8" pos:column="15"/></name><argument_list pos:line="8" pos:column="15">(<argument><expr><literal type="number" pos:line="8" pos:column="16">3<pos:position pos:line="8" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="8" pos:column="19">0<pos:position pos:line="8" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="22">""<pos:position pos:line="8" pos:column="24"/></literal> <operator pos:line="8" pos:column="25">&lt;&lt;<pos:position pos:line="8" pos:column="33"/></operator> <name pos:line="8" pos:column="28">cfg_filename<pos:position pos:line="8" pos:column="40"/></name> <operator pos:line="8" pos:column="41">&lt;&lt;<pos:position pos:line="8" pos:column="49"/></operator> <literal type="string" pos:line="8" pos:column="44">" line "<pos:position pos:line="8" pos:column="52"/></literal> <operator pos:line="8" pos:column="53">&lt;&lt;<pos:position pos:line="8" pos:column="61"/></operator> <name pos:line="8" pos:column="56">config_lineno<pos:position pos:line="8" pos:column="69"/></name> <operator pos:line="8" pos:column="70">&lt;&lt;<pos:position pos:line="8" pos:column="78"/></operator> <literal type="string" pos:line="8" pos:column="73">": "<pos:position pos:line="8" pos:column="77"/></literal> <operator pos:line="8" pos:column="78">&lt;&lt;<pos:position pos:line="8" pos:column="86"/></operator> <name pos:line="8" pos:column="81">config_input_line<pos:position pos:line="8" pos:column="98"/></name></expr></argument>)<pos:position pos:line="8" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="8" pos:column="100"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">debugs<pos:position pos:line="9" pos:column="15"/></name><argument_list pos:line="9" pos:column="15">(<argument><expr><literal type="number" pos:line="9" pos:column="16">3<pos:position pos:line="9" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="9" pos:column="19">0<pos:position pos:line="9" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="9" pos:column="22">"parse_http_header_access: missing header name."<pos:position pos:line="9" pos:column="70"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="72"/></expr_stmt>
        <return pos:line="10" pos:column="9">return;<pos:position pos:line="10" pos:column="16"/></return>
    }<pos:position pos:line="11" pos:column="6"/></block></then></if>

    <comment type="block" pos:line="13" pos:column="5">/* Now lookup index of header. */</comment>
    <expr_stmt><expr><name pos:line="14" pos:column="5">id<pos:position pos:line="14" pos:column="7"/></name> <operator pos:line="14" pos:column="8">=<pos:position pos:line="14" pos:column="9"/></operator> <call><name pos:line="14" pos:column="10">httpHeaderIdByNameDef<pos:position pos:line="14" pos:column="31"/></name><argument_list pos:line="14" pos:column="31">(<argument><expr><name pos:line="14" pos:column="32">t<pos:position pos:line="14" pos:column="33"/></name></expr></argument>, <argument><expr><call><name pos:line="14" pos:column="35">strlen<pos:position pos:line="14" pos:column="41"/></name><argument_list pos:line="14" pos:column="41">(<argument><expr><name pos:line="14" pos:column="42">t<pos:position pos:line="14" pos:column="43"/></name></expr></argument>)<pos:position pos:line="14" pos:column="44"/></argument_list></call></expr></argument>)<pos:position pos:line="14" pos:column="45"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="46"/></expr_stmt>

    <if pos:line="16" pos:column="5">if <condition pos:line="16" pos:column="8">(<expr><call><name pos:line="16" pos:column="9">strcmp<pos:position pos:line="16" pos:column="15"/></name><argument_list pos:line="16" pos:column="15">(<argument><expr><name pos:line="16" pos:column="16">t<pos:position pos:line="16" pos:column="17"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="16" pos:column="19">"All"<pos:position pos:line="16" pos:column="24"/></literal></expr></argument>)<pos:position pos:line="16" pos:column="25"/></argument_list></call> <operator pos:line="16" pos:column="26">==<pos:position pos:line="16" pos:column="28"/></operator> <literal type="number" pos:line="16" pos:column="29">0<pos:position pos:line="16" pos:column="30"/></literal></expr>)<pos:position pos:line="16" pos:column="31"/></condition><then pos:line="16" pos:column="31">
        <block type="pseudo"><expr_stmt><expr><name pos:line="17" pos:column="9">id<pos:position pos:line="17" pos:column="11"/></name> <operator pos:line="17" pos:column="12">=<pos:position pos:line="17" pos:column="13"/></operator> <name pos:line="17" pos:column="14">HDR_ENUM_END<pos:position pos:line="17" pos:column="26"/></name></expr>;<pos:position pos:line="17" pos:column="27"/></expr_stmt></block></then>
    <elseif pos:line="18" pos:column="5">else <if pos:line="18" pos:column="10">if <condition pos:line="18" pos:column="13">(<expr><call><name pos:line="18" pos:column="14">strcmp<pos:position pos:line="18" pos:column="20"/></name><argument_list pos:line="18" pos:column="20">(<argument><expr><name pos:line="18" pos:column="21">t<pos:position pos:line="18" pos:column="22"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="24">"Other"<pos:position pos:line="18" pos:column="31"/></literal></expr></argument>)<pos:position pos:line="18" pos:column="32"/></argument_list></call> <operator pos:line="18" pos:column="33">==<pos:position pos:line="18" pos:column="35"/></operator> <literal type="number" pos:line="18" pos:column="36">0<pos:position pos:line="18" pos:column="37"/></literal></expr>)<pos:position pos:line="18" pos:column="38"/></condition><then pos:line="18" pos:column="38">
        <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="9">id<pos:position pos:line="19" pos:column="11"/></name> <operator pos:line="19" pos:column="12">=<pos:position pos:line="19" pos:column="13"/></operator> <name pos:line="19" pos:column="14">HDR_OTHER<pos:position pos:line="19" pos:column="23"/></name></expr>;<pos:position pos:line="19" pos:column="24"/></expr_stmt></block></then></if></elseif>
    <elseif pos:line="20" pos:column="5">else <if pos:line="20" pos:column="10">if <condition pos:line="20" pos:column="13">(<expr><name pos:line="20" pos:column="14">id<pos:position pos:line="20" pos:column="16"/></name> <operator pos:line="20" pos:column="17">==<pos:position pos:line="20" pos:column="19"/></operator> <operator pos:line="20" pos:column="20">-<pos:position pos:line="20" pos:column="21"/></operator><literal type="number" pos:line="20" pos:column="21">1<pos:position pos:line="20" pos:column="22"/></literal></expr>)<pos:position pos:line="20" pos:column="23"/></condition><then pos:line="20" pos:column="23"> <block pos:line="20" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="21" pos:column="9">debugs<pos:position pos:line="21" pos:column="15"/></name><argument_list pos:line="21" pos:column="15">(<argument><expr><literal type="number" pos:line="21" pos:column="16">3<pos:position pos:line="21" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="21" pos:column="19">0<pos:position pos:line="21" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="21" pos:column="22">""<pos:position pos:line="21" pos:column="24"/></literal> <operator pos:line="21" pos:column="25">&lt;&lt;<pos:position pos:line="21" pos:column="33"/></operator> <name pos:line="21" pos:column="28">cfg_filename<pos:position pos:line="21" pos:column="40"/></name> <operator pos:line="21" pos:column="41">&lt;&lt;<pos:position pos:line="21" pos:column="49"/></operator> <literal type="string" pos:line="21" pos:column="44">" line "<pos:position pos:line="21" pos:column="52"/></literal> <operator pos:line="21" pos:column="53">&lt;&lt;<pos:position pos:line="21" pos:column="61"/></operator> <name pos:line="21" pos:column="56">config_lineno<pos:position pos:line="21" pos:column="69"/></name> <operator pos:line="21" pos:column="70">&lt;&lt;<pos:position pos:line="21" pos:column="78"/></operator> <literal type="string" pos:line="21" pos:column="73">": "<pos:position pos:line="21" pos:column="77"/></literal> <operator pos:line="21" pos:column="78">&lt;&lt;<pos:position pos:line="21" pos:column="86"/></operator> <name pos:line="21" pos:column="81">config_input_line<pos:position pos:line="21" pos:column="98"/></name></expr></argument>)<pos:position pos:line="21" pos:column="99"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="100"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="22" pos:column="9">debugs<pos:position pos:line="22" pos:column="15"/></name><argument_list pos:line="22" pos:column="15">(<argument><expr><literal type="number" pos:line="22" pos:column="16">3<pos:position pos:line="22" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="22" pos:column="19">0<pos:position pos:line="22" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="22" pos:column="22">"parse_http_header_access: unknown header name '"<pos:position pos:line="22" pos:column="71"/></literal> <operator pos:line="22" pos:column="72">&lt;&lt;<pos:position pos:line="22" pos:column="80"/></operator> <name pos:line="22" pos:column="75">t<pos:position pos:line="22" pos:column="76"/></name> <operator pos:line="22" pos:column="77">&lt;&lt;<pos:position pos:line="22" pos:column="85"/></operator> <literal type="string" pos:line="22" pos:column="80">"'"<pos:position pos:line="22" pos:column="83"/></literal></expr></argument>)<pos:position pos:line="22" pos:column="84"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="85"/></expr_stmt>
        <return pos:line="23" pos:column="9">return;<pos:position pos:line="23" pos:column="16"/></return>
    }<pos:position pos:line="24" pos:column="6"/></block></then></if></elseif></if>

    <if pos:line="26" pos:column="5">if <condition pos:line="26" pos:column="8">(<expr><name pos:line="26" pos:column="9">id<pos:position pos:line="26" pos:column="11"/></name> <operator pos:line="26" pos:column="12">!=<pos:position pos:line="26" pos:column="14"/></operator> <name pos:line="26" pos:column="15">HDR_ENUM_END<pos:position pos:line="26" pos:column="27"/></name></expr>)<pos:position pos:line="26" pos:column="28"/></condition><then pos:line="26" pos:column="28"> <block pos:line="26" pos:column="29">{
        <expr_stmt><expr><call><name pos:line="27" pos:column="9">parse_acl_access<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><operator pos:line="27" pos:column="26">&amp;<pos:position pos:line="27" pos:column="31"/></operator><name><name pos:line="27" pos:column="27">header<pos:position pos:line="27" pos:column="33"/></name><index pos:line="27" pos:column="33">[<expr><name pos:line="27" pos:column="34">id<pos:position pos:line="27" pos:column="36"/></name></expr>]<pos:position pos:line="27" pos:column="37"/></index></name><operator pos:line="27" pos:column="37">.<pos:position pos:line="27" pos:column="38"/></operator><name pos:line="27" pos:column="38">access_list<pos:position pos:line="27" pos:column="49"/></name></expr></argument>)<pos:position pos:line="27" pos:column="50"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="51"/></expr_stmt>
    }<pos:position pos:line="28" pos:column="6"/></block></then> <else pos:line="28" pos:column="7">else <block pos:line="28" pos:column="12">{
        <decl_stmt><decl><type><name pos:line="29" pos:column="9">char<pos:position pos:line="29" pos:column="13"/></name> <modifier pos:line="29" pos:column="14">*<pos:position pos:line="29" pos:column="15"/></modifier></type><name pos:line="29" pos:column="15">next_string<pos:position pos:line="29" pos:column="26"/></name> <init pos:line="29" pos:column="27">= <expr><name pos:line="29" pos:column="29">t<pos:position pos:line="29" pos:column="30"/></name> <operator pos:line="29" pos:column="31">+<pos:position pos:line="29" pos:column="32"/></operator> <call><name pos:line="29" pos:column="33">strlen<pos:position pos:line="29" pos:column="39"/></name><argument_list pos:line="29" pos:column="39">(<argument><expr><name pos:line="29" pos:column="40">t<pos:position pos:line="29" pos:column="41"/></name></expr></argument>)<pos:position pos:line="29" pos:column="42"/></argument_list></call> <operator pos:line="29" pos:column="43">-<pos:position pos:line="29" pos:column="44"/></operator> <literal type="number" pos:line="29" pos:column="45">1<pos:position pos:line="29" pos:column="46"/></literal></expr></init></decl>;<pos:position pos:line="29" pos:column="47"/></decl_stmt>
        <expr_stmt><expr><operator pos:line="30" pos:column="9">*<pos:position pos:line="30" pos:column="10"/></operator><name pos:line="30" pos:column="10">next_string<pos:position pos:line="30" pos:column="21"/></name> <operator pos:line="30" pos:column="22">=<pos:position pos:line="30" pos:column="23"/></operator> <literal type="char" pos:line="30" pos:column="24">'A'<pos:position pos:line="30" pos:column="27"/></literal></expr>;<pos:position pos:line="30" pos:column="28"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="31" pos:column="9">*<pos:position pos:line="31" pos:column="10"/></operator><operator pos:line="31" pos:column="10">(<pos:position pos:line="31" pos:column="11"/></operator><name pos:line="31" pos:column="11">next_string<pos:position pos:line="31" pos:column="22"/></name> <operator pos:line="31" pos:column="23">+<pos:position pos:line="31" pos:column="24"/></operator> <literal type="number" pos:line="31" pos:column="25">1<pos:position pos:line="31" pos:column="26"/></literal><operator pos:line="31" pos:column="26">)<pos:position pos:line="31" pos:column="27"/></operator> <operator pos:line="31" pos:column="28">=<pos:position pos:line="31" pos:column="29"/></operator> <literal type="char" pos:line="31" pos:column="30">' '<pos:position pos:line="31" pos:column="33"/></literal></expr>;<pos:position pos:line="31" pos:column="34"/></expr_stmt>

        <for pos:line="33" pos:column="9">for <control pos:line="33" pos:column="13">(<init><expr><name pos:line="33" pos:column="14">i<pos:position pos:line="33" pos:column="15"/></name> <operator pos:line="33" pos:column="16">=<pos:position pos:line="33" pos:column="17"/></operator> <literal type="number" pos:line="33" pos:column="18">0<pos:position pos:line="33" pos:column="19"/></literal></expr>;<pos:position pos:line="33" pos:column="20"/></init> <condition><expr><name pos:line="33" pos:column="21">i<pos:position pos:line="33" pos:column="22"/></name> <operator pos:line="33" pos:column="23">&lt;<pos:position pos:line="33" pos:column="27"/></operator> <name pos:line="33" pos:column="25">HDR_ENUM_END<pos:position pos:line="33" pos:column="37"/></name></expr>;<pos:position pos:line="33" pos:column="38"/></condition> <incr><expr><name pos:line="33" pos:column="39">i<pos:position pos:line="33" pos:column="40"/></name><operator pos:line="33" pos:column="40">++<pos:position pos:line="33" pos:column="42"/></operator></expr></incr>)<pos:position pos:line="33" pos:column="43"/></control> <block pos:line="33" pos:column="44">{
            <decl_stmt><decl><type><name pos:line="34" pos:column="13">char<pos:position pos:line="34" pos:column="17"/></name> <modifier pos:line="34" pos:column="18">*<pos:position pos:line="34" pos:column="19"/></modifier></type><name pos:line="34" pos:column="19">new_string<pos:position pos:line="34" pos:column="29"/></name> <init pos:line="34" pos:column="30">= <expr><call><name pos:line="34" pos:column="32">xstrdup<pos:position pos:line="34" pos:column="39"/></name><argument_list pos:line="34" pos:column="39">(<argument><expr><name pos:line="34" pos:column="40">next_string<pos:position pos:line="34" pos:column="51"/></name></expr></argument>)<pos:position pos:line="34" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="34" pos:column="53"/></decl_stmt>
            <expr_stmt><expr><call><name pos:line="35" pos:column="13">strtok<pos:position pos:line="35" pos:column="19"/></name><argument_list pos:line="35" pos:column="19">(<argument><expr><name pos:line="35" pos:column="20">new_string<pos:position pos:line="35" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="35" pos:column="32">w_space<pos:position pos:line="35" pos:column="39"/></name></expr></argument>)<pos:position pos:line="35" pos:column="40"/></argument_list></call></expr>;<pos:position pos:line="35" pos:column="41"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="36" pos:column="13">parse_acl_access<pos:position pos:line="36" pos:column="29"/></name><argument_list pos:line="36" pos:column="29">(<argument><expr><operator pos:line="36" pos:column="30">&amp;<pos:position pos:line="36" pos:column="35"/></operator><name><name pos:line="36" pos:column="31">header<pos:position pos:line="36" pos:column="37"/></name><index pos:line="36" pos:column="37">[<expr><name pos:line="36" pos:column="38">i<pos:position pos:line="36" pos:column="39"/></name></expr>]<pos:position pos:line="36" pos:column="40"/></index></name><operator pos:line="36" pos:column="40">.<pos:position pos:line="36" pos:column="41"/></operator><name pos:line="36" pos:column="41">access_list<pos:position pos:line="36" pos:column="52"/></name></expr></argument>)<pos:position pos:line="36" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="36" pos:column="54"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="37" pos:column="13">safe_free<pos:position pos:line="37" pos:column="22"/></name><argument_list pos:line="37" pos:column="22">(<argument><expr><name pos:line="37" pos:column="23">new_string<pos:position pos:line="37" pos:column="33"/></name></expr></argument>)<pos:position pos:line="37" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="37" pos:column="35"/></expr_stmt>
        }<pos:position pos:line="38" pos:column="10"/></block></for>
    }<pos:position pos:line="39" pos:column="6"/></block></else></if>
}<pos:position pos:line="40" pos:column="2"/></block></function></unit>

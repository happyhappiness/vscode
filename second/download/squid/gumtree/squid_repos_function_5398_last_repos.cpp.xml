<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5398_last_repos.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">HttpReply<pos:position pos:line="1" pos:column="10"/></name> <modifier pos:line="1" pos:column="11">*<pos:position pos:line="1" pos:column="12"/></modifier></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Gateway<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">ftpAuthRequired<pos:position pos:line="2" pos:column="30"/></name></name><parameter_list pos:line="2" pos:column="30">(<parameter><decl><type><name pos:line="2" pos:column="31">HttpRequest<pos:position pos:line="2" pos:column="42"/></name> <modifier pos:line="2" pos:column="43">*<pos:position pos:line="2" pos:column="44"/></modifier></type> <name pos:line="2" pos:column="45">request<pos:position pos:line="2" pos:column="52"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="54">SBuf<pos:position pos:line="2" pos:column="58"/></name> <modifier pos:line="2" pos:column="59">&amp;<pos:position pos:line="2" pos:column="64"/></modifier></type><name pos:line="2" pos:column="60">realm<pos:position pos:line="2" pos:column="65"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="66"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ErrorState<pos:position pos:line="4" pos:column="15"/></name></type> <name pos:line="4" pos:column="16">err<pos:position pos:line="4" pos:column="19"/></name><argument_list pos:line="4" pos:column="19">(<argument><expr><name pos:line="4" pos:column="20">ERR_CACHE_ACCESS_DENIED<pos:position pos:line="4" pos:column="43"/></name></expr></argument>, <argument><expr><name><name pos:line="4" pos:column="45">Http<pos:position pos:line="4" pos:column="49"/></name><operator pos:line="4" pos:column="49">::<pos:position pos:line="4" pos:column="51"/></operator><name pos:line="4" pos:column="51">scUnauthorized<pos:position pos:line="4" pos:column="65"/></name></name></expr></argument>, <argument><expr><name pos:line="4" pos:column="67">request<pos:position pos:line="4" pos:column="74"/></name></expr></argument>)<pos:position pos:line="4" pos:column="75"/></argument_list></decl>;<pos:position pos:line="4" pos:column="76"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">HttpReply<pos:position pos:line="5" pos:column="14"/></name> <modifier pos:line="5" pos:column="15">*<pos:position pos:line="5" pos:column="16"/></modifier></type><name pos:line="5" pos:column="16">newrep<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><call><name><name pos:line="5" pos:column="25">err<pos:position pos:line="5" pos:column="28"/></name><operator pos:line="5" pos:column="28">.<pos:position pos:line="5" pos:column="29"/></operator><name pos:line="5" pos:column="29">BuildHttpReply<pos:position pos:line="5" pos:column="43"/></name></name><argument_list pos:line="5" pos:column="43">()<pos:position pos:line="5" pos:column="45"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="46"/></decl_stmt>
<cpp:if pos:line="6" pos:column="1">#<cpp:directive pos:line="6" pos:column="2">if<pos:position pos:line="6" pos:column="4"/></cpp:directive> <expr><name pos:line="6" pos:column="5">HAVE_AUTH_MODULE_BASIC<pos:position pos:line="6" pos:column="27"/></name></expr></cpp:if>
    <comment type="block" pos:line="7" pos:column="5">/* add Authenticate header */</comment>
    <comment type="line" pos:line="8" pos:column="5">// XXX: performance regression. c_str() may reallocate</comment>
    <expr_stmt><expr><call><name><name pos:line="9" pos:column="5">newrep<pos:position pos:line="9" pos:column="11"/></name><operator pos:line="9" pos:column="11">-&gt;<pos:position pos:line="9" pos:column="16"/></operator><name pos:line="9" pos:column="13">header<pos:position pos:line="9" pos:column="19"/></name><operator pos:line="9" pos:column="19">.<pos:position pos:line="9" pos:column="20"/></operator><name pos:line="9" pos:column="20">putAuth<pos:position pos:line="9" pos:column="27"/></name></name><argument_list pos:line="9" pos:column="27">(<argument><expr><literal type="string" pos:line="9" pos:column="28">"Basic"<pos:position pos:line="9" pos:column="35"/></literal></expr></argument>, <argument><expr><call><name><name pos:line="9" pos:column="37">realm<pos:position pos:line="9" pos:column="42"/></name><operator pos:line="9" pos:column="42">.<pos:position pos:line="9" pos:column="43"/></operator><name pos:line="9" pos:column="43">c_str<pos:position pos:line="9" pos:column="48"/></name></name><argument_list pos:line="9" pos:column="48">()<pos:position pos:line="9" pos:column="50"/></argument_list></call></expr></argument>)<pos:position pos:line="9" pos:column="51"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="52"/></expr_stmt>
<cpp:endif pos:line="10" pos:column="1">#<cpp:directive pos:line="10" pos:column="2">endif<pos:position pos:line="10" pos:column="7"/></cpp:directive></cpp:endif>
    <return pos:line="11" pos:column="5">return <expr><name pos:line="11" pos:column="12">newrep<pos:position pos:line="11" pos:column="18"/></name></expr>;<pos:position pos:line="11" pos:column="19"/></return>
}<pos:position pos:line="12" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5541_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name><name pos:line="2" pos:column="1">Ftp<pos:position pos:line="2" pos:column="4"/></name><operator pos:line="2" pos:column="4">::<pos:position pos:line="2" pos:column="6"/></operator><name pos:line="2" pos:column="6">Gateway<pos:position pos:line="2" pos:column="13"/></name><operator pos:line="2" pos:column="13">::<pos:position pos:line="2" pos:column="15"/></operator><name pos:line="2" pos:column="15">completeForwarding<pos:position pos:line="2" pos:column="33"/></name></name><parameter_list pos:line="2" pos:column="33">()<pos:position pos:line="2" pos:column="35"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <if pos:line="4" pos:column="5">if <condition pos:line="4" pos:column="8">(<expr><name pos:line="4" pos:column="9">fwd<pos:position pos:line="4" pos:column="12"/></name> <operator pos:line="4" pos:column="13">==<pos:position pos:line="4" pos:column="15"/></operator> <name pos:line="4" pos:column="16">NULL<pos:position pos:line="4" pos:column="20"/></name> <operator pos:line="4" pos:column="21">||<pos:position pos:line="4" pos:column="23"/></operator> <name><name pos:line="4" pos:column="24">flags<pos:position pos:line="4" pos:column="29"/></name><operator pos:line="4" pos:column="29">.<pos:position pos:line="4" pos:column="30"/></operator><name pos:line="4" pos:column="30">completed_forwarding<pos:position pos:line="4" pos:column="50"/></name></name></expr>)<pos:position pos:line="4" pos:column="51"/></condition><then pos:line="4" pos:column="51"> <block pos:line="4" pos:column="52">{
        <expr_stmt><expr><call><name pos:line="5" pos:column="9">debugs<pos:position pos:line="5" pos:column="15"/></name><argument_list pos:line="5" pos:column="15">(<argument><expr><literal type="number" pos:line="5" pos:column="16">9<pos:position pos:line="5" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="5" pos:column="19">3<pos:position pos:line="5" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="5" pos:column="22">"avoid double-complete on FD "<pos:position pos:line="5" pos:column="52"/></literal> <operator pos:line="5" pos:column="53">&lt;&lt;<pos:position pos:line="5" pos:column="61"/></operator>
               <operator pos:line="6" pos:column="16">(<pos:position pos:line="6" pos:column="17"/></operator><ternary><condition><expr><name><name pos:line="6" pos:column="17">ctrl<pos:position pos:line="6" pos:column="21"/></name><operator pos:line="6" pos:column="21">.<pos:position pos:line="6" pos:column="22"/></operator><name pos:line="6" pos:column="22">conn<pos:position pos:line="6" pos:column="26"/></name></name> <operator pos:line="6" pos:column="27">!=<pos:position pos:line="6" pos:column="29"/></operator> <name pos:line="6" pos:column="30">NULL<pos:position pos:line="6" pos:column="34"/></name></expr> ?<pos:position pos:line="6" pos:column="36"/></condition><then pos:line="6" pos:column="36"> <expr><name><name pos:line="6" pos:column="37">ctrl<pos:position pos:line="6" pos:column="41"/></name><operator pos:line="6" pos:column="41">.<pos:position pos:line="6" pos:column="42"/></operator><name pos:line="6" pos:column="42">conn<pos:position pos:line="6" pos:column="46"/></name><operator pos:line="6" pos:column="46">-&gt;<pos:position pos:line="6" pos:column="51"/></operator><name pos:line="6" pos:column="48">fd<pos:position pos:line="6" pos:column="50"/></name></name></expr> <pos:position pos:line="6" pos:column="51"/></then><else pos:line="6" pos:column="51">: <expr><operator pos:line="6" pos:column="53">-<pos:position pos:line="6" pos:column="54"/></operator><literal type="number" pos:line="6" pos:column="54">1<pos:position pos:line="6" pos:column="55"/></literal></expr></else></ternary><operator pos:line="6" pos:column="55">)<pos:position pos:line="6" pos:column="56"/></operator> <operator pos:line="6" pos:column="57">&lt;&lt;<pos:position pos:line="6" pos:column="65"/></operator> <literal type="string" pos:line="6" pos:column="60">", Data FD "<pos:position pos:line="6" pos:column="72"/></literal> <operator pos:line="6" pos:column="73">&lt;&lt;<pos:position pos:line="6" pos:column="81"/></operator> <name><name pos:line="6" pos:column="76">data<pos:position pos:line="6" pos:column="80"/></name><operator pos:line="6" pos:column="80">.<pos:position pos:line="6" pos:column="81"/></operator><name pos:line="6" pos:column="81">conn<pos:position pos:line="6" pos:column="85"/></name><operator pos:line="6" pos:column="85">-&gt;<pos:position pos:line="6" pos:column="90"/></operator><name pos:line="6" pos:column="87">fd<pos:position pos:line="6" pos:column="89"/></name></name> <operator pos:line="6" pos:column="90">&lt;&lt;<pos:position pos:line="6" pos:column="98"/></operator>
               <literal type="string" pos:line="7" pos:column="16">", this "<pos:position pos:line="7" pos:column="25"/></literal> <operator pos:line="7" pos:column="26">&lt;&lt;<pos:position pos:line="7" pos:column="34"/></operator> <name pos:line="7" pos:column="29">this<pos:position pos:line="7" pos:column="33"/></name> <operator pos:line="7" pos:column="34">&lt;&lt;<pos:position pos:line="7" pos:column="42"/></operator> <literal type="string" pos:line="7" pos:column="37">", fwd "<pos:position pos:line="7" pos:column="45"/></literal> <operator pos:line="7" pos:column="46">&lt;&lt;<pos:position pos:line="7" pos:column="54"/></operator> <name pos:line="7" pos:column="49">fwd<pos:position pos:line="7" pos:column="52"/></name></expr></argument>)<pos:position pos:line="7" pos:column="53"/></argument_list></call></expr>;<pos:position pos:line="7" pos:column="54"/></expr_stmt>
        <return pos:line="8" pos:column="9">return;<pos:position pos:line="8" pos:column="16"/></return>
    }<pos:position pos:line="9" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name><name pos:line="11" pos:column="5">flags<pos:position pos:line="11" pos:column="10"/></name><operator pos:line="11" pos:column="10">.<pos:position pos:line="11" pos:column="11"/></operator><name pos:line="11" pos:column="11">completed_forwarding<pos:position pos:line="11" pos:column="31"/></name></name> <operator pos:line="11" pos:column="32">=<pos:position pos:line="11" pos:column="33"/></operator> <literal type="boolean" pos:line="11" pos:column="34">true<pos:position pos:line="11" pos:column="38"/></literal></expr>;<pos:position pos:line="11" pos:column="39"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="12" pos:column="5">Client<pos:position pos:line="12" pos:column="11"/></name><operator pos:line="12" pos:column="11">::<pos:position pos:line="12" pos:column="13"/></operator><name pos:line="12" pos:column="13">completeForwarding<pos:position pos:line="12" pos:column="31"/></name></name><argument_list pos:line="12" pos:column="31">()<pos:position pos:line="12" pos:column="33"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="34"/></expr_stmt>
}<pos:position pos:line="13" pos:column="2"/></block></function></unit>

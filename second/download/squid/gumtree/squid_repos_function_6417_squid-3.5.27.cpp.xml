<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_6417_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">netdbExchangeUpdatePeer<pos:position pos:line="2" pos:column="24"/></name><parameter_list pos:line="2" pos:column="24">(<parameter><decl><type><name><name pos:line="2" pos:column="25">Ip<pos:position pos:line="2" pos:column="27"/></name><operator pos:line="2" pos:column="27">::<pos:position pos:line="2" pos:column="29"/></operator><name pos:line="2" pos:column="29">Address<pos:position pos:line="2" pos:column="36"/></name></name> <modifier pos:line="2" pos:column="37">&amp;<pos:position pos:line="2" pos:column="42"/></modifier></type><name pos:line="2" pos:column="38">addr<pos:position pos:line="2" pos:column="42"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="44">CachePeer<pos:position pos:line="2" pos:column="53"/></name> <modifier pos:line="2" pos:column="54">*<pos:position pos:line="2" pos:column="55"/></modifier></type> <name pos:line="2" pos:column="56">e<pos:position pos:line="2" pos:column="57"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="59">double<pos:position pos:line="2" pos:column="65"/></name></type> <name pos:line="2" pos:column="66">rtt<pos:position pos:line="2" pos:column="69"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="71">double<pos:position pos:line="2" pos:column="77"/></name></type> <name pos:line="2" pos:column="78">hops<pos:position pos:line="2" pos:column="82"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="83"/></parameter_list>
<block pos:line="3" pos:column="1">{
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_ICMP<pos:position pos:line="4" pos:column="13"/></name></expr></cpp:if>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">netdbEntry<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">n<pos:position pos:line="5" pos:column="18"/></name></decl>;<pos:position pos:line="5" pos:column="19"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">net_db_peer<pos:position pos:line="6" pos:column="16"/></name> <modifier pos:line="6" pos:column="17">*<pos:position pos:line="6" pos:column="18"/></modifier></type><name pos:line="6" pos:column="18">p<pos:position pos:line="6" pos:column="19"/></name></decl>;<pos:position pos:line="6" pos:column="20"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="7" pos:column="5">debugs<pos:position pos:line="7" pos:column="11"/></name><argument_list pos:line="7" pos:column="11">(<argument><expr><literal type="number" pos:line="7" pos:column="12">38<pos:position pos:line="7" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="7" pos:column="16">5<pos:position pos:line="7" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="7" pos:column="19">"netdbExchangeUpdatePeer: '"<pos:position pos:line="7" pos:column="47"/></literal> <operator pos:line="7" pos:column="48">&lt;&lt;<pos:position pos:line="7" pos:column="56"/></operator> <name pos:line="7" pos:column="51">addr<pos:position pos:line="7" pos:column="55"/></name> <operator pos:line="7" pos:column="56">&lt;&lt;<pos:position pos:line="7" pos:column="64"/></operator> <literal type="string" pos:line="7" pos:column="59">"', "<pos:position pos:line="7" pos:column="64"/></literal><operator pos:line="7" pos:column="64">&lt;&lt;<pos:position pos:line="7" pos:column="72"/></operator>
           <call><name><name pos:line="8" pos:column="12">std<pos:position pos:line="8" pos:column="15"/></name><operator pos:line="8" pos:column="15">::<pos:position pos:line="8" pos:column="17"/></operator><name pos:line="8" pos:column="17">setfill<pos:position pos:line="8" pos:column="24"/></name></name><argument_list pos:line="8" pos:column="24">(<argument><expr><literal type="char" pos:line="8" pos:column="25">'0'<pos:position pos:line="8" pos:column="28"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="29"/></argument_list></call><operator pos:line="8" pos:column="29">&lt;&lt;<pos:position pos:line="8" pos:column="37"/></operator> <call><name><name pos:line="8" pos:column="32">std<pos:position pos:line="8" pos:column="35"/></name><operator pos:line="8" pos:column="35">::<pos:position pos:line="8" pos:column="37"/></operator><name pos:line="8" pos:column="37">setprecision<pos:position pos:line="8" pos:column="49"/></name></name><argument_list pos:line="8" pos:column="49">(<argument><expr><literal type="number" pos:line="8" pos:column="50">2<pos:position pos:line="8" pos:column="51"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="52"/></argument_list></call> <operator pos:line="8" pos:column="53">&lt;&lt;<pos:position pos:line="8" pos:column="61"/></operator> <name pos:line="8" pos:column="56">hops<pos:position pos:line="8" pos:column="60"/></name> <operator pos:line="8" pos:column="61">&lt;&lt;<pos:position pos:line="8" pos:column="69"/></operator> <literal type="string" pos:line="8" pos:column="64">" hops, "<pos:position pos:line="8" pos:column="73"/></literal> <operator pos:line="8" pos:column="74">&lt;&lt;<pos:position pos:line="8" pos:column="82"/></operator>
           <name pos:line="9" pos:column="12">rtt<pos:position pos:line="9" pos:column="15"/></name> <operator pos:line="9" pos:column="16">&lt;&lt;<pos:position pos:line="9" pos:column="24"/></operator> <literal type="string" pos:line="9" pos:column="19">" rtt"<pos:position pos:line="9" pos:column="25"/></literal></expr></argument>)<pos:position pos:line="9" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="27"/></expr_stmt>

    <if pos:line="11" pos:column="5">if <condition pos:line="11" pos:column="8">( <expr><operator pos:line="11" pos:column="10">!<pos:position pos:line="11" pos:column="11"/></operator><call><name><name pos:line="11" pos:column="11">addr<pos:position pos:line="11" pos:column="15"/></name><operator pos:line="11" pos:column="15">.<pos:position pos:line="11" pos:column="16"/></operator><name pos:line="11" pos:column="16">isIPv4<pos:position pos:line="11" pos:column="22"/></name></name><argument_list pos:line="11" pos:column="22">()<pos:position pos:line="11" pos:column="24"/></argument_list></call></expr> )<pos:position pos:line="11" pos:column="26"/></condition><then pos:line="11" pos:column="26"> <block pos:line="11" pos:column="27">{
        <expr_stmt><expr><call><name pos:line="12" pos:column="9">debugs<pos:position pos:line="12" pos:column="15"/></name><argument_list pos:line="12" pos:column="15">(<argument><expr><literal type="number" pos:line="12" pos:column="16">38<pos:position pos:line="12" pos:column="18"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="12" pos:column="20">5<pos:position pos:line="12" pos:column="21"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="12" pos:column="23">"netdbExchangeUpdatePeer: Aborting peer update for '"<pos:position pos:line="12" pos:column="76"/></literal> <operator pos:line="12" pos:column="77">&lt;&lt;<pos:position pos:line="12" pos:column="85"/></operator> <name pos:line="12" pos:column="80">addr<pos:position pos:line="12" pos:column="84"/></name> <operator pos:line="12" pos:column="85">&lt;&lt;<pos:position pos:line="12" pos:column="93"/></operator> <literal type="string" pos:line="12" pos:column="88">"', NetDB cannot handle IPv6."<pos:position pos:line="12" pos:column="118"/></literal></expr></argument>)<pos:position pos:line="12" pos:column="119"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="120"/></expr_stmt>
        <return pos:line="13" pos:column="9">return;<pos:position pos:line="13" pos:column="16"/></return>
    }<pos:position pos:line="14" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="16" pos:column="5">n<pos:position pos:line="16" pos:column="6"/></name> <operator pos:line="16" pos:column="7">=<pos:position pos:line="16" pos:column="8"/></operator> <call><name pos:line="16" pos:column="9">netdbLookupAddr<pos:position pos:line="16" pos:column="24"/></name><argument_list pos:line="16" pos:column="24">(<argument><expr><name pos:line="16" pos:column="25">addr<pos:position pos:line="16" pos:column="29"/></name></expr></argument>)<pos:position pos:line="16" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="31"/></expr_stmt>

    <if pos:line="18" pos:column="5">if <condition pos:line="18" pos:column="8">(<expr><name pos:line="18" pos:column="9">n<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">==<pos:position pos:line="18" pos:column="13"/></operator> <name pos:line="18" pos:column="14">NULL<pos:position pos:line="18" pos:column="18"/></name></expr>)<pos:position pos:line="18" pos:column="19"/></condition><then pos:line="18" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><name pos:line="19" pos:column="9">n<pos:position pos:line="19" pos:column="10"/></name> <operator pos:line="19" pos:column="11">=<pos:position pos:line="19" pos:column="12"/></operator> <call><name pos:line="19" pos:column="13">netdbAdd<pos:position pos:line="19" pos:column="21"/></name><argument_list pos:line="19" pos:column="21">(<argument><expr><name pos:line="19" pos:column="22">addr<pos:position pos:line="19" pos:column="26"/></name></expr></argument>)<pos:position pos:line="19" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="28"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="21" pos:column="5">assert<pos:position pos:line="21" pos:column="11"/></name><argument_list pos:line="21" pos:column="11">(<argument><expr><name pos:line="21" pos:column="12">NULL<pos:position pos:line="21" pos:column="16"/></name> <operator pos:line="21" pos:column="17">!=<pos:position pos:line="21" pos:column="19"/></operator> <name pos:line="21" pos:column="20">n<pos:position pos:line="21" pos:column="21"/></name></expr></argument>)<pos:position pos:line="21" pos:column="22"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="23"/></expr_stmt>

    <if pos:line="23" pos:column="5">if <condition pos:line="23" pos:column="8">(<expr><operator pos:line="23" pos:column="9">(<pos:position pos:line="23" pos:column="10"/></operator><name pos:line="23" pos:column="10">p<pos:position pos:line="23" pos:column="11"/></name> <operator pos:line="23" pos:column="12">=<pos:position pos:line="23" pos:column="13"/></operator> <call><name pos:line="23" pos:column="14">netdbPeerByName<pos:position pos:line="23" pos:column="29"/></name><argument_list pos:line="23" pos:column="29">(<argument><expr><name pos:line="23" pos:column="30">n<pos:position pos:line="23" pos:column="31"/></name></expr></argument>, <argument><expr><name><name pos:line="23" pos:column="33">e<pos:position pos:line="23" pos:column="34"/></name><operator pos:line="23" pos:column="34">-&gt;<pos:position pos:line="23" pos:column="39"/></operator><name pos:line="23" pos:column="36">host<pos:position pos:line="23" pos:column="40"/></name></name></expr></argument>)<pos:position pos:line="23" pos:column="41"/></argument_list></call><operator pos:line="23" pos:column="41">)<pos:position pos:line="23" pos:column="42"/></operator> <operator pos:line="23" pos:column="43">==<pos:position pos:line="23" pos:column="45"/></operator> <name pos:line="23" pos:column="46">NULL<pos:position pos:line="23" pos:column="50"/></name></expr>)<pos:position pos:line="23" pos:column="51"/></condition><then pos:line="23" pos:column="51">
        <block type="pseudo"><expr_stmt><expr><name pos:line="24" pos:column="9">p<pos:position pos:line="24" pos:column="10"/></name> <operator pos:line="24" pos:column="11">=<pos:position pos:line="24" pos:column="12"/></operator> <call><name pos:line="24" pos:column="13">netdbPeerAdd<pos:position pos:line="24" pos:column="25"/></name><argument_list pos:line="24" pos:column="25">(<argument><expr><name pos:line="24" pos:column="26">n<pos:position pos:line="24" pos:column="27"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="29">e<pos:position pos:line="24" pos:column="30"/></name></expr></argument>)<pos:position pos:line="24" pos:column="31"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="32"/></expr_stmt></block></then></if>

    <expr_stmt><expr><name><name pos:line="26" pos:column="5">p<pos:position pos:line="26" pos:column="6"/></name><operator pos:line="26" pos:column="6">-&gt;<pos:position pos:line="26" pos:column="11"/></operator><name pos:line="26" pos:column="8">rtt<pos:position pos:line="26" pos:column="11"/></name></name> <operator pos:line="26" pos:column="12">=<pos:position pos:line="26" pos:column="13"/></operator> <name pos:line="26" pos:column="14">rtt<pos:position pos:line="26" pos:column="17"/></name></expr>;<pos:position pos:line="26" pos:column="18"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="28" pos:column="5">p<pos:position pos:line="28" pos:column="6"/></name><operator pos:line="28" pos:column="6">-&gt;<pos:position pos:line="28" pos:column="11"/></operator><name pos:line="28" pos:column="8">hops<pos:position pos:line="28" pos:column="12"/></name></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <name pos:line="28" pos:column="15">hops<pos:position pos:line="28" pos:column="19"/></name></expr>;<pos:position pos:line="28" pos:column="20"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="30" pos:column="5">p<pos:position pos:line="30" pos:column="6"/></name><operator pos:line="30" pos:column="6">-&gt;<pos:position pos:line="30" pos:column="11"/></operator><name pos:line="30" pos:column="8">expires<pos:position pos:line="30" pos:column="15"/></name></name> <operator pos:line="30" pos:column="16">=<pos:position pos:line="30" pos:column="17"/></operator> <name pos:line="30" pos:column="18">squid_curtime<pos:position pos:line="30" pos:column="31"/></name> <operator pos:line="30" pos:column="32">+<pos:position pos:line="30" pos:column="33"/></operator> <literal type="number" pos:line="30" pos:column="34">3600<pos:position pos:line="30" pos:column="38"/></literal></expr>;<pos:position pos:line="30" pos:column="39"/></expr_stmt>  <comment type="block" pos:line="30" pos:column="41">/* XXX ? */</comment>

    <if pos:line="32" pos:column="5">if <condition pos:line="32" pos:column="8">(<expr><name><name pos:line="32" pos:column="9">n<pos:position pos:line="32" pos:column="10"/></name><operator pos:line="32" pos:column="10">-&gt;<pos:position pos:line="32" pos:column="15"/></operator><name pos:line="32" pos:column="12">n_peers<pos:position pos:line="32" pos:column="19"/></name></name> <operator pos:line="32" pos:column="20">&lt;<pos:position pos:line="32" pos:column="24"/></operator> <literal type="number" pos:line="32" pos:column="22">2<pos:position pos:line="32" pos:column="23"/></literal></expr>)<pos:position pos:line="32" pos:column="24"/></condition><then pos:line="32" pos:column="24">
        <block type="pseudo"><return pos:line="33" pos:column="9">return;<pos:position pos:line="33" pos:column="16"/></return></block></then></if>

    <expr_stmt><expr><call><name pos:line="35" pos:column="5">qsort<pos:position pos:line="35" pos:column="10"/></name><argument_list pos:line="35" pos:column="10">(<argument><expr><operator pos:line="35" pos:column="11">(<pos:position pos:line="35" pos:column="12"/></operator><name pos:line="35" pos:column="12">char<pos:position pos:line="35" pos:column="16"/></name> <operator pos:line="35" pos:column="17">*<pos:position pos:line="35" pos:column="18"/></operator><operator pos:line="35" pos:column="18">)<pos:position pos:line="35" pos:column="19"/></operator> <name><name pos:line="35" pos:column="20">n<pos:position pos:line="35" pos:column="21"/></name><operator pos:line="35" pos:column="21">-&gt;<pos:position pos:line="35" pos:column="26"/></operator><name pos:line="35" pos:column="23">peers<pos:position pos:line="35" pos:column="28"/></name></name></expr></argument>,
          <argument><expr><name><name pos:line="36" pos:column="11">n<pos:position pos:line="36" pos:column="12"/></name><operator pos:line="36" pos:column="12">-&gt;<pos:position pos:line="36" pos:column="17"/></operator><name pos:line="36" pos:column="14">n_peers<pos:position pos:line="36" pos:column="21"/></name></name></expr></argument>,
          <argument><expr><sizeof pos:line="37" pos:column="11">sizeof<argument_list pos:line="37" pos:column="17">(<argument><expr><name pos:line="37" pos:column="18">net_db_peer<pos:position pos:line="37" pos:column="29"/></name></expr></argument>)<pos:position pos:line="37" pos:column="30"/></argument_list></sizeof></expr></argument>,
          <argument><expr><name pos:line="38" pos:column="11">sortPeerByRtt<pos:position pos:line="38" pos:column="24"/></name></expr></argument>)<pos:position pos:line="38" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="38" pos:column="26"/></expr_stmt>

<cpp:endif pos:line="40" pos:column="1">#<cpp:directive pos:line="40" pos:column="2">endif<pos:position pos:line="40" pos:column="7"/></cpp:directive></cpp:endif>
}<pos:position pos:line="41" pos:column="2"/></block></function></unit>

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5341_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type> <name><name pos:line="1" pos:column="6">Client<pos:position pos:line="1" pos:column="12"/></name><operator pos:line="1" pos:column="12">::<pos:position pos:line="1" pos:column="14"/></operator><name pos:line="1" pos:column="14">doneAll<pos:position pos:line="1" pos:column="21"/></name></name><parameter_list pos:line="1" pos:column="21">()<pos:position pos:line="1" pos:column="23"/></parameter_list> <specifier pos:line="1" pos:column="24">const<pos:position pos:line="1" pos:column="29"/></specifier>
<block pos:line="2" pos:column="1">{
    <return pos:line="3" pos:column="5">return  <expr><call><name pos:line="3" pos:column="13">doneWithServer<pos:position pos:line="3" pos:column="27"/></name><argument_list pos:line="3" pos:column="27">()<pos:position pos:line="3" pos:column="29"/></argument_list></call> <operator pos:line="3" pos:column="30">&amp;&amp;<pos:position pos:line="3" pos:column="40"/></operator>
<cpp:if pos:line="4" pos:column="1">#<cpp:directive pos:line="4" pos:column="2">if<pos:position pos:line="4" pos:column="4"/></cpp:directive> <expr><name pos:line="4" pos:column="5">USE_ADAPTATION<pos:position pos:line="4" pos:column="19"/></name></expr></cpp:if>
            <call><name pos:line="5" pos:column="13">doneWithAdaptation<pos:position pos:line="5" pos:column="31"/></name><argument_list pos:line="5" pos:column="31">()<pos:position pos:line="5" pos:column="33"/></argument_list></call> <operator pos:line="5" pos:column="34">&amp;&amp;<pos:position pos:line="5" pos:column="44"/></operator>
            <call><name><name pos:line="6" pos:column="13">Adaptation<pos:position pos:line="6" pos:column="23"/></name><operator pos:line="6" pos:column="23">::<pos:position pos:line="6" pos:column="25"/></operator><name pos:line="6" pos:column="25">Initiator<pos:position pos:line="6" pos:column="34"/></name><operator pos:line="6" pos:column="34">::<pos:position pos:line="6" pos:column="36"/></operator><name pos:line="6" pos:column="36">doneAll<pos:position pos:line="6" pos:column="43"/></name></name><argument_list pos:line="6" pos:column="43">()<pos:position pos:line="6" pos:column="45"/></argument_list></call> <operator pos:line="6" pos:column="46">&amp;&amp;<pos:position pos:line="6" pos:column="56"/></operator>
            <call><name><name pos:line="7" pos:column="13">BodyProducer<pos:position pos:line="7" pos:column="25"/></name><operator pos:line="7" pos:column="25">::<pos:position pos:line="7" pos:column="27"/></operator><name pos:line="7" pos:column="27">doneAll<pos:position pos:line="7" pos:column="34"/></name></name><argument_list pos:line="7" pos:column="34">()<pos:position pos:line="7" pos:column="36"/></argument_list></call> <operator pos:line="7" pos:column="37">&amp;&amp;<pos:position pos:line="7" pos:column="47"/></operator>
<cpp:endif pos:line="8" pos:column="1">#<cpp:directive pos:line="8" pos:column="2">endif<pos:position pos:line="8" pos:column="7"/></cpp:directive></cpp:endif>
            <call><name><name pos:line="9" pos:column="13">BodyConsumer<pos:position pos:line="9" pos:column="25"/></name><operator pos:line="9" pos:column="25">::<pos:position pos:line="9" pos:column="27"/></operator><name pos:line="9" pos:column="27">doneAll<pos:position pos:line="9" pos:column="34"/></name></name><argument_list pos:line="9" pos:column="34">()<pos:position pos:line="9" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="37"/></return>
}<pos:position pos:line="10" pos:column="2"/></block></function></unit>

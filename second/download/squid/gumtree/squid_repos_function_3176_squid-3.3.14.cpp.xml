<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_3176_squid-3.3.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">internalStart<pos:position pos:line="2" pos:column="14"/></name><parameter_list pos:line="2" pos:column="14">(<parameter><decl><type><specifier pos:line="2" pos:column="15">const<pos:position pos:line="2" pos:column="20"/></specifier> <name><name pos:line="2" pos:column="21">Comm<pos:position pos:line="2" pos:column="25"/></name><operator pos:line="2" pos:column="25">::<pos:position pos:line="2" pos:column="27"/></operator><name pos:line="2" pos:column="27">ConnectionPointer<pos:position pos:line="2" pos:column="44"/></name></name> <modifier pos:line="2" pos:column="45">&amp;<pos:position pos:line="2" pos:column="50"/></modifier></type><name pos:line="2" pos:column="46">clientConn<pos:position pos:line="2" pos:column="56"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="58">HttpRequest<pos:position pos:line="2" pos:column="69"/></name> <modifier pos:line="2" pos:column="70">*<pos:position pos:line="2" pos:column="71"/></modifier></type> <name pos:line="2" pos:column="72">request<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="81">StoreEntry<pos:position pos:line="2" pos:column="91"/></name> <modifier pos:line="2" pos:column="92">*<pos:position pos:line="2" pos:column="93"/></modifier></type> <name pos:line="2" pos:column="94">entry<pos:position pos:line="2" pos:column="99"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="100"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">ErrorState<pos:position pos:line="4" pos:column="15"/></name> <modifier pos:line="4" pos:column="16">*<pos:position pos:line="4" pos:column="17"/></modifier></type><name pos:line="4" pos:column="17">err<pos:position pos:line="4" pos:column="20"/></name></decl>;<pos:position pos:line="4" pos:column="21"/></decl_stmt>
    <decl_stmt><decl><type><specifier pos:line="5" pos:column="5">const<pos:position pos:line="5" pos:column="10"/></specifier> <name pos:line="5" pos:column="11">char<pos:position pos:line="5" pos:column="15"/></name> <modifier pos:line="5" pos:column="16">*<pos:position pos:line="5" pos:column="17"/></modifier></type><name pos:line="5" pos:column="17">upath<pos:position pos:line="5" pos:column="22"/></name> <init pos:line="5" pos:column="23">= <expr><call><name><name pos:line="5" pos:column="25">request<pos:position pos:line="5" pos:column="32"/></name><operator pos:line="5" pos:column="32">-&gt;<pos:position pos:line="5" pos:column="37"/></operator><name pos:line="5" pos:column="34">urlpath<pos:position pos:line="5" pos:column="41"/></name><operator pos:line="5" pos:column="41">.<pos:position pos:line="5" pos:column="42"/></operator><name pos:line="5" pos:column="42">termedBuf<pos:position pos:line="5" pos:column="51"/></name></name><argument_list pos:line="5" pos:column="51">()<pos:position pos:line="5" pos:column="53"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="54"/></decl_stmt>
    <expr_stmt><expr><call><name pos:line="6" pos:column="5">debugs<pos:position pos:line="6" pos:column="11"/></name><argument_list pos:line="6" pos:column="11">(<argument><expr><literal type="number" pos:line="6" pos:column="12">76<pos:position pos:line="6" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="6" pos:column="16">3<pos:position pos:line="6" pos:column="17"/></literal></expr></argument>, <argument><expr><name pos:line="6" pos:column="19">HERE<pos:position pos:line="6" pos:column="23"/></name> <operator pos:line="6" pos:column="24">&lt;&lt;<pos:position pos:line="6" pos:column="32"/></operator> <name pos:line="6" pos:column="27">clientConn<pos:position pos:line="6" pos:column="37"/></name> <operator pos:line="6" pos:column="38">&lt;&lt;<pos:position pos:line="6" pos:column="46"/></operator> <literal type="string" pos:line="6" pos:column="41">" requesting '"<pos:position pos:line="6" pos:column="56"/></literal> <operator pos:line="6" pos:column="57">&lt;&lt;<pos:position pos:line="6" pos:column="65"/></operator> <name pos:line="6" pos:column="60">upath<pos:position pos:line="6" pos:column="65"/></name> <operator pos:line="6" pos:column="66">&lt;&lt;<pos:position pos:line="6" pos:column="74"/></operator> <literal type="string" pos:line="6" pos:column="69">"'"<pos:position pos:line="6" pos:column="72"/></literal></expr></argument>)<pos:position pos:line="6" pos:column="73"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="74"/></expr_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><literal type="number" pos:line="8" pos:column="9">0<pos:position pos:line="8" pos:column="10"/></literal> <operator pos:line="8" pos:column="11">==<pos:position pos:line="8" pos:column="13"/></operator> <call><name pos:line="8" pos:column="14">strcmp<pos:position pos:line="8" pos:column="20"/></name><argument_list pos:line="8" pos:column="20">(<argument><expr><name pos:line="8" pos:column="21">upath<pos:position pos:line="8" pos:column="26"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="8" pos:column="28">"/squid-internal-dynamic/netdb"<pos:position pos:line="8" pos:column="59"/></literal></expr></argument>)<pos:position pos:line="8" pos:column="60"/></argument_list></call></expr>)<pos:position pos:line="8" pos:column="61"/></condition><then pos:line="8" pos:column="61"> <block pos:line="8" pos:column="62">{
        <expr_stmt><expr><call><name pos:line="9" pos:column="9">netdbBinaryExchange<pos:position pos:line="9" pos:column="28"/></name><argument_list pos:line="9" pos:column="28">(<argument><expr><name pos:line="9" pos:column="29">entry<pos:position pos:line="9" pos:column="34"/></name></expr></argument>)<pos:position pos:line="9" pos:column="35"/></argument_list></call></expr>;<pos:position pos:line="9" pos:column="36"/></expr_stmt>
    }<pos:position pos:line="10" pos:column="6"/></block></then> <elseif pos:line="10" pos:column="7">else <if pos:line="10" pos:column="12">if <condition pos:line="10" pos:column="15">(<expr><literal type="number" pos:line="10" pos:column="16">0<pos:position pos:line="10" pos:column="17"/></literal> <operator pos:line="10" pos:column="18">==<pos:position pos:line="10" pos:column="20"/></operator> <call><name pos:line="10" pos:column="21">strcmp<pos:position pos:line="10" pos:column="27"/></name><argument_list pos:line="10" pos:column="27">(<argument><expr><name pos:line="10" pos:column="28">upath<pos:position pos:line="10" pos:column="33"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="10" pos:column="35">"/squid-internal-periodic/store_digest"<pos:position pos:line="10" pos:column="74"/></literal></expr></argument>)<pos:position pos:line="10" pos:column="75"/></argument_list></call></expr>)<pos:position pos:line="10" pos:column="76"/></condition><then pos:line="10" pos:column="76"> <block pos:line="10" pos:column="77">{
<cpp:if pos:line="11" pos:column="1">#<cpp:directive pos:line="11" pos:column="2">if<pos:position pos:line="11" pos:column="4"/></cpp:directive> <expr><name pos:line="11" pos:column="5">USE_CACHE_DIGESTS<pos:position pos:line="11" pos:column="22"/></name></expr></cpp:if>
        <decl_stmt><decl><type><specifier pos:line="12" pos:column="9">const<pos:position pos:line="12" pos:column="14"/></specifier> <name pos:line="12" pos:column="15">char<pos:position pos:line="12" pos:column="19"/></name> <modifier pos:line="12" pos:column="20">*<pos:position pos:line="12" pos:column="21"/></modifier></type><name pos:line="12" pos:column="21">msgbuf<pos:position pos:line="12" pos:column="27"/></name> <init pos:line="12" pos:column="28">= <expr><literal type="string" pos:line="12" pos:column="30">"This cache is currently building its digest.\n"<pos:position pos:line="12" pos:column="78"/></literal></expr></init></decl>;<pos:position pos:line="12" pos:column="79"/></decl_stmt>
<cpp:else pos:line="13" pos:column="1">#<cpp:directive pos:line="13" pos:column="2">else<pos:position pos:line="13" pos:column="6"/></cpp:directive></cpp:else>

        <decl_stmt><decl><type><specifier pos:line="15" pos:column="9">const<pos:position pos:line="15" pos:column="14"/></specifier> <name pos:line="15" pos:column="15">char<pos:position pos:line="15" pos:column="19"/></name> <modifier pos:line="15" pos:column="20">*<pos:position pos:line="15" pos:column="21"/></modifier></type><name pos:line="15" pos:column="21">msgbuf<pos:position pos:line="15" pos:column="27"/></name> <init pos:line="15" pos:column="28">= <expr><literal type="string" pos:line="15" pos:column="30">"This cache does not support Cache Digests.\n"<pos:position pos:line="15" pos:column="76"/></literal></expr></init></decl>;<pos:position pos:line="15" pos:column="77"/></decl_stmt>
<cpp:endif pos:line="16" pos:column="1">#<cpp:directive pos:line="16" pos:column="2">endif<pos:position pos:line="16" pos:column="7"/></cpp:directive></cpp:endif>

        <decl_stmt><decl><type><name pos:line="18" pos:column="9">HttpReply<pos:position pos:line="18" pos:column="18"/></name> <modifier pos:line="18" pos:column="19">*<pos:position pos:line="18" pos:column="20"/></modifier></type><name pos:line="18" pos:column="20">reply<pos:position pos:line="18" pos:column="25"/></name> <init pos:line="18" pos:column="26">= <expr><operator pos:line="18" pos:column="28">new<pos:position pos:line="18" pos:column="31"/></operator> <name pos:line="18" pos:column="32">HttpReply<pos:position pos:line="18" pos:column="41"/></name></expr></init></decl>;<pos:position pos:line="18" pos:column="42"/></decl_stmt>
        <expr_stmt><expr><call><name><name pos:line="19" pos:column="9">reply<pos:position pos:line="19" pos:column="14"/></name><operator pos:line="19" pos:column="14">-&gt;<pos:position pos:line="19" pos:column="19"/></operator><name pos:line="19" pos:column="16">setHeaders<pos:position pos:line="19" pos:column="26"/></name></name><argument_list pos:line="19" pos:column="26">(<argument><expr><name pos:line="19" pos:column="27">HTTP_NOT_FOUND<pos:position pos:line="19" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="43">"Not Found"<pos:position pos:line="19" pos:column="54"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="19" pos:column="56">"text/plain"<pos:position pos:line="19" pos:column="68"/></literal></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="70">strlen<pos:position pos:line="19" pos:column="76"/></name><argument_list pos:line="19" pos:column="76">(<argument><expr><name pos:line="19" pos:column="77">msgbuf<pos:position pos:line="19" pos:column="83"/></name></expr></argument>)<pos:position pos:line="19" pos:column="84"/></argument_list></call></expr></argument>, <argument><expr><name pos:line="19" pos:column="86">squid_curtime<pos:position pos:line="19" pos:column="99"/></name></expr></argument>, <argument><expr><operator pos:line="19" pos:column="101">-<pos:position pos:line="19" pos:column="102"/></operator><literal type="number" pos:line="19" pos:column="102">2<pos:position pos:line="19" pos:column="103"/></literal></expr></argument>)<pos:position pos:line="19" pos:column="104"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="105"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="20" pos:column="9">entry<pos:position pos:line="20" pos:column="14"/></name><operator pos:line="20" pos:column="14">-&gt;<pos:position pos:line="20" pos:column="19"/></operator><name pos:line="20" pos:column="16">replaceHttpReply<pos:position pos:line="20" pos:column="32"/></name></name><argument_list pos:line="20" pos:column="32">(<argument><expr><name pos:line="20" pos:column="33">reply<pos:position pos:line="20" pos:column="38"/></name></expr></argument>)<pos:position pos:line="20" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="40"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="21" pos:column="9">entry<pos:position pos:line="21" pos:column="14"/></name><operator pos:line="21" pos:column="14">-&gt;<pos:position pos:line="21" pos:column="19"/></operator><name pos:line="21" pos:column="16">append<pos:position pos:line="21" pos:column="22"/></name></name><argument_list pos:line="21" pos:column="22">(<argument><expr><name pos:line="21" pos:column="23">msgbuf<pos:position pos:line="21" pos:column="29"/></name></expr></argument>, <argument><expr><call><name pos:line="21" pos:column="31">strlen<pos:position pos:line="21" pos:column="37"/></name><argument_list pos:line="21" pos:column="37">(<argument><expr><name pos:line="21" pos:column="38">msgbuf<pos:position pos:line="21" pos:column="44"/></name></expr></argument>)<pos:position pos:line="21" pos:column="45"/></argument_list></call></expr></argument>)<pos:position pos:line="21" pos:column="46"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="47"/></expr_stmt>
        <expr_stmt><expr><call><name><name pos:line="22" pos:column="9">entry<pos:position pos:line="22" pos:column="14"/></name><operator pos:line="22" pos:column="14">-&gt;<pos:position pos:line="22" pos:column="19"/></operator><name pos:line="22" pos:column="16">complete<pos:position pos:line="22" pos:column="24"/></name></name><argument_list pos:line="22" pos:column="24">()<pos:position pos:line="22" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="22" pos:column="27"/></expr_stmt>
    }<pos:position pos:line="23" pos:column="6"/></block></then></if></elseif> <elseif pos:line="23" pos:column="7">else <if pos:line="23" pos:column="12">if <condition pos:line="23" pos:column="15">(<expr><literal type="number" pos:line="23" pos:column="16">0<pos:position pos:line="23" pos:column="17"/></literal> <operator pos:line="23" pos:column="18">==<pos:position pos:line="23" pos:column="20"/></operator> <call><name pos:line="23" pos:column="21">strncmp<pos:position pos:line="23" pos:column="28"/></name><argument_list pos:line="23" pos:column="28">(<argument><expr><name pos:line="23" pos:column="29">upath<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="23" pos:column="36">"/squid-internal-mgr/"<pos:position pos:line="23" pos:column="58"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="23" pos:column="60">20<pos:position pos:line="23" pos:column="62"/></literal></expr></argument>)<pos:position pos:line="23" pos:column="63"/></argument_list></call></expr>)<pos:position pos:line="23" pos:column="64"/></condition><then pos:line="23" pos:column="64"> <block pos:line="23" pos:column="65">{
        <expr_stmt><expr><call><name><name pos:line="24" pos:column="9">CacheManager<pos:position pos:line="24" pos:column="21"/></name><operator pos:line="24" pos:column="21">::<pos:position pos:line="24" pos:column="23"/></operator><name pos:line="24" pos:column="23">GetInstance<pos:position pos:line="24" pos:column="34"/></name></name><argument_list pos:line="24" pos:column="34">()<pos:position pos:line="24" pos:column="36"/></argument_list></call><operator pos:line="24" pos:column="36">-&gt;<pos:position pos:line="24" pos:column="41"/></operator><call><name pos:line="24" pos:column="38">Start<pos:position pos:line="24" pos:column="43"/></name><argument_list pos:line="24" pos:column="43">(<argument><expr><name pos:line="24" pos:column="44">clientConn<pos:position pos:line="24" pos:column="54"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="56">request<pos:position pos:line="24" pos:column="63"/></name></expr></argument>, <argument><expr><name pos:line="24" pos:column="65">entry<pos:position pos:line="24" pos:column="70"/></name></expr></argument>)<pos:position pos:line="24" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="24" pos:column="72"/></expr_stmt>
    }<pos:position pos:line="25" pos:column="6"/></block></then></if></elseif> <else pos:line="25" pos:column="7">else <block pos:line="25" pos:column="12">{
        <expr_stmt><expr><call><name pos:line="26" pos:column="9">debugObj<pos:position pos:line="26" pos:column="17"/></name><argument_list pos:line="26" pos:column="17">(<argument><expr><literal type="number" pos:line="26" pos:column="18">76<pos:position pos:line="26" pos:column="20"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="26" pos:column="22">1<pos:position pos:line="26" pos:column="23"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="25">"internalStart: unknown request:\n"<pos:position pos:line="26" pos:column="60"/></literal></expr></argument>,
                 <argument><expr><name pos:line="27" pos:column="18">request<pos:position pos:line="27" pos:column="25"/></name></expr></argument>, <argument><expr><operator pos:line="27" pos:column="27">(<pos:position pos:line="27" pos:column="28"/></operator><name pos:line="27" pos:column="28">ObjPackMethod<pos:position pos:line="27" pos:column="41"/></name><operator pos:line="27" pos:column="41">)<pos:position pos:line="27" pos:column="42"/></operator> <operator pos:line="27" pos:column="43">&amp;<pos:position pos:line="27" pos:column="48"/></operator> <name pos:line="27" pos:column="45">httpRequestPack<pos:position pos:line="27" pos:column="60"/></name></expr></argument>)<pos:position pos:line="27" pos:column="61"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="62"/></expr_stmt>
        <expr_stmt><expr><name pos:line="28" pos:column="9">err<pos:position pos:line="28" pos:column="12"/></name> <operator pos:line="28" pos:column="13">=<pos:position pos:line="28" pos:column="14"/></operator> <operator pos:line="28" pos:column="15">new<pos:position pos:line="28" pos:column="18"/></operator> <call><name pos:line="28" pos:column="19">ErrorState<pos:position pos:line="28" pos:column="29"/></name><argument_list pos:line="28" pos:column="29">(<argument><expr><name pos:line="28" pos:column="30">ERR_INVALID_REQ<pos:position pos:line="28" pos:column="45"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="47">HTTP_NOT_FOUND<pos:position pos:line="28" pos:column="61"/></name></expr></argument>, <argument><expr><name pos:line="28" pos:column="63">request<pos:position pos:line="28" pos:column="70"/></name></expr></argument>)<pos:position pos:line="28" pos:column="71"/></argument_list></call></expr>;<pos:position pos:line="28" pos:column="72"/></expr_stmt>
        <expr_stmt><expr><call><name pos:line="29" pos:column="9">errorAppendEntry<pos:position pos:line="29" pos:column="25"/></name><argument_list pos:line="29" pos:column="25">(<argument><expr><name pos:line="29" pos:column="26">entry<pos:position pos:line="29" pos:column="31"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="33">err<pos:position pos:line="29" pos:column="36"/></name></expr></argument>)<pos:position pos:line="29" pos:column="37"/></argument_list></call></expr>;<pos:position pos:line="29" pos:column="38"/></expr_stmt>
    }<pos:position pos:line="30" pos:column="6"/></block></else></if>
}<pos:position pos:line="31" pos:column="2"/></block></function></unit>

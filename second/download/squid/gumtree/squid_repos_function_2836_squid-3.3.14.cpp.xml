<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_2836_squid-3.3.14.cpp" pos:tabs="8"><function><specifier pos:line="1" pos:column="1">static<pos:position pos:line="1" pos:column="7"/></specifier> <type><name pos:line="1" pos:column="8">void<pos:position pos:line="1" pos:column="12"/></name></type>
<name pos:line="2" pos:column="1">parse_wccp2_service_ports<pos:position pos:line="2" pos:column="26"/></name><parameter_list pos:line="2" pos:column="26">(<parameter><decl><type><name pos:line="2" pos:column="27">char<pos:position pos:line="2" pos:column="31"/></name> <modifier pos:line="2" pos:column="32">*<pos:position pos:line="2" pos:column="33"/></modifier></type><name pos:line="2" pos:column="33">options<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">int<pos:position pos:line="2" pos:column="45"/></name></type> <name><name pos:line="2" pos:column="46">portlist<pos:position pos:line="2" pos:column="54"/></name><index pos:line="2" pos:column="54">[]<pos:position pos:line="2" pos:column="56"/></index></name></decl></parameter>)<pos:position pos:line="2" pos:column="57"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">int<pos:position pos:line="4" pos:column="8"/></name></type> <name pos:line="4" pos:column="9">i<pos:position pos:line="4" pos:column="10"/></name> <init pos:line="4" pos:column="11">= <expr><literal type="number" pos:line="4" pos:column="13">0<pos:position pos:line="4" pos:column="14"/></literal></expr></init></decl>;<pos:position pos:line="4" pos:column="15"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="5" pos:column="5">int<pos:position pos:line="5" pos:column="8"/></name></type> <name pos:line="5" pos:column="9">p<pos:position pos:line="5" pos:column="10"/></name></decl>;<pos:position pos:line="5" pos:column="11"/></decl_stmt>
    <decl_stmt><decl><type><name pos:line="6" pos:column="5">char<pos:position pos:line="6" pos:column="9"/></name> <modifier pos:line="6" pos:column="10">*<pos:position pos:line="6" pos:column="11"/></modifier></type><name pos:line="6" pos:column="11">tmp<pos:position pos:line="6" pos:column="14"/></name></decl>, <modifier pos:line="6" pos:column="16">*<pos:position pos:line="6" pos:column="17"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="17">tmp2<pos:position pos:line="6" pos:column="21"/></name></decl>, <modifier pos:line="6" pos:column="23">*<pos:position pos:line="6" pos:column="24"/></modifier><decl><type ref="prev"/><name pos:line="6" pos:column="24">port<pos:position pos:line="6" pos:column="28"/></name></decl>;<pos:position pos:line="6" pos:column="29"/></decl_stmt>

    <if pos:line="8" pos:column="5">if <condition pos:line="8" pos:column="8">(<expr><operator pos:line="8" pos:column="9">!<pos:position pos:line="8" pos:column="10"/></operator><name pos:line="8" pos:column="10">options<pos:position pos:line="8" pos:column="17"/></name></expr>)<pos:position pos:line="8" pos:column="18"/></condition><then pos:line="8" pos:column="18"> <block pos:line="8" pos:column="19">{
        <return pos:line="9" pos:column="9">return;<pos:position pos:line="9" pos:column="16"/></return>
    }<pos:position pos:line="10" pos:column="6"/></block></then></if>

    <expr_stmt><expr><name pos:line="12" pos:column="5">tmp<pos:position pos:line="12" pos:column="8"/></name> <operator pos:line="12" pos:column="9">=<pos:position pos:line="12" pos:column="10"/></operator> <call><name pos:line="12" pos:column="11">xstrdup<pos:position pos:line="12" pos:column="18"/></name><argument_list pos:line="12" pos:column="18">(<argument><expr><name pos:line="12" pos:column="19">options<pos:position pos:line="12" pos:column="26"/></name></expr></argument>)<pos:position pos:line="12" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="12" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name pos:line="13" pos:column="5">tmp2<pos:position pos:line="13" pos:column="9"/></name> <operator pos:line="13" pos:column="10">=<pos:position pos:line="13" pos:column="11"/></operator> <name pos:line="13" pos:column="12">tmp<pos:position pos:line="13" pos:column="15"/></name></expr>;<pos:position pos:line="13" pos:column="16"/></expr_stmt>

    <expr_stmt><expr><name pos:line="15" pos:column="5">port<pos:position pos:line="15" pos:column="9"/></name> <operator pos:line="15" pos:column="10">=<pos:position pos:line="15" pos:column="11"/></operator> <call><name pos:line="15" pos:column="12">strsep<pos:position pos:line="15" pos:column="18"/></name><argument_list pos:line="15" pos:column="18">(<argument><expr><operator pos:line="15" pos:column="19">&amp;<pos:position pos:line="15" pos:column="24"/></operator><name pos:line="15" pos:column="20">tmp2<pos:position pos:line="15" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="15" pos:column="26">","<pos:position pos:line="15" pos:column="29"/></literal></expr></argument>)<pos:position pos:line="15" pos:column="30"/></argument_list></call></expr>;<pos:position pos:line="15" pos:column="31"/></expr_stmt>

    <while pos:line="17" pos:column="5">while <condition pos:line="17" pos:column="11">(<expr><name pos:line="17" pos:column="12">port<pos:position pos:line="17" pos:column="16"/></name> <operator pos:line="17" pos:column="17">&amp;&amp;<pos:position pos:line="17" pos:column="27"/></operator> <name pos:line="17" pos:column="20">i<pos:position pos:line="17" pos:column="21"/></name> <operator pos:line="17" pos:column="22">&lt;<pos:position pos:line="17" pos:column="26"/></operator> <name pos:line="17" pos:column="24">WCCP2_NUMPORTS<pos:position pos:line="17" pos:column="38"/></name></expr>)<pos:position pos:line="17" pos:column="39"/></condition> <block pos:line="17" pos:column="40">{
        <expr_stmt><expr><name pos:line="18" pos:column="9">p<pos:position pos:line="18" pos:column="10"/></name> <operator pos:line="18" pos:column="11">=<pos:position pos:line="18" pos:column="12"/></operator> <call><name pos:line="18" pos:column="13">xatoi<pos:position pos:line="18" pos:column="18"/></name><argument_list pos:line="18" pos:column="18">(<argument><expr><name pos:line="18" pos:column="19">port<pos:position pos:line="18" pos:column="23"/></name></expr></argument>)<pos:position pos:line="18" pos:column="24"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="25"/></expr_stmt>

        <if pos:line="20" pos:column="9">if <condition pos:line="20" pos:column="12">(<expr><name><name pos:line="20" pos:column="13">p<pos:position pos:line="20" pos:column="14"/></name> <argument_list type="generic" pos:line="20" pos:column="15">&lt; <argument><expr><literal type="number" pos:line="20" pos:column="17">1<pos:position pos:line="20" pos:column="18"/></literal> <operator pos:line="20" pos:column="19">||<pos:position pos:line="20" pos:column="21"/></operator> <name pos:line="20" pos:column="22">p<pos:position pos:line="20" pos:column="23"/></name></expr></argument> &gt;<pos:position pos:line="20" pos:column="28"/></argument_list></name> <literal type="number" pos:line="20" pos:column="26">65535<pos:position pos:line="20" pos:column="31"/></literal></expr>)<pos:position pos:line="20" pos:column="32"/></condition><then pos:line="20" pos:column="32"> <block pos:line="20" pos:column="33">{
            <expr_stmt><expr><call><name pos:line="21" pos:column="13">fatalf<pos:position pos:line="21" pos:column="19"/></name><argument_list pos:line="21" pos:column="19">(<argument><expr><literal type="string" pos:line="21" pos:column="20">"parse_wccp2_service_ports: port value '%s' isn't valid (1..65535)\n"<pos:position pos:line="21" pos:column="89"/></literal></expr></argument>, <argument><expr><name pos:line="21" pos:column="91">port<pos:position pos:line="21" pos:column="95"/></name></expr></argument>)<pos:position pos:line="21" pos:column="96"/></argument_list></call></expr>;<pos:position pos:line="21" pos:column="97"/></expr_stmt>
        }<pos:position pos:line="22" pos:column="10"/></block></then></if>

        <expr_stmt><expr><name><name pos:line="24" pos:column="9">portlist<pos:position pos:line="24" pos:column="17"/></name><index pos:line="24" pos:column="17">[<expr><name pos:line="24" pos:column="18">i<pos:position pos:line="24" pos:column="19"/></name></expr>]<pos:position pos:line="24" pos:column="20"/></index></name> <operator pos:line="24" pos:column="21">=<pos:position pos:line="24" pos:column="22"/></operator> <name pos:line="24" pos:column="23">p<pos:position pos:line="24" pos:column="24"/></name></expr>;<pos:position pos:line="24" pos:column="25"/></expr_stmt>
        <expr_stmt><expr><operator pos:line="25" pos:column="9">++<pos:position pos:line="25" pos:column="11"/></operator><name pos:line="25" pos:column="11">i<pos:position pos:line="25" pos:column="12"/></name></expr>;<pos:position pos:line="25" pos:column="13"/></expr_stmt>
        <expr_stmt><expr><name pos:line="26" pos:column="9">port<pos:position pos:line="26" pos:column="13"/></name> <operator pos:line="26" pos:column="14">=<pos:position pos:line="26" pos:column="15"/></operator> <call><name pos:line="26" pos:column="16">strsep<pos:position pos:line="26" pos:column="22"/></name><argument_list pos:line="26" pos:column="22">(<argument><expr><operator pos:line="26" pos:column="23">&amp;<pos:position pos:line="26" pos:column="28"/></operator><name pos:line="26" pos:column="24">tmp2<pos:position pos:line="26" pos:column="28"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="26" pos:column="30">","<pos:position pos:line="26" pos:column="33"/></literal></expr></argument>)<pos:position pos:line="26" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="26" pos:column="35"/></expr_stmt>
    }<pos:position pos:line="27" pos:column="6"/></block></while>

    <if pos:line="29" pos:column="5">if <condition pos:line="29" pos:column="8">(<expr><name pos:line="29" pos:column="9">i<pos:position pos:line="29" pos:column="10"/></name> <operator pos:line="29" pos:column="11">==<pos:position pos:line="29" pos:column="13"/></operator> <name pos:line="29" pos:column="14">WCCP2_NUMPORTS<pos:position pos:line="29" pos:column="28"/></name> <operator pos:line="29" pos:column="29">&amp;&amp;<pos:position pos:line="29" pos:column="39"/></operator> <name pos:line="29" pos:column="32">port<pos:position pos:line="29" pos:column="36"/></name></expr>)<pos:position pos:line="29" pos:column="37"/></condition><then pos:line="29" pos:column="37"> <block pos:line="29" pos:column="38">{
        <expr_stmt><expr><call><name pos:line="30" pos:column="9">fatalf<pos:position pos:line="30" pos:column="15"/></name><argument_list pos:line="30" pos:column="15">(<argument><expr><literal type="string" pos:line="30" pos:column="16">"parse_wccp2_service_ports: too many ports (maximum: 8) in list '%s'\n"<pos:position pos:line="30" pos:column="87"/></literal></expr></argument>, <argument><expr><name pos:line="30" pos:column="89">options<pos:position pos:line="30" pos:column="96"/></name></expr></argument>)<pos:position pos:line="30" pos:column="97"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="98"/></expr_stmt>
    }<pos:position pos:line="31" pos:column="6"/></block></then></if>

    <expr_stmt><expr><call><name pos:line="33" pos:column="5">xfree<pos:position pos:line="33" pos:column="10"/></name><argument_list pos:line="33" pos:column="10">(<argument><expr><name pos:line="33" pos:column="11">tmp<pos:position pos:line="33" pos:column="14"/></name></expr></argument>)<pos:position pos:line="33" pos:column="15"/></argument_list></call></expr>;<pos:position pos:line="33" pos:column="16"/></expr_stmt>
}<pos:position pos:line="34" pos:column="2"/></block></function></unit>

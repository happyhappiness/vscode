<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_4568_squid-3.1.23.cpp" pos:tabs="8"><function><type><name><name pos:line="1" pos:column="1">StoreIOState<pos:position pos:line="1" pos:column="13"/></name><operator pos:line="1" pos:column="13">::<pos:position pos:line="1" pos:column="15"/></operator><name pos:line="1" pos:column="15">Pointer<pos:position pos:line="1" pos:column="22"/></name></name></type>
<name><name pos:line="2" pos:column="1">CossSwapDir<pos:position pos:line="2" pos:column="12"/></name><operator pos:line="2" pos:column="12">::<pos:position pos:line="2" pos:column="14"/></operator><name pos:line="2" pos:column="14">createStoreIO<pos:position pos:line="2" pos:column="27"/></name></name><parameter_list pos:line="2" pos:column="27">(<parameter><decl><type><name pos:line="2" pos:column="28">StoreEntry<pos:position pos:line="2" pos:column="38"/></name> <modifier pos:line="2" pos:column="39">&amp;<pos:position pos:line="2" pos:column="44"/></modifier></type><name pos:line="2" pos:column="40">e<pos:position pos:line="2" pos:column="41"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="43">StoreIOState<pos:position pos:line="2" pos:column="55"/></name><operator pos:line="2" pos:column="55">::<pos:position pos:line="2" pos:column="57"/></operator><name pos:line="2" pos:column="57">STFNCB<pos:position pos:line="2" pos:column="63"/></name></name> <modifier pos:line="2" pos:column="64">*<pos:position pos:line="2" pos:column="65"/></modifier></type> <name pos:line="2" pos:column="66">file_callback<pos:position pos:line="2" pos:column="79"/></name></decl></parameter>, <parameter><decl><type><name><name pos:line="2" pos:column="81">StoreIOState<pos:position pos:line="2" pos:column="93"/></name><operator pos:line="2" pos:column="93">::<pos:position pos:line="2" pos:column="95"/></operator><name pos:line="2" pos:column="95">STIOCB<pos:position pos:line="2" pos:column="101"/></name></name> <modifier pos:line="2" pos:column="102">*<pos:position pos:line="2" pos:column="103"/></modifier></type> <name pos:line="2" pos:column="104">callback<pos:position pos:line="2" pos:column="112"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="114">void<pos:position pos:line="2" pos:column="118"/></name> <modifier pos:line="2" pos:column="119">*<pos:position pos:line="2" pos:column="120"/></modifier></type><name pos:line="2" pos:column="120">callback_data<pos:position pos:line="2" pos:column="133"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="134"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">CossState<pos:position pos:line="4" pos:column="14"/></name> <modifier pos:line="4" pos:column="15">*<pos:position pos:line="4" pos:column="16"/></modifier></type><name pos:line="4" pos:column="16">cstate<pos:position pos:line="4" pos:column="22"/></name></decl>;<pos:position pos:line="4" pos:column="23"/></decl_stmt>
    <decl_stmt><decl><type><name><name pos:line="5" pos:column="5">StoreIOState<pos:position pos:line="5" pos:column="17"/></name><operator pos:line="5" pos:column="17">::<pos:position pos:line="5" pos:column="19"/></operator><name pos:line="5" pos:column="19">Pointer<pos:position pos:line="5" pos:column="26"/></name></name></type> <name pos:line="5" pos:column="27">sio<pos:position pos:line="5" pos:column="30"/></name> <init pos:line="5" pos:column="31">= <expr><operator pos:line="5" pos:column="33">new<pos:position pos:line="5" pos:column="36"/></operator> <call><name pos:line="5" pos:column="37">CossState<pos:position pos:line="5" pos:column="46"/></name><argument_list pos:line="5" pos:column="46">(<argument><expr><name pos:line="5" pos:column="47">this<pos:position pos:line="5" pos:column="51"/></name></expr></argument>)<pos:position pos:line="5" pos:column="52"/></argument_list></call></expr></init></decl>;<pos:position pos:line="5" pos:column="53"/></decl_stmt>
    <expr_stmt><expr><name pos:line="6" pos:column="5">cstate<pos:position pos:line="6" pos:column="11"/></name> <operator pos:line="6" pos:column="12">=<pos:position pos:line="6" pos:column="13"/></operator> <cast type="dynamic" pos:line="6" pos:column="14">dynamic_cast<argument_list type="generic" pos:line="6" pos:column="26">&lt;<argument><expr><name pos:line="6" pos:column="27">CossState<pos:position pos:line="6" pos:column="36"/></name> <operator pos:line="6" pos:column="37">*<pos:position pos:line="6" pos:column="38"/></operator></expr></argument>&gt;<pos:position pos:line="6" pos:column="42"/></argument_list><argument_list pos:line="6" pos:column="39">(<argument><expr><call><name><name pos:line="6" pos:column="40">sio<pos:position pos:line="6" pos:column="43"/></name><operator pos:line="6" pos:column="43">.<pos:position pos:line="6" pos:column="44"/></operator><name pos:line="6" pos:column="44">getRaw<pos:position pos:line="6" pos:column="50"/></name></name><argument_list pos:line="6" pos:column="50">()<pos:position pos:line="6" pos:column="52"/></argument_list></call></expr></argument>)<pos:position pos:line="6" pos:column="53"/></argument_list></cast></expr>;<pos:position pos:line="6" pos:column="54"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">sio<pos:position pos:line="7" pos:column="8"/></name><operator pos:line="7" pos:column="8">-&gt;<pos:position pos:line="7" pos:column="13"/></operator><name pos:line="7" pos:column="10">offset_<pos:position pos:line="7" pos:column="17"/></name></name> <operator pos:line="7" pos:column="18">=<pos:position pos:line="7" pos:column="19"/></operator> <literal type="number" pos:line="7" pos:column="20">0<pos:position pos:line="7" pos:column="21"/></literal></expr>;<pos:position pos:line="7" pos:column="22"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">sio<pos:position pos:line="8" pos:column="8"/></name><operator pos:line="8" pos:column="8">-&gt;<pos:position pos:line="8" pos:column="13"/></operator><name pos:line="8" pos:column="10">mode<pos:position pos:line="8" pos:column="14"/></name></name> <operator pos:line="8" pos:column="15">=<pos:position pos:line="8" pos:column="16"/></operator> <name pos:line="8" pos:column="17">O_WRONLY<pos:position pos:line="8" pos:column="25"/></name> <operator pos:line="8" pos:column="26">|<pos:position pos:line="8" pos:column="27"/></operator> <name pos:line="8" pos:column="28">O_BINARY<pos:position pos:line="8" pos:column="36"/></name></expr>;<pos:position pos:line="8" pos:column="37"/></expr_stmt>

    <comment type="block" pos:line="10" pos:column="5">/*
     * If we get handed an object with a size of -1,
     * the squid code is broken
     */</comment>
    <expr_stmt><expr><call><name pos:line="14" pos:column="5">assert<pos:position pos:line="14" pos:column="11"/></name><argument_list pos:line="14" pos:column="11">(<argument><expr><name><name pos:line="14" pos:column="12">e<pos:position pos:line="14" pos:column="13"/></name><operator pos:line="14" pos:column="13">.<pos:position pos:line="14" pos:column="14"/></operator><name pos:line="14" pos:column="14">mem_obj<pos:position pos:line="14" pos:column="21"/></name><operator pos:line="14" pos:column="21">-&gt;<pos:position pos:line="14" pos:column="26"/></operator><name pos:line="14" pos:column="23">object_sz<pos:position pos:line="14" pos:column="32"/></name></name> <operator pos:line="14" pos:column="33">!=<pos:position pos:line="14" pos:column="35"/></operator> <operator pos:line="14" pos:column="36">-<pos:position pos:line="14" pos:column="37"/></operator><literal type="number" pos:line="14" pos:column="37">1<pos:position pos:line="14" pos:column="38"/></literal></expr></argument>)<pos:position pos:line="14" pos:column="39"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="15" pos:column="5">StoreFScoss<pos:position pos:line="15" pos:column="16"/></name><operator pos:line="15" pos:column="16">::<pos:position pos:line="15" pos:column="18"/></operator><name pos:line="15" pos:column="18">GetInstance<pos:position pos:line="15" pos:column="29"/></name></name><argument_list pos:line="15" pos:column="29">()<pos:position pos:line="15" pos:column="31"/></argument_list></call><operator pos:line="15" pos:column="31">.<pos:position pos:line="15" pos:column="32"/></operator><name><name pos:line="15" pos:column="32">stats<pos:position pos:line="15" pos:column="37"/></name><operator pos:line="15" pos:column="37">.<pos:position pos:line="15" pos:column="38"/></operator><name pos:line="15" pos:column="38">create<pos:position pos:line="15" pos:column="44"/></name><operator pos:line="15" pos:column="44">.<pos:position pos:line="15" pos:column="45"/></operator><name pos:line="15" pos:column="45">ops<pos:position pos:line="15" pos:column="48"/></name></name><operator pos:line="15" pos:column="48">++<pos:position pos:line="15" pos:column="50"/></operator></expr>;<pos:position pos:line="15" pos:column="51"/></expr_stmt>

    <comment type="block" pos:line="17" pos:column="5">/*
     * this one is kinda strange - Eric called allocate(), then
     * storeCossOpen(O_RDONLY) .. weird. Anyway, I'm allocating this now.
     */</comment>
    <expr_stmt><expr><name><name pos:line="21" pos:column="5">cstate<pos:position pos:line="21" pos:column="11"/></name><operator pos:line="21" pos:column="11">-&gt;<pos:position pos:line="21" pos:column="16"/></operator><name pos:line="21" pos:column="13">st_size<pos:position pos:line="21" pos:column="20"/></name></name> <operator pos:line="21" pos:column="21">=<pos:position pos:line="21" pos:column="22"/></operator> <call><name><name pos:line="21" pos:column="23">e<pos:position pos:line="21" pos:column="24"/></name><operator pos:line="21" pos:column="24">.<pos:position pos:line="21" pos:column="25"/></operator><name pos:line="21" pos:column="25">objectLen<pos:position pos:line="21" pos:column="34"/></name></name><argument_list pos:line="21" pos:column="34">()<pos:position pos:line="21" pos:column="36"/></argument_list></call> <operator pos:line="21" pos:column="37">+<pos:position pos:line="21" pos:column="38"/></operator> <name><name pos:line="21" pos:column="39">e<pos:position pos:line="21" pos:column="40"/></name><operator pos:line="21" pos:column="40">.<pos:position pos:line="21" pos:column="41"/></operator><name pos:line="21" pos:column="41">mem_obj<pos:position pos:line="21" pos:column="48"/></name><operator pos:line="21" pos:column="48">-&gt;<pos:position pos:line="21" pos:column="53"/></operator><name pos:line="21" pos:column="50">swap_hdr_sz<pos:position pos:line="21" pos:column="61"/></name></name></expr>;<pos:position pos:line="21" pos:column="62"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="22" pos:column="5">sio<pos:position pos:line="22" pos:column="8"/></name><operator pos:line="22" pos:column="8">-&gt;<pos:position pos:line="22" pos:column="13"/></operator><name pos:line="22" pos:column="10">swap_dirn<pos:position pos:line="22" pos:column="19"/></name></name> <operator pos:line="22" pos:column="20">=<pos:position pos:line="22" pos:column="21"/></operator> <name pos:line="22" pos:column="22">index<pos:position pos:line="22" pos:column="27"/></name></expr>;<pos:position pos:line="22" pos:column="28"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="23" pos:column="5">sio<pos:position pos:line="23" pos:column="8"/></name><operator pos:line="23" pos:column="8">-&gt;<pos:position pos:line="23" pos:column="13"/></operator><name pos:line="23" pos:column="10">swap_filen<pos:position pos:line="23" pos:column="20"/></name></name> <operator pos:line="23" pos:column="21">=<pos:position pos:line="23" pos:column="22"/></operator> <call><name pos:line="23" pos:column="23">allocate<pos:position pos:line="23" pos:column="31"/></name><argument_list pos:line="23" pos:column="31">(<argument><expr><operator pos:line="23" pos:column="32">&amp;<pos:position pos:line="23" pos:column="37"/></operator><name pos:line="23" pos:column="33">e<pos:position pos:line="23" pos:column="34"/></name></expr></argument>, <argument><expr><name pos:line="23" pos:column="36">COSS_ALLOC_ALLOCATE<pos:position pos:line="23" pos:column="55"/></name></expr></argument>)<pos:position pos:line="23" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="23" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="24" pos:column="5">debugs<pos:position pos:line="24" pos:column="11"/></name><argument_list pos:line="24" pos:column="11">(<argument><expr><literal type="number" pos:line="24" pos:column="12">79<pos:position pos:line="24" pos:column="14"/></literal></expr></argument>, <argument><expr><literal type="number" pos:line="24" pos:column="16">3<pos:position pos:line="24" pos:column="17"/></literal></expr></argument>, <argument><expr><literal type="string" pos:line="24" pos:column="19">"storeCossCreate: offset "<pos:position pos:line="24" pos:column="45"/></literal> <operator pos:line="24" pos:column="46">&lt;&lt;<pos:position pos:line="24" pos:column="54"/></operator>
           <call><name pos:line="25" pos:column="12">storeCossFilenoToDiskOffset<pos:position pos:line="25" pos:column="39"/></name><argument_list pos:line="25" pos:column="39">(<argument><expr><name><name pos:line="25" pos:column="40">sio<pos:position pos:line="25" pos:column="43"/></name><operator pos:line="25" pos:column="43">-&gt;<pos:position pos:line="25" pos:column="48"/></operator><name pos:line="25" pos:column="45">swap_filen<pos:position pos:line="25" pos:column="55"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="56"/></argument_list></call> <operator pos:line="25" pos:column="57">&lt;&lt;<pos:position pos:line="25" pos:column="65"/></operator>
           <literal type="string" pos:line="26" pos:column="12">", size "<pos:position pos:line="26" pos:column="21"/></literal> <operator pos:line="26" pos:column="22">&lt;&lt;<pos:position pos:line="26" pos:column="30"/></operator> <operator pos:line="26" pos:column="25">(<pos:position pos:line="26" pos:column="26"/></operator><name pos:line="26" pos:column="26">long<pos:position pos:line="26" pos:column="30"/></name> <name pos:line="26" pos:column="31">int<pos:position pos:line="26" pos:column="34"/></name><operator pos:line="26" pos:column="34">)<pos:position pos:line="26" pos:column="35"/></operator> <name><name pos:line="26" pos:column="36">cstate<pos:position pos:line="26" pos:column="42"/></name><operator pos:line="26" pos:column="42">-&gt;<pos:position pos:line="26" pos:column="47"/></operator><name pos:line="26" pos:column="44">st_size<pos:position pos:line="26" pos:column="51"/></name></name> <operator pos:line="26" pos:column="52">&lt;&lt;<pos:position pos:line="26" pos:column="60"/></operator> <literal type="string" pos:line="26" pos:column="55">", end "<pos:position pos:line="26" pos:column="63"/></literal> <operator pos:line="26" pos:column="64">&lt;&lt;<pos:position pos:line="26" pos:column="72"/></operator>
           <operator pos:line="27" pos:column="12">(<pos:position pos:line="27" pos:column="13"/></operator><name><name pos:line="27" pos:column="13">sio<pos:position pos:line="27" pos:column="16"/></name><operator pos:line="27" pos:column="16">-&gt;<pos:position pos:line="27" pos:column="21"/></operator><name pos:line="27" pos:column="18">swap_filen<pos:position pos:line="27" pos:column="28"/></name></name> <operator pos:line="27" pos:column="29">+<pos:position pos:line="27" pos:column="30"/></operator> <name><name pos:line="27" pos:column="31">cstate<pos:position pos:line="27" pos:column="37"/></name><operator pos:line="27" pos:column="37">-&gt;<pos:position pos:line="27" pos:column="42"/></operator><name pos:line="27" pos:column="39">st_size<pos:position pos:line="27" pos:column="46"/></name></name><operator pos:line="27" pos:column="46">)<pos:position pos:line="27" pos:column="47"/></operator></expr></argument>)<pos:position pos:line="27" pos:column="48"/></argument_list></call></expr>;<pos:position pos:line="27" pos:column="49"/></expr_stmt>

    <comment type="block" pos:line="29" pos:column="5">/* assume allocate() always succeeds */</comment>
    <expr_stmt><expr><call><name pos:line="30" pos:column="5">assert<pos:position pos:line="30" pos:column="11"/></name><argument_list pos:line="30" pos:column="11">(<argument><expr><operator pos:line="30" pos:column="12">-<pos:position pos:line="30" pos:column="13"/></operator><literal type="number" pos:line="30" pos:column="13">1<pos:position pos:line="30" pos:column="14"/></literal> <operator pos:line="30" pos:column="15">!=<pos:position pos:line="30" pos:column="17"/></operator> <name><name pos:line="30" pos:column="18">sio<pos:position pos:line="30" pos:column="21"/></name><operator pos:line="30" pos:column="21">-&gt;<pos:position pos:line="30" pos:column="26"/></operator><name pos:line="30" pos:column="23">swap_filen<pos:position pos:line="30" pos:column="33"/></name></name></expr></argument>)<pos:position pos:line="30" pos:column="34"/></argument_list></call></expr>;<pos:position pos:line="30" pos:column="35"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="32" pos:column="5">sio<pos:position pos:line="32" pos:column="8"/></name><operator pos:line="32" pos:column="8">-&gt;<pos:position pos:line="32" pos:column="13"/></operator><name pos:line="32" pos:column="10">callback<pos:position pos:line="32" pos:column="18"/></name></name> <operator pos:line="32" pos:column="19">=<pos:position pos:line="32" pos:column="20"/></operator> <name pos:line="32" pos:column="21">callback<pos:position pos:line="32" pos:column="29"/></name></expr>;<pos:position pos:line="32" pos:column="30"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="33" pos:column="5">sio<pos:position pos:line="33" pos:column="8"/></name><operator pos:line="33" pos:column="8">-&gt;<pos:position pos:line="33" pos:column="13"/></operator><name pos:line="33" pos:column="10">file_callback<pos:position pos:line="33" pos:column="23"/></name></name> <operator pos:line="33" pos:column="24">=<pos:position pos:line="33" pos:column="25"/></operator> <name pos:line="33" pos:column="26">file_callback<pos:position pos:line="33" pos:column="39"/></name></expr>;<pos:position pos:line="33" pos:column="40"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="34" pos:column="5">sio<pos:position pos:line="34" pos:column="8"/></name><operator pos:line="34" pos:column="8">-&gt;<pos:position pos:line="34" pos:column="13"/></operator><name pos:line="34" pos:column="10">callback_data<pos:position pos:line="34" pos:column="23"/></name></name> <operator pos:line="34" pos:column="24">=<pos:position pos:line="34" pos:column="25"/></operator> <call><name pos:line="34" pos:column="26">cbdataReference<pos:position pos:line="34" pos:column="41"/></name><argument_list pos:line="34" pos:column="41">(<argument><expr><name pos:line="34" pos:column="42">callback_data<pos:position pos:line="34" pos:column="55"/></name></expr></argument>)<pos:position pos:line="34" pos:column="56"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="57"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="35" pos:column="5">sio<pos:position pos:line="35" pos:column="8"/></name><operator pos:line="35" pos:column="8">-&gt;<pos:position pos:line="35" pos:column="13"/></operator><name pos:line="35" pos:column="10">e<pos:position pos:line="35" pos:column="11"/></name></name> <operator pos:line="35" pos:column="12">=<pos:position pos:line="35" pos:column="13"/></operator> <operator pos:line="35" pos:column="14">&amp;<pos:position pos:line="35" pos:column="19"/></operator><name pos:line="35" pos:column="15">e<pos:position pos:line="35" pos:column="16"/></name></expr>;<pos:position pos:line="35" pos:column="17"/></expr_stmt>

    <expr_stmt><expr><name><name pos:line="37" pos:column="5">cstate<pos:position pos:line="37" pos:column="11"/></name><operator pos:line="37" pos:column="11">-&gt;<pos:position pos:line="37" pos:column="16"/></operator><name pos:line="37" pos:column="13">flags<pos:position pos:line="37" pos:column="18"/></name><operator pos:line="37" pos:column="18">.<pos:position pos:line="37" pos:column="19"/></operator><name pos:line="37" pos:column="19">writing<pos:position pos:line="37" pos:column="26"/></name></name> <operator pos:line="37" pos:column="27">=<pos:position pos:line="37" pos:column="28"/></operator> <literal type="number" pos:line="37" pos:column="29">0<pos:position pos:line="37" pos:column="30"/></literal></expr>;<pos:position pos:line="37" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="38" pos:column="5">cstate<pos:position pos:line="38" pos:column="11"/></name><operator pos:line="38" pos:column="11">-&gt;<pos:position pos:line="38" pos:column="16"/></operator><name pos:line="38" pos:column="13">flags<pos:position pos:line="38" pos:column="18"/></name><operator pos:line="38" pos:column="18">.<pos:position pos:line="38" pos:column="19"/></operator><name pos:line="38" pos:column="19">reading<pos:position pos:line="38" pos:column="26"/></name></name> <operator pos:line="38" pos:column="27">=<pos:position pos:line="38" pos:column="28"/></operator> <literal type="number" pos:line="38" pos:column="29">0<pos:position pos:line="38" pos:column="30"/></literal></expr>;<pos:position pos:line="38" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="39" pos:column="5">cstate<pos:position pos:line="39" pos:column="11"/></name><operator pos:line="39" pos:column="11">-&gt;<pos:position pos:line="39" pos:column="16"/></operator><name pos:line="39" pos:column="13">readbuffer<pos:position pos:line="39" pos:column="23"/></name></name> <operator pos:line="39" pos:column="24">=<pos:position pos:line="39" pos:column="25"/></operator> <name pos:line="39" pos:column="26">NULL<pos:position pos:line="39" pos:column="30"/></name></expr>;<pos:position pos:line="39" pos:column="31"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="40" pos:column="5">cstate<pos:position pos:line="40" pos:column="11"/></name><operator pos:line="40" pos:column="11">-&gt;<pos:position pos:line="40" pos:column="16"/></operator><name pos:line="40" pos:column="13">reqdiskoffset<pos:position pos:line="40" pos:column="26"/></name></name> <operator pos:line="40" pos:column="27">=<pos:position pos:line="40" pos:column="28"/></operator> <operator pos:line="40" pos:column="29">-<pos:position pos:line="40" pos:column="30"/></operator><literal type="number" pos:line="40" pos:column="30">1<pos:position pos:line="40" pos:column="31"/></literal></expr>;<pos:position pos:line="40" pos:column="32"/></expr_stmt>

    <comment type="block" pos:line="42" pos:column="5">/* Now add it into the index list */</comment>
    <expr_stmt><expr><call><name pos:line="43" pos:column="5">storeCossAdd<pos:position pos:line="43" pos:column="17"/></name><argument_list pos:line="43" pos:column="17">(<argument><expr><name pos:line="43" pos:column="18">this<pos:position pos:line="43" pos:column="22"/></name></expr></argument>, <argument><expr><operator pos:line="43" pos:column="24">&amp;<pos:position pos:line="43" pos:column="29"/></operator><name pos:line="43" pos:column="25">e<pos:position pos:line="43" pos:column="26"/></name></expr></argument>)<pos:position pos:line="43" pos:column="27"/></argument_list></call></expr>;<pos:position pos:line="43" pos:column="28"/></expr_stmt>

    <expr_stmt><expr><call><name><name pos:line="45" pos:column="5">cstate<pos:position pos:line="45" pos:column="11"/></name><operator pos:line="45" pos:column="11">-&gt;<pos:position pos:line="45" pos:column="16"/></operator><name pos:line="45" pos:column="13">lockMemBuf<pos:position pos:line="45" pos:column="23"/></name></name><argument_list pos:line="45" pos:column="23">()<pos:position pos:line="45" pos:column="25"/></argument_list></call></expr>;<pos:position pos:line="45" pos:column="26"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="46" pos:column="5">StoreFScoss<pos:position pos:line="46" pos:column="16"/></name><operator pos:line="46" pos:column="16">::<pos:position pos:line="46" pos:column="18"/></operator><name pos:line="46" pos:column="18">GetInstance<pos:position pos:line="46" pos:column="29"/></name></name><argument_list pos:line="46" pos:column="29">()<pos:position pos:line="46" pos:column="31"/></argument_list></call><operator pos:line="46" pos:column="31">.<pos:position pos:line="46" pos:column="32"/></operator><name><name pos:line="46" pos:column="32">stats<pos:position pos:line="46" pos:column="37"/></name><operator pos:line="46" pos:column="37">.<pos:position pos:line="46" pos:column="38"/></operator><name pos:line="46" pos:column="38">create<pos:position pos:line="46" pos:column="44"/></name><operator pos:line="46" pos:column="44">.<pos:position pos:line="46" pos:column="45"/></operator><name pos:line="46" pos:column="45">success<pos:position pos:line="46" pos:column="52"/></name></name><operator pos:line="46" pos:column="52">++<pos:position pos:line="46" pos:column="54"/></operator></expr>;<pos:position pos:line="46" pos:column="55"/></expr_stmt>
    <return pos:line="47" pos:column="5">return <expr><name pos:line="47" pos:column="12">sio<pos:position pos:line="47" pos:column="15"/></name></expr>;<pos:position pos:line="47" pos:column="16"/></return>
}<pos:position pos:line="48" pos:column="2"/></block></function></unit>

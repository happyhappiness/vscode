<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_5721_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">int<pos:position pos:line="1" pos:column="4"/></name></type>
<name><name pos:line="2" pos:column="1">DiskdIOStrategy<pos:position pos:line="2" pos:column="16"/></name><operator pos:line="2" pos:column="16">::<pos:position pos:line="2" pos:column="18"/></operator><name pos:line="2" pos:column="18">send<pos:position pos:line="2" pos:column="22"/></name></name><parameter_list pos:line="2" pos:column="22">(<parameter><decl><type><name pos:line="2" pos:column="23">int<pos:position pos:line="2" pos:column="26"/></name></type> <name pos:line="2" pos:column="27">mtype<pos:position pos:line="2" pos:column="32"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="34">int<pos:position pos:line="2" pos:column="37"/></name></type> <name pos:line="2" pos:column="38">id<pos:position pos:line="2" pos:column="40"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="42">DiskdFile<pos:position pos:line="2" pos:column="51"/></name> <modifier pos:line="2" pos:column="52">*<pos:position pos:line="2" pos:column="53"/></modifier></type><name pos:line="2" pos:column="53">theFile<pos:position pos:line="2" pos:column="60"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="62">size_t<pos:position pos:line="2" pos:column="68"/></name></type> <name pos:line="2" pos:column="69">size<pos:position pos:line="2" pos:column="73"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="75">off_t<pos:position pos:line="2" pos:column="80"/></name></type> <name pos:line="2" pos:column="81">offset<pos:position pos:line="2" pos:column="87"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="89">ssize_t<pos:position pos:line="2" pos:column="96"/></name></type> <name pos:line="2" pos:column="97">shm_offset<pos:position pos:line="2" pos:column="107"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="109">Lock<pos:position pos:line="2" pos:column="113"/></name> <modifier pos:line="2" pos:column="114">*<pos:position pos:line="2" pos:column="115"/></modifier></type><name pos:line="2" pos:column="115">requestor<pos:position pos:line="2" pos:column="124"/></name></decl></parameter>)<pos:position pos:line="2" pos:column="125"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="4" pos:column="5">diomsg<pos:position pos:line="4" pos:column="11"/></name></type> <name pos:line="4" pos:column="12">M<pos:position pos:line="4" pos:column="13"/></name></decl>;<pos:position pos:line="4" pos:column="14"/></decl_stmt>
    <expr_stmt><expr><name><name pos:line="5" pos:column="5">M<pos:position pos:line="5" pos:column="6"/></name><operator pos:line="5" pos:column="6">.<pos:position pos:line="5" pos:column="7"/></operator><name pos:line="5" pos:column="7">callback_data<pos:position pos:line="5" pos:column="20"/></name></name> <operator pos:line="5" pos:column="21">=<pos:position pos:line="5" pos:column="22"/></operator> <call><name pos:line="5" pos:column="23">cbdataReference<pos:position pos:line="5" pos:column="38"/></name><argument_list pos:line="5" pos:column="38">(<argument><expr><name pos:line="5" pos:column="39">theFile<pos:position pos:line="5" pos:column="46"/></name></expr></argument>)<pos:position pos:line="5" pos:column="47"/></argument_list></call></expr>;<pos:position pos:line="5" pos:column="48"/></expr_stmt>
    <expr_stmt><expr><call><name><name pos:line="6" pos:column="5">theFile<pos:position pos:line="6" pos:column="12"/></name><operator pos:line="6" pos:column="12">-&gt;<pos:position pos:line="6" pos:column="17"/></operator><name pos:line="6" pos:column="14">lock<pos:position pos:line="6" pos:column="18"/></name></name><argument_list pos:line="6" pos:column="18">()<pos:position pos:line="6" pos:column="20"/></argument_list></call></expr>;<pos:position pos:line="6" pos:column="21"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="7" pos:column="5">M<pos:position pos:line="7" pos:column="6"/></name><operator pos:line="7" pos:column="6">.<pos:position pos:line="7" pos:column="7"/></operator><name pos:line="7" pos:column="7">requestor<pos:position pos:line="7" pos:column="16"/></name></name> <operator pos:line="7" pos:column="17">=<pos:position pos:line="7" pos:column="18"/></operator> <name pos:line="7" pos:column="19">requestor<pos:position pos:line="7" pos:column="28"/></name></expr>;<pos:position pos:line="7" pos:column="29"/></expr_stmt>
    <expr_stmt><expr><name><name pos:line="8" pos:column="5">M<pos:position pos:line="8" pos:column="6"/></name><operator pos:line="8" pos:column="6">.<pos:position pos:line="8" pos:column="7"/></operator><name pos:line="8" pos:column="7">newstyle<pos:position pos:line="8" pos:column="15"/></name></name> <operator pos:line="8" pos:column="16">=<pos:position pos:line="8" pos:column="17"/></operator> <literal type="boolean" pos:line="8" pos:column="18">true<pos:position pos:line="8" pos:column="22"/></literal></expr>;<pos:position pos:line="8" pos:column="23"/></expr_stmt>

    <if pos:line="10" pos:column="5">if <condition pos:line="10" pos:column="8">(<expr><name pos:line="10" pos:column="9">requestor<pos:position pos:line="10" pos:column="18"/></name></expr>)<pos:position pos:line="10" pos:column="19"/></condition><then pos:line="10" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name><name pos:line="11" pos:column="9">requestor<pos:position pos:line="11" pos:column="18"/></name><operator pos:line="11" pos:column="18">-&gt;<pos:position pos:line="11" pos:column="23"/></operator><name pos:line="11" pos:column="20">lock<pos:position pos:line="11" pos:column="24"/></name></name><argument_list pos:line="11" pos:column="24">()<pos:position pos:line="11" pos:column="26"/></argument_list></call></expr>;<pos:position pos:line="11" pos:column="27"/></expr_stmt></block></then></if>

    <return pos:line="13" pos:column="5">return <expr><call><name pos:line="13" pos:column="12">SEND<pos:position pos:line="13" pos:column="16"/></name><argument_list pos:line="13" pos:column="16">(<argument><expr><operator pos:line="13" pos:column="17">&amp;<pos:position pos:line="13" pos:column="22"/></operator><name pos:line="13" pos:column="18">M<pos:position pos:line="13" pos:column="19"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="21">mtype<pos:position pos:line="13" pos:column="26"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="28">id<pos:position pos:line="13" pos:column="30"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="32">size<pos:position pos:line="13" pos:column="36"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="38">offset<pos:position pos:line="13" pos:column="44"/></name></expr></argument>, <argument><expr><name pos:line="13" pos:column="46">shm_offset<pos:position pos:line="13" pos:column="56"/></name></expr></argument>)<pos:position pos:line="13" pos:column="57"/></argument_list></call></expr>;<pos:position pos:line="13" pos:column="58"/></return>
}<pos:position pos:line="14" pos:column="2"/></block></function></unit>

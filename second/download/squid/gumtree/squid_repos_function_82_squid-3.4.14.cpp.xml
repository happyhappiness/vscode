<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_82_squid-3.4.14.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">bool<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">dirlevel<pos:position pos:line="2" pos:column="9"/></name><parameter_list pos:line="2" pos:column="9">( <parameter><decl><type><specifier pos:line="2" pos:column="11">const<pos:position pos:line="2" pos:column="16"/></specifier> <name pos:line="2" pos:column="17">char<pos:position pos:line="2" pos:column="21"/></name><modifier pos:line="2" pos:column="21">*<pos:position pos:line="2" pos:column="22"/></modifier></type> <name pos:line="2" pos:column="23">dirname<pos:position pos:line="2" pos:column="30"/></name></decl></parameter>, <parameter><decl><type><specifier pos:line="2" pos:column="32">const<pos:position pos:line="2" pos:column="37"/></specifier> <name pos:line="2" pos:column="38">REList<pos:position pos:line="2" pos:column="44"/></name><modifier pos:line="2" pos:column="44">*<pos:position pos:line="2" pos:column="45"/></modifier></type> <name pos:line="2" pos:column="46">list<pos:position pos:line="2" pos:column="50"/></name></decl></parameter>, <parameter><decl><type><name pos:line="2" pos:column="52">bool<pos:position pos:line="2" pos:column="56"/></name></type> <name pos:line="2" pos:column="57">level<pos:position pos:line="2" pos:column="62"/></name><init pos:line="2" pos:column="62">=<expr><literal type="boolean" pos:line="2" pos:column="63">false<pos:position pos:line="2" pos:column="68"/></literal></expr></init></decl></parameter> )<pos:position pos:line="2" pos:column="70"/></parameter_list>
<comment type="line" pos:line="3" pos:column="1">// purpose: from given starting point, look for squid 00..FF directories.</comment>
<comment type="line" pos:line="4" pos:column="1">// paramtr: dirname (IN): starting point</comment>
<comment type="line" pos:line="5" pos:column="1">//          list (IN): list of rexps to match URLs against</comment>
<comment type="line" pos:line="6" pos:column="1">//          level (IN): false==toplevel, true==1st level</comment>
<comment type="line" pos:line="7" pos:column="1">// example: "/var/spool/cache", false as input, traverse subdirs w/ action.</comment>
<comment type="line" pos:line="8" pos:column="1">// example: "/var/spool/cache/08", true as input, traverse subdirs w/ action.</comment>
<comment type="line" pos:line="9" pos:column="1">// returns: true, if every subdir &amp;&amp; action was successful.</comment>
<comment type="line" pos:line="10" pos:column="1">// warning: this function is once-recursive, no deeper.</comment>
<block pos:line="11" pos:column="1">{
    <decl_stmt><decl><type><name pos:line="12" pos:column="5">dirent_t<pos:position pos:line="12" pos:column="13"/></name><modifier pos:line="12" pos:column="13">*<pos:position pos:line="12" pos:column="14"/></modifier></type> <name pos:line="12" pos:column="15">entry<pos:position pos:line="12" pos:column="20"/></name></decl>;<pos:position pos:line="12" pos:column="21"/></decl_stmt>
    <if pos:line="13" pos:column="5">if <condition pos:line="13" pos:column="8">( <expr><name pos:line="13" pos:column="10">debugFlag<pos:position pos:line="13" pos:column="19"/></name> <operator pos:line="13" pos:column="20">&amp;<pos:position pos:line="13" pos:column="25"/></operator> <literal type="number" pos:line="13" pos:column="22">0x01<pos:position pos:line="13" pos:column="26"/></literal></expr> )<pos:position pos:line="13" pos:column="28"/></condition><then pos:line="13" pos:column="28">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="14" pos:column="9">fprintf<pos:position pos:line="14" pos:column="16"/></name><argument_list pos:line="14" pos:column="16">( <argument><expr><name pos:line="14" pos:column="18">stderr<pos:position pos:line="14" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="14" pos:column="26">"# [%d] %s\n"<pos:position pos:line="14" pos:column="39"/></literal></expr></argument>, <argument><expr><operator pos:line="14" pos:column="41">(<pos:position pos:line="14" pos:column="42"/></operator><ternary><condition><expr><name pos:line="14" pos:column="42">level<pos:position pos:line="14" pos:column="47"/></name></expr> ?<pos:position pos:line="14" pos:column="49"/></condition><then pos:line="14" pos:column="49"> <expr><literal type="number" pos:line="14" pos:column="50">1<pos:position pos:line="14" pos:column="51"/></literal></expr> <pos:position pos:line="14" pos:column="52"/></then><else pos:line="14" pos:column="52">: <expr><literal type="number" pos:line="14" pos:column="54">0<pos:position pos:line="14" pos:column="55"/></literal></expr></else></ternary><operator pos:line="14" pos:column="55">)<pos:position pos:line="14" pos:column="56"/></operator></expr></argument>, <argument><expr><name pos:line="14" pos:column="58">dirname<pos:position pos:line="14" pos:column="65"/></name></expr></argument> )<pos:position pos:line="14" pos:column="67"/></argument_list></call></expr>;<pos:position pos:line="14" pos:column="68"/></expr_stmt></block></then></if>

    <decl_stmt><decl><type><name pos:line="16" pos:column="5">DIR<pos:position pos:line="16" pos:column="8"/></name><modifier pos:line="16" pos:column="8">*<pos:position pos:line="16" pos:column="9"/></modifier></type> <name pos:line="16" pos:column="10">dir<pos:position pos:line="16" pos:column="13"/></name> <init pos:line="16" pos:column="14">= <expr><call><name pos:line="16" pos:column="16">opendir<pos:position pos:line="16" pos:column="23"/></name><argument_list pos:line="16" pos:column="23">( <argument><expr><name pos:line="16" pos:column="25">dirname<pos:position pos:line="16" pos:column="32"/></name></expr></argument> )<pos:position pos:line="16" pos:column="34"/></argument_list></call></expr></init></decl>;<pos:position pos:line="16" pos:column="35"/></decl_stmt>
    <if pos:line="17" pos:column="5">if <condition pos:line="17" pos:column="8">( <expr><name pos:line="17" pos:column="10">dir<pos:position pos:line="17" pos:column="13"/></name> <operator pos:line="17" pos:column="14">==<pos:position pos:line="17" pos:column="16"/></operator> <name pos:line="17" pos:column="17">NULL<pos:position pos:line="17" pos:column="21"/></name></expr> )<pos:position pos:line="17" pos:column="23"/></condition><then pos:line="17" pos:column="23"> <block pos:line="17" pos:column="24">{
        <expr_stmt><expr><call><name pos:line="18" pos:column="9">fprintf<pos:position pos:line="18" pos:column="16"/></name><argument_list pos:line="18" pos:column="16">( <argument><expr><name pos:line="18" pos:column="18">stderr<pos:position pos:line="18" pos:column="24"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="18" pos:column="26">"unable to open directory \"%s\": %s\n"<pos:position pos:line="18" pos:column="65"/></literal></expr></argument>,
                 <argument><expr><name pos:line="19" pos:column="18">dirname<pos:position pos:line="19" pos:column="25"/></name></expr></argument>, <argument><expr><call><name pos:line="19" pos:column="27">strerror<pos:position pos:line="19" pos:column="35"/></name><argument_list pos:line="19" pos:column="35">(<argument><expr><name pos:line="19" pos:column="36">errno<pos:position pos:line="19" pos:column="41"/></name></expr></argument>)<pos:position pos:line="19" pos:column="42"/></argument_list></call></expr></argument> )<pos:position pos:line="19" pos:column="44"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="45"/></expr_stmt>
        <return pos:line="20" pos:column="9">return <expr><literal type="boolean" pos:line="20" pos:column="16">false<pos:position pos:line="20" pos:column="21"/></literal></expr>;<pos:position pos:line="20" pos:column="22"/></return>
    }<pos:position pos:line="21" pos:column="6"/></block></then></if>

    <decl_stmt><decl><type><name pos:line="23" pos:column="5">bool<pos:position pos:line="23" pos:column="9"/></name></type> <name pos:line="23" pos:column="10">flag<pos:position pos:line="23" pos:column="14"/></name> <init pos:line="23" pos:column="15">= <expr><literal type="boolean" pos:line="23" pos:column="17">true<pos:position pos:line="23" pos:column="21"/></literal></expr></init></decl>;<pos:position pos:line="23" pos:column="22"/></decl_stmt>
    <while pos:line="24" pos:column="5">while <condition pos:line="24" pos:column="11">( <expr><operator pos:line="24" pos:column="13">(<pos:position pos:line="24" pos:column="14"/></operator><name pos:line="24" pos:column="14">entry<pos:position pos:line="24" pos:column="19"/></name><operator pos:line="24" pos:column="19">=<pos:position pos:line="24" pos:column="20"/></operator><call><name pos:line="24" pos:column="20">readdir<pos:position pos:line="24" pos:column="27"/></name><argument_list pos:line="24" pos:column="27">(<argument><expr><name pos:line="24" pos:column="28">dir<pos:position pos:line="24" pos:column="31"/></name></expr></argument>)<pos:position pos:line="24" pos:column="32"/></argument_list></call><operator pos:line="24" pos:column="32">)<pos:position pos:line="24" pos:column="33"/></operator> <operator pos:line="24" pos:column="34">&amp;&amp;<pos:position pos:line="24" pos:column="44"/></operator> <name pos:line="24" pos:column="37">flag<pos:position pos:line="24" pos:column="41"/></name></expr> )<pos:position pos:line="24" pos:column="43"/></condition> <block pos:line="24" pos:column="44">{
        <if pos:line="25" pos:column="9">if <condition pos:line="25" pos:column="12">( <expr><call><name pos:line="25" pos:column="14">strlen<pos:position pos:line="25" pos:column="20"/></name><argument_list pos:line="25" pos:column="20">(<argument><expr><name><name pos:line="25" pos:column="21">entry<pos:position pos:line="25" pos:column="26"/></name><operator pos:line="25" pos:column="26">-&gt;<pos:position pos:line="25" pos:column="31"/></operator><name pos:line="25" pos:column="28">d_name<pos:position pos:line="25" pos:column="34"/></name></name></expr></argument>)<pos:position pos:line="25" pos:column="35"/></argument_list></call> <operator pos:line="25" pos:column="36">==<pos:position pos:line="25" pos:column="38"/></operator> <literal type="number" pos:line="25" pos:column="39">2<pos:position pos:line="25" pos:column="40"/></literal> <operator pos:line="25" pos:column="41">&amp;&amp;<pos:position pos:line="25" pos:column="51"/></operator>
                <call><name pos:line="26" pos:column="17">isxdigit<pos:position pos:line="26" pos:column="25"/></name><argument_list pos:line="26" pos:column="25">(<argument><expr><name><name pos:line="26" pos:column="26">entry<pos:position pos:line="26" pos:column="31"/></name><operator pos:line="26" pos:column="31">-&gt;<pos:position pos:line="26" pos:column="36"/></operator><name pos:line="26" pos:column="33">d_name<pos:position pos:line="26" pos:column="39"/></name><index pos:line="26" pos:column="39">[<expr><literal type="number" pos:line="26" pos:column="40">0<pos:position pos:line="26" pos:column="41"/></literal></expr>]<pos:position pos:line="26" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="26" pos:column="43"/></argument_list></call> <operator pos:line="26" pos:column="44">&amp;&amp;<pos:position pos:line="26" pos:column="54"/></operator>
                <call><name pos:line="27" pos:column="17">isxdigit<pos:position pos:line="27" pos:column="25"/></name><argument_list pos:line="27" pos:column="25">(<argument><expr><name><name pos:line="27" pos:column="26">entry<pos:position pos:line="27" pos:column="31"/></name><operator pos:line="27" pos:column="31">-&gt;<pos:position pos:line="27" pos:column="36"/></operator><name pos:line="27" pos:column="33">d_name<pos:position pos:line="27" pos:column="39"/></name><index pos:line="27" pos:column="39">[<expr><literal type="number" pos:line="27" pos:column="40">1<pos:position pos:line="27" pos:column="41"/></literal></expr>]<pos:position pos:line="27" pos:column="42"/></index></name></expr></argument>)<pos:position pos:line="27" pos:column="43"/></argument_list></call></expr> )<pos:position pos:line="27" pos:column="45"/></condition><then pos:line="27" pos:column="45"> <block pos:line="27" pos:column="46">{
            <decl_stmt><decl><type><name pos:line="28" pos:column="13">char<pos:position pos:line="28" pos:column="17"/></name><modifier pos:line="28" pos:column="17">*<pos:position pos:line="28" pos:column="18"/></modifier></type> <name pos:line="28" pos:column="19">name<pos:position pos:line="28" pos:column="23"/></name> <init pos:line="28" pos:column="24">= <expr><call><name pos:line="28" pos:column="26">concat<pos:position pos:line="28" pos:column="32"/></name><argument_list pos:line="28" pos:column="32">( <argument><expr><name pos:line="28" pos:column="34">dirname<pos:position pos:line="28" pos:column="41"/></name></expr></argument>, <argument><expr><literal type="string" pos:line="28" pos:column="43">"/"<pos:position pos:line="28" pos:column="46"/></literal></expr></argument>, <argument><expr><name><name pos:line="28" pos:column="48">entry<pos:position pos:line="28" pos:column="53"/></name><operator pos:line="28" pos:column="53">-&gt;<pos:position pos:line="28" pos:column="58"/></operator><name pos:line="28" pos:column="55">d_name<pos:position pos:line="28" pos:column="61"/></name></name></expr></argument>, <argument><expr><literal type="number" pos:line="28" pos:column="63">0<pos:position pos:line="28" pos:column="64"/></literal></expr></argument> )<pos:position pos:line="28" pos:column="66"/></argument_list></call></expr></init></decl>;<pos:position pos:line="28" pos:column="67"/></decl_stmt>
            <expr_stmt><expr><name pos:line="29" pos:column="13">flag<pos:position pos:line="29" pos:column="17"/></name> <operator pos:line="29" pos:column="18">=<pos:position pos:line="29" pos:column="19"/></operator> <ternary><condition><expr><name pos:line="29" pos:column="20">level<pos:position pos:line="29" pos:column="25"/></name></expr> ?<pos:position pos:line="29" pos:column="27"/></condition><then pos:line="29" pos:column="27"> <expr><call><name pos:line="29" pos:column="28">filelevel<pos:position pos:line="29" pos:column="37"/></name><argument_list pos:line="29" pos:column="37">( <argument><expr><name pos:line="29" pos:column="39">name<pos:position pos:line="29" pos:column="43"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="45">list<pos:position pos:line="29" pos:column="49"/></name></expr></argument> )<pos:position pos:line="29" pos:column="51"/></argument_list></call></expr> <pos:position pos:line="29" pos:column="52"/></then><else pos:line="29" pos:column="52">: <expr><call><name pos:line="29" pos:column="54">dirlevel<pos:position pos:line="29" pos:column="62"/></name><argument_list pos:line="29" pos:column="62">( <argument><expr><name pos:line="29" pos:column="64">name<pos:position pos:line="29" pos:column="68"/></name></expr></argument>, <argument><expr><name pos:line="29" pos:column="70">list<pos:position pos:line="29" pos:column="74"/></name></expr></argument>, <argument><expr><literal type="boolean" pos:line="29" pos:column="76">true<pos:position pos:line="29" pos:column="80"/></literal></expr></argument> )<pos:position pos:line="29" pos:column="82"/></argument_list></call></expr></else></ternary></expr>;<pos:position pos:line="29" pos:column="83"/></expr_stmt>
            <expr_stmt><expr><operator pos:line="30" pos:column="13">delete<pos:position pos:line="30" pos:column="19"/></operator><index pos:line="30" pos:column="19">[]<pos:position pos:line="30" pos:column="21"/></index> <name pos:line="30" pos:column="22">name<pos:position pos:line="30" pos:column="26"/></name></expr>;<pos:position pos:line="30" pos:column="27"/></expr_stmt>
        }<pos:position pos:line="31" pos:column="10"/></block></then></if>
    }<pos:position pos:line="32" pos:column="6"/></block></while>

    <expr_stmt><expr><call><name pos:line="34" pos:column="5">closedir<pos:position pos:line="34" pos:column="13"/></name><argument_list pos:line="34" pos:column="13">(<argument><expr><name pos:line="34" pos:column="14">dir<pos:position pos:line="34" pos:column="17"/></name></expr></argument>)<pos:position pos:line="34" pos:column="18"/></argument_list></call></expr>;<pos:position pos:line="34" pos:column="19"/></expr_stmt>
    <return pos:line="35" pos:column="5">return <expr><name pos:line="35" pos:column="12">flag<pos:position pos:line="35" pos:column="16"/></name></expr>;<pos:position pos:line="35" pos:column="17"/></return>
}<pos:position pos:line="36" pos:column="2"/></block></function></unit>

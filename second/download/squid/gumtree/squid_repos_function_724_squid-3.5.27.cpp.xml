<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="0.9.5" language="C++" filename="usr/info/code/cpp/LogMonitor/LogMonitor/second/download/squid/gumtree/squid_repos_function_724_squid-3.5.27.cpp" pos:tabs="8"><function><type><name pos:line="1" pos:column="1">void<pos:position pos:line="1" pos:column="5"/></name></type>
<name pos:line="2" pos:column="1">WIN32_Exit<pos:position pos:line="2" pos:column="11"/></name><parameter_list pos:line="2" pos:column="11">()<pos:position pos:line="2" pos:column="13"/></parameter_list>
<block pos:line="3" pos:column="1">{
    <expr_stmt><expr><call><name pos:line="4" pos:column="5">Win32SockCleanup<pos:position pos:line="4" pos:column="21"/></name><argument_list pos:line="4" pos:column="21">()<pos:position pos:line="4" pos:column="23"/></argument_list></call></expr>;<pos:position pos:line="4" pos:column="24"/></expr_stmt>
<cpp:if pos:line="5" pos:column="1">#<cpp:directive pos:line="5" pos:column="2">if<pos:position pos:line="5" pos:column="4"/></cpp:directive> <expr><name pos:line="5" pos:column="5">USE_WIN32_SERVICE<pos:position pos:line="5" pos:column="22"/></name></expr></cpp:if>

    <if pos:line="7" pos:column="5">if <condition pos:line="7" pos:column="8">(<expr><name pos:line="7" pos:column="9">WIN32_run_mode<pos:position pos:line="7" pos:column="23"/></name> <operator pos:line="7" pos:column="24">==<pos:position pos:line="7" pos:column="26"/></operator> <name pos:line="7" pos:column="27">_WIN_SQUID_RUN_MODE_SERVICE<pos:position pos:line="7" pos:column="54"/></name></expr>)<pos:position pos:line="7" pos:column="55"/></condition><then pos:line="7" pos:column="55"> <block pos:line="7" pos:column="56">{
        <if pos:line="8" pos:column="9">if <condition pos:line="8" pos:column="12">(<expr><operator pos:line="8" pos:column="13">!<pos:position pos:line="8" pos:column="14"/></operator><name pos:line="8" pos:column="14">Squid_Aborting<pos:position pos:line="8" pos:column="28"/></name></expr>)<pos:position pos:line="8" pos:column="29"/></condition><then pos:line="8" pos:column="29"> <block pos:line="8" pos:column="30">{
            <expr_stmt><expr><name><name pos:line="9" pos:column="13">svcStatus<pos:position pos:line="9" pos:column="22"/></name><operator pos:line="9" pos:column="22">.<pos:position pos:line="9" pos:column="23"/></operator><name pos:line="9" pos:column="23">dwCurrentState<pos:position pos:line="9" pos:column="37"/></name></name> <operator pos:line="9" pos:column="38">=<pos:position pos:line="9" pos:column="39"/></operator> <name pos:line="9" pos:column="40">SERVICE_STOPPED<pos:position pos:line="9" pos:column="55"/></name></expr>;<pos:position pos:line="9" pos:column="56"/></expr_stmt>
            <expr_stmt><expr><call><name pos:line="10" pos:column="13">SetServiceStatus<pos:position pos:line="10" pos:column="29"/></name><argument_list pos:line="10" pos:column="29">(<argument><expr><name pos:line="10" pos:column="30">svcHandle<pos:position pos:line="10" pos:column="39"/></name></expr></argument>, <argument><expr><operator pos:line="10" pos:column="41">&amp;<pos:position pos:line="10" pos:column="46"/></operator><name pos:line="10" pos:column="42">svcStatus<pos:position pos:line="10" pos:column="51"/></name></expr></argument>)<pos:position pos:line="10" pos:column="52"/></argument_list></call></expr>;<pos:position pos:line="10" pos:column="53"/></expr_stmt>
        }<pos:position pos:line="11" pos:column="10"/></block></then></if>
    }<pos:position pos:line="12" pos:column="6"/></block></then></if>

<cpp:endif pos:line="14" pos:column="1">#<cpp:directive pos:line="14" pos:column="2">endif<pos:position pos:line="14" pos:column="7"/></cpp:directive></cpp:endif>
    <if pos:line="15" pos:column="5">if <condition pos:line="15" pos:column="8">(<expr><name pos:line="15" pos:column="9">dbg_mutex<pos:position pos:line="15" pos:column="18"/></name></expr>)<pos:position pos:line="15" pos:column="19"/></condition><then pos:line="15" pos:column="19">
        <block type="pseudo"><expr_stmt><expr><call><name pos:line="16" pos:column="9">DeleteCriticalSection<pos:position pos:line="16" pos:column="30"/></name><argument_list pos:line="16" pos:column="30">(<argument><expr><name pos:line="16" pos:column="31">dbg_mutex<pos:position pos:line="16" pos:column="40"/></name></expr></argument>)<pos:position pos:line="16" pos:column="41"/></argument_list></call></expr>;<pos:position pos:line="16" pos:column="42"/></expr_stmt></block></then></if>

    <expr_stmt><expr><call><name pos:line="18" pos:column="5">WIN32_ExceptionHandlerCleanup<pos:position pos:line="18" pos:column="34"/></name><argument_list pos:line="18" pos:column="34">()<pos:position pos:line="18" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="18" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="19" pos:column="5">WIN32_IpAddrChangeMonitorExit<pos:position pos:line="19" pos:column="34"/></name><argument_list pos:line="19" pos:column="34">()<pos:position pos:line="19" pos:column="36"/></argument_list></call></expr>;<pos:position pos:line="19" pos:column="37"/></expr_stmt>
    <expr_stmt><expr><call><name pos:line="20" pos:column="5">_exit<pos:position pos:line="20" pos:column="10"/></name><argument_list pos:line="20" pos:column="10">(<argument><expr><literal type="number" pos:line="20" pos:column="11">0<pos:position pos:line="20" pos:column="12"/></literal></expr></argument>)<pos:position pos:line="20" pos:column="13"/></argument_list></call></expr>;<pos:position pos:line="20" pos:column="14"/></expr_stmt>
}<pos:position pos:line="21" pos:column="2"/></block></function></unit>
